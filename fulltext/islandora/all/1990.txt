CRYPTOGRAPHIC KEY MANAGEMENT FOR ROLE-BASED ACCESS CONTROL MODEL IN POWER SYSTEM COMPUTER NETWORKS
by

CELIA J LI

Bachelor o f Science, Tianjin, P.R. China, 1998

A thesis presented to Ryerson University in partial fulfillment o f the requirement for the degree o f M aster o f Applied Science in the Program o f Electrical and Computer Engineering

Toronto, Ontario, Canada, 2005

© Celia J Li 2005

PROKmOF
RYERSeW tW PW nWTY UBftARV

UMI Number: EC53040

All rig h ts re s e r v e d INFORMATION TO U SE R S

T h e quality of this reproduction Is d e p e n d e n t upon th e quality of th e copy subm itted. Broken or Indistinct print, colored or poor quality illustrations and photo g rap h s, print bleed-through, su b sta n d a rd m argins, and im proper alignm ent can a d v ersely affect reproduction. In th e unlikely e v en t th at th e au th o r did not s e n d a com plete m anuscript an d th e re a re m issing p a g e s, th e s e will be noted. Also, if unauthorized copyright m aterial h ad to be rem oved, a note will indicate th e deletion.

UMI
UMI Microform E C 53040 Copyright 2008 by P ro Q u e st LLC All rights reserv ed . This microform edition is protected a g ain st unauthorized copying u n d er Title 17, United S ta te s C ode.

P ro Q u e st LLC 789 E a st E isenhow er Parkw ay P.O . Box 1346 Ann Arbor, Ml 48106-1346

Author's Declaration

I hereby deelare that I am the sole author of this thesis.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of seholarly researeh.

Signature:

I further authorize Ryerson University to reproduee this thesis by photoeopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of seholarly researeh.

Signature:

11

Instructions on Borrowers

Ryerson University requires the signatures of all persons using or photocopying this thesis. Please sign below, and give address and date.

Name

Signature

Address

Date

Ill

CRYPTOGRAPHIC KEY MANAGEMENT FOR ROLE-BASED ACCESS CONTROL MODEL IN POWER SYSTEM COMPUTER NETWORKS
CELIA J LI Master of Applied Science Electrical and Computer Engineering Ryerson University Toronto, Ontario, Canada, 2005

Abstract

This thesis research has successfully completed two developments: an efficient Powersystem Role-based Access Control (PRAC) and a secure Power-system Role-based kEy Management (PREM). The PRAC significantly increases the security of computer networks for power systems, and surmounts the challenges caused by typical security and reliability concerns due to current technological and political changes faced in the electricity power industry. The PREM is designed to support the efficient operation of the PRAC using one-way hash functions and utilizing their advantages of computationally efficient and irreversibility security. PRAC and PREM are not only developed for

handling single local computer network domain, but also extended for supporting multiple computer network domains. A platform for the comprehensive assessment of PREM is established for the fast and economical assessment of the key management developed in this thesis research.

IV

Acknowledgments

I would like to express my deepest gratitude to my supervisor Professor Richard Cheung for his expert supervision. I highly appreciate the valuable advices, professional guidance, and consistent encouragement from Professor Cheung through all stages o f my study and research.

I am grateful to Dr. David Xu and Dr. Lian Zhao for reviewing my thesis and providing advices.

I would like to dedicate this thesis to my family for their deepest love, remarkable encouragement and unconditional support.

Contents

Chapter 1 Introduction............................................................................. 1
1.1 Motivation................................................................................................................ 1 1.2 Introduction of Power System Computer Network Access Control.........................3 1.3 Introduction of Contents in this Thesis.................................................................... 5

Chapter 2 Network Security and Access Control....................................8
2.1 Cryptographic Support for Computer Network Security..........................................9 2.2 Encryption-Decryption Techniques for Network Security.....................................10 2.3 Hash Function for Network Security..................................................................... 13 2.4 Conventional Computer Network Access Control..................................................15 2.5 Key Management for Network Security................................................................ 17 2.6 Research Findings and Initiations.......................................................................... 21

Chapter 3 Power-system Role-based Access Control (PRAC)............. 23
3.1 Security Management Architecture........................................................................ 24 3.2 Power-system Role-based Access Control (PRAC).............................................. 26 3.2.1 PRAC Model for Host Domain..................................................................... 27

VI

3.2.1.1 Role Hierarchy o f Host D om ain.....................................................................28 3.2.1.2 Role Constraints................................................................................................ 29 3.2.2 PRAC Model for Foreign Dom ain......................................................................... 30 3.3 XML-based PRAC Security Policy System..................................................................32 3.3.1 Examples o f XML-based Policy System .............................................................. 33 3.3.2 Administration o f XML-based PRAC Security Policy System ......................... 37 3.4 Privilege Assignment Procedure for PRAC M odel.................................................... 38 3.5 Concluding Remarks........................................................................................................41

Chapter 4 Power-system Role-based kEy Management (PR E M )

43

4.1 PREM for Single Local D om ain.................................................................................... 45 4.1.1 Rules for Key Generation........................................................................................ 46 4.1.2 Key Management for Dynamic Hierarchy............................................................ 48 4.1.3 Algorithms for Key Generation and Modification............................................... 53 4.1.4 Procedures for Object Assignments....................................................................... 58 4.2 PREM Extended for Multiple Local Domains............................................................. 60 4.2.1 Key Management Architecture for Multiple Local D om ains............................ 62 4.2.2 Object Assignment Protocol for Multiple Local D om ains.................................63 4.3 Concluding Remarks........................................................................................................65

Chapter 5 Platform for Comprehensive Assessment of PR EM

67

5.1 PREM Assessment Platform with Typical Cryptographic A lgorithm s....................68 5.2 PREM Assessment Platform via Typical Key M anagem ent..................................... 69 vii

5.3 Concluding Remarks...............................................:............................................75

Chapter 6 Conclusion..............................................................................76
6.1 Major Research Work Completed.......................................................................... 76 6.2 Major Research Contributions............................................................................... 78 6.3 Future Work...........................................................................................................79

APPENDIX A Specifications of XML-based PRAC Security Policy for Enterprise Host Domain............................................................................81 APPENDIX B An Example of PRAC Security Policy for Enterprise Host Domain...............................................................................................85 APPENDIX C Specifications of XML-based PRAC Security Policy for Foreign Domains........................................................................................90 APPENDIX D An Example of PRAC Security Policy for Foreign Domains..................................................................................................... 94 BIBLIOGRAPHY......................................................................................97

vm

List o f Figures

Figure 2.1: Inheritance Relationships Among Nodes in a H ierarchy.................................. 18 Figure 3.1: Security Management Architecture......................................................................26 Figure 3.2: PRAC Model for Power System Computer N etw orks...................................... 27 Figure 3.3: Role Hierarchy o f Enterprise D om ain................................................................. 29 Figure 3.4: Interface o f XML-based Security Policy for Enterprise Host D om ain........... 35 Figure 3.5: A Security Policy Interface o f Appendix D......................................................... 37 Figure 3.6: XML-based Policy Loaded From Control Center.............................................. 38 Figure 3.7: Procedure o f the XML-based PRAC Security P olicy....................................... 39 Figure 4.1: Derived Keys for Roles and Objects in a Role Hierarchy.................................47 Figure 4.2: Adding a Dead-end R o le....................................................................................... 49 Figure 4.3: Adding a Non-dead-end Role or an O bject.........................................................50 Figure 4.4: Deleting a Dead-end R o le ..................................................................................... 51 Figure 4.5: Deleting a Relationship Among R o les................................................................ 52 Figure 4.6: Adding a Relationship Among R oles...................................................................52 Figure 4.7: An Example o f Key G eneration.......................................................................... 54 Figure 4.8: Key Generation and Object Encryption in a Local Domain..............................55 Figure 4.9: The General Procedure for Key Modification in a Local D om ain...................57 Figure 4.10: Procedure of the Object Assignment M ethod.................................................. 59 Figure 4.11: An Example o f Role Hierarchies in Multiple Local D om ains....................... 61 ix

Figure 4.12: Key Management Architecture for Multiple Local Domains.......................62 Figure 4.13: Inter Relationship of Role Hierarchies in Multiple Local Domains............ 64 Figure 5.1: An Example of Role Hierarchies................................................................... 73 Figure 5.2: Comparing PREM with AKl and Taylor's Method.......................................74

X

C hapter 1

Introduction

1.1 Motivation
In the recent few years. North American electricity utilities have been undergoing substantially changes due to technological and political reasons. In the technological

aspects, there has been rapidly increasing use of intelligent electronic devices (lEDs) with communication capabilities in the electricity power systems. These lEDs can

communicate with the computer network directly or through a PC. In the political aspects, many electricity utilities have been under tremendous pressure from their government to provide their customers or third parties with open access to their transmission systems. Some large monopoly-type utilities have been forced to break up into smaller companies, typically one company to be responsible for generation, one for transmission, and one for distribution. These companies, however, must operate very closely through computer Regardless

communications, since they share one physical electricity circuit network.

technological or political reasons, the needs for computer network communications in electricity power system have been increasing dramatically [1]. The security and reliability concerns of the computer network in the electricity power system urgently need to be addressed [2-4], as the demands for access to the network have 1

been rising rapidly and tremendously due to several key reasons. First, under the new government open access policy imposed on the utilities, the power system computer networks, originally isolated and used by qualified staff, have to become more accessible to a wider range and number of users that increases the dangers of the network to be attacked. Second, with the increasing use of lEDs of independent communications to the computer networks, the power system can be operated, on one hand, very efficiently if all network communications are absolutely correct, but the power system operation can be endangered, on the other hand, if there is any network error. Third, for companies broken up from a large utility under government open access policy, any mismatched command requests from these companies for operating the same physical electricity circuit will jeopardize the reliability of the power systems. The prime objective of this thesis research is to develop a new network access control to significantly increase the security of computer networks for power systems. This

network access control can surmount the challenges caused by the above-mentioned security and reliability concerns due to current technological and political changes faced in the electricity power industry. This thesis has completed an exhaustive investigation on the currently available techniques, models, and managements for computer network access control. The existing technologies are logical and useful for many applications such as for banking systems, for insurance systems, for medical systems, etc. However, these techniques, models, and managements do not efficiently satisfy the requirements for reliable operations in the electricity power systems. This initiates the research in this thesis.

Initiated from and built on currently available network aeeess and seeurity technologies, this thesis research extends significantly the capacity o f the conventional role-based access control for applications in electricity power systems. A new network access architecture is developed based on the extended role-based access control model. Furthermore, built on the existing key management for network access control, this thesis research designs an efficient key management using a simple one-way hash function to control the access to the power system computer network and the execution of the power system network controlling commands.

1.2 Introduction of Power System Computer Network Access Control
The network access control architecture, designed in this thesis research, is comprised o f a host domain for the utility being studied and multiple foreign domains for neighboring utilities. The host domain contains a central domain for the power system control center network and several local domains for computer networks o f generation systems, transmission systems, distribution systems, and customer loads. The control center network is designed in this thesis to operate as an administrator for all local domains in the host utility, and also communicates with users from neighboring utilities using the direct communication link or through the Internet. The control center defines the security policies for all local domains in the host domain as well as for connections with the foreign domains, and authorizes privileges of access to foreign domain users. Each local domain (either for generation systems, transmission systems, distributed systems, or customer loads) implements its security policy instrumented by the

control center. The local domain security officer authorizes privileges of access to its own local domain users and the users from other interconnected local domains. A new role-based access control model, developed in this thesis research, is different from the conventional models. The new model defines the relationships between network roles in a local domain and those of interconnected local domains. Also the new model extends the access control from one power enterprise domain to foreign enterprise domains. In the new model developed in this thesis research, a role is defined as a collection of privileges of network access that can be executed by the authorized users. A role can take on a number of privileges, a user can be assigned with a number of roles, and a role can be assigned to multiple users. In general, a set of roles can be assigned to a particular user according to the user's responsibility and authority in the power enterprise. A privilege in the new model is an access that can be exercised on objects, such as monitoring power system performance, trading electricity, operating substation equipments, etc. With the architecture created in this thesis research, the network control center is designed to have the authority and facilities to structure the enterprise domain role hierarchy. This design allows the control center computer network to have full capability to structure the network access according to the real power system environment as well as capable of adapting to the changes in the environment. The enterprise hierarchy can be comprised of multiple local-domain role hierarchies. A role hierarchy is established to represent inheritance of authority, responsibility, and privilege among the roles. The network controller in the new model, developed in this thesis research, is responsible to evaluate constraints to the role operations. The new model is designed to
4

efficiently handle different types o f role constraints. The role constraints in general can be grouped into three types: cardinality constraint, separation-of-duty constraint and prerequisite constraint. The cardinality constraints include that a role may be allowed to have a limited number o f users; a user may be allowed to execute a limited number o f roles, etc. The separationof-duty constraints enforce conflict-of-interest prevention policies established by the control center for the access control. Conflict o f interest arises as a result o f the

simultaneous assignment o f two mutual exclusive roles to the same user. For example, a role o f network monitor and a role o f network operator cannot be assigned to the same user in order to avoid the conflict o f interest in power enterprise systems. The prerequisite constraints for specific network accesses are checked by the network controller. The controller will ensure that a user can perform a prerequisite operation if and only if the user is already a member o f prerequisite role. For example, a role with a privilege to initiate a tripping command to the substation bus-tie breaker is a role that has a prerequisite constraint. The constraint is determined by the control center such as the role must be a substation operator with a specific training and experience. A user can execute this role if and only if the user already has a role o f substation operators. M oreover, there exist many other role constraints, for instance time constraint that defines how long the role can be activated.

1.3 Introduction o f Contents in this Thesis
The following provides an introduction o f the chapters in this thesis.

Chapter 2 presents the cryptographic support for the computer network security, two typical types of existing encryption and decryption techniques, the features of hash functions for the network security, the conventional computer network access control, and the key management for the network security. This chapter outlines the research initiations. One initiation was built on currently available network access and security technologies to extend the capacity of the conventional role-based access control for applications in electricity power systems. Another initiation was built on the existing key management for network access control to design an efficient key management.

Chapter 3 presents a security management architecture and a new role-based access control model specially designed for power system computer networks. This model extends the capability of the conventional models for handling multiple computer network domains. This chapter develops a security policy system and illustrates the implementation of this system with examples. Finally this

chapter presents a procedure for assigning the privileges to the roles in the new model for the power system applications, and illustrates the procedure with three cases.

Chapter 4 presents a new key management for electricity power system computer networks. This key management uses one-way hash functions and utilizes their advantages of computationally efficient and irreversibility security. This

chapter presents four core components in the new key management that include
6

rules for key generation, key management for dynamic hierarchy, algorithms for key generation and key modification, and procedure o f object access using keys. This chapter has shown that the new key management is extended from one power system computer network local domain to the multiple local domains. The extended PREM decentralizes the key management for each

local domain that is independently managed by its own local domain administrator. Any change o f the role hierarchy structure in one local domain does not affect the keys o f other local domains.

Chapter 5 presents a platform for the comprehensive assessment o f PREM for the rolebased aeeess control o f power system computer networks. Since in practice it is very difficult particularly within the university environment, to thoroughly assess the network aeeess control, this chapter proposes a simple alternative that consists o f two stages. The first stage for functionality assessment o f PREM uses two typical cryptographic algorithms: one for one-way hash function, one for symmetric key encryption. The second stage for benchmark assessment o f PREM is via the comparison using typical existing key management method. Three study eases are given to illustrate the assessment.

Chapter 6 presents the conclusion o f this thesis researeh and the future work in power system computer network aeeess control.

Chapter 2

Network Security and Access Control

This chapter first investigates the cryptographic support for the computer network security. The network security is one of the most important components for the reliable operations of the entire electricity power system. Second, this chapter discusses two typical types of existing encryption and decryption techniques. Third, this chapter assesses the features of hash functions for the network security. Fourth, this chapter investigates the conventional computer network access control. Finally, this chapter introduces the key management for the network security. The currently available techniques, models, security managements are useful for many applications such as for banking systems, for insurance systems, for medical systems, etc. However, they do not efficiently satisfy the requirements for reliable operations in the electricity power systems. This initiates the research in this thesis. This chapter outlines the research initiations. One initiation was built on currently available network access and security technologies to extend the capacity of the conventional role-based access control for applications in electricity power systems and to develop a new network access architecture based on the extended role-based access control model. Another initiation was built on the existing key management for network access
8

control to design an efficient key management using a simple one-way hash function to control the access to the power system computer network and the execution o f the power system network controlling commands. The following lists the sections in this chapter: Section 2.1 presents the basic concepts in cryptography. Section 2.2 discusses typical techniques o f encryption and decryption for network security. Section 2.3 explores features and best uses o f hash functions for network security. Section 2.4 reviews conventional network access controls. Section 2.5 assesses key managements for network security. Section 2.6 summarizes research review findings and thesis research initiations.

2.1 Cryptographic Support for Computer Network Security
This section discusses the cryptographic support for computer network security. Cryptography is defined as the study o f mathematical techniques related to aspects o f information security such as confidentiality, data integrity, entity authentication, and data origin authentication [5], The use of cryptographic techniques not only provides information security but also offers: confidentiality ensuring that no one can read the

message except the intended receiver, data integrity assuring the receiver that the received message has not been altered, authentication, proving the identity o f the user, and no«repudiation proving that the sender accurately has sent the message.

A goal of cryptography is to adequately address the above four areas in both theory and practice. Cryptography is about the prevention and detection of cheating and other malicious activities. In data transmissions, the use of cryptography is necessary when communicating over any untrusted medium that includes any network particularly the Internet. Traditionally, two important mechanisms of cryptography such as encryption and decryption are widely used. A message in its original form is known as plaintext or cleartext. The mangled

information is known as ciphertext. The process for producing a ciphertext from a plaintext is known as encryption. The reverse of encryption is called decryption that converts a

ciphertext back into its original cleartext. Cryptographic process uses an encryption/decryption algorithm and a secret value known as the key to increase the data security. With a good cryptographic scheme, it is fine to have everyone know the algorithm used in the encryption because the knowledge of the algorithm without the key virtually could not decrypt the information.

2.2 Encryption-Decryption Techniques for Network Security
This section reviews the encryption and decryption techniques for enhancing the security of the computer networks. Basically the techniques for the computer network encryption can be grouped into two types: symmetric encryption and asymmetric encryption. The symmetric encryption involves the use of a single key. Given a message (called the plaintext) and the key, the encryption produces a ciphertext, which is about the same length as the plaintext was. The decryption is the reverse of encryption and uses the same key.
10

The symmetric encryption process can best be characterized as follows: (1) Encryption turns a clear text into a ciphertext, (2) Decryption restores the clear text from the ciphertext, and (3) The same key is used in both encryption and decryption.

A) Symmetric Encryption The three common symmetric encryption algorithms available in commercial devices are Data Encryption Standard (DES), Triple Data Encryption Standard (3DES), and Advanced Encryption Standard (AES) [6]. D E S is one o f the most widely used standards. ciphertext via an encryption algorithm. restores the cleartext from the ciphertext. decryption. The DES turns a cleartext into a

The decryption algorithm on the receiving end Keys are used in the process o f encryption and

The most widely used symmetric DES scheme operates on 64-bit message

blocks and uses 64-bit keys. 3DES is an enhancement to DES that preserves the existing investment in software but makes a brute-force attack more difficult. The 3DES performs the operations o f encryption and decryption using one, two, or three different keys. A E S is the newest encryption algorithm. It currently specifies keys with a length o f

128, 192, or 256 bits to enerypt blocks with a length o f 128, 192, or 256 bits. It is important that if a deeision needs to be made in the eryptographie algorithm development, then the decision should avoid the seeurity, resulted from the use o f the algorithm in data transmission, being eompromised. In most eryptographie protocols, the

cornerstone to security lies in the secrecy o f the key used for the data encryption.

11

Symmetric encryption algorithms are designed so that it is extremely difficult for anyone to obtain the cleartext without the key.

B) Asymmetric Encryption

Asymmetric encryption is often referred to as public key encryption. This encryption includes three commonly-used algorithms: the Rivest-Shamir-Adelman (RSA) algorithm, the Diffie-Hellman algorithm, and the El Gamal algorithm. Unlike the symmetric encryption algorithms, different keys are used in the asymmetric encryption and decryption processes. The sender and the receiver, each has one pair of

keys: one private key that is not exposed to anyone, and one public key that is preferably to be known in public. The public key and the private key are different, but they are related as a pair such that the private key can decrypt any message encrypted by the public key. If anyone wants to communicate using the asymmetric encryption, each individually needs a specific pair of public key and private key made according to a commonly agreed key generation algorithm. For example, if Alice wants to send a message to Bob, she will encrypt the message using Bob's public key, and Bob can decrypt the message using his private key. During the asymmetric encryption process, the private key is known only to the intended receiver, the public key is known to the public, and the public key distribution is not a secret operation. Rivest-Shamir-Adelman (RSA) Cryptosystem is a public key cryptographic system that requires the use of a public key and a private key [6]. The following steps illustrate the key generation algorithm for RSA: First choose two large prime numbers of approximately
12

the same size, namely p and q. Second compute the product o f these two primes, n = p q. Third compute the value of function cp (n) = (p-1) (q-1). Fourth choose an integer e between 1 and cp(n) such that gcd (e, cp (n)) = 1. Finally compute d whereby d = e'* mod (cp

(n)).
The public key is (n, e) whereas the private key is (n, d). Presently, 512-bit prime numbers are used, resulting in a 1024-bit value o f n. Cracking such RSA systems require the ability to factor 1024-bit However, RSA requires integers, which at thepresent time is almost impossible. throughput

a lot o f processing time

that may decrease

performance. The RSA encryption proceeds by transforming M, the digital form o f the plaintext (the original message) into C, the ciphertext (the encrypted message) using the following fimction. C = M® mod n An inverse function is used to decrypt M. M = C mod n (2.2) (2.1)

2.3 Hash Function for Network Security
Data integrity is very important for data transporting over the public Internet, where the data could be intercepted and modified. Many methods are available to ensure the data integrity against a message being modified. A simple method is to send the message with an attached hash value that can be used at the receiving end to identify whether the message has been altered.

13

A hash value is used to verify the contents of a transmission that are the same at both ends of the transmission, similar to a checksum. A hash value is calculated using a hash function that takes any size input, such as a packet, and returns a fixed-size string. The hash value verifies the integrity of the original message. If the transmitted hash value matches the received hash value, the message has not been tampered with. However, if the two hash values do not match, the message has been altered. A hash function His a transformation that takes a variable-size input "m" and returns a fixed-size string, which is called the hash value "h", that is h = H (m). Examples of wellknown hash functions are Message Digest (such as MD2, MD5) and Secure Hash Algorithm (SHA) [7]. Hash functions with the feature of variable-size input to fix-size output have a variety of general uses for data integrity protection. However when

employed in cryptography, the hash functions with additional features are chosen. The basic requirements for a cryptographic hash function H(x) are: · The input x can be of any length, · The output h = H(x) has a fixed length, · H (x) is relatively easy to compute for any given x , · H (x) is one-way, · H (x) is collision-free.

A hash function H is said to be one-way if given a hash value h, it is computationally infeasible to find the input x. For any two different messages x and y, if H (x) # H (y), then H is said to be a collision-free hash function.

14

2.4 Conventional Computer Network Access Control
Access control to the computer network is comprised o f three categories: Mandatory Access Control (MAC), Discretionary Access Control (DAC), and Role-based Access Control (RBAC). The MAC enforces the access control according to the information security labels attached to users and objects. The MAC can determine the kind o f consistent access between a user and its objects. Security labels have to be granted to all

users and objects by the network system officer, and the label can be changed only in accordance with the content o f the object. The MAC policy is not flexible, so that it is not suitable to be used in commercial areas. In DAC, each object has an access control list, indicating that all the accesses to the users are authorized on that object. However, in a large distributed system there are thousands o f objects, and each o f which could be assigned to hundreds of users, so that the access control list will be enormous in size and its maintenance will be difficult and costly.

A) Fundamental Role-Based Access Control To provide an improved access control to the computer network, the fundamental RoleBased Access Control (RBAC) was proposed [8-12]. The RBAC determines the access privileges that roles can perform, and assigns roles to users. Users can access objects according to the roles assigned to them. The central notion o f the RBAC is that users do not directly access to enterprise objects. Instead, the access privileges are associated with roles, and each user is assigned to one or multiple members o f appropriate roles. The fundamental RBAC model consists o f three basic components: users, roles, and privileges, whereby a user is a human being or an autonomous agent, a role is a collection o f 15

privileges needed to perform a certain job function within an organization, and a privilege is an access mode that can be exercised on objects in the system. A user can be a member of many roles as determined by his/her responsibilities and qualifications, and a role can have multiple members. One role may have many privileges, and the same privilege can be associated with many roles. The roles can be easily reassigned to the users without modifying the underlying access structure.

B) Extended Role-Based Access Control In the recent few years, several role-based access control models have been proposed to meet the security requirements for different applications. In addition to the fundamental role based models, a role-based access control administration model was proposed [13] to extend the basic one by adding the administrative roles and administrative privileges, which are dedicated to the management of the roles in the network. The model represents and formalizes complex management and delegation rules that an organization may have in place. However, the requirements that have driven the design of the access control system do not justify adding this degree of complexity solely to the management of granting and revoking roles. Therefore, the model is not suitable for electricity power system applications. Role Graph Model (ROM) was proposed [14, 15] based on the notion of users, privileges and roles. In ROM, a privilege is viewed as the combination of an object and a set of operations on that object. More precisely, a privilege is a pair (x; m) defined in ROM, where x refers to an object and m is a non-empty set of access modes for the object
X.

A role is defined as a named set of privileges and is represented by a pair (mame;
16

rpset), where m am e is the name o f the role, and rpset represents the set o f privileges o f that role. Given a role R, it uses R;mame and R:rpset to refer to the role's name and privilege set respectively. The roles form the nodes o f the role graph. An edge o f R1 ^ R2 in the role graph defined in ROM represents that R1 is junior to R2 if and only if R lrrpset is a subset o f R2 :rpset. There are three factors that determine the network access control: (1) the assignment o f privileges to roles, (2) the assignment o f roles to users, and (3) the orientation o f the edges in the role graph. The RGM model includes a MaxRole and a MinRole. The MinRole

represents the minimum set o f privileges available to all roles. The MaxRole represents the combination o f all the privileges o f the roles in the role graph. It does not need to have any users authorized to it. It is in the role graph in order to have a place to summarize all o f the privileges in the network system. The models presented above are all logical and useful for applications such as for banking systems. These models, however, do not efficiently satisfy the requirements o f the electricity power systems. This initiates the research in this thesis.

2.5 Key Management for Network Security
This section reviews the previous work in the key management, which is important in information security that ensures that any access to an object is authorized. A case was considered in [16, 17], where the users were divided into a number o f disjoined sets, S={Si, S2, ..... , Sn}. Each set Si was designated as a node Uj in the graph, and each user was assigned to a security class called the security clearance. The nodes were partially ordered by the relationship o f <. For example, Uj < Uj meant that users in Si 17

at node U; had a security clearance lower than those in Sj at node Uj. In other words, users in Sj with higher security clearance can have access to information destined to users in Si, but the opposite access was not allowed. Inheritance relationships among the nodes in a hierarchy were defined. The

relationship of Ui < Uj was that U, was defined as a direct child node of Uj, and Uj was defined as a direct parent node of U,. The inheritance relationship was defined to be

transitive, that is, if node Uj was the child node of Uj and Uj was the child node of Uk,, then Ui was called as an indirect child node of Uk, and Uk was called as an indirect parent node of Ui. An example of a hierarchy was shown in Figure 2.6 where node A was a direct parent node of B and C, node B was a direct parent node of D, E, and F. Therefore, node A was an indirect parent node of D, E, F, G and H.

pl=2

p2=3

p3=5

p4=;

p5=l 1

p6=13

Figure 2.1: Inheritance Relationships Among Nodes in a Hierarchy

The central authority (CA) is responsible for the generation and distribution of keys to all nodes. Any node must have a correct key for accessing an object in another node, and 18

any node can derive the keys o f its direct or indirect child nodes. For example, if node X wants to access an object o f node Y, then node X must be the direct or indirect parent o f node Y, and node X must derive the key o f node Y using the same scheme as the original key for node Y generated by CA. The following shows a scheme proposed on how to generate or derive the keys [16, 17]. A public integer or parameter t; was assigned to each node U, with the property represented by tj/tj, if and only if U; < Uj. The CA chose a random key Ko and a secret pair o f prime number p and q. The product M =p*q was made public, then Ki=Ko " mod M was distributed to the users in Ui. by the following hash function. Ki = Ko mod M - (Ko '0 mod M = Kj ^`j mod M (2.3) If U, < U j, then t. / tj was an integer and Uj can compute K;

Notice from the hash function (2.3) that the key K can be computed from Kj. However, Kj cannot be computed from K, . This computation was considered infeasible. To accomplish the key generation scheme, each U, is assigned with a small prime number Pnby the CA, and q can be computed by the following equation: ti ^ Y \P n
U,,~<Ui

(2-4) In other words, the

where U,,

Ui means that U,, was not below Ui in the hierarchy.

computations o f q indicated all the nodes which were not below U j. A simple example o f the hierarchy is shown in Figure 2.6. To make the computation simple, the CA assigned the prime numbers for the p,,'s. For example if the CA started with the smallest prime number, then node A was assigned with p i = 2, node B with p2 = 3, node C with p3 =5, etc. According to (2.4), the public parameter q assigned to each 19

node was the produet of the prime numbers assoeiated with nodes that were not below it in the hierarehy. Since node A does not have any nodes that were above it, its publie

parameter ti is assigned to be 1. The parameter values of all other nodes can be computed based on (2.4) as follows: node A: node B: node C: node D: etc. The advantage of this scheme is that the key generation algorithm is quite simple. However, it has the following drawbacks. First, the key generation uses one hash function that only deals with one hierarchy structure. Second, prime numbers assigned to the nodes must be chosen carefully. Otherwise there exists the possibility of some users collaborating to compute a key to which they are not entitled. Finally, if a node is added to or deleted from the system, then all the keys need to be re-generated. In an attempt to improve the key management, a method named "Optimal key assignment algorithm" was proposed [18]. In this method, the size of the integer assigned to each node was proportional to the number of the nodes in the hierarchy. This method would be difficult to implement when the number of nodes becomes very large. Nowadays, there are other solutions for the key management on multilevel security [19, 20], such as hierarchical key management scheme for XML data [21, 22] and for secure group communications [23-25]. These schemes have different drawbacks, such as some t, = l t2 = pl*p3*p7*p8= 2*5*17*19=3230 % = pl*p2*p4*p5 =2*3*7*11 =462 t4 = pl*p2*p3*p5*p6*p7*p8 = 2*3*5*11*13*17*19=1385670

20

cannot efficiently provide the dynamic access control or some require huge storage for public parameters.

2.6 Research Findings and Initiations
This chapter has reviewed the available cryptographic support for the security o f computer networks, and has discussed two typical types o f existing encryption and decryption techniques. This chapter has assessed the features o f hash functions for the network security, and has investigated the conventional computer network access control. Finally, this chapter has introduced the key management for the network security. The currently available techniques, models, security managements discussed in this chapter are all logical and useful for many applications such as for banking systems, for insurance systems, for medical systems, etc. However, these techniques, models, and

managements do not efficiently satisfy the requirements for reliable operations in the electricity power systems. This initiates the research in this thesis. Initiated from and built on currently available network access and security technologies, this thesis research extends significantly the capacity o f the conventional role-based access control for applications in electricity power systems. A new network access architecture is developed based on the extended role-based access control model, o f which the details are given in Chapter 3. Furthermore, built on the existing key management for network access control, this thesis research designs an efficient key management using a simple one-way hash function to control the access to the power system computer network and the execution o f the power

21

system network controlling eommands. The details of the key management design are given in Chapter 4 and the design validation is given in Chapter 5.

22

C hapter 3

Pow er-system R ole-based A ccess C ontrol (PR A C )

This chapter details a new aeeess control designed in this thesis researeh for electrieity power system eomputer networks. This new control extends significantly the eurrently

available role-based aeeess eontrols to have advanced eapaeities for providing seeurity eontrols o f aeeesses to the power system eomputer networks. This eontrol is named as Power-system Role-based Aeeess Control (PRAC) in this thesis. First this ehapter presents a security management arehiteeture speeially designed for power system computer networks. This arehiteeture is eomprised o f an eleetrieity enterprise host domain and multiple foreign eleetrieity enterprise domains that inelude eomputer network domains o f electrieity companies from other provinees and neighboring eountries. The host domain contains a central domain for the power system eontrol center eomputer network and several loeal domains for computer networks o f generation systems, transmission systems, distribution systems, and customer loads. The main funetions o f the network domains in this speeially designed arehiteeture are diseussed in this ehapter. Seeond this ehapter presents the PRAC model that is a speeifie role-based aeeess eontrol model developed for the power system eomputer networks. This model differs 23

from the conventional ones by extending the access control from one domain to multiple domains. Third this chapter establishes an XML-based PRAC security policy system for the electricity power system enterprise domain and for connections with the foreign computer network domains. Examples to illustrate this XML-based policy system are given. Finally this chapter presents a procedure for assigning the privileges to the roles in the PRAC model for the power system applications. Three study cases are given to illustrate the procedure. The following lists the sections in this chapter. Section 3.1 presents a security management architecture specially designed for the power system computer networks. Section 3.2 presents the PRAC model, a specific role-based access control model developed for the power system computer networks. Section 3.3 presents an XML-based PRAC security policy system and the adrninistration of the policy. Section 3.4 presents a privilege assignment method for PRAC model. Section 3.5 provides the concluding remarks of this chapter.

3.1 Security Management Architecture
The security management architecture designed in this thesis research for electricity power system computer networks is comprised of an enterprise domain and multiple foreign enterprise domains that include computer network domains of electricity enterprises from other provinces or countries. The enterprise domain contains a central 24

domain for the power system eontrol eenter eomputer network and several loeal domains for eomputer networks o f generation plants, transmission systems, distribution systems, and eustomer loads. Figure 3.1 shows the network security management architecture In this arehiteeture, the electricity enterprise network

designed in this thesis research.

domain contains one central domain for the power system control center and four local domains for generation systems, transmission systems, distribution systems, and customer loads. The control eenter computer network domain operates as an administrator o f all loeal domains in the electricity enterprise, and also communicates with users o f other electricity enterprises using the direct communication link or through the Internet. The main functions of the network domains in the security management architecture designed in this thesis are as follows: · The control-center network manager defines and maintains the seeurity policies for all local domains in the enterprise computer network domain. Also, the controlcenter network manager defines and maintains the security policies for connections with the foreign domains and authorizes privileges o f access to foreign domain users according to the defined foreign domain security policies. · Each local domain (for generation systems, transmission systems, distributed systems, or customer loads) implements its security policy instrumented by the control center network manager. The local domain security officer authorizes

privileges o f access to its own loeal domain users and the users from other intereonneeted local domains.

25

Foreign Domain 1
Custom Loads Distribution Systems

Foreign Domain 2
Custom Loads Distribution Systems

Generation

Transmission

Generation

Transmission

Controi Center

Control Center

Internet
Controi Center

Local Domain 1
Generation

Local Domain 2
Transmission

Local Domain 3
Custom Loads

Local Domain 4
Distribution Systems

Enterprise Host Network Domain Figure 3.1: Security Management Architecture

3.2 Power-system Role-based Access Control (PRAC)
In this thesis research, a specific role-based access control model is developed for the power system computer networks. This model is named the Power-system Role-based Access Control (PRAC). The significant part of the PRAC model that differs from the conventional ones is: (1) PRAC defines the relationships between network roles in a local 26

domain and those o f interconnected local domains. (2) PRAC extends the access control from one power enterprise domain to foreign enterprise domains.

Inherits

User

Role

Privilege

M Inherits

Role Constraint

ForeignInterfacing Role

Foreign User

Digital Credentials

Power Enterprise Domain

Foreign Domain

Figure 3.2: PRAC Model for Power System Computer Networks

Figure 3.2 shows the diagram o f the PRAC model that consists o f two parts: one part for a host domain, and one part for foreign domains. The designs o f these two parts are discussed in the following.

3.2.1 PRAC M odel for Host Domain
In the PRAC model for the enterprise computer network domain, a role is defined as a collection o f privileges o f network access that can be executed by the authorized users o f 27

certain job positions in the enterprise. A role can take on a number of privileges according to its functions and authorities. A user can be assigned with a number of roles, and a role can be assigned to multiple users. In general, a set of roles can be assigned to a particular user according to the user's responsibility and authority in the power enterprise. A privilege in the PRAC model is an access mode that can be exercised on objects, such as monitoring power system performance, trading electricity, operating substation equipments, etc.

3.2.1.1 Role Hierarchy of Host Domain
With the PRAC architecture created in this thesis research, the network control center is designed to have the authority and facilities to structure the enterprise domain role hierarchy. This design allows the control center computer network to have full capability to structure the network access according to the real power system environment as well as capable of adapting to the changes in the environment. The enterprise hierarchy can be comprised of multiple local-domain role hierarchies. A role hierarchy is established to represent inheritance of authority, responsibility, and privilege among the roles in the power enterprises. A simple role hierarchy is described as follows; If role r, points to role q (i.e. q q), then q inherits all privileges of q. The role q is

called a direct parent role of q, and q is called a direct child role of r,. The inheritance relationship is transitive. For example, if q q and q r^, then q rk. In this example,

the role q is an indirect parent role of rk, and rk is an indirect child role of q. Both direct and indirect parent roles are simply called the parent roles, and both direct and indirect child roles are called the child roles. 28

In an enterprise computer network, a role in a local domain may take on some tasks belonging to other local domains. Figure 3.3 shows an example o f role hierarchies in local domain 1 and 2, where role C in local domain 1 is assigned to an access role G in local domain 2. Role C is then called an extended parent role o f G, and G is called an extended child role o f C.

Local domain 1

Local domain 2

Figure 3.3: Role Hierarchy of Enterprise Domain

3.2.1.2 Role Constraints
The network controller in the PRAC model is responsible to evaluate constraints to the role operations defined with required qualifications. The PRAC model is designed to

efficiently handle different types o f role constraints. The role constraints [26] in general can be grouped into three types: cardinality constraint, separation-of-duty constraint and prerequisite constraint.

29

The cardinality constraints handled by the PRAC-based computer network include that a role may be allowed to have a limited number of users, a user may be allowed to execute a limited number of roles, etc. The separation-of-duty constraints [27] are managed by the PRAC-based network. This management is to enforce conflict-of-interest prevention policies established by the control center for the access control. Conflict of interest arises as a result of the

simultaneous assignment of two mutual exclusive roles to the same user. For example, a role of network monitor and a role of network operator carmot be assigned to the same user in order to avoid the conflict of interest in power enterprise systems. The prerequisite constraints for specific network accesses are checked by the network controller in the PRAC-based network. The controller will ensure that a user can perform a prerequisite operation if and only if the user is abeady a member of prerequisite role. For example, a role with a privilege to initiate a tripping command to the substation bus-tie breaker is a role that has a prerequisite constraint. The constraint is determined by the control center such as the role must be a substation operator with a specific training and experience. A user can execute this role if and only if the user already has a role of substation operators. Moreover, there exist many other role constraints, for instance time constraint that defines how long the role can be activated.

3.2.2 PRAC Model for Foreign Domain
The PRAC model designed in this thesis researeh extends the eapability of the conventional role-based access control model to cover the foreign electricity enterprise computer network domains. In the PRAC model, privileges can be given to users from the 30

foreign domains. These users are called the foreign domain users. In order to deal with the access control o f users from the foreign domains, it is required to establish a foreign-user network access policy to verify the trust relationship between the users o f host domain and those o f foreign domains. Digital credentials can be used to manage the trust establishment efficiently [28-30]. The PRAC model designed in this thesis uses the digital credential to verify the network access request to the electricity power system computer networks. This credential

verification is particularly important for maintaining the network security when the network is open to the foreign users. Digital credentials are the online counterparts o f paper credentials that people use in their daily lives. There are multiple subject properties and their values for each type of credential. For example, the digital credential o f a

substation circuit breaker operator has several typical subject properties including the user's profession, specific trainings, specific experiences, etc. The control center network administrator (a software) automatically assigns a digital value to each subject property such as a profession engineer is represented with 9912345, training 1 with 456789, training 2 with 456788, etc. Trust establishment using the digital credential is applicable whenever a foreign user requests to engage in a sensitive transaction without sufficient pre-established trust, and such a request involves essentially every aspect o f the e-commerce in the power systems. An enterprise's network access policy may allow foreign users to access to certain data files but such access may limit to the authorized users. In the PRAC model, a foreign-interfacing role in the host computer network domain can be viewed as a collection o f privileges that can be performed by a foreign user who 31

holds the required digital credentials. In the PRAC-based computer network, the control centre defines a security policy for the foreign-interfacing role that it can only be authorized to foreign computer network domain users who holds the required credential. The security policy for digital credentials is one part of the XML-based PRAC security policy that will be discussed in the next section.

3.3 XML-based PRAC Security Policy System
In this thesis research, an XML-based PRAC security policy system is established for the electricity power system enterprise domain and for connections with the foreign computer network domains. The XML (extensible Markup Language) specification was established by the World Wide Web Consortium Standard Generalized Markup Language Working Group [31]. An advantage of using XML is that, as a meta-language, XML can effectively define a precise PRAC security policy system that can be extended or modified easily. XML is employed for the syntactic representation of the PRAC security policy system. The XML representation is comprised of two parts: 1) Basic Elements, and 2) Relationships of Elements. The first part defines the elements of the PRAC model The second part defines the

including role, privileges, constraints, and credentials.

relationships among the elements of the PRAC model. There are four assignment sections to implement the relationships: · · · Role hierarchy assignment for role-role relationships Privilege assignment for role-privilege relationships Constraint assignment for role-constraint relationships 32

·

Credential assignment for role-eredential relationships

3.3.1 Examples of XML-based Policy System
The following gives four examples o f XML-based policy.

Example 1: Syntax fo r Elements and Relationships o f Elements In the XML-based PRAC security policy specification o f the host compute network domain, the syntax of basic elements such as role, privilege, and constraint is defined. For example, role is represented by:
<! -- R o le definition-- > <R O L E lD=role-id x / R O L E > <! -- R o le definition-- >

In this format, a new XML tag o f type ROLE with a required ID attribute value role-id is specified. The Syntax o f element relationship for the host computer network domain is specified in Part 2 o f Appendix A. A privilege assignment that assigns privilege to a role is represented by:
<! -- P rivilege assignm ent d efinition-- > < P R IV -A S SIG N RO LE = ti PR IV IL E G E =w /.></PR JV -A SSIG N > <! -- P rivilege assignm ent d efinition-- >

This syntax defines a new XML tag o f type PRIV-ASSIGN with ROLE, and PRIVILEGE attributes in which role ti has a privilege mi. The detailed syntax o f all elements and their relationships are given in Appendix A.

33

Example 2: Privilege Assignment

,

An example of privilege assignment in the host domain is shown below. Five privileges pi, p2, p3, p4 and p5 are included and each privilege is assigned to a specific role.
<! - Basic Elements - > <! -- Privilege set definition--> <PRIVILEGE ID= "p i" > </PRIVILEGE> <PRIVILEGE ID= "p2" > </PRIVILEGE> <PRIVILEGE ID= "p3" > </PRIVlLEGE> <PRIVILEGE ID= "p4" > </PRIVILEGE> <PRIVILEGE ID= "p5" > </PRIVILEGE> </ -- Privilege set definition--> <! --Basic Elements -->

< !--Relationships o f Elements - > <! --Privilege assignment definition- > <PRIV-ASSIGN ROLE="A" PRIVILEGE= "p l"xyPRIV-ASSIGN> <PRIV-ASSIGN ROLE= "B" PRIVILEGE^ "p2, p3"xyPRIV-ASSIGN> <PRIV-ASSIGN ROLE= "D " PRIVILEGE^ "p4, p5"x/PRIV -A SSIG N> </ - Privilege assignment definition- > < !--Relationships of Elements - >

The detailed description of the PRAC policy for the host domain is given in Appendix B. An interface of the XML-based policy system is shown in Figure 3.4.

34

PRACI.sotL - XML Marker version 1.1
File Edit View Options N avigate Help

el

< x i n l v e r s i o n - "1 Xi" > <PRAC-MODEL TYPE= "PRAC i _P O U C Y '> < - L ocai d o m a in 1-- > <! - B a s ic E ie m e n ts - > <1- P r iv il è g e s e t d e fin itio n ^PRIVILEGE iD= " p r > «PRIVILEGE iD= "p2" > «PRIVILEGE iD= "p3" > «PRIVILEGE iD= "p4" > «PRIVILEGE iD= "p5" > « / - P r iv il e g e s e t d e fin itio n - > » «/PRIVILEGE» «/PRIVILEGE» «/PRjVU.EGE> «PRIVUÆGE» «/P R IV IE G E »

j± T
T h is

«) -R o le d efin ition -- » «ROLE iO= "A" > « R O L E iO = " B " » «ROLE iD= " C " » «ROLE iD -" D " »

«/ROLE» «/ROLE» «/ROLE» «/ROLE»

..r^ rS t r- lr^_ n |- n % . w J r v r v i r ^

m

T ree S election B row ser
Réady

Figure 3.4: Interface o f XML-based Security Policy for Enterprise Host Domain

Example 3: Syntax fo r Foreign-interfacing Role The Syntax o f the foreign-interfacing role is represented by,
<! --Foreign-Inteifacing R ole definition-- > <F O R E IG N -Inteifacing R O LE ID =ra/e-rJ x /F O R E IG N -In terfa cin g R O LE> <! --Foreign-Inteifacing R ole definition-- >

This syntax defines an XML tag Foreign-interfacing ROLE and an attribute ID o f which the value is role-id. XML specification also defines the syntax o f element relationships for the foreign domain with foreign-interfacing role hierarchy for foreign interfacing role-role relationships, privilege assignment for foreign interfacing role-privilege relationships, and credential assignment for foreign interfacing role-credential relationships. The

35

detailed syntax for all elements and their relationships of foreign domain are given in Appendix C. An example, such as foreign-interfacing role hierarchy, is represented as follows:
<! -Foreign-interfacing Role hierarchy definition- > <INHERITES FROM = ri To = ryX/INHERITES> <! -Foreign-interfacing Role hierarchy definition- >

In this format, foreign-interfacing role is represented as a set of INHERITES elements, each of which associates a foreign-interfacing role with its direct child role. The syntax of foreign-interfacing role hierarchy defines a new XML tag of type INHERITES with a required FROM (foreign-interfacing role ri) and TO (foreigninterfacing role rj) attribute values which indicate foreign role ri is a direct parent foreign-interfacing role of q.

Example 4: Foreign-interfacing Role Assignment An example of foreign interfacing role assignment in the foreign domain is shown below where foreign interfacing role G is a direct parent of H, foreign interfacing role H is a direct parent of I, etc.
<! -Foreign-interfacing role hierarchy definition- > <INHERITSFROM = "G" To "H" x/lNH ERITS> <INHERITSFROM = "H" To `T x/IN H E R IT S> <INHERITSFROM = "J" To T ' ></INHERITS>

<INHERITS FROM = "K" To "H"x/INHERITS> </ -Foreign-interfacing role hierarchy definition- >

36

The detailed description o f XML-based security policy system for the foreign domain is given in Appendix D and the interface o f the security policy is shown in figure 3.5.
Ip PRAC2.xnil - XML Marker version
0e Ecfit · View Options
a

1.1

Navigate
; >o

Het>


B -l

y

« x m l v er sio n = "1.1" > <PRAC-MODEL TYPE= "PRAC2_P0LICV'-> < 1 - B a s ic E l e m e n t s - > A i-F oieigii-lirtertacin g P rn tlege s e t d efin itio n - > < FOREIGN In te ila c in u PRIVILEGE ID= "p1" > < FOREIGN I n le ifa c iiig PRIVILEGE ID= "p2" > FO R EIG N -lnteitacilig PRIVILEGE ID= "p3" » c FO R EIG N -lnteitacilig PR M LEG E ID= "p4" > < FO REIG H -lnteitaciiig PRIVILEGE ID= "pS" > « FOFtEIGH-Inteitacing PRIVILEGE ID= "p6" > « /-F o ie lg ii- liit e c fa c iiig Privilege s e t d efin itio n - >

FOREIGN liM eiFociiig FOREIGN lin e if a c iliu < /FO REIGN-lrneitaciiig < /F O R £IG N .|in eitaciiiu «/FOREIGN lin e ila c t n g «/FOREIGN In le if.ic iiig

PR1VILEGE> PRIVILECE> PR M L E G E » PR M L E G E » PRIVILEGE> PR M L EG E >

l#A
u±

T .m
T tiiS

«I F oreign liH erFaciiig R o le d efin itio n - : « FOFtEIGH-lrrtertacing ROLE ID= « FO R EIG N -im eitacing ROLE ID= « FOFtEIGN-lnteifociiig ROLE 10= « FOFtEIGN-liiteitocing ROLE ID= « FO FtEIGN-lnleitacing ROLE 10=

0 " > «/FOFtEIGN-lnleilacing ROLE» H " » «/FOREIGN-lnterfaciiig ROLE» r » «/FOREIGN liM erlacin g ROLE» J " » «/FOREIG N-hitetfacing ROLE» K" » «/FOREIGN-lirterfacing ROLE»

Tree Seleclion Browser
Ready Pos 984 6 . Ln 2QS. Col 1

Figure 3.5: A Security Policy Interface of Appendix D

3.3.2 Administration o f XML-based PRAC Security Policy System
The control center administrates the XML-based PRAC policy system for the host computer network domain. The network administrator o f the control center defines the PRAC policy for the entire system as well as the policies for all local domains. There are four local domains in a typical power system computer network: generation domain, transmission domain, distribution domain, and customer load domain. Each local domain loads its own XML-based PRAC policy from the control center. This allows the control center to administrate the PRAC policy for each local domain and 37
PROPESTYOF

RYERsew trnwgsiTYum m y

to enforce consistence in policy administration. The PRAC policy has the same XML structure but different role hierarchies for different local domains. An example of the XML-based security policies loaded from the control center to Local Domain 1,2, 3, and 4 is shown in Figure 3.6.

XML-based PRAC policy for Enterprise Domain

Created XML Based PRAC Local Domain 1 Security Policy

Created XMLBased PRAC Local Domain 2 Security Policy

Created XMLBased PRAC Local Domain 3 Security Policy

Created XML Based PRAC Local Domain 4 Security Policy

1r Local Domain 1

1r Local Domain 2

1r Local Domain 3

1r Local Domain 4

Figure 3.6; XML-based Policy Loaded From Control Center

3.4 Privilege Assignment Procedure for PRAC Model
This thesis has designed a procedure for assigning the privileges to the roles in the PRAC model for the power system applications. Three study cases shown in Figure 3.7 are considered in the following. Case 1: User Access to Us Own Local Domain User X logs on Local Domain 1, the generation domain shown in Figure 3.7. User X is assigned with a role based on X's job functions and responsibilities. 38

The implementation o f the PRAC model for this case can be divided into three steps:

Foreign Domain 1
User Y
D istribution System s Custom Loads

Foreign Domain 2
C ustom Loads Distribution System s

Transm ission

G eneration

G eneration

Transm ission

Case 3
C ontrol C enter C ontrol C enter

Internet
U serX Case 2 Local Domain 1 Case 1
C ontrol C enter

Local Domain 2
Transm ission

G eneration

Local Domain 3
Custom L oads

Local Domain 4
D istribution System s

Enterprise Host Network Domain Figure 3.7: Procedure of the XML-based PRAC Security Policy

Step 1: User X requests for a privilege o f operation such as generating power into transmission system, increasing the generator bus voltage, etc. 39

Step 2: Local Domain 1 administrator determines whether to authorize the operation to the user X according to its local domain PRAC policy. Step3: User X is allowed to implement those operations if the privilege is authorized.

Case 2: User Access to Another Local Domain User X of Local Domain 1 logs on Local Domain 2 (the transmission domain shown in Figure 3.7). The implementation of the PRAC model for this case can be divided into four steps: Step 1: User X requests a privilege for an operation in Local Domain 2 such as transmitting power from generating station to the specified load, tripping the breaker on the high voltage transmission system, etc. Step 2: Local Domain 1 administrator sends the request to Local Domain 2 administrator after determining that user X holds an extended parent role of Local Domain 2. Step 3: Local Domain 2 administrator determines whether to authorize the access to user X according to Local Domain 2 PRAC policy, in which the extended parent role that user X holds has the privilege of the requested access. Step 4: User X is allowed to implement this access if the privilege is authorized.

Case 3: Foreign User Access to Host Domain User Y from Foreign Domain 1, the transmission domain shown in Figure 3.7, requests for a privilege of an access in Host Domain, such as buying power from the transmission domain of the host, browsing the online electricity-trading database, etc. These requests are handled by the control center administrator in 40

Host Domain.

The implementation o f the PRAC model for this case can be

divided into four steps: Step 1; User Y o f Foreign Domain 1 sends the request to the control center administrator o f Host Domain. Step 2: The control center administrator o f Host Domain responds to User Y with a web page that guides Y to upload its digital credentials according to the PRAC foreign security policy o f Host Domain. Step 3: The control center administrator of Host Domain validates uploaded digital credentials o f User Y and determines whether to authorize the privilege o f request operation to User Y. Step 4; User Y is allowed to implement these operations if the privilege is authorized.

The above has presented the method for managing policy using XML. The motivation o f this method is to simplify PRAC policy administration for power system computer networks. Unlike most existing implementations for other applications, with this method, the authorization is independently defined and is separated from policy representation and from implementation mechanisms.

3.5 Concluding Remarks
This chapter has presented a security management architecture that was specially designed for power system computer networks. This chapter has illustrated that this

architecture is capable o f handling an electricity enterprise host domain and multiple foreign domains. This chapter has presented the PRAC model, a specific role-based access

41

control model developed for the power system computer networks. This chapter has shown that PRAC extends the capability of the conventional role-based access control models for handling multiple computer network domains. This chapter has established an XML-based PRAC security policy system for the electricity power system enterprise domain and for connections with the foreign computer network domains. Examples have been given to illustrate this policy system. Finally this chapter has presented a procedure for assigning the privileges to the roles in the PRAC model for the power system applications. Three study cases have been given to illustrate the procedure.

42

C hapter 4

Pow er-system R ole-based kEy M anagem ent (PREM )

This chapter details a new key management designed in this thesis for electricity power system computer networks. This key management is the core o f the network access

control developed in Chapter 3. This new management is named as Power-system Rolebased kEy Management (PREM) in this thesis. The PREM uses one-way hash functions and utilizes their advantages o f computationally efficient and irreversibility. The

irreversibility characteristic o f one-way hash functions, selected by this thesis for PREM implementation, offers security in the role-based hierarchy structure such that the roles o f lower levels are virtually impossible to derive the keys o f the higher levels for unauthorized accesses. This chapter presents the development o f the PREM for the role hierarchy in a local network domain. There are four core components in the PREM. The first core component is the rules for key generation designed in this thesis research. This chapter illustrates that the rules will uniquely define the key for each role, as the same rules are used for both key generation and key derivation.

43

The second core component of the PREM is the key management designed in this thesis research for dynamic hierarchy. Under the open access policy, the hierarchy for the electricity power system computer networks with multiple domains subjects to dynamic changes that include frequently adding, deleting, and changing roles or objects, or modifying the relationships among roles as well as role and object. For whatever dynamic changes in the hierarchy, the key management of the PREM only needs to deal with the affected portion in the hierarchy. This chapter will show this significant advantage of the PREM in efficient key management, particularly for the power system computer networks with dynamic hierarchy due to the open access pressure. The third core component of the PREM consists of two algorithms: one for the key generation and one for key modification. Both algorithms are based on the key generation rules to calculate the key for a role or for an object in a role hierarchy. The fourth core component of the PREM is the procedure for object assignments. The procedure is designed for the user to access encrypted objects such as encrypted files. In this chapter, the PREM is extended from its prime design for one power system computer network local domain to the design that can handle multiple local domains. The extended PREM, developed in this thesis research, controls the access to the multiple local domains by developing two additional core components. First an architecture for the extended PREM is specially designed to manage the access for multiple local role hierarchy domains. Second, an object assignment protocol for multiple local domains is developed in this thesis research. The extended PREM decentralizes the key management for each local domain that is independently managed by its own local domain

44

administrator. Any change o f the role hierarehy structure in one local domain does not affect the keys o f other local domains. The following lists the sections in this chapter. Section 4.1 presents the PREM for efficient single-domain key management. This

section shows 4 core components in the PREM that include rules for key generation, key management for dynamic hierarchy, algorithms for key

generation and key modification, and procedure o f object access using keys. Section 4.2 extends the PREM from one local domain to multiple local domains in the power system computer network. A key management architeeture and an object assignment protocol are designed as the core components o f the extended PREM. Section 4.3 provides the concluding remarks o f this chapter.

4.1 PREM for Single Local Domain
This section presents the development o f the PREM for the role hierarchy in a power system computer network local domain. The PREM developed in this thesis research uses one-way hash fimctions. The two main advantages o f using the one-way hash function [32] for implementation o f the PREM are: one for computationally efficient and one for security o f irreversibility. The irreversibility characteristic o f the one-way hash function is utilized to offer high security in the role-based hierarchy structure such that the roles o f

lower levels are virtually not possible to derive the keys o f the higher levels for unauthorized accesses.

45

For a given role hierarchy that includes roles and objects in a local domain, a set of one-way hash functions {Hi, H2, ... , Hn} are chosen in the PREM to generate the keys, where n is the maximum number of direct child roles that a role can directly access in the role hierarchy. These hash functions are public known. In a role hierarchy, a role is called a dead-end role if it has no direct parent roles. As an example shown in Figure 4.1, role A and D are dead-end roles. A key generated for a role is called as a role key, and for an object is called as an object key. The keys are generated by the local domain security administrator. The following discusses the core components of the PREM that include the basic rules for key generation, the key management for dynamic hierarchy, the algorithms for key generation and key modification, and the procedure of object access using keys.

4.1.1 Rules for Key Generation
This section presents the first core component of the PREM that is the rules for key generation designed in this thesis research. Also this section illustrates that the rules will uniquely define the key for each role, as the same rules are used for both key generation and key derivation. The rules are given below:

Rule 1: For a dead-end role, the network security administrator assigns it an arbitrary key. Rule 2: If a role has only one direct parent, then the key of this role will be generated by the hash function Hi (K), where i means that the role is the direct child of its

direct parent role (form left to right), and K is the key of its direct parent role.

46

Rule 3: If a role has more than one direct parents, then the key o f this role will be generated by a combination o f hash functions in such a way that the key equals to
Hi (Hi (Kx), Hj (Ky), ... ), where K x , K y , ... are the keys o f its direct parent roles

(from left to right), and i, j , ... means that the role is the direct child role o f the parent role with key Kx , the child roe o f the parent role with key Ky, etc.

(from left to right)

(from left to right) direct

Figure 4.1 shows an example illustrating that the above rules can uniquely define the key for each role. In Figure 4.1, since the maximum number o f direct child roles for every role in the role hierarchy is two, two hash functions arc chosen, such as H i and H i. Suppose that key K1 is assigned to the dead-end role A and key K2 is assigned to the dead end role D. The keys for all non-dead-end roles in the role hierarchy are generated as follows: K1

K ll

K12

K 22( F

K23 f G

K 24f H

K31

oi

K32

K33
02 03

K34
04

Figure 4.1 : Derived Keys for Roles and Objects in a Role Hierarchy

47

For the roles that have only one direct parent roles, such as role B, the key of role B, K ll, will be Hi (Kl). For the roles that have more than one direct parent roles, such as role C, the key of C, K12, will be H2 (H2 (Kl)), Hi (K2)). However, in order to derive the key of role C from role A or D, some parameters must be known. Role D must know the value of H2(Kl), Role A must know the value of Hi (K2). To be noted that only the roles that have more than one direct parent roles should have those parameters. In a role hierarchy, a role may have privileges on one or more objects. In order to encrypt or decrypt the object for a role in a role hierarchy, the method that used to generate the key for the objects is solved in a way that is similar to the role keys. The difference for the object key generation method is that an object key value is same as the key value of a role if it is the only role to the object. In Figure 4.1, the key value of object 01 is same as the key value of role E and the key value of object 04 is same as the key of role H. If an object is directly accessed by more than one role, the object key generation method follows the key generation rules. For instance, the object key K32 is derived as H2 (H2 (K21), Hi
(K22)).

4.1.2 Key Management for Dynamic Hierarchy
This section presents the second core component of the PREM that is the key management designed in this thesis research for dynamic hierarchy. Under the open access policy, the hierarchy for the electricity power system computer networks with multiple domains subjects to dynamic changes that include frequently adding, deleting, and changing roles or objects, or modifying the relationships among roles as well as role and object. For whatever dynamic changes in the hierarchy, the key management of the PREM
48

only deals with the affected portion in the hierarchy.

This section will show this

significant advantage o f the PREM in efficient key management, particularly for the power system computer networks with dynamic hierarchy due to the open access pressure.

A) Adding a Role or an Object I f a role is added as a dead-end role, the local domain security administrator assigns a key to this new dead-end role and regenerates the keys o f its direct and indirect child roles as well as the associated objects. For instance, in Figure 4.2, if a new dead-end role N is added, the role keys o f C, D, F, G and H as well as object keys o f 0 2 , 0 3 and 0 4 are regenerated.

Kl K2 Kl K12

K21f E

K 22f F

K23 f G

K31

Ol

K32

02

K33

03

K34

04

Figure 4.2: Adding a Dead-end Role

I f an added role is not a dead-end role, the local domain security administrator derives the key o f this added role from its direct parent roles according to the key generation rules, 49

and then regenerates the keys of its direct and indirect child roles. For example, in Figure 4.3, if the new role N is added as the direct child role of A and direct parent role of C and
H, the role key of N is then generated from role A. The role keys of C, F, G and H as well

as object keys o f 02,03 and 04 are also regenerated.

K ll

K12

K21f E

K22( F

K23f G

K24

u

K31

01

K32

02

K33

03

K34

04

05

Figure 4.3: Adding a Non-dead-end Role or an Object

If an object is added to the role hierarchy, the new object key is generated according to the key generation rules. For example, an object 05 is added to role H. Similar to add a non-dead-end role, the object key of 05 is generated from role H.

B) Deleting a Dead-end Role or an Object If a dead-end role R is deleted and one of its direct child roles S becomes the new dead end role in the role hierarchy after the deletion, then the original key of S does not need to

50

change. If a dead-end role R is deleted and one o f its direct child roles S just looses one o f its direct parents without becoming a new dead-end role, then the keys of S and S 's direct and indirect child role are regenerated. For example, in Figure 4.4, the dead-end role A is deleted and role B becomes a new dead-end role after the deletion o f A. The key o f role B does not need to change. Only the role keys o f C and its direct and indirect child roles are regenerated. To delete an object has no effects on the roles or other objects. Therefore, all o f the keys are kept same as before.

Kl

K ll

K12

K21

K 22f F

K 23f G

K 24( H

K31

Ol

K32

02

K33

03

K34

04

Figure 4.4: Deleting a Dead-end Role

C) C hanging R elationships Am ong Roles and Objects Suppose that role R is originally a direct parent role o f S, if role S becomes a dead-end role after deleting the relationship between R and S, the key o f S does not need to be changed. Otherwise, the keys o f S and its direct and indirect child roles need to be 51

regenerated. For example, if the relationship between role A and B, in Figure 4.5, is deleted and role B becomes a new dead-end role, then the key of B does not need to be changed. If the relationship between role A and C is deleted, the role keys of C, F and G as well as the object keys of 02 and 03 need to be regenerated. Kl

K ll

K12,

K21f E

K22f F

K23f G

K24f H

K31

01

K32

02

K33

03

K34

04

Figure 4.5: Deleting a Relationship Among Roles

K ll

K12

K21f E

K22( F

K23f G

K24

K31

01

K32

02

K33

03

K34

04

Figure 4.6: Adding a Relationship Among Roles 52

If a new relationship is added between two roles R and S, and R becomes a direct parent role o f S, then the object keys o f S and its child roles need to be regenerated. For example, if a new relationship between role B and G, shown in Figure 4.6, is added, then the key o f role G and the key o f object 0 3 need to be regenerated.

4.1.3 Algorithms for Key Generation and Modification
This section presents the third core component o f the PREM that consists o f two algorithms: one for the key generation and one for key modification. Both algorithms are based on the key generation rules to calculate the key for a role or for an object in a role hierarchy. An example o f a role hierarchy is shown in Figure 4.7. There are one or more than one paths from a dead-end role to the role or object whose key needs to be derived. To reduce the calculation time of generating a key value, the algorithm searches for the least-expense path from each dead-end role to the role or object. According to the key generation rules, the time used to calculate a key value of a role or an object depends on the number of hash function and the time used by each hash function. Assume that all hash functions cost same time, then the execution time to calculate a key value depends on the number of hash functions in each path. For example, in Figure 4.7, to calculate the key value o f object 0 3 , we have three different paths: (1) D-H -03 (2) D -C-G -03 and (3) A -C-G -03. The number o f hash functions used in path (1) is

3+4+8=15, the number o f hash functions in path (2) is 3+4+8=15, the number o f hush functions in path (3) is 1+8=9. Thus, path (3) should be the least-expense path that is shown in Figure 4.7. If there are more than one least-expense path, the algorithm will pick

53

up any of them. Finally, the algorithm calculates the key of the role or object based on the key generation rales introduced in section 4.1.1.

Kl

Ol

02

K33

03

04

K12= H2(H2 (Kl), Hi (K2)) K24=Hz(K2)

K23= Hz (K12) = Hz (Hz(H2(Kl), Hi (K2))) K33=Hi(Hi(K23),Hi(K24))

Figure 4.7: An Example of Key Generation

The key generation algorithm is shown as follows:

A) Algorithm 1: Key Generation Algorithm /* For a given role or object R in a role hierarchy, calculate the key value of R
{

For each dead-end role in the role hierarchy { Search for the least-expense path between the role or object R and the dead-end role
}

54

Calculate the key value o f the role or object according to the key generation rules defined in section 4.1.1. Output the key value o f the role or object R.

The local domain security administrator is in charge o f generating key values for roles and objects. The generated role keys and roles will be stored in role key database. The object key and the encrypted objects will be stored in the object key database. The general procedure o f the key generation includes two steps shown in Figure 4.8.

O bject Key D atabase E n cry p ted O bject Object #1 Object #2 Object #n O bject Key Key FI Keyp2
---

Role Key D atabase Role Role #1 Role #2 Role #n Role Key KeyRi KeyR2 Keyan

Keypn

(2 r Key G eneration A lgorithm
Local Domain Security (1 ) Administrator

(2 )

Create

^ Role H ierarchy

Key G eneration Rules

Figure 4.8: Key Generation and Object Encryption in a Local Domain

Step 1

The local domain security administrator creates its local domain role hierarchy. 55

Step 2

The role hierarchy is searched using a searching algorithm such as breath-first search or depth-first search. For each role being searched, the key generation algorithm is called to generate the key value of the role. Role and its key value are saved in the role key database. For each object being searched, the key generation algorithm is called to generate the key value of the object, then the generated key is used to encrypt the object. The encrypted object and key value of the object are saved in the object key database.

Besides generating key values for roles and objects in a local domain, the local domain security administrator is also in charge of dynamically updating key values for roles and objects in the role hierarchy. A key modification algorithm is presented. When the role hierarchy is modified (detailed has been discussed in section 4.1.2), the key modification algorithm searches for all the roles and objects that are affected. For each affected role, the key generation algorithm will be invoked to update its key value in the role key database. For each affected object, the key generation algorithm will be invoked to calculate the new key for the object, decrypt the encrypted object with the old key and re-encrypt the affected object with the new key and update the object and its key value in , the object key database.

B) Algorithm 2: Key Modification Algorithm Key Modification Algorithm ()
{

Search the role hierarchy and for each role being affected by a modification { Call key generation algorithm and calculate the new key value for the role Update the key value in the role key database 56

} Search the role hierarchy and for each object being affected by a modification { Call key generation algorithm and calculate the new key value for the object Decrypt the object with old key and re-encrypt the object Update the key value and object in the object key database

}

O bject Key D atabase E n cry p ted O bject Object #1 Object #2 Object #n O bject Key Keypi Keyp2
---

Role K ey D atabase Role Role #1 Role #2
---

Role Key KeyRi KeyR2 KeyRn

Keypn
(3]

Role #n (2)

Key M odification A lgorithm
(3)
Local Domain Security (1 ) Administrator

Role H ierarch y M odify

Key G eneration Rules

Figure 4.9: The General Procedure for Key Modification in a Local Domain

The general procedure o f the key modification is comprised o f the following three steps and shown in Figure 4.9. Step 1 The local domain security manager modifies the role hierarchy.

57

Step 2

The key generation algorithm is invoked to generate new keys for roles that are affected by the modifications. The key value of each affected role is updated and saved in the role key database.

Step 3

The key generation algorithm is invoked to generate new keys for objects that are affected by the modifications. Each affected object is decrypted first with the old key and re-encrypted by the new generated object key. The key value and the object are updated in the object key database.

4.1.4 Procedures for Object Assignments
This section presents the fourth core component of the PREM that is the procedure for object assignments. If a local domain user requests to access encrypted objects such as encrypted files, the user's membership of role should be verified by a database called the database of roles and users. The database of roles and users includes user's username, password, member of role and a symmetric key. The symmetric key is shared with his/her local domain security administrator and used for secure communication between the local domain user and the local domain security administrator. The general procedure of the object assignment method is comprised of the following five steps and shown in Figure 4.10. Step 1: A local domain user S requests to access an encrypted object such as an encrypted file T. His/her username and password are required to be submitted to verify his/her role membership. Step 2: The local domain security administrator verifies the user's role membership by checking the database of roles and users. 58

Step 3 : The local domain security administrator checks the role hierarchy to determine if the role S holds can access encrypted file T. Step 4: I f S can access file T, the local domain security administrator checks the object key database and decrypt the encrypted file T using its object key. Then, the decrypted file is encrypted again with the symmetric key shared by the local domain security administrator and user S. The symmetric key is stored in the database o f roles and users. Step 5: This encrypted file is sent to the local domain user S. User S can decrypt it using the symmetric key.

D atabase of Roles and Users Role Role #1 Role #2 Role #n Passw ord ***** ***** ***** Sym m etric Key Key #1 Key #2 Key #n (2) User UserRi UserR2
. -.

UserRn

E ncrypted O bject D atabase E ncrypted O bject File #1 File #2 O bject Key Keypi Keyp2
(4)

...
File #n

-Keypn

Local Dom ain Security A d m inistrator
(3)

Local D om ain (5) Users

Role H ierarchy Figure 4.10: Procedure o f the Object Assignment Method

59

4.2 PREM Extended for Multiple Local Domains
This section shows that the PREM is extended from one power system computer network local domain to the multiple local domains. The extended PREM, developed in this thesis research, controls the access to the multiple local domains by developing two additional core components. First, an architecture for the extended PREM is specially designed to manage the access for multiple local role hierarchy domains. Second, an object assignment protocol for multiple local domains is developed in this thesis research. The extended PREM decentralizes the key management for each local domain that is independently managed by its own local domain administrator. Any change of the role hierarchy structure in one local domain does not affect the keys of other local domains. In an enterprise domain, there are hundreds of privileges and thousands of users located in different local domains. The enterprise domain can be divided into multiple local domains; each local domain has a role hierarchy that is administrated by its local domain security administrator. Figure 4.11 shows an example of an enterprise domain that includes role hierarchies of local domains 1 and local domain 2. In the role hierarchy of local domain 1, role D is a direct parent role of C and H, role C is a direct parent role of F and G and role D is an indirect parent role of F and G. Similarly, in local domain 2, role I is a direct parent role of role J and K, role J is a direct parent role of role L and M, and role I is an indirect parent role of L and M. A role in one local domain may perform some tasks from other local domains and therefore needs to have privileges to access to other local domains. For instance, if role C in local domain 1 needs to have privileges of role M in local domain 2, role C has to be an 60

extended parent role o f M in order to perform M 's privileges. Similarly, Role I in local domain 2 is an extended parent role o f D in local domain 1 and D is an extended child role o f I.

Local domain 1

Local domain 2

Figure 4.11: An Example o f Role Hierarchies in Multiple Local Domains

The key management in multiple local domains is related to the inter-relationships o f the roles in different local domains. Each local domain has its own role hierarchy that is administrated by its local domain security administrator. If a single key generation

algorithm is applied for multiple local domains, any modification in a local domain could affect the key value o f roles in other local domains. For instance, if the key value o f role C in local domain 1 is changed, the keys o f F and G in local domain 1 will be changed. Also, the key values o f role M in local domain 2 will be changed. When multiple loeal domains

61

inter-connected with each other, the key management work will be a nightmare for local domain security administrators. To deal with this problem, a security management architecture of PRAC model for multiple local domains is designed.

4.2.1 Key Management Architecture for Multiple Local Domains
The key management architecture is comprised of multiple local domains. Each local domain includes a local domain security administrator, an object key database, a role key database and the clients. Figure 4.12 gives an example of the key management architecture for the multiple local domains such as local domain 1 and local domain 2.

Object key Database

Object Key Database

Client

Local Domain 1 Security administrator

Local Domain 2 Security administrator

Client

Role Key Database

Role Key Database

Figure 4.12: Key Management Architecture for Multiple Local Domains

The main functions of each element of the architecture are described as follows:

62

·

The local domain security administrator is in charge of authorizing roles and objects to the users in its local domain as well as to the users of other local domains that requires to access the objects o f this domain.

·

The client accepts the application of accessing the objects from its local domain users and returns the authorized objects back to the users.

·

Role keys are stored in the local domain role key database. Encrypted objects and their corresponding object keys are stored in the object key database.

4.2.2 Object Assignment Protocol for Multiple Local Domains
Based on the key management architecture presented above, an object assignment protocol for multiple local domains is developed. A user in one local domain must hold an extended parent role in order to access an object in other local domains. A negotiation must be implemented between different local domain security administrators in order to establish the access between an extended parent role and an extended child role. Suppose that in local domain 1, a user who is a member o f a role R wants to access an encrypted object T in local domain 2, the user has to first give the request to the local domain 1 security administrator. Step 1: The administrator in local domain 1 first authenticates the user and its membership o f the role R that the user holds, then give the request to the administrator in local domain 2. Step 2: The administrator in local domain 2 determines whether the object T can be accessed through an extended child role o f R.

63

Step 3: If the access is established between role R and its extended child role in local domain 2, the administrator in local domain 2 encrypts the object and sends it to the administrator of local domain 1. Step 4: The domain 1 administrator decrypts the object using the key that is shared with the domain 2 administrator, and then send it to the user.

- - "1

Cl

02

03

04

05

06

07

Local Domain 2

Local Domain 1

Figure 4.13: Inter Relationship of Role Hierarchies in Multiple Local Domains

For example, in Figure 4.13, if a user with role 1 in local domain 1 requests to access object 03 in local domain 2, the user must first apply the request to the administrator of local domain 1. After two domain administrators negotiate, an extended parent-child relationship is established between role I and role D. The administrator of local domain 1 authenticates the user and its membership of the role, and then sends the user's request to the administrator in local domain 2. The administrator of local domain 2 determines 64

whether object 0 3 can be access by the extended child role D of Role I in local domain 2. Once determined, the administrator of local domain 2 encrypts object 0 3 with the encryption key that is shared with the administrator of local domain 1, and sends it out to local domain 1 security administrator. The administrator o f local domain 1 decrypts the object 0 3 and sends to the user o f role I in local domain 1.

4.3 Concluding Remarks
This chapter has detailed a new key management named PREM in this thesis for electricity power system computer networks. This chapter has shown that PREM uses one-way hash functions and utilizes their advantages of computationally efficient and irreversibility. The irreversibility characteristic o f one-way hash functions, selected by this thesis for PREM implementation, offers security in the role-based hierarchy structure such that the roles o f lower levels are virtually impossible to derive the keys o f the higher levels for unauthorized accesses. This chapter has presented the development o f the four core components in the PREM. The first core component is the rules for key generation

designed in this thesis research. This chapter has illustrated that the rules uniquely defines the key for each role. The second core component is the key management for dynamic hierarchy. For whatever dynamic changes in the hierarchy, the key management o f the PREM only needs to deal with the affected portion in the hierarchy. This chapter has shown this significant advantage o f the PREM in efficient key management, particularly for the power system computer networks with dynamic hierarchy due to open access pressure.

65

This chapter has shown that the PREM is extended from its prime design for one power system computer network local domain to the design that can handle multiple local domains. The extended PREM, developed in this thesis research, controls the access to the multiple local domains by developing two additional core components. An architecture for the extended PREM is specially designed to manage the access for multiple local role hierarchy domains. An object assignment protocol for multiple local domains is developed in this thesis research. The extended PREM decentralizes the key management for each local domain that is independently managed by its own local domain administrator. Any change of the role hierarchy structure in one local domain does not affect the keys of other local domains.

66

C hapter 5

Platform for Com prehensive A ssessm ent o f PREM

This chapter presents a platform for the comprehensive assessment o f PREM, an efficient and high security key management developed in Chapter 4, for the role-based access control o f power system computer networks. For applications in real power

systems, it is absolutely important to fully assess the security and efficiency of any network access control method prior to its implementation. However in practice, it is very difficult particularly within the university environment, to thoroughly assess the network access control. As a groundwork for remedying this real-world difficulty, this chapter

proposes a simple platform for comprehensive assessment of the PREM. This chapter presents two stages in the simple platform for fast and economical, but not thorough and not precise, assessment of the PREM. The first stage for functionality

assessment o f PREM uses two typical cryptographic algorithms: one for one-way hash function, one for symmetric key encryption. The second stage in the platform for

benchmark assessment o f PREM is via the comparison using typical existing key management method. Three study cases are given in this chapter to illustrate the

assessment o f the two key management methods. 67

The following lists the seetions in this ehapter. Section 5.1 presents the first stage of a simple platform for assessing the PREM with the typical cryptographic algorithms. Section 5.2 presents the second stage of a simple platform for assessing the PREM via the comparison with typical existing key management method. Session 5.3 provides the concluding remarks for this chapter.

5.1 PREM Assessment Platform with Typical Cryptographic Algorithms
This section presents the first stage of a simple platform for assessing the PREM using two typical cryptographic algorithms: one for one-way hash function, one for symmetric key encryption.

A) One-way Hash Function: MD5 The MD5 (Message Digest) is a one-way hash function, meaning that it takes a message and converts it into a fixed string of digits, also called a message digest. When using a one-way hash function, one can compare a calculated message digest against the message digest that is deciypted with a public key to verify that the message hasn't been tampered with. The performance of MD5 may vary wildly from 30 to 90 M bit per second [33], depending on the network computing facilities.

B) Symmetric Key Encryption: Triple DES Triple DES is a symmetric ciyptographic algorithm. Its performance has been tested on a PC running Linux with a Pentium III CPU of 860MHz and 256MB of RAM, with the
68

encryption/decryption operations on a 10 MB file, and the encryption algorithms using a key size o f 112 bits [34]. The CPU execution time for key generation is 2.9 seconds, for encryption is 12.5 seconds, and for decryption is 12.6 seconds.

5.2 PREM A ssessm ent Platform via Typical Key Management
This section presents the second stage of a simple platform for assessing the PREM via the comparison with typical existing key management method. As a fact in all key

management methods, a modification of the network hierarchy, or its role and an object, or the relationship of roles and objects in the hierarchy most likely will affect the key values of other roles or objects. Compared with the typical key management method proposed by Akl and Taylor discussed in Chapter 2, the PREM updates much less number of key values for the roles and objects when new roles are added to the role hierarchy. Suppose the performance comparison between the two key management methods is based on the same role hierarchy and the each object is the same size of 10 MB. In the following, three study cases are given to illustrate the assessment of the two key management methods.

Case Study 1: Generating Keys for Roles and Objects in a Role Hierarchy To generate the keys for roles and objects in a role hierarchy, the total time used, T, is comprised o f three parts including the time for generating the keys of roles, TkeyR , the time for generating the keys of objects, Tkeyo , and the time for encrypting the objects. To. The total time to generate keys for a hierarchy is simply calculated by (5.1).
T = TkeyR + TkeyO

+

To

(5-1)

69

Suppose that MD5 is chosen to generate the keys. The running time of one hash function is Th , the number of hash functions used for each role j in the role hierarchy is Nj, and the number of roles in the role hierarchy is N r , then the time for generating keys for all roles in the hierarchy is calculated in (5.2).
TkeyR = f ;
j= \

Th * Nj = T h * 2
J= i

Nj

( 5 .2 )

Suppose that the number of objects in the role hierarchy is No , and the number of hash functions used for generating a key for each object b is N y, then the time for generating keys for all objects in the hierarchy is calculated in (5.3).

Tkeyo = Ê
b= \

TH*Nb=Tn* j
b= \

Nb

(5 . 3 )

Suppose that the running time for encrypting an object is Te , and the number of objects in the role hierarchy is Nq , then the time for encrypting all of objects in the hierarchy is calculated in (5.4). According to the calculations of (5.1), (5.2), (5.3) and (5.4), the total time used to generate keys of roles and objects in the hierarchy is calculated in (5.5). To = Te * No A T = Th * j
j-l

(5.4) ^ Nj + Th * 2
b=l

Nb+TE*No

(5.5)

When thePREM is compared with Akl and Taylor's keymanagement method, for a given rolehierarchy, both methods have the same values of Th,
N r, N q,

and Te . The

PREM executes the hash functions more than Akl and Taylor's method, and therefore the values of Nj and Nh of the PREM are larger than those used in Akl and Taylor's method. 70

However, this time difference could be ignored because the basb functions such as MD5 uses much less execution time than the encryption time T e and T = T e * N q. Therefore, the time used to generate the keys of roles and objects is almost same for both key management methods.

Case Study 2: Adding a Role in the Role Hierarchy As key management discussed in Chapter 2, it is the fact that when a new role is added into a role hierarchy after all keys of roles and objects have been generated using Akl and Taylor method, the key value of new role may possibly be obtained from any of the other roles. This significantly degrades the security of the network access. To remedy this

situation, a complete key generation procedure of Akl and Taylor method must be performed for all roles and objects. On the other hand, the PREM is capable o f accommodating any networking changes due to adding new roles into the role hierarchy. W hen a new role is added to the role hierarchy, the running time
T add

is comprised o f

three parts including the time for updating the keys of the affected roles, TxeyADo , the time for decrypting the affected objects, TdAoo , and the time for re-encrypting the affected objects using updated new keys, T cadd. The total time to update the keys of the affected objects in a hierarchy, due to adding a new role, is simply calculated by (5.6).
T add

=

T ^eyA D D

+

T dA D D

+

T cadd

(5-6)

Suppose that the running time of a hash function is T h. The number of basb functions used for a role j is Nj . Tbe number of tbe affected roles is N r , wben a role is added in tbe role bierarcby. Tbe number of the affected object is N f and the number of basb functions used for eacb object t is N , , Tbe time for generating all affected keys is calculated in (5.7). 71

TkeyADD= f ]
;= l

T,, *

Nj + ^
(=1

T n * N t = TH

* (Z
;=1

N j + 2 Nt)
'=*

(5 .7 )

Suppose that the running time of decrypting an object is To, the time for encrypting an object is Te , and the number of affected objects is Nf when a new role is added in the role hierarchy, then the time for decrypting the affected objects is calculated in (5.8). According to the calculations of (5.6), (5.7), (5.8) and (5.9), the total time used to generate keys of roles and objects in the hierarchy is calculated in (5.10).
TdADD= T o * N f
TeADD=TE*Nf

(5.8)
(5 .9 )

N r
T add = T h * ( X
;=1

N j+ 2
(=1

N t) + T B *N f + T D * N f

N r
= Th * ( 2

Nf
N j + 2 N,)+(TE+TD)*Nf

/= 1
-(T E + T o )* N f (5.10)

Comparing the PREM with Akl and Taylor method, for a given role hierarchy, if a new role is added, the different time value of Tadd for both key management methods is mainly depends on the time for encryption and decryption as well as the number of the affected objects since the execution time of hash function is much more smaller than the execution time of encryption or decryption. Therefore, the total execution time of updating the keys, due to adding a new role to the hierarchy, approximately equals total time of encryption and decryption the affected objects. For example, in Figure 5.1, suppose each object is 10 MB and a new role O is inserted in the role hierarchy. Role O is a direct child role of A and a direct parent role of H. If 72

using Akl and Taylor method to update the keys o f the affected object, all objects in the role hierarchy need to be regenerated. Suppose that 3DES is chosen as the encryption and decryption algorithm to implement both key management methods. As 3DES assessed in Section 5.1, the execution time to encrypt a 10MB file needs 12.5 seconds, and to decrypt the same size file needs 12.6 seconds. The running time method is calculated as follows;
T a d d ~ (T e+ T d )
T
add

using Akl and Taylor

* N f = (12.5+12.6)*8=200.8 seconds

oi

02

03

04

05

06

07

08

Figure 5.1 : An Example of Role Hierarchies

If the PREM is used to update the keys of the affected objects, only the keys o f objects 0 3 and 0 4 need to be regenerated. The key generation running time T add o f the PREM using 3DES is calculated as follows:
T add ~ (T e+ T d) * N f = (12.5+ 12.6)*2=50.2 seconds

73

Suppose that there are total 10000 objects in a role hierarchy. The running time of PREM and Akl and Taylor method is illustrated in Figure 5.2, in terms of number of affected objects. The total execution time difference indicates that the advantage of the PREM over Akl and Taylor method is distinct if the size of the objects in an enterprise is large and only small percentage objects are affected. Therefore, the PREM updates much less number of key values for the roles and objects when new roles are added to the role hierarchy. Time (Seconds)
300000 250000-

150000 100000 50000

AKL and Taylor s Method PREM

1000

3000

5000

7000 10000

fected Objects

Figure 5.2; Comparing PREM with AKl and Taylor's Method

Case Study 3:Deleting Roles/Objects or Changing Relationships Between Roles In a role hierarchy, if a role or an object is deleted or relationships between roles are changed, the same portion of objects are affected by using both key management method. Therefore, the running time is almost same under these situations.

74

5.3 Concluding Remarks
This chapter has presented a platform for the comprehensive assessment o f PREM for the role-based access control of power system computer networks. Since in practice it is very difficult particularly within the university environment, to thoroughly assess the network access control, this chapter therefore has proposed a simple alternative that consists o f two stages. The first stage for functionality assessment o f PREM uses two typical cryptographic algorithms: one for one-way hash function, one for symmetric key encryption. The second stage in the platform for benchmark assessment o f PREM is via the comparison using typical existing key management method. Three study cases have been given to illustrate the assessment.

75

Chapter 6

Conclusion

This thesis research has been successfully completed, with two developments: a new network access control, the PRAC, and a new key management, the PREM. The PRAC is an efficient Power-system Role-based Access Control that significantly increases the security of computer networks for power systems, and surmounts the challenges caused by typical security and reliability concerns due to current technological and political changes faced in the electricity power industry. The PREM is a secure Power-system Role-based IcEy Management that is developed to support the efficient operation of the PRAC.

6.1 Major Research Work Completed
The following presents a summary of major tasks accomplished in this thesis research.

A.

Exhaustive investigation has been conducted on the currently available techniques, models, and managements used for the computer network access control. The

investigation has identified that existing techniques do not well satisfy the strict requirements for reliable power system operations that initiated this thesis research.

76

B.

A security management architecture has been specially designed for power system computer networks. This architecture is capable of covering the network access

control to the electricity enterprise host domain and its multiple foreign domains.

C.

The PRAC model has been developed for the power system computer networks, which extends the capability of the conventional role-based access control models for handling multiple computer network domains. An XML-based PRAC security

policy system has been established for the host domain and for connections with the foreign domains.

D.

The PREM has been designed as an efficiency key management for the power system computer networks. This method uses one-way hash functions and utilizes their

advantages o f computationally efficient and irreversibility. Four core components in the PREM have been developed, that include rules for key generation, key management for dynamie hierarehy, algorithms for key generation and key modification, and procedure of object access using keys are diseusscd.

E.

PREM has been designed for dynamic hierarchy access control.

For whatever

dynamic changes in the hierarchy, the key management of the PREM only needs to deal with the affeeted portion resulted from the ehanges.

F.

PREM has been extended from its prime design for one power system computer network local domain to the design that can handle multiple local domains.
77

The

extended PREM controls the access to the multiple local domains by developing two additional core components: one is an architecture and one is an object assigiunent protocol. The architecture for the extended PREM is specially designed to manage the access for multiple local role hierarchy domains. The object assignment protocol is developed to guide and establish the access between multiple local domains.

G.

This chapter has presented a platform for a comprehensive assessment of PREM. Since in real-world practice it is very difficult, particularly within the university environment, to thoroughly assess any network access control, this chapter therefore has proposed a simple alternative that consists of two stages. The first stage for functionality assessment of PREM uses two typical cryptographic algorithms: one for one-way hash function, one for symmetric key encryption. The second stage for benchmark assessment of PREM is via the comparison using typical existing key management method. Three study cases have been given to illustrate the assessment.

6.2 Major Research Contributions
1. PRAC, a specific role-based access controlfor single computer network, has been developed, based on findings of exhaustive investigations that were conducted in this thesis research for security improvement of power system computer network.

78

2. E xtended PRAC, f o r multiple computer networks, has been designed for the access control to the host domain o f the power system being considered and its interconnecting domains o f neighboring power systems.

3. PREM, f o r single local computer network domain, has been developed for key management o f dynamic hierarchy access control using one-way hash functions and utilizing their advantages o f computationally efficient and irreversibility security.

4. Extended PREM, fo r multiple local computer network domains, has been designed for the host domain consisting a central domain for the power system control center network and several local domains for computer networks o f generation systems, transmission systems, distribution systems, and customer loads.

5. Platform fo r comprehensive assessment o f PREM has been established for fast and economical, but not thorough and not precise, assessment o f the key management developed in this thesis research.

6.3 Future W ork
The following presents recommended future work on the following areas:

79

·

Extend the PRAC model and PREM methods to solve the authorization and security concerns over the Internet.

·

Combine PRAC and PREM solution with the existing managing and monitoring security device for identifying cyber-based threats to the survivability of power substation control networks.

·

Carry out the PRAC solution in the research of distributed database authorization and XML database authorization.

80

APPENDIX A Specifications o f XM L-based PRAC Security Policy for Enterprise H ost Dom ain

This thesis research employs XML for the syntactic representation of the PRAC security policy system. The XML representation is comprised of two parts; Basic In this Appendix, the first part defines the

Elements and Relationships of Elements.

elements of the PRAC model for the host domain including role, privileges and constraints. The second part defines the relationships among the elements of the PRAC model for the host domain.

Part 1: Defines the Basic Elements o f PRAC Model for the Host Domain

·

Define Roles Role is represented by:
<! -- R o le d efinition-- > <R O L E lD=role-id x l RO LE>

The above syntax defines a new XML tag o f type ROLE with a required ID attribute value role-id.

81

·

Define Privileges Privilege is represented by:
<! -Privilege set definition-- > <PRIVILEGE \T)=prmlege-id x/PRIVILEGE>

The above syntax defines a new XML tag of type PRIVILEGE with required ID attribute value privilege-id.

·

Define Constraints Constraint is represented by:
<! -- Constraint set definition- > <CONSTRAINT ID - comtraint-id x/CONSTRAINT> <PARAMETER VALUE- parameter- valuesx / PARAMETER>

The above syntax defines a new XML tag of type CONSTRAINT with a required ID attribute of value constraint-id, the parameter values for the constraint are defined by a PAREMETER tag with a required VALUE attribute value parameter-value. PARAMETER VALUE is different for different kinds of constraints.

Part 2: Defines the Relationships Among the Elements for the Host Domain

$

Role Hierarchy (Role-Role Relationship) Role hierarchy is represented as a set of INHERITES elements, each of which associates a role with its direct child role. represented by:
82

For instance, a role hierarchy is

<! -- R o le hierarchy definition-- >

<INHERITES FROM = ri To %x/fiMTERITES>

The above syntax defines a new XML tag of type INHERITES with a required FROM (role ri) and TO (role ij) attribute values which indicate role ri is a direct parent role of role rj.

Privilege Assignment (Privilege-Role Relationship) A privilege assignment assigns privilege to a role and it is represented by:
<! -- P rivilege assignm ent definition-- > < P R IV -A S SIG N RO LE = ti P R IV IL E G E = m /.x/P R IV -A SSIG N >

The above syntax defines a new XML tag of type PRIV-ASSIGN with ROLE, and PRIVILEGE attributes in which role ti has a privilege mi.

Constraint Assignment (Constraint-Role Relationship) A constraint assignment assigns a set of role constraints to a role and it is represented by:
<! - R ole constraint assignm ent definition-- > < C O N S -A S S IG N RO LE = r7 CO NSTRA INTS = c7,

cm. > < /C O N S -A S S IG N >

The above syntax defines a new XML tag of type CONS-ASSIGN with a required ROLE and CONSTRAINTS attributes in which role rl has constraints o f c l, cm .

Extended Parent Role Assignment (Role - its Extended Parent Role)

83

An extended parent role assignment assigns a roles to be the extended parent role of a role in another local domain, and it is represented as:
<! - Extended parent role assignment definition- > <EXTENDED PARENT ROLE epp= xj, rk > </EXTENDED PARENT ROLE >

The above syntax defines a new XML tag of type EXTENDED PARENT ROLE with a required epp attributes in which role rj is the extended parent role of role rk.

Extended Child Role Assignment (Role - its Extended Child Role) An extended child role assignment assigns a roles to be the extended child role of a role in another local domain, and it is represented as:

<! - Extended child role assignment definition- > <EXTENDED CHILD ROLE ecp= xj, rk > </EXTENDED CHILD ROLE >

The above syntax defines a new XML tag of type EXTENDED CHILD ROLE with a required ecp attributes in which role q is the extended child role of role rk.

84

APPENDIX B An E xam ple o f PRAC Security Policy for Enterprise Host Dom ain

This Appendix shows an example o f PRAC security policy for an enterprise host domain according to the syntax defined in Appendix A.

< xm l version = " 1.0" >

<PR A C -M O D E L T Y P E = "P R A C I PO LIC Y ">

< --Local domain 1-- >

<! -- B a sic E lem ents -- >

<! --P rivilege set d efinition-- > <PR IV IL EG E ID = "p i " > </PRIVILEGE> <PR IV IL E G E ID = "p 2 " > </PRIVILEGE> <PRIVTLEGE ID = "p 3 " > </PRIVILEGE> <PR IV ILE G E ID = "p 4 " > </PRIVILEGE> <PRIVTLEGE I D - "p 5" > </PRIVILEGE> < / --P rivilege set definition-- >

<! - R o le definition-- > < R O L E I D = " A " > < /R O L E > <R O L E ID = " B " > </R O L E> < R O L E I D = " C " > < /R O L E >

85

<ROLE ID= " D " ></ROLE> <ROLE ID= " E " > </ROLE> <R O LEE)=" F " > </ROLE> <ROLE ID= " G " > </ROLE>

<J -Role definition- >

<! -Constraint set definition- > <C0NSTRAINTID=" C1 " > <PARAMETER VALUE= " hi h2"x / PARAMETERx/CONSTRAINT> CONSTRAINT ID= " C2" > <PARAMETER VALUE= " h3, h4"x / PARAMETERx/CONSTRAINT> CONSTRAINT ID= " C3" > <PARAMETER VALUE= " h5">< / PARAMETERx/CONSTRAINT> CONSTRAINT ID= " C4" > <PARAMETER VALUE= " h6, h7"x / PARAMETERx/CONSTRAINT> <CONSTRAINT ID= " C5" > <PARAMETER VALUE- " h8, h9" x / PARAMETERx/CONSTRAINT> CONSTRAINT ID= " C6" > <PARAMETER VALUE- " hIO"x / PARAMETERx/CONSTRAINT> CONSTRAINT ID - " 0 7 " > <PARAMETER VALUE- " hi l "x / PARAMETERx7C0NSTRAINT> CONSTRAINT ID = " 0 8 " > <PARAMETER VALUE- " h l 2"x / PARAMETERx700NSTRAINT>

<1 -Constraint set definition- >

<J --Basic Elements - >

< ! - Relationships o f Elements - >

<! -R o le hierarchy definition- > <INHERITSFROM = "A" To "B" ></INHERITS> <INHERITS FROM = "A" To "C"x/INHERITS> <INHERITS FROM = "B" To "E" > </INHERITS> <INHERITS FROM = "B" To "F"x/INHERITS> <INHERITSFROM = "0 " To "F" ></INHERITS>

86

<ENHERITS FR O M = "D " T o "F" > < /IN H E R IT S > <IN H E R IT S FR O M = "D " To "G "x A N H E R IT S > < / --R ole hierarchy definition-- >

<! -- P rivilege assignm ent definition-- > < P R IV -A S S IG N R O LE= "A " PRIVILEGE= "p l "x /P R IV -A S S IG N > < P R IV -A S S IG N R O LE= "B " PRIVILEGE^ "p2, p 3"x /P R IV -A S S IG N > < P R IV -A S S IG N R O LE= "C" PRIVILEGE^ "p3"x 7 P R IV -A S S IG N > < P R IV -A S S IG N R O LE= "B " PRTVILEGE= "p3"x yP R IV -A S S IG N > < P R IV -A S SIG N R O LE= "D " PRIVILEGE= "p4, p5"x y P R IV -A S S IG N > < / -- P rivilege assignm ent d efinition-- >

<! -- Constraint assignm ent definition-- > < C O N S -A S S IG N R O LE= "A " CO N STR A IN TS= "C8"> </C O N S-A SSIG N > < C O N S -A S S IG N R O LE= "B " C O N STR A IN TS^ "C 7"> < /C O N S-A SSIG N > < C O N S -A S S IG N R O LE= "C " C O N STR A IN TS= "C 5"> < /C O N S-A SSIG N > < C O N S -A S S IG N R O LE= "D " CO N STR A IN TS= "C 4"> </C O N S-A SSIG N > < C O N S -A S S IG N R O L E = "E" CO N STRAIN TS^ "C l, C3"> < /C O N S-A SSIG N > < C O N S -A S S IG N R O LE = "F " CO NSTR AINTS^ "C6"> </C O N S-A SSIG N > < C O N S -A S S IG N R O LE = "G " C O NSTRAINTS^ "C2"> < /C O N S-A SSIG N > < / -- Constraint assignm ent definition-- >

<! --Extended child role assignm ent definition-- > < E X T E N D E D C H ILD ROLE ecp= D , I x /E X T E N D E D CHILD ROLE > < / --E xtended ch ild p osition role assignm ent definition-- >

< / -- R elationships o f E lem ents -- >

</-- Local domain 1 ~ >

87

<!--Local domain 2-->

< !-- Basic Elements -->

<! -Privilege set definition- > <PRIVILEGE ID= "p6" > </PRIVILEGE> <PRIVILEGE ID= "p7" > </PRIVILEGE> </ -- Privilege set definition- >

<! -R ole definition--> <ROLEID= " I " > </ROLE> <ROLEID=" J " > </ROLE> <ROLE ID= " K " > </ROLE> </ -Role definition- >

<! -Constraint set definition- > <CONSTRAINT ID= " Ca " > <PARAMETER VALUE= " h l4 "x / PARAMETERx/CONSTRAINT> <CONSTRAINT ID= " Cb " > <PARAMETER VALUE= " h l5"x / PARAMETERx/CONSTRAINT> <CONSTRAINT ID= " Co " > <PARAMETER VALUE= " hl6 h l7"x / PARAMETERx/CONSTRAINT> </ -Constraint set definition- >

</ --Basic Elements -->

<! - Relationships o f Elements -->

<1 -- Role hierarchy definition- > <INHERITSFROM = T ' To "F></lNHERITS> <INHERITSFROM = `T" To "K"xVINHERITS> </ -R ole hierarchy definition-->
88

<! -- P rivilege assignm ent definition-- > <P R JV -A S SIG N R O LE= "I" PRIVILEGE^ "p6, p7"x /P R T V -A S S IG N > < P R IV -A S S IG N R O L E= `T ' PRIVILEG E^ "p 7"x /P R IV -A S S IG N > < / -- P rivilege assignm ent definition-- >

<! -- Constraint assignm ent definition-- > < C O N S -A S S IG N R O LE = "I" C O N STR A IN TS= "Ca"> </C O N S-A SSIG N > < C O N S -A S S IG N R O LE= `T ' C O N ST R A IN T S^ "Cc"> < /C O N S-A SSIG N > < C O N S -A S S IG N R O LE= "K" C O N STR A IN TS= "Cb"> < /C O N S-A SSIG N > < / -- Constraint assignm ent definition-- >

<! --E xten ded parent p osition role assignm ent definition-- > < E X T E N D E D P A R E N T ROLE epp= I, D x /E X T E N D E D PARENT ROLE > < / - E xtended parent position role assignm ent definition-- >

< / -- R elationship s o f E lem ents -- >

</--Local domain 2 -- >

< /P R A C -m odel>

89

APPENDIX C

Specifications of XML-based PRAC Security Policy for Foreign Domains

This Appendix defines the syntactic representation of the PRAC security policy for the foreign domain. The XML representation is comprised of two parts; Basic Elements and Relationships of Elements. The first part defines the elements of the PRAC model for the foreign domain including foreign-interfacing role, foreign-interfacing privilege, and credentials. The second part defines the relationships among the elements of the PRAC model for the foreign domain.

Part 1: Defines the Basic Elements of PRAC Model for the Foreign Domain

·

Define Foreign-interfacing Role The syntax of foreign-interfacing role defines an XML tag Foreign-interfacing ROLE and an attribute ID which value is role-id.
<! - Foreign-interfacing Role definition- > <FOREIGN-Interfacing ROLE ID=ro/e-iJx/FOREIGN-Interfacmg ROLE>

·

Define Foreign-interfacing Privilege

90

The syntax o f foreign-interfacing privilege defines an XML tag Foreigninterfacing PRIVILEGE and an attribute ID which value is privilege-id.
<! -F o reig n -in terfa cin g P rivilege set definition-- > <Foregin-Interfacing PRIVILEG E ID =/7/-m 7ege-zc/x/Foreign-Interfacing PRIVILEGE>

Define Credentials PRAC defines an XM L-based credential format for each credential type. The syntax o f credential defines an XML tag CREDENTIAL, an attribute ID which value is credential-id and an attribute TYPE which value is credential-type.
<! --C redential d efin ition-- > <C R E D E N T IA L ID = credential-id, TYPE= credential-type > <SU B JE C T -P P R O P E R T Y lD=property-id (I)

subject-operator (I) Va\ue= pro p erty-va lu e(l)x I SUBJECT-PROPERTY>

< SU B JE C T -PPR O PE R T Y ID=property-id(n) O PE R A T O R ^ subject-operator(n) Va\\iQ= property-value(n)x I SUBJECT-PROPERTY> < /C R E D E N T IA L >

Assume there are n subject properties and the subject properties in the credential type. The syntax o f subject property defines an XML tag SUBJECT-

PPROPERTY, an attribute ID which value is property-id, an OPERATOR attribute which value is subject-operator, such as ">" "<" ` which is property-value. etc, and an attnbute Value

Part 2; Defines the Relationships Among the Elements for the Foreign Domain

91

·

Foregin-Interfacing Relationship)

Role

Hierarchy

(Foreign-interfacing

Role-Role

Foreign-interfacing role hierarchy is represented as a set of INHERITES elements, each of which associates a foreign-interfacing role with its direct child foreign-interfacing role. The syntax of foreign-interfacing role hierarchy defines a new XML tag of type INHERITES with a required FROM (foreign-interfacing role ri) and TO (foreigninterfacing role rj) attribute values which indicate foreign-interfacing role ri is a direct parent foreign-interfacing role ofrj.
<! -Foreign-interfacing Role hierarchy definition--> <INHERITES FROM =

ri

To = rj-x/INHERITES>

·

Foreign-interfacing Privilege Assignment (Foreign-interfacing Role-Privilege Relationship) Foreign-Interfacing-role privilege assignment assigns a set of foreign-interfacing privileges to a foreign-interfacing role. The syntax of foreign-interfacing privilege assignment defines an XML tag FOREIGN PRIV-ASSIGN with FOREIGNInterfacing ROLE and PRIVILEGE attributes in which foreign role ti has privileges of pj, pk.

<! - Foreign-interfacing Privilege assignment definition- > <FOREIGN PRIV-ASSIGN FGREIGN-Interfacing ROLE = ti PRIVILEGE=;y,...... ;iit.x/FOREIGN PRTV-ASSIGN>

·

Credential Assignment (Foreign-interfacing Role-Credential Relationship)
92

Credential assignment assigns a set o f credential chains to a foreign-interfacing role. The syntax o f credential assignment defines an XML tag o f type CONS-

ASSIGN with a required FOREIGN-Interfacing ROLE and CREDENTIALS attributes in which foreign role r l has credential chains o f cl , cm ....and ck.
<! -- Credential assignm ent definition-- > < C O N S -A S S IG N FO R EIG N -Interfacing ROLE= r l C R E D E N T IA L S - c l w c m w v cjfc.x/C O N S-A SSIG N >

93

APPENDIX D An Example of PRAC Security Policy for Foreign Domains

This Appendix shows an example of PRAC security policy for an foreign domain according to the syntax defined in Appendix C.
< xml version= "1.0" >

<PRAC-MODEL TYPE= "PRAC2_P0LICY">

<! - Basic Elements - >

<! -Foreign-interfacing Privilege set definition- > < FOREIGN-Interfacing PRIVILEGE ID= "p i" > </ FOREIGN-Interfacing PRIVILEGE> < FOREIGN-Interfacing PRIVILEGE ID= "p2" > </ FOREIGN-Interfacing PRIVILEGE> < FOREIGN-Interfacing PRIVILEGE ID= "p3" > </ FOREIGN-Interfacing PRIVILEGE> < FOREIGN-Interfacing PRIVILEGE ID= "p4" > </ FOREIGN-Interfacing PRFVILEGE> < FOREIGN-Interfacing PRIVILEGE ID= "p5" > </ FOREIGN-Interfacing PRFVILEGE> < FOREIGN-Interfacing PRIVILEGE ID= "p6" > </ FOREIGN-Interfacing PRTVILEGE> </ -Foreign-interfacing Privilege set definition- >

<! -Foreign-interfacing Role definition- > < FOREIGN-Interfacing ROLE ID= " G " > </FOREIGN-Interfacing ROLE> < FGREIGN-Interfacing ROLE ID= " H " > </FOREIGN-Interfacing ROLE> < FGREIGN-Interfacing ROLE ID= " I " > </FOREIGN-Interfacing ROLE> < FGREIGN-Interfacing ROLE ID= " I " > </FOREIGN-Interfacing ROLE> < FGREIGN-Interfacing ROLE ID= " K " > </FOREIGN-Interfacing ROLE>

94

< / - F oreign-interfacin g R o le definition-- >

<! --C redential set d efinition-- > <C R E D E N T IA L ID = " C1" T Y PE = "P ow er Enterprise" > <SU B JE C T -PPR O PE R T Y ID = "Credit" OPERATOR= "= " V alue= "5 "> < / SU B JE C T PR O PERTY>

<SU B JE C T -PPR O PE R T Y ID = "B alance" OPERATOR^ "> = " V alue= "200000">

<J SU B JEC T-PR O PER TY >
< /C R E D E N T IA L >

<C R E D E N T IA L ID = "C 2" T Y PE = "Private sector"> < SU BJE C T -PPR O PE R TY ID = "Credit" O PERATOR^ "> = " V alue= "4 ">

<J SU B JE C T-PR O PE R TY >
< SU BJE C T -PPR O PE R TY ID = "B alance" OPERATOR^ "> = " V alue= "300000"> < / SU B JE C T -PR O PER TY > < /C R E D E N T IA L > < / --Credential set d efinition-- > < / -- B a sic E lem ents -- >

< !-- R elationships o f E lem ents -- >

<! -- F oreign-interfacin g role hierarchy definition-- > < IN H E R IT S FR O M = "G " T o "H " x/T N H E R IT S > < IN H E R IT S FR O M = "H " T o "I"x /I N H E R I T S > < IN H E R IT S FR O M = "J" To "I" > </INH ERITS>

< IN H E R IT S FR O M = "K " To "H"x /I N H E R I T S > < / --F oreign -interfacin g role hierarchy definition-- >

<! --F oreign-in terfacin g P rivilege assignm ent definition-- > <F O R E IG N P R IV -A SS IG N FOREIGN-Interfacing ROLE= "I" PRIVILEGE = "p i p2"x /F O R E IG N PRTV-ASSIGN> <F O R E IG N P R IV -A S S IG N FOREIGN-Interfacing R O LE= "I"

95

PRIVILEGE = "p3 p4"x/F 0R E IG N PRIV-ASSIGN> <FOREIGN PRIV-ASSIGN FGREIGN-Interfacing ROLE= "I" PRIVILEGE = "p5 p6"x/F0REIGNPRIV-ASSIGN> </ --Foreign-Interfacing Privilege assignment definition- >

<! - Credential assignment definition- > <CONS-ASSIGN FOREIGN-ROLE= "G" CREDENTIALS^ "C l" > </CONS-ASSIGN> <CONS-ASSIGN FOREIGN-ROLE= "H" CREDENTIALS = "C2"> </CONS-ASSIGN> <CONS-ASSIGN FOREIGN-ROLE= "I" CREDENTIALS = "C l" > </CONS-ASSIGN> <CONS-ASSIGN FOREIGN-ROLE= "J" CREDENTIALS = "C2" > </CONS-ASSIGN> <CONS-ASSIGN FOREIGN-ROLE= "K" CREDENTIALS = "C l" > </CONS-ASSIGN>

<! --Credential assignment definition-->

< / - Relationships o f Elements - >

</PRAC-model>

96

BIBLIO G R A PH Y

[1]

"Information Security Challenges in the Electric Power Industry," Symantec Enterprise Security, White Paper, Riptech, 2001, pp 1-10.

[2]

A. Massoud, "M odeling and Control o f Complex Interactive Networks," IEEE Control Systems Magazine, USA, 2002, pp 22-27.

[3]

A. Massoud, "Towards Self-Healing Energy Infrastructure Systems," IEEE Computer Applications in Power, USA, 2001, pp 20-28.

[4]

A.

M assoud,

"National

Infrastructure

as Complex Interactive Networks,"

Automation, Control, and Complexity; An Integrated Approach, Samad & W eyrauch (Eds.), John W iley & Sons, 2000, pp 263-286. [5] A. Menezes, P. Oorschot, and S. Vanstone, Handbook o f Applied Cryptography, CRC Press, 1997. [6] Fundamentals o f Network Security, Cisco Networking Academy Program, Cisco press, 2004, pp 315-325. [7] S. Bakhtiari, R. Safavi-Naini, and J. Pieprzyk, "Cryptographic Hash Functions: a Survey," Technical Report 95-09, Department o f Computer Science, University of W ollongong, 1995. [8] R. Sandhu, E. Coyne, H. Feinstein, and C. Youman, "Role-Based Access Control M odels," IEEE Computer, Vol. 29, No. 2, 1996, pp 38-47. 97

[9]

E. Barka and R. Sandhu,

" A Role-Based Delegation Model and Some

Extensions," Proceding of 23rd National Information Systems Security Conference, 2000, pp 101-114. [10] D. Ferraiolo, R. Sandhu, E. Gavrila, D. R. Kuhn, and R. Chandramouli, "Proposed NIST Standard for Role-Based Access Control," ACM Transactions on Information and System Security, Vol. 4, No. 3,2000, pp 224-274. [11] S. Osborn, R. Sandhu, and Q. Munawer. "Configuring Role-based Access Control to Enforce Mandatory and Discretionary Access Control Policies," ACM Transactions on Information and System Security, Vol. 3, No. 2,2000, pp 85-106. [12] A. Kem, A. Schaad, and J. Moffett, "An administration Concept for the Enterprise Role-based Access Control Model," In Proceedings of the Eighth ACM Symposium on Access Control Models and Technologies (SACMAT'03), ACM Press, 2003, pp 3-11. [13] R. Sandhu and V. Bhamidipati, "The ARBAC97 Model for Role-based

Administration of Roles: Preliminary Description and Outline," Second ACM workshop on Role-Based-Access-Control, Fairfax, Virginia, USA, 1997, pp 41-54. [14] M. Nyanchama and S. Osborn, "The Role Graph Mode," First ACM Workshop on Role-Based Access Control, Gaithersburg Maryland, 1995, pp 25-31. [15] M. Nyanchama and S. Osborn, "Access Right Administration in Role-based Security Systems," In J. Biskup, M. Morgenstem, and C. E. Landwehr, editors. Database Security, Vlll, Status and Prospects, Proceedings of the IFIP WG11.3 Working Conference on Database Security, North-Holland, 1994, pp 37-56.

98

[16]

S. G. Akl and P.D. Taylor, "Cryptographic Solution to a Multilevel Security Problem," In D. Chaum, R.L.Rivest, and A.T. Sherman, editor, Advanced in

Cryptology, pp 237-249. [17] S. G. Akl and P. D. Taylor, "Cryptographic Solution to a Problem of Access Control in a Hierarchy," ACM Transaction on Computer Systems, Vol. 1, No. 3, 1983, pp 239-248. [18] S. T. M ackinnon and P. D. Taylor, "An Optimal Algorithm for Assigning Cryptographic Keys to Control Access in a Hierarchy," IEEE Transaction on Computer systems. Vol. C-34, No. 9, 1985, pp 797-802. [19] S. T. M acKinnon and S. G. Akl, "New Key Generation Algorithms for Multilevel Security," In Proceeding 1983 IEEE Symp on Security and Privacy, Oakland, CA, 1983, pp 72-78. [20] T. C. Wu, T. S Wu, and W. H. He, "Dynamic Access Control Scheme Based on the Chinese Remainder Theorem," Computer System Science and Engineering Vol. 2, 1995, pp 92-99. [21] M. Verma, "XML Security; The XML Key Management Specification. XKMS Helps Make Security Manageable.", IBM Developer Works, Technology Report, 2004. [22] F. Hirseh and M. Just, "XML Key Management (XKMS 2.0) Requirements," W3C Note, 2003, http://www.w3.org/TR/xkms2-req. [23] T. Hardjono, B. Cain, and I. Monga, "Intra-domain Group Key Management

Protocol," Intem et-Draft, 1998.

99

[24] J. H. Huang and S. M. Mykil, "A Highly Scalable Key Distribution Protocol for Large Group Multicast," In IEEE 2003 Global Communications Conference, 2003. [25] C. K. Wong, M. Gouda, and S. S. Lam, "Secure Group Communications Using Key Graphs," In ACM SIGCOMM'98, ACM Press, 1998, pp 68-79. [26] J. Crampton, "Specifying and Enforcing Constraints in Role-based Access Control," In Proceedings of the Eighth ACM Symposium on Access Control Models and Technologies (SACMAT 2003), Italy, 2003, pp 43-50. [27] N. Li, Z. Bizri, and M. V. Tripunitara, "On Mutually-Exclusive Roles and Separation of Duty," Proceedings of the 11th ACM Conference on Computer and Communications Security, USA, 2004, pp 42-51. [28] M. Blaze, J. Feignbaum, and J. Lacy, "Decentralized Trust Management," IEEE Symposium on Security and Privacy, Oakland, CA, MAY 1996, pp 17-28. [29] M. Blaze, J. Feignbaum, and A. D. Keromytis, "KeyNote: Trust Management of Public-key Infrastructures," Security Protocals, 6"' International Workshop, Cambridge UK, 1998, pp 59-63. [30] M. Blaze, J. Feignbaum, J, loannidis, and A. Keromytis, "The KeyNote Trust Management System Version 2," Internet Draft RFC 2704,1999. [31] Extensible Markup Language (XML), http://www.w3 .org/XML/. [32] National Institute of Standards and Technology, Secure Hash Standard, FIPS 1861, US Department of Commerce, April 1995. [33] RFC 1810 - Report on MD5 Performance, httD://www.fags.org/rfcs/rfcI 810.html

100

[34]

N. A. Kofahi, T. Al-Somani, and K. Al-Zamil, "Performance Study of Some Symmetric Block Cipher Algorithms Under Linux Operating System," Journal o f Discrete M athematical Science & Cryptography, Vol. 7, No. 3, 2004, pp 359-370.

101

