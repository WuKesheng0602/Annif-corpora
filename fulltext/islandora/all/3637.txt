Journal of Engineering Design, Vol. 10, No. 2, 1999

De® ning the Engine Design Process

JEFFREY C. LOCKLEDGE & FILIPPO A. SALUSTRI

SUMMARY Shortening design lead times while maintaining product quality requires careful planning of the design process. This paper describes a technique used at a major automobile manufacturer to create a simple, ¯ exible process to do just that for their engine design group. The design organization's communications infrastructure was tailored to assure that design information was reliably transmitted through the organization. The mechanism used to achieve this accounts for (a) both component and system perspectives, and (b) the unpredictable nature of the ¯ ow of design information by treating unpredictability as an acceptable, even desirable, state of aþ airs. 1. Introduction In modern engineering enterprises, there is constant pressure to shorten lead times while improving product quality and cost-eþ ectiveness. Diþ erent enterprises choose diþ erent strategies to achieve these goals. One leading automobile manufacturer chose the strategy of rede® ning its design process. The authors have undertaken to assist the company by using design theoretic ideas to develop a tool to help the company's Design Engineers (DEs) manage engine design information more eý ciently. This paper describes how the authors investigated the company's existing design process, identi® ed areas for improvement, and synthesized mechanisms to achieve those improvements. While the car manufacturer currently designs world-class engines, they felt a need to reduce their time to market. As part of this overall eþ ort, they identi® ed their engine design process as one for examination and improvement. The activities described herein were undertaken by the authors as part of this larger restructuring of the overall engine design, testing, and manufacturing process. The authors focused on the following stages of the process: the initial steps in identifying a desired engine to be designed (needs analysis), coordinating the initial design (conceptual design), and the day-today design process (design information ¯ ow). The goal was to reduce the initial design time by applying cutting-edge processes discussed in the literature. The modi® cations that were needed to tailor the proposed solution to the particular requirements of the engineering company were of special research interest to the authors, as it is hoped they shall be to other researchers as well. 2. Investigation of the Existing Design Process The ® rst stage of this project was a study of the existing process for the design of major engine components. There are ® ve such components: the engine block, the crankshaft,
J. C. Lockledge, Department of Industrial and Manufacturing Engineering, Wayne State University, 4815 4th St., Detroit, MI 48202, USA. F. A. Salustri, Department of Industrial and Manufacturing Systems Engineering, University of Windsor, Windsor, Ont., N9B 3P4, Canada. ISSN 0954-4828 (print)/ISSN 1466-1837 (online)/99/020109-16 1999 Taylor & Francis Ltd

110

J. C. Lockledge & F. A. Salustri

FIG. 1. The current design process.

the cylinder head, the combustion chamber, and the camshaft. These components, more than any others, de® ne the engine' s performance, cost, and manufacturability. A recently completed engine design program was identi® ed by the car company as a case study. The DEs who worked on the major components of the engine in the case study were interviewed by the authors, both individually and in small groups. Each DE was thus interviewed at least twice. The ® rst interview established what the DEs perceived as their individual roles in the design process, and provided an understanding of that role independent of interactions with other DEs. The second interview probed the relationships that the DEs perceived between their roles. On the basis of the interviews, a picture of the existing design process began to emerge (see Fig. 1). The process begins with an overall engine design concept developed jointly by Systems Engineers (SEs) and members of the marketing group. This concept is then examined by the DE in charge of designing the engine's crank. The substantial history and expertise of the car manufacturer had led them to consider that the viability of an engine is largely determined by whether a suitable crank could be designed to ® t in the volume allocated to it. If this is possible, the engine is deemed feasible and the full, detailed engine design process could be initiated. If the crank could not be designed to ® t, the design concept required modi® cation. The detailed design is initiated with a meeting that includes all the relevant parties: the DEs for the ® ve primary components, the SE, manufacturing and casting engineers, and ® nance oý cers. During this meeting, the assembled personnel would attempt to iron out basic design parameters, such as the number of cylinders, cylinder angle, the location of the cylinder center points, the style and number of cams, and the location of the crank bushings. After this meeting, the design team members each begin working on their components. The inevitable discrepancies that arise between the components' designs are resolved through informal communication between the DEs. Formal communications during weekly design meetings are used to verify progress and resolve any remaining design discrepancies. The results of this process are released designs of the components, which, when taken together, comprised an approved engine design.

3. Problems Identi® ed in the Existing Design Process Based on the data gathered during the interviews, the authors were able to identify several problems within the existing engine component design process. Some of the problems were organizational in nature, while others were technical, relating to the actual engines being designed. The problems are summarized in Table I and are now discussed. The ® rst identi® ed problem is that the detailed design is not accomplished using a step-by-step process, a fact the authors initially found perplexing. However, further discussions with the DEs revealed that a simple step-by-step process would quite likely

De® ning the Engine Design Process
TABLE I. Design problems identi® ed
· · The macro design process appears chaotic Unstructured communication leading to missing information · Lack of software standards for communication · Terms with multiple de® nitions Emphasis on components rather than systems Lack of design for manufacture · ·

111

be intractable due to design process complexity arising from (1) the enormous number of possible initial conditions, and (2) the inability to determine when inputs will be delivered from one stage of the process to another. The process necessary to develop an engine design is highly dependent on the initial performance goals and features designated for it. One general process would be followed to design an overhead cam, four-cylinder engine expected to generate 120 horsepower, but a very diþ erent process would be used to design a V8 push rod engine expected to generate 300 horsepower. This is more signi® cant than is immediately obvious. Because the components of the engine are highly interrelated, redesigning any part necessitates redesigning many others and, of course, verifying the validity of those changes. Developing a new process for each possible combination is clearly not cost eþ ective. Further exacerbating this problem is the unscheduled nature of completion of many aspects of the design. Developing new designs is a creative yet heavily constrained endeavor, so performing it on a timetable is often diý cult. DEs must be sure the component they are designing will interface and interact with others around it, and the needed information is often in a state of ¯ ux. After an initial design for a component is generated, the DE in charge tries to validate it by having it tested. Whether the tests are in vivo or computer based, performed in-house or by an external laboratory, there is frequently an amount of variation in timing; an in-house test may require the use of a testing facility that is in much demand, causing delays; external test organizations may also not deliver results within a given time frame; and computer tests often join a queue of others to be run on specialized hardware of limited availability. If components must be prototyped in order to be tested, the construction of the prototype introduces another source for variation. Additionally, upper management may change the direction of an engine design program that has already begun. These changes are often in response to market changes that occur after a program is initiated. Given the current typical lead time for a new engine design, changes of this kind are almost unavoidable. These situations are so common that the engineering community within the automaker has developed behaviors for coping with them: engineers often design several variations of particular components, called `protects' , since DEs are protecting themselves against possible changes in direction. This practice is diþ erent from the organizationally accepted practice of deliberately designing a series of alternatives as practiced at Toyota and set out in Ward [1]. In short, the series of events composing the engine component design process are, at the macroscopic level, so complicated as to appear chaotic, even though at the microscopic level there is consistency in certain portions of the process. A DE knows in very general terms what process is to be followed in designing a component, since the design is determined as a series of interrelated in¯ uences. A change to the value of one input parameter means that certain other parameters will need to be changed and

112

J. C. Lockledge & F. A. Salustri

veri® ed. This is also true at the macroscopic level, but there the in¯ uences are much less well understood. There are those in this design community that claim that trying to force a speci® c structure on the process will crush the creativity from it. This is a viewpoint that is quite common in North AmericaÐ the validity of which is virtually impossible to establishÐ but has emerged, in this case, from a community who has clearly had experiences to suggest it is true. This implies that even if it were possible to determine a single, prescriptive process to design the engine, it might be unwise to do so. Another problem identi® ed by the authors regards the availabilit y and the accessibility of information pertinent to an engine design program. Our interviews uncovered several cases where the values of important parameters calculated by one DE were not communicated to other DEs working on related tasks. In some cases, this was because critical information was missing. In other cases, DEs with required information were simply not aware of those individuals that needed the information. In still other instances, DEs made their calculations unaware that other, more recent information was being held by other individuals. Fortunately, these missed opportunities for communication did not result in design errors thanks to safeguards put in place by the design organization; however, they did result in delays and missed deadlines for engine program milestones. There were also situations where a DE knew that critical information was available , but was unable to access it. This was due to incompatibilities between the software used by diþ erent DEs or a lack of knowledge on the part of DEs on how to access the information electronically. In these cases, one DE would ask another for assistance to access the information. Although this is a suitable solution for a rare occurrence, the frequency of such situations led to disruptions of some DEs' schedules. With this being the case, the most common forms of information transfer among DEs were found to be (a) word of mouth, (b) handwritten notes exchanged between DEs, and (c) unstructured e-mail. This problem was exacerbated by occasional misinterpretation of terms: a given technical term that means one thing to one DE might mean something slightly diþ erent to another. In a team-based environment, such as at this company, the results could be disastrous. Most insidious were those cases in which diþ erent de® nitions of terms were almost, but not quite, identical. For example, the `block deck height' is a key parameter de® ning the total engine height. Whether this parameter included the thickness of the gasket between the block and the cylinder head depended on which DE was asked for a de® nition. This inconsistency of terminology arose due to each DE building his/her own mental model of the engine to make up for the lack of clearly explicated structural and functional interconnectivity of engine components and systems. While the inability to access the information and the inconsistent de® nition of terms were problems, the primary diý culty arose from the unstructured nature of the communication and the resulting missed opportunities for accelerating the design cycle. If a structure for communication within the process had been available , the DEs could have been assured that their calculations were based on the best available information and would have been available for use as quickly as they were produced. Another problem found by the authors was that the understanding held by the DEs about engine components and functional systems is often ill-de® ned. For example, the DE responsible for a cylinder head and the DE responsible for the corresponding engine block did not have a distinct concept of the combustion chamber as a system that they shared; rather, they saw combustion as an external force acting on the components they were attempting to design. This made reasoning about the designs

De® ning the Engine Design Process

113

themselves very diý cult and caused signi® cant confusion, especially in design meetings. Furthermore, although particular interest was paid to the `® rst-order' relationships between components at the initial stages of an engine program (and rightly so), deeper information about relationships needed for later stages of design development was rarely expressed explicitly. Little or no information was available at all regarding the systems themselves. This is not to say that the DEs treated the engine designs without resource to systems engineering. On the contrary, the company has such a long history of work in this area that certain knowledge about engine design has become ingrained in the DEs, and deeply embedded in the general design process used, without ever having been explicated. The problem with this situation is that although the DEs all know what they are doing, they can ® nd it very diý cult to communicate that information to others; engine design has become, in a sense, instinctive and dependent on corporate culture, rather than being rational and dependent on veri® able data. Again, this decreases the eý ciency of the overall design process, which slows development time to the point where DEs can frequently feel overworked and rushed. Yet another problem regards the interface between the DEs and the manufacturing engineers responsible for casting, machining, and assembling the designed parts, or for interacting with subcontractors ® lling those roles. A common complaint of the manufacturing engineers during our interviews with them, was that the DEs rarely invited their input regarding the manufacturability and assemblability of an engine design; and those occasions when their opinions were solicited occurred too late in the design process. This resulted in sudden `panic situations' , in which an engine design would have to be reworked near a deadline because the manufacturing engineers caught errors in the design that had theretofore gone unnoticed. This problem is a classic one: over-the-wall design with manufacturing issues relegated to the ® nal stages of a design process. The problem is particularly onerous in a large automobile manufacturing environment, where, by the DEs' own admission, manufacturing issues have ® rst-order eþ ects on the ® nal engine quality and cost. All of the DEs were aware of the concept of concurrent engineering, and believe they adhere to the practice. In fact, it was found that the DEs who routinely sought the opinion of manufacturing engineers in their design work had been manufacturing engineers themselves. 4. Development of a Solution As is evident from the preceding discussion, the fundamental problem is one of information accessibility and availability, at the level of the engine itself and of the processes used to synthesize the engine designs. The authors are not the ® rst to attempt to improve the engine design process at the company, but previous attempts have met with only limited success. Extensive discussions were held to try and determine the reasons for this. The response was almost unanimous: each solution produced `just another eye-chart' . By this, the DEs meant that the solutions were so complex and prescriptive that it became impossible to grasp the system /technique/methodology in its entirety, leading to fragmentation and uncertainty. Because of this, the authors decided that a new solution must be general, simple, and easily represented on a single chart or graph without being complex or diý cult to follow. Furthermore, prescriptive solutions were to be avoided to increase ¯ exibility: as new information about engine design becomes available , and as new technologies and methodologies are introduced, the system must be adaptable enough to allow their incorporation.

114

J. C. Lockledge & F. A. Salustri

It was also agreed that, at least initially, the solution would not dwell on the ® ne details of engine design, but rather treat only major components that contribute signi® cantly to the primary function of an engine (to be a motive force of the automobile, and to drive the various `accessories' such as air conditioning, electrical systems, etc.). Disregarding ® ne detail was expected to increase con® dence that (a) the solution could be applied to many diþ erent engine programs, (b) the fundamental nature of internal combustion engines, taken to be uniform throughout all such engines, could be represented in a uni® ed manner, and (c) an initial version of our solution could be developed quickly. The authors began with a technique developed by Pimmler and Eppinger [2], in which a matrix is used to represent relationships between components and assemblies, much like Steward's Design Structure Matrix [3,4]. This technique was selected because the matrix format is a very dense way of representing information, which helps the solution from becoming `just another eye-chart' . However, Eppinger's approach does not take into account how functional systems relate to one another and to physical components. The matrix was therefore modi® ed in two ways. First, in order to represent functional as well as structural relationships, the authors used columns in the matrix for major components, and rows for major functional systems and subsystems (refer to Fig. 2). Elements of the matrix thus represent interactions between a functional system and a component. Matrix elements marked `X' represent system/component interactions that are ® rst-order factors of importance to the engine DEs. The elements were ® lled in, using information gained from our interviews, and veri® ed in follow-up meetings with the DEs. Additionally, a secondary matrix was formed above the primary one. The secondary matrix was added to take into account interactions between components and manufacturing functions. The manufacturing matrix was kept separate from the primary design matrix to indicate that although manufacturing is a fundamental matter, there remain important distinctions between design and manufacturing. The authors call the complete matrix in Fig. 2 `The Design Process Matrix' (DPM). It captures, in general terms, all the meaningful relationships between both systems and components in the engine design process as it was related to the authors during the interviews. 5. Using the Design Process Matrix The purpose of the design process matrix is to clarify dependencies of information ¯ ow in an engine design process. Rather than prescribing a single process for engine design, the design process matrix describes relationships between components so as to suggest a precedence of engine design tasks. The authors expect that the DEs will then naturally develop processes that take advantage of the information ¯ ow as described by the matrix. Furthermore, by describing a process only implicitly, in terms of information ¯ ow, rather than explicitly and prescriptively, we believe the solution will be more ¯ exible. This is important in light of possible future changes to the kinds of information available and the introduction of new engine design and manufacturing technologies. Finally, the mapping from systems and components to the actual engineers who are responsible for their design is not given in the DPM. Again, this is for ¯ exibility: some DEs were found to be knowledgeable about the design of several diþ erent components, others of only one. Assigning personnel to a particular engine program depends on who is available , the duration of the project, the expertise of the candidates, etc. Team composition, and

De® ning the Engine Design Process

115

FIG. 2. The design process matrix. PCV, positive crankcase ventilation.

indeed the criteria for team selection, can change from one program to the next. However, the common thread is the task itself : to design an engine. Thus, the DPM can be used to identify areas where expertise is needed, but does not guide managers in allocating human resources for team formation; such allocation of resources is beyond the scope of the current work. The authors also see the matrix as a means of describing the eþ ects of a change to a design that is caused by actions taken in accordance with a design process. Rather than prescribing a step-by-step design process, the matrix allows a design process to emerge naturally from the information ¯ ow. The ¯ ow, in turn, is based on the requirements of a particular engine program, on the general nature of engine design, and on the capabilities of the DEs and the design enterprise. Changes in the functions

116

J. C. Lockledge & F. A. Salustri
TABLE II. Responses and actions for ® rst matrix question
Response Not an issue Might be an issue Resulting action No further action required Respond with: · likelihood of a problem · impact of a problem if one exists · date for noti® cation of resolution Negotiation with other stakeholder DEs

An issue

TABLE III. Responses and actions for second matrix question
Response Yes, it could No, it could not Resulting action DEs responsible for other systems will have to be noti® ed of the response to the change No other DEs will be noti® ed

to be provided by the engine are manifested as changes in the functional systems in the DPM; changes in the structures used to achieve those functions are manifested as changes in the components in the DPM. When a change to a component is needed to advance the design, the DE responsible for the component can scan that component' s column in the matrix to identify systems whose performance could change as a result. Alternatively, a SE needing to notify component DEs, who are stakeholders of changes to a particular system, can scan across rows of the matrix to determine which components are pertinent. A component DE who becomes aware of a design change then needs to answer two questions: (1) Will this change cause a problem in my design? (2) Could my response to this change cause problems in systems related to my own? Table II shows the possible responses to the ® rst question and the corresponding actions that need to be taken. It is important to note that it remains the responsibility of each DE to determine if a change in some other component or system is pertinent to that DE. Table III shows the possible response to the second question and the actions that will be required should those responses be given. The ® rst question is asked to determine how work ¯ ow should proceed. If a DE ® nds that a change will not aþ ect his component(s), the DE can continue work without interruption. If a change is found to de® nitely cause a problem for another DE, the DE requesting the change should negotiate with the DE for whom the change is a problem until a solution is reached. In these cases, the course of action is relatively clear. In many cases, however, it is not immediately clear that a problem de® nitely results from a change; rather, a DE may only be able to say that it is possible or even probable that there is a problem. The best course of action here is not obvious. Depending on the probability of a suý ciently severe problem occurring, the DE requesting a change may choose to delay work on the task in question until a better determination regarding the problem can be made (see Fig. 3). If the chances of a problem arising are slight, the DE may continue working in the hope that the problem will not arise. In these

De® ning the Engine Design Process

117

FIG. 3. Work ¯ ow from a change.

cases, where the impact of a design change is not immediately known or quickly calculable, it is essential to ensure suý ciently simple and eþ ective communications between the stakeholders. But the best protocol for these exchanges of information will vary with the personal capabilities and professional styles of the stakeholders. To impose a single protocol would likely stymie eþ ective communications. The authors believe that the best possible solution is to provide only a framework for that communication to occur, and to allow particular protocols to emerge with time. This framework could use the DPM to identify possible information ¯ ow paths between stakeholders. The second question is used to determine the extent of the concern caused by a change, over the design as a whole, i.e. to identify all the stakeholders interested in the implications of any given design change. If the DPM were simply used to ® nd all the components aþ ected by a change to one component via the systems that the components share, all components would quickly be included. This obviously defeats the purpose of the approach, which is to ensure that only and exactly the right DEs are informed of only and exactly the best available information regarding a problem. Rather, the authors require a check be performed at each stage of the use of the DPM. For example, assume a change is initiated by the engineer in charge of the exhaust manifold assembly. By referring to the DPM, we see that the exhaust manifold assembly is an element of two systems: the air intake system and the exhaust system. The systems engineers in charge of those systems are noti® ed of the change. If the change is seen by the SEs as likely altering the overall performance of their systems, they must address the change in some suitable manner; if system performance is seen to be insensitive to the change, they may ignore the change notice. In either case, however, the SEs must communicate the change notice to engineers involved with all the components of their systems. So, for the air intake system, the SE would inform the engineers in charge of the cylinder head, the exhaust manifold assembly, the valve train, the camshaft, the positive crankcase ventilation assembly, and the engine gasket, about the original change (as well as associated manufacturing personnel). Other DEs, such as those in charge of the crank or the piston, need not be noti® ed. Each of these DEs would in turn have to evaluate the impact of the change on their components. This may require interaction with other engineers; again, the DPM guides a given DE in determining to whom he/she should speak. If addressing the change in any one of these components results in another change, the procedure must be repeated. As the engine design process moves towards a complete design, changes will continue to occur, but their severity will become less and less until (hopefully) no change will propagate past the initial DE. Assuming no constraints are violated at this point, the design may be considered complete; further work will be carried out only to further optimize the design past the design requirements.

118

J. C. Lockledge & F. A. Salustri

The signi® cance of this procedure is that it empowers the individual DE with the responsibility for determining if a change occurring elsewhere in a system must be treated for a particular component; this centralizes the decision-making process for the eþ ect of a change on a component at the resident expert for that component: the DE. Furthermore, by introducing checks at every step in the process to determine if a change needs to be propagated to other systems or components, it is expected that DEs and SEs will only learn of changes that are of immediate importance to them; other changes, which do not aþ ect them, will simply be ® ltered out by the procedure, thus lessening the information management burden on the engineers. The speci® c protocol to be followed in addressing a change is highly dependent on the nature of the change and, in particular, on the number of components potentially aþ ected by the change. In some cases, a change can be addressed by a single engineer; other changes may require interaction between a few designers that can be carried out informally; and some changes may have such far-reaching implications as to require coordinated meetings between large groups of engineers. It is not clear from the data gathered from the interviews that any process exists to determine which protocol is preferred; nor is it clear that such a process would be desirable. The ¯ exibility to establish a variety of diþ erent protocols `on the ¯ y' , depending on the requirements of a particular design program, on the levels of expertise and on the interpersonal relationships between stakeholders is seen as an important advantage, and that any ineý ciencies arising from the ad-hoc nature of the protocols is more than oþ set by this ¯ exibility. In any event, the DPM remains useful as a guide to direct the ¯ ow of information, independent of the process employed for any particular design program. Currently, the DPM has been speci® ed for only a very high (abstract) level of function and structure. The relationships between components and functions indicated in Fig. 1 actually occur between much lower-level entities. Due to the `pilot-project' nature of the work conducted so far, the authors have not had the opportunity to examine the deeper, underlying structure of the DPM. Nonetheless, Section 7 presents a discussion of how such an exploration would proceed. Discovering ® ner detail in the DPM will have important eþ ects on the kinds of actions that can be taken in response to changes in a design; it will also signi® cantly enrich the kinds of information that can be represented in the DPM. To expedite development of a solution for the manufacturing ® rm, the authors chose not to develop a software system that implements the DPM, even though this is an obvious route to take. Software development projects are substantial undertakings in and of themselves, especially in environments such as those that exist in major automobile manufacturers, with multiple computing platforms and vastly diþ erent levels of computer `literacy' in the user community. If a software system were pursued, and some aspect of the underlying model needed to be changed, a large part of the programming eþ ort would be wasted. By choosing a pen-and-paper implementation for the initial stage of the project, the expense of the prototype system is minimized. If the pen-and-paper solution meets with suý cient success, then a computer-based implementation can be developed, based on the fully implemented underlying model. The representatives of the automobile manufacturer who worked with us on this project were quite happy with this approach. The particular implementation approach selected was to construct a form for each system and component in the DPM, the general format of these forms is shown in Figs. 4 and 5, respectively. If a change to a system is found necessary, then a System Change Noti® cation Form (Fig. 4) is prepared by the SE supervising that system. The

De® ning the Engine Design Process

119

FIG. 4. A sample System Change Noti® cation Form. text which appears bold in Fig. 4 is provided with the form. The remaining text is ® lled in by the SE. Each system in the DPM has its own form, and each such form enumerates the components potentially aþ ected by changes to the system. The SE writes a detailed statement of the nature of the change to the system in question. In the `reason' column, the SE notes actions he/she believes ought to be taken by the engineer in charge of each aþ ected component. If no entry is given in the reason column for a certain component (say, the intake manifold assembly in Fig. 4), then there is no expected eþ ect of the change on that component. Note that the form does not specify how actions are to be carried out in response to a change, but rather only what the system needs are. Note also that the actions to be taken by DEs are phrased in terms of overall system performance and validation, not in terms of particular component changes that may result from the system change de® ned by these forms. For example, in Fig. 4, the cylinder-head engineer is instructed to `verify recirculation port will accommodate increased mass ¯ ow' . Whether this change results in changes to the cylinder head itself is a matter for the DE in charge of its design; the SE' s instructions are systems oriented, not component oriented. When the form is complete, it is sent to DEs of the aþ ected components only (in this case, the cylinder head engineer and the exhaust manifold engineer). Similarly, Fig. 5 shows a sample Component Change Noti® cation Form. The form shown is for a change to the cylinder head in response to the systems change in Fig. 4. Note that the actions to be carried out in Fig. 4 are in the form of systems-oriented

120

J. C. Lockledge & F. A. Salustri

FIG. 5. A sample Component Change Noti® cation Form. statements, not referring speci® cally to other components. This is because it is not clear that the DE for one component always has suitable expertise to comment on recommended changes to any other component. Change form ID numbers (near the top right of the forms) are used to track a history of changes. It is essential that each form be written exclusively from the point of view of the stakeholder. For example, in Fig. 5, the cylinder-head update request is to verify that the recirculation port will accommodate an increased mass ¯ ow. This is what is needed from the point of view of the stakeholder of the system change noti® cation; what is not neededÐ or desirableÐ is a procedure to be followed by the cylinder-head engineer. By describing only what must be done, we hope to provide more procedural ¯ exibility to all the DEs. 6. Current Status of the Project The proposed DPM has been approved by the automobile manufacturer; a ® nal report detailing its structure and use is currently being prepared by the authors. If the report

De® ning the Engine Design Process

121

meets with the approval of both the DEs and management, the authors will be requested to implement the matrix using the forms described. It is also possible that if an implementation is carried out which meets with success, the system may be propagated to other segments of the automobile manufacturer' s enterprise besides engine component design. It is unclear at this time what the ® nal disposition of the work will be with the subject organization. Nonetheless, the authors feel it is a relevant contribution to the study of design and have presented it here for consideration by the design community.

7. Future Work 7.1. Automating the Process Although a pen-and-paper implementation may be suý cient, it is clearly not as eþ ective as a computer-based implementation. If the pen-and-paper implementation meets with success, the system described will be re-implemented using World Wide Web technology. Web browsers are available in versions that will run on all major computing platforms available at the automobile manufacturer' s oý ces, and, in conjunction with the Java programming language, provide a very high-level programming system ideally suited to rapid and eý cient exchange of information over computer networks. Java would be used to implement and maintain an internal representation of the DOM. Then, as each stakeholder accesses the system, it will automatically generate the appropriate system or component change noti® cation form. The identi® cation number of each form would be assigned and maintained by the system itself. The DPM itself would not be directly visible to the user. The system would access a database of names of DEs and what roles they play in each of possibly many engine design programs. Once a form is completed by a DE and submitted to the system, it will be routed automatically to other relevant stakeholders, based on the information in the `notify' section of each form. A trace would be kept of the creation and delivery of each form; from this historical information, the evolution of a particular engine design can be tracked. Such data would be useful for a variety of reasons, such as internal auditing, project scheduling, and work¯ ow management. Additionally, this information would be used by the current authors to gauge the performance of the system, and its acceptance by our targeted user community. It is also possible that various semi-intelligent, automated checks may be implemented within the system. For example, a system change may require a change to a component, which could in turn require a change to the original system. This gives rise to the possibilities of non-converging cycles. Since it is anticipated that there could be hundreds or even thousands of change forms generated in a full engine design program, it is unlikely that a human DE could easily diagnose this situation. However, it would be relatively easy for the system to automatically examine the history traces of change forms during oþ hours (say overnight), identify any problems that may exist (such as the aforementioned cycles) and report its ® nding to the relevant stakeholders, either by an electronic mail message, or by a separate form associated by the system with the change forms in question.

7.2 Extending the DPM The most obvious and important shortcoming of the DPM as presented here is the lack of detail in the matrix. This is due to (1) the time constraints on the project, (2)

122

J. C. Lockledge & F. A. Salustri

the requirement that the solution be small and simple, and (3) the pilot nature of the project on the whole. However, the authors are already undertaking the expansion of the depth of the representation we have developed. In particular, the authors are focusing on explicating more precisely the nature of the relationships between functional systems and structural components. This would provide a clearer picture of the ¯ ow of information between DEs and between groups of DEs. In this section, the authors brie¯ y introduce how such a deepening of the matrix will be carried out. For each system or component, the relevant stakeholder (DE) must carry out certain design tasks. We consider these design tasks as parameterized `black boxes' . That is, each DE can and should be allowed maximum possible ¯ exibility to develop his/her own best design. The authors' primary concern is to facilitate each DE's job by providing a way to track what information is needed, and when that information is needed, but not in how that information is used by a particular DE. Thus, each task conducted by each DE is a black box, the interior structure of which is not the point of this paper, but which has been explored elsewhere [5]. Each task requires certain inputs and produces certain outputs. The output parameters of one task of one DE become the input parameters of a task of some other DE. A certain subset of all the outputs of the combined tasks of all the DEs working on one engine program de® nes the engine design itself. There are two types of input and output parameters. One type of parameter relates directly to the engine design itself. For example, the valve lift height is required by the DE of the cylinder head; it is one of his input parameters. The valve lift height is an output parameter of the DE in charge of the design of the valve train. Without the valve lift height, the DE of the cylinder head cannot complete the cylinder head design (at least, insofar as the currently implemented design procedures are concerned). This suggests, in essence, a causal relation between the cylinder head and the valve train. There are two important points about this type of parameter that are relevant to the development of our information model. Firstly, the causality that exists between two parameters of this type may be cyclical, i.e. the valve train DE may be unable to establish a valve lift height without knowing certain parameters of the cylinder head, which in turn cannot be designed until the valve lift height is supplied. In this case, `iteration' is used to converge on an acceptable design for both the valve train and the cylinder head, starting from an arbitrary design state. It is current practice at the automobile manufacturer to use data for some previously designed engine with similar characteristics as a starting point. In this case, both valve train and cylinder head DEs would begin their calculations with a `best guess' drawn from the previously designed engine, and then iterate towards a solution. The second point derives from the ® rst. As the iterative design continues, a point is reached wherein a solution is identi® ed, i.e. convergence of the iterative process is reached to within some de® ned limit, beyond which further iterations will not contribute signi® cantly to the improvement of the design. The question is to determine that limit. The authors consider there to be two conditions that must be met in order for the iteration to end. (1) All constraints must be satis® ed. This relates to the second type of parameter, which is now discussed. (2) Any further change in a design parameter will not aþ ect any system or component to which that parameter is related. For example, a change in the block deck height of the engine of 1 inch would very

De® ning the Engine Design Process

123

likely require alterations to the valve train; however, a change of 0.1 mm would probably not require any changes to the valve train. It is the responsibility of each DE to explicitly de® ne the `granularity' of change of each parameter he/she requires as input. For example, the DE in charge of the valve train would have to determine in some way that a change of, say, any more than 1 mm in the block deck height would require an alteration to the valve train. If the block deck height changes by only 0.1 mm, then the valve train DE need not take any action. The authors note that the granularity of parameters provides a mechanism for `damping out' changes: if the valve train DE does not respond to a 0.1 mm change in the block deck height, then no other DE using input parameters provided by the valve train DE will have to change his/her components/systems. The notion of granularity is currently unused in the design arena at the automobile manufacturer; thus, the authors are unaware of how the value of the granularity of any given parameter might be calculated, although we suspect strongly that the DEs have a good experiential `feel' for what these values should be. We are currently investigating possible mechanisms for determining the values for granularity by starting with the DEs experience, and seeking more precise estimates through more formal means. The second type of parameter takes the form of a constraint of some kind. For example, the block deck height of the engine cannot exceed a given value. These parameters are normally (a) not under the control of any one component DE, and (b) are ® xed throughout the course of the design program. The authors take these constraint parameters to be `axiomatic' truths that must be satis® ed by any reasonable engine design. They are part of the `environment' in which the design must be developed. This type of parameter does not exhibit cyclical causality with other parameters, nor is there any measure of granularity available: the constraints are either satis® ed or not. If a complete deadlock occurs, wherein a constraint simply cannot be satis® ed, higher levels of the organization must become involved to resolve the problem; this matter is not treated as it goes beyond the scope of the authors' current work. Finally, it is noted that granularity can be built into the computer-based change noti® cation forms discussed earlier. When a change noti® cation is issued, the change can be de® ned in terms of the change in value of one or more parameters. As this information is propagated to other stakeholders, the system would compare the magnitudes of the changes to the granularities associated with each of those parameters by each stakeholder. A change whose magnitude is less than that de® ned by the granularity, as set by the stakeholder, could automatically be ® ltered out (although a note of that fact would be logged by the system for record-keeping purposes). In this way, one DE who changes his/her component need not worry about whether the change is worthy of propagating to other DEs; the system will do that job for them. 8. Conclusions This paper presents a discussion of applying research concepts in design theory to a real-world application. It has described organizational design diý culties encountered in a major automotive manufacturer and their results on the organization. A mechanism to address these diý culties has been developed and is currently being incorporated by the manufacturer, while the authors continue to pursue further enhancements to the techniques. The representatives of the automotive manufacturer have shown enthusiasm for the methodology developed. While not rigidly structuring the design process, the method provides a guide that will help ensure that design information ® nds its way to those

124

J. C. Lockledge & F. A. Salustri

individuals who need to be aware of it. This precisely meets the organization's perceived needs. Utilization of the authors' extensions to the current method will depend on the current method's value in reducing design cycle lead times and its ability to maintain or improve product quality. REFERENCES [1] WARD, A.C. (1993) Set-based concurrent engineering, Proceedings of the 1st Workshop on the Principles and Practice of Constraint Programming, Newport, RI, pp. 289± 292. [2] PIMMLER, T.U. & EPPINGER, S.D. (1994) Integration analysis of product decompositions, ASME Design Theory and Methodology Conference, Minneapolis, MN. [3] STEWARD, D. (1981) System Analysis and Management: Structure, Strategy and Design, 3, (New York, Petrocelli). [4] STEWARD, D. (1991) Planning and managing the design of systems, Proceedings of Portland International Conference on Management of Engineering and Technology, 27± 31 October, Portland, OR, USA. [5] ADELSON, B. (1989) Cognitive research: uncovering how designers design; Cognitive modeling: explaining and predicting how designers design, Research in Engineering Design, 1, pp. 35± 42.

