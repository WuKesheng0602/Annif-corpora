PEAR SQUARE: DESIGN AND DEVELOPMENT OF INCLUSIVE DIGITAL MEDIA TECHNOLOGY

By Samuel Legros

BFA, New Media, Ryerson University, 2018

A Major Research Project presented to Ryerson University in partial fulfillment of the requirements for the degree of Master of Digital Media in the program of Digital Media

Toronto, Ontario, Canada, 2018

© Samuel Legros, 2018

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF AN MRP

I hereby declare that I am the sole author of this MRP. This is a true copy of the MRP, including any required final revisions.

I authorize Ryerson University to lend this MRP to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this MRP by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

I understand that my MRP may be made electronically available to the public.

ii

Abstract

PEAR SQUARE: DESIGN AND DEVELOPMENT OF INCLUSIVE DIGITAL MEDIA TECHNOLOGY

Samuel Legros Master of Digital Media Digital Media Ryerson University, 2018

This project investigates the development process of accessible digital media technologies using Pear Square, a web platform aimed at assisting post-secondary students with their academic accommodations, as the research basis. Current development processes are contextualized by identifying relating concepts and resources that demonstrate approaches in creating accessible systems. The research process consists of technical analysis of several accessibility tools and their influence on the development processes of websites, such as colour and contrast or screen reader functionality for people with low or no vision. The development of the Pear Square platform consists of identifying key user-case scenarios and ensuring the developed features accommodate current accessibility standards. Through the analysis of the development process of Pear Square, the objective of this research is to assess current development technologies and propose future solutions that enable efficient accessible development processes.

iii

Acknowledgements

I have been fortunate to have received support and guidance from many incredible people throughout my master's studies. To my supervisor, Am Sagarwala: Ever since my first day in your undergraduate course, your knowledge and calm demeanour sparked new inspiration to push myself to be the best I could be. Thank you for all your guidance and resourcefulness in rendering this past year as one of the most transformative of my educational career. I will forever cherish our office chats. Thank you for being an instructor with passion, a supervisor with integrity, and a friend for support. To my second reader, Namir Ahmed: Thank you for going above and beyond with such profound advice and guidance that helped shape this paper into what it is today. To Leslie Bone: Thank you for all of your support and guidance in successfully securing the Mitacs funding. Your continued support was integral to the success of this project. I owe thanks to the entire MDM cohort and administration for creating a unique culture of support and innovation that pushed all our projects to their true potential. Thank you to all the friends and family who provided support during the tough times, and celebrated the good ones. I am grateful for your unwavering support. Finally, I would like to thank my partner and best friend, Katlynn Sverko. You push me to be the best student, entrepreneur, and friend I can be. I know you will always have my back, and this project would not have been possible if I didn't have the support you provide every day.

iv

Disclaimers

This Major Research Project (MRP) involves the development of an online accessible website platform (hereby further known as the `platform' or 'website'). The research focuses on the development of the platform aimed at assisting users that may have certain disabilities. At the time of writing, I myself do not have a visible disability. While much of the research and development of the platform was aimed to be as accessible as possible, I understand that, due to time constraints, that not all accessibility scenarios were designed into the platform. The platform is aimed to comply with level AA of the Web Content Accessibility Guidelines (WCAG) 2.0 guidelines and the Accessibility for Ontarians with Disabilities Act of 2005 (AODA) (as discussed in later sections of this paper).

v

Table of Contents

Author's Declaration Abstract Acknowledgements Disclaimers List of Appendices List of Figures Introduction Relating Concepts Objectives Methodologies Discussion Conclusion Appendices References

ii iii iv v vii viii 1 4 9 11 21 27 29 36

vi

List of Appendices

Appendix A Appendix B Appendix C Appendix D

Current Accommodation Process at Education Institution in Ontario, Canada Projected Pear Square Accommodation Process Evolution of Platform Mockup Designs Platform Code Contributions (March 2018 to July 2018)

29 30 31 35

vii

List of Figures

Figure 1 Figure 2 Figure 3 Figure 4

WebAIM Color Contrast Checker ChromeVox focus (website: http://www.buildforall.ca) Firefox Inspector developer tool (website: http://www.buildforall.ca) Firefox Accessibility developer tool prompt

18 20 23 24

viii

Introduction

Individuals with disabilities face many challenges, such as attending an event, meeting a colleague, or facing an interview. These tasks may seem trivial to some, but quite difficult for others. This paper shall focus on the processes encapsulating the research and development of an accessible website platform, Pear Square. The platform aims to pair people with disabilities to service providers. Pear Square's current focus is helping students receive classroom accommodations in the most effective and accessible way, while providing them with the tools they need to reach their academic goals. The technical scope of the project is not reinventing the wheel, but in fact implementing various already-existing digital technologies and evaluating their applications within the space of education and accessibility. Development of accessible web platforms that provide students with classroom accommodations is virtually non-existent, despite the means and methods that do exist to create such a system. This paper will be divided into four sections: Relating concepts, objectives, methodologies, and discussion.

The relationship between this project and the students academic program is the development of digital media technology aimed at assisting with academic disability accommodations, as well as the assessment of accessible development processes. Currently, the process at major institutions, such as Ryerson University, relies on manual efforts to coordinate appropriate classroom accommodations. Research will take place as to whether implementing a digital media platform for disability accommodations will render the system more efficient and accessible for all parties involved.

1

When discussing the term disability, there are several existing models of definition. The defining model of disability in this paper is that of the social model, as described by Tudzi, Bugri, and Danso (2017) where "the disability is seen as the creation of society" (p. 190). Meaning, the disability is not any physical and psychological impairment, but of how society imposes systems that are not compatible with everyone. The development of inaccessible technologies, such as a website that is not accessible via screen reader, acts as a barrier for anyone who requires that particular assistive technology. In this case, the disability does not refer to a person's limited vision and their reliance of assistive technologies to navigate websites. The disability refers to the inaccessibility of that particular website.

This paper focuses on researching equitable practices and processes that benefit all. It looks at ways of removing barriers that hinder accessible academic accommodations. In Ontario Canada, according to the Ontario Human Rights Commission (OHRC), (n.d.) "accommodation of students with disabilities is governed by the Charter of Rights and Freedoms, and by provincial human rights statutes." Meaning, the OHRC mandates that all post-secondary institutions are required to provide academic accommodations for students with disabilities. Speaking with an educational institution staff member who currently arranges student accommodations (they asked to remain anonymous in this paper), it is clear that connecting resources to people with disabilities who require assistance in their daily life is extremely difficult and time consuming for many businesses, institutions, and organizations.

2

This project aims to research what would enable businesses and organizations to implement practices in the development of accessible technologies. The research proposed for this project will be to evaluate accessible workflows that accommodate a variety of web-based systems. These experiments will be conducted through the development of Pear Square, an online accessible website platform prototype, as these web technologies provide an extended reach for many business and projects, yet are under-utilized as resources for accessibility. Michalska, You, Nicolini, Ippolito, and Fink (2014) have conducted audits on websites organized by demographic served such as American federal, university, and retail websites, and found that 96% of federal websites exhibit accessibility violations, 41% of university websites do not meet the Web Accessibility In Mind (WebAIM) standards, and 83% of service/retail websites are inaccessible to people with disabilities (p. 995). These numbers demonstrate a lacking of accessible design and development from companies and organizations building digital media technologies.

It is important to note that the Pear Square platform prototype may be commercialized at a later date beyond the timeline and scope of this project, and utilized by institutions who wish to provide accommodations for people with disabilities. The web platform prototype will be developed with scalability in mind. While within the scope of the current project is researching tools and methods to developer an accessible platform, the platform will be developed to handle a variety of accommodations, such as scenarios for attending town hall meetings, events, or job interviews. Future applications of this platform are aimed to provide anyone who requires accommodations with the tools they need for any scenario.

3

Relating Concepts

This section of the paper introduces concepts and practices relating to the research being conducted for this project. It covers several technical and general terms, while relating them back to the objectives of the research. While several terms have been used in the introductory portion of this paper, such as digital media technology, (online) platform, and website. It is important to note that these terms, are virtually interchangeable in meaning. Whether something is henceforth described as either a website or online platform, they are both referring to the same instance of technology: a website that can be accessed through the internet. These websites have been developed by a web developer using a standard integrated development environment (IDE), or text editor, then deployed to a server for public or private access to that website.

Web Accessibility Standards Developing a website that is accessible by design is a complex task. It requires sufficient research and knowledge regarding current best-practices, and in some cases, mandated policies. In theory, websites remain on the internet and can be accessed by anyone with an internet connection and a web browser. That being said, how would a single website function under all scenarios that are presented to it? For example, a visitor may utilize assistive technology (screen reader), or view the website on a mobile device or tablet. Fortunately, there exists many standards and policies that act as guidelines for developing accessible websites. One of the most widely adopted web accessibility standard is the Web Content Accessibility Guideline (WCAG) 2.0 (W3C, 2008). The W3C (2018) website describes their initiative as "an international

4

community where Member organizations, a full-time staff, and the public work together to develop Web standards." Their authorship of the WCAG 2.0 have resulted in a robust framework for web developers as a resource for developing accessible websites. While the document dives into specific technical examples and specifications for developing accessible websites, we will be discussing and using the four main principles (or terms) as outlined in the WCAG 2.0. The principles are as follows; perceivable, operable, understandable, and robust (W3C, 2008). Each of these principles acts as categories in making website content that is accessible for numerous scenarios, from being able to navigate the page using assistive technologies to the flow of information logic. The W3C (2008) has employed a system in order to verify the level of conformance a website has in relation to WCAG 2.0 specifications. These levels of conformances are categorized into three; A (lowest), AA, and AAA (highest) (2008). Each level of conformance corresponds to the amount of technical specifications highlighted in the WCAG 2.0 are present in the development structure of a website. If a website meets all the specified technical components outlined in their AA conformance, that website is then defined to have AA WCAG 2.0 conformance. The Pear Square platform was aimed to be developed at the AA WCAG 2.0 level of conformance.

While developing the Pear Square platform to conform to level AA of the WCAG 2.0, it is important to make note of local jurisdiction policies regarding organizations that employ digital media technologies. This paper was developed and researched at Ryerson University, located in Ontario, Canada. The prominent Act regarding this scope of project corresponds to the Accessibility for Ontarians with Disabilities Act (AODA), created by the Government of Ontario

5

(2016). The Act was developed "recognizing the history of discrimination against persons with disabilities in Ontario, the purpose of this Act is to benefit all Ontarians" (2016). The Act goes into great detail on levels of standards that organizations must maintain on their websites in order to comply with the Act. Many of the general specifications are in direct relation with the technical specifications outlined in the WCAG 2.0. The AODA provides guidelines and standards for organizations and businesses within Ontario to maintain a certain level of accessibility on all fronts of their business, including online websites. The WCAG 2.0 dives deeper into the technical specifications required to developer accessible digital media technologies, such as websites and platforms.

Platform Application There are many resources that can be used as guidelines for developing accessible technologies, while these are more technical and detailed, it is important to understand a fundamental concept when designing such platforms, such as universal and inclusive design. Many organizations fail to see the importance of applying universal design principles to their products and practices. Waller, Bradley, Hosking, and Clarkson (2015) have demonstrated that there is a clear business case for implementing universal design principles from the inception of a project. They break down the application of universal design into three main components, people, profit, and planet. Each of which is relating back to the notion that "every design decision has the potential to include or exclude customers" (p. 297). Should a website be designed without a certain feature, such as using the keyboard to navigate the page, then you are thereby excluding all those potential customers, clients, partnerships, and other relations from

6

happening for all those who rely on that website feature. Software engineers, Willuhn, Schulz, Knoth-Weber, Feger, and Saillet (2003) from IBM have also conducted research in inclusive design, focusing on a User-Centered Design (UCD). Willuhn et al. note that while it is good practice to consult accessibility guidelines during the research and development of a digital media technology (they use computer software as their research application, however the principles do translate to web platforms as they are both developed using programming languages), that alone is not sufficient. One must employ UCD in order to understand who will be using the technology (p. 653). Taking this into account, every decision made in the research and development of the Pear Square platform has the user as the top priority.

Accommodation Focus It has been mentioned that the platform will be addressing student accommodations at post-secondary institutions. These accommodations can take many forms, thus requiring a variety of processes to instigate. Quinlan, Bates, and Angell (2012) discuss the perceptions of academic accommodation within postsecondary institutions from the perspective of the students. In numerous institutions students must disclose their need for accommodation to the university, and their professors, this process is not only long, but can be seen as difficult for those requiring support. Hartman-Hall and Haga claim that "students with disabilities seldom express satisfaction with their ability to communicate their needs and desires to staff and faculty" (as cited in Quinlan et al., 2012). The findings of Quinlan et al. (2012) revealed three types of academic accommodation within the classroom: non-accommodation, formal accommodation, and accommodation for all. This project will be focused on formal accommodation as it is the

7

requirement and current standard for Ryerson. Formal accommodations, being formal requests, that must be made by a student in order to receive the classroom accommodations, such as such as an American Sign Language (ASL) interpreter for a student who is deaf or hard of hearing, or a computerized note taker (CNT) for a student with mobility impairments, for example.

8

Objectives

Through the design and development of Pear Square, the objectives of this paper are to assess current development technologies and propose solutions for efficient accessible development. There are many existing barriers that make the current process inaccessible to many students. Insights can be drawn on the limitations of the current system, and the potential benefits to utilizing an accessible web platform to enhance the current accommodation system in place. By enhance, this means addressing the pain-points of the current accommodation process and remedying them through technology features (such as automatic delivery of emails to replace snail mail, for example). These enhancements will be described in detail within subsequent sections of the paper.

As mentioned in the introductory section of this paper, I had briefly mentioned the discussion that took place with an educational institution staff member who currently arranges student accommodations. The staff member outlined the current process that students must go through in order to receive the classroom accommodations they require for academic success. After discussing the many components required, from arranging the initial meeting between the student and the educational institution staff member, to coordinating the appropriate service provider who can provide the accommodation server to the student, such as an American Sign Language (ASL) interpreter, a diagram was created to better visualize and demonstrate the many shortcomings of the current system in place (see Appendix A). The illustration reveals the lengthy process that is a result of the many pain-points of the current system.

9

The purposes of this paper are to research and evaluate current processes of developing accessible web platforms. The development process will result in a web platform aimed at assisting student class accommodations, and propose practical solutions that will better support the system. The outcomes of this project is hoped to benefit all parties involved in the institution accommodation process, as well as other developers and project managers who seek to employ accessible development strategies. It is hoped that the students will benefit from the accessible platform, allowing them to independently select their accommodation, and receive prompt feedback. The institution staff members will have their accommodations requests automatically organized, allowing for a swift process from start to finish. Finally, the service providers will benefit from a research-based system to better organize their service accommodations. While the current scope of the project focuses on the Ryerson network, future applications of the platform can be applied to a variety of scenarios beyond academia.

10

Methodologies

Part A: Defining the User Base Many discussions and meetings were held in the early stages to determine the functionalities of the platform, as well as defining user-case scenarios. It was known that the platform would serve three primary category of users: students, educational institution staff members (henceforth known as 'staff members'), and service providers. This section of the paper will detail each user case and their roles and functions towards the Pear Square platform. Each user type will be provided a segmented portion of the Pear Square platform, where the platform will be developed into three portions, in order to accommodate the variety of functions from each respective user type (a reminder that the current accommodation process can be seen as a workflow diagram in Appendix A). The accommodation process that Pear Square is projecting to implement can be found in Appendix B, it contains the tasks and efforts for students, service providers, and staff members.

Beginning with the students, this user type was the primary focus of the development during the summer months. The current process heavily relies on constant communication between the students and staff members. This is because there is no current accessible system in place for the accommodation process. In certain cases, the process cannot begin without staff member intervention. For initial contact regarding accommodations, students are required to schedule an in-person meeting with a staff member. Imagine a student (new to an institution) that requires an ASL interpreter for them to participate in class. For them to meet with a staff member

11

for the arrangement of this accommodation, they also required an ASL interpreter for that meeting. This scenario seems like a catch-22, a student requires an interpreter for class, but also for the meeting with a staff member who will find them an interpreter. This is a major pain-point for students, it may not occur in all scenarios, but it illustrates that the current system does not allow for any agency towards the student. This issue can be mediated using Pear Square, as it would no longer be necessary for that initial meeting with the staff member to arrange the accommodations. The student can submit their request on their own time. The remaining scenarios for the students are pretty straight forward. Much of the Pear Square system will automate the student process, rendering it more efficient and accessible for the student. For example, when they submit a request, they must simply wait until appropriate service providers have been approved for them, and they will receive the accommodation they require. There will be a post-accommodation section of the platform where the student can review any notes or files that are provided to them from the accommodation session.

The service providers process will also receive several changes that reduces effort and enhances clarity when it comes to accepting and completing accommodations. Their section of the platform will display a job board-like view where they can select open accommodation requests. Once a student has submitted an accommodation request, it will be sent to all available and appropriate service providers who can bid on the request. The current system in place is a manual process, where the staff member must manually email known service providers if they can perform the accommodation for that request. The current system layers a sense of uncertainty onto all parties involved in the accommodation process. The staff member must wait

12

to hear back from a service provider, and they may decline the request. The service providers also must wait in the dark until they receive an email from a staff member about a potential job, which may conflict with their schedules. It is clear that the existing process contains too many unknown variables from multiple points-of-view. The Pear Square system aims to alleviate that, allowing for more transparency between accommodation requests.

Lastly, we have the staff members, who are currently over burdened with a manual workflow. In order to complete the accommodation process in its entirety, the staff member must perform several tasks, such as coordinate emails between the students and service providers, seek out appropriate service providers for an accommodation request, arrange payouts to the provider once the accommodation has been completed. There are also many unknowns to their roles, such as if a service provider actually arrived and performed the work, as there exists no follow-up system in place. Pear Square aims to address all these pain-points for the staff members. When a student requests an accommodation, and the service provider bids on it, the staff member simply approves the arrangement. They remain the final executive decision maker for the accommodation, while having their efforts dramatically reduced through Pear Square. The platform will also organize the payout to the service providers, and generate detailed reports for governmental filing and other regulatory policies that are required for institutional accommodations.

13

Part B: Developing the Platform The development of the platform remains to this day, flexible and adaptive to any changes or revisions that need to be made to ensure proper usability with user testing participants. It was decided to develop several high fidelity mockups to serve as starting points for each user case. These mockups would be the basis of discussion to ensure that the proper features were outlined and properly researched prior to starting any development of the website platform. The mockups evolved over time, almost on a weekly basis upon meeting with the staff member of a local post-secondary educational institution who provided details regarding the accommodation process that encapsulated the students, staff members, and service providers. For the scope of the paper, the student side of the mockups will be provided and documented for analysis (please see Appendix C for a timeline of platform mockup designs). Beginning in January and working throughout the summer, the visual designs of the platform mockups change dramatically. Looking at the primary functionality for the student side, performing a new request submission, that specific page evolves from a lengthy single-page form (Appendix C, sections 1, 2, and 3) to a multi-step modal (Appendix C, sections 4 and 5) that clearly breaks down the steps into easy to understand segments.

Once the platform mockup designs were deemed appropriate by Pear Square, it was time to begin the programming aspect of the project. While I was tasked to complete the platform mockup designs, once development began, the task of designing the mockups was delegated to another Pear Square team member. My primary task was to translate the static mockups into an accessible website platform. In continuation of previous technical learning of website

14

development in the MDM program, the development stack used to deploy the Pear Square platform was LAMP. This stack, as defined by Rouse (2008) describes "open source Web development platform that uses Linux as the operating system, Apache as the Web server, MySQL as the relational database management system and PHP as the object-oriented scripting language". This stack was selected for the project as Pear Square already possessed an instance of LAMP, as it was justified as an adaptive technology to scale with the nature of the platform. In order to keep track of development iterations and changes, GitHub was employed as the version control system (VCS) for the source code. There are many benefits to utilizing a VCS when developing code for any project type. Several of these benefits are described by Blischak, Davenport, and Wilson (2016), such as segmenting experimental code so that it does not break currently functioning code, as well as providing a log of history with comments and details regarding all changes made to the code, thus allowing collaboration to happen more easily between the code (p. 1). As the development of the Pear Square platform continued, the VCS system in place allowed for smooth adaptation towards the constant changes in platform direction (see Appendix D for development contributions made between March and July 2018). It can be seen than the project was subdivided into several project 'repositories' (another term for project folders on GitHub), and code contributions were tracked at every step of the development of the platform. Having the source code to remain on the GitHub platform, should Pear Square decide to open source their accessibility-first technical process, this may evolve the project into a collaborative form between other organizations that are developing web-based platforms.

15

Now that we have the a solid foundation of accessible website standards, the basis platform mockups designed, version control setup for the incremental code changes, development can now commence. The actual development process occurs within Pear Square, the research conducted alongside development was in tandem with creating an accessible platform following the previously mentioned UCD and universal design principles. It is important to maintain the user as the priority of development, rather than specific features that are assumptions at this point. It remains a priority throughout development that any feature implemented was accessible to a multitude of scenarios, as Barroso, Sandnes, Paredes, Hadjileontiadis, and Martins detail that "millions of people have disabilities that affect their use of [digital media technologies] due to accessibility barriers" (p. 1). That being said, as the platform is aimed accommodate students with disabilities, it is paramount that it maintains a level of accessibility that encompasses the widest possible user scenarios. The work of Moriña (2018) describes that there already exists numerous barriers for students with disabilities established post-secondary institutions. There are many examples of physical locations not being accessible, however, in 2018 one must not overlook the "inaccessibility of websites and virtual spaces" (p. 14). It only seems natural at this state to leverage the Pear Square development process as a basis for evaluating current accessible development tools. At the time of writing, the Pear Square platform remains in its infancy. Due to the scalable nature of the platform, it may take several months, if not years for it to mature into the robust platform that can ultimately serve the widest possible audience. This note is not to discourage the current research and development that has taken place for the platform. There have been many iterations and revisions not only towards the platform, but to the Pear Square business itself.

16

Part C: Development Tools This section identifies, evaluates and assesses resources that can be leveraged for the development of accessible website platforms. Beginning with the visuals of the platform, colour and contrast of each elements were considered. The Canadian National Institute for the Blind (CNIB) (2018) presents some statistics regarding Canadians and vision loss and blindness. On their facts page, they highlight that "half a million Canadians are estimated to be living with significant vision loss" as well as the "the prevalence of vision loss in Canada is expected to increase nearly 30 per cent in the next decade" (2018). It is clear that vision loss affects a significant portion of the Canadian population, and as the developer of an accessible platform, this condition will be addressed by design. Fortunately, there exists many online resources that assist with the development of specific components of websites, in this case, colour and contrast, both of which are key factors for viewing a website or platform. One online resource that was used on a regular basis to ensure color contrast was the WebAIM Color Contrast Checker (https://webaim.org/resources/contrastchecker/). It is a simple technical tool where you place the colour values of your foreground (text) and background colours. The contrast ratio will display and inform you if the contrast is sufficient for certain accessibility standards, Figure 1 provides an example screenshot of comparing two text colours.

17

Figure 1 WebAIM Color Contrast Checker

The standards that the WebAIM Color Contrast Checker uses is WCAG 2.0. This tool greatly simplifies the specifications needed to conform to the aimed Level AA WCAG 2.0 standard. Additionally, WebAIM (2017) also conducted an internet-based research study on the use of screen reader assistive devices for navigation internet websites. Their results indicated that of their 1792 respondents, 89% of them utilized screen readers on a regular basis, while 75% of respondents were legally blind (2017).

While the research was aimed particularly at individuals who have experience with screen readers, the high percentages of those who use the assistive technology on a regular basis was quite high. Knowing this information, along with the mandates outlined in the AODA as discussed previously, the development of the Pear Square platform incorporates the use of screen readers for navigation. In order to swiftly progress through the platform development, Twitter's 18

Bootstrap (2018) framework was added early to the development cycle as the front-end component library. As detailed on their website, "Bootstrap is an open source toolkit for developing with HTML, CSS, and [JavaScript]" (2018). These programming languages of HTML, CSS, and JavaScript were already being used to develop the Pear Square platform. Bootstrap allows for simple integration of a responsive grid to design the structure of the page, as well as built-in accessible HTML markup that allow for seamless integration with any device size, as well as those using a screen reader. Continual testing of the platform's screen reader was took place using the Google Chrome web browser ChromeVox extension (http://www.chromevox.com/). This free extension allowed for manual testing of the platform functionalities without the need to purchase an expensive screen reader model, as this extension carries out the same functionalities of reading out the HTML content of a website. Figure 2 demonstrates the focus element of ChromeVox. The orange border around the 'What is your role' is the focused HTML element on the website. ChromeVox reads out the content within that orange box. Users can press the tab keyboard key to cycle through elements of the website (should they be coded in an accessible way), and have the contents read back to them.

19

Figure 2 ChromeVox focus (website: http://www.buildforall.ca)

20

Discussion

Although it seems that only a few accessible development components were assessed, the variety present in this paper captures a vast spectrum of user cases. This section of the paper is to evaluate and discuss the development process of accessible websites. Summarizing the components touched upon in the previous section, we have colour and contrast, responsive design, and screen reader accessible. These directly relate to the four main principles of the WCAG 2.0, as discussed earlier; perceivable, operable, understandable, and robust. It only takes a few curated resources to provide developers with the tools required to build accessible websites. I will be addressing the beginning process of web development projects. For larger and already established projects, this discussion remains valid, however the discussion examines whether accessible practices are observed and relevant at an early stage. Having gone through the process of initial development of the Pear Square platform, I can discuss several lacking qualities of developing accessible websites.

To begin, while much of the research points to policies and tools that can be used to develop accessible systems, much of the information is fragmented. If universal design remains a mindset to strive for, why is it that finding the appropriate information such an enduring task? As an increasing number of organizations publish online resources that enable developers to build accessible websites, the adoption may be accepted at a higher rate, however this information should remain at the forefront of web development, rather than an afterthought. In order to obtain a basic-level understanding of accessible web design principles, developers are tasked to perform

21

external research beyond their workflow processes. A quick internet search of "develop accessible websites" will result in countless results of how to do just that. There exist many resources to learn web development, Udemy, Codecademy, W3Schools, and freeCodeCamp to name a few. Most of these resources begin web development with your standard HTML, CSS, and JavaScript languages. They also provide sections for accessibility, however some learning platforms miss major elements of developing an accessible website, such as proper colour contrast or enabling screen reader functionalities.

Another flawed approach to learning web development is lack of awareness of accessibility policies. While much of the content on the internet is regulated by jurisdiction (media that is available to Americans may not be available to Europeans), accessible development practices need not a geographical boundary, as it is not the content of the web but the structure. The local accessibility policy of Ontario, Canada was assessed under the AODA, and much of the online portion of the Act was taken directly from the WCAG 2.0, which is a world-wide initiative.

It is natural for web developers to test the development of their website using multiple web browsers, such as Firefox, Chrome, and Safari. These browsers provide many invaluable tools for web development, more commonly known as inspector tools. These tools allow for an 'under the hood' look at the website structure, allowing for manual tweaking of the HTML structure, CSS styling, and more (see Figure 3 for an example screenshot).

22

Figure 3 Firefox Inspector developer tool (website: http://www.buildforall.ca)

While these inspectors are valuable for debugging and optimizing code, it lacks accessible features. For those not familiar with website semantic structure, the Firefox Inspector tool does not provide any indication whether the website is screen reader accessible or has the proper colour contrast that meets the WCAG 2.0 AA level of compliance. In short, web browser inspector tools are just that, inspectors. They do not provide any recommendations or evaluations on your code. Firefox, however, recently released an accessibility component to its line of web tools. Upon its release, I was unable to locate the accessibility tab, only to come across a blog article by Marco Zehe, Mozilla's (organization behind the Firefox browser) senior accessibility QA engineer (2018) that explains that in order to enable the accessibility tool "you need to manually enable the panel once so it will show up in the tool box". This remained a multi-step procedure that must be followed in order to enable the accessibility inspector to your browser

23

toolbox. Even with that enabled, you also have to manually enable the tool every time you want to use it (see Figure 4).

Figure 4 Firefox Accessibility developer tool prompt

The question remains, why is it so convoluted to enable an accessibility tool for web development? Of course, performance plays a big role in website development. However if a website is not accessible to a large portion of the population, performance does not amount to much if that population cannot access it.

After exploring and evaluating existing resources for developing accessible websites. There are several recommendations that may further enhance the development process. I believe that while adding accessibility tools and features to web browsers is useful, it may not be the optimal placement and method. The mindset of developing an accessible website should remain at the forefront of the project, instead of an after-thought. Developers should instinctively know what is accessible, and what is not. There are several ways in which this can be achieved, education and embedded resources. Education comes into play when developers are learning how to build websites, code algorithms, and debug their files. Introductory courses on Udemy, Codecademy, and freeCodecamp should integrate an accessible mindset from lesson 1. It is 24

important to iterate that development, much like any job, is a series of decisions being made. Should this content go at the top or what colour should this text be, for example. Many early developers are unaware of certain accessible standards such as colour contrast, or logic of information flow on a page. Accessible development should not be lesson 4, it should be lesson 1, and actively included in all other lessons.

Second, we have embedded development tools and resources. While web browsers such as Firefox are releasing accessibility tools, there are many forms to which this solution can manifest. Taking the writing of code into consideration, most developers utilize some form of text editor to write their code, however these tools lack accessibility tools embedded within their functionalities. Stack Overflow, at the time of writing, the largest online community for developers to learn and share their programming knowledge, recently published a web developer survey with data regarding developer experience, demographics, technologies used, language preferences, and so on. Oddly enough, this survey does not include any mention of accessibility practices or experience (Stack Overflow, 2018). Most IDE's that support web developer offer robust features for development of HTML, CSS, and JavaScript. Should a feature be lacking in a certain IDE, there are most likely extensions that can be installed onto the IDE for additional features, this is typically where accessibility features are added. Using the Visual Studio IDE as example, as this is the most common IDE of choice for web developers at 39% of Stack Overflow survey respondents (Stack Overflow, 2018), a search was performed on their IDE extension 'marketplace'. Out of the over 7,000 extensions that you can use to augment your Visual Studio IDE, only 2 of them are returned when you search 'accessibility' (only 1 result is

25

returned if you search 'WCAG'). There is clearly a lacking feature for adding an accessible extension to the most popular web development IDE.

26

Conclusion

This project was an invaluable opportunity to learn and grow as a researcher, developer, and student of universal design. The development of the Pear Square platform provided insights into current development processes and the lacking support for ensuring the systems being built are accessible for all, or at least a larger portion of society. One recommendation that I may have for the inadequacies that were found when researching various development tools and resources is the aggregation of appropriate data, and the development of advanced tools that can be leveraged by developers of any skill level. Learning about accessibility policies in your jurisdiction are separate from tools and resources with technical applications.

One solution may be a system already existing in web browsers that can provide certain instances of disability user profiles. For example, should a developer wish to view a website through the eyes of someone with low vision, their browser will then have the ability to modify the look and structure of the page to mimic what it would look like for someone with low vision. This feature could encapsulate a variety of user profiles that include low vision, blind, colour blind, screen-reader functionality only, and so on. Another solution may be presented at an earlier stage in the development process, through the IDE. Rather than developing this feature as an IDE extension, it would also be developed as a core feature that provides evaluations and recommendations for accessibility implementation based on your existing code. Much like your typical word processor that underline misspelled words, this feature can highlight, evaluate and provide feedback whether your code is accessible for certain features. There may be a scorecard

27

that appears and informs you that you have accessible images but not enough colour contrast, for example.

There are many forms of solutions to this problem, as the problem itself is not a lacking of skill, but of awareness and knowledge towards building accessible websites and platforms. As for the future of the Pear Square platform, there are several user testing sessions that are currently being arranged to test and evaluate the current state of the platform. As my recommendations henceforth have been feature add-ons to already existing technological systems, there is true value is sitting down with another person and start a discussion relating to the platform. It is difficult for a technology to reproduce human touch, especially when it comes to accessibility.

28

Appendix A

Current Accommodation Process at Education Institution in Ontario, Canada Workflow diagram

Legend Yellow boxes: Students Red boxes: Service providers Blue boxes: Staff members White boxes: Process pain-points

29

Appendix B

Projected Pear Square Accommodation Process Workflow diagram

Legend Yellow boxes: Students Red boxes: Service providers Blue boxes: Staff members White boxes: Pear Square automated processes

30

Appendix C

Evolution of Platform Mockup Designs 1. Platform Mockup - New Request Form (January 2018)

31

2. Platform Mockup - Completed Session Example (February 2018)

32

3. Platform Mockup - New Request Form (March 2018)

33

4. Platform Mockup - Student Dashboard | New Request Form (May 2018)

5. Platform Mockup - Student Dashboard | New Request Form (June 2018)

34

Appendix D

Platform Code Contributions (March 2018 to July 2018) 1. GitHub Code Contributions

35

References

Barroso, J., Sandnes, F., Paredes, H., Hadjileontiadis, L., & Martins, P. (2015). Software for enhancing accessibility and fighting info-exclusion. Universal Access in the Information Society, 14(1), 1-3. doi:10.1007/s10209-014-0359-y

Blischak, J. D., Davenport, E. R., & Wilson, G. (2016). A Quick Introduction to Version Control with Git and GitHub. Computational Biology, 12(1), 1-18. doi:10.1371/journal.pcbi.1004668

Bootstrap. (2018, July 3). Bootstrap. Retrieved July 8, 2018, from https://getbootstrap.com/

CNIB. (2018). Fast Facts about Vision Loss. Retrieved July 8, 2018, from http://www.cnib.ca/en/about/media/vision-loss/pages/default.aspx

Government of Ontario. (2016, April 19). Accessibility for Ontarians with Disabilities Act. Retrieved July 8, 2018, from https://www.ontario.ca/laws/statute/05a11

Michalska, A. M., You, C. X., Nicolini, A. M., Ippolito, V. J., & Fink, W. (2014). Accessible Web Page Design for the Visually Impaired: A Case Study. International Journal of Human-Computer Interaction,  30(12), 995-1002. doi:10.1080/10447318.2014.925771

36

Moriña, A. (2018). University surroundings and infrastructures that are accessible and inclusive for all: Listening to students with disabilities. Journal of Further and Higher Education, 42(1), 13-23. doi:10.1080/0309877X.2016.1188900

Ontario Human Rights Commission. (n.d.). Post-secondary education | Ontario Human Rights Commission. Retrieved July 8, 2018, from http://www.ohrc.on.ca/en/opportunity-succeed-achieving-barrier-free-education-studentsdisabilities/post-secondary-education

Quinlan, M. M., Bates, B. R. and Angell, M. E. (2012), `What can I do to help?': Postsecondary students with learning disabilities' perceptions of instructors' classroom accommodations. Journal of Research in Special Educational Needs, 12: 224­233. doi: 10.1111/j.1471-3802.2011.01225.x

Rouse, M. (2008, December). LAMP (Linux, Apache, MySQL, PHP). Retrieved July 8, 2018, from https://whatis.techtarget.com/definition/LAMP-Linux-Apache-MySQL-PHP

Stack Overflow. (2018, March 19). Stack Overflow Developer Survey 2018. Retrieved July 23, 2018, from https://insights.stackoverflow.com/survey/2018/

37

Tudzi, E. P., Bugri, J., & Danso, A. (2017). Towards Accessible Built Environments in Universities in Ghana: An Approach to Inclusiveness Assessment. Disability, CBR and Inclusive Development (DCID), 28(1), 189-206. Retrieved July 8, 2018.

W3C. (2008, December 11). Web Content Accessibility Guidelines (WCAG) 2.0. Retrieved July 8, 2018, from https://www.w3.org/TR/WCAG20/

Waller, S., Bradley, M., Hosking, I., & Clarkson, P. J. (2015). Making the case for inclusive design. Applied Ergonomics, 46, 297-303. doi:10.1016/j.apergo.2013.03.012

WebAIM. (2017, December 21). Screen Reader User Survey #7 Results. Retrieved July 8, 2018, from https://webaim.org/projects/screenreadersurvey7/

Willuhn, D., Schulz, C., Knoth-Weber, L., Feger, S., & Saillet, Y. (2003). Developing accessible software for data visualization. IBM Systems Journal, 42(4), 652-668. Retrieved July 8, 2018.

World Wide Web Consortium. (2018). About W3C. Retrieved July 8, 2018, from https://www.w3.org/Consortium/

38

Zehe, M. (2018, April 11). Introducing the Accessibility Inspector in the Firefox Developer Tools. Retrieved July 23, 2018, from https://www.marcozehe.de/2018/04/11/introducing-the-accessibility-inspector-in-the-firef ox-developer-tools/

39

