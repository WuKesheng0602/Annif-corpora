ROBUST AND FAULT TOLERANT CONTROL OF MODULAR AND RECONFIGURABLE ROBOTS
by

Sajan Abdul
Master of Science in Engineering, Lakehead University, Thunder Bay, Ontario, Canada, 2004

A thesis presented to Ryerson University in partial fulfillment of the requirements for the degree of

Doctor of Philosophy
in the Program of Aerospace Engineering

Toronto, Ontario, Canada, 2008 © Sajan Abdul 2008

Library and Archives Canada Published Heritage Branch 395 Wellington Street Ottawa ON K1A 0N4 Canada

Bibliothèque et Archives Canada Direction du Patrimoine de l'édition 395, rue Wellington Ottawa ON K1A 0N4 Canada
Your file Votre référence ISBN: 978-0-494-58992-2 Our file Notre référence ISBN: 978-0-494-58992-2

NOTICE: The author has granted a nonexclusive license allowing Library and Archives Canada to reproduce, publish, archive, preserve, conserve, communicate to the public by telecommunication or on the Internet, loan, distribute and sell theses worldwide, for commercial or noncommercial purposes, in microform, paper, electronic and/or any other formats. . The author retains copyright ownership and moral rights in this thesis. Neither the thesis nor substantial extracts from it may be printed or otherwise reproduced without the author's permission. In compliance with the Canadian Privacy Act some supporting forms may have been removed from this thesis. While these forms may be included in the document page count, their removal does not represent any loss of content from the thesis.

AVIS: L'auteur a accordé une licence non exclusive permettant à la Bibliothèque et Archives Canada de reproduire, publier, archiver, sauvegarder, conserver, transmettre au public par télécommunication ou par l'Internet, prêter, distribuer et vendre des thèses partout dans le monde, à des fins commerciales ou autres, sur support microforme, papier, électronique et/ou autres formats.

L'auteur conserve la propriété du droit d'auteur et des droits moraux qui protège cette thèse. Ni la thèse ni des extraits substantiels de celle-ci ne doivent être imprimés ou autrement reproduits sans son autorisation.

Conformément à la loi canadienne sur la protection de la vie privée, quelques formulaires secondaires ont été enlevés de cette thèse. Bien que ces formulaires aient inclus dans la pagination, il n'y aura aucun contenu manquant.

Author's Declaration

I hereby declare that I am the sole author of this thesis. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

Sajan Abdul I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

Sajan Abdul

iii

ROBUST AND FAULT TOLERANT CONTROL OF MODULAR AND RECONFIGURABLE ROBOTS
Doctor of Philosophy In the Program of Aerospace Engineering 2008

Sajan Abdul
School of Graduate Studies Ryerson University

ABSTRACT

Modular and reconfigurable robot has been one of the main areas of robotics research in recent years due to its wide range of applications, especially in aerospace sector. Dynamic control of manipulators can be performed using joint torque sensing with little information of the link dynamics. From the modular robot perspective, this advantage offered by the torque sensor can be taken to enhance the modularity of the control system. Known modular robots though boast novel and diverse mechanical design on joint modules in one way or another, they still require the whole robot dynamic model for motion control, and modularity offered in the mechanical side does not offer any advantage in the control design. In this work, a modular distributed control technique is formulated for modular and reconfigurable robots that can instantly adapt to robot reconfigurations. Under this control methodology, a modular and reconfigurable robot is stabilized joint by joint, and modules can be added or removed without the need of re-tuning the controller. Model uncertainties associated with load and links are compensated by the use of joint torque sensors. Other model uncertainties at each joint module are compensated by a decomposition based robust controller for each module. The proposed distributed control v

technique offers a `modular' approach, featuring a unique joint-by-joint control synthesis of the joint modules. Fault tolerance and fault detection are formulated as a decentralized control problem for modular and reconfigurable robots in this thesis work. The modularity of the system is exploited to derive a strategy dependent only on a single joint module, while eliminating the need for the motion states of other joint modules. While the traditional fault tolerant and detection schemes are suitable for robots with the whole dynamic model, this proposed technique is ideal for modular and reconfigurable robots because of its modular nature. The proposed methods have been investigated with simulations and experimentally tested using a 3-DOF modular and reconfigurable robot.

vi

ACKNOWLEDGMENTS

Let me begin by expressing my gratitude to my research supervisor Prof. Guangjun Liu for having guided the work that led to this thesis. His constructive criticisms and suggestions have pushed me through these years of endeavor. Also I would like to thank my Ph.D committee members, Prof. Vincent Chan, Prof. Krishna Dev Kumar, Prof. Puren Ouyang and Prof. Jeff Xi for their advice and comments. I wish to express my warm and sincere thanks to my thesis examiner, Prof. Ou Ma for his valuable remarks. Their suggestions have helped in improving this thesis to a great extent. Thanks are offered to Natural Sciences and Engineering Research Council of Canada (NSERC) and Engineering Services Inc. (ESI) for financially supporting this project. I also want to thank the members of the Systems and Control Laboratory, Mathew Adamson, Xiaojia He, Jing Yuan and Daqing Wang for their help and support during these years. Among my colleagues at Ryerson, I would like to thank Godard, Kam Shahid, Surjit Varma for those relaxing coffee breaks, those discussions and conversations about virtually everything under the sky. I would like thank Liao Liang, Richard Mohammed and Jude Alexander for their companionship and good cheer. The company of Kathik Narayan, Sudeep Sukumar, and Arun Ahluwalia was always enjoyable; with their witty comments and their ability to see the funnier side of any situation was always a source of fun to all our circle of friends. With all of them around there never was a dull moment and it was always stress relieving to be in their company. Our cricket team Demerara Southeners and our weekend league matches brought fun to my otherwise routine world of computers and controls. Special thanks to Godard for bringing me in touch with some of the nicest and funloving people. Thanks to him, I will always cherish the time I spent in Toronto. These people and many more made my stay at Ryerson a memorable experience. My deepest thanks to Mahesh, Girish and fellow thampurans for their calming presence and unwavering friendship. They were always a source of inspiration and have vii

contributed to my thesis by their very soothing presence and phone calls. Naming each one of them and listing everything I owe them would be a thesis in its own right. I want to thank my family for being an unending source of support and love. I would also like to express my continuing debt of gratitude to my father, in this the sixth year of his passing. My mother who always encouraged us to study further was a big source of inspiration. Last, but definitely not the least, thanks to my wife and companion, Shinu, for her love and support.

viii

To my family

ix

TABLE OF CONTENTS
Author's Declaration .................................................................................... iii ABSTRACT ...................................................................................................v ACKNOWLEDGMENTS ........................................................................... vii TABLE OF CONTENTS ............................................................................. xi List of Tables ................................................................................................xv List of Figures............................................................................................ xvii List of Appendices...................................................................................... xxi List of Nomenclature ................................................................................ xxiii 1. Introduction ...............................................................................................1
1.1 1.2 1.3 1.4 1.5 Modular and Reconfigurable Robots ................................................................. 2 Fault Tolerant Control of MRR ......................................................................... 4 Motivation and Objectives of Research ............................................................. 6 Contributions...................................................................................................... 7 Outline of Thesis ................................................................................................ 8

2. Dynamic Modeling....................................................................................9
2.1 2.2 Model of Modular and Reconfigurable Robot ................................................... 9 Representation of Faults................................................................................... 11 2.2.1 2.2.2 2.2.3 2.3 Actuator Fault ...................................................................................... 12 Sensor Fault.......................................................................................... 13 Process Fault ........................................................................................ 13

Redundancy in Fault Control Systems............................................................. 14 2.3.1 2.3.2 2.3.3 Structural Redundancy based Fault Tolerance..................................... 14 Kinematic Redundancy ........................................................................ 15 Functional Redundancy........................................................................ 15

xi

3. Torque Sensor based Control.................................................................. 17
3.1 3.2 Distributed Control of Modular and Reconfigurable Robots........................... 19 Simulation Results............................................................................................ 28

4. Fault Tolerant Control of Modular and Reconfigurable Robot.............. 33
4.1 4.2 Fault Tolerant Control Design.......................................................................... 35 Fault Detection ................................................................................................. 40 4.2.1 4.3 Fault Detection Scheme ....................................................................... 41

Simulation Results............................................................................................ 44 4.3.1 4.3.2 Fault Tolerant Control.......................................................................... 45 Fault Detection ..................................................................................... 47

5. Experiments ............................................................................................ 51
5.1 Experimental Setup .......................................................................................... 51 5.1.1 5.1.2 5.1.3 5.1.4 5.1.5 5.2 5.3 5.4 5.5 Control System Architecture................................................................ 53 Hardware .............................................................................................. 53 Electrical System Architecture............................................................. 54 Mechanical Setup ................................................................................. 58 Software ............................................................................................... 58

Results for Torque Sensor based Control......................................................... 60 Results for Decentralized Fault Tolerant Control ............................................ 69 Results for Fault Detection Scheme ................................................................. 75 Discussions....................................................................................................... 77

6. Conclusions and Future Work ................................................................ 79
6.1 6.2 Conclusions ...................................................................................................... 79 Future Work ..................................................................................................... 80

Bibliography................................................................................................. 83 Appendix A ......................................................................................93
xii

Appendix B...................................................................................................95
B.1 Dynamic Model of 3-DOF planar manipulator................................................ 95

Appendix C...................................................................................................97
C.1 Controller Architecture and Flow Diagrams.................................................... 97

xiii

List of Tables
Table 3-1. Parameters of the simulated system ............................................................... 27 Table 4-1. Parameters of the simulated system ............................................................... 44 Table 5-1. Parameters of the system................................................................................ 60

xv

List of Figures
Figure 2-1. Schematic diagram of a joint module ............................................................. 9 Figure 2-2. A typical feedback control system................................................................ 11 Figure 2-3. Actuator Fault ............................................................................................... 12 Figure 2-4. Sensor Fault .................................................................................................. 13 Figure 3-1. Position tracking errors of three joints.......................................................... 29 Figure 3-2. Position error of the third joint with torque sensor ripples ........................... 29 Figure 3-3. Position tracking error of the first joint with torque sensor nonlinearity...... 30 Figure 3-4. Position error on first joint with torque sensor delay.................................... 31 Figure 4-1. Fault detection and fault tolerance framework ............................................. 34 Figure 4-2. The model-based analytical redundancy approach ....................................... 40 Figure 4-3. Tracking errors under actuator faults(at t = 7 s on first joint and t =15 s on third joint) ........................................................................................................................ 45 Figure 4-4. Changes in parameter i1 under fault occurrence.......................................... 46 Figure 4-5. Commanded torque at first joint ................................................................... 47 Figure 4-6. Velocity estimation error on the first joint with actuator fault at t = 7 s....... 48 Figure 4-7. Velocity estimation error on third joint, with actuator fault at t = 15 s ........ 48 Figure 5-1. The components of harmonic drive transmission ......................................... 52 Figure 5-2. Control system architecture for modular robot system................................. 53 Figure 5-3. Electrical communication ............................................................................. 56 Figure 5-4. Unfiltered ADC signal .................................................................................. 57 Figure 5-5. Filtered ADC signal ...................................................................................... 57 Figure 5-6. A modular and reconfigurable robot system ­ Configuration 1 ................... 59 Figure 5-7. Modular and reconfigurable robot - Configuration 2 ................................... 59 Figure 5-8. Trajectories for the three joints ..................................................................... 61 Figure 5-9. Position tracking error at three joints with MRR in Configuration 1 (No payload) ........................................................................................................................... 62

xvii

Figure 5-10. Position tracking error at three joints (MRR in Configuration 1, payload added at t =7s).................................................................................................................. 63 Figure 5-11. Position tracking error at three joints with MRR in Configuration 1 (payload at t = 0 s) ........................................................................................................... 64 Figure 5-12. Commanded torque at three joints of MRR system (Configuration 1)....... 65 Figure 5-13. Position tracking error at three joints, with no payload (MRR in Configuration 2)............................................................................................................... 66 Figure 5-14. Position tracking error at three joints with payload at t = 0 s (MRR in Configuration 2)............................................................................................................... 67 Figure 5-15. Position tracking error at three joints with payload added at t = 7 s (MRR in Configuration 2)............................................................................................................... 68 Figure 5-16. Joint position error at three joints (fault free operation, MRR in Configuration 1)............................................................................................................... 70 Figure 5-17. Joint position error at three joints (fault free operation, MRR in Configuration2)................................................................................................................ 71 Figure 5-18. Joint position error at three joints (fault occurrence at t = 4 s and t = 6 s, MRR in Configuration 1)................................................................................................. 72 Figure 5-19. Joint position error at three joints (fault occurrence at t = 4 s and t = 6 s, MRR in Configuration 2)................................................................................................. 73 Figure 5-20. Commanded torque for three joints (MRR in Configuration 1) ................. 74 Figure 5-21. Changes in parameter i1 under fault occurrence........................................ 75 Figure 5-22. Velocity estimation error with actuator fault at first joint (fault occurrence at t = 4 s) .......................................................................................................................... 76 Figure 5-23. Velocity estimation error with actuator fault at third joint (fault occurrence at t = 6 s) .......................................................................................................................... 77 Figure C-1. Control system architecture of modular and reconfigurable robot............... 97 Figure C-2. Host PC - DSP controller communication over CAN .................................. 97 Figure C-3. Architecture of MRR control system ........................................................... 98 Figure C-4. Flow chart for the initialization of MRR module (Level 1) ......................... 99

xviii

Figure C-5. Flow chart of the MRR module operation (Level 2).................................. 100 Figure C-6. Message interpreter and execution at DSP from communication layer ..... 101 Figure C-7. Flow chart of sequence of tasks on DSP controller, at each sample period102 Figure C-8. Flow chart for the operation of 3DOF MRR system.................................. 103

xix

List of Appendices
Appendix A...................................................................................................93 Appendix B...................................................................................................95
B.1 Dynamic Model of 3-DOF planar manipulator................................................ 95

Appendix C...................................................................................................97
C.1 Controller Architecture and Flow Diagrams.................................................... 97

xxi

List of Nomenclature
Roman Symbols
Im
Fq

Motor inertia Position dependent friction Joint position Joint velocity Joint acceleration Desired joint position Desired joint velocity Desired joint acceleration Mixed tracking error Joint position error Controller gain Actuator effectiveness factor Controller compensating effects of lower modules Lyapunov function candidate Coupling terms due lower modules Viscous friction Coefficient Static friction coefficient Coulomb friction coefficient Stribeck friction coefficient Parametric uncertainty Velocity estimation error Unit vector along axis of rotation of motor Unit vector along axis of rotation of joint Observer gains

q
q q qd qd qd qr q KD Kt Uf
V


B
Fs Fc F

F
e

zm

z K

xxiii

uu u pc

Compensator for effects of lower joint modules Compensator for the constant part of parametric uncertainty Compensator for the variable part of parametric uncertainty Product of motor inertia and gear ratio Estimated velocity signal

u pv M
v

Greek Symbols
J s 


Coupling torque Sensed torque Gear ratio Adaptive gain Joint torque Commanded torque Parameter vector Error in parameter vector Estimated parameter vector Threshold value on estimation error Positive gain Gain of the torque sensor Gain of the torque sensor Offset of the torque sensor

 c



^

 if




 

Subscripts

i

Joint number

Superscripts

T
i

Transpose Joint number xxiv

Chapter 1

Introduction

Many robotic manipulators have been developed for different practical applications, but most of them are not designed to provide the capability of reconfiguration and are difficult to adapt to various tasks and environments. This motivated the design of a reconfigurable robot system (Yim, 1994). The term modular and reconfigurable robot (MRR) is referred to a robot manipulator assembled from discrete mechanical joints and links into one of many possible manipulator structures. Modular and reconfigurable robots are characterised by interchangeable links and joint modules of various sizes. Using standard mechanical and electrical interfaces, the recombination of modules is carried out to create various robot configurations that meet a wide range of different task requirements. Such a modular and reconfigurable robot system has several advantages over conventional manipulators:
· · · · · ·

Cost effectiveness: lowers manufacturing cost, and ease of replacement brings
about a reduction in cost.

Modularity: introduces flexibility to robots by making them reconfigurable. Manufacturability: reduces the number of operations for an individual part
and thus simplifies manufacturing; making them easier and cheaper to build.

Redundancy: implies highly redundant systems since many modules are
available due to the ease of manufacture, thus enhances diagnosability.

Repairability: if a module fails, it is easy to replace the module since there
are others which can take up the same job.

Durability: against system malfunctions due to replaceable standardized
units.

1

Some of the mechanical designs of MRR discussed in the literature, based on the prototype systems built in various research institutes, can be found in (Fukuda and Nakagawa, 1988, Matsumaru, 1995, Castano and Will, 2000, Xi, et al., 2006). "Can a modular control technique be designed for any modular and reconfigurable robot?" is the main question posed. Is the modularity achieved in the mechanical design achievable in the control design too? Can the control law be made independent of each new configuration of the robot? Can faults at each joint module be detected and tolerated with minimum or no information from the other modules? To answer these, two different cases are considered. This thesis is presented in two sections, each of which addresses a different control problem and the ensuing control strategy. One section presents the distributed control strategy for a modular and reconfigurable robot. The other section presents a decentralized fault tolerant and fault detection scheme for the modular robot. Both the schemes are based on joint torque sensing and hence allow a joint-by-joint control strategy, i.e., the control of one joint module does not require the motion states of the other modules and is independent of the other modules. This improves the modularity and repairability of the robots and makes the control procedure ideal for modular and reconfigurable robots.

1.1 Modular and Reconfigurable Robots
With substantial application potential, especially in the aerospace sector, the development of modular and reconfigurable robot (MRR) is one of the most promising research areas in robotics (Yim, et al., 2007). Three types of MRRs have been reported in the literature: self-assembly, self-configuring and manual-configuring. Self-assembly robots possess the highest level of reconfigurability because they can detach from and attach into a robotic system automatically (Fukuda and Nakagawa, 1988, Chirikjian, 1994, Tomita, et al., 1996, Yim, et al., 2000). Self-configuring robots cannot perform self-assembly, but they can perform reconfiguration after a robotic system is assembled with some form of manual assistance. Manual-configuring robots are in fact modular robots that can be reconfigured with some form of manual assistance (Hui, et al., 1993).

2

A survey of MRR systems is discussed in the publication compiled by Setchi and Lagos (2004). So far, reconfigurable systems are developed based on an ad hoc approach due to lack of general-purpose simulation and control techniques. Though such tools are not available, some groundwork has been done and archived in the literature. The main concept of developing reconfigurable robots is based on the use of modular components as building blocks. For this reason, various modules have been proposed for reconfigurable robots. However, these proposed modules are the traditional mechanical components, i.e., joints and links. While the reported reconfigurable robots may represent excellent mechanical design concepts, the modules of known MRRs are not "modular" from control systems point of view because of the existence of dynamic coupling among the modules, which is left to be dealt with by the controller. Conventional robot control methods are based on a known robot configuration and its associated dynamic model, with limited allowable model uncertainties such as unknown payloads (Liu and Goldenberg, 1996a, 1996b, 1997). Even though in theory robust control schemes can handle large model uncertainties caused by robot reconfigurations, they are not practical because of the large uncertainty that leads to extremely high feedback gains that cannot implemented due to limited structure rigidity, computer sampling rate, actuator bandwidth and saturation, etc. Innovative design and control methods are in need in order to develop truly modular and reconfigurable robots. Melek and Goldenberg (2003) recently proposed a neurofuzzy control approach for MRRs, which uses learning control to compensate unmodelled system dynamics due to reconfiguration. The controller parameters are updated using a skill module that is a part of the higher level of the control system hierarchy. While the effectiveness of this approach has been experimentally demonstrated, a difficulty may limit its practical application, which is associated with the initial stage right after a reconfiguration and before the learning controller has learnt the unmodelled system dynamics. At this stage, the behaviour of the robot is not predictable. Recent development in MRR control includes a position control scheme of MRR discussed by Melek and Najjaran (2005), with consideration of external disturbance.

3

Varying payload at the end-effector is treated as external disturbance, and a mathematical formulation connecting end-effector tracking error and payload is derived. The dynamic control of MRR using a virtual decomposition based control approach is discussed by Zhu and Lamarche (2007).

1.2 Fault Tolerant Control of MRR
Dynamic control of manipulators can be performed using joint torque sensing (Hashimoto, 1989, Kosuge et al., 1990, Imura, et al., 1991), without the need for modeling of link dynamics. The effectiveness of these approaches depends on accurate joint-torque sensing. Since joint torque sensor gains and offsets are susceptible to changes due to varying temperature and other factors and onboard calibration of joint torque sensors is difficult, it is desirable to estimate torque sensor parameters. In (Aghili and Namvar, 2006) the dynamical equation is parameterized such that torque sensor parameters are included in the overall system parameters to be estimated. This approach in other words would accept uncalibrated torque sensor signals for the controller. In (Liu, et al., 2008), a distributed control technique for modular and reconfigurable robots is developed based on joint torque sensing, enabling the joint by joint stabilization of the modular robot and allowing instant adaptation to robot reconfigurations. As there is no coupling effect left on the base joint after the feedback of torque sensor signal, this joint can be stabilized using any control design technique for a single joint, such as decomposition based control scheme (Liu and Goldenberg, 1996a, 1996b). Once the base joint is stabilized independently, the acceleration and velocity of this joint must be bounded and can only cause bounded uncertainty to upper joints. The bounded uncertainty is then compensated at upper modules to achieve stabilization of the succeeding joint. Proceeding similarly, the upper modules are stabilized. Based on the above mentioned approach, this strategy is aimed to achieve fault detection and fault tolerance at individual MRR modules, so that potential faults are dealt with at the module level and a faulty module can be repaired or replaced independent of the rest modules. Most approaches of fault tolerant control in robot manipulators are centered on the addition of some form of redundancy like those based on actuators (Wu, et al., 1993, Sreevijayan, et al., 1994), joints (Ting, et al., 1993, Shin 4

and Lee, 1999), sensors (Visinsky, et al., 1995), to name a few. An alternate way of achieving redundancy is by means of analytical relationships among system variables. This form of redundancy termed as analytical redundancy has received significant attention in the past (Gertler, 1998, Frank, 1990, Isermann, 1984, Frank, et al., 2000). Several such approaches to fault tolerance of robots have been proposed, such as observer-based approaches (Caccavale and Walker, 1997, Filaretov, et al., 1999, Vemuri and Polycarpou, 1997, Hammouri, et al., 1999, De Persis and Isidori, 2001), parity based (Staroswiecki and Comtet-Varga, 2001) and parameter estimation based methods (Dixon, et al., 2000, Isermann, 1993, Zhang, et al., 1998). In (Caccavale and Walker, 1997) residuals are generated by comparing the predicted observer outputs with the measured system outputs. However, in these observer-based schemes, the measurement or estimation of acceleration signals are necessary. In (Dixon, et al., 2000) a filtered torque estimation based technique is used to eliminate the requirement of acceleration measurement. All these techniques are designed for robot manipulators with fixed configuration, and are not based on distributed control schemes. In (Liu, 2001) an adaptive robot control strategy with consideration of actuator faults is proposed, which incorporates actuator effectiveness factors in a model parameterization with commanded torque as the input. A more recent adaptive fault detection scheme is presented in (De Luca and Mattone, 2004) based on the use of generalized momenta (De Luca and Mattone, 2003). In (Zhang, et al., 2002) a fault tolerant architecture for nonlinear uncertain dynamic systems is proposed based on non-linear adaptive estimators. This approach depends on adaptive parameter estimates for fault detection. Some recent results based on adaptive and robust observers can be found in (Jiang,

et al., 2002, 2004). Methods using learning approaches are presented in (Vemuri, 2001,
Zhang, et al., 2002). A fault detection scheme with online estimators is investigated in (Vemuri, 2001) to estimate the unknown constant sensor bias for diagnosis of sensor faults. Research on fault detection and fault identification of robot manipulators using discrete-time observers are reported in (Caccavale and Walker, 1997, Caccavale, 1998), non-linear adaptive state estimation in (Dixon, et al., 2000,), nonlinear observers in (McIntyre, et al., 2005) and parity relation based approach in (Filaretov, et al., 2003) .

5

However, the above approaches all require the link dynamics for the detection algorithm and are based on the whole robot dynamics.

1.3 Motivation and Objectives of Research
Various modules of MRRs have been developed recently in research institutions and industry worldwide. However, the developed modules are traditional in terms of electro-mechanical components, i.e., joints and links. While the reported reconfigurable robots may represent excellent electro-mechanical design concepts, the modules of known MRRs are not "modular" in terms of software and control because of the existence of dynamic coupling among the modules. This phenomenon is left to be dealt with by the control system, and very limited work has been reported in this domain. Conventional robot control methods are designed for robots with fixed configurations, based on known kinematics and dynamics models, and they are not suitable to handle the large model uncertainties associated with reconfigurations of MRRs. To a large extent, the realization of the application potential of MRRs is limited by the lagging in the development of synergetic control systems. The key motivating factors for this research are as noted:
·

In (Imura, et al., 1991), it is pointed out that the use of torque sensor can reduce the robot dynamic equations to purely a mathematical problem of motor control with link dynamics taken care using the torque sensor readings. This motivates the joint torque sensing based control of MRRs, with the uncertainties caused by reconfiguration.

·

Many publications can be found on fault tolerance of robot manipulators and others on possibilities of MRRs being used for better fault tolerant capabilities. However, there is very minimal reference on the actual applications of fault tolerance control on MRRs. Therefore, one of the objectives of this research will be to apply the fault tolerant techniques to a practical MRR system.

In this thesis, MRR system control techniques to realize the application potential of MRRs are developed. The objectives are:

6

·

to develop a modular control architecture based on joint torque sensing and decoupled modular control techniques for MRRs to achieve automatic control system adaptation to MRR reconfigurations, and

·

to synthesize modular actuator fault detection and fault tolerant control methods.

1.4 Contributions
The following contributions were made from this research:
·

Stabilization and control of modular robots using distributed control law A distributive approach with a unique joint-by-joint control technique of joint modules was designed. This approach uses a joint torque sensor to compensate for the uncertainties associated with load and link, and hence a control law independent of link dynamics.

·

Torque sensor based fault tolerant control of modular robots. A fault tolerant control was devised based on joint torque sensor that offers a strategy dependent on single joint module. The fault tolerance at each joint module will not require motion states of other joint modules and made independent of other joint module controllers.

·

Decentralized fault detection strategy for modular robots. Since the use of joint torque sensors offers modularity for system, this is used in the design of fault detection technique. The detection scheme uses a velocity estimation error to detect the occurrence of faults.

·

Modular fault tolerant control law under actuator degradation. The devised actuator fault tolerant control is devised as decentralized control technique, such that actuator degradation at each joint module is

7

compensated at module level. The control law at each module will not require the motion states of other joint modules.

1.5 Outline of Thesis
In the present study, a tracking control for modular and reconfigurable robots are developed. To investigate this, two different cases are considered. In the first case a nDOF modular robot, with torque sensor at each joint module, is considered. A distributed control law that can achieve overall stability of the robot by a joint-by-joint control approach is devised. The second case involves a modular fault tolerant and fault detection technique, ideally suited to improve the repairability of a modular robot system. Here fault at each joints are detected and corrective actions taken at module level. In Chapter 2 the dynamic model of the modular robot is discussed. The control design and formulation of the distributed control strategy for the n-DOF modular and reconfigurable robot is presented in Chapter 3. The chapter also includes the simulation results for a 3-DOF robot stabilization case. Chapter 4 discusses the fault tolerant control and a design of decentralized fault tolerant and fault detection of modular and reconfigurable robots. The simulation results for the fault tolerant and fault detection schemes are also discussed in this chapter. In Chapter 5, the experimental setup and experimental results for the control schemes are presented. The conclusions are given in Chapter 6.

8

Chapter 2

Dynamic Modeling

2.1 Model of Modular and Reconfigurable Robot
In this section a dynamic model of a robot, employing a joint torque feedback, is derived. Most existing robot arms with N degrees of freedom are modeled as serial link mechanisms consisting of N rigid links and N single axis joints. Each link of such an arm is considered to be driven directly or indirectly by an actuator.
joint i
qi

link i

link i-1 zmi

Ji
i
Speed reducer zi Rotor

Torque sensors

Figure 2-1. Schematic diagram of a joint module

We consider modular and reconfigurable robots constructed with n modules, and each module is integrated with a rotary joint with a speed reducer and a torque sensor as illustrated in Figure 2-1. The dynamics of each module is divided into two, namely the motor system and the link system, with the joint torque sensor as the separator. The motor system includes a rotor and a speed reducer and the link system is composed of

9

the link. The i th motor which drives the i th joint is fixed to the ( i - 1)

th

link. The

coupling force at the joint is measured using joint torque sensor on the i th joint. For each module, we assume A1. The rotor is symmetric with respect to the axis of rotation. A2. The joint flexibility is negligible. A3. The torque transmission does not fail at the speed reducer, and the inertia between the torque sensor and the speed reducer is negligible. For a modular and reconfigurable articulated robot with modules installed in series, each module provides a rotary joint. The base module is denoted the first module. Modules close to the first module are named lower modules, and modules close to the end-effector are called upper modules. For the ith module, we use the following notations:

I mi : rotor moment of inertia about the axis of rotation;

 i : reduction ratio of the speed reducer (  i  1) ;
qi : joint angle; fi (qi , qi ) : joint friction;

 Ji : coupling torque at the torque sensor location;  i : output torque of the rotor;
zmi : unit vector along the axis of rotation of the ith rotor; zi : unit vector along the axis of rotation of joint i.
Based on the dynamic equations of rigid robot manipulators with n rotary joints and joint torque sensing derived in (Imura, et al., 1991), we formulate the dynamic equation of each module as follows (given in Appendix A): For the base module, i = 1 ,

I m1 1q1 + f1 (qi , qi ) + ( J 1  1 ) =  1 For the second module from the base, i = 2 ,
10

(2.1)

T I m 2 2 q2 + f 2 (qi , qi ) + I m 2 zm 2 z1q1 + ( J 2  2 ) =  2

(2.2)

For i  3
T I mi i qi + fi (qi , qi ) + I mi  zmi z jq j j =1 i -1

+ I mi  

i -1 j -1 j = 2 k =1

T zmi ( zk

× z j )qk q j + ( Ji  i ) =  i

(2.3)

The joint friction, fi (qi , qi ) , is modeled as in (Liu, 2002, Liu, et al., 2004)
fi (qi , qi ) = Bi qi + Fq (qi , qi ) + Fci + Fsi exp(- F i qi2 ) sat (qi )

(

)

(2.4)

where Fci denotes the Coulomb friction related parameter, Bi denotes the viscous friction coefficient, Fsi denotes the static friction related parameter, F i is a positive parameter related to the Stribeck effect. The saturation function is defined as
  1 for qi > 0 sat (qi ) =  0 for qi = 0   -1 for qi < 0

(2.5)

and Fq (qi , qi ) denotes the position dependent friction and other friction modeling errors.

2.2 Representation of Faults

Figure 2-2. A typical feedback control system

11

A typical control system, as shown in Figure 2-2, consists of sensors, actuators, controllers and the physical plant being controlled. Any abnormal operations among these components are referred to as faults. Faults may be categorized based on their physical locations in control systems as either sensor faults, actuator faults, plant faults or controller faults or based on system characteristics as additive faults or multiplicative faults. Fault classifications based on physical locations have been adopted in this thesis.
2.2.1 Actuator Fault

Actuator faults are usually characterized as discrepancies between the expected actuator output and its actual output, or complete loss of control capabilities. This may result from aging or worn out components in the actuator, an element being stuck at some specific value and/or a change in dynamic characteristics. The actuator input is usually passed through a digital to analog converter in computer controlled systems. Thus, digital to analog converters can also be considered as a part of the actuator block. The actuator output u (t ) of the system is often not directly accessible, and is the actuator response to an actuator command uc (t ) from the controller. When an actuator

fault occurs, any change in the actuator input will not result in the desired response at the actuator output. Typically an actuator fault can be represented as shown in Figure 2-3. The actuator fault vector is represented by f a (t ) .
u (t ) = uc (t ) - f a (t )

(2.6)

Figure 2-3. Actuator Fault

12

Alternatively the fault at the actuators can be described by an actuator effectiveness factor (Liu, 2001) which would represent the transmission rate of the commanded actuator signal to the actuator response.
u (t ) = Kt uc (t ) (2.7) where K t is the actuator effectiveness factor. And Kt = 1 indicate the fault free

condition and Kt = 0 indicates the complete failure of the actuator i.e., no torque gets transmitted to the load side.
2.2.2 Sensor Fault

The sensor faults are incorrect readings due to malfunctions in sensory elements or transducers, unknown bias at the sensor output or unexpected changes in the dynamic characteristics of the transducers. Since the signal from a sensor carries the most important information in feedback control systems, the state of sensor determines the reliable operation of the system. In a digital computer controlled system, the sensor signals will usually pass through analog to digital converters before used by the control system. Hence, the analog to digital converters can be considered to be a part of the sensor block. The actual outputs of the system y (t ) are measured through sensors. The sensor faults are shown in Figure 2-4 and can be described mathematically as an additive term
y (t ) = ym (t ) - f s (t ) where f s (t ) is the sensor fault vector.

(2.8)

Figure 2-4. Sensor Fault 2.2.3 Process Fault

The plant or system faults are caused by changes in the plant parameters or the plant dynamics. System performances are affected by these changes. 13

2.3 Redundancy in Fault Control Systems
Redundancy refers to the additional system resources, such as actuators, sensors or controllers which are more than what are required to achieve the control objective during a normal operation. The existing literature on the research in robot fault tolerance is concentrated in the following fields:
2.3.1 Structural Redundancy based Fault Tolerance

2.3.1.1 Actuator Redundancy

In a practical system actuators are used to manipulate control signals to operate a process. The type and power levels of the actuators generally depend on the specific applications. For motion control applications, the actuators used typically includes stepper motors, DC servo motors, linear motors, pneumatic or hydraulic motors. The mechanical motions of the actuator can result in wearing and aging of the actuator components. This can result in degradation of the actuator and deterioration of actuator effectiveness. Most of the early works on fault tolerance of mechanical failures in robots has concentrated on algorithms which relied on duplicated parts for their fault tolerant capabilities. In (Tesar, 1990; Wu, et al., 1993) investigations into the methods of duplicating motors in a joint have been discussed. The two motors in a joint work together to provide single output velocity to the joint, and when one of the motor fails, the other takes over the functions of the faulty motor. The fault tolerant advantages of redundancy have also led to adding extra structures like backup arm (Tesar, 1990; Ting,
et al., 1993), allowing reconfiguration possibilities in the event of failures. But in

robotics, the amount of physical redundancy is often limited by cost, size and power considerations. This limitation in structural redundancy is complemented to a certain extent by the kinematic and analytical redundancy techniques. The structural redundancy can be broadly classified into actuator and sensor redundancies.

14

2.3.1.2 Sensor Redundancy

Sensors are physical devices that measure various physical variables, such as position, pressure, torque, temperature etc., with the associated circuits. Generally the signal level at a sensor output is relatively low and hence addition signal conditioning and amplification are necessary. Faults in the sensor or its associated circuitry are often classified as sensor faults. The physical quantities act as the input to the sensor and the sensor outputs are conditioned to provide the outputs. One of the widely used redundant sensor scheme is the triple modular redundancy (TMR) which consists of three identical sensors employed to measure the same physical quantity. The outputs of the three sensors are compared using a voting circuit. If one sensor output differs significantly from the other two, then it is considered to be a faulty signal. But the use of identical sensors can pose a disadvantage that an identical fault can result because of manufacturing defect or design error. To avoid this scenario, dissimilar sensors are often used with additional circuitry to process the signals before they are sent to the voting circuit.
2.3.2 Kinematic Redundancy

Many of the present day robots have the advantage of being kinematically redundant, i.e., the robot has more degrees of motion or freedom than is required to position its end effector along working trajectories. This property is usually exploited in designing fault tolerant algorithms which use alternate configurations to recover the robot in the presence of joint failures. These algorithms (Maciejewski, 1990) would use the existing structure rather than the use of extra motor, sensors or other hardware components. In (Ting, et al., 1994; Chen, et al., 1998; Park, et al., 2003) a torque redistribution technique is discussed while joint velocity redistribution technique is used in (Chen, et al., 1999).
2.3.3 Functional Redundancy

If an accurate mathematical model of the physical system is available, the output of system can be computed, and the difference between the system output and computed system output should be small. This difference termed residual signal, will show a 15

change in value with the occurrence of fault. In cases where the robots have no redundant hardware or kinematic redundancy, functional redundancy techniques are used which will exploit the existing structure for fault tolerance using functionally equivalent data from dissimilar components (Visinsky, et al., 1993). An observer based fault diagnosis technique is discussed in (Filaretov, et al., 1999), which uses nonlinear observers for residual generation.

16

Chapter 3

Torque Sensor based Control

Model based robot control schemes have been proposed in the past for achieving tracking control, like resolved acceleration control (Luh, et al., 1980) or the computed torque control techniques (Craig, 1989, Slotine and Li, 1991, Spong and Vidyasagar, 1989). These approaches depend on the precise knowledge of the robot parameters and of the possibly varying load; they may perform poorly when the model is not accurate. Adaptive control of manipulators was proposed (Middleton and Goodwin, 1988) to deal with parametric uncertainties. However, the large number of parameters associated with the link dynamics and over-parameterization makes it difficult to meet the persistency excitation condition necessary for parametric convergence and achieving high performance (Ioannou and Sun, 1996). In addition, model-based approaches tend to increase the computational burden (Craig, 1989). Alternatively, the dynamic control of manipulators can be performed using joint torque feedback without the need for modeling link dynamics. This reduces the computational burden by dramatically reducing the number of parameters for adaptive schemes. The benefits of using torque sensory feedback to improve the performance of robotic systems have been recognized in the robotics community (Stokic and Vukobratovic, 1993). One of the earlier works related to torque sensor based position control of robots is discussed in (Kosuge, 1987, Hashimoto, 1989). (Vischer and Khatib, 1995) discusses the design of high performance torque controller joints, based on contactless inductive transducers as compared to strain gauge sensors. Design of harmonic drive gears with built-in torque sensing is dealt in (Godler and Hashimoto, 1998, Hashimoto, et al., 1993). Joint torque feedback can be used to compensate the nonlinearities and modeling uncertainties of manipulator dynamics (Hashimoto 1989) or simply those of actuators (Zhang and Furusho, 1998). (Hashimoto, et al., 1993)used the

17

elasticity of the flexspline in a harmonic drive to measure the joint torque. This technique has the advantage of using the existing structural flexibility of the robots. Joint torque feedback can, in theory be used to eliminate completely the effect of external torque disturbances and load torques. This requires the system be equipped with built-in torque sensing to measure the load torque (Hashimoto, 1989, Kosuge, et al., 1990). (Kosuge, et al., 1990) demonstrated experimentally the effectiveness of joint torque feedback to compensate the entire link dynamics of a SCARA type direct-drive robot. The actuator dynamics was ignored and a simple control law with good robustness against varying loads was proposed. Hashimoto (1989) applied this technique to an actuator geared with a harmonic drive. The dynamic coupling terms in the robot dynamics are claimed to be small at higher gear ratios and hence treated as small disturbances. A survey of joint torque feedback can be found in (Stokic and Vukobratovic, 1993). In general, joint torque feedback cannot achieve dynamic decoupling between joints unless the manipulator has joints with high gear ratios (Hashimoto, 1989). However, the effect of link dynamics is especially at lower gear ratios (Stokic and Vukobratovic, 1993) and this is where the joint torque feedback is particularly useful. Furthermore, the effectiveness of the joint torque feedback in suppressing the effect of linkage torque dynamics on the motion critically relies on accurate joint-torque sensing. Different techniques have been used for joint torque measurement such equipping manipulators joints with joint torque sensor device (Aghili, et al., 2001) or mounting strain gauges on flexspline of harmonic drives (Hashimoto, et al., 1993). In this thesis, a control system architecture is developed for modular and reconfigurable articulated robots that can instantly adapt to robot reconfigurations and can control the reconfigured robot without having to adjust controller parameters. A joint torque sensor is embedded within each module, and the torque sensor measurement is utilized to automatically compensate for coupling effect. This concept is built upon published research results on robust control of conventional robot manipulators using joint torque sensors (Kosuge, et al., 1990, Imura, et al., 1991). However, the known

18

torque sensor based approaches use centralized control techniques and are inadequate for control of modular robots, which calls for distributed control for each stand alone module. The proposed method stabilizes an MRR joint by joint, rather than controlling the robot as a whole (Liu, et al., 2006, 2008).

3.1 Distributed Control of Modular and Reconfigurable Robots
The dynamic equation (2.3) can be rewritten as
I mi i qi + fi (qi , qi ) +  i + ( Ji  i ) =  i

(3.1)

The term  i is constituted of the coupling effects of lower joints on the ith joint, given by
T T  i = I mi  zmi z j q j + I mi   zmi ( zk × z j )qk q j j =1 j = 2 k =1 i -1 i -1 j -1

(3.2)

This term is a source of model uncertainty, which depends on the accelerations and velocities of all the lower i - 1 joints, and it needs to be compensated using a robust controller at the i th joint. The following properties are used in the subsequent analysis and design of the control law:
Property 1: The accelerations and velocities of the stabilized joints are bounded. Hence

the following upper bounds exist:

 i   Di
Property 2: Since the term Fq (qi , qi ) is bounded the following upper bounds exist Fq (qi , qi )   f

(3.3)

(3.4)

From (3.3) - (3.4), the following upper bounds can be defined:

 i + Fq (qi , qi )   Fi
Define the overall control of each joint as

19

i =

 Ji + ui i

i = 1, 2, ..., n

(3.5)

where ui is a new control input to be determined for the ith joint. For the first (base) joint, i = 1, combining (2.1) with (3.5) yields I m11q1 + f1 (q1, q1 ) = u1 As there does not exist any coupling effect on the base joint, the control input 1 can be obtained using control design techniques for a single joint, such as the decomposition-based robust control scheme (Liu, 2002). For the second joint, i = 2, combining (2.2) with (3.5) yields
T I m 2 2 q2 + f 2 (q2 , q2 ) + I m 2 zm 2 z1q1 = u2

The inertial force associated with acceleration of the first joint is involved in the
T above equation, and model uncertainty exists in zm 2 z1 as a result of reconfiguration.

However, as the first joint has been stabilized independently, the acceleration of the first
T joint must be bounded. Hence, the uncertainty in the term I m 2 zm 2 z1q1 is also bounded,

and such bounded model uncertainty can be compensated with a robust control scheme. For i  3 , substituting (2.3) into (3.5) yields
T I mi i qi + fi (qi , qi ) + I mi  zmi z jq j j =1 i -1

i = 3, 4,... , n

+ I mi  

i -1 j -1 j = 2 k =1

(3.6)

T zmi ( zk

× z j )qk q j = ui

Substituting, (3.2) in (3.6) yields, I mi i qi + fi (qi , qi ) +  i = ui Examining (3.6), one can find that the motion of upper joints does not affect the lower joints, which has been compensated using the torque measurement in (3.5). However, the motion of the lower joints still affects upper joints through inertial and Coriolis coupling forces. This can be readily understood by analyzing the dynamic equation of the third joint, i = 3,

20

T + I m 3 zm 3 ( z1 × z2 ) q1q2 + f 3 ( q3 , q3 ) = u3

T I m3 3q3 + I m3  zm z q + zT z q   3 1 1 m3 2 2 

(3.7)

Inertial and Coriolis forces associated with the motion of the first and second joints are involved in (3.7), and reconfiguration can result in model uncertainties in the
T T T terms zm 3 z1 , zm 3 z2 and zm 3 ( z1 × z2 ) . However, as the first and second joints have been

stabilized, the accelerations and velocities of the first and second joints must be
T T T  and I m 3 z m bounded. Hence, the uncertainties in I m 3  zm 3 ( z1 × z 2 ) q1q2 are 3 z1q1 + z m 3 z 2 q2





also bounded and could be compensated with robust control schemes. Expanding the observation to the general case (3.6), for the ith joint, the model uncertainties in the terms
T T I mi  zmi z j q j and I mi   zmi ( zk × z j )qk q j are bounded and could be compensated with j =1
j = 2 k =1

i -1

i -1 j -1

robust control schemes. Based on the above observation, it can be concluded that the control input ui can be designed joint by joint, with the consideration of the bounded model uncertainty due to the motion of the lower joints. This conclusion forms the basis of the proposed control design in this paper. In theory, a saturation-based robust controller can compensate for bounded model uncertainty. However, high feedback gain is required in order to achieve high accuracy, which is always limited by hardware issues including unmodeled high order plant dynamics and sensor measurement noise. The key in practical robust control design is to achieve desired performance with minimum feedback gains. To this end, a decomposition based control design approach is developed in (Liu and Goldenberg, 1996a, 1996b). The fundamental strategy of the decomposition based system modeling and control approach is to distinguish between uncertain parameters and variables of different physical types, and to design a separate compensator for each of them, while taking into account each specific physical feature. This approach advocates treating each type of model uncertainty with the most suitable and efficient means, including PID, robust, adaptive, and sensor based control methods. Robust compensators are used only

21

to compensate for uncertainties that cannot be estimated or measured in real time. The overall controller is generated by a synergetic integration of these compensators. The decomposition based control approach is applied to design a robust control scheme for the system under consideration. Examining the equation (3.6), if we assume the joint velocities and accelerations are available, the model uncertainties in the above two terms are all due to the unknown misalignment between the joint and motor axes. However, while it is reasonable to assume the joint velocities are measurable, it is not practical to assume the measurement of joint accelerations, which is avoided in the proposed control method. The following are defined first for the control design
qi = qi - qdi , qri = qi + i qi , qai = qdi - 2i qi - i2 qi where i is a positive constant. It is assumed that some of the system parameters are unknown but the inertia of motor I mi is known. It is also assumed that the reference trajectory, its first and second derivatives are bounded. The friction of the ith joint is compensated using the scheme developed in (Liu, 2002), where Y ( qi ) and i F are defined as
^ q ) -F ^ q 2 sgn(q ) exp(- F ^ q ) Y (qi ) =  qi sgn(qi ) sgn(qi ) exp(- F i i si i i i i  
i

(3.8)

^ -B F ^ -F F ^ -F F ^ -F  F = B i ci ci si si i i   i
i

T

(3.9)

If the parametric uncertainty

F is considered unknown but constant, this

uncertainty can be compensated using an integrator type compensator. However, in practice, the parametric model uncertainty may not always be constant, due to temperature and lubrication changes. To incorporate variable parametric model uncertainty compensation, decomposed as
i

F is

22

i

F = i Fc + i Fv

(3.10)

where i Fc is a constant unknown vector, and i Fv is variable and bounded as follows:
i

Fvn < i  n

n = 1, 2,3, 4.

(3.11)

Applying the approach of decomposition based control design in (Liu, 2002) an adaptive compensator is designed to compensate the constant parametric uncertainty i Fc , and a robust compensator for i Fv . For stabilizing the first joint, the following control torque is determined:
^q + F ^ +F ^ exp(- F ^ q 2 ) sgn(q )  1 = I m1 1qa1 + B c1 s1 1 1 1 1 1

(

)

 + uu + Y (q1 )( u pc + u pv ) + J 1 1
1 1 1

(3.12)

where I m1 is the motor inertia for the first joint,  J 1 is the coupling torque at the torque
^ ,F ^ ^ ^ are the nominal friction parameters, 1u is the term sensor location, B u 1 c1 , Fs1 , F 1

designed to compensate for the non-parametric

uncertainty Fqi (q, q) and the

term  i constituted by the lower modules. The terms 1u pc and 1u pv are designed to compensate for the parametric uncertainty i Fc and i Fv , respectively. The friction compensation is of the same form for all the joints, and hence for the ith joint the compensators i u pc , i u pv and i uu are defined by
 -   Fi i uu =   -  Fi   qri qri qri
i

qri > i qri  
i

(3.13)



23

i

u pc = -k  Y (qi )T qri d
0

t

i

u pvn

 i - n  = - i  n  

i i

n

i

n i n i  pn

 n > i pn
n = 1, 2,3, 4.

(3.14)

i

 n   pn
i

where i n = Y (qi )T qri , and i , i pn are positive control parameters. The stabilization of the first joint, using control law given by (3.12) , results in the uniformly ultimately boundedness of tracking error and thus the boundedness of the magnitudes of q1 and q1 . Since q1 is bounded, a compensator designed using saturation based robust control could be used to compensate for the effects of q1 . Thus the control torque  2 for the second joint would be given by the control law discussed in (Liu, 2002) with an additional term 2uu to compensate for the effects of q1 and Fqi (q, q ) .
^ + F ^ +F ^ exp(- F ^ q 2 ) sgn(q )  2 = I m 2 2 qa 2 + Bq c s  2 2 2 + 2uu + Y (q2 )( 2u pc + 2u pv ) +

(

)

J2 2

(3.15)

Similarly for the ith joint, we have control torque  i given by
^ + F ^ +F ^ exp(- F ^ q 2 ) sgn(q )  i = I mi i qai + Bq i c s  i i + i uu + Y (qi )( i u pc + i u pv ) +

(

)

 Ji i

(3.16)

Substituting (3.16) into (3.6) yields the closed loop expression for the ith joint as
M i qri + i M i qri = Y (qi )( Fc + i u pc ) + Y (qi )( Fv + i u pv ) + i uu - Fqi (qi , qi ) -  i

(3.17)

where M i = I mi i .

24

Theorem 3.1: Given an n-DOF modular robot, with joint dynamics as given in (2.1) ­

(2.3) and the uncertainty defined by (3.2) and (3.4), the tracking error of each joint is uniformly ultimately bounded under the control law defined by (3.16). The ultimate bound of the tracking error is determined by the non-parametric uncertainty and control parameters only, and it is not affected by the parametric uncertainty.
Proof:

A Lyapunov function candidate is defined as
V= 1 1 2 M i qri + k  iT  i 2 2 (3.18)

where  i =

t 1 Fc -  Y (qi )T qri d , k 0

Since k and Fc are constants,  i are given by i = -Y (qi )T qri . Differentiating (3.18) yields
V = Mqri qri + k  iT  i  -i M i qri + i uu - Fqi ( qi , qi ) -  i +   - k  iT Y (qi )T qri = qri   Y (qi )( Fc + i u pc ) + Y (qi )( Fv + i u pv )   
2 = -i M i qri + qriY (qi )( Fv + i u pv ) + qriY (qi )( Fc + i u pc ) t   + qri ( i uu - Fqi (qi , qi ) -  i ) - qriY (qi )  Fc - k  Y (qi )T qri d  0   2 = -i M i qri + qriY (qi )( Fv + i u pv ) + qri ( i uu - Fqi (qi , qi ) -  i )

 qri  i   ( ( , )  )  ( , )  - - = - - + q u F q q q F q q qi i i i ri qi i i i  Fi If qri  i then, ri u qri    <0

(

)

If qri < i then,

25

qri i uu - Fqi (qi , qi ) -  i

(

)
)
(3.19)

  q = - qri   Fi i ri + Fqi (qi , qi ) +  i     = -  Fi  -  Fi
4

2 qri i



- Fqi (qi , qi ) +  i qri +  Fi qri

(

2 qri i



qriY (qi )( Fv + i u pv ) =  qriYn ( Fvn + i u pvn )
n =1

=  i n ( Fvn + i u pvn )
n =1

4

For ith joint, and n = 1, 2, 3, 4 , if i n > i pn ,
i

  i n   i <0  n ( Fvn + u pvn ) =  n  Fvn -  n i n     
i i

(3.20)

If i n  i pn
i

  i n   i  n ( Fvn + u pvn ) =  n  Fvn -  n i n       i i   ii   n n n - i n i n  i  pn n  
i i

    

(3.21)

Since the last term of (3.19) and (3.21) achieves a maximum value at qri  i 2 and
i

 jn  i pn 2 respectively, we have
2 V  -i M i qri +

 Fi i
4

+

4

i

n i pn
4

n =1

(3.22)

From (3.22), it can be concluded that a Lyapunov function can be found if only

26

4   i i    n i pn  +   Fi n =1 . ri >  4i M i

Define
4     2 S = qri  R1 qri    Fi i +  i  n i pn  n =1    

 ( 2i M i )  



Then on the surface of S, S , we have
4   V  -   Fi i +  i n i pn  4 . n =1  

Denote T as the time for the solution trajectory to intersect the surface S , then
4    V ( qri (T )) - V ( qri (0))  -    Fi i +  i  n i pn  4  T n =1   

Hence
T 4 (V (qri (T )) - V (qri (0)) )
4   i i i   Fi  +   n  pn  n =1  

The boundedness of qri implies the boundedness of qi and qi (Slotine and Li, 1991).

Table 3-1. Parameters of the simulated system

Link 1 Mass of link (kg) Length of link (m) Link inertia (kg-m2) Dist. to centre of mass (m) Rotor inertia (kg-m2) Gear reduction ratio 8 1 1.0 0.5 0.4 10

Link 2 5 1 0.8 0.5 0.2 10

Link 3 4 1 0.6 0.5 0.1 10

27

3.2 Simulation Results
To study the effectiveness of the proposed distributed control law, fault detection and fault tolerant control methods, a 3-DOF serial robot manipulator, working on a horizontal plane with the following parameters, is used for the simulations:
F i = 100 s 2 / rad 2 , Bi = 1.5 N ms / rad , Fci = 3.5 Nm, Fsi = 1 Nm, K Di = 100,  i = 0.1, li = 0, i = 100,  = 1 I 6×6 ,  = 0.1,  = 2,  F = 1

(3.23)

The dynamic equations of the model are as given in Appendix B. The nominal parameters of the friction model are assumed as

^ = 1.2 Nms / rad , F ^ = 1 Nm, F ^ = 80 s 2 / rad 2 , B i ci i

^ = 0.8 Nm,  ^i = 0.2, l^i = 0.5 . F si

For

simplicity, the same friction model and parameters were considered for all the three joints. For the simulations, the parameters of the manipulator are chosen as given in Table 3-1. The desired trajectories for the three joints are selected as
qd = sin(t ) - 0.5sin(2t ) for 0  t  18s. The following controller parameters are used for

the simulations
F i = 100 s 2 / rad 2 , Bi = 1.5 N ms / rad , Fci = 3.5 Nm, Fsi = 1 Nm, Ki = 1, i = 80, i = 0.1,  = 2,
i i

 p1 = 0.01, i p 2 = 0.01, i p 3 = 0.01, i p 4 = 0.01,

1 = 0.3 Nm s / rad , i  2 = 1 Nm, i 3 = 0.7 Nm, i  4 = 20 s 2 / rad 2 ,  F 1 = 0.5,  F 2 = 1.1,  F 3 = 1.5

The plots in Figure 3-1 shows the tracking error for each joints under the control law defined in (3.16).

28

Figure 3-1. Position tracking errors of three joints

Figure 3-2. Position error of the third joint with torque sensor ripples

29

Figure 3-3. Position tracking error of the first joint with torque sensor nonlinearity

To study the tracking error variations sensor dynamics, simulations are carried out for different values of linearity and ripple factors of the torque sensor. The effect of ripple on tracking errors is studied, with the resulting error plot for third joint, as shown in Figure 3-2. The effect of nonlinearity on tracking error of the first joint is as shown in Figure 3-3. Since practical torque sensors have a delay in signal transmission, simulations were also carried with torque sensor delays. The tracking performance on first joint in the presence of delay in torque sensor is shown in Figure 3-4. The tracking errors for the other joints showed similar trends under the different values of ripple, nonlinearity and torque sensor delays. The controller was observed to be able to compensate for the errors introduced by the sensor dynamics. For larger time delays, it is seen that the tracking errors are higher due to the additional time lags introduced by the sensor delay. During simulations, it was observed that with higher gear ratio, the effects of torque sensor nonlinearities were minimal as expected.

30

Figure 3-4. Position error on first joint with torque sensor delay

The obtained results prove the effectiveness of the joint-by-joint stabilization scheme for control of modular and reconfigurable robot. The model uncertainties associated with link and payload masses are compensated using joint torque measurement, and the remaining uncertainties including the dynamic coupling effects and joint friction are compensated by the decomposition based robust controller. The simulation results also demonstrate the robustness of the controller against dynamic effects of the torque sensor.

31

Chapter 4

Fault Tolerant Control of Modular and Reconfigurable Robot

Fault detection, isolation and fault tolerant control have recently been generating considerable interest in the control engineering community, in various fields of application. Aerospace and computer based systems are the two key areas where fault tolerance has shown its ever increasing importance. In robotics, its implementation in the field of space applications has attracted more research interests. A four level canonical architecture for fault tolerance is developed in (Chladek, 1990; Tesar, et al., 1990) and these levels are listed as · · · · Dual joint actuators Parallel structured modules Redundant manipulators Multiple cooperating arms

In each of these levels, redundancy is incorporated to meet the demanding objectives of fault tolerance. Fault tolerant robots are needed which can effectively detect and adapt to software and hardware failures to avoid catastrophic failures at the higher system level, like aerospace or nuclear applications. Though, in general the mechanical structure of robots comprising of links and joints typically has the capability to move around one axis, physical redundancy can offer some fault tolerance capability. But this increases the size of the robot and the associated manufacturing cost. Hence, instead of redundant motors for a single joint, the robots have redundancy in degrees of freedom which allows multiple joint configurations for every end effector position. This would allow the robot manipulator to withstand joint failures without the complete loss of working range. A typical framework for robot fault detection is as shown in Figure 4-1.

33

Figure 4-1. Fault detection and fault tolerance framework

For designing a fault tolerant control strategy for a robot manipulator, it is essential that detection or estimation of the fault signal is guaranteed. The fault signal might be due to an abrupt or incipient fault, or it might be a degradation or saturation of the actuators (Ting, et al., 1993). The control strategies are devised based on this information of the faults. Dynamic fault tolerance and fault detection systems that can monitor the robot and compensate the faults in real-time can contribute significantly to system reliability and safety. In this work, a decentralized fault tolerant control and fault detection schemes of modular robots are developed based on a joint-by-joint approach (Abdul and Liu, 2008a, 2007). In the proposed fault tolerant control of MRRs, actuator degradation at each joint module is tolerated independently of the other modules and fault detection schemes. For the proposed fault detection that is run in parallel with the fault tolerant control algorithm, a threshold based comparison on joint velocity estimation error is used to indicate the occurrence of a fault at each module. The threshold is determined based on the estimation error bounds obtained during fault free operation of the robot system. A fault is declared when the estimation error exceeds this threshold. Since the proposed scheme is a joint by joint scheme, rather than a scheme taking into account the whole robot dynamics, it is ideal for fault detection in modular robots. Faults are detected and

34

corrective measures can be taken at the module level (Abdul and Liu, 2008a, 2008b). The addition or removal of a module will not affect the control of other modules, enhancing the modularity and repairability of the overall MRR system. The paper presents a robust adaptive control scheme that can maintain the required performance in the presence of actuator degradation at joints and can detect faulty joint modules so that they can be replaced. This technique is different from most approaches which detect faults first and then use the information of detected faults in the operation of fault tolerant control. This can cause unknown transients due to the delay in the detection algorithm. The fault tolerant scheme proposed here is independent of the fault detection and does not rely on the fault detection information for the operation of fault tolerant control. This effectively avoids the chances of delay in fault tolerant control due to the delays caused by the detection algorithm. In the proposed fault tolerant control scheme, an adaptation law is used to friction parameters and the torque sensor related parameters. Each of the joint controllers does not require the motion states of other joints or link dynamics, and each joint is controlled independently from other joint modules, making it suitable for control of modular robots.

4.1 Fault Tolerant Control Design
In the fault tolerant control design, we consider the actuation fault represented by change in the actuator effectiveness factor and assume that both the position and torque sensors are fault free and that delays in sensors are negligible. The actual joint torques measured using torque sensors are given by

 Ji = i si + i

(4.1)

where i and i are sensor gain and offset, respectively, and  si denotes the torque sensor output signal. The dynamic equation (3.1) can then be rewritten as
I mi i qi +  i + fi (qi , qi ) +  i si + li = Kti ci

(4.2)

35

where  i = i  i , li = i  i , and Kti ,  ci are the actuator effectiveness factor and commanded torque of the ith motor. If Kti = 1 , the actuator is fault free, and K ti = 0 indicates complete failure of the actuator. The aim of the controller is to tolerate the faults before the actuator effectiveness factor reduces to zero, i.e., before the complete failure of actuator. The model (4.2) can be rewritten in a more compact form
Yi (qi , qi , qi , si ) Pi +  i + Fq (qi , qi ) = Kti ci

(4.3)

where
Yi (qi , qi , qi , si ) =  qi qi sat (qi ) exp(- F i qi2 ) sat (qi )  si 1   Pi =   M i Bi Fci Fsi  i li   where M i = I m i  i . From (4.3) we have for the ith module
-1 -1  ci = Kti Yi (qi , qi , qi , si ) Pi + Kti  i + Fq (qi , qi ) -1 = Yi (qi , qi , qi , si )i + Kti  i + Fq (qi , qi )

T

(4.4)

(

(

)

)

(4.5)

with
-1 -1 -1 -1 -1 -1  i =  Kti M i K ti Bi K ti Fci K ti Fsi K ti  i K ti li . T





^ as the estimate of the parameter vector  . Then the uncertainties in joint Denote  i i

parameters and actuator effectiveness factors are contained in the parameter estimation error i , which is given by

i = ^i - i
distributed control approach based on joint torque sensing (Liu, et al., 2008).

(4.6)

The joint-by-joint stabilization of the modular robot has been achieved using the
-1 From (3.3) ­ (3.4) and definition of K ti , the following upper bounds can be defined:

-1 K ti  i   Dfi -1 K ti Fq (qi , qi )   fq

(4.7) (4.8)

36

-1 -1 K ti  i + Kti Fq (qi , qi )  

(4.9)

The following signals are defined
qi = qi - qdi , qvi = qdi - i qi qri = qi + i qi , qai = qdi - 2i qi - i2 qi

(4.10)

where i is a positive constant. The control law is defined as

 ci = Yi (qai , qvi , qi , si )^i - K Di qri + U f
and the adaptation law is defined as

(4.11)

^i = -i-1YiT (qai , qvi , qi , si )qri
where
Yi (qai , qvi , qi , si ) =  qai qvi sat (qi ) exp(- F i qi2 ) sat (qi )  si 1  

(4.12)

and i is a positive definite matrix and K Di > 0 . The control term U f is used to compensate for the term  i constituted of coupling effects from the lower modules and friction term Fq (qi , qi ) (Liu and Goldenberg, 1996a, Liu, et al., 2004).  -  qri qri Uf = -  ( qri  )   where  is a positive control parameter. From (4.11) and (4.6),

(

)

qri >  qri  

(4.13)

 ci = Yi ( qai , qvi , qi , si )  i +  i - K Di qri + U f
 M i qai + Bi qvi + Fci sat ( qi ) + Fq ( qi , qi ) +  -1   = K ti  F exp( - F q 2 ) sat ( q ) +   + l +    si i i i i si i i   + Yi ( qai , qvi , qi , si ) i - K Di qri + U f Combining (3.1), (4.5) and (4.14), we have the closed loop equation as
-1 K ti ( M i qri + i M i qri + Bi qri )

(

)

(4.14)

-1 = Yi (qai , qvi , qi , si )i - K Di qri + U f + Kti Fq (qi , qi ) +  i

(

)

(4.15)

37

Theorem 4.1: Given an n-DOF modular robot, with joint dynamics as given in (2.1) ­

(2.3), actuator fault defined by variations of Kti in (4.3) and the uncertainty defined in (4.6) and (4.9) the tracking error of each joint is uniformly ultimately bounded under the control law defined by (4.11).
Proof:

A Lyapunov function candidate is defined as

V=

1 -1 1 Kti M i qri2 + iT ii 2 2

(4.16)

Differentiating the above expression yields
-1 V = Kti M i qri qri + iT ii

(4.17)

Since the unknown parameters i is constant, we have

i = ^i
Substituting (4.15) and (4.18) into (4.17) gives
-1 Yi (qai , qvi , qi , si )i - K Di qri - Kti Bi qri -   V = qri  -1 -1 -1  K ti i M i qri + U f + Kti  ( , )  F q q + K q i i ti i  

(4.18)

(4.19)

- qriYi (qai , qvi , qi , si )i-1ii
-1 -1 = - K Di qri2 - K ti Bi qri2 - K ti i M i qri2 + qriU f -1 -1 + qri Kti i Fq (qi , qi ) + qri K ti

If qri   , combining (4.13) and (4.19) yields V
-1 -1 = - K Di qri2 - Kti Bi qri2 - Kti i M i qri2

 q  -1 -1 Fq (qi , qi ) + Kti  i ri  - qri   - Kti  qri   

(

)

(4.20)

-1 -1 < - K Di qri2 - Kti Bi qri2 - Kti i M i qri2 < 0.

If qri <  ,

38

-1 -1 V = - K Di qri2 - Kti Bi qri2 - Kti i M i qri2

 q -1 -1  + qri  -  ri - Kti Fq (qi , qi ) - Kti i    
-1 -1  - K Di qri2 - Kti Bi qri2 - Kti i M i qri2 -

(4.21)

 2 q +  qri  ri

Since the last two terms of (4.21) achieves a maximum value at qr i =  / 2 , we have
-1 -1 V  - K Di qri2 - Kti Bi qri2 - Kti i M i qri2 + (  4 )

(4.22)

From (4.22), it can be concluded that a Lyapunov function can be found if only
qri > 

(4( K

Di

-1 -1 + K ti Bi + K ti i M i

)) .

-1 -1 Define S = qri  R1 qri2  (  ) 2 K Di + Kti Bi + Kti i M i

{

((

))}

Then on the surface of S, S , we have V  -  4 . Denote T as the time for the solution trajectory to intersect the surface S , then
V ( qri (T )) - V ( qri (0))  - (  4 ) T , and
T  4 (V (qri (T )) - V (qri (0)) ) 

The boundedness of T is thus proved. And hence the uniform ultimate boundedness of qri is proven. The boundedness of qri implies the boundedness of qi and qi , since the definition of qri can be viewed as a stable first order differential equation in qi , with qri as the input. Thus the boundedness of qri implies the boundedness of qi and qi and therefore, of qi and qi (Slotine and Li, 1991). Since the controller guarantees the uniform ultimate boundedness, and the capability of the controller in handling faults that introduce larger errors are guaranteed. For any initial condition the tracking error is uniformly ultimately bounded. tracking error approaches and stays within the bound in a finite time. The

39

4.2 Fault Detection
In recent decades, the model based analytical redundancy method has received significant attention (survey papers by Frank 1990, Gertler 1988, Isermann 1984 and books by Patton et al. 1989, Gertler 1998 and Chen et al. 1999). The advantage of the analytical redundancy technique lies in the fact that the required redundancy is generated by powerful information processing approaches instead of additional physical hardware in the plant. The comparison between the system's actual measurement and its estimation generated by a mathematical model will generate the residual signal. These residual signals are normally zero or with in threshold and become non-zero or exceed the threshold limits as a result of faults. The fault detection scheme based on analytical redundancy is as illustrated in Figure 4-2, where u(t) and y(t) are the system input and output respectively. The decision making process usually involves the selection of thresholds for the generated residuals. The threshold selection problem has been investigated in (Walker, 1989, Walker and Gai, 1979) and by calculating the minimum detectable fault in the frequency domain (Ding and Guo, 1998). The advantages of adaptive threshold over fixed thresholds have also been researched upon (Emami-Naeini et al., 1988, Frank, 1997).

Figure 4-2. The model-based analytical redundancy approach

40

4.2.1

Fault Detection Scheme

In the design of a fault detection method, it is assumed that no two faults occur at the same instant, which is a reasonable assumption normally made in reliability engineering. In this work it is assumed that only one fault occurs at each joint at a specific time instant. Then an actuator fault occurring at each joint can be found using an observer based scheme where actual joint velocity of each joint is compared against the estimated joint velocity. The dynamical equation of the i th joint module of a modular robot is given by

 i = Im i  i qi + Fc + Fs exp(- F qi2 ) sat (qi )
+ Fq (qi , qi ) + Bqi +  i + ( Ji  i )

(

)

(4.23)

The nominal values of friction model parameters can be estimated through offline techniques. The bound of velocity estimation error can be found during fault free operation of the system. The velocity estimation error is defined as ei = vi - qi where vi denotes the velocity estimate. The velocity estimate can be obtained from the dynamical equation of the
ith

(4.24)

joint

given by (4.23) and the nonlinear observer proposed in (Xian, et al., 2004) to guarantee error convergence in the presence of uncertainties. The following velocity estimate is obtained by integrating the acceleration term from expression (4.23):
t t t     i dt -  ( Ji  i )dt -  Bqi dt  1 0 0 0 -L vi = t  i Im i  i  2  -  Fc + Fs exp(- F qi ) dt   0 

(

)

(4.25)

and
 i - ( Ji  i ) - Bqi   -L vi = i 2 Im i  i   - Fc + Fs exp(- F qi ) sat (qi )     1

(

)

(4.26)

with the observer Li given by

41

Li =  K1ei ( )d +  K 2 sat (ei ( ))d -  (U i I m i  i ) d
0 0 0

t

t

t

(4.27)

where
 -  e e U i =  Fi i i - e    Fi ( i 0 )

(

)

ei   0 ei <  0

(4.28)

K1 > 0, K 2 > 0 and  0 is a positive parameter. The term U i is used to compensate for the term  i constituted by the effects of lower i - 1 joint modules. From (4.25) it is evident that to estimate velocity of each joint module, no information on other joints are required other than the bounds defined in (3.3) ­ (3.4). The term Li is used to reduce the error between the estimated and measured velocity signals, and Li by itself cannot be interpreted as a velocity observer. Estimation error ei obtained from estimated and measured velocities is used as the residue for fault detection with a threshold  if , which is a positive value obtained from fault free operation of the system. A fault is declared if ei >  if , i.e., the estimation error exceeds the selected threshold. The threshold can be set based on the various trials conducted in absence of faults. The time derivative of (4.24) is given by ei = vi - qi
 U i +  i + Fq (qi , qi )  ei = - K1ei (t ) - K 2 sat (ei (t )) +     Im i  i  

(4.29) (4.30)

Theorem 4.2: Given an n-DOF modular robot, with joint dynamics as given in (4.23)

and an observer defined in (4.27), then for each joint, the velocity estimation error given by (4.24) is uniformly ultimately bounded during the fault free operation of the modular robot.
Proof:

For stability analysis the Lyapunov function candidate is defined as V= 1 2 ei 2 42 (4.31)

Differentiating (4.31) yields

V = ei ei
Substituting (4.30) into (4.32) yields
V = - K1ei 2 +
Im i  i

(4.32)

ei

(U +  + F (q , q ) ) - e K sat ( e (t ) )
i i q i i i

2

i

(4.33)

Thus if ei   0 , then using (4.28), the expression V in (4.33) becomes

V = - K1ei2 - ei K 2 sat ( ei (t ) ) = - K1ei2 - ei K 2 sat ( ei (t ) ) - ei I m i  i

- (  Fi I m i  i ) ei + (1 Im i  i )  i + Fq (qi , qi ) ei

(

)

.

(

) (  - ( + F (q , q ) ) ( e e ) ) < 0
Fi i q i i i i

If ei <  0 , then using (4.28), the expression V in (4.33)becomes V = - K1ei2 - ei K 2 sat ( ei (t ) ) +   Fi ei  - -  i - Fq (qi , qi )    Im i  i   0  2   e  - K1ei2 - ei K 2 sat ( ei (t ) ) + (1 I m i  i )  -  Fi i +  Fi ei    0    e2     - K1ei2 - Fi i -  K 2 - Fi  ei Im i  i  0  Im i  i    ei
-

The

expression
2

 Fi ei2    -  K 2 - Fi  ei Im i  i  0  Im i  i   

achieves

a

maximum

of

(  Fi - K 2 Im i  i )

0

( 4  Fi Im i  i ) at

ei = (  Fi - K 2 I m i  i )  0
2

( 2 Fi ) . Thus we have

V  - K1ei2 + (  Fi - K 2 I m i  i )  0

(

( 4 Fi Im i  i ) ) .

From the above expression it can be concluded that a Lyapunov function can be found if only
ei >

(  Fi - K 2 Im i  i )
2

2

0

( 4 K1 Fi Im i  i ) .

Define S = ei  R1 ei2  (  Fi - K 2 Im i  i )  0

{

( 2 K1 Fi Im i  i )}

43

Then on the surface of S , S , we have V  - (  Fi - K 2 I m i  i )  0
2

(

( 4 Fi Im i  i ) ) .
2

Denote T as the time for the solution trajectory to intersect the surface S , then

(  Fi - K 2 Im i  i ) V ( ei (T ) ) - V ( ei (0) )  - ( 4 Fi Im i  i )
Hence, T

0

T.

(V ( e (T ) ) - V ( e (0) )) ( 4
i i

Fi I m i

i )

(  Fi - K 2 Im i  i )

2

0

. Thus the boundedness of the

velocity estimation error ei is proved.

4.3 Simulation Results
To study the effectiveness of the proposed fault control and fault detection scheme, a 3-DOF serial robot manipulator, working on a horizontal plane with the following parameters, is used for the simulations:
F i = 100 s 2 / rad 2 , Bi = 1.5 N ms / rad , Fci = 3.5 Nm, Fsi = 1 Nm, K Di = 100,  i = 0.1, li = 0, i = 100,  = 1 I 6×6 ,  = 0.1,  = 2,  F = 1

(4.34)

Table 4-1. Parameters of the simulated system

Link 1 Mass of link (kg) Length of link (m) Link inertia (kg-m2) Dist. to centre of mass (m) Rotor inertia (kg-m2) Gear reduction ratio 8 1 1.0 0.5 0.4 10

Link 2 Link 3 5 1 0.8 0.5 0.2 10 4 1 0.6 0.5 0.1 10

The dynamic equations of the model are as given in Appendix B. The nominal parameters of the friction model are assumed as For ^ = 1.2 Nms / rad , F ^ = 1 Nm, F ^ = 80 s 2 / rad 2 , B i ci i
^ = 0.8 Nm,  ^i = 0.2, l^i = 0.5 . F si

44

simplicity, the same friction model and parameters were considered for all the three joints. For the simulations, the parameters of the manipulator are chosen as given in Table 4-1.

Figure 4-3. Tracking errors under actuator faults(at t = 7 s on first joint and t =15 s on third joint)

4.3.1

Fault Tolerant Control

The

desired

trajectories

for

the

three

joints

are

selected

as

qd = sin(t ) - 0.5sin(2t ) for 0  t  60s. The following controller parameters are used for the simulations
F i = 100 s 2 / rad 2 , Bi = 1.5 N ms / rad , Fci = 3.5 Nm, Fsi = 1 Nm, K Di = 100,  i = 0.1, li = 0, i = 100,  = 1 I 6×6 ,  = 0.1,  = 2

The actuator effectiveness factor for first joint module was changed from unity to 0.7 at t = 7 s and the corresponding value for third module was changed from unity to 0.4 at t = 15s . The occurrence of fault is detected by the fault detection algorithm and the fault is tolerated by the control algorithm. The fault tolerant control scheme ensures 45

that the tracking error does not diverge even under a change in actuator effectiveness factor. This is depicted in Figure 4-3.

Figure 4-4. Changes in parameter i1 under fault occurrence

Figure 4-3 shows the tracking errors for all the three joints, under the above mentioned actuator faults. The variations in actuator effectiveness factors are evident in the appreciable tracking error changes for the first and third joint. But along time the tracking error reduces despite the deviation in actuator effectiveness factor. The presence of actuator faults causes variations in the parameter vector i . The changes in parameter i1 , the first parameter of vector i , with the decrease in actuator effectiveness factor on the first and third joints, are shown in Figure 4-4. There are substantial changes in tracking error and parameter estimates as a result of the actuator degradation occurring at those specific time instants. The control torque on first joint during a fault-free and faulty operation is shown in Figure 4-5.

46

Figure 4-5. Commanded torque at first joint

4.3.2

Fault Detection

For the 3-DOF modular robot, simulations were carried out to study the effectiveness of the fault detection technique. After various trials under absence of faults, the threshold values  if were chosen as 0.004, 0.008 and 0.01 for the first, second and third joints, respectively. The observer gains for all three joints were chosen as K1 = 20 and K 2 = 10 . The obtained results are as shown in Figure 4-6 and Figure 4-7, showing the velocity estimation errors of the first and third joint modules, respectively. As expected the velocity estimation error exceeds the pre-defined threshold values at t = 7 s for the first joint and t = 15s for the third joint, as a result of the introduced change in their actuator effectiveness factors.

47

Figure 4-6. Velocity estimation error on the first joint with actuator fault at t = 7 s

Figure 4-7. Velocity estimation error on third joint, with actuator fault at t = 15 s

48

Though the effect of sensor dynamics does not adversely affect the proposed fault tolerant and fault detection scheme, it is worth noting the effects caused by sensor dynamics, namely, sensor delay and sensor ripples. At this juncture it must be pointed out that the effects of sensor delay would cause a delay in the fault detection scheme, i.e., the velocity estimation error exceeds the threshold at a later time instant than the case with zero sensor delay. The overall velocity estimation error plot with time delay in torque sensor is similar to that in Figure 4-6, except that the presence of sensor delay would cause a delay in the detection scheme. Depending on the priority of the task under execution and severity of the fault, a decision can be made to immediately abort the process without causing further damage or to finish the task in progress. To give an indication of the severity of fault at each joint, `health' of each joint needs to be monitored continuously. The velocity estimation error indicates the severity of the deviation of actuator effectiveness factor. With larger deviations of effectiveness factor from unity, the velocity estimation error would correspondingly increase. The information could be used for the maintenance of the system.

49

Chapter 5

Experiments

The simulations have demonstrated the effectiveness of the proposed control schemes, and experiments were done to further substantiate the claims as presented in this chapter. The experiments have also demonstrated how applicable these control schemes were to practical applications.

5.1

Experimental Setup
The experimental setup involves a 3-DOF modular and reconfigurable robot, and

associated hardware and software, that have been developed in our laboratory. The mechanical components include three reconfigurable joints and mechanical links. The joint has several major components that will be outlined. The components will be divided into two major categories, the joint hardware and the joint software and communication. The following sections will give a brief description of each component. Robotic manipulators require actuators with high torque capability at low velocities, and hence many electrically actuated robots use a gear transmission to increase the torque and decrease the drive speed. Among gear transmissions, harmonic drives have the advantage of being compact and light-weight, together with high gear ratio and minimal backlash. Developed in 1955 primarily for aerospace applications, harmonic drives are highratio and compact torque transmission systems that have enjoyed wide industrial applications. This mechanical transmission employs a continuous deflection wave along a non-rigid gear to allow for gradual engagement of gear teeth. Because of this geartooth meshing action, harmonic drives can deliver high reduction ratios in a very small package.

51

Every harmonic drive consists of three components as illustrated in Figure 5-1. The wave generator is a ball bearing assembly with a rigid, elliptical inner race and a flexible outer race. The flexspline is a thin walled flexible cup with small, external gear teeth around its rim. The circular spline is a rigid ring with internal teeth machined along a slightly larger diameter than those of the flexspline. When assembled, the wave generator is nested inside the flexspline, causing the flexible part to adopt the elliptical profile of the wave generator, and the external teeth of the flexspline to mesh with the internal teeth of the circular spline.

Figure 5-1. The components of harmonic drive transmission

Since the harmonic drive has three rotational ports, by using different combinations of rotations on these parts, numerous differential gearing functions and reduction ratios can be achieved. In this configuration, the circular spline is fixed and a low-torque, high-speed motor is used to drive the wave generator to produce a hightorque, low-speed rotation on the flexspline. The harmonic drive displays superior performance features as compared to conventional gear transmissions (Taghirad, 1997). These performances are as noted: · · · · · High torque capacity Light weight and compact Zero backlash High efficiency Nonlinearity

52

5.1.1

Control System Architecture

Supervisor Controller

CAN Bus

Module Controller

Module Controller

Module Controller

Module Controller

Driver Encoder Brake Motor & Gearhead Torque sensor

Driver Encoder Brake Motor & Gearhead Torque sensor

Driver Encoder Brake Motor & Gearhead Torque sensor

Driver Encoder Brake Motor & Gearhead Torque sensor

Modular Joint 1

Modular Joint 2

Modular Joint 3

Modular Joint 4

Figure 5-2. Control system architecture for modular robot system

The implemented control system architecture is shown in Figure 5-2. The CANOpen protocol is adopted on the supervisor, communication and module level. Each of the modular joints is comprised of DSP motion controller, motor drive, torque sensor, harmonic drive, position encoder, electric motor and associated circuitry.
5.1.2 Hardware

·

Motor: Moog brushless DC motor model BN-42-33EU-03. The motor has a peak torque of 8.82 Nm, a rated speed of 4710 RPM, a rated torque of 1.42 Nm and consumes a rated power of 697W.

·

Gear: HD Systems harmonic drive CFS-32-100-2A-GR-IV-SP-A1228. The gear has a ratio of 101:1, a rated torque of 137 Nm a max momentary torque of 647 Nm and a maximum input speed of 4800 RPM.

·

Encoder: Torque Systems HS15-05/05-2000-0-04-T5-01. The encoder has a resolution of up to 5000 counts per revolution. The input voltage is 5 to 26 volts DC with a frequency of 500 KHz. 53

·

Power Supply: Sorenson model DCS 80-37E. The power supply is capable of a voltage of 0-80, and amperage of 0-37. The input: 190-250 VAC, three phase, 14A typical, 47-63 Hz.

·

Joint Torque Sensor: The strain gauges are from Kyowa Electronic Instruments model KFG-1-120-D16-11. The gauges are 1mm long with a resistance of 120. The gauges have an excitation of +/- 5V and can produces up to 20mV output.

·

Amplifier: Phoenix Systems, model PN5603007. Strain Gage amplifier supports strain gages/load cells with resistances from 120 to 20,000 ohms. It includes 1000 V, 3-way galvanic isolation between power supply, input, and output circuits. Module filters and conditions signals to eliminate unwanted signal noise with DIP switch selectable cutoff frequencies of 30 or 5000 Hz. Outputs are provided for voltage (0 to 10, +/-10, 0 to 5, or +/-5 V), and current loop (4 to 20 mA) operation.

·

Link: The links are 34 cm long and designed to carry a payload or the electronics of the succeeding joints in order to create a torque signal to feedback to the controller to test to see if the control law is effective.

5.1.3

Electrical System Architecture

The overall electrical system architecture is shown in Figure 5-3. The personal computer (PC) is used to program the digital signal processor (DSP) board, which is a distributed controller. Once the program is downloaded into the DSP board, it is capable of controlling the driver, which drives the motor. The motor turns the gear head and produces two feedbacks, an encoder for position as well as the torque sensor. The encoder is a digital signal and is sent to the driver. The driver uses the position signal to calculate the velocity. These two pieces of information are fed back to the DSP board via a CAN bus which is a high speed communication network device. The DSP also receives the analog signal from the amplifier which is necessary to boost the weak torque signal into the +/-3V range that the DSP board needs to do the analog to digital

54

conversion. The DSP board now has the torque signal, the position and velocity signals and is able to calculate how much torque to send to the driver.
5.1.3.1 Driver The driver selected for this experimental setup is from Elmo Motion Control. The

drive is a Cello digital servo drive. The driver is capable of doing position, velocity and current control. This unit was selected because the current loop is open, so it is possible to program a current control law and implement it with this driver. The drive has a standard serial port, RS232 and a Controller Area Network (CAN) communication port available. For the purposes of the MRR project, only the CAN communications are necessary.
5.1.3.2 DSP Board The DSP board serves as a distributed controller. For the MRR project, there

would be a DSP board on each joint, which would be capable of controlling each joint in a distributed manner. The DSP is responsible for controlling the joint in real-time. The communication from the PC to the DSP board is carried out through the RS232 COM port. Technosoft provides software that is capable of programming the control law which is desired onto the DSP board. The software programming language is C.
5.1.3.3 CANopen Protocol

In order to ensure timely control, it is necessary to have high speed communication between the DSP board and the driver. This is accomplished by using the CAN bus and a CANopen protocol. The CANopen protocol has one master, in this case the DSP board, and any number of slave nodes. For the purposes of this experiment, the only slave node needed is the motor drive. The overall communication architecture is shown in Figure 5-3. The CANopen bus speed can be set as high as 1 Mbps, for a single joint this speed is not necessary. The speed that was used was 500 kbps. The limiting factor in determining the speed at which the joint is commanded was determined by the driver. The driver is designed to be a position control but had an option to keep the torque loop open. This allows for a control law to be executed outside of the driver, which is desirable for the research on the MRR. The drawback of this feature is that the drive 55

only reads the CAN bus torque commands in its processor idle loop. The processor idle loop is statistically read every 1.5 ms. While it is possible to broadcast torque commands more frequently, based on the bus speed, the DSP speed, it will not ensure that the drive will execute this command. Therefore the control law is set to send a command to the drive every 2 ms. This is the shortest amount of time which guarantees a consistent execution.

Figure 5-3. Electrical communication

56

5.1.3.4 Sensors

Two sensors are used in the experiment. There is the joint torque sensor, and the position sensor, i.e., the incremental encoder. The incremental encoder is used for two purposes. The first is to measure the position. This procedure is fairly straightforward. The encoder is electrically wired to the DSP and there is a subroutine on the Technosoft DSP board that increments (or decrements depending on the direction of rotation) a register as the motor shaft rotates. The torque sensor is an analog signal. In order for it to be used in the control algorithm, it must be converted to a digital signal. The conversion from analog to digital is also a subroutine supplied by the Technosoft DSP board. The board is capable of converting sixteen different channels. Since this application requires only one channel, the other 15 channels are used to over sample the signal. Over sampling the signal and averaging the result dramatically reduces the analog to digital conversion (ADC) noise as seen in Figure 5-4 and Figure 5-5.

Figure 5-4. Unfiltered ADC signal

Figure 5-5. Filtered ADC signal

5.1.3.5 Velocity Estimation

The control law requires the velocity of the joint to be known. A tachometer can be used to directly measure the velocity, but there is not one available in this experimental setup. In order to determine the velocity the signal from the position encoder is differentiated at each time step. At very low speeds this method can be 57

inaccurate. The definition of very low speed depends on the resolution of the encoder. When only a few pulses are being measured in each time step, then partial increments of the encoder are lost and the result is a loss of accuracy in velocity measurement. Liu et al. (2004) proposed a method to estimate the velocity to overcome this problem. In the proposed method, if the encoder does not increment by a set number of pulses, or the time does not change by a pre-determined amount, then the velocity will remain the same. The resulting velocity is experimentally demonstrated to be more accurate then by directly computing the velocity at each time step. The method also allows the tuning of the estimation parameters in order to trade off the accuracy vs. the time delay.
5.1.4 Mechanical Setup

The 3-DOF modular robot is shown in Figure 5-6. Each joint is designed such that it can be rotated by 90 degrees. This is part of the reconfigurable characteristics of the joint. The link was designed to be able to be easily removed and reconfigured to two positions; the position shown in Figure 5-6 as well as a configuration shown in Figure 5-7. In the second position the weight at the end because of other joints and payload will give the maximum amount of torque on the base joint. In all of the experiments conducted for this work, the joint was configured exactly as seen in Figure 5-6 or Figure 5-7.
5.1.5 Software

The software components include the interfacing programs, DSP programs, controller implementation, communication software, etc. For transfer of data from motion controller to the supervisory computer, a logger module working on CAN was implemented. The logged data can be retrieved at the end of each experiment. The flow charts of the software modules can be found in Appendix C.

58

Figure 5-6. A modular and reconfigurable robot system ­ configuration 1

Figure 5-7. Modular and reconfigurable robot - configuration 2

59

Table 5-1. Parameters of the system

Link 1 I mi

Link 2

Link 3

2.5e-4 3.46e-5 3.46e-5 85 0.01 0.05 85 0.02 0.1 70 0.02 0.1 0.001

i  Fi
i



ki Bi Fci F i Fsi

0.0005 0.0001

0.006 0.00124 0.00124 0.2558 15 0.34 0.025 15 0.027 0.025 15 0.027

5.2 Results for Torque Sensor based Control
The 3-DOF modular robot is configured as shown in the Figure 5-6. The distributed control law given in (3.16) is applied to this system represented by (2.1)(2.3). The reference trajectory for the first joint was chosen as

qd 1 = A ( sin(4t / 2 ) - 0.5sin(8t / 2 ) ) for 0  t  20s.
The amplitude of the reference trajectory was A = 2 9 rad . And for second and third joints the trajectories were chosen as

qd =

A 
2 

1 - cos    

  2t - 1     for   40    

0  t  20s.

Amplitude of reference trajectories for second and third joints were chosen to as

A = 5 12 rad . The reference trajectories are as shown in Figure 5-8.
The controller parameters were chosen as in Table 5-1.

60

Figure 5-8. Trajectories for the three joints

The output plots for the robot configured, as in Figure 5-6, are as shown in Figure 5-9 to Figure 5-12. The tracking errors at the three joints are as shown in Figure 5-9 Figure 5-11. Three different cases are studied: with no payload, with payload of 10N from beginning of the trial, and payload added at t = 7 s (approx).

61

Figure 5-9. Position tracking error at three joints with MRR in Configuration 1 (No payload)

62

Figure 5-10. Position tracking error at three joints (MRR in Configuration 1, payload added at t =7s)

63

Figure 5-11. Position tracking error at three joints with MRR in Configuration 1 (payload at t = 0 s)

From the above plots it is evident that addition of payloads does not cause deterioration in tracking errors. Hence the effectiveness of controllers in quickly adapting to payload changes is proved. The commanded torque at the three joints, for the case with no payload, is as shown in Figure 5-12. 64

Figure 5-12. Commanded torque at three joints of MRR system (Configuration 1)

The same controller was used for tracking control of MRR, configured as in Figure 5-7. The output plots for the three cases considered are as in Figure 5-13 - Figure 5-15.

65

Figure 5-13. Position tracking error at three joints, with no payload (MRR in configuration 2)

66

Figure 5-14. Position tracking error at three joints with payload at t = 0 s (MRR in configuration 2)

67

Figure 5-15. Position tracking error at three joints with payload added at t = 7 s (MRR in configuration 2)

From Figure 5-9 - Figure 5-15, it can be seen that the tracking performance are quite similar for MRR working in either configurations, with or without payload. The controller is adaptive to various configurations of MRR, and controller re-tuning was not necessary to achieve the tracking performance.

68

5.3 Results for Decentralized Fault Tolerant Control
The desired trajectory of the joints are selected as
qd = A sin(8t / 2 ) - 0.5sin(16t / 2 ) for 0  t  20s.

(

)

The amplitude of the reference trajectory A = 0.2 rad . The nominal parameters are chosen as
^i = 0.9 ,  ^ = 0.2 Nm , F ci ^ = 0.002 Nm s / rad , B i ^ = 0.05s 2 / rad 2 , F i

^ = 0.1s 2 / rad 2 and l^ = 0.1. The motor rotor inertia is obtained from the data sheets as F si i 0.00025 Kg m2 and the gear ratio of the harmonic drive is  = 101 . The controller

parameters are chosen as K Di = 0.05 , i = 40 ,  = 200I 6×6 ,  = 0.4 ,  = 0.4 ,  0 = 0.1 and

 Fi = 0.1 . The observer gains were chosen as K1 = 30 and K 2 = 20 .
The experiments for fault tolerant control are conducted for two different cases: fault free operation and a fault occurring at t = 4s and t = 6s . From the fault free operations the threshold value for velocity estimation error was fixed to be 0.09 rad/s and 0.02 rad/s for first and third joints respectively. The tracking error obtained under the fault free operation for both the MRR configurations are as shown in Figure 5-16 Figure 5-17. The actuator fault is introduced by changing the actuator effectiveness factor from unity to 0.5 at t = 4s for first joint and from unity to 0.3 at t = 6s for third joint. The experiments are conducted for MRR in both configuration 1 and configuration 2. The obtained results are as shown in Figure 5-18 ­ Figure 5-23.

69

Figure 5-16. Joint position error at three joints (fault free operation, MRR in Configuration 1)

70

Figure 5-17. Joint position error at three joints (fault free operation, MRR in Configuration2)

71

Figure 5-18. Joint position error at three joints (fault occurrence at t = 4 s and t = 6 s, MRR in Configuration 1)

72

Figure 5-19. Joint position error at three joints (fault occurrence at t = 4 s and t = 6 s, MRR in Configuration 2)

In Figure 5-18 and Figure 5-19, the tracking errors occurring due to change in actuator effectiveness factor is shown. The tracking error shows a change at the instance of fault occurrence. It is seen that despite the change in actuator effectiveness factor, the 73

action of the fault tolerant control law ensures the position tracking error does not diverge. This guarantees the performance of the system does not deteriorate due to the changes in actuator effectiveness factor.

Figure 5-20. Commanded torque for three joints (MRR in Configuration 1)

74

Figure 5-21. Changes in parameter i1 under fault occurrence

In Figure 5-20 and Figure 5-21, the commanded torque signal for all the three joints are shown, with MRR in configuration 1, and changes in the first parameter i1 in vector i . The variations in the parameter vector with decrease in actuator effectiveness factor can be seen in the above plot. Though both the changes in payload and actuator effectiveness factor can result in parameter deviations and changes in tracking error, the payload changes are clearly distinguishable when used along with the torque sensor readings. The payload changes are recorded by the changes in torque sensor readings. Thus actuator faults can be easily differentiated from the payload changes.

5.4 Results for Fault Detection Scheme
In Figure 5-22 and Figure 5-23, the velocity estimation errors occurring at first and third joints due to change in actuator effectiveness factor is shown. The velocity 75

estimation error shows a significant change at the instance of fault occurrence. The actuator fault occurrence at t = 4s and t = 6s causes the velocity estimation error to exceed the chosen threshold value. The data are collected for MRR in configuration 1.

Figure 5-22. Velocity estimation error with actuator fault at first joint (fault occurrence at t = 4 s)

The tracking error plots obtained using the two controllers can be compared, the distributed controller given by (3.16) and the fault tolerant controller given by (4.11) working under a fault free state. The error plots seen in Figure 5-9 and Figure 5-13 are seen to be quite comparable to the results in Figure 5-16 and Figure 5-17 obtained from the fault tolerant controller. The essential difference between the two controllers would be the robust approach used in controller (3.16) compared to the fault tolerant controller in (4.11) which uses an adaptive law.

76

Figure 5-23. Velocity estimation error with actuator fault at third joint (fault occurrence at t = 6 s)

5.5 Discussions
A distributed control technique based on joint torque sensing is used for the control of modular and reconfigurable robot. The use of joint torque sensors offers a much quicker adaptation to payload changes, and hence better performance during such scenarios. The controller tracking errors were found to be within acceptable limits under payload variations. The tracking performance was studied for different configurations of the modular robot. The modularity offered by the control technique allowed reconfiguration of the 3-DOF robot, without controller re-tuning to achieve good tracking performance. The tracking performance of the modular robots under reconfigurations and payload variations, demonstrated the effectiveness of the distributed control strategy for the control modular and reconfigurable robots. An actuator fault tolerant control method and a fault detection scheme for modular and reconfigurable robot with joint torque sensing have been implemented. Fault 77

tolerance and fault detection at each joint module are carried out independently of the other joints, i.e., the controller at each joint does not require motion states of the other modules. This modular approach enables fault tolerant control and fault detection at individual modules, without affecting the control of other joints. Since the fault tolerant control is independent of the fault detection scheme, any delay caused in detection scheme does not affect the fault tolerant control action. The actuator effectiveness factors, torque sensor gains and offsets are incorporated into a parametric dynamical model formulation for each joint module of the robot. Based on this model formulation, a control scheme is designed for compensating the parametric uncertainties including the actuator effectiveness factors, torque sensor gains and offsets. Experimental results have confirmed the effectiveness of the proposed fault tolerant control and fault detection schemes.

78

Chapter 6

Conclusions and Future Work

6.1 Conclusions
The purpose of this thesis was to design and implement modular control algorithm, ideally suited for the control of modular and reconfigurable robots. The thesis also covered under its preview, a modular fault tolerant and fault detection strategy that can detect and compensate faults at module level. The effectiveness of the techniques was demonstrated on a 3-DOF modular and reconfigurable robot system. A joint torque sensor based robot control avoids the requirement of link dynamics in the design of control law, and hence lessens the complexity of the control methodology. In addition the control law did not require the motion states of other joints. The distributed control law was ideal for a modular robot setup due to its joint-by-joint control nature. Simulations verified the robustness of the controller against torque sensor dynamics. A modular fault tolerant control method was designed based on the joint-by-joint control technique. This enabled the fault tolerance to be achievable at each module, independent of the other modules. The use of joint torque sensor in the design methodology eliminated the requirement of link dynamics for the control, and hence made the control law computationally simpler. Since the torque sensor gains and offsets can change with temperature and other factors, uncalibrated torque sensor signals are used in the control law. A fault detection scheme was devised based on an error signal obtained from measured velocity and an estimated velocity signal. A threshold based procedure was used to determine the occurrence of faults. Though the velocity signal was sensitive to noise, the fault detection scheme still gave good results. A comparison of the two control approaches showed that a comparable tracking performance is obtained under both techniques. The performance of the distributed 79

control law was compared to the fault tolerant controller under a fault free operating condition. While both controllers are operating under a distributed control strategy, one controller uses a decomposition based controller to achieve tracking performance; the other controller incorporates an added fault tolerant capability using a parameterization based on actuator effectiveness factor. The experimental result shows the presence of high frequency signals in the output waveforms. This is mainly due to the vibration setting in from the base joint of the robot. But the good tracking performance obtained confirms the effectiveness of the proposed control laws, even under the effect of vibrations at the base joint. The following conclusions could be drawn based on this work: · · · Employing a joint torque sensor provides a new solution to the distributed control of modular and reconfigurable robots Joint by joint stabilization allows addition and removal of modules without the need for controller retuning In the discussed control law, the dynamic coupling and unmodeled dynamics of the system are compensated using decomposition-based robust controller · · · The joint-by-joint control mentioned above enables a new modular approach for fault tolerance of modular and reconfigurable robots. The fault tolerant control law discussed allows fault tolerance at each module to be achieved independent of other modules. Since the fault tolerance and fault detection scheme is based on the above mentioned joint-by-joint control approach, the schemes do not require computation of link dynamics. · The parameterization of torque sensor signals based on gain and offset allows the use of uncalibrated torque sensor signals in the control law.

6.2 Future Work
A more complete model of the joint can be used in design of controllers. The model of harmonic drive and study on its flexibility will improve the performance of the

80

joint. The assumption on the rigidity of the joint can be removed to obtain a more precise mathematical model of the joint. This would involve the use of flexible joint robot model and study on vibrations at the joints too. Tracking control can be improved with a better system model, comprising of the above mentioned parameters. The proposed fault tolerant control law guarantees the error convergence but not the parameter convergence. An adaptive scheme that can guarantee parameter convergence would give a better indication of the system during a faulty state. The variations in parameter could indicate fault occurrence and can be used for fault detection if parameter convergence can be achieved. In particular, an accurately estimated actuator effectiveness factor will indicate the health of the actuator. The proposed fault detection scheme in Chapter 4 could be expanded to include detection of position and torque sensor faults. The present work only takes into consideration the actuator faults and not sensor faults.

81

Bibliography
Abdul, S., and Liu, G., (2007). "Fault tolerant control of modular and reconfigurable robot with joint torque sensing," IEEE International Conference on Robotics and Biomimetics, Sanya, China, pp. 1236-1241. Abdul, S., and Liu, G., (2008a). "Decentralised fault tolerant control and fault detection of modular and reconfigurable robot with joint torque sensing," IEEE International Conference on Robotics and Automation, pp. 35203526, California, USA. Abdul, S., and Liu, G., (2008b). "Decentralised fault tolerance and fault detection of modular and reconfigurable robot with joint torque sensing," IEEE Trans. on Control Systems Technology. (Accepted with revision conditions) Aghili, F., Buehler, M., and Hollerbach, J. M., (2001). "Design of a hollow hexa form torque sensor for robot joints," Int. Journal of Robotics Research, vol. 20, no. 12, pp. 967 ­976. Aghili, F., and Namvar, M., (2006). "Adaptive control of manipulators using uncalibrated joint-torque sensing," IEEE Trans. on Robotics, vol. 22, no.4, pp. 854-860. Armstrong-Helouvry, B., Dupont, P., and Canudas de Wit, C., (1994). "A survey of models, analysis tools and compensation methods for the control of machines with friction," Automatica, Vol.30, No.7, pp. 1083-138. Caccavale, F., and Walker, I. D., (1997). "Observer-based fault detection for robot manipulators," Proc. IEEE Conf. Robotics and Automation, pp. 2881-2 887. Caccavale, F., (1998). "Experiments of observer-based fault detection for an industrial robot," Proc. IEEE Int. Conf. on Control Applications, pp. 480484. Castano, A., Will, P., (2000). "Mechanical design of a module for reconfigurable robots", Proc. of the 2000 IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, pp.2203-2209. 83

Chen, W., Chen, I-Ming., and Wang, T., (1999). "Kinematic fault tolerant control for redundant robot based on joint velocities redistribution," Int. Conf. Advanced Robotics, pp. 397-402. Chen, W., Chen, I-Ming., Chen, C. Y., Yang, G., and Kang, I. ­G., (1998). "Fault tolerant control for redundant robot based on joint torques redistribution," Int. Conf. Control, Automation, Robotics and Vision, pp. 1325-1329. Chen, J., and Patton, R. J., (1999). "Robust model-based fault diagnosis for dynamic systems," Kluwer Academic Publishers, London. Chirikjian, G., (1994). "Kinematics of a metamorphic robotic system," Proc. IEEE Int. Conf. Robotics and Automation, Vol. 1, pp. 449-55. Chladek, J. T., (1990). "Fault tolerance for space based manipulator mechanisms and control system," First International Symposium on Measurement and Control in Robotics, Houston, Texas. Craig, J. J., (1989). Introduction to robotics: mechanical and control, 2nd ed. Reading, Massachusetts: Addison-Wesley Publishing Company. De Luca, A., and Mattone, R., (2003). "Actuator failure detection and isolation using generalizad momenta," Proc. IEEE Int. Conf. on Robotics and Automation, Taipei, Taiwan, pp. 634-639. De Luca, A., and Mattone, R., (2004). "An adapt-and-detect actuator FDI scheme for robot manipulators," Proc. IEEE Int. Conf. on Robotics and Automation, New Orleans, LA, pp. 4975-4980. De Persis, C., and Isidori, A., (2001). "A geometric approach to nonlinear fault detection and isolation," IEEE Trans. Automatic Control, vol. 46, no.6, pp. 853-865. Ding, X., and Guo, L., (1998). "An approach to time domain optimization of observer based fault detection systems," International Journal of Control, vol. 69, no.3, pp. 419-442. Dixon, W. E., Walker, I. D., Dawson, D. M., and Hartranft, J. P., (2000). "Fault

84

detection for robot manipulators with parametric uncertainty: a prediction error based approach," IEEE Trans. on Robotics and Automation, vol. 16, no. 6, pp. 689-699. Emami-Naeini, A., Akhter, M. M., and Rock, S. M., (1988). "Effect of model uncertainty on failure detection: the threshold selector," IEEE Trans. Automatic Control, vol. 33, pp.1106-1115. Filaretov, V. F., Vukobratovic, M. K, and Zhirabok, A.N., (1999). "Observer-based fault diagnosis in manipulation robots," Mechatronics, vol. 9, pp. 929939. Filaretov, V. F., Vukobratovic, M. K, and Zhirabok, A.N., (2003). "Parity relation approach to fault diagnosis in manipulation robots," Mechatronics, vol. 13, pp. 141-152. Frank, P. M., (1990). "Fault diagnosis in dynamic systems using analytical and knowledge based redundancy- a survey and some new results," Automatica, vol. 26, pp. 459-474. Frank, P. M., (1997). "Survey of robust residual generation and evaluation methods in observer based fault detection systems," IFAC Journal of Process Control, vol.7, pp. 403-424. Frank, D. M., Ding S. X., and Koppen-Selinger, B., (2000). "Current developments in the theory of FDI," Proc. IFAC Safeprocess, Budapest, Hungary, pp. 1627. Fukuda, T., and Nakagawa, S., (1988)."Dynamic Reconfigurable Robotic System", Proc. IEEE Conf. on Robotics and Automation, vol. 3, pp. 1581-1586. Gertler, J. J., (1988). "Survey of model-based failure detection and isolation in complex plants," IEEE Control Systems, vol. 8, no. 6, pp. 3-11. Gertler, J. J., (1998). "Fault Detection and Diagnosis in Engineering Systems," Marcel Dekker, New York, NY. Godler, I., and Hashimoto, M., (1998), "Torque control of harmonic drive gears with built-in sensing," Proceedings of Annual Conf. IEEE Industrial Electronics Society, IECON, vol.3, pp.1818-23.

85

Hammouri, H., Kinnaert, M., and El Yaagoubi, E. H., (1999). "Observer based approach to fault detection and isolation for nonlinear systems," IEEE Trans. Automatic Control, vol. 44, no. 10, pp. 1879-1884. Hashimoto, M., (1989). "Robot motion control based on joint torque sensing," IEEE int. Conf. Robotics and Automation, pp. 256-261. Hashimoto, M., Kiyosawa, Y., and Paul, R. P., (1993). "A torque sensing technique for robots with harmonic drives," IEEE Transactions on Robotics and Automation no. 9, pp. 108­116. Hui, R., Kircanski, N., Goldenberg, A. A., Zhou, C., Kuzan, P., Wiercienski, J., Gershon, D., and Sinha, P., (1993). "Design of the IRIS facility ­ a modular, reconfigurable and expandable robot test bed," Proc. IEEE International Conference on Robotics and Automation, Vol.3, pp. 155-60. Imura, J., Sugie, T., Yokokohji, Y., and Yoshikawa, T., (1991). "Robust control of robot manipulators based on joint torque sensor information," Proceedings of IEEE/RSJ International Workshop on Intelligent Robots and Systems, Osaka, Japan, pp. 344-49. Ioannou, P. A., and Sun, J., (1996). Robust adaptive control. New Jersey: Prentice Hall. Isermann, R., (1984). "Process fault detection based on modeling and estimation methods: A survey," Automatica, vol. 20, pp. 387-404. Isermann, R., (1993). "Fault diagnosis of machines via parameter estimation and knowledge processing," Automatica, vol. 29, pp. 815-835. Jiang, B., Wang, J. L., and Soh, Y. C., (2002). "An adaptive technique for robust diagnosis of faults with independent effect on system outputs," Int. Journal of Control, vol. 75, pp. 792-802. Jiang, B., Staroswiecki, M., and Cocquempot, V., (2004). "Fault estimation in nonlinear uncertain systems using robust/sliding mode observers," IEE Proc. Control Theory. Appl., vol. 151, pp. 29-37. Kosuge, K., Takeuchi, H., and Furuta, K., (1990). "Motion control of a robot arm using

86

joint torque sensors," IEEE Trans. on Robotics and Automation, Vol. 6, No. 2, pp. 258-63. Liu, G., and Goldenberg, A. A., (1996a). "Uncertainty decomposition-based robust control of robot manipulators," IEEE Transactions on Control Systems Technology, Vol. 4, No. 4, pp. 384-93. Liu, G., and Goldenberg, A. A., (1996b). "Comparative study of robust saturation control of robot manipulators: analysis and experiments," International Journal of Robotics Research, Vol. 15, No. 5, pp. 473-91. Liu, G., and Goldenberg, A. A., (1997). "Robust control of robot manipulators based on dynamics decomposition," IEEE Transactions on Robotics and Automation, Vol. 13, No. 5, pp. 783-89. Liu, G., (2001). "Control of robot manipulators with consideration of actuator performance degradation and failures," Proc. IEEE International Conf. Robotics and Automation, pp. 2566-2571. Liu, G., (2002). "Decomposition-based friction compensation of mechanical systems," Mechatronics, Vol. 12, No. 5, pp. 755-69. Liu, G., Goldenberg A. A., and Zhang, Y., (2004). "Precise slow motion control of a direct-drive robot arm with velocity estimation and friction compensation," Mechatronics, vol. 14, no. 7, pp. 821-834. Liu, G., Abdul, S., and Goldenberg, A. A., (2006). "Stabilizing modular and reconfigurable robot joint by joint using torque sensing," IEEE International Conference on Mechatronics and Automation, pp. 384-389, Luoyang, China. Liu, G., Abdul, S., and. Goldenberg, A. A, (2008). "Distributed control of modular and reconfigurable robot with torque sensing," Robotica, vol. 26, no. 1, pp. 75-84. Luh, J. Y. S., Walker, M. W., and Paul, R. P., (1980). "Resolved acceleration control of mechanical manipulator," IEEE Trans. Automatic Control, vol. AC-25, pp. 258­263. Maciejewski, A. A., (1990). "Fault tolerant properties of kinematically redundant

87

manipulators," Proc. IEEE Conference of Robotics and Automation, vol. 1, pp. 638-42. Matsumaru, T., (1995). "Design and control of the modular robot system: TOMMS", IEEE Proc. of Int. conf. on Robotics and Automation, pp. 2125-2131. McIntyre, M. L., Dixon, W. E., Dawson, D. M., and Walker, I. D., (2005). "Fault identification for robot manipulators," IEEE Trans. on Robotics, vol. 21, no.5, pp. 1028-1034. Melek, W. W., and Goldenberg, A. A., (2003). "Neurofuzzy control of modular and reconfigurable robots," IEEE/ASME Transactions on Mechatronics, Vol. 8, No. 3, pp.381-89. Melek, W. W., and Najjaran, H., (2005). "Study of the effect of external disturbances on the position control of IRIS modular and reconfigurable manipulator," IEEE Int. Conf. on Mechatronics and Automation, pp. 144-47. Middleton, R., and Goodwin, G. C., (1988). "Adaptive computed torque control for rigid link manipulators," Systems & Control Lett., vol. 10, pp. 9­16. Park, D. I., Lee, S. H. and Kim, S. H., (2003). "Torque distribution using a weighted pseudoinverse in a redundantly actuated mechanism," Advanced Robotics, vol. 17, no. 8, pp. 807-820. Patton, R. J., Frank, P. M., and Clark, R. N., editors, (1989). Fault Diagnosis in Dynamic Systems: Theory and Applications, pp. 477-508. Prentice Hall, Englewood Cliffs, NJ. Setchi, R. M., and Lagos, N., (2004). "Reconfigurability and reconfigurable manufacturing systems: state-of-the-art review," Proc. IEEE Int. Conf. Industrial Informatics, pp. 529-35. Shin, J. H., and Lee, J-J., (1999). "Fault detection and robust fault recovery control for robot manipulators with actuator failures," Proc. IEEE Int. Conf. on Robotics and Automation, Detroit, MI, pp. 861-866. Slotine, J. J. E., and Li, W., (1987). "On the adaptive control of robot manipulators," International Journal of Robotics Research, vol. 6, pp. 49­59. Slotine, J. J. E., and Li, W., (1991). "Applied nonlinear control," Prentice-Hall.

88

Spong, M. W., and Vidyasagar, M., (1989). Robot dynamics and control. New York: Wiley. Sreevijayan, D., Tosunoglu, S., and Tesar, D., (1994). "Architectures for fault tolerant mechanical systems," Proc. IEEE Mediterranean Electrotechnical Conference, Antalya, Turkey, pp. 1029-1033. Staroswiecki, M., and Comtet-Varga, G., (2001). "Analytical redundancy relations for fault detection and isolation in algebraic dynamic systems," Automatica, vol. 37, pp. 687-699. Stokic, D., and Vukobratovic, M., (1993). "Historical perspectives and state of the art in joint force sensory feedback control of manipulation robots," Robotica, no. 11, pp. 149-157. Taghirad, H., (1997). "On robust H-infinity torque control of harmonic drive systems," Ph.D Thesis, McGill University. Taghirad, H., and Belanger, P.R., (1998). "Torque ripple and misalignment torque compensation for the built-in torque sensor of harmonic drive systems," IEEE Transactions on Instrumentation and Measurement, vol. 47, no. 1, pp. 309-316. Tesar, D., Sreevijayan, D., and Price, C., (1990). "Four level fault tolerance for manipulator design for space operations," First International Symposium on Measurement and Control in Robotics, Houston, Texas. Ting, Y., Tosunoglu, S., and Tesar, D., (1993). "A control structure for fault tolerant operation of robotic manipulators," Proc. IEEE Int. Conf. on Robotics and Automation, Atlanta, GA, pp. 684-690. Ting, Y., Tosunoglu, S., and Freeman, R., (1994). "Torque resdistribution method for fault recovery in redundant serial manipulators," Proc. International Conference of Robotics and Automation, pp. 1396-1401. Tomita, K., Murata, S., Yoshida, E., Kurokawa, H., and Kokaji, S., (1996). "Reconfiguration method for a distributed mechanical system," Distributed Autonomous Robotic Systems, Vol. 2, pp. 17-25. Vemuri, A. T., and Polycarpou, M. M., (1997). "Robust nonlinear fault diagnosis in

89

input-output systems," Int. Journal of Control, vol. 68, pp. 343-360. Vemuri, A. T., (2001). "Sensor bias fault diagnosis in a class of nonlinear systems," IEEE Trans. on Automatic Control, vol. 46, no. 6, pp. 949-954. Vischer, D., and Khatib, O., (1995). "Design and development of high-performance torque-controlled joints," IEEE Transactions on Robotics and Automation, no. 11, pp. 537­544. Visinsky, M. L., Walker, I. D., and Cavallaro, J. R., (1993). "Layered dynamic fault detection and tolerance for robots," IEEE Int. Conf. Robotics and Automation, pp. 180-187. Visinsky, M. L., Cavallaro, J. R., and Walker, I. D., (1995). "A dynamic fault tolerance framework for remote robots," IEEE Trans. on Robotics and Automation, vol. 11, no. 4, pp. 477-490. Walker, B. K., (1989). "Fault detection threshold determination using Markov theory.," In R. J. Patton, P. M. Frank and R. N. Clark, editors, Fault Diagnosis in Dynamic Systems: Theory and Applications, pp. 477-508. Prentice Hall, Englewood Cliffs, NJ. Walker, B. K., and Gait, E., (1979). "Fault detection threshold determination techniques using Markov theory," Journal of Guidance, Control and Dynamics, vol. 2, no.4, pp. 313-319. Wu, E. C., Hwang, J. C., and Chaldek, J. T., (1993). "Fault tolerant joint development for the space shuttle remote manipulator system: analysis and development," IEEE Trans. on Robotics and Automation, vol. 9, no.5, pp. 675-684. Xi, F., Xu, Y., and Xiong, G., (2006). "Design and analysis of a re-configurable parallel robot," Mechanism and Machine Theory, vol. 41, pp. 191-211. Xian, B., Dawson, D. M., de Queiroz, M. S., and Chen, J., (2004). "A continuous asymptotic control strategy for uncertain nonlinear systems," IEEE Trans. Automatic Control, vol. 49, no.7, pp. 1206-1211. Yim, M., Shen, W.-M., Salemi, B., Rus, D., Moll, M., Lipson, H., Klavins, E., and

90

Chirikjian, G. S., (2007). "Modular self-reconfigurable robot systems challenges and opportunities for future," IEEE Robotics and Automation Magazine, Vol. 14, No. 1, pp. 43-52. Yim, M., Duff, D. G., and Roufas, K. D., (2000). "Polybot: a modular reconfigurable robot," Proc. IEEE Int. Conf. Robotics and Automation, Vol. 1, pp. 514-20. Yim, M., (1994). "Locomotion with a Unit-modular Re-configurable Robot", Ph.D. Thesis, Stanford University. Zhang, G., and Furusho, J., (1998). "Control of robot arms using joint torque sensors," IEEE Control Systems, vol. 18, no. 1, pp. 48-54. Zhang, Q., Basseville, M., and Benveniste, A., (1998). "Fault detection and isolation in non-linear dynamic systems: a combined input-output and local approach," Automatica, vol. 34, pp. 1359-1373. Zhang, X., Polycarpou, M., and Parsini, T., (2002). "A robust detection and isolation scheme for abrupt and incipient faults in nonlinear systems," IEEE Trans. on Automatic Control, vol. 47, no. 4, pp. 576-593. Zhu, W.-H., and Lamarche, T., (2007). "Modular robot manipulators based on virtual decomposition control," Proc. IEEE Int. Conf. Robotics and Automation, Roma, Italy, pp. 2235-40.

91

Appendix A

The dynamics of each link is divided into two dynamic systems, namely the motor system and the link system. Then the following coordinate are defined: the origin of the coordinate frame i of the i th link is set on the i th joint axis. The Z axis of i is selected such that it aligns with the i th joint axis, and the unit vector in the direction of the Z axis of i is denoted by zi . The i th motor which drives the i th joint is fixed to the (i - 1)th link, and the origin of coordinate frame  mi of the i th motor is set on the axis of rotation of the rotor in the i th motor, called the i th rotor. The Z axis of  mi is selected in such a way that it aligns with the axis of rotation of the i th rotor, and the unit vector in the direction of the Z axis of  mi is denoted by zm i . Let the moment of inertia of the i th rotor about the axis of rotation be I mi . The output torque of the i th rotor is denoted by  i and  Ji denoted the coupling forces by the other motor systems and link systems. nmi denotes the moment vector exerted on the i th rotor by the (i - 1)th link. nsi denotes the moment vector exerted on the i th through the torque sensor by the i th link, which is expressed in the reference frame. I mi , expressed in reference frame, is the inertia tensor of the i th rotor. i and m i , expressed in reference frame, represent the angular velocity vectors of the i th link and i th rotor respectively. qm i is an angle about the axis of rotation of the i th rotor. Then from Euler's equation,
nmi = I mim i + m i × I mim i + nsi

(

)

(A.1)

Using the assumption A2, in Chapter 2,

93

qmi =  i qi

m i = i -1 + qmi zm i  Ji zm i

m i = i -1 +  i qi zm i + i -1 ×  i qi zm i
nsi =
T  i = zm i nmi

(

)

(A.2)

i

Substituting these relations into (A.1), the following equations are obtained:

T T = zm i I mi i -1 + zm i I mi zm i  i qi T T   + zm i I mi  i -1 ×  i qi zm i + zm i m i × I mim i   

(

)

(

)

(

)

(A.3)

+

 Ji

i

Using the assumption A1, it is seen that the third and fourth terms of the right hand of (A.3) is equal to zero. And since

T And zm i I mi

 0   i -1   z1q1  i -1 i -1 j -1   z j q j +   zk × z j qk q j j = 2 k =1   j =1 T = I mi zm i , therefore from (A.3),

if if if

i =1 i=2 i3

(A.4)

(

)

 Ji T T  i = I mi i qi + I mi  zm i z j q j + I mi   zm i zk × z j qk q j + 
i -1 i -1 j -1 j =1 j = 2 k =1

(

)

i

(A.5)

where the second and third terms is equal to zero when i = 1 , and the third term is equal to zero when i = 2 .

94

Appendix B

B.1

Dynamic Model of 3-DOF planar manipulator
The dynamic equations of motion for a three joint modular robot operating in a

horizontal plane are given by

D ( q ) q + C ( q, q ) q + f ( q, q ) = 
where D(q ) is the 3 × 3 inertia matrix, C (q, q)q is the 3 ×1 vector of centrifugal and Coriolis torques, f ( q, q ) is the 3 ×1 vector of frictional torques and  is the 3 ×1 vector of joint torques. The matrices are given as

 D11 D12 D13  D =  D21 D22 D23   D31 D32 D33   

 C11 C12 C13  T C = C21 C22 C23   =  1  2  3   C31 C32 C33   
T

F (q, q ) =   f1 ( q1 , q1 ) f 2 ( q2 , q2 ) f3 ( q3 , q3 )  

where,
2 D13 = D31 = I 3 + m3lc 3 + m3l2lc 3c3 + m3l1lc 3c23 ,
2 2 2 2 2 2 D11 = I1 + I 2 + I 3 + m1lc 1 + m2l1 + m2lc 2 + m3l1 + m3l2 + m3lc 3

+ 2m2l1lc 2 c2 + 2m3l1l2 c2 + 2m3l2lc 3c3 + 2m3l1lc 3c23
2 D21 = D12 = I 2 + I 3 + m2lc22 + m3l2 + m3lc23 + m2l1lc 2c2

+ m3l1l2c2 + 2m3l2lc 3c3 + m3l1lc3c23
2 D22 = I 2 + I 3 + m2lc22 + m3l2 + m3lc23 + 2m3l2lc 3c3

D23 = D32 = I 3 + m3lc23 + m3l2lc 3c3
2 D33 = I 3 + m3lc 3

and c2 = cos(q2 ) , c3 = cos(q3 ) , c23 = cos(q2 + q3 ) , s2 = sin(q2 ) , s23 = sin(q2 + q3 ) , mi is the mass of i th link, li is the length of i th link, lci is the distance from joint to the centre of mass of i th link, Ii is the inertia of i th link. The link masses and inertias include both

95

the actuator masses and actuator inertias. The joint friction for the i th joint is modeled as
fi ( qi , qi ) = ( f ci + f si exp(- f i qi2 )) sgn(qi ) + bi qi + f qi (qi , qi )

The Coriolis matrix elements are given by
C11 = c111q1 + c112 q2 + c113q3 , C12 = c121q1 + c122 q2 + c123 q3 C13 = c131q1 + c132 q2 + c133q3 , C21 = c211q1 + c212 q2 + c213q3 C22 = c221q1 + c222 q2 + c223 q3 , C23 = c231q1 + c232 q2 + c233 q3

C31 = c311q1 + c312 q2 + c313 q3, C32 = c321q1 + c322 q2 + c323 q3 C33 = c331q1 + c332 q2 + c333q3

where

c133 = -m3l2lc 3 s3 - m3l1lc 3 s23 , c312 = m3l2lc3 s3 , c211 = m3l1l2 s2 + m2l1lc 2 s2 + m3l1lc 3 s23 , c213 = -m3l2lc 3 s3 , c311 = m3l2lc 3 s3 + m3l1lc 3 s23 , c321 = c312 , c131 = c113 , c233 = -m3l2lc 3 s3 , c322 = m3l2lc 3 s3 , c223 = -m3l2lc 3 s3 ,
c112 = -m2l1lc 2 s2 - m3l1l2 s2 - m3l1lc3 s23 , c113 = -m3l2lc 3 s3 - m3l1lc3 s23 , c123 = -m3l2lc 3 s3 - m3l1lc 3 s23 , c122 = -m2l1lc 2 s2 - m3l1l2 s2 - m3l1lc3 s23 , c132 = c123 , c232 = c223 , c231 = c213 , c121 = c112 , c111 = c212 = c221 = c222 = 0, c331 = c313 = c323 = c332 = c333 = 0

96

Appendix C

C.1

Controller Architecture and Flow Diagrams

Figure C-1. Control system architecture of modular and reconfigurable robot

Figure C-2. Host PC - DSP controller communication over CAN

97

Figure C-3. Architecture of MRR control system

98

Figure C-4. Flow chart for the initialization of MRR module (Level 1)

99

Figure C-5. Flow chart of the MRR module operation (Level 2)

100

Figure C-6. Message interpreter and execution at DSP from communication layer

101

Figure C-7. Flow chart of sequence of tasks on DSP controller, at each sample period

102

Figure C-8. Flow chart for the operation of 3DOF MRR system.

103

