Ryerson University

Digital Commons @ Ryerson
Theses and dissertations

1-1-2008

Multi-Level Clustering Architecture And Protocol Designs For Wireless Sensor Networks
Barnabas C. Okeke
Ryerson University

Follow this and additional works at: http://digitalcommons.ryerson.ca/dissertations Part of the Electrical and Computer Engineering Commons Recommended Citation
Okeke, Barnabas C., "Multi-Level Clustering Architecture And Protocol Designs For Wireless Sensor Networks" (2008). Theses and dissertations. Paper 1171.

This Thesis is brought to you for free and open access by Digital Commons @ Ryerson. It has been accepted for inclusion in Theses and dissertations by an authorized administrator of Digital Commons @ Ryerson. For more information, please contact bcameron@ryerson.ca.

I) I D tJ I ../

I

0

I

MULTI-LEVEL CLUSTERING ARCHITECTURE AND PROTOCOL DESIGNS FOR WIRELESS SENSOR NETWORKS

by

Barnabas C. Okeke B.Eng., Federal University of Technology, Owerri, Nigeria, 2002 M.Sc., Blekinge Institute of Technology, Karlskrona, Sweden, 2007

A thesis submitted in conformity with the requirements for the degree of Master of Applied Science Graduate Department of Electrical and Computer Engineering Ryerson University

Toronto, Ontario, Canada, 2008 © Barnabas C. Okeke, 2008

PROPERlY OF RYERSON UNIVERSITY LIBRARY

Author's Declaration
I hereby declare that I am the sole author of this thesis or dissertation. I authorize Ryerson University to lend this thesis or dissertation to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis or dissertation by pho-

tocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

ii

Abstract
Multi-level Clustering Architecture and Protocol Designs for Wireless Sensor Networks
Barnabas C. Okeke Master of Applied Science Graduate Department of Electrical and Computer Engineering Ryerson University

2008
Wireless sensor network (WSN) consists of a number of sensors, which measure and gather data in a variety of environments. In a WSN, sensed data are collected at a centralized location, called sink, for processing and analysis. With limited transmission ranges, sensed data may require multiple relays to reach the sink. In this thesis , a

novel system design for multi-level clustering (MLC) WSNs and its associated protocol operations are proposed. Cluster-heads in the proposed design form a tree with a goal to reach all sensor nodes in the network. Subsequently, all sensed data in the tree are delivered to the sink. Energy savings is improved by exploiting sensor node redundancy in the WSN. To validate the proposed design, thorough simulations have been carried out. Upon comparing to the LEACH protocol, it offers consistent wider coverage area and longer life span of a WSN with proper settings of system parameters.

111

Dedication
This work is dedicated to Almighty God for His mercies and guardians.

IV

Contents
1 Introduction

1

1.1

Problem Formulation

2 4
5

1.2 Thesis Organization .
2

Literature Review

2.1

Hierarchical Clustered Protocols .

5 6 10 11 13 14 15 16 17
19

2.1.1 2.1.2 2.1.3 2.1.4 2.2 2.3

LEACH DTRAP Multi-level Cluster-heads . Optimization Algorithm based Protocols
· · 0 0

Flat Clustered Protocols

WSN Physical Layer Properties

2.3.1 2.3.2
3

WSN Communication Patterns WSN Energy Loss Activities

Multi-level Clustering (MLC) WSN

3.1 3.2 3.3 3.4

Network Model Energy Model . MLC Neighbor Discovery Process MLC Cluster-head Selections Process

21 22 25 28 32 33 35 36 37
v

3.4.1 3.5 3.6

Maximum Residual Energy Model .

MLC Cluster Member Admittance Process MLC Transmission Process .
· 0 · ·

3.7 Redirection Protocol 3.7.1

Minimum Cost Model

3.8

MLC with Load Balancing (MLC-B) . . . . 3.8.1 MLC-B Cluster Member Admittance

38 41
45

4

Simulation and Results 4.1 4.2 MLC Simulations and Results MLC-B Simulations and Results .

47
50
56

5 Conclusions A MLC-B Parameters Bibliography

57
67

Vl

List of Tables
3.1
Important Node Properties .

26 26 26 28 31 33 35 42 43 46 46

3.2 NEIGHBOR_ TABLE 3.3 HELLO Message 3.4 NOTIFY message. 3.5 REQUEST/ ADVERT Message 3.6 REPLY/ JOIN / ACK/ NACK Message 3.7 PARAM n1essage.
· · 0 0 · 0

3.8 Modified NOTIFY message. 3.9 ACCEPT / REJECT Message 4.1 4.2
Parameters for network A and network B. Reference Parameters . . . . . . . . . . . .

Vll

List of Figures
1.1 Hierarchical topology of a clustered network. Cluster-A shows an example of intra-cluster communications. None of the selected cluster-heads is within transmission ranges of the sink. . . . . . . . . . . . . . . . . . . . 2.1 Hierarchical topology of the LEACH protocol. Cluster-A shows an example of intra-cluster communications. There is no inter-cluster communication. . . . . . . . . . . . . . . . . . 2.2 Hierarchical topology of the multi-hop LEACH protocol (LEACH B+ ). Cluster-A shows an example of intra-cluster communications. There is cluster-head to cluster-head inter-cluster communication. . .. 2.3 Multi-level Cluster-heads topology. Cluster-C shows an example of intracluster communications. The shaded regions indicate cluster-heads that belong to the same upper level cluster. There is cluster-head to clusterhead inter-cluster communication. . . . 3.1 3.2 Multi-level cluster-heads structure for the MLC WSN. . . . . . . . . . . . The MLC architecture showing the four operational processes in the MLC WSN protocol designs. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.3 Neighbor distance estimation using the power level received from the neighbor's HELLO message 3.4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 20 12 20
9

3

7

Cluster-head selections: illustrations of the REQUEST, NOTIFY and REPLY messages. Only nodes within the shaded area will respond with REPLY messages when a REQUEST message is sent by cluster-heads. . . . . . . . 30

3.5

One round of transmission time line for a cluster with maximum cluster size, M and T transmissions. . . . . . . . . . . . . . . . . . . . . . . . . .
Vlll

35

3.6

Comparison of the flow patterns of MLC and MLC-B protocols for a worst case scenario where a Level-l cluster-head has to forward flows from all Level-2 to Level-k cluster-heads. The diagram shows only a single chain for simplicity. . . . . . . . . . . . . 38

4.1

Change in active node percentage versus number of transmissions per round (time). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 51 52

4.2 4.3
1..

MLC WSNs with different settings of I and J, T

= 100 in sin1ulations.

Frames received at the sink versus amount of active nodes in %. . . . . Comparison of MLC-B, MLC and multi-path LEACH protocols for percentage active nodes against number of transmissions (a function of how long the network lasted) and number of frames received at the sink. MLCB Parameters: I = 8, J = 4 and

4.4

f3 = 2 for Network A, and
I

I

= 2,

J

= 4 and (3 = 2 for network B. MLC Para:r;neters:

= 2 and J = 3

for Network A, and I = 10 and J = 4 for network B. T = 100 Transmissions/ Round in all simulations. 4.5 . . . . . . . . . . . . . . . . . . . . . . . 54

Comparison of the MLC protocol and the MLC-B algorithm introduced at different percentage Active Nodes in an MLC WSN. I
T =
=

2, J

=

3, and 55

100 in simulations. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
=

A.l The MLC-B protocol for different values of I and J with (3

1 and T

=

100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.2 The MLC-B protocol for different values of I and J with (3 = 1 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.3 The MLC-B protocol for different values of I and J with (3 = 2 and T = 100 in each sin1ulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.4 The MLC-B protocol for different values of I and J with (3 = 2 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
IX

57

58

59

60

A.5 The MLC-B protocol for different values of I and J with f3 = 3 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.6 The MLC-B protocol for different values of I and J with f3 = 3 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.7 The MLC-B protocol for different values of I and J with f3 = 4 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.S The MLC-B protocol for different values of I and J with f3
=

61

62

63

4 and T

=

100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.9 The MLC-B protocol for different values of I and J with f3 = 5 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . A.10 The MLC-B protocol for different values of I and J with f3 = 5 and T = 100 in each simulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

64

65

66

X

Chapter 1 Introduction
With the rapid technological advancements in both the wireless and sensing devices, the creation of wireless sensor networks (WSNs) may find a broad spectrum of applications. Examples of applications for wireless sensor networks include border surveillance, environment monitoring, industrial process monitoring, tactical systems, etc. In general, sizes of sensor nodes are small and their deployment environments may prohibit the uses of external power sources. It is therefore that the operating life duration of a sensor is at most equal to the life span of its installed battery. Energy optimization is then a critical factor in the system designs and deployments of wireless sensor networks. The more energy effective the system design is, the longer the operating life spans the sensor nodes and the associated wireless sensor network should be. Signal transmissions in wireless communication medium may easily be corrupted with co-channel interferences and noises. This implies that signals in wireless medium usually suffer relatively high bit error rate (BER). In fact, with the physical size limitation and a reasonable signal-to-interference-and-noise ratio (SINR), the transmission range of a sensor node is limited. It is unrealistic to consider that the data collecting and processing station, the sink, is always within the transmission ranges of all sensor nodes in a wireless sensor network. As a result, it is important to design a wireless sensor network architecture which can operate with an energy effective routing protocol. Given a fixed maximum transmission range, if a data transmitting sensor is close to a receiving sensor node, then transmitted data can be sent at a lower signal transmission power to save battery power. The communication distance between a sender and receiver can be estimated through pilot signals in the system. Consequently, the transmission

1

range can be adjusted by tuning to an agreed upon signal strength at the receiving node. This design technique is assumed in our system model which helps avoid wasting energy.

1.1

Problem Formulation

The density of a uniformly deployed wireless sensor network can be measured by the average number of neighboring nodes of a sensor in the network or by the nun1ber of nodes deployed per a unit area. In a high density network, a single node has many neighbors. Although, this guarantees better network coverage and longer network lifetime (if the network is power constrained), it has some drawbacks. For example, interference, energy waste, reduced spatial reuse, and MAC protocol overhead are major problems. Several topology control [19] techniques have been proposed (see Chapter 2) to minimize sensor node interference, MAC protocol overhead, and total energy per unit time consumed by the sensor network. Cluster based topology controls have been shown to be effective [13, 19] but they do not guarantee connectivity of the network when the WSN deployment environment is huge enough that not all nodes are within the transmission range of a sink. Nodes within the sink's transmission ranges are not always selected as a cluster-head due to the randomized nature of cluster-head selection algorithms. Thus, an algorithm may sometimes generate a disconnected graph even though its input is a connected graph. Such a scenario is illustrated in Fig. 1.1 where none of the randomly selected clusterheads can reach the sink. Our goal in this thesis is to create an energy-efficient topology control algorithm and its associated protocol designs. If there is a connected graph in the WSN before the application of the algorithm there will always be a connected graph at the end of the algorithm. That is, if without clustering, the sensor nodes can reach the sink by multihop transmissions then, after clustering, the cluster-heads must be able to reach the sink by multi-hop transmissions. Thus, after clustering, each cluster-head must have at least

2

Coverage Area of Sink

Sink

-+
__..

Signal Flow from Sensor Node to Cluster-Head Signal Flow from Cluster-Head to Cluster-Head or Sink

Sensor Node

e Cluster-Head A to J Clusters
Figure 1.1: Hierarchical topology of a clustered network. Cluster-A shows an example of intra-cluster cornmunications. None of the selected cluster-heads is within transmission ranges of the sink.

3

one next-hop cluster-head on its path to the sink.

1.2

Thesis Organization

In the following, some related routing system designs for wireless sensor networks are discussed in Chapter 2. The Low-Energy Adaptive Clustering Hierarchy (LEACH) algorithm is the rnost popular clustering design and its design is reviewed in detail. In Chapter 3, the proposed multi-level clustering (MLC) system design and protocol operations are discussed. Also, a variation of the MLC, multi-level clustering with load balancing (MLC-B) is discussed in Section 3.8.1 of Chapter 3. MLC-B involves loadbalancing techniques based on exploiting the redundancy in a densely deployed WSN. Thorough simulations have been carried out and results regarding the performance of the MLC system, MLC-B system, and protocol designs are elaborated in Chapter 4. The proposed design has demonstrated superior performance upon comparing to the LEACH design. Finally, conclusion can be found in Chapter 5.

4

Chapter 2 Literature Review
Several topology control techniques have been proposed over years to enhance the energyefficiency of wireless sensor networks. Adaptive modulation (34, 9] has been proposed to help reduce the amount of energy consumed in transn1itting one bit of information. This involves applying very low energy but low-bandwidth efficient modulation systerns such as MFSK for short range transmissions. Then, higher energy but higher-bandwidth efficient modulation systems such as QPSK for long range transmissions. Also, power control [14, 30] has been proposed for controlling the transmission ranges of nodes in other to reduce the number of neighbors each node can support in a densely deployed wireless network. This technique has the advantage of reducing the amount of MAC protocol overhead required for network connectivity maintenance. these techniques is sufficient alone. Dividing a WSN into clusters has been shown to be very effective as it does not only reduces MAC protocol overhead, it also reduce interference and improves spatial reuse. Individual clusters can have different network parameters and characteristics. The different proposed clustered protocols differ in the way the clusters are forn1ed and the topology of the formed clusters: hierarchical and flat. They also differ on the technique for cluster-head selections. The cluster-head selection technique may be one of or a combination of the following: distributed, dynamic, randomized, static - based on sensor node locations, and sink coordination- based on an outcon1e of an optimization algorithm. However, none of

2.1

Hierarchical Clustered Protocols

Hierarchical clustered topologies are generally rnore suitable for WSN applications (especially, for large environment monitoring applications). They allow data fusion and other
5

common functions within a cluster. It minimizes total number of communications required in a network. Also, total network communication distances are minimized. These factors make hierarchical clustered topology n1ore energy-efficient than fiat clustered topology [30] . The topology of clusters in the hierarchy can be single-hop or multi-hop. In a singlehop cluster, a cluster-head is only one-hop away from each of its members. The member nodes form a star topology with their cluster-head. In a multi-hop cluster, a member node form a relay node for other member nodes to ensure connectivity between thern and their cluster-head. The member nodes form a multi-hop star topology with their cluster-head. The hierarchy in the network is based on the different functions of the sensor nodes undertake in the network. The sensor nodes may be homogenous or heterogenous. Member nodes of a cluster are at the lowest level of the hierarchy and then followed by the cluster-head. The sink can be considered to be at the highest level of the hierarchy. Member node performs the sensing task. A cluster-head coordinates the member nodes of its cluster, performs minimal frame processing, aggregation, and forwarding. Some popular hierarchical cluster-based protocols will be presented in the following subsections.

2.1.1

LEACH

Low-Energy Adaptive Clustering Hierarchy (LEACH) [13] is a popular energy-efficient group-based communications for wireless sensor networks. In LEACH, sensors are partitioned into groups called clusters, and time is partitioned into fixed-length intervals called rounds. Each round begins with a setup phase which includes three sub-phases: advertisement phase for cluster-head selection, cluster set-up phase for cluster member selection, and schedule creation phase for cluster member TDMA schedule creation and notification. At the beginning of the setup phase, each sensor may become a cluster-head with some
6

Sink

____. __.

Signal Flow from Sensor Node to Cluster-Head Signal Flow from Cluster-Head to Cluster-Head or Sink

Sensor Node

e Cluster-Head A to J Clusters
Figure 2.1: Hierarchical topology of the LEACH protocol. Cluster- A shows an example of intra-cluster communications. There is no inter-cluster comn1unication.

7

predefined a priori probability. Thus, cluster-head selection is randomized, dynamic, and distributed. Cluster-heads broadcast messages to neighboring sensor nodes. If a node receives messages from multiple cluster-heads, it then joins a cluster by choosing the one marked in a received message with the strongest signal strength , i.e, the nearest cluster-head. Thus, they form single-hop clusters. During the round, cluster members send sensed data to their respective cluster-heads, which then aggregate, compress, and route the information to the sink directly. This clustering operation process repeats for every round. Since cluster-heads usually consume more energy than cluster members , this design enables dynamic setup of clusters and cluster-heads in the process. The protocol is designed to ensure that each node in the network becomes cluster-head within the life time of a LEACH WSN. Unfortunately, LEACH does not consider factors such as the residual energy of sensor nodes, dead nodes, and the relative locations of sensor nodes while choosing cluster-heads. The distributed decision on whether to be a CH in a round does not always yield the optimal number of cluster-heads determined analytically for a network. This results in variation of the number of clusters [33, 29) from the computed optimal value in [12). Fig. 2.1 shows the hierarchical topology of the LEACH protocol. The sensor nodes in a cluster perform the sensing tasks of an application, and then send the sensed data to their respective cluster-heads. The communication flow pattern in a cluster is illustrated in cluster-A of Fig. 2.1. The cluster-head fuses together all the received frames from its member sensor nodes and forwards it directly to the sink. LEACH makes an assumption that all sensor nodes can reach the sink with one single hop. But in reality, all sensor nodes have limited transmission ranges , and sensed data may have to be relayed over multiple hops to reach the sink. Thus , it is possible that none of the sensor nodes selected in the randomized technique of the LEACH protocol can reach the sink directly. There is a variation of the LEACH protocol called LEACH B+ [5) in which the cluster-

8

Sink

---+
__.

Signal Flow from Sensor Node to Cluster-Head Signal Flow from Cluster-Head to Cluster-Head or Sink

Sensor Node

e Cluster-Head A to J Clusters
Figure 2.2: Hierarchical topology of the multi-hop LEACH protocol (LEACH B+ ). Cluster-A shows an example of intra-cluster communications. There is cluster-head to cluster-head inter-cluster communication.

9

heads use a con1bination of direct transmission to the sink and multi-hop cluster-head to cluster-head transmission to relay fused frames to the sink. The topology for the LEACH B+ is illustrated in Fig 2.2. A decision on whether to use direct transmission or forward to the next hop cluster-head is made on a hop by hop basis. A direct transmission is applied if the energy required for direct transmission is smaller. The energy required for multi-hop forwarding is the sum of the energy required for forwarding the frame and the energy required for receiving the frame. This gives better performance than the LEACH protocol. However, it is shown in [30] that ensuring a relaying node has better residual energy level than the node it is to relay its signal gives a better performance than simply choosing any node that can relay the signal. In [21], the functionality of the normal single level cluster is extended with a proxy node. This proxy node is used by a cluster-head when it does not have enough power to transmit its fused signal to the sink. Any node within a cluster can be selected to serve as a proxy node to its cluster-head based on the node's residual energy. The proxy node approach improves the efficiency of the network by ensuring that signal from clusterheads reach the sink. However , all sensor nodes must be able to transmit directly to the sink for this to be effective. The proxy node is required to transmit directly to the sink just as its associated cluster-head.

2.1.2

DTRAP

In [30], Dynamic Transmission Range Adjustment Protocol (DTRAP) is proposed to ensure every node effectively adjusts its transmission range to keep its neighbor size at a preset maximum neighbor size independent of the node distribution. This guarantees that the cluster size does not exceed the maximum neighbor size. At the end of each round, a cluster-head simply appoints another node within its cluster that has the highest residual energy to be the cluster-head in the next round. This re-clustering technique reduces the number of control messages involved in repeating a full clustering selection 10

process. The cluster-head selection mechanism in this case is distributed but it is not randomized. However, this design is only effective where all nodes in the network are within the transmission range of the sink. Otherwise, it is possible that the appointed cluster-head is not in transrnission ranges with other nodes in the cluster or the sink. In [24], comparisons between the effect of residual energy of nodes and the relative positions of nodes in selecting cluster-heads were made. The simulation results showed that selecting cluster-heads with larger number of neighbors would be more important than those with more residual energy in creating energy-efficient clusters. However,

neglecting the residual energy of a potential cluster-head might create gray zones in the network. The death of a cluster-head within a round means no sensing information from that cluster to the sink.

2.1.3

Multi-level Cluster-heads

In [3 , 21], locations of sensor node are modeled as an independent homogeneous spatial Poisson process. The model is used to compute the optimal probability, P0 , of a node becoming a cluster-head as in the LEACH protocol. In [3], the cluster-heads elect themselves to a new level of cluster-heads with probability, P 1 and the process continues to at most the n-th level. Sensed data are fused at each level and forwarded to the upper level and the n-th level cluster-heads send to the sink. At the first level of the hierarchy, nodes forward cluster-head advertisement messages to their neighbors up to a predetermined at most k number of hops away. Thus, a multi-hop star cluster topology is formed. The topology is illustrated in

Fig. 2.3. Cluster-C shows an example of intra-cluster communication. The shaded regions indicate cluster-heads that belong to the same upper level cluster in which its members are cluster-heads. The proper values of n and k are not clearly defined. This design is a bottom-up 11

Sink

A
____. __. Signal Flow from Sensor Node to Sensor Node or Cluster-Head Signal Flow from Cluster-Head to Cluster-Head or Sink

Sensor Node

e Cluster-Head A to J Clusters
Figure 2.3: Multi-level Cluster-heads topology. Cluster-C shows an example of intracluster communications. The shaded regions indicate cluster-heads that belong to the same upper level cluster. There is cluster-head to cluster-head inter-cluster communication.

12

approach. Although it reduces the number of clusters in the network that has to forward signal to the sink, it is not suitable for a case where not all nodes can reach the sink. Since the multi-level cluster-heads form a pyramid structure, the cluster-heads at the peak of the pyramid is unlikely to reach the sink. Also, the intelligence of the message may be lost after multiple aggregation.

2.1.4

Optimization Algorithm based Protocols

Examples of optimization algorithms include genetic algorithm , simulated annealing, and differential evolution. Optimization of a model of a network can be carried out to determine the optimal parameters for the network, and the roles of nodes in the network: cluster-heads and member nodes. In some cases, there are more than two roles. The requirement of this technique is that the sink must have a method for obtaining current deployment statistics of nodes in the network. It must be able to identify when a node dies in other to adjust the input to the algorithm accordingly. In some protocol designs, nodes need to piggyback their current energy levels and other statistics in every message they send to the sink. The use of optimization algorithm technique has produced the most energy-efficient protocols but the major drawback is that the network is not easily scalable. All nodes must be able to communicate with the sink directly. In [20 , 16, 18], the sink uses Genetic algorithm to coordinate the formation of energyefficient clusters and the election of cluster-heads. In [16, 18], the nodes have identical properties and each node can be a cluster-head. A node is set as either 1 or 0. In each round , a node set as 1 is a cluster-head, while a node set as 0 is a sensor node. Thus , the functions of the cluster-heads are limited to receiving sensed frames from their respective members, fusing them, and then forwarding the fused signal to the sink. Single-hop clusters are formed in these protocols and the network topology is the same as in Fig. 2.1 or Fig. 2.2.

13

In [20], the WSN maintains four nodal states in each genetic generation: powered
off, cluster-head, inter-cluster router and sensor node. The inter-cluster routers

simply form a packet routing path to the sink for the cluster-heads. They do not participate in the sensing operation nor do they belong to any cluster.

2.2

Flat Clustered Protocols

The cluster topology of a flat clustered protocol is a spanning tree. The head of the tree is the cluster-head and it initiates the branching/ clustering process. Thus, they form
multi-hop spanning tree topology which has its root at the cluster-head. Communication

pattern in the cluster is not necessarily to or from cluster-head as in a hierarchical clustered topology.
It is dependent on the application.

There is no fusing of signal

at the cluster-head. All nodes in the network are operational and they all have the same sensing function. Thus, the number of communication messages and the total network communication distances required in a flat clustered topology is higher than it is in a hierarchical clustered topology. The Rapid and Persistent protocols in [22] assign the initiator a budget a. This budget is the number of nodes (including the initiator) that can be supported by a cluster in the network. In Rapid [22], the initiator accounts for itself and then distributes (a - 1) budget equally among its neighbor nodes. This becomes the number of nodes the respective neighbors can add to the cluster with themselves inclusive. Thus, in a similar fashion, they minus their assigned budget by one and distribute the rest equally to their neighbors. This process continues until the budget is exhausted in each subtree. The size of clusters created in the Rapid algorithm is usually smaller than the initial budget because some nodes end up receiving a budget of more than the number of neighbors available in their neighbor tree. But, Persistent was designed to solve this problem by redistributing unused budget in another tree.
14

However, if a node fails to receive a budget request after a predetermined waiting period, it initiates a new cluster formation. Thus, it is possible for the sink to trigger the initial cluster formation process to guarantee that sensor nodes within the sink coverage area is part of the cluster-heads. However , there is no guarantee that subsequent initiators will have previous initiators in their transmission ranges. Therefore, there is only a

guarantee of inter-cluster connectivity if all the nodes in the network and the sink are within transmission ranges. Moreover, there is better energy-efficiency in a hierarchial single-hop cluster than in the multi-hop spanning tree cluster. The total communication distances is larger in the multi-hop spanning tree cluster. Multi-hop spanning tree clustering technique is only attractive in a very low density network.

2.3

WSN Physical Layer Properties

WSN is expected to operate in the unlicensed ISM bands [25, 1]. System on Chip (SoC) devices can be implemented for any of these frequency bands. At higher frequency, much smaller SoC device can be implemented because of the advantage of smaller antenna structures at the same antenna gain when compared with lower frequency antenna. Despite advances in VLSI process , which addresses issues of difficulty in fabricating SoC at high frequencies , cost of such process tend to force researchers to favor lower frequency bands which has the advantage of lower cost of fabrications. Mote2dot [7] operates on 916 MHz, 868 MHz, 433 MHz, and 315 MHz multichannel frequency bands with extended outdoor transmission range of 500 ft at 916 MHz/ 868 MHz and 1000 ft at 433 MHz/ 315 MHz. However, empirical results obtained from the experiment conducted by Anastasi et al. [2] showed that Mote2dot operating at 4 MHz can reach an outdoor transmission range of 135 m whereas Mote can only reach 55 m at the same frequency. 15

2.3.1

WSN Communication Patterns

Kulkarni [23] and Demirkol et al. [8] defined four common cornmunication patterns for WSNs: broadcast, converge-cast, local gossip, and multi-cast. Broadcast is defined as a type of communication pattern between sensor nodes and the sink. The sink broadcasts the network configurations such as cluster formation parameters or synchronization information periodically to the entire network (if all nodes can be reached from the sink) or a selected number of nodes. In many applications, this is the only communication pattern that exists from the sink to the sensor nodes. This is however different from broadcast frames sent from a sensor node to another sensor node or other sensor nodes. Sensor nodes use broadcast frames for neighbor discovery. Such scenario is described in section 3.3. In cluster based routing protocols, limited range broadcast frame called multi-cast is used by a cluster-head to notify all nodes in its cluster the scrarnbling CDMA code to be used within the cluster. Multi-cast is a type of communication pattern that exists between a cluster-head and its member nodes. The cluster-head uses it to communicate synchronization and other cluster information to its members. Generally, message frames in a sensor network are either ultimately destined to the sink or from the sink. In environment monitoring applications, sensor nodes route their sensed data to the sink while in a military tactical network, the sensor nodes have a bi-directional comrnunication with the sink. The nodes send sensed data to the sink. The sink performs data analysis as required by the application and advises the nodes on the necessary cause of action to take. Converge-cast is a communication pattern in which a group of sensors transmit only to a single node. The single node can be a cluster-head or the sink. Thus, the sensed data from all the sensors in the group converge at the cluster-head for processing before
16

being forwarded towards the sink. However , the sensor nodes can send their sensed data directly to the sink. The method of converge-cast used in a network depends on routing protocol implementation, maxirnum sensor node transmission range, and network size. Local gossip occurs when nodes only send sensed data through a broadcast frame just to a limited number of hops. This type of communication pattern is used in the directed diffusion [17), gossiping [11] and PEGASIS [26] routing protocols and their variants.

2.3.2

WSN Energy Loss Activities
[8] outlined five activities of a WSN that result in waste of energy:

Demirkol et al.

collision, overhearing, control-packet overhead, ideal listening, and over-emitting.

When packets from different nodes collide due to hidden terminal problem, the nodes are forced to retransrnit resulting in energy waste. Power capture effect can be used to mitigate this problem. Application of adaptive transmission range using the power amplification technique is a good way to not only mitigate collision but also reduce energy consumption. With this technique, a node transmits with just enough energy required to achieve the acceptable receive sensitivity. Overhearing occurs when a node receives a packet destined to another receiver. Ideal listening on other hand is a situation where the node continuously listens to the channel for a potential traffic. Both overhearing and ideal listening can be mitigated by dutycycling the sensing operation which allows nodes to operate in different states. The sensor node can be in low-energy (sleep mode) state when it has no task to perform and steady state when in full operation. However, the transient state between these two states provides another activity for energy loss - start-up time. High energy is required for a node to move from low energy operation state to the steady state. The start-up time is the arnount of tirne spent in this transient state. The amount of control frames required for the MAC and the routing protocol operations contribute to energy loss. Although the number and size of control frames required 17

depend on the MAC and the routing protocols, the modulation scheme can ensure that these frames are transmitted at much lower data rates. It can also ensure that it is transmitted with just enough energy since they are mainly meant to maintain neighbor connectivity and WSN is usually very dense. Over-emitting is a situation where a node transmits when the intended recipient is not available. In the protocol design presented in this thesis, each cluster-head creates a TDMA schedule for its members. Members of a cluster transmit to their cluster-

heads only on their TDMA time slots to avoid over-emitting. However, inter-cluster transmissions between cluster-heads are scheduled differently in another time schedule agreed upon by two adjacent cluster-heads. Other areas of energy waste include transmission time, transmission energy, and circuit energy consumption. Although these three are more related to the implementation of the sensor node than the routing protocol, both the transmission time and the transmission energy are related to transmission distance. Our first goal is to minimize transmission distance. The amount of time it takes a node to successfully transmit l bits from node A to B is referred to as the transmission time. Since the network is very dense and most sensor node to sensor node transmissions are over short distances, the energy required for both the electronics of the transmitter and receiver to maintain full operational state are almost the same. Thus, longer transmission time wastes energy both in the transmitter and the receiver. The amount of energy the transmitter uses to deliver a bit of information over a unit distance in other to achieve an acceptable SINR, receive sensitivity and BER is referred to as the transmission energy. Our second goal is to minimize the energy consumed in frame delivery by minimizing the number of control messages, control message size and control message transmission distance in our protocol design.

18

Chapter 3 Multi-level Clustering (MLC) WSN
In this chapter, a novel top-down tree-based architectural design for creating multi-level clustering (MLC) wireless sensor networks is proposed. As shown in Fig. 3.1, the root of the MLC tree is always the sink of a wireless sensor network. Depending on the nature of an application, sensor nodes may be randomly and geographically located. And with limited transmission ranges of all sensor nodes and the sink, likely only some nodes can send data directly to the sink. Then in this group of sensor nodes, some of them can be picked to operate as the Level-l cluster-heads. In other words, the sink is the only Level-0 cluster-head, which is the highest level node in the tree. Sensor nodes n1ay be spread in a wide geographical area. Multi-level clustering treebased architecture can be constructed for relaying information from distant node to the sink. The Level-l cluster-heads is responsible for relaying or aggregating, if exist, the information frorn the Level-2 clusters to the sink. Obviously, the traditional clustering techniques used in LEACH and its variants do not work effectively in networks requiring relaying. This is because the LEACH design is based on an assumption that all nodes can communicate with each other and the sink. But for most applications, it is impossible to make all nodes to reach the sink or every other node in the network. In such scenarios, LEACH-like protocols create island clusters which can be completely isolated, and form
gray zones in sensing environments.

The communications within the MLC protocol run in rounds. Each round consists of four operational procedures, and they are the neighbor discovery, cluster-head
selection, cluster-head member admittance, and transmission processes. The first

three processes repeat every round and they are followed with T number of transmission
19

Level k-1 Cluster-Heads

Level k Cluster-Heads

Figure 3.1: Multi-level cluster-heads structure for the MLC WSN.

Neighbor Discovery Cluster-head Selections

IIII!Iliiiiii!JIIIIIJ Il
TDMA Time Slots for Nodes in the same cluster with unique COMA codeword. Multi-hop cluster-head to cluster-head forwarding delay.

One Transmission

Cluster Member Admittance

Transmissions

Figure 3.2: The MLC architecture showing the four operational processes in the MLC WSN protocol designs.

20

operations. This is illustrated in the MLC architecture shown in Fig. 3.2. The cluster delay, CDELAY is the time delay it takes a cluster-head to perform the following operations: · Fuse the signals it has received from its members. · Forward the fused signal through its NEXT _HOP cluster-head to the sink. · Receive and forward fused signals from its upstrearn cluster-heads through its
NEXT _HOP cluster-head to the sink.

The value ofT is specified in the NOTIFY (Table 3.4) message sent by the sink, and it is subsequently copied into the PARAM (Table 3. 7) messages forwarded down the tree by the cluster-heads. A cornbination of TDMA/ CDMA schemes can be used to minimize inter- and intra-cluster interferences.

3.1

Network Model

The network model studied in this thesis is an independent randomly distributed sensor network deployed in a 2-dimensional plane. The network can be approximated to be a point spatial poisson process with characteristic:

(3.1)
where A > 0 in nodes/m 2 is the node density of the network, N is the total number of nodes in the network, 1rr 2 is the area covered by each sensor node, and r
= TX_RANGE

is the transmission range of each sensor node. Thus, we assume that each node uses a boolean sensing model and that the sensing region of a node is a circle with radius, r. In a boolean sensing model [27, 28], the sensing environment of a sensor node is considered constant and equal to the transmission range of the sensor node. An object within a node's transmission range is considered sensed and not sensed if it is outside the node's transmission range. Boolean sensing model is used in the work reported in this thesis.

21

The probability of finding a node within an area distribution:

1rr

2

in the network follows a poisson

(3.2) This is also the percentage area coverage of the network [27, 28]. Thus, in a 1000 x 1000 m 2 network with r

=

152.4 m and N

=

2000 nodes i.e. ).

= 0.002 nodes/m 2 , fa =

1

or 100%. However , with N = 200 nodes i.e. ). = 0.0002 nodes/m 2 , fa= 99.99995%. However, the amount of redundancy in the network can be expressed as the number of sensors whose sensing areas are fully covered by another sensor or collections of other sensors. This has a direct effect on the performance of energy-efficient protocols which turn off redundant sensors while preserving area coverage. Tian et al. [32] used geometry to determine the percentage node coverage (redundancy) in a network. Because of the difficulty in expressing a closed form mathematical model for this problem, they represented their result via simulations. Assuming boolean sensing model and that all nodes have equal sensing range, a node can only cover another node's sensing area completely if they are both deployed at the same exact position. It requires at least three nodes to completely cover the coverage area of a node if otherwise. This redundancy is exploited in the improvement on MLC aimed at further extending the lifetime of a MLC WSN.

3.2

Energy Model

The energy model used in simulations is based on the one discussed in [12] and it is briefly reviewed. Power attenuation depends on the traveling distance, d, from a sender to a receiver. In free space or short distance without any obstacles, signal power follows the inverse-square law, ex 1/d2 ; but for longer distance with multi-path fading, signal power follows ex 1/ d4 . For the simulations carried out as described in Chapter 4, both Friss free space model 22

n~=~ ~~j~~!

I

I
I
I
Node 8

o- ················-··········L

Node A

·-····-··--··-···-·~:t.no.

Figure 3.3: Neighbor distance estimation using the power level received from the neighbor 's HELLO message and multi-path fading model are used based on the distance parameter, d. The received power Pr (d) is for d < dcrossover for d ~ dcrossover where Pt is transmitted signal power, Gt and Gr are the transmitter and receiver antenna gains, ..\ is the wavelength of the carrier frequency, and L
~

(3.3)

1 is the system loss factor

not relating to propagation loss. The ht and hr are the transmitter and receiver antenna heights, respectively. And the crossover point of the two models is set at

(3.4)
At a sensor node, energy Etx(l, d) is consumed for transmitting l-bit frame through a distance, d, and it is: for d < dcrossover for d ~ dcrossover where Ee is energy consumed per bit ( J /bit) by the transceiver electronics, E friss is the free space power amplification coefficient in Jjbit/m 2 and Etwo-ray is the multi-path fading power amplification coefficient in Jjbit/m 4 . Similarly, the energy Erx(l), consumed upon receiving l-bit frame, is:

(3.5)

Erx(l)

=l
23

X

Ee.

(3.6)

If data rate is

Rb ,

the transmit power

Pt

is:

R _ Etx( l, d) R tl b·
Using Eqn. (3.3), (3.5), and (3.7), we can obtain parameters
Pr-sensitivity ( 47r) RbGtGrA Etwo-ray
2

(3.7)
and

Efriss

Etwo-ray,

2

E friss

(3.8) (3.9)

=

Pr- sensitivity RbGtGrh[h;

With the parameter settings 1 used in our simulations, from Eqn. (3.8) and (3.9), we obtain:
Efriss

= 6 f Jjbit/m 2 and

Etwo-ray

= 0.815 aJjbitjm 4 where f = 10-15 and

a= 10-18.
In general, a cluster-head consumes more energy than its members to execute its operations as it administers, receives transmissions from all cluster members, and aggregate them into a frame for forwarding. If EcH(l, n) is the energy consumed by a cluster-head with n clustered members, then it is:

(3.10)
where E 1 is the energy required for the fusing operation. Furthermore, a cluster-head may need to relay fused information frames from cluster-heads at lower levels to the sink. Suppose that there are in total F fused data flows including the local cluster required forwarding. Then the total energy, Er(l , n) required by a cluster-head in one transmission process is:
F

Er(l , n) = EcH (l , n)

+ (F-

1)Erx(l)

+L
f=l

Etx(l, df)

(3.11)
If a

where the df is the transmission distance for a cluster-head forwarding flow f.

cluster-head always has energy to reach its NEXT_HOP cluster-head , then the d1 is constant throughout a transmission process. But with insufficient residual energy, the cluster-head
1

Gt

= Gr = 1 m, ht = hr = 1.5 m, Rb = 38.4 kbj.s, .X = 0.328 m, Pr- sensitivity = -98 dBm or 158

JW
24

may need to invoke a redirection process which changes the distance df for the flow upon finding a new re-director. The first term in eqn. 3.11 is expressed in eqn. 3.10. The second term is the energy consun1ed in receiving aggregated signals from the cluster-head's upstream cluster-heads. The last term is the energy consumed by the cluster-head in forwarding its own signal and forwarding the signals received from its upstream cluster-heads. In the design , the required minimum energy operating level, MIN_ENERGY of a node is fixed at twice the amount of energy required to transmit the maximum frame size at the maximum transmission range. It switches off itself when its residual energy is below this level. This ensures that a node, low in stored energy, does not get involved in the neighbor discovery process (Section 3.3) and end up polluting the NEIGHBOR_ TABLE of other nodes. This is because such node with low energy level ends up sending HELLO message with a transmission power lower than what is required to reach the maximum transmission range. Such a situation causes those nodes, receiving the HELLO message, make incorrect estimates of the distances that this node is away from. Thus,
MIN_ENERGY = 2 x Etx (l, TX_RANGE). (3.12)

where TX_RANGE is the n1aximum transmission range.

3.3

MLC Neighbor Discovery Process

In the proposed multi-level clustering protocol design, a sensor node selects a random number between 0 - u to determine the number of seconds to wait before sending a
HELLO broadcast message covering its maximum transmission range 2 . u is set to 9 in

simulations. This operation is to notify all neighboring nodes regarding the existence of this specific node. During the waiting period, a sensor node listens for neighboring nodes' discovery messages.
A sensor node transmits at its maximum power to reach sensor nodes at its maximum coverage area with acceptable receive sensitivity. The coverage area of a node is modeled as a perfect circle.
2

25

The fields in HELLO message are shown in Table 3.3. The NODEID field is the unique identity of the node sending the message. The ENERGY field indicates the current residual energy level of the node. The NODEID of a node is unique but the ENERGY level of a node decreases with time elapses. However, this condition does not apply to the sink, because the sink is assumed to have energy renewing source. Table 3.1: Important Node Properties

Property
NODEID ENERGY TX_RANGE

I Description
The unique identity of a node. Current residual energy of a node. Maximum Transmission Range of a node. This value is the san1e for all nodes including the sink.

CLUSTERID

The unique identity of a cluster. This is equal to the NODEID of the cluster-head of a cluster.

NEXT_HOP

The next-hop cluster-head in the cluster-head's route to the sink.

Table 3.2: NEIGHBOR_ TABLE
NEXT_HOP

Table 3.3: HELLO Message
I NODEID I ENERGY I

Upon receiving a HELLO message from another node, a node registers the received
NODEID and the latest ENERGY in its NEIGHBOR_ TABLE. The fields for each entry in the NEIGHBOR_TABLE is shown in Table 3.2. If a HELLO with a new NODEID is received for

the first time, it randomly picks a number between 0 - u, and waits for that length of time before replying with a HELLO message. If the received HELLO message is from a

26

registered node, it sirnply updates the latest ENERGY in the NEIGHBOR_ TABLE. The reason for replying with a HELLO message is to create a bidirectional link between the two nodes and secondly to update other neighbors of its current battery status. Since HELLO message is sent with transmission powers to reach the maximum transmission ranges, a message receiving node can thus make an estimate of the DISTANCE, d, of the message sending neighbor. For example, from Fig. 3.3, the distance can be interpreted with the energy model discussed in Section 3.2. With the values of parameters used in simulations, the received power at the crossover point is 171 pW. With d's set to TX_RANGE in Eqn. (3.3) and (3.7), we can obtain the DISTANCE, d, as for Pr > 171pW (3.13) for Pr :S 171pW At the end of each round, every node including the sink purges its NEIGHBORS_ TABLE and begins a new neighbor discovery process. This takes care the scenario that some nodes might have switched off due to low battery powers based on Eqn. (3.12). Another technique that can be applied to take care of this effect is for the nodes to periodically send HELLO messages to maintain connectivity. This technique is used in conventional wireless ad-hoc routing protocols such as Ad Hoc On Demand Distance Vector (AODV) Routing protocol [31]. AODV sends three consecutive "Hello" messages back-to-back periodically (every 3 seconds). However, this approach has four drawbacks in an energy-constrained densely deployed WSN:

· The periodic sending of HELLO messages further depletes the energy of the nodes since the neighbor size is large.

· Since nodes of different clusters use different CDMA_CODE for transmission within their cluster, sending of HELLO messages during a transmission process requires a node to switch from its cluster specific CDMA_CODE to the general CDMA_CODE.
27

· Such high energy transmission results to higher power capture effect and increased intra- and inter-cluster interference. · The probability of the HELLO messages of two sensor nodes deployed at the same time within transrnission range of each other to collide is 10% in this irnplen1entation and about 100% if AODV technique is implemented. However, their technique works with better collision probability in IEEE 802.11 products because of the contentious nature of the IEEE 802.11's MAC protocol when working in ad-hoc mode.

3.4

MLC Cluster-head Selections Process

After the neighbor discovery process, a cluster-head can select cluster-heads at the next level. For example, at the Level-0, the sink picks at most I number of nodes frorn its
NEIGHBOR_ TABLE as the next level cluster-heads and broadcasts the NOTIFY message.

The transmission power level of sending a NOTIFY message depends on the DISTANCE estimates of selected nodes recorded in the sink's NEIGHBOR_ TABLE. The selected node with the largest DISTANCE, d, value is used for setting the transmission power of the
NOTIFY message, that is, NOTIFYtx
range

-

= l'SiSJ max [DISTANCE] .

(3.14)

Upon receiving the NOTIFY message, a node firstly checks to see if its NODEID is listed in the message. It simply discards the message if it is not selected. Table 3.4: NOTIFY message.

I NDDEID [1]

I NODEID[I] I T I A I z I F I J I CLUSTERID I

The design can control the transmission power upon sending the NOTIFY message and help conserve overall network energy. Certainly, reducing the number of nodes that receive the message may potentially extend the life of a node, but may also minimize 28

the coverage area of the sensor network. We will explore the system performance with regard to the nurnber of cluster-heads selected in the next level in later section. A node is selected as a cluster-head using a Maximum Residual Energy Model which will be discussed in detail in Section 3.4.1. For example, at the Level-0, the sink selects the first I nodes with the lowest COST values. These I nodes form the Level-l clusterheads as shown in Fig. 3.1. If the sink has fewer than I neighboring nodes, then the sink may select all of thern. In the protocol design, the sink has choices to require confirmation reply messages from these selected I nodes which indicates the acceptance or rejection of the task. The F field in the NOTIFY message is used for this purpose. When F is set to 1, a reply acknowledgement is required. When it is set to 0, the acknowledgement is not needed. An F
=

0 also indicates that the selected nodes must accept the task of

being cluster-heads. The CLUSTERID field is the NODEID of the node initiating the NOTIFY message. A listed node, upon receiving the NOTIFY message, registers the CLUSTERID field value in its NEIGHBOR_TABLE as the NODEID of its NEXT_HOP node to the sink. Then, it broadcasts a REQUEST message at its peak power to all its neighbors with the CLUSTERID field updated with its NODEID. That is, the CLUSTERID of a cluster-head is the same as its NODEID. Notice that some neighbors of the Level-l cluster-heads may include the neighbors of the sink. Therefore, for the nodes within this cluster-head's neighborhood that have not received any REQUEST, NOTIFY or ACK messages from any other nodes, they respond with REPLY messages. This is designed to allow those nodes that are in front of the cluster-head to respond. Or, at least, most of the replying nodes will be in front of the cluster-head. The goal of the algorithm is to select only nodes in front of a cluster-head as members of its next level cluster-heads. Thus, ensuring that the structure in Fig. 3.1 is achieved. Suppose in Fig. 3.4, the sink has selected a Level-l cluster-heads. Suppose for simplic29

Figure 3.4: Cluster-head selections: illustrations of the REQUEST, NOTIFY and REPLY messages. Only nodes within the shaded area will respond with REPLY messages when a
REQUEST rnessage is sent by cluster-head s.

ity that the cluster-head s is located at a distance close to sink's maximum transmission range. Suppose also that the cluster-head s has sent out a REQUEST message at its peak power in invitation of qualified candidates for next level of cluster-heads. Assume the unshaded circle represent the coverage area of the sink and the shaded circle represent part of the coverage area of the cluster-head s that is not covered by the sink. It is only nodes located in the shaded area that will respond with REPLY messages. Notice that these nodes are in front of the cluster-head s. The NODEID in the REQUEST message is that of the cluster-head sending it. The

receiving node uses this field to identify the sender of the message. The NODEID and
CLUSTERID fields in the REPLY message are the identities of the node replying it and

the cluster-head that has initiated the REQUEST message, respectively. The cluster-head
30

uses the CLUSTERID field to identify the unicast REPLY message that is intended for it. While it uses the NODEID field to identify the node that has sent the reply. The REPLY message also contains the current ENERGY level of the replying node, and the cluster-head can update it properly in its NEIGHBOR_ TABLE. The current ENERGY levels are critical in selecting the next level cluster-heads. Table 3.5: REQUEST/ ADVERT Message

I NODEID I TYPE I

I TYPE I Message I Description
0

REQUEST

Used by a k-th level cluster-head to send invitation for (k level cluster-heads.

+ 1)-th

1

ADVERT

Used by a cluster-head to send invitation for member nodes.

A Level-k cluster-head (k

=/=-

0) may select up to J number of next level Level-(k + 1)

cluster-heads. The settings of both I and J parameters will be studied in Chapter 4. The value of J is specified in the J field of the NOTIFY message. Using the maximum residual energy model, J number of nodes are selected from the set of replied nodes, and a NOTIFY message is broadcast with a power level determined based on Eqn. (3.14), where in this case I is changed to J. When the F field in the NOTIFY message is set to 1, an ACK or NACK n1essage is replied to the cluster-head that has sent the NOTIFY message to the intended next level cluster-heads. When a selected node finds its NODEID in the list within the NOTIFY message, it replies an ACK message to the cluster-head if and only if it has not overheard ACKs from other nodes from the time that it sent the REPLY message to the time that it received the NOTIFY message. This ensures that the selected cluster-heads are not concentrating in one location. Also, this design ensures that proper number of nodes are selected as members of k-th level cluster-heads by a (k - 1)-th level cluster-head, as described in 31

Fig. 3.1. This guarantees effective area coverage of a network that can reach the sink with a good number of cluster-heads.
If some nodes replied with NACK messages, a cluster-head then has to select another

set of nodes equal to the number of receiving NACK messages using the maximum residual energy model. The cluster-head then sends a NOTIFY message to them. Indeed, ACK and
NACK messages may be returned by some or all the nodes again. This process continues

until J number of nodes have accepted the task of next level cluster-heads or the list of replied nodes is exhausted. Notice that even though the J field is the same in all NOTIFY messages , the number of lower level cluster-heads created by each cluster-head in the same level is not always the same. The newly selected k-th level cluster-heads repeats the same process of selecting

(k

+ 1)-th

level cluster-heads until such a time that no more node replies to a cluster-

head's REQUEST message. At each level, every Level-(k

+ 1)

cluster-head registers the

NODEID 3 of its k-th level cluster-head in its NEXT _HOP field of its NEIGHBOR_ TABLE. This

protocol design has an advantage of potentially creating a spanning tree that can be used to forward all sensed data in a network through the tree to the sink consistently.

3.4.1

Maximum Residual Energy Model

The COST(node) function of a node , node located at an estimated distance , DISTANCE from a certain cluster-head which is its neighbor is:
Eini

COST (node)

=

ENERGY node

(

)

(3.15)

where

Eini

is the initial energy state of a node when it is firstly deployed. The ENERGY(node)

is the latest residual energy level of the node. To simplify the computation, the numerator and denominator in Eqn. (3.15) can be switched, and the division can become a simple bit-wise shift operation; in this case, the node with the maximum residual energy
3 This

is the CLUSTERID field in the NOTIFY message.

32

Table 3.6: REPLY I JOIN I ACKI NACK Message

I NODEID I CLUSTERID I ENERGY I TYPE I

I TYPE I Message I Description
00 01 10
ACK NACK REPLY

Used by a node to accept the task of cluster-head. Used by a node to reject the task of cluster-head. Used by a node to respond to a REQUEST message indicating that it is available to accept the task of cluster-head.

11

JOIN

Sent by a node to a cluster-head to indicate that it is willing to join its cluster.

should be picked. In other words, the inverse of the COST(node) function is the output of the maximum residual energy model. Suppose that a Level-k cluster-head has sent out a REQUEST message, if G nodes out of the P neighbors of the cluster-head responded with a REPLY message, then J among these G sensor nodes can be selected as the Level-(k + 1) cluster-heads.

3.5

MLC Cluster Member Admittance Process

Once the cluster-head selection process has been completed, each selected cluster-head broadcasts an ADVERT message at its peak power to all its neighbors. Node then replies with a JOIN message to the cluster-head that it has received with the strongest signal strength. This likely should be the closest cluster-head. In the MLC cluster member admittance algorithm, a cluster-head simply accepts all JOIN messages by sending nodespecific ACCEPT messages to all joining nodes. However, in the modified version of MLC in Section 3.8.1, the parameters A and Z in NOTIFY messages will be used to control the minimum and rnaximum member nodes a cluster-head can support. A cluster-head may reject some JOIN replies. With fewer 33

member nodes than the preset m1n1mum number , a cluster-head informs its current members to join another cluster-head. But the cluster-head cannot abandon its role unless its higher level cluster-head disappears in the tree. This technique may reduce the waiting time of cluster-heads with small member size before initiating aggregate message forwarding as described in the next section. Furthermore, it may improve the life span of the network. Smaller number of flows is expected to be forwarded by cluster-heads at the lower levels. Cluster-heads should cooperate with the immediate upstream , immediate downstream, and same level neighboring cluster-heads to create orthogonal CDMA codewords for their respective clusters. Each cluster-head uses a specific codeword for all intra-cluster communications, while a dedicated codeword is used for cluster-head to cluster-head for multi-hop frame forwarding. This dedicated codeword should be known to all nodes in network. After the establishments of intra-cluster codewords, cluster-heads set up TDMA schedules for all associated members and notify them through broadcast PARAM messages. The transrnission power level of an intra-cluster communication is based on the Eqn. (3.14), where I is changed to SIZE, the membership size of the cluster. The

CLUSTERID field in the PARAM message is the NODEID of cluster-head which the nodes

use to update their respective CLUSTERID fields. The NEXT _HOP and CLUSTERID fields of NEIGHBOR_ TABLE are usually null for all nodes just after the neighbor discovery process. At the end of the cluster-head selections process, the NEXT _HOP field of cluster-heads contain the NODEID of their respective immediate downstream next hop cluster-head. While the NEXT_HOP field of every other node remains null. However, at the end of the cluster member admittance process, the CLUSTERID field of all nodes that are part of a cluster (including cluster-heads) contain the NODEID of their respective cluster-head. The CLUSTERID field of inactive nodes (i.e. nodes that are not part of any cluster) remains null throughout a round. 34

~---------------------~R=m·=' na~1----------------------~

s~~,~~-: -~ ~~:T :"'~::±J:= ~--~ -. :~ $~.:1 ~~{_t,~:
N:)ELAY SLOT T IME '+- - - - - ---- - NDELAY
---

T··ansmiss1on ·1

j CDELAY

_ _

Transmission 2

CO ELAY

Transmission T

CDE LAY

NDELAY
- - - - - - - -·----·-

-

'

Figure 3.5: One round of transmission time line for a cluster with maximum cluster size, MandT transmissions.

3.6

MLC Transmission Process

In a transmission cycle , each member node transmits its sensed data to its cluster-head in its allocated TDMA SLOT. SLOT_ TIME is the amount of time allocated to a member node by its cluster-head. The SLOT_ TIME is constant in simulations because all member nodes are set to send identicall-bit data frame per transmission operation.

Table 3.7: PARAM message.

I CLUSTERID I SLOT I SLOT_TIME I CODE I T I SIZE I

Once a cluster-head has received data from all its member sensor nodes, it aggregates the sensed data.
It waits for a pre-assigned tin1e until its NEXT _HOP cluster-head is

ready to receive its aggregate data frame with the cluster-head to cluster-head dedicated codeword. Also with possibility, cluster-head may receive aggregate data from upstream cluster-heads towards the sink, and need to schedule them for forwarding. In the design, its own signal always takes precedence. In the simulations, all nodes and cluster-heads are assun1ed to operate at constant data rate for simplicity. For a sensor node, the transmission process may involve T number of transmissions, which is specified in the T field of PARAM message in a round , r. As depicted in Eqn. (3.16), a node waits for NDELAY (node, r) after each frame transmission inside the round r before 35

transmitting another frame as shown in Fig. 3.5 , i.e.,

NDELAY(node, r) = [SIZE(h) - 1]SLOT_TIME + CDELAY(h)

(3.16)

where the cluster delay, CDELAY(h) is the time required to aggregate signal , received aggregated signals from upstream cluster-heads and then propagate each of the signals from a cluster-head h to the sink, and SIZE(h) is the number of member nodes of h. The CDELAY(h) largely depends on the estimate of the cluster-sizes of all clusters along the route to the sink and number of flows on the route. At the end of the T-th transmission, all nodes including the cluster-head purge the NIEGHBOR_ TABLEs and switch to the common codeword. A new neighbor discovery process begins which is followed by a new multi-level clustering process. This cycle continues until the time that the network is no longer functional. Recall that a node switches off when its residual energy is lower than the MIN_ENERGY in Eqn. (3.12). Also, when a cluster-head does not have enough energy to transmit its aggregate signal from its members in any operating process in a round, it initiates a redirection protocol.

3. 7

Redirection Protocol

In some cases, a cluster-head h has enough energy to successfully receive signals from its members and form a single fused signal. However, it does not have enough energy to transmit it to the NEXT _HOP cluster-head. The cluster-head uses the minimum cost model defined in Eqn. (3.17) to choose are-director. The re-director node must be a member of the cluster-head with higher residual energy than the cluster-head. This ensures that the re-direction operation balances energy consumption within the cluster. 36

3.7.1

Minimum Cost Model

COST(m) is the cost function of a member node, m, of a cluster-head, h in performing the task of a re-director for its cluster-head, h. The cost function is COST(m) = Etx(l , dh-m)

+ Erx(l) + Etx(l , dm-NEXT_HOP ),

(3.17)

where dh-m is the distance between the cluster-head h and the member node m. The dm-NEXT_HOP is the distance between this m and the NEXT_HOP cluster-head. Thus, energy Etx(l , dh-m) is used by h to forward a fused signal tom , and then Erx(l) is the energy consun1ed by m to receive the forwarded fused signal from h. Also , Etx(l , dm-NEXT_HOP) is the energy consumed by node m for forwarding fused signal to the NEXT _HOP clusterhead. The node m may possibly serve as a redirecting node for its cluster-head in a transmission process if and only if the following conditions hold true:

· m is in the NEIGHBOR_ TABLE of the NEXT_HOP cluster-head of h.
· The residual energy of h is greater than the energy required for it to reach m; i.e. ENERGY( h) > Etx (l , dh-m)· · The residual energy of m is greater than the residual energy of h; i.e. ENERGY( m) > ENERGY( h). · The residual energy of m is greater than the energy required at m in receiving the fused signal from its cluster-head and then forwarding it to its cluster-head 's NEXT_HOP cluster-head; i.e. ENERGY(m) > Erx(l)

+ Etx(l , dm-NEXT_HOP ).

· COST ( m) is the minimum among all nodes that has satisfied the first four conditions. Therefore, selected re-director , m, for the cluster should be

m

= arg

l~m ~ Q

min COST(m),

(3.18)

37

where Q is the set of nodes with residual energies higher than that of the cluster-head h and can function as a re-director node.

3.8

MLC with Load Balancing (MLC-B)

Bottleneck cluster-head

Sink

(a) MLC

Bottleneck cluster-head

Sink

(b) MLC-B

Figure 3.6: Comparison of the flow patterns of MLC and MLC-B protocols for a worst case scenario where a Level-l cluster-head has to forward flows from all Level-2 to Level-k ·cluster-heads. The diagram shows only a single chain for simplicity. Although the MLC protocol performed much better than the multi-path LEACH
38

protocol, it can be seen from Fig. 4.1(a) that 40% (the knee of the graph) of the originally deployed nodes in Network A are still alive when the network suddenly became unusable. This is because all nodes within the sink region is dead and all other 40% remaining nodes cannot reach the sink. The nodes in the sink's NEIGHBOR_TABLE which form the Level-l cluster-heads are bottleneck cluster-heads in the network. They perform the task of cluster-head and as well forward their own flow plus all other flows of their upstream cluster-heads. In a worst case scenario, if all the tree branches of a Level-l cluster-head is complete in a round up until its Level-k cluster-heads, the total number of flows, F(h) the Level-l cluster-head, h forwards in one transmission processes of that round is:

k-1

F(h) =

L

Ji

(3.19)

i=O

where J is specified in the NOTIFY (Table 3.4) message as the maximum number of lower level cluster-heads an upper level cluster-head can select. Eqn. 3.19 is illustrated in Fig. 3.6(a). However, only a single chain is represented for simplicity- one cluster-head is shown for each level. Assuming equal cluster sizes, that all flows are forwarded at equal transmission distances, and that all intermediate cluster-heads have enough energy to forward all upstream flows, then EcH(l,n) and Er(l,n) from Eqns. (3.10) and (3.11) respectively are constants for each cluster-head in a transmission process. Thus, if Er(k) is the total energy consumed by a Level-k cluster-head in one transmission process of a round, the total energy consumed by its Level-l cluster-head, Er(l) in one transmission process of that round is:

Er(k)

= EcH + Etx
l]Erx

(3.20) (3.21)

Er(l)

=

[Er(k)- EcH]F(h)

+ EcH + [F(h)-

39

From Eqn. (3.21), the energy consumption of the cluster-heads reduces asymptotically as their distance from the sink increases. Therefore, a model that will result in better load balancing must reflect this situation. However, WSN node energy consumption balancing and cooperation techniques proposed for LEACH like protocols and all other protocols for WSN s that assume that all nodes can reach the sink directly cannot work for this scenario because they are based on optimizing the minimum number of hops the fused signal must be forwarded before forwarding it directly to the sink. This requires that the node at the optimum hop must be able to reach the sink directly. However, some other energy balancing techniques [4, 15] rely on the sensor network node characteristic distance,
dchar

in determining optimum number of hops to the sink.

Howitt et al. in [15] also used shorter hop distances for frame forwarding closer to the sink than away from the sink. Although these techniques reduce energy consumption at per node level, it does not result in better network performance in addressing the issue of bottleneck that occurs at the cluster-heads close to the sink. Haenggi et al. [10] proposed several energy balancing techniques based on avoiding shorter rnultiple multi-hop transmissions in favor of long haul transmissions to use as few nurnber of hops as possible in reaching the sink. However, the nodes within the sink region will still be overloaded unless if all nodes in the network can reach the sink. In which case, nodes far away from the sink can alternate between sending directly to the sink and sending through multiple multi-hop transmissions. A cluster-head uses direct transmission when its residual energy is higher than that of other cluster-heads it should have used for multi-hop transmissions. Also, it uses direct transmission when the energy required for direct transmission is smaller than the energy required for multiple multi-hop transmissions. In other to determine this energy, a synchronized link state information must be propagated regularly across the network. Technique for propagating link state information to all the nodes is not described in [10].

40

The proposed algorithm (MLC-B) is aimed at reducing the number of upstream flows the nodes close to the sink has to forward in each transmission process. In the MLCB algorithn1, the Level-l cluster-heads in Fig. 3.1 only serve as Inter-Cluster-Routers (ICR). They do not advertise for members but only serve to forward flows from their upstream cluster-heads to the sink. Since in a dense network, not all the nodes in the
NEIGHBOR_ TABLE of the sink become cluster-heads, other nodes in the neighborhood of

the sink and the Level-2 cluster-heads can join a Level-2 cluster-head. This ensures that there is sensing coverage within the sink's region. However, relieving the Level-l cluster-heads the task of coordinating a cluster saves them both the energy required to receive sensed data from member nodes, fusing them and then forwarding the aggregate signal to the sink. It follows that Eqns. (3.19) and (3.21) can be re-written as:

k-1

F(h)

=

L

Ji

(3.22)

i=l

and

Er(l)

= [Er(k)- EcH + Erx]F(h).

(3.23)

Comparing Eqns. (3.21) and (3.23) indicates the amount of energy gained in the Level-l cluster-heads. The output of the comparison is Er( k) which is illustrated in Eqn. (3.20). Eqn. 3.22 is illustrated in Fig. 3.6(b). However, only a single chain is represented for simplicity - one cluster-head is shown for each level.

3.8.1

MLC-B Cluster Member Admittance

The cluster member admittance process in MLC-B protocol is in two stages. The first stage is similar to the cluster member admittance process in the MLC protocol (Section 3.5). The differences are as follows: 41

· The maximum number of members a cluster-head can support Is controlled by Eqn. (3.24) in the MLC-B protocol. · Level-l cluster-heads have zero member sizes. Thus, Level-l cluster-heads in the MLC-B WSN serve only as relay sensor nodes called ICRs. They do not perform sensing operation but simply forward signal from their upstream cluster-heads to the sink. However, other sensor nodes in sink's neighborhood not chosen as clusterheads can join a Level-2 cluster-head (if possible) to ensure that the sink's region is covered. · The minimum supported cluster-size in the 1\!ILC-B WSN is indicated in the A field of the NOTIFY messages. However, in the second stage, a cluster-head that has member nodes lower than the value in A field of the NOTIFY messages must relinquish its members but it does not abandon its task as a cluster-head. Thus, it serves only as ICR for its upstream clusterheads. However, a cluster-head abandons its task as a cluster-head if and only if it does not have an upstream cluster-head connected to it. A cluster-head that has relinquished its task of cluster-head must initiate a JOIN message to its downstream cluster-head. It becomes an inactive node in that round if the join attempt fails. Also, its previous member nodes must attempt to join their respective next cluster-head they received stronger ADVERT messages from by sending a
JOIN message to the cluster-head.

Table 3.8: Modified NOTIFY message.

Two new message types are defined for managing the cluster admittance process in MLC-B protocol. The ACCEPT and REJECT messages (Table 3.9). A node receives an
ACCEPT message if its join request is successful. Otherwise, it receives a REJECT message.

42

Table 3.9: ACCEPT / REJECT Message

I NODEID I CLUSTERID I TYPE I

I TYPE I Message I Description
0

REJECT

Sent by a cluster-head to a sensor node in response to a JOIN message to indicate its unwillingness to admit it as a member of its cluster in that particular round.

1

ACCEPT

Sent by a cluster-head to a sensor node in response to a JOIN message to indicate its willingness to admit it as a member of its cluster in that particular round.

If a node receives a REJECT message, it simply sends JOIN message to the next clusterhead from which it received high signal strength ADVERT message. However, if a node fails to successfully join a cluster-head before running out of the list of cluster-heads from which it received ADVERT messages, it simply becomes an inactive node in that round.

A cluster-head also uses the REJECT message in notifying its members to join another
cluster when it has cluster member size smaller than A. Similarly, a cluster-head that has member size equal to its maximum cluster size must reject all subsequent join attempts. Thus, cluster admittance process in the MLC-B protocol is on a first come first serve basis (FCFS). The upper bound of the maximun1 cluster size in the MLC-B WSN is specified in the Z field of the NOTIFY messages. However, the actual maximum cluster size of a cluster-head is dependent on the Level the cluster-head belongs. Thus, the maxin1um cluster size, M(h) of a cluster-head, h in a round, r is:

M(h)

= min[(A + j3K), z]

(3.24)

where K is the level the cluster-head belongs and j3 is a non-negative integer weighting factor that determines the distribution of cluster sizes in the MLC-B WSN. If j3 2:: 1, the
43

distribution of M(h) is arithmetic with the last term less than or equal to Z. However , at (3 = 0, M(h) =A which is constant for all cluster-heads in the network except for Level-l cluster-heads that have a different condition. Level-l cluster-heads have zero member size in a MLC-B WSN. We set A = 4 and Z = 20 in simulations. Eqn. 3.24 ensures that cluster sizes in the MLC-B WSN has a lower bound of A and an upper bound of Z. The cluster sizes gradually increases from Level-2 cluster-heads to Level-k cluster-heads. This ensures reduction in cluster related load on higher level cluster-heads (cluster-heads close to the sink) while increasing that of lower level clusterheads. Cluster related loads include: cluster member admittance messages, TDMA

schedule creation, receiving signals from cluster members, fusing of the received signals, forwarding the received the fused signal towards the sink through its NEXT _HOP clusterhead, and possible receiving and forwarding fused signals from its upstream cluster-heads. The smaller the cluster size, the srnaller the arnount of energy consumed in performing these tasks. However, enforcing a lower bound cluster size reduces the nun1ber of flows forwarded by higher level cluster-heads. The NOTIFY message has been modified (Table 3.8) to include K field which holds the information of the level of the node receiving the message. Thus, a Level-(k-1) clusterhead updates the K field to k before sending NOTIFY message.

44

Chapter 4 Simulation and Results
As shown in Table 4.1, two wireless sensor network models are used in simulations. The network A is a relatively dense network model, while network B is a relatively sparse network model. Network A is randomly generated with a total of N
=

2000 uniformly

positioned sensor nodes in an 1000 x 1000 m 2 square-shaped area. The node density is 0.002 nodes /m 2 . The n1aximum transmission radius is 152.4 number of neighboring nodes is 146 nodes. Similarly, the second network, network B, is also randomly generated with a total of N
=

m [7],

and an average

200 uniformly positioned micro-sensor nodes in an 1000 x 1000 m 2 square-shaped

area. The node density is 0.0002 nodesjm 2 . The average number of neighboring nodes is 15 nodes with the maximum transmission range of 152.4 m. There are 63 neighboring nodes to the sink in network A , and it is only 4 nodes in network B. The sink is located on the right side at an x-y coordinate (1000, 500) in metres in both networks. An initial energy of 2 Joul es is assigned to each micro-sensor node. Other sensor node parameters are based on Mica2dot 1 specifications [7] (see Table 4.2). In our simulations, a network is considered unusable when only fewer than 10% of all sensor nodes are still alive, or if there are no nodes that can reach the sink. A sensor node is considered dead and switches off when its residual energy is less than the MIN_ENERGY value in Eqn. (3.12). A sensor node may be switched on but inactive. In a round, an inactive node is not linked to any cluster-head, and hence, it does not participate in the sensing operations. Hence, a node can go into sleep mode and wake up at the end of the round. From Fig. 3.5
1 Mica2dot is a third generation wireless micro-sensor node designed specifically for deeply embedded wireless sensor network.

45

Table 4.1: Parameters for network A and network B. Parameter Total number of nodes, N Network dimension (in metres) Node density (nodes/m 2 ) Average number of neighbor nodes
( x, y) position of sink (metres)
I

Network A I Network B 2000 1000
X

200 1000
X

1000

1000

0.002 146 (1000, 500) 63 152.4

0.0002 15 (1000, 500) 4 152.4

# of sink's neighboring nodes
TX_RANGE (in metres)

Table 4.2: Reference Parameters Parameter
Ejriss-amp Etwo-ray-amp Gt hr

Value 6

Parameter
Ee Ef

Value 50 nJ/bit 5 nJ/bit 38.4 kbps
1

f Jjbit/m 2

0.815 aJjbitjm 4
1 rn

= =

Gr ht
2

Rb
L
,\

1.5 m 87 m 152.4 m

dcrossover

0.328 m 4000 bits

TX_RANGE

46

which shows the time line of transmission operations , a node can estimate the length of time it can spend in the sleep mode. Furthermore, clusters may form but sensed data from their associated members cannot reach the sink. This is because no path can be established to the sink. These clusters are called island clusters, within which the nodes are also considered inactive. That is, the cluster-head in an island cluster does not have a NEXT _HOP cluster-head, and the clusterhead is not in the NEIGHBOR_ TABLE of the sink. Island cluster is a worse scenario because energy has been consurned but wasted in sensing information, as the sensed signal does not reach the sink.

4.1

MLC Simulations and Results

From the plot ted results shown in Fig. 4.1, island clustering does not occur in the proposed MLC protocol. The proposed clustering technique forms a tree from the sink, and clusterheads are generated as by-products. However, the island clustering problem is noticeable in the LEACH protocol. The effect is more prominent in a relatively sparse network, as shown in Fig. 4.1 (b). This is because the randomized nature of cluster-head selection in multi-hop LEACH does not guarantee that a node within range of the sink is selected as cluster-head in a round. In sparse network, the probability of a node in the sink
NEIGHBOR_ TABLE becoming a cluster-head is much smaller.

Even if a few nodes within the range of the sink is selected, they might still be not enough to sustain the network for the entire period of the round. There are multiple occurrences that multi-hop LEACH protocol recorded zero number of transmissions in Fig. 4.1(a). It means that there are no cluster-heads in the neighborhood of the sink. The percentage active nodes is zero in this case. In Fig. 4.1 (b), this happens always for the multi-hop LEACH protocol in network B. The results indicate that the MLC protocol ensures good coverage of the network provided, and it makes good use of the sensor nodes within the transmission range of the sink.

47

Network A: T 100% 90% 80% 70%
(/)

=100 Transmissions/Round with I =2, J =3

(])

"0

60% 50% 40% 30% 20% 10% 0% 0

z
(])

0

<(

u

>

.. .
1k 2k

. .. .. .. .. ..
. .. "'

... . . .
3k

. "' .

. . . .
4k

· .. "' . . "' .. ! ... . : :: ~= . ........ ....... ....... "" .. = .. : . ·
I

. . ... . . .
6k

Sk

Number of Transmissions

(a)
Network B: T = 100 Transmissions/Round with I 100%
----------··r···· ·

10, J = 4
··························· · · ······-~

· ············· ···················-r······- ·······································r···- ........................................., ····························---- --------···r··- ····

LEACH! MLC
i

60%

;

40%

-'

20%

0%

.....
0
1k 2k 3k

. .···.·......···.....£~~
4k Sk

·

i i

6k

Number of Transmissions

(b)

Figure 4.1: Change In active node percentage versus number of transmissions per round (time).

48

Certainly, the performance of MLC protocol may depend on the parameters of I field and J field as shown in Fig. 4.2. It showed that for both sparse and dense networks,
J = 1 gives erratic result with higher variation in a more dense network. There is low

network coverage at J

=

1.

Recall fron1 cluster-head selections process in Section 3.4 that a Level-(k-1) CH selects only nodes in front of itself as members of its Level-k cluster-heads. Observing the

graphical user interface of the simulator showed that when cluster-heads are selecting just one node (i.e. J
=

1) , there is high probability that the coverage area of a newly

selected CH is already covered by other higher level cluster-heads. Thus , the CH will not receive any REPLY message in response to its REQUEST message. This causes the algorithm to terminate prematurely and it results in low network coverage. Since, there is higher node redundancy at higher network density, the effect of this increases with increase in the sensor network density. However, lower values of I performs better in a dense network in Fig. 4.2(a). Larger value of I performs better in a sparse network (Fig. 4.2(d) and 4.2(f)). Notice that Fig. 4.2( d) and 4.2(f) are the same despite their different values of I. The reason is that there are only 4 nodes within the transmission range of the sink (see Table 4.1) in network B. Based on the maximum residual energy model algorithm in Section 3.4.1 , all neighboring nodes of the sink are selected as Level-l cluster-heads if
I 2:: P , where P is the number of nodes in the NEIGHBOR_ TABLE of the sink. Thus, I
=

4

is the actual value used by the protocol for both Fig. 4.2( d) and 4.2(f) despite different values of I are set. Fig. 4.3 shows the number of aggregate frames sent from active nodes received by the sink. The result further depicts that the multi-hop LEACH protocol is unreliable. In some rounds, no frame can arrive at sink. The performance improvement is 17% in terms of the total number of frames received at the sink by the MLC protocol in network A upon comparing to the multi-hop LEACH protocol (see Fig. 4.3(a)). A 300% performance
49

PROPERTY OF RYERSON UNIVERSITY LIBJWIY

increase is achieved in network B (see Fig. 4.3(b)) for the MLC design. The. difference in the area under the graphs indicates that the MLC protocol guarantees better coverage and more reliability in delivering sensed data to the sink.

4.2

MLC-B Simulations and Results

Extensive simulations were performed with different network parameters of the MLCB protocol from which we determined the optimal values of the fields of the NOTIFY messages to be: I
=

8 and J

=

4 for Network A (see Fig. A.4(a)) , and I

=

2 and J

=

4 for network B (see Fig. A.3(b)). Interestingly, we discovered that an optimal value of (3 = 2 is independent of density of the network. Details of the perforn1ance of MLC-B protocol with different parameters can be found in Appendix A. Simulation results shown in Fig. 4.4 gives a summary of the performance of the various protocols discussed in this report. It can be seen from Fig. 4.4(a) that the MLC-B lasted much more longer than MLC protocol while utilizing 20% (compare the knee points on the graph) more nodes than the MLC protocol. MLC-B recorded 58% performance improvement on the life time of the network A when compared with MLC. MLC-B also recorded 75% performance increase (see Fig. 4.4(c)) on the number of frames that is received at the sink when compared with the MLC protocol in network A. However, there is a performance decrease in the network B case. This shows that the performance of the load balancing algorithm is dependent on the density of the network. The MLC-B protocol ensures that the cluster sizes of higher Level cluster-heads are smaller than that of lower Level cluster-heads. Elirninating unnecessary proliferation of clusters in the network while increasing the number of inter-cluster-routers reduced the amount of flows that the Level-l and other lower level cluster-heads has to forward. These resulted in improved life-time of the MLC-B WSN. Note that it is necessary to have a progressive decrease in the number of flows generated and energy consumed across the network rather than simply concentrating on the nodes just in the NEIGHBOR_ TABLE
50

Netv.:ork A: Ml.C with T"' 100 Transm i ssion s/F~o und 100%
90'-Yo

Network 8: MLC with T = 100 Transmissions/Round 100% 90%
;
i"

r ~· ···

..................................

I= 2, J

B0°/o
70'Yo
U1 ·OJ>

80%) f.
70%
60~1;1 ~-

······ .......
.......

=1j !
j

I= 2, J = ~

I=:~.
::

J =

~!
1

T.l

60%
so c!,~

i

z

0

······

~: ~: ~
=

I = 2, J

<

t

~

50% i

40%
30%

40%
30%

t·

i
f

20'%
10%
1k

20°/;J

10% i
2k 3k 4k
5k 6k 7k 8k

i

.. 0% L 00

i

500. 0

(a) I= 2
Network A: MLC with T = 100 Tr<msmissionsiRound

(b) I= 2

1.0k

1 5k

2.0k

. .. .
I= 6, J =

2.5k

Network 8: MLC with T

=100 Transmissions/Hou nd
I= 6:..j·-:;;-·i1 i

100% [ ~ ·

9Q 0,ti
80% 70%
U1 (j)

! ·· ~\
80% f
...

······ .......

j

l

.......

I= 6. J = I= 6, J =

j l

I= 6. J = 4i

z

D 0

60%
50f!{J

60%

i
I I

' ~i
i

······

I= 6, J . . . . . . . . .J

=d !

<

~

40%
30 '!';,

40°'o [
' ! !

I

20% 10% 0% 0
······ I"' 6. J ·" 6

20%

~-

. .
500 .0 1.0k

1

0%

L_.. _.........illl..lllllll..~ ....~ .. ,.t:llll'l..."'. l-4 ....111' .. . . ... .... ...1-4 .. ... ....· ... 1 ..l-t ......, ..IIIP ....111 ....111 ....tl ...1....lll ....iii ....H ....tl ....!t .. . ......

lk

2k

(c) I= 6
N~1 twork

3k

4k

5k

Gk

0.0

(d) I= 6
B: MLC with T 100%
! ...

' .5k

2.0k

2.5k

3 .0k

3.5k

Network A: MLC with T = 100 Transmissions/Hound
100%
9 0~«,

=100 Transmissions/Round

80%
70~~~
(j)

80% ~ ......

l i
l

·

·~·

·

·...... . ...... .
;

·· ~ ;:;·io: J:;;1l:
I= 10. J = ~

:

i
60% f

!·····
i ·······

:: ~~: ~: ~i

!

(j)

"0 0

60 %

z

! ··+··

-~
<

50'%
40% 30% 20% 40%

.... I.~. ~~.J~~ !

1= 10. J =5 i

....... ....... ······
0

I
i

1=10,J=3 I= 10. J '"'4 I= 10, .J = 5 I= 10, J = 6
1k

20% 1-

10%
0%

2k Number of Transmissions

Oo/o L 0 .0

500.0

1 Ok

1.5k

2 Ok

Number of Transmissions

(e)I=10

(f) I = 10

Figure 4.2: MLC WSNs with different settings of I and J, T

100 1n simulations.

51

Network A: T 100% 90% 80% 70%
U)

= 100 Transmissions/Round with I =2, J =3
······· , LEACH MLC ;j··

0)

"0

60% 50% 40% 30% 20% 10% 0%

~

z

0

.. .... ,
·· ..
::

<(

t5

>

0)

.. ~
~
#

: .:=: ~·
:

~~ ::

~

~~
'

i i
..............l.............................L ..........................i ................ J ........ L .....................

;il :~:
IIIII

,~

;...

~

l............................l

.............. t .... L

~

i : : i
I

~~ ~ : :: .
===;:
160k 180k

L !:!.!I!~

0

20k

40k

60k

80k

1OOk

120k

140k

Received Frames at Sink

(a)
Network B: T 100%

= 100 Transmissions/Round with I = 10, J =4
······· , LEACH MLC

80%

60% f··

40%

;

r

20%

10.0k Received Frames at Sink

15.0k

20 .0k

(b)

Figure 4.3: Frames received at the sink versus amount of active nodes in %.

52

of the sink. The reason is that if any Level cluster-heads are over loaded, then that Level becomes the new bottleneck Level. MLC-B algorithn1 follows the idealogy in an energy-saving technique, Span [6]. Span is proposed for IEEE 802.11 as a layer 2.5 algorithm which conventional routing protocols such as Dynan1ic Source Routing (DSR) or AODV can run on seamlessly to conserve the energy consumption of individual IEEE 802.11 nodes and that of the wireless adhoc network. Span is based on the observation that an area of a shared-channel wireless network with a higher node density than what is required to cover the area can operate at an optimum node density to coverage area ratio while achieving node energy conservation and in1proved network lifetirne. In Span, nodes use a distributed, randomized algorithm to make a local decision on whether to sleep, or join a forwarding backbone. Network lifetime in Span is shown to increase as the ratio of idle-to-sleep energy consumption increases and as the density of the network increasing. In agreement with Span, the MLC-B resulted in a WSN lifetime performance improvement of 58% in Network A which has a high network density of 0.002 nodesjm 2 but it resulted in a WSN lifetime performance decrease in Network B which has low ·network density of 0.0002 nodesjm 2 . Simulation results in Fig. 4.5 shows that as the point where the energy-saving algorithm of MLC-B is introduced increases from 50% Active Nodes (see Fig. 4.5(b)) to 70% Active Nodes (Fig. 4.5(d)) , the WSN lifetime performance also increases. This also agrees with the observation in Span.

53

Network A: T
100%
90~/o

=100 Transm iss·ons/Round

Network B: T

='100 Transrnissionslf~ound
; -:,_.,,__ __·._ ·· : _··_:_ ·__

~_, -._~·-_:· ._~-._:·._ ·-~_ :_-._E·.:_ ML' <_-~_:·-~ _,
__ _ _ _ A _ ._ _ . __.__ _ .__

].

i

80% 70%
'f)

: ······· MLC-

j
!

(!)

"0 0

z t

(Jj

>

<{

40%
30(!~

20~~~

10%

3k Number of Transm issions

4k

5k

Number of Transmissions

(a)

(b)
Network B: T = 100 Transmissions/Round
100%

Ne t\'.'OI·k A: T = 100 Tmnsmiss ionsiRound 100%

r···
i

90%
80% 70°/b
Ul

\,VIr"
80%

r

······· ··· ;r ···· ...................

~

u

<ll

60°A;
50%
40%
30%
20~11)

z ~
<1:

0

0

,.l. . .;-.. .{.~~ =·

r .
I
50k 100k

;j

~

:::

60%

I

I

··..·...·~\
~

~~

i ,
. . ------------ _________
1. Ok
L_ ________ _

1Qi%
0% 0

~
..... . . . .. L .. · ..· · . . . .

40%

l
1: , :: .
I
i

2o~'O

... l .......L ........... .......... J···· J ....... J

..J

r·.:~~~:..J_ 0~~ l-1-'F,-·~----~-------!--0.0 . 2.0k 4.0k 6 Ok

I

......... ... · i . .. -~80k 10.0k 12 .0k 14.0k 16.0k 18.0k 20 .0k

200k

250k

300k

350k

Received Frames at Sink

Received Frames at Sink

(c)

(d)

Figure 4.4: Comparison of MLC-B , NILC and multi-path LEACH protocols for percentage active nodes against number of transmissions (a function of how long the network lasted) and number of frames received at the sink. MLC-B Parameters: I
=

8, J

= 4 and j3 = 2 for Network A, and

I = 2, J

= 4 and j3 = 2 for network B. MLC
=

Parameters: I = 2 and J = 3 for Network A, and I = 10 and J
=

4 for network B. T

100 Transmissions/ Round in all simulations.

54

Network A: T '" 100 Transmissionsi Round witfll .-:: 2, J"' 3 100% 90% 80%
?Q~,~f

Network A: T '"" ·100 Transmissions/Round 100% 90%

80%,
70%
"U

v

"'
(])

60%
50~1'0

"'
0

(])

60% 50% 40% 30%

z

0

z
~ ·u
<(

<f.

t5

~

40%
:~0~/o

~1
,_

20% 10%
0~'0

20%
10%

o~~~ , ....

l
1k

1k

2k

3k

4k

Sk

6k

0

2k

3k

4k

5k

6k

Number of Transmissions

Number of Transmissions

(a) MLC
Network A: T -"" 100 Transmissions/Rou nd 100%

(b) MLC-B (50% Active Nodes)
Network A: T = 100 Transmissions/Round

BO%
80% 70%
T.l 0

"'
(J)

60%
50~{)

z

~ · u
<(

40 r;'~

30rYo ?O'Yo
10%

~j
:
()

0%
1k
2k 3k

~j
4k 5k Numbm of Transmissions

; ; 1
Gk

20% f· 10%

0%

~--························ ··

0

....................·..... 1k 2k

3k

4k

5k

Number of Transmissions

(c) MLC-B (60% Active Nodes)

(d ) MLC-B (70% Active Nodes)

Figure 4.5: Comparison of t he MLC protocol and the MLC-B algorit hm int roduced at different percentage Active Nodes in an MLC WSN. I = 2, J = 3, and T = 100 in simulations.

55

Chapter 5
Conclusions
In this thesis, a novel design of multi-level clustering (MLC) architecture and protocol have been proposed for interconnecting sensor nodes in a wireless sensor network. The design is especially useful in WSN when some sensors do not reach the sink directly. With the energy constraints in WSNs, traditional wireless multi-hop routing protocols are not suitable. But the proposed design can create a highly interconnected tree graph in the network, and the sensed data can get to the sink from far away. Simulation results indicate that the uses of other LEACH alike designs are not appropriate because majority of the frames generated by clusters can not reach the sink. The proposed design offers a sensor network a wide-area coverage, and generated frames can reach the sink.

56

Appendix A MLC-B Parameters
Network A: MLC-8 with T

=100 Transmissions/Round
90 f~'0

Network B: MI..C-B with T = 100 Transmissions/Round

4f) 0/Q , ............... ,................. , ................ ,..................,........... j·-·.c·.,_c·c.7CC'C.'CC.7CCCJCCCC.CCCCC.CC.C'"'"'CCC'"' "'··.cc·c_,_·_c·cccc.cc.c·c_,_·_cr_-cccc.cc·.c·.cc;··: I= 2, J = 1, p = 4.oo,'Q I· "' 2, J ·"' 2, p"'

· ·······- ····· · ---~~~~--r··
f · · · · ·: "

· · · ······················.r:::····

···»··

80%

1=2 , Jo=3 , f:\=
-~ JOO!(, i I"' 2, J" 4. (3

=
(l)

70% !-

·.·····~......

l = 2. J = 1 .

0=

1

·······«·11;'·"·

~ 25S~~~
~
(l)

"'

"'60% '

., :1_::::
~

~

.. .·..

···»··

I= 2, J

=2, 13 =1 I= 2, J = 3, 13 =1

6 z

50% ~

2()"' .. /o

-~ tl

'
'

40%

~
~

<(

15% :

<(

30%1

!

10''/o l

zoo;., '
10%

\;=~..\.;.\·..·..·_·_.. . .,
1.5k 2 Ok 2.5k

f·
500.0 1.0k

0°1~)

'-------'---'---'-- ~-~--~--~~~~~--~ 4k 8k 10k 12k 0 2k 6k 14k 16k 18k 20k
Number of Transmissions

O'l'o '-;----~---_l_-._,..__---'-----...L......,.__ __
0.0
Number of Transm issions

(a) I = 2
--=

(b) I = 2

Network/\: MLC-8 with T

100 Tra nsmissions/Round

Neiwork B: MI..C-B with T = 100 Transmissions/Round

90% ,..... ---~-;·~ ·;·;·;···
80%

70% '(/) 30'}{,
<ll

60% L
50%

~ 25 1:1~

a'

<l\

z

6

l '

~

20%

<~ 15%
10%

~
2k
4k 6k

1 40% :)0% · ~-1

--~=-~
.. ·· ·
200.0

i · · ···· I "'4,

20% ~ i

J " 3. f:\ = 1

I = 4, J = 4,

f3 = 1

1O'"
8k
'IOk

0% ' ................!_=_~: J '!2k
14k

/Or! ...... .
0.0

l : · ......

I = 4, J

=5, 13 = 1
~,~· ~3 =1
600.0 800.0
1.0k

400.0

1.2k

1.4k

Number of Transmissions

~Jumber

(c) I = 4

(d) I

of Transmissions

=4

Figure A.l: The MLC-B protocol for different values of I and J with j3 1n each simulation.

1 and T

100

57

Network A: MLC -8 wittl T = 100 Transmissions/Round

Network B: MLC-B with T '~ 100 Trans missionsiRound

30%
~ 25%~

~ ~
"8 50~/0 . ~ z
< 30% ·. i
······ ! = 6 , J = 4, 13 = 1

:::
20''l'o 0%

-~ ; ~~ -

·....·. ::~:·...·....·..:~~~···\~~~

·.

. .·

.......·..

i
0

v

20%

< 15%
10%

-~ 4o~~~J t)

r.·-,: - - - -

.... ..

5%-,

i "- 6 . J

"- 5. f3"' 1

0%

:..=====~======~========' · · ···

· · ·· · · I = 6, J 2k

=6. fl =1
4k

-I ...... 10% ~.· ,
!·.' , · · · ·· . · . ·. · .

i ...... I "' 6, J

"' 3. f3 "' 1

I

=6, J = 4, l3 =1
!3 = ·1
i

., · .·................................... ............... ~
8k
10k
12k

6k

====== =====''======'' ........ .. ia 0.0 200.0 400.0 600.0 800.0
Number of Transmissions

I = 6, J = 0 , p = 1

I = 6, J::: 5,

~

IOk

1. 2k

Number of Tra nsmiss ions

(a) I = 6

(b) I = 6

Network A : MLC.·B with T = 100 Transmissions/Round

Network B: MLC-B with T"' ·100 Tran smission s/Round

90% ........... ;:·;·~ -:-·" ·-

(/) 30 '%,
())

~ 60%)

:::' ·....·.::~:·...·....·..:·\~· ~ · ·'~ ~:.
f·
50%) ~

. .··

.... ...

·..

z

6

25%

z

-g
(,)

~ 20%) t5
.;:: 15%

-~

4oo;., · r-..-- ~ .... . ......+-""fto"...-.~~~~;;;;.;;;~--.i....
i i

.;:: 30%

~i.:.·.·.· ·.··.
f .......

20%

-I .... ..

I

I = 8, J

=8, J = 3, 13 = 1 =4, 13 = 1
400.0 600.0 800.0
1.0k 1.2k

5%
0~; t.=~=~~=~=~~~~~==c=~~c=~=-1 · -· ···· ·· ·········

10% :

I = 8 , J = f) , l3 = 1

'· · · · · · · · · · · · ··'
10k

I ...... I= 8, J = 6 , 13 = 1

! .......... J
14k

0 ~'0

0

2k

4k

6k

8k

12k

0.0

200.0

Number of Transmiss ions

Numbe r of Transmissions

(c) I = 8

(d) I

=8

Network A: MI..C-B with T = 100 Transm issions/Round

Network B: MLC -8 with T"' 100 Transmiss ions/Round
90% ~-.. . o:-,:-: , ,-:c ... ...----------:: . :-. - ..... -=-----~------,--------,

40% :

30'%
~ 25~1~J
'0
Vl

·. ..· ·. ·....·..':··;.:"...·....·.

::\··'·

6 0 ~{:,

i

0

~
~

0

20%
15% 10%
i

"8 z

50%

Ji
=Hl , ,I =5, (3 = 1 =1
2k

~ 40°/o
30%

. i . ... . . ri
j · · .....
! j · · ... ·" !

!

. i .. ·· ·· I = 10, J = 3, p

=1

20% '
10%)

0%, : 0

""========~====::::L........................................

······ i = 10, J = 6, fl
1k

. . , ............. 1
8k
9k

o%

L;. : ~.~~ 1, ':' ~9: J ':'(3:~':' 1
2000
400.0

I -= 10, J -= 4, 13 = 1 I = 10, J = f) t~ =1
I

4k

:ik

6k

7k

0 .0

600.0

800.0

·

1 Ok

1.2k

Number of Transmissions

Number of Transm issions

(e) I = 10

(f)

I

= 10

Figure A.2: The MLC-B protocol for different values of I and J with (3 In each simulation.

1 and T

100

58

Netvmrk A: Ml..C-8 with T

=100 Transmissions/Round

Network B: MLC .. B with T

=100 Transmissions/Round

70% i
< f)

40%

(I)

60% [·
.

i
'-'

0 0

a>

<l>

-g ~30% .fz
30%

<!: 20%

-~ 40% ~ u < 30~~~ ~20% ~-

' 0"/Q [

{)~/0

; ___ ______ J. ·.

__________ j.,. __________ ;_ _______ _l ______ _

0

2k

4k

6k

10k

12k

14k

16k

0 .0

200.0 400.0 600.0 800.0

1.0k

1.2k

1.4k

1.6k

1 8k

2.0k

Number of Transmiss ions

(a) I = 2

Number of Transmissions

(b) I = 2

Network A: 1\'ll..C-B with T"' 100 Transmissions/Rou nd

:: ; :::::::~:·.~·.,.·,;:-::~:::::::::-.
......
"TO% : (/) 60%

Network B: MLC.·B vv ith T

=100 Transmiss i ons/l~ound

···· ,
~ ~

<n
"0

40°k
.

a>

~ 30"/o

0

-g z

<l>

50% ~ 40%

.

b

.

f

-~
<(

:1.

20%

t
i

H'= - I = 4, J = 1' 13 = 2 30% :I ······ I = 4 , J = 2, 13 = 2
I ...... I =4, J =4, 13 =2
200.0 400.0
i · ····· I "' 4, J = 3. f3 = 2

.

\
600.0 800.0

20% ;

10°k f
; i O~'o L

!

1
2k 4k
6k 8k 10k 12k 14k 16k Number of Transmissions

~: "l;;_~_ : _;_ ;~~-~:;_;~------~-.. !
0.0

0

1 Ok

1.2k

Numbe r of Transmissions

(c) I = 4

(d) I = 4

Network A: MLC-B with T = 100 Transmissions/Round 60% ,.............................~...........................................................~..............................,............................., ....................._ ..,

·
(f)

:: ~. ::::::::,,~:·.~:·:::::::::::·:::
70% :-

Network B: MLC-B with T

=100 Transmissions/Round
.................................. ,
.. ..

40%,

"'60% ~
ll) :

"0 0

a>

~ 30%>

'8 z

50% ~-

.

f.5
<!: 20%

~ .....
; = 6, J = 4 ,

40° ··1./.,o, 30 0
20%
1

.·.'._ ::,:

.: ····

I= 6, J = 1, l3 = 2 I= 6 , .J = 2, 13 = 2

i ! · ····· I

10'Yro

I"' 6. J "- 5. I= 6. J "6. 2 O% L::::===::=::==~===~--·----"-.:::~__j 2k 4k 0

!3 = 2 f3"' 2

~I ·..... I =6, J =4, (l = 2
· I

=6, J = 3. (3 = 2 =6, J =5, 13 =2

=

~~ [1 :::.::
0.0

··

I = 6, J =

6, 1~~- ~

__
600.0 800.0

200.0

400.0
~Jumbe r

I.Ok

1.2k

Number ot Transmissions

(e) I = 6

(f) I =

of Transmissions

6

Figure A.3: The MLC-B protocol for different values of I and J with {3 in each simulation.

2 and T

100

59

Network A: MLC-8 with T::: 100 Transmissions/Round

Network 8: MLC-B with T"' ·100 Transmiss ions/Round

::: f

--::~:::~::.~:,.,.,;:-:::::~: :~·:\
=8. J = 1. I'> =2 ~ =2 I =8, J = 3, i3 = 2
I I :: 8, J '"' 2.

·····

70% '(/) 40% ~'J 6o~~~
<lJ

r·

v
0

(l)

~
<

-g z
30% 20%

50~tfl
40% L! 30 "/., ·
! · · · ···

-~

Jl

' ·· ···· 20'Yo ~! ·· .... . 1= 8, J = 4,
10% 10%,
o~~~

p= 2

' .. ..... I-=8,J:::5,(3=2

+·· I = 8, J = 6, 13 = 2 ....... .......
j ··
h .. . .

0.0 Number of Trans missions

200.0

400.0
~Ju rn be r

600.0

800.0

1.0k

1.2k

(a) I
60% ' 50%

=8

(b) I = 8

of Transm issions

Netvmrk A: fvli..C-B with T = 100 Transmissio n s/l~o un d
........!

Network 8 : MLC-8 with T = 100 Transmi ss ions/Round

:: ~ ::::::,,:·....,,:-:::.:::::·::-::......
..

70 1 ~'0

:

·f)

40% '

"' 60°/0 ;
(l)

i ::: ~~ ... ....... .......
10~'0
... .... . I= 10, J = 5, fl
······ I=

U> "0 0

"E 50°/o z
TI

j

~ 40% ':·
!

I = 10. J = 1, ~ = 2
1=10. J =2.f3=2

< 30% L[ · ····· ! ! ...... .

i

I

=10, J =3, il =2 =6, ll =2
400.0

=2
8k

=2 0% '----'=============='---'------'~-~.__ 4k 0 1k 2k 3k 5k 6k 7k Number of T ra nsmiss ions

20% L[ · ···· 1=10,J=4, f3=2 :i I = 10, J =5, {3 = 2 ·10%
o~~f,

:_ ___~.

'I :::. .::

I = 10. J

0.0

200.0

600.0

800.0

1.0k

1.2k

Number of Transmissions

(c) I = 10

(d) I

= 10

Figure A.4: The MLC-B protocol for different values of I and J with j3 In each simulation.

2 and T

100

60

Network A: !\:ll..C-8 with T

=100 Transmissions/Round
90'Yo
80% ;_

Network B: MLC --8 with T = 100 Transmissions/Round
~-~-----------,----------,---=::===========::-c

50 %
·.{) (f)

.......::::::.:::::~::::·1·~~: .
---... - yr
··~·-~· ......
~.

i "'2. J"' 1.

13"'

z

g
(JJ

a>

40(~1[,

-g
z

a>

60%

· f)()% -

i

=2, J = 2, p =. ; =2, J"' 3 , 13 = ; =2, J =4 , 13 =·
l

: "' 2_ J -= 5. 13 =
I "' 2_ J :-: 6 ~ -~ '

·~ 30%j
<(

-~

u

4o%

L

<(

30% f 20% '

~ !~--------'

2k

4k

6k

10k

12k

14k

16k

0% '---------------'------------L-----------L-------------'----------0 .0 200.0 400 .0 600.0 800.0 1.0k

1.2k

1Ak

1.6k

1.8k

2.0k

Number of Transmissions

(a) I = 2

Number of Transm issions

(b) I = 2

Network A: Ml..C-B with T"' 100 Transmissions/Round

Network B: MLC--8 with T

::.
70%
·f)

=100 Transmissions/Round

;
f

::::::::,,~·.,..·,:-::·::~~:::·::-.
···· ,

~ .'~()'!fa :
Q)
f

a>

'

"' .g
0

60%

r
!

'
:

50% ,_

\

~ 30 ~1o
<(

z

!·

20~;(1 t
10%

~

'
::::

~~~~~~~~--~~.___ \

~

_r_r:, .. ..-.· .. . ·.·

:

~
1k 2k 3k 4k 5k 6k 9k 10k

2o% r

1 .. ....

=4, J =3. 13 =3 1 =4. J =4, 13 =3
I

= ::~ = ~: ~ =~

\
·aoo.o

0~~ L__ __ _

i

1

~: l~~-- :_;_~- ~--=--;~-~;--~---------_j
L
Q_ Q

0

200.0

400.0

600_ 0

1.0k

1.2k

Number of Transmissions

Number of Transmissions

(c) I = 4
Network A: MLC-8 with T
==

(d) I

=

4

100 Tran smissions/Round

so ·~~ i
;

::: ~
:fl 60% ~

Network 8: MLC-B with T = 100 Transmissions/ Round

::::::~:-~ :::::·:::::~~<

.

.. .......

c

(/) 40% f

v

(JJ

~ JQO,~ ~ :-11--'--t·~I--~-1--IIUe-----MI

0

'

'8 z

50%

u
<(

>

I

-~ 40%,

20%

l'
f . ······
i :

!

<t: 30 % f

10'%

I =- 6. J =- 5. 13

=3
6k 8k 10k 12k

= 6 , J = 3, 13 = 3 20% [·J ·· ··· I =6, J =4, 13 =3 ; I 10% L 1 ·· ..... I = 6, J ::: 5, 13 "' 3
I 0%

1 ····.. ! I ·· ····

rr =-

'

~·
l=(i , J=1,13=a I= 6, J = 2.

!3 = 3

0% i

l ···!:.:_ I__~-~ ·- !_~_f:l_:_~~-~ 2k 4k Number of Transmissions

i__l __::~::_ I ~--~-:- -~ - ~- ~-: F~--:~- ------~-200.0 400.0 600.0 800.0
IOk
1.2k Number of Transmissions

0

0.0

(e)

I

=6

(f)

I

=6

Figure A.5: The MLC-B protocol for different values of I and J with f3 in each simulation.

3 and T

100

61

Netvvork A: rvll.C -B with T = 100 Transmissions/Round

Network B: MLC..S ·,vith T

=100 Transmissions/Round

50%
if>

(/) 60% 40% f
! !

z

g
Q.l

a>

'

<:>

-g z
!j_

50% "

·~ 3oo~t)
q:

I

.~ 40% "~~-~~-:"I'"." ==";;"8-, J t""." :=<1'"" , l:i'p~o:"-::3:-"""";o;;;i--30 % , 20%

'

20%

f
I

l .·.·.·.. ·.·.· 'i ......
: i

I = 8, J 2, 13 I = 8, J "'3 . i3 = 3 I= 8, J = 4. p = 3

=

=:~

10%) r-

10% ' I .· ..... I = 8, J = 5, [l

=3

2k

4k Number of Transmissions

10k

12k

o% 0.0

I ~:~~,;,.:,.,~,~. ~· J "' ~:
200.0

" 400.0

13

~
600.0 800.0

l .Ok

1.2k

(a) I = 8

Number of Transmissions

(b) I
Network B: MLC-B with T 90% ....

=8

Network A: ML.C-8 with T"' 100 Transmissions/Round

=100 Transmissions/Round

o; 5() . d)

~ r
i
<l\

80% 70% "' 60%
i

if>

40%;
i

o I ~ 3QO,{, f·

"0

a>

r

-g z
q:

50% >-

. t> 5

I

I

.~ 40%
30

lf·=-

I= 10. J

q: 2o% 1

% , ~ · · ·· ·· I

=1. p = 3 =10, J = 2, [l = 3 =

' ' · · ·· · · I = 10, J = 3, p · =3 20% ' [ ·· · · · I = 10, J = 4 , [l 3
10%

.! .......

1=.:10. J·:.o5.[l=3

2k

4k

8k

10k

12k

I ····:: 1_= 10. J = 6. p = 3 0% 'c..:l============--~____j--~--__, 0.0 200.0 400.0 600.0 800.0 l.Ok 1.2k

Number of Transmissions

(c)

I

= 10

Number of Transmissions

(d) I

= 10

Figure A.6: The MLC-B protocol for different values of I and J with (3 1n each simulation.

3 and T

100

62

Netvvork A: MLC -B with T = 100 Transmissions/Round
70~'o ! ·

Network B: MLC.-8 with T = 100 Transmissions/Round

:~:: ~,_-.-.-. . ,--.-.. -::-·: - . --·-.... -.~ ...-. . -..--,-.,-=." '~- -= .~=:= . =-:::==:= ==~=:'·~=-:= ::2= 1:=·:===-l -C" '[
70% : ···

·

'fl

z

g

Q)

40%

~50% :
~
30%

"'60% :-

..........
···

::

....... ··

...;~·-·~:· -·
·

! "' 2, J "' 3,

13"'

i= 2, J=4 , (3=

----...

__

-~ 40% -

::_ t~.-:·.-\.: _: _ _

:;~:~_;;:_~;- I

.,

i i

;'~

2o% r

~::-----~

10% '
O~'o

0% '-0 2k 4k 10k Number of Transmissions 12k 14k 16k 0 .0

-------·-'-----·------L--------···--------"-··---------'--

200.0 400.0 600.0 800.0

1.0k

1.2k

1.4k

1.6k

1 8k

2.0k

Number of Transmissions

(a) I = 2

(b)

I =

2

Network A: MLC -B with T"' 100 Transmissions/Round 70%

Network B: MLC--8 with T = 100 Transmissions/f'{ound

90'% -- ---- ······~:;
80%

··· ~;~;iii(

i

···········~:...

··

'TO% [50'Yo
f)

·· ·· ,.,.:·............... ::-.....

,
~ ~

"' 60% :-

~ 40'~10 f

<ll

-g
z

<ll

50% ~

'

'

~ 3o~~~r~
<(

<ll

;
i

i

I ::: [:[". :. . . ::::~ :~: ~::
~::~ ~I :::::: :::: ~: :: ~::
2k 4k Number of Transmissions 10k 12k 0.0 200.0 400.0

~~~~~~~~--~._._~\
I

~

zoo/c,
10%

r

: i .. ..... I = 4, J = 3. 13 = 4

~

o% : l__:__:_-!-__:_:__..!_~--~:...:!__~~:E~ ------_1
600.0

I
800.0 1.2k

Number of Transmissions

(c) I = 4

(d) I = 4

Network A: MLC-B with T = 100 Trtmsrnissions/Round 70%
~------------

Network B: MLC-B with T = 100 Transmissions/Round

if)

~eo%
40%

r

z

-g
(J,)

<ll

'8 50% '~z

~ 30%
<(

20% 10%

I :::: [['.:..... :: ::~ :~: ~ : = =
i i ....... I

4

6, J

3.

13 ::: 4

20%

f· I .. ....
;i 1 ···· . · . ····

I = 6, J = 4, 13 = 4 I I

10°/o
O~b

'~ l ..
-----------

=6, J = 5, 1-' n. = 4 =(i , J = 6, 13 =4
400.0

-----··········.. ··-------------········ ·· ··---------~---600.0 800.0 10k 1.2k Number of Transmissions

2k

4k

6k

8k

10k

12k

0.0

200.0

Number ot Transmissions

(e) I = 6

(f)

I

=6

Figure A.7: The MLC-B protocol for different values of I and J with f3 In each simulation.

4 and T

100

63

Network A: MLC-8 with T "' 100 Transrmssions/Round

Network B: MLC-B with T ·= "100 Trans missions/Round

70%

,-----~------~------~------------~------,

90%

80% '
70'i0
~

z

6
(J)

"'
Q)

Ul

"'60% r
;

40'Yo

z

'8 SO~lrl ~
40%

·~ 30 170
<1:

-~
.. .... .

fi =~!

'0 30% i~ ! <1:
20% 10'%

l ....... I =8, J ~ 2. ~ = 4
- . . ..... 1= s. J

1=8 .·J=1 , [3=4

20%

······ 10% ······ 0% L.'=======-c:i=:===1
0 2k 4k 6k

......

=3. r-; =4
p "'4

I "' 8, J "' 4,
I= 8, J"'

i i .......

5.13 = 4
j 600.0 BOO 0
1 .Ok

-

it
Bk
10k 12k

O%

! ···· · · I':'~ ·:J':'E\ ·~':' :4
200.0 400.0

0.0

1.2k

Number of Transmissions

(a) I
70%
c

=8

Number of Transmissions

(b) I
Transmissions/ l~ouncJ

=8

Network A: MI..C-B with T = 100

Network B: MLC-B with T = 100 Transmissions/Round

:: ' ~:::::::::~;:·. ..,.:~:::::::>::~o....
70%
I

50% '
'f)

g z

a>

40% '

~ 30'~'o ~

:i.
20%
1()% Q)

O% ~

~:J:
--e- I -

-

·· ·· · ·1=10

,Jl=4
,.. . 13

· ..... . i - 10,
··· ····
I=

-

4
"10%

1= 1o. J = 3, r-1 = 4
I

···· ·· i -

10 , - 4 , p- 4 10, J = 5, Jl::: 4

· ···· · ' - 10 J- 6

··

, ·

13- 4
3k
4k

Li ....... I =10, J 0% Lt · · · :~ I ' = 10, J
0 .0 200.0

=10, J = 4, p "' 4 =~5 . Jl =4
= 6 , Jl = 4

0

1k

2k

5k

6k

7k

8k

400.0

()00.0

800.0

1.0k

1.2k

Number of Transmissions

(c)

I

=

Number of Transmissions

10

(d) I = 10

Figure A.8: The MLC-B protocol for different values of I and J with f3 In each simulation.

4 and T

100

64

NerNork A: MLC -8 with T = 100 Transmissions/Round

Network B: MLC-B with T

=100 Transmissions/Round
:::-1

90% ,,--.- .-·· ..,. ·· -· ··· _. -··. .. -·...,. . -··-. ···
80'% i._, ..
···

-~ -

·

~--, -c-=- .- .-= ·- .·~= = -.-.-= ----I.l.=== i ,.= __ 2 '"'_ = J=., = _1 =.r.: l3=.,= .
-

! = 2,

j

= 2. j3 = ,

70%
50 %
'f)

f

z

g
Ql

Ql

40':1~:

·!§
<{

30 %

i
'
2k
4k

:g "8

60% t 50% i 40% "

'· ·«··· ··II:: ·.~~· ·· ~··~·
...... ~.

···

. . . . . . ··

i "' 2, J 3, j3 I = 2, J = 4 , ~~ = ,

=

=

I"' 2. J = 5. l3 '"
i "'2. J "' G -~~ -~

20%
1Q 0,b ~

< 30~/0 ~-:
20% ,_

·yr-____..,
~:..,...

-----------------·- ·
6k

0% '---------'-------·- ..c ................J.. ..._________· _______________,__
10k

----------'----------------'-----------

12k

'14k

16k

0 .0

200.0 400.0 600.0 800.0

1.0k

1.2k

1.4k

1.6k

1.8k

2.0k

Number of Tran smissions

(a) I
70%

=2

Number of Transmissions

(b) I = 2

Network A: MLC -8 with T "' 100 Transmissions/Round

Network B: MLC--B with T

=100 Transmissions/Rou nd

50%
'f) (f)

60% :'

-g
z
(l)

Ql

40 %

z

'0 0

Ql

50% c

'

'

£; ,_, 30 %
<{

10%

2k

4k

Gk

8k

10k

12k

600.0

800.0

'1.0k

1.2k

Number of Transmissions

Number of Tra nsmissions

(c) I = 4

(d)

I

=4

Network A: MLC-B with T = 100 Tran smissions/Round 70% ,.................,.................., .................,..................,................., .................,................-r-·-------------,-----------------.-------------,

Network B: MLC-B with T

=100 Transmissions/Round

:::: f... ::~:::<~:,.~:::::::::~::: ::~o....
'10% "'60%
Ql

(f)

r r
.

z

6

Ql

40'Yo

:8 30%
<{

(l)

'8 z -~ u

50% . ~ 40%

.......
· ··· · · I

<{

= 6, J = 4 ,

~

=S
--=5

~()~:o ' "

3001. '! . ...... 1=6,J=2, [3=5

L! .i
t.l_:

~:-:1': =~6 ;., "': J-: = :-:1 :,"":; f3:-: = :-e i!O ) ....,........,~--I= 6, J "'3. I = 6, J = 4,

10%

i "' 6, J '"- 5. ~ "' 5 · · ···· i"'

10%
QO/o

O% L============'-~--it-·----'-l--__j 10k 9k '7k 8k 'lk 2k 3k 4k 5k 6k 0

=5 =5 -1 ·· ···· I = 6, J =5, p =5 ' ! ·· · · · · I =6 , J =6, ~'I = :1 : ·········---------------········
,I;_', ·.· . :· . ·. 13 13

.._.

...... .

0.0

200.0

400.0
~Jumber

600.0

800.0

l.Ok

1.2k

Number ot Transmissions

(e) I = 6

(f)

or Transmissions I = 6

Figure A.9: The MLC-B protocol for different values of I and J with (3 1n each simulation.

5 and T

100

65

Network A: MLC-B with T = 100 Transmissions/Round

7 o~~~

'

Network B: MLC .. B with T = 100 Transmissions/Rou nd

·········-------·-· r

···--- ---- -------·· ··· ..

if>

Vl t30~~

.

6
z

<ll

40% ~

'

~ 50~10 ~
~
40%

<ll

·.~ 30% '

(J)

~'i-'-~ ~=~ 8,J ~ = "':' 1 .. ,~ P~ =..., o..-=..-;........-~

<

.......
....... i 10% '

~
=8, J =
J = 5, 13 ,., 5
-.-~·::·:··:· ·:··:··: ··:· · r:::··'

JO% , I = 8, J = 2, !3 = :; ······ I = 8 , J = 3. 13 = 5 20% ' I · · ..... I 8, J "'4, 13 5

!······
! . ......

=

=

i = 8,

10% ,

I= 8 , J = 5,

i3 = 5
600.0
800.0

· ····· i
1k

=8, J =6 , 13 = 5
?k

3k

4k.

5k

7k

8k

0% 0.0

.J::.~~:.~, !,_;~- ~· ~~~·~-'~ ;_
200.0 400.0 IOk
1.2k

Number of Tra nsmissions

(a) I

=8

Number of Transmissions

(b) I = 8

Network A: MLC-B witt1 T = 100 Transmiss ions/Round

Network B: MLC ·H with T

=100 Transm iss ions/Round

90%

r

·········t~t~.

80% f 70% i 50%
U1 (J) VJ ())

..······.. ···· ::·.~:·.......:-:: ..........:·::

.·.

......,
~

60% '

z

-g
(1)

40%

"2 z
~

50'Yo 40%

- ~ 30'Y~J
<(

, JO%

~~~~~~~~~~~._ ___ \\ :: ::=....1=10, J =1,P · = , · · ·· ·· I =10, J = 2, !3 = 5
l3 = 5

\

: i ······ I = 10. J ·" 3, i3 = 5 20% : : ·· ·· ·· I = 10, J = 4. l3 = 5
10%
10% ' i · · ... · · I = HJ, J = 5,

o% , i . .....
0.0 Number of Transmissions

~ -~ -~g_:!~E>: I~~- .. ·······
400 .0
600.0

.!

200.0

800.0

1.0k

1.2k

(c) I = 10

Number of Transmissions

(d) I

= 10

Figure A.lO: The MLC-B protocol for different values of I and J with {3 100 in each simulation.

5 and T

66

Bibliography
[1] I. F. Akyildiz , W. Su, Y. Sankarasubramaniam, and E. Cayirci. A survey on sensor networks. IEEE Communications Magazine, 2002.

[2] G. Anastasi , A. Falchi, A. Passarella, M. Conti , and E. Gregori. Performance measurements of motes sensor networks. In Proc. 7th A CM international symposium on
Modeling, analysis and simulation of wireless and mobile systems, pages 174- 181 ,

2004.

[3] S. Bandyopadhyay and E. J. Coyle. An energy-efficient hierarchical clustering algorithm for wireless sensor networks. In Proc. IEEE INFOCOM'03, 2003.

[4] M. Bhardwaj , T. Garnett, and A. P. Chandrakasan. Upper bounds on the lifetime of sensor networks. In Proc. IEEE Internetational Conference on Communications
(ICC 2001) , volume 3, pages 785- 790, 2001.

[5] C. Buratti, A. Giorgetti , and R. Verdone. Cross-layer design of an energy-efficient cluster formation algorithm with carrier-sensing multiple access for wireless sensor networks.
EURASIP Journal on Wireless Communications and Networking,

5:672U685, 2005. [6] B. Chen, K. Jarnieson, H. Balakrishnan, and R. Morris. Span: An energy-efficient co-ordiation algorithm for topology maintenance in ad hoc wireless networks. In
Proc. MOBICOM'Ol, pages 85- 96 , 2001.

[7] Crossbow Technology, Inc., http: / / www.xbow.com/ products/ Product_pdf_files/ Wireless_pdf/ MICA2DOT _Datasheet.pdf.
Mica2dot Datasheet, document part

number: 6020-0043-05 rev a edition, June 2008. 67

[8] I. Dernirkol, C. Ersoy, and F. Alagoz. MAC protocols for wireless sensor networks: A survey. IEEE Communications Magazine, pages 115- 121 , April 2006. [9] J. J. E. Garzas , C. B. Calzon, and A. G. Armada. An energy-efficient adaptive modulation suitable for wireless sensor networks with SER and throughput constraints.
EURASIP J. on Wireless Communications and N etworking, 2007.
[10] M. Haenggi.

On routing in random rayleigh fading networks.

IEEE Trans. on

Wireless Communications, 4( 4):1553- 1562, July 2005.
[11] S. M. Hedetniemi , S. T. Hedetniemi, and A. L. Liestman. A survey of gossiping and

broadcasting in communication networks. N etworks, 18( 4):319- 349, 1988.
[12] W. R. Heinzelman.

Application-Specific Protocol Architectures for Wireless N et-

works. Ph.d. , Massachusetts Institute of Technology, Cambridge, MA , June 2000.
[13] W. R. Heinzelman , A. Chandrakasan, and H. Balakrishnan. Energy-efficient com-

munication protocol for wireless microsensor networks. In Proc. 33rd Hawaii Interntiona[ Conference on System Sciences, January 2000.
[14] T. Hou and V. 0. K. Li.

Transmission range control 1n multihop packet radio

networks. IEEE Transa ctions on Communications, 34(1):38- 44, January 1986.
[15] I. Howitt and J. Wang. Energy balanced chain in distributed sensor networks. In

Proc. IEEE Wireless Communications and N etworking Conference (WCNC. 2004) ,

volume 3, pages 1721- 1726, l\!Iarch 2004.
[16] S. Hussain , A. W. Matin, and 0 . Islam. Genetic algorithm for hierarchical wireless

sensor networks. Journal of N etworks, 2(5):87- 97, Septernber 2007.
[17] C. lntanagonwiwat , R. Govindan , and D. Estrin. Directed diffusion: A scalable and

robust communication paradigm for sensor networks. In Proc. A CM M obi Com '00, pages 56- 67, Boston, MA, 2000.
68

(18] S. Jin, M. Zhou, and A. S. Wu. Sensor network optimization using genetic algorithm.

In 7th WMSCI'03, 2003.
(19] H. Karl and A. Willig. Protocols and Architectures for Wireless Sensor Networks.

John Wiley & Sons, Ltd , England, 2005.
(20] R. Khanna, H. Liu , and H. Chen. Self-organization of sensor networks using genetic

algorithms. IEEE ICC '06, 8:3377- 3382 , June 2006.
(21] K. T. Kim, H. Kim, and H. Y. Youn. Optimized clustering for maximal lifetime of

wireless sensor networks. In EUC Workshops 2006, pages 465-474, 2006.
(22] R. Krishnan and D. Starobinski. Efficient clustering algorithms for self-organizing

wireless sensor networks. In Ad Hoc Networks, volume 4, pages 36- 59, 2006.
(23] S. S. Kulkarni. TDMA services for sensor networks. In Proc. 24th International Con-

ference on Distributed Computer Systems Workshop, pages 604-609, March 2004.
(24] H. S. Lee , K. T. Kim, and H. Y. Youn. A new cluster head selection scheme for long

lifetime of wireless sensor networks. In ICCSA 2006, pages 519- 528, 2006.
(25] T. Lin, W. J. Kaiser , and G. J. Pattie. Integrated low-power communication system

design for wireless sensor networks. IEEE Communications Magazine, 42(12):142150, December 2004.

(26] S. Lindsey and C. S. Raghavendra. PEGASIS: Power efficient gathering in sensor

information systems. In Proc. IEEE Aero. Conf., March 2002.
[27] B. Liu and D. Towsley. On the coverage and detectability of large scale wireless

sensor networks. In Proc. of Wi0pt'03: Modeling and Optimization in Mobile, Ad
Hoc and Wireless Networks , 2003.
69

[28] B. Liu and D. Towsley. A study on the coverage of large-scale sensor networks.

In Proc. of the 1st IEEE International Conference on Mobile Ad-hoc and Systems
(MASS'04), 2004.

[29] H. Liu, L. Li, and S. Jin. Cluster number variability problem in LEACH. In Lecture
Notes in Computer Science, 2006.
[30] J. Liu and C. R. Lin. Energy-efficient clustering protocol in wireless sensor networks.

Ad Hoc Networks, 3, 2005.
[31] C. E. Perkins, E. M. Belding-Royer, and S. Das. Ad hoc on demand distance vector

(AODV) routing. IETF RFC 3561, July 2003.
[32] D. Tian and N. D. Georganas. A coverage-preserving node scheduling scheme for

large wireless sensor networks. In Proc. of 1st ACM International Workshop on
Wireless Sensor Networks and Applications, pages 32- 41, 2002.
[33]

Q. Wang, K. Xu, H. Hassanein, and G. Takahara. SWATCH: A stepwise adaptive
clustering hierarchy in wireless sensor networks. In Proc. 4th IFIP- TC6 International
Conferences on Networking, 2005.

[34] Y. Yuan, Z. Yang, and J. He. An adaptive modulation scaling scheme for quality of

services ensurance in wireless sensor netwoks. American Journal of Applied Sciences,
2(3) :734- 738, 2005.

70

