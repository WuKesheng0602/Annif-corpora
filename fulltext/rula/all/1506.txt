Ryerson University

Digital Commons @ Ryerson
Theses and dissertations

1-1-2008

Design And Development Of Power And Attitude Control Subsystems For RYESAT
Michael William Richard. Alger
Ryerson University

Follow this and additional works at: http://digitalcommons.ryerson.ca/dissertations Part of the Mechanical Engineering Commons Recommended Citation
Alger, Michael William Richard., "Design And Development Of Power And Attitude Control Subsystems For RYESAT" (2008). Theses and dissertations. Paper 1075.

This Thesis is brought to you for free and open access by Digital Commons @ Ryerson. It has been accepted for inclusion in Theses and dissertations by an authorized administrator of Digital Commons @ Ryerson. For more information, please contact bcameron@ryerson.ca.

DESIGN AND DEVELOPMENT OF POWER AND ATTITUDE CONTROL SUBSYSTEMS FOR RYESAT

By Michael William Richard Alger B. Eng. Ryerson University 2006

A Thesis Presented to Ryerson University in partial fulfillment of the requirement for the degree of Masters of Applied Science in the Program of Mechanical Engineering

Toronto, Ontario, Canada, 2008 ЕMichael William Richard Alger 2008

j.j

Authors' Declaration
I hereby declare that I am the sole author of this thesis or dissertation. I authorize Ryerson University to lend this thesis or dissertation to other institutions or individuals for the purpose of scholarly research.

Mike Alger

I further authorize Ryerson University to reproduce this thesis or dissertation by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

Mike Alger

i.ii

i.v

Abstract

Design and Development of Power and Attitude Control Subsystems for RyeSat
Masters of Applied Science 2008, Mike Alger

School of Graduate Studies Ryerson University

This thesis describes the design and development of Ryerson University's first CubeSat (RyeSat) with a focus on power and attitude control subsystems. This satellite is intended to become the initial of a series of CubeSats built by Ryerson University to perform research in spacecraft control algorithms and actuators. RyeSat is built around a standard interface, which specifies both a data-bus and a switchable power supply system for non critical systems. To facilitate the development of this satellite a prototype power subsystem was created, programmed and tested. In addition to developing the system's architecture and power subsystem; analysis was preformed to size both reaction wheels and magnetic torquers. This analysis showed that a commercially available motor could be adapted to fulfill the attitude control requirements of a CubeSat and also showed that miniature magnetic torque rods would be more efficient than magnetic torque coils typically used on CubeSats. Finally, control laws for these actuators were designed and an adaptive nonlinear sliding mode controller for reaction wheels was applied to control the 3-axis attitude motion of RyeSat.

v

vi

Acknowledgements
I would like to thank my parents, without whose reassurance and patience I would not have had the chance to pursue this project. I would also like to thank my supervisor, Dr Krishna Kumar, for guiding me through this research and providing me with financial support through his grants. Thanks to all those in the lab who have kept me relatively sane; it was definitely a valiant effort on your part.

MIKE ALGER September 2008

vii

Table of Contents
Authors' Declaration .......................................................................................................... iii Abstract .............................................................................................................................. v Acknowledgements ........................................................................................................... vii Table of Contents ............................................................................................................. viii List of Figures .................................................................................................................... xii List of Tables ..................................................................................................................... xv List of Acronyms ..............................................................................................................xviii Symbols Used ................................................................................................................... xix
Chapter 1 lntroduction ..........................................................................и........................... l

1.1 1.2 1.3 1.4 1.5
Chapter 2

Motivation ............................................................................................................... 1 Small Satellite Design: State of Art .......................................и.................................... 2 Research Objectives ................................................................................................. 3 Contributions of Thesis ............................................................................................. 5 Thesis Organization .....................................................................................и............ 6
Literature Reviewи.ии.ии.ии.и.ии.ии.ии.иии.иииии..иииии.иии.ии..ииииииии.ииииииииии..и.ии.иииииии.ии..иии.ии.ии 7

2.1

Structure .....................................................................................................и............ 7

Requirements ........................................................................................................................................... 8

2.2 2.3 2.4 2.5 2.6 2. 7
2.7.1 2.7.2

Attitude and Orbit Determination and Control System ............................................ 10 Communications .................................................................................................... 11 Command and Data Handling ......................................................................и.......... 12 Power .................................................................................................................... 13 Payload .................................................................................................................. 14 System Bus ............................................................................................................ 15
Spacecraft Interfaces ................................................................................................................ 15 Past CubeSats and Their Bus lnterfaces .................................................................................... 17

2.8
2.8.1 2.8.2

Fabrication for a Space Environment ............................и...............................и.......... 21
Environment ............................................................................................................................. 21 Space Manufacturing ................................................................................................................ 24

viii

2.9
2.9.1 2.9.2 2.9.3

Discussions on CubeSats Performance ..................................................................... 25
CubeSat Failures and Problems ................................................................................................. 25 Checklists and Documentation ................................................................................................. 26 CubeSat Successes ....................................................................................................................27

Chapter 3 3.1 3.2
3.2.1 3.2.2 3.2.3 3.2.4 3.2.5 3.2.6

System Requirements ...................................................................................... 29 Overall mission ....................................................................................................... 29 Mass and Power Budgets ........................................................................................ 30
System bus ................................................................................................................................30 Environmental/ thermal ..........................................................................................................-.. 31 Power ........................................................................................................................................32 Attitude Determination and Control ......................................................................................... 33 C&DH/Comm Subsystem ..........................................................................................................34 Payload ...................................................................................................................................... 35

Chapter4 4.1
4.1.1 4.1.2

System Analysis and Design ......................................и...................................... 37 Architecture of RyeSat ............................................................................................ 38
Advantages of an 12 C Data Bus ..................................................................................................40 Disadvantages of an
1

2

C Based Standard .................................................................................. .40

4.2

Thermal Design ......................................................................................................41

Analysis42

4.3

Power Subsystem ...................................................................................................43

Analysis45

4.4
4.4.1 4.4.2

Attitude Control Subsystem .................................................................................... 46
Spacecraft Disturbance Torques ...............................................................................................47 Spacecraft Actuator Sizing ........................................................................................................51

Chapter 5 5.1
5.1.1 5.1.2 5.1.3 5.1.4 5.1.5 5.1.6 5.1.7

Hardware Testing and Simulation .............. : ..............................и...................... 61 Bus Operation ................................................и......................и........и.......................61
Case 1 ........................................................................................................................................62 Case 2 ........................................................................................................................................62 Case 3 ........................................................................................................................................63 Case 4 ........................................................................................................................................63 Case 5 ........................................................................................................................................64 Case 6 ........................................................................................................................................64 Case 7 ........................................................................................................................................64

ix

5.1.8 5.1.9

Case 8 ........................................................................................................................................ 65 Case 9 ........................................................................................................................................ 65

5.1.10 Checksums and Error Codes ..................................................................................................... 65

5.2
5.2.1 5.2.2

Thermal Subsystem ................................................................................................ 66
Heater Control .......................................................................................................................... 67 Health Monitoring .................................................................................................................... 68

5.3
5.3.1 5.3.2 5.3.3 5.3.4 5.3.5 5.3.6 5.3.7 5.3.8 5.3.9

Power subsystem ................................................................................................... 68
Uninterruptible Feed lines ................................................................................... ~ .................... 68 Controllable Feedlines .............................................................................................................. 71 Feed line Control Mechanism .................................................................................................... 72 Solar Cell Measurement and Power Transfer Bus .................................................................... 74 Battery Charger ......................................................................................................................... 75 Battery Monitor ........................................................................................................................ 76 System Wide Interface .............................................................................................................. 76 Microcontroller ......................................................................................................................... 77 Overall Schematic Design ......................................................................................................... 77

5.3.10 Physical Implementation .......................................................................................................... 80 5.3.11 Firmware Design ....................................................................................................................... 80

5.3.12 Commands to Control Power Subsystem ................................................................................. 82

5.4
5.4.1 5.4.2 5.4.3

Attitude Control Subsystem .................................................................................... 84
H-Bridge .................................................................................................................................... 85 Microcontroller ......................................................................................................................... 85 Physical Implementation .......................................................................................................... 86

5.5
5.5.1 5.5.2 5.5.3 5.5.4 5.5.5

Control Law Development ...................................................................................... 86
Rotation Sequences .................................................................................................................. 86 Spacecraft Dynamics ................................................................................................................. 87 Linear Control Law .................................................................................................................... 89 Magnetic PO Controller ............................................................................................................ 91 Sliding Mode Adaptive Controller ............................................................................................. 94

Chapter 6

Conclusions and Future work ......................................................................... 105

6.1
6.1.1 6.1.2 6.1.3

Conclusions .......................................................................................................... l05
System Bus .............................................................................................................................. 105 Power Subsystem .................................................................................................................... 106 ACS .......................................................................................................................................... 106

X

6.2
6.2.1 6.2.2 6.2.3

Future work .......................................................................................................... 106
System Bus .............................................................................................................................. 106 Power Subsystem .................................................................................................................... 107 ACS &ADS ................................................................................................................................ 107

References ...................................................................................................................... 108

Appendix A Appendix B
A.1.

Thermal Calculations ..................................................................................... 111

12C Communications Test Code ................................................и....и................ 116

Single Byte Each Way ............................................................................................ 116
Overview ................................................................................................................................. 116 Slave ........................................................................................................................................ 116 Master ..................................................................................................................................... 121

A.1.1. A.1.2. A.1.3.

Appendix C Appendix D Appendix E Appendix F

Power Subsystem firmware ........................................................................... 125 Power Subsystem Code .................................................................................. 127 Additional mathematics ..................................................................... ........... 143 Cube sat specifications document .................................................................. 145

xi

List of Figures
Figure 1: Typical CubeSat System Architecture ................................................................................ 7 Figure 2: Location of highest stress (Intelligent Space Systems Laboratory 2001) .......................... 9 Figure 3: CubeSat Specification drawing (HutputtEanasin and Toorian 2006, 7) ............................. 9 Figure 4: Diagram of a typical Mii-STD-1553 bus (Wikipedia 2007) ............................................... 16 Figure 5: SpaceWire configuration (ESA 2003) ............................................................................... 17 Figure 6: Example SPI interface (Wikipedia 2008) .......................................................................... 18 Figure 7: KUTESat system block diagram original (Paruchuri 2006) ............................................... 18 Figure 8: KUTESat final configuration (Paruchuri 2006) ................................................................. 18 Figure 9: Xi 3 system block diagram (Intelligent Space Systems Laboratory 2001) ........................ 19 Figure 10: nCube System block diagram ({Z}verby 2004) ................................................................. 20 Figure 11: CubeSat kit Interface (Pumkin 2007) ............................................................................. 21 Figure 12: Satellite configuration drawing ...................................................................................... 37 Figure 13: System block diagram (hardware specific) .................................................................... 38 Figure 14: Systems block representation of the proposed standard ............................................. 40 Figure 15: Electrical Schematic of Interface used on RyeSat .......................................................... 40 Figure 16: Thermal subsystem block diagram ................................................................................ 42 Figure 17: Power subsystem function block diagram ..................................................................... 44 Figure 18: ACS hardware block diagram ......................................................................................... 47 Figure 19: Considered shape to calculate worst case gravity gradient .......................................... 48 Figure 20: Layout of potential current loops .................................................................................. 49 Figure 21: Picture of Portescap motor ............................................................................................ 52 Figure 22: Flywheel: solid disc configuration .................................................................................. 53 Figure 23: Mass efficient flywheel design ....................................................................................... 54 Figure 24: Physical network (Sturrman 2007) ................................................................................. 61 Figure 25:.Sample data sentence .................................................................................................... 62 Figure 26: Thermal system schematic ............................................................................................ 67 Figure 27: 3.3V uninterruptible supply circuit ................................................................................ 69 Figure 28: 5 volt step up and supply circuit .................................................................................... 71

xii

Figure 29: 3.3V 250 rnA power supply lines (PS 1and3) .................................................................. 71 Figure 30: 3.3V 800 rnA power supply line (PS 2 and 4) .................................................................. 71 Figure 31: Feed line control mechanism ......................................................................................... 72 Figure 32: Two solar cell circuit ....................................................................................................... 75 Figure 33: Battery charger circuit .................................................................................................... 76 Figure 34: Battery monitor circuit ................................................................................................... 76 Figure 35: Interface to the satellite bus .......................................................................................... 77 Figure 36: Microcontroller pin-out .................................................................................................. 77 Figure 37: Power subsystem schematic .......................................................................................... 78 Figure 38:
Po~er

subsystem schematic continued ......................................................................... 79

Figure 39: PCB layout ...................................................................................................................... 80 Figure 40: Firmware Design (Main loop) ......................................................................................... 81 Figure 41: Firmware design (Interrupt) ........................................................................................... 81 Figure 42: Firmware design (Interrupt) continued .......................................................................... 81 Figure 43: Schematic for the ACS subsystem (magnetic torquers only) ......................................... 85 Figure 44: PCB layout (preliminary) ................................................................................................ 86 Figure 45: Angular response PO controller ..................................................................................... 91 Figure 46: Momentum storage for a simple PO controller ............................................................. 91 Figure 47: Torques for PO controller ............................................................................................... 91 Figure 48: Magnetic PO controller response ................................................................................... 93 Figure 49: Magnetic PO controller input ......................................................................................... 94 Figure 50: Attitude response (ideal cube MOl) ............................................................................... 98 Figure 51: Torque and adaptive gains (ideal cube MOl) ................................................................. 99 Figure 52: Reaction wheel storage momentum (ideal cube MOl) .................................................. 99 Figure 53: Attitude response (worst case MOl) ............................................................................ 100 Figure 54: Torque and adaptive gains (worst case MOl) .............................................................. 100 Figure 55: Reaction wheel storage momentum (worst case MOl) ............................................... 101 Figure 56: Attitude maneuver response (ideal cube MOI) ............................................................ 102 Figure 57: Torque and adaptive gains while maneuvering (ideal cube MOl) ............................... 103 Figure 58: Reaction wheel storage momentum while maneuvering (ideal cube MOl)) ............... 103 Figure 59: Attitude maneuver response (worst case MOl) ........................................................... 103

xiii

Figure 60: Torque and adaptive gains while maneuvering (worst case MOl) .............................. 104 Figure 61: Reaction wheel storage momentum while maneuvering (worst case MOl)) .............. 104 Figure 62: Power subsystem main loop & WDT ........................................................................... 125 Figure 63: Interrupt error checking steps ..................................................................................... 125 Figure 64: Interrupt continued ..................................................................................................... 126

xiv

List of Tables
Table 1: Classification of spacecraft by mass (Kumar 2006) ............................................................. 3 Table 2: Summary of missions ........................................................................................................... 4 Table 3: Typical Requirements for a Pica-satellite ............................................................................ 8 Table 4: Summary of attitude and orbit control systems ............................................................... 11 Table 5: Summary of communication systems ............................................................................... 12 Table 6: Summary of C&DH systems ............................................................................................... 13 Table 7: Summary of power systems .............................................. ........ ........................................ 13 Table 8: Summary of Payloads ........................................................................................................ 15 Table 9: Overall system requirements ............................................................................................ 29 Table 10: Design budget .................................................................................................................. 30 Table 11: System bus requirements ................................................................................................ 30 Table 12: Environmental requirements .......................................................................................... 31 Table 13: Power requirements ........................................................................................................ 32 Table 14: ADCS requirements ......................................................................................................... 33 Table 15: C&DH requirements ........................................................................................................ 34 Table 16: Payload requirements ..................................................................................................... 35 Table 17: Interface matrix ............................................................................................................... 42 Table 18: Spacecraft overall temperature at 1000 km without heaters ......................................... 43 Table 19: Spacecraft overall temperature at 1000 km with 2.35W heater .................................... 43 Table 20: Spacecraft overall temperature at 500 km without heaters ........................................... 43 Table 21: Spacecraft overall temperature and at km with 2.35W heater ...................................... 43 Table 22: Interface matrix ............................................................................................................... 44 Table 23: Solar cell power generation assumptions ....................................................................... 45 Table 24: Power outputs from solar cells ........................................................................................ 45 Table 25: Power consumption (without heaters on) ...................................................................... 46 Table 26: Power consumption (with heaters on) ............................................................................ 46 Table 27: Interface matrix ............................................................................................................... 47 Table 28: Disturbance torque models ............................................................................................. 48
XV

Table 29: Estimated magnetic moments from current loops ......................................................... 49 Table 30: disturbance torques at 400km ........................................................................................ 50 Table 31: disturbance torques @ 1000km ...... ................................................................................ 50 Table 32: Reaction wheel sizing criteria .......................................................................................... 51 Table 33: Example motor constants ............................................................................................... 51 Table 34: Example motor characteristics ........................................................................................ 52 Table 35: Fly wheel sizing considerations ....................................................................................... 52 Table 36: Fly wheel: solid disc parameters ..................................................................................... 53 Table 37: Simple ring fly wheel parameters ................................................................................... 54 Table 38: Comparison to other available wheels ............................................................................ 54 Table 39: Magnetic torquer requirements ..................................................................................... 55 Table 40: Air core design parameters ............................................................................................. 57 Table 41: Ferrite core design (magnetic parameters) .................................................................... 58 Table 42: Ferrite core design (mass parameters) .......................................................................... 58 Table 43: Ferrite core design (size parameters) ............................................................................ 59 Table 44: Comparison of available magnetic torquers ................................................................... 59
2 Table 45: 1 C Address table for RyeSat ............................................................................................ 61

Table 46: Case 1 (Master sends no response wanted) ................................................................... 62 Table 47: Case 2(Master sends, and a response is wanted) ........................................................... 63 Table 48: Case 3 (Master receives a wanted response) ................................................................. 63 Table 49: Case 4 (incorrect packet size) .......................................................................................... 64 Table 50: Case 5(1ost byte from master) ......................................................................................... 64 Table 51: Case 6 (lost byte from Slave) ........................................................................................... 64 Table 52: Case 7 (incorrect checksum on slave) ............................................................................. 65 Table 53: Case 9 (error follow up) ................................................................................................... 65 Table 54: List of standard bus error codes ..................................................................................... 66 Table 55: Temperature sensor address per board ......................................................................... 68 Table 56: LTC 1440 resistor sizing table .......................................................................................... 74 Table 57: Key Diode Characteristics ................................................................................................ 74 Table 58: Summary of the communications test command ........................................................... 82 Table 59: Communications test command input ............................................................................ 82

xvi

Table 60: Communications test output ........................................................................................... 82 Table 61: Summary of the Power distribution control command .................................................. 82 Table 62: Example input for the power control command ............................................................. 83 Table 63: Example output of the power control command ............................................................ 83 Table 64: Summary of the solar Cell inquiry command .................................................................. 83 Table 65: Input for the solar cell inquiry command ........................................................................ 83 Table 66: Structure of the output for the solar cell inquiry command ........................................... 83 Table 67: Summary of the Battery inquiry command ..................................................................... 84 Table 68: Input for the battery inquiry command .......................................................................... 84 Table 69: Structure of the battery inquiry output .......................................................................... 84 Table 70: initial conditions for PD controller .................................................................................. 90 Table 71: Initial conditions for magnetic PD Controller .................................................................. 93 Table 72: Initial conditions ideal cube ............................................................................................. 98 Table 73: initial conditions worst case MOl .................................................................................... 98 Table 74: Attitude maneuver initial conditions (ideal cube) ......................................................... 101 Table 75: Attitude maneuver initial conditions (worst case MOl) ................................................ 102 Table 76: Sides 1- 3 in a 1000 km orbit (hot and cold cases) ....................................................... 111 Table 77: Sides 4- 6 in a 1000 km orbit (hot and cold cases) ....................................................... 112 Table 78 Sides 1- 3 in a 500 km orbit (hot and cold cases) ........................................................... 113 Table 79: Sides 4- 6 in a 500 km orbit (hot and cold cases) .......................................................... 114

xvii

List of Acronyms
EDAC RAM ROM PROM TNC DTMF FM CW AOCS ADS ACS GPS PCB P-POD SPI
2 1 C

Error detection and correction Random access memory Read only memory Programmable read only memory Terminal node controller Dual tone multi frequency Frequency modulated Continuous wave (Morse code) Attitude orbit control system Attitude determination system Attitude Control system Global positioning system Printed Circuit board Poly Pice-Satellite Orbital Deployer Serial peripheral interface Inter-integrated circuit Universal asynchronous receiver transmitter Low earth orbit Commercial off the shelf Canadian Space Agency Space Systems Dynamics and Controls Group Technology Readiness levels Voltage Reference

UART LEO COTS CSA SSDCG TRL Vref

xviii

Symbols Used
Torque due to gravity gradient disturbances
Tsrp Tmag Taero

Torque due to Solar radiation disturbances Torque due to magnetic disturbances Torque due to aerodynamic disturbances Sum of disturbance torques

Twheel Tmotor Ttorquer Wmotor Hstorage

Torque from reaction wheel Torque supplied from motor Torque supplied from magnetic torque rod Wheel speed of motor (reaction wheel) Storage momentum from reaction wheel Principal moments of inertia Earth's gravity constant Orbital Radius of satellite Solar energy constant Exposed area speed of light

fxx; lyy; lzz

q

reflectance factor The angle of incidence of the Sun to the panel Center of pressure (solar) Center of mass

p

density of the atmosphere at altitude The speed of the spacecraft (magnitude) Coefficient of drag Center of pressure(aero) Applied voltage Motor torque constant Resistance Power required by motor [W]

v
Cv
Cpa Vapplied

ki
R
Pmotor

xJx

ffiapplied Bearth

Applied magnetic moment Magnetic field of earth at a given position Current Area (of coil) Cross-sectional area of the wire is the radius of the coil resistively of material Number of turns in the solenoid coil Mass of the coil density of the wire magnetic flux density from the coil to the core demagnetization factor free space permeability

I Acoil A wire
rcoil

<I>
N

M
Pwire

Jlcore

permeability of the core radius of the core length of the core diameter of the wire Rotation Transformation matrix from orbital frame to body frame Pitch angle Roll angle Yaw angle Ratios of moments of inertia Altitude of satellite

r
L

D

Mearth Dresidual

Earths magnetic moment Residual Dipole of the satellite

XX

CHAPTER 1
INTRODUCTION

The cost of launching spacecraft into orbit has always been one of the most expensive elements of any mission. In the earliest years of spaceflight, rockets were made larger to accommodate heavier satellite payloads. This paradigm has recently shifted towards developing smaller spacecraft that possess the same functionality as their earlier predecessors, but can be flown on smaller rockets or as secondary payloads on larger launch vehicles. However, due to their size, these small satellites are limited to what missions they can accomplish. The most significant limitations are: available power and pointing performance. Power limitations will always be a major problem for small satellites, as, typically, the only way for a satellite to generate power on orbit is through solar cells. Unless there is a major breakthrough in solar cell efficiencies or in the deployment methods of solar arrays for small satellites, the power available to these missions will stay limited. Pointing performance on the other hand is one limitation that can be easily addressed, both by improving the control algorithms and by scaling down existing actuators found on larger spacecraft. In this thesis, the issues involved in the design and development of a picosatellite were investigated. Specifically, focus was given to the development of a CubeSat that could be adapted to many different controls experiments.

1.1 Motivation
The overall research goal of the space systems dynamics and control group (SSDCG) at Ryerson University is to improve the control methods utilized on satellites; by both investigating novel actuators and by implementing new control algorithms on existing hardware. CubeSats provide an inexpensive way to get hardware to space. The design and development of Ryerson

1

Introduction

University's first CubeSat, and a simplified standard architecture, will allow researchers in SSDCG to develop and test novel algorithms and actuators in the space environment with minimal development time, improving the time it takes to bring theoretical research to acceptable technology readiness levels (TRLs) for higher performance missions investigated by larger government agencies such as the Canadian Space Agency. The reason it was decided the power subsystem should be created first was based on the fact that the power subsystem plays a vital part of the devised architecture. It should be given as much time as possible to work out any problems before a launch. The power subsystem is also an ideal choice to test the interface as it is a relatively simple system from a programming perspective, sending a limited data set to a master and responding to a very limited subset of commands. Additionally, the power subsystem is unlikely to undergo further changes at a systems level unlike other subsystems such as the attitude control system. Since the overall mission is to test new control laws and actuators the next logical step was to begin work on the attitude control subsystem (ACS). The first focus of the research was to suitably size the reaction wheels and the magnetic torquers for RyeSat. The second focus was to experiment with the control law design.

1.2 Small Satellite Design: State of Art
Satellites are generally classified by mass (see Table 1); currently the smallest satellites launched have been in the pico-class 1 . The first of these pica-satellites flew on the OPAL and Sapphire missions. The efforts applied to developing these satellites later led to the creation of the CubeSat standard. A standard that has been developed and flight tested within the last ten years by an ever growing CubeSat community (Villa 2005). In the strictest sense CubeSats are a sub class of pico satellites nominally having the dimensions of lOxlOxlOcm (HutputtEanasin and Toorian 2006). The strategy for deploying these satellites in orbit involves launching a group of CubeSats in a deployment device known as a Poly Pica-satellite Orbital Deployer (P-POD). The PPOD integrates with the launch vehicle and carries three normal sized CubeSats. Using the PPOD, the first CubeSats were launched on the Eurorockot from Mirny Plestsk, Russia June 30th 2003 (Durham 2008). All of these CubeSats were built by students at different universities and of

1

Excluding the individual dipoles released in the Westford needle project

Research Objectives

the six satellites launched; three were successful, and one a limited success. After this initial launch, many universities from around the globe have constructed or began construction on CubeSats of their own. CubeSats can be constructed relatively inexpensively and can be launched for approximately $40,000 US per satellite (David 2004) However, the key benefit of constructing a CubeSat over another type of pica-satellite is to eliminate the hassle of organizing and integrating it with the launch vehicle, as this problem is dealt with by flying in the P-POD. This arrangement should allow the satellite design team to focus less time on logistic issues associated with the rocket launch, and spend more time developing the satellite for the mission.
Table 1: Classification of spacecraft by mass (Kumar 2006}
Satellite Class
Large satellite Medium sized satellite Mini satellite Micro satellite Nano satellite Pico satellite Femto satellite

Mass
>1000kg 500-1000kg 100-SOOkg 10-100kg 1-10kg 0.1-1kg <100g

According to the CubeSat community website, there have been 16 successfully launched CubeSats (Durham 2008). The following table (Table 2) summarizes some of the earlier CubeSat configurations and missions. This table also shows even with tight volume and mass restrictions CubeSats have performed some impressive missions. Some of the more complicated missions utilized atmospheric sensors to detect carbon dioxide levels, sensitive magnetometers to sense Earthquakes, and various cameras to take images of the Earth. In addition to science based missions, CubeSats present themselves as interesting test platforms for companies planning to test technologies that require space qualification.

1.3 Research Objectives
The objectives of this research were to design power and attitude subsystems for RyeSat. This included designing of the system architecture, developing the power subsystem, sizing the actuators and developing attitude control algorithms. The modular system bus was designed and tested both with a breadboard and with an actual subsystem. A focus was placed on ensuring the data bus was well understood and defined, to speed up future development of other subsystems.

Introduction

Table 2: Summary of missions

Satellite

Launch Vehicle

Configuration

Mission The scientific mission of the AAU CubeSat was to take pictures of the surface of the Earth. In particular of Denmark by using the on-board camera. (Aiminde, AAU CubeSat, 2003} (Wisiewski 2004} CanX-1 is an Engineering test bed to test technologies for Future CanX missions (Space Flight Lab 2007}

AAU CubeSat

Eurorockot Launched June 30th 2003 from Mirny, Plestsk Standard CubeSat

CanX-1

Eurorockot Launched June 30th 2003 from Mirny, Plestsk Standard CubeSat Falcon 1 To be launched July 2007 Omalek Island, Kwajalein Triple CubeSat Eurorockot Launched June 30th 2003 from Mirny, Plestsk Standard CubeSat Eurorockot Launched June 30th 2003 from Mirny, Plestsk Dnepr 11aunch
~ I

CanX-2

Designed to be an Engineering test bed for upcoming CanX-4 CanX-5 formation flying experiment. It will test various attitude control methods and will test a nano-propulsion system (Space Flight Lab 2007}

CUTE-I

Designed to test a new radio protocol for amateur packet radio data. (Lab for Space Systems 2006}

Quake Sat

jl~
Triple CubeSat

Designed to detect ELF created by Earthquake events (Bleier, et al. 2004} (Long, et al. 2002} KUTESat had to reduce its original mission to a Radiation dosimeter experiment* (Villa, Project Management of a Student Built Space Satellite: The KUTESat- 1 2005} Simple camera mission, carrying microfilmed messages from Earth to space. (Intelligent Space Systems Laboratory 2001} (Intelligent Space Systems Laboratory

KUTESat 1 Pathfinder

Aborted launch resulted in a Loss of the satellite Eurorockot Launched June 30th 2003 from Mirny, Plestsk

Standard CubeSat

Xi-IV

Configuration after changes late in the design.

4

Contributions of Thesis

Satellite

Launch Vehicle

Configuration Standard CubeSat

Mission 2008)

Xi-V

Kosmos-3m 27th October 2005 Plesetsk

Simple camera mission, carrying microfilmed messages from Earth to space. Testing CIGS cell for space use. {Intelligent Space Systems Laboratory 2008) An engineering test bed for University of Louisiana at Lafayette. It will primarily send housekeeping data and images back to the student run ground station. (J. Wagner 2005) Standard CubeSat

Cape 1

To be launched on Dnepr 2 2007, Baikonur Cosmodrome Kazakhstan

The development of the power subsystem served two purposes. First, it served to develop hardware for the satellite itself, and second, it was to be utilized to further test the satellite's power and data buses. Focus was put on proving out the circuit and finding possible places for improvement with minimal changes. The actuators were to be sufficiently sized for a single cube, CubeSat, and the research placed an emphasis on ensuring that these actuators would fit within the satellites power and volume budgets. Research regarding control laws was to investigate the application of a sliding mode controller to control a CubeSat sized spacecraft using reaction wheels. Effort was also placed on designing a simplified controller for the magnetic torquers to de-tumble the satellite after deployment.

1.4 Contributions of Thesis
In this thesis the objectives were accomplished as follows: 1) 2) 3) RyeSat's system architecture was designed with a modular concept. RyeSat's systems bus was designed and tested. RyeSat's power subsystem was designed and tested.

4) Actuators were sized to fit within the CubeSat specifications and to allow full 3 axis control.

Introduction

5) Attitude control algorithms were developed and tested through numerical simulation.

1.5 Thesis Organization
This thesis is organized into five chapters. Chapter 2 presents a review of CubeSats with a focus on subsystem design. Methods to develop smaller satellites to the standard practices used to develop larger satellites are also compared. Chapter 3 explains the systems requirements of RyeSat. These requirements were expanded upon and related to individual subsystems. Chapter 4 presents the systems engineering and the analysis used to develop the thermal power and attitude control subsystems. Chapter 5 explains the detailed design including the structure and circuits of the system bus, thermal and power subsystems. This is followed by the development and simulation of attitude control laws. Chapter 6 concludes the work presented. It summarizes the work completed on the subsystems constructed and suggests future work.

6

CHAPTER2
LITERATURE REVIEW

Pica-satellites, like larger satellites, are designed using established engineering practices based on previous space flight missions. The basics of spacecraft design include breaking down the overall spacecraft into distinct subsystems that execute particular tasks. However, some of the traditionally segregated subsystems must be combined to save mass, space, and power. Figure 1 and Table 3 illustrate typical architectures and common requirements for smaller satellites and show some common characteristics of CubeSats that have already been built.

Structure (usually

Figure 1: Typical CubeSat System Architecture

2.1 Structure
The purpose of a structure subsystem on a spacecraft is to maintain the spacecraft's shape while undergoing the loading conditions experienced during both launch and while in orbit. Another purpose of this subsystem is to provide a location to mount other hardware and wire harnesses. For pica-satellites, the structure subsystem represents a larger mass fraction as compared to larger satellites.

Literature Review

Table 3: Typical Requirements for a Pica-satellite
Mass% Of smaller spacecraft 25% Mass % SMAD 22.7%

System

Typical requirement Adhere to Cal Poly requirements Must be able to survive launch Must weigh as little as possible Typically there is no orbital control requirements There may be orbital determination requirements for imaging or attitude determination There is usually some form of attitude control requirements based on radio reception, and other payload missions, typically there are no requirements due to solar panel orientation Attitude determination will usually have some form of requirement based on the control requirements listed above; Some payloads require more accurate knowledge and use it to trigger events other than attitude control. There must be communication with a ground station

Typical characteristics Mostly constructed out of aluminium sometimes supported by the PCB material that the electronic packages are placed on Orbital control is typically not used Orbital determination is typically not used and ground stations rely on NORAD's TLEs or similar data For active control systems magnetic torque coils are typically used. Typically passive methods are used such as gravity gradient or permanent magnetic rods

Structure

2.7% 10%

Attitude Orbit control system

0% Attitude determination can be found by many methods see section 2.2 for details on the most common methods

11.3%

Communications

Communications link must be sufficient for the mission data to be downloaded in limited ground station passes Must run mission operations independently Must be able to store mission data in between ground station passes Must power the satellite Must not be dependent on the spacecraft orientation Must provide battery protection (discharging and charging) Must keep components in their operating limits Vary from mission to mission

1200bps is the most common speed 9600bps is the next most common speed Most satellites use AX.25 for transmission to ground Uplinks can Be AX.25 Or DTMF (touch tone phone codes) Can be any form of microcontroller/computer This system depends highly on payload requirements <2W on standard CubeSat configuration Typically high efficiency Solar cells >25% Typically utilizing Lithium ion batteries Will employ heaters Specialized radiators or louvers typically not used

20% 12.7%

Command and data handling

5%

Power

20%

24.6%

Thermal control system Payload

5% 15%

1.7% 24.4%

Requirements
A CubeSat must follow strict guidelines as put forth by the Cal Poly design specification documentation in order to be launched in the P-POD deployment system (HutputtEanasin and Toorian 2006). The design specification is shown in Figure 3, and a reproduction of these requirments can be found in Appendix F. Along with these guidelines, most CubeSats have a strict mass budget. Typically, the structure weighs approximately 200-250 grams which represents 20-25% of the standard CubeSat total mass. Although not stated in the requirements document, the structure of the CubeSat must be

8

Structure

designed to deal with the stresses it will experience during launch conditions, as illustrated in Figure 2. Typically, most CubeSats strictly adhere to the Cal Poly suggestion that the frame of the CubeSat be manufactured out of aluminum 7075 or 6061 T6. An example of this traditional approach is shown in Xi- 4 and Xi-S. Only one CubeSat, CAPE-l, has not used aluminum exclusively throughout the frame. Instead, it relies on PCB material for shielding and some structural support (see Table 2).

Maximum Stress O.Ollkgf/mm

Figure 2: Location of highest stress (Intelligent Space Systems Laboratory 2001)

Additional Nott!s:
и :NO ~~1m111i :;ompo~1.rou ot~ии~:~<m иt,~ r~!Jt ! 111бr' ~~h!l)eW;fde!>ll~P.!Ф)P.
и,I.\;IH OR ~~I"K" 'l'!!b b;>!l"'""' hllly~il<dlW'fl~.

~~<tte<~~<ck!Of<'ftitiltjrln

I 1
I

I

~~:='!,:~n!=::,v:;~:.~ !
и

~~111 m~t be t!Viei' hiln1.<ti1ФJilN I'm mad\\'

I
;
и ' '.'

.:::::и,:;::.::
~&tatit!'tH;. ~~SA16)
'Atl~>~I :Q~и pj !l~pt~t ~M.Wi ~;;(pot<li!t<l 1>'1 ~tl («\.'$<\!~.
и и.tи.иW-~1' Cil!lll()! W<f~ l!ltlffl' иrt.rn~

'*lill b~

иt :h~:

:, ttir.w ~r Цr1Wit;< mmt ~ lm tt!M 1 W~
!tMltl'w.jeoolи<bK:(I!'!I!P.r.

Figure 3: CubeSat Specification drawing (HutputtEanasin and Toorian 2006, 7)

9

Literature Review

2.2 Attitude and Orbit Determination and Control System
The performance of the AOCS is dictated by the pointing requirements defined by the payload and communications subsystems. There are typically four components to an AOCS; orbit determination, orbit control, attitude determination, and attitude control. On some CubeSats, orbital position is determined by orbit propagation (Wisiewski 2004), while some newer CubeSat designs include low power commercial GPS receivers along with orbital propagation to obtain a better estimate (Space Flight Lab 2007). Traditionally, a CubeSat does not require orbital control because, during its short lifespan (typically 1-2 years), the satellite will not experience a large orbital drift due to environmental forces. However, the upcoming CanX-2 will fly with an experimental nano-propulsion system that could potentially change this trend (Space Flight Lab 2007). The third component of the AOCS is attitude determination. Some commonly used attitude determination sensors on CubeSats are: magnetometers, optical sensors, and gyroscopes. Magnetometers work by determining the orientation of the Earth's magnetic field with respect to the sensor. This information along with satellite location with respect to the Earth allows the determination of one of the two required vectors to fully determine attitude. Optical sensors, such as digital sun sensors, can provide the other vector and determine the spacecraft's orientation by utilizing thin slits and linear arrays of photo sensitive circuits. When the light strikes the slit at a certain angle, certain elements of the photo array are activated. Other optical sensors such as star trackers can be used to determine the spacecraft's attitude. However commercial off the shelf components are typically too heavy and power demanding to be implemented on the typical CubeSat. The last types of common sensors used to determine a CubeSat's attitude are inertial sensors (gyroscopes). However, these devices are prone to drifting away from the true values and are only accurate for short periods of time. Hence, they are typically used in conjunction with other sensors. As most CubeSats have differing pointing requirements, they employ vastly different methods of attitude control. The AAU CubeSat, KUTESat, and the CanX series all employed magnetic

torquers to de-tumble or control the attitude of the spacecraft (Wisiewski 2004), (Villa 2005), (Wang 2004). Other CubeSats such as the Xi-series from Intelligent Space Systems Laboratory (ISSL) in Tokyo and Quakesat from Stanford have utilized passive magnetic stabilization and gravity gradient methods of attitude control (Intelligent Space Systems Laboratory 2008) (Bleier, 10

Communications

et al. 2004). Finally, some CubeSats such as CUTE-I have been designed without any attitude control (Lab for Space Systems 2006). A summary of AOCS's implemented on CubeSats is presented in Table 4.

2.3 Communications
All missions require some data to be sent back to a ground station, and, depending on the mission requirements, there are different methods of transmitting the data. For most CubeSats, there is a beacon, or a beacon mode, that transmits a CubeSat's call sign and basic housekeeping data. In addition to the beacon, there is usually a more elaborate downlink that operates as aи data radio. These data radio links can be based on older modems and have speeds as low as 1200 bps or they can be newer amateur data radios that transmit at 9600 bps. The first CubeSats were operated on amateur radio frequencies, and the developers of these CubeSats published their downlink frequencies so amateur operators could listen to the CubeSats. This practice is a fairly popular means of relaying data to and from the CubeSats and can save the cost of setting up multiple ground stations. Onboard the satellite, a typical setup has a terminal node controller (TNC) connected to both an amateur handheld radio and the main onboard computer. This TNC will often handle the translation of the baseband signals (simply an audio signal) from the radio to digital signals (typically UART data streams) and vice versa. It should be noted that most CubeSats do not transmit faster than 1200bps, as most amateur radio equipment is designed for this speed, although there are a few exceptions using newer amateur radio data formats. A summary of radio configurations used on previous CubeSats is given in Table 5.
Table 4: Summary of attitude and orbit control systems
Name University AAU CubeSat University of Aalbourg (Wisiewski 2004) CanX-1 University ofToronto (Wang 2004) Orbit determination NORAD 21ine DATA GPS / NORAD 2 line Data Attitude sensors Magnetometer sun sensors a Honeywell three-axis digital magnetometer Orbit control Attitude control Magnetic torquer rods Magnetic torquer rods Orthogonal Magnetic torquer rods nano sized momentum wheel

NONE

None

CanX-2 University of Toronto (Caillibot 2005)

GPS/ NORAD 2line Data

Sun sensors 3 Axis magnetometers verification using cameras Piezo-electric Vibrating Gyroscope Dual Axis Accelerometer

a liquid-fuelled cold gas system using sulphur hexafluoride (SF6)

CUTE-I Tokyo institute of technology (Lab for Space Systems 2006)

NORAD 2 line Data

None

None

11

Literature Review

Name University

Orbit determination

Attitude sensors CMOS Sun sensor

Orbit control

Attitude control

Quake sat Stanford University (Bleier, et al. 2004) KUTESat pathfinder' (Villa, Project Management of a Student Built Space Satellite: The KUTESat- 1 2005) Xi4/5 (Intelligent Space Systems Laboratory 2008)

NORAD 21ine Data

None

None

Passive control using bar magnets

NORAD 21ine Data

None

None

None

NORAD 21ine Data

None

None

Passive control using bar magnets

2.4 Command and Data Handling
The C&DH unit is one of the areas where CubeSats vary widely from one another. Some satellites are comprised of separate processors for each subsystem to process data created by the subsystem, while other satellites utilize a monolithic processor to handle all the tasks for every subsystem. Both methods have their merits and drawbacks. Table 6 summarizes some command and data handling configurations.
Table 5: Summary of communication systems
Name University Uplink 437.9 MHz Ax.25
~Dipole

Downlink 437.9 MHz Ax.25
~Dipole

Beacon 437.9. MHz CW Only when OBC is not working

Speed of link 9600 bps

AAU CubeSat (Aiminde, Bisgaard, et al. 2002) CanX-1 (Wang 2004) CanX-2 (Space Flight Lab 2007)

437.757 MHz MSK over FM ~wave dipole DTMF Fire-code to reset S-band based system 144 MHz Band Alnico DJ-C1 100mW Acts on received DTMF commands 1/4wave dipole 436.675MHz Tekk T-Net Mini 960 radio & BayPac BP-96A Modem

437.88 MHz MSK over FM ~wave dipole S-band based system Downlink 437.4000 MHz AFSK 1200 BPS Alnico DJ-C4 1110mW Transmits using Ax.25 or SRLL ~ wave dipole 436.675MHz Tekk T-Net Mini 960 radio & BayPac BP-96A Modem 437.386 MHz FSK AX.25

None

1200 bps

None Downlink 436.8375 MHz

cw
Maki Denki Radio Sends call-sign and telemetry using CW (Morse code) 1200 bps

CUTE-I (AMSAT 2006)

Quake Sat (Bleier, et al. 2004) KUTESat (Villa, Project Management of a Student Built Space Satellite: The KUTESat- 1 2005)

None

9600 bps

None

1200 bps

*In its final launch configuration, as there was a change of mission scope during the final stages of construction

12

Power

Name University

Uplink 145.835MHz Ax.25 Specially designed radio fire code

Downlink 437.490MHz Ax.25 FSK (packet) Specially designed radio

Beacon

Speed of link 1200 bps

Xi 4/5 (Intelligent Space Systems Laboratory 2008)

CW (beacon) 436.8475MHz

Table 6: Summary of C&DH systems
Name AAU CubeSat CanX-1 CanX-2 OBC Flight memory 512kB of PROM For Flight application code 256kB of flash ROM for changes to code 32MB of Flash-RAM 512 KB (triplicated for EDAC) 16 MB of Flash for storage of telemetry 2 MB of SRAM (triplicated for EDAC) 32kbyte ROM lkbyte RAM SRAM (4Mbit), EEPROM (256kbit 16MB- 32 MB DRAM (Diamond systems Corporation 2001-2008) 2MB flash 2 4MB 8MB RAM (Paruchuri 2006)

Siemens C161 micro controller

The Atmel ARM7 of 40 MHz ARM7 processor running at 15 MHz

CUTE-I

8bit H8/300

Quakesat

PC 104 form factor computer running Linux based on ZFMicro Devices ZFx86 Processor Clock lOOM HZ DragonBall VZ
@ 33 MHz

KUTESat

2.5 Power
Typically on a CubeSat, one cannot expect a lot of power for payloads. This is because all CubeSats rely on solar cells to generate power. The limited surface area on a CubeSat usually restricts the power output of the solar cells to under 2W. When in the absence of sunlight, stored power is used. Storage of power on CubeSats almost exclusively relies on Lithium-ion battery technology because of its high energy to weight ratio. Due to the wide spread use of Lithium ion batteries, it is not unusual to find a CubeSat that has a storage Capacity of almost 13Whrs. These limitations must be taken into consideration when designing other CubeSat subsystems. Table 7 is a summary of power systems used on CubeSats.
Table 7: Summary of power systems
Satellite

# of Solar cells
EMCORE Triple junction GaAs cells (efficiency of 28%) 10 cells 76mmи36mm Emcore triple-junction cells (26% maximum

Power generated

Battery 4 Lithium-ion polymer cells with a capacity of 940mAh each,

Storage Capacity (mAh.)

Additional features Controls power flow to subsystems to reset in event of latch up also doubles as an emergency beacon Peak power tracking Power shunting

AAU CubeSat

<2W

3680

CanX-1

1.7 W max

Polystor 3.7 V lithium-ion battery

3600

13

Literature Review

Satellite

#of Solar cells efficiency). 6 solar Cells 22 triple junction gallium-arsenide (GaAs) solar cells

Power generated

Battery

Storage Capacity (mAh .)

Additional features Emergency load shedding (Stras, et al. 2003)

CanX-2

2-7W

3.6 Lithium-ion battery

CUTE-I

Comprised of 4*6 em cells with 17% efficiency

4-parallel lithium ion batteries 1.5W 4160

Manages batteries Monitors Temperature of power management board Deployable panel to increase surface area 4 double sided deployable solar panels (Bleier, et al. 2004)

Quake Sat

Multi-junction GaAs solar cells with (18% Efficiency)

SW typical 14 W Max 2.2 typical

2 Lithium ion batteries

2800

KUSAT Cell type : Si Crystal (SHARP) Efficiency : 16% 10 cells in series/panel

Xi4/5

1.225W

Lithium Manganate 3.8 V

6240

Amount of power generated controls the beacon activation

2.6 Payload
The Payload subsystem varies between each individual CubeSat, as each satellite is designed for differing mission requirements. Some of the simpler payloads flown on CubeSats are imaging missions or radio experiments. More advanced payloads have included attitude control experiments, and flight testing of new space hardware. Most satellite design teams incorporate small experiments or devices to help defer the cost of launch. A good example of this is the University of Toronto's CanX-1 testing Xiphos' Q4 Card and CanX-2 carrying four different experiments on its upcoming flight. Because a CubeSat's mass, power and volume are typically limited, expression of interest by a customer in flying a payload on a CubeSat mission should begin early in the design process. This allows the satellite design team to take the payload specific mission requirements into greater consideration. Table 8 lists payloads that have flown on CubeSat missions or will be flown soon.

Requirements
The key considerations when designing a payload experiment for a CubeSats are; mass, volume and power. Ideally, from a satellite design perspective, everything needs to be kept small, light, low powered, and be simple to interface with. These may lead to requirements for a payload similar to the following: и A payload's mass to be less than 100 grams.

14

System Bus

и

A payload's power consumption must be under 100mA at 3.3V while in operation.

и
и

A payload's volume should be constrained to the volume of a typical cell phone.
Most of the payloads processing should be done on the payload subsystem.
2 A payload's interface to the rest of the system must be a simple one such as UART, SPI or 1 C.

и
и

Payloads will have a limited amount of downlink bandwidth available (this could limit output to less 500 kb a pass).
Table 8: Summary of Payloads
Satellite mission& objectives AAU CubeSat CanX-1 Payloads selected Camera module 2 Cameras Xiphos Q4 card Attitude control using Magnetic torquers Atmospheric Spectrometer, a GPS Signal Occultation Experiment a Atomic oxygen material degradation experiment a network communications experiment Different Radio protocols ELF magnetometer for Earthquake detection from orbit Radiation Dosimeters Camera module and Radio communications Testing a new Type of Solar panel Camera module

CanX-2

CUTE-I Quake Sat KUTESat 1 Pathfinder Xi-IV Xi-V Cape 1

2.7 System Bus
CubeSats present an interesting design challenge with system bus design, as they are typically too small to allow the use of common standard spacecraft data and power buses. To deal with this limitation, many standard terrestrial interfaces & protocols are utilized.

2.7.1

Spacecraft Interfaces

Larger spacecraft are not without standards. However, the standards typically used are unsuitable for smaller spacecraft. To illustrate this point, a brief overview of two commonly used interfaces (MIL-STD-1553 and SpaceWire) is presented in the following subsections.

MIL-STD-15538
MIL-STD-1553 was first proposed in 1975 to create a reliable serial interface between subsystems on fighter aircraft. Since then, this standard has found its way into other systems such as satellites. In general, MIL-STD-1553 is an addressable serial interface, designed to transfer data at 1 Mbit/second. In high reliability applications, MIL-STD-1553 usually consists of two or more separate but identical data buses as can be seen in Figure 4 (US Department of Defense 1996).

15

Literature Review

These multiple buses are supervised by a single bus Controller, and this controller is solely in charge of the bus. However, it often is supplemented with a backup. The bus controller is responsible for directing data traffic on the data lines and has several modes of operation including communication between itself and any remote terminal, communication from the terminal to itself, directing information from one remote terminal to another remote terminal, and finally a system wide broadcast.

Figure 4: Diagram of a typical Mii-STD-1553 bus {Wikipedia 2007)

Space Wire
SpaceWire is a standard developed by the European Space Agency to reduce the cost of development, improve reliability of satellites and space systems, while still meeting the processing needs of the spacecraft (ESA 2003). The physical layer of Space Wire builds heavily on the IEEE 1355-1995 standard which is designed to be a low cost low latency serial network interface (ESA 2003). In its most general and physical terms, SpaceWire is a point to point high speed data link consisting of 8 wires and a common ground. The 8 wires are divided into 4 pairs; Data In (+/-), Dataout (+/-), Strobeln (+/-) and Strobeout (+/-).The typical pin-out of space wire is shown in Figure 5. Each pair is used to create a low voltage differential signalling line; improving the reliability of the signal and the power consumption of the interface. Utilizing both data and strobe information lines allows for the data to be verified by relatively simple techniques (ESA 2003). With this configuration, SpaceWire has been designed with a minimum speed of 2 Mbit/s and a maximum speed of 400Mbits/s (ESA 2003).

16

System Bus

Inne:: slueldi art! i:~olarE-d from on~ anи:th'!r. Innt-!' .ihlt-ld,; around Sout. and I''<>ut. pair. ; nr~ .:::-m'kt"l:'t~~ tog-ether and to pin. 5 uf o:on ne<:tor.

Figure 5: SpaceWire configuration (ESA 2003)

Problems Usinn MIL-STD-1553 and Space Wire on Small Spacecraft
There are many problems with utilizing either SpaceWire or MIL-STD-1553B on a small satellite these include: connectors, signalling voltages, and the need for specialized transceiver devices. Typically, small spacecraft do not have the room to accommodate the standard receptacles for SpaceWire or MIL-STD-1553 (DB9 or a BNC variant, respectively). The lack of standard receptacles can be overcome through the use of more suitable connectors or printed circuit board (PCB) traces. However, this tends to defeat the purpose of using a standard. Signalling voltage can also be a problem on small spacecraft, as the available power is typically at lower voltages and limited in supply. Although this is not specifically a problem for SpaceWire, which is a low voltage differential signalling protocol, it is a significant problem for MIL-STD-1553, as its signalling voltages are well beyond the practical capability of picosatellites (peak signalling voltages are in the range of 18-27V). Finally, data transceivers for these standards are both expensive and are often too big for use on a CubeSat.

2.7.2

Past CubeSats and Their Bus Interfaces

KUTE SAT (SPI based)
KUTESat was a CubeSat developed by Kansas University. Unfortunately, it was aboard the Dnepr 1 launch which failed to achieve orbit on July 26 2006. The design of KUTESat consisted of a common SPI bus and its typical configuration is shown in Figure 6. However, due to problems with the SPI bus and the payload microcontroller, a simplification of the initial plan was required. In the final design, the main communications subsystem directly measured and reported the

17

Literature Review

payload information. The changes in KUTESat's system design can be shown in Figure 7 and Figure 8. In general, Serial Peripheral Interface (SPI) is a clocked serial interface and is capable of data speeds well over lMbit/s in full duplex (data in and data out on separate lines) utilizing 3 lines (plus a common data ground). Multiple devices can exist on the same SPI bus, but typically the device that will be communicating to the master must be signalled separately using a device select pin. SPI also lacks the direct ability to detect if the device it is communicating with is functioning or present, possibly leading to more complicated error checking routines.

Figure 6: Example SPI interface (Wikipedia 2008)

Figure 7: KUTESat system block diagram original (Paruchuri 2006)

Figure 8: KUTESat final configuration (Paruchuri 2006)

18

System Bus

XI 4 and5 {UART based)
Xi 4 and Xi 5 were both developed by University of Tokyo. Xi 4 was successfully launched in 2003 and XiS was launched in 2005 (Krebs 2007). Both satellites conducted radio experiments to test a new amateur data packet method. Xi 4 and 5 both utilized separate UART based communication protocols between the main onboard computer and separate subsystem components (Intelligent Space Systems Laboratory 2001). The system design of these satellites is similar to the earlier engineering prototype Xi-3 and its configuration is shown in Figure 9. Universal Asynchronous Receiver Transmitter (UART) is the hardware used to decode serial data transmitted across a serial Tx and Rx line. However, UART has become known as the commonly accepted term for asynchronous serial data transfer containing a 2 line plus a common data ground. Although there are no official requirements for speeds between two devices, as UART is designed to operate at any arbitrary clock speed between devices as long as it is the same on each, there are some commonly accepted speeds for which equipment is optimized for, such as 4800 bits/s, 9600 bits/s, 14.4Kbits/s up to 2.764800 Mbit/s.

Figure 9: Xi 3 system block diagram (Intelligent Space Systems Laboratory 2001)

NCUBE {1 2 C based)
NCube was a CubeSat developed by the Norway University of Science and Technology (бverby 2004) which was unfortunately among the CubeSats that were lost in the first Dnepr launch (Durham 2008). NCube's system architecture utilized two separate 19
1
2

C buses. One was subsystem

Literature Review

commands and the other dedicated to transferring data to the radios Terminal Node Controller (TNC) (0verby 2004). NCube's system design can be seen in Figure 10.

16/'.+f'a">ten~
1Б.2 rvHz

l

~r7
145 rvHz !

Figure 10: nCube System block diagram ((Z)verby 2004)

CubeSat Kits
CubeSat Kits are being offered commercially by Pumpkin Inc. The kits offer a structure and an optional onboard computer and power subsystem. The kit is based around a stackable bus and individual cards are stacked to form an entire satellite. This kit also offers most commercial
2 interfaces including SPI, UART, and 1 C allowing designers to develop an entire subsystem based

on the single low power processor. The Flight modules system architecture is found in Figure 11.

Commonality between designs
Most of the CubeSats presented here utilize low power computing devices and none have had a radio transmitter faster than 9600 bits/s. Additionally, most of the designs presented here utilized a shared bus (1 2 C or SPI) to reduce the number of conductors in the spacecraft. It is also interesting to note most connections to the downlink or TNC were through a lower speed UART.

20

Fabrication for a Space Environment

ms:~: ;'Y:;:,'"' '' ~ -_;~и_:_ ; ~~~ .:~~ T :j};
1/
l----1"'и~~]""7~
~~;~~~ ~~ :.:.7~~;;:~~i ~~'

-

~

-~

r-

I

~ I ~~::~I~
!:""'~'>':: ~, !

. . ... . ..

'

~;~:~-.~:;~~~==~иo :. j i ;.~~=:-;_,, I ~ ~"'~"'Jr---~:-;и~~-~~-;;J-иlи-~---T--и---T---~иии--T Tl"''"' 1 ----и J I OIJDOOJIJU/ r r r и, и' ! t dh . 7 ,
s. и = ! ...::.:_ииj
T

1 "

'irии
I

i
i

I

I

I I'

j

!

'

l
1

~J~::::~:~, . .,
r

[

1:..:ии ,~~- ' -:.:...3и.- ~.:..=
Sиi
!;.~

=oc _ииcc

и--и
5 ~~

__
5l

:>
и '"
I
t

ии и .

:'i
.51:A

ии>
S.YS

и} j ;~ [ ~: : ~; -;"и-.
~;:5: :. ~. ; 2.:

,>:r ...,..._ ,...,..

i: Ii
:;:~mj;?, .
.. ,;.,~nи-

i

:

J
,......1

r..::::

!>5

5.<::. : 5':.'5

. . и7и'и

i':. fc ::-,:::-:,и и - :;::~! -;:- ::ft-~ !; 1,} .!. , . :::: :~

: ....; : и .::.

:. .t.-....::-i. O:: ~~
!i.~.-~ .;;. ~:: ~ ~

Figure 11: CubeSat kit Interface (Pumkin 2007)

2.8 Fabrication for a Space Environment
Fabrication of satellites requires knowledge of the environment they will be operating in and knowledge of traditional space manufacturing methods. The following sections will explain some key features of the space environment for small satellites and will explain some of the manufacturing philosophies of the space industry and how small satellites are trying to change them.

2.8.1

Environment

Some of the major hazards to overcome are radiation, temperature variations, space debris, and out-gassing.

Radiation
Sources of radiation are typically divided into four groups; plasma, trapped particles, solar particles and galactic rays. Predicting the type and quantity of radiation can usually be found using models of the Earth's magnetosphere and previous findings from other satellites (Holbert 2008). With an expected radiation dose calculated for the life of the spacecraft, designers can begin to determine which components will survive the effects of the radiation environment. An

21

Literature Review

environment, which causes two main modes of failure for microelectronics: single event effects, and long term dose effects. Single event effects happen when high energy particles strike a transistor within an electronic devices core, and change the transistors material properties either temporarily or permanently depending on the strike. These radiation effects are at a transistor level, what happens to the system depends greatly on the particular transistor hit. Typically the least damaging cases would be a single event upset (SEU) where the data stored or being processed on the transistor is bitflipped (a binary 1 is changed to a 0 or vice versa). The next damaging scenario happens when a transistor carrying important information on the chip (like the exit condition for a loop), is struck by radiation. This causes the device to lock up in an inescapable loop and this event is classified as a single event latch-up (SEL). Typically this problem can be corrected by turning the device on and off. One of the worst single event effects happens when the transistor controls a large flow of current as in the case of a power MOSFET. This damage even if temporary could cause other components to burnout, destroying the device. This effect is known as a single event burnout (SEB) (Larson and Wertz 2005, 220) . Fortunately there are several methods to overcome SEU's, SEL's and even some SEB's. These include error detection and correction methods (EDAC) in hardware and software, core shielding, selection of device's substrate material, and changes to the device's core design for radiation hardening. Long term dose effects can be equally devastating. They can be modeled as a gradual addition of electron holes to the transistors gate or base (depending on variety of transistor). This effect then changes the threshold voltage of the gate or base. Fortunately Galysh et al. (2000) have done testing and found most typical devices can handle up to 20 Krads which means most devices in low earth orbit can safely run for 6 months to a year in low earth orbit without additional measures or shielding.

Thermal Management
Thermal management is a huge issue in spacecraft design. Although most electronics function best in cold conditions, a spacecraft can easily experience temperature swings from -35░C to 60░C. One key problem for pica-satellite developers is that most components used in small spacecraft design were intended to be at least partially cooled by convective air currents. Another problem with consumer COTS parts is they are not intended to be thermally cycled as

22

Fabrication for a Space Environment

often and as quickly as a device in the space environment. However, these problems can be overcome with the use of heaters and smart PCB design. Most electronic devices utilize ground pins or planes to eliminate their waste heat, providing a direct thermal path for heating and cooling of individual devices. These pins allow the PCB designer to link heat sensitive parts to thermal management systems. In the realm of spacecraft design these thermal systems can be as simple as parts of the spacecrafts structure acting as thermal capacitors or radiators.

Micrometeorites/ Space debris
Satellites in low earth orbit (LEO) typically travel at around 7 km/s. A collision with even a small screw in a complementary elliptical orbit may cause great amounts of damage. However, without knowing the location of every piece of debris in space (as most are too small to track), only estimates can be provided on which orbits may experience the greatest risks of collision. Typically, when this issue is analyzed, the risk assessment estimates are determined from formulas based on the exposed cross-sectional area. Fortunately because of a CubeSats size, the risk of a collision is greatly reduced. However, CubeSats themselves represent a potential hazard to many other larger spacecraft. To minimize this risk, it is necessary that CubeSat launchers take great care in ensuring their payloads reach to their published and desired orbits. It is also

important for CubeSat developers to design the spacecraft with the fewest separable parts in order to reduce the chance of adding to the space debris problem.

Out-Gassing
Out-gassing is the escaping of minute amounts of solvents or other gases trapped in components used on a spacecraft. If there is a larger amount of solvents or composites used on a spacecraft, the torques created by out-gassing could result in an attitude control problem. Even if there is not a large force created by the out-gassing there is the potential for the solvent or other material to affect solar cells or optical equipment on the satellite or another satellite on the same launch vehicle. Fortunately most suppliers of adhesives and solvents offer low out-gassing

varieties of their products and these should be used whenever possible to avoid this problem. Another way to reduce out-gassing is to place the satellite in a vacuum chamber on the ground for an extended period of time cycling between high and low temperatures. This procedure known as a bake-out will allow the gasses in the adhesives and materials to bubble out while the spacecraft is still accessible for cleanup.

23

Literature Review

2.8.2

Space Manufacturing

As it has been stated earlier there is a special methodology surrounding spacecraft manufacturing. This methodology typically mandates that all components used on a spacecraft be from specialized suppliers and be accompanied by detailed documentation of their production, testing, and storage. Regardless of the methods used by the CubeSat developer there is typically a need to adhere to of the rules regarding the documentation and manufacturing of spacecraft to be launched as a secondary payload.

Traditional Approach
Traditionally, manufacturing for a space environment required a different approach to manufacturing. First, most early spacecraft were manufactured using prototype shop techniques, with expert technicians in clean rooms assembling the spacecraft, using only space qualified parts. This traditional approach was born from the early space missions like Pioneer, Apollo and Voyager, and at the time most failures could be attributed to faulty components. From the problems experienced in earlier missions, a focus was placed on improving the reliability of the mission by improving the quality of the individual parts (Fleeter 2000). Despite the improvement of commercial processes, the space industry is reluctant to abandon space qualified parts and the sometimes error prone hand manufacturing and testing procedures associated with them. Whether or not this is the correct way to improve the reliability of the spacecraft today, is not an issue, because in the end, it is typically a large space agency that will review the Pica-satellite before it is placed on the launch vehicle. In the end this will require the Pica satellite to be built in clean room conditions, or to be cleaned thoroughly prior to launch.

Typical CubeSat Approach
Because CubeSats typically don't have the luxury of expert technicians, perfect clean rooms and expensive space qualified parts, CubeSat developers have to look at other ways to improve reliability of the spacecraft. Fortunately for CubeSat developers consumer COTS parts have drastically improved in reliability since the 1960's, because of improvements in both the manufacturing process and integration of more external components into the device. Although there is a risk associated with building more devices into a single package, automation in the manufacturing and testing processes has improved these devices' overall reliability and defects can be easily tested for. With these improvements to consumer COTS parts, the time and money previously spent tracking individual space qualified components can now be better spent on 24

Discussions on CubeSats Performance

improving the design and speeding up the development schedule (Fleeter 2000). An additional benefit of using consumer COTS parts is that _these devices typically contain more of the supporting circuitry inside. Hence there are fewer connections for the designer/assembler to get wrong and less components to potentially fail when in orbit. Spacecraft reliability cannot be gauged directly from the choice of space qualified or consumer COTS parts, and in no way is it possible to tell which choice is better without doing a failure modes analysis study. However, consumer COTS parts do have the advantage of simplifying that analysis.

2. 9 Discussions on CubeSats Performance
Missions involving CubeSats have not been highly successful for several reasons. The author believes one of the primary reasons may be due to lack of experience of a CubeSat design team begins with. However, some common mistakes listed here can be avoided, and some particular missions can be used as a guide for an inexperienced satellite design team.

2.9.1

CubeSat Failures and Problems

On a CubeSat mission, many problems could happen. The most common serious problems include launch vehicle failures, communication failures, power failures, and electronic interface issues.

Launch Vehicle Failures
This problem has claimed the most CubeSats to date. The launch failure of Dnepr 1 caused 14 teams to lose their satellites including KUTESat and NCube (Durham 2008). Even if all types of precautions are taken to avoid this problem, there is always a risk of launch failure. One method to mitigate this risk is for a team to build two identical satellites, although this approach may seem expensive. A team should be in the practice of ordering operational spares for the inevitable damaging of a component that happens during the development and integration phase. By utilizing spares and purchasing additional components as needed, the team could easily build an identical satellite in the period of time it takes to organize another launch.

Communications Failures
This problem was experienced by CanX-1. The satellite was launched and deployed but the communication between the ground station and the spacecraft failed (AMSAT 2006). There are a few methods to mitigate this problem. The first approach is to have a large margin on the link

25

Literature Review

budget to allow for an improperly aligned or stuck antenna. Also, the frequencies of the satellite can be widely published so amateur radio operators with better equipment can listen for the satellite. Another good approach is to implement an emergency beacon that will transmit in the event that other systems fail.

Power Failures
After Quakesat had been in orbit for 6 months it experienced the loss of both of its main batteries. This problem led to the frequent rebooting of the satellite. The loss of the batteries was perhaps due to the electrolyte drying out in the spacecraft's battery pack (Bleier, et al. 2004). The Quakesat team reasoned that the power failures could have been avoided if the battery packs were sealed better or protected from high temperatures using insulation (Bleier, et al. 2004). Another approach to mitigate this problem would have been to place redundant battery packs in different locations to avoid all of the battery packs being damaged the same way at the same time. Although given the size of CubeSats in general this may not be as beneficial as the other suggestions provided by The Quakesat team.

Electronic Interface Issues
This problem was encountered by the KUTESat team late in the design process (Villa 2005). In this particular case, part of the problem was getting two different microcontrollers to communicate over a standard but more complicated interface. The other part of the problem was not realizing the limitation of one of the microcontrollers. The easiest method to avoid this problem is to use extremely simple interfaces such as UART, or TIL (Transistor-Transistor Logic). Checking data sheets of the candidate devices with specific attention given to the interfaces and features most likely to be used will also help mitigate this problem. A more reliable approach would be to test this type of communications link early on a bread board, with examples of the features to be used on the microcontrollers being implemented.

2.9.2

Checklists and Documentation

One of the most over looked aspects of pice-satellite design is the preparation of full documentation. Some of the reasons for poor documentation are rushed schedules,

inexperienced teams and a lack of industry experience. The author has found that developing documentation and more importantly, easy to reference checklists ensures that no major steps are missed in operation. These checklists also remove guess work when troubleshooting

26

Discussions on CubeSats Performance

problems. Checklists should be used regularly and should act as a program for the team to work through without any deviation. It should be noted that even limited checklists are invaluable to any satellite operations team. Documentation should be created to supplement any checklist and should serve to explain why routines in a checklist are followed. This said, writing checklists and documentation for every contingency is almost impossible, but even the act of writing some checklists allows for a greater understanding of the system on a whole, and serves to ensure the development team fully understands the system.

2.9.3

CubeSat Successes

Some of the most successful missions utilized the simplest approaches to solve their problems. In addition, they considered simple mission requirements. The more notably successful missions are CUTE-I, Xi-4, and Xi-S.

CUTE-I
CUTE-I has been operational ever since its launch in 2003 (AMSAT 2006). Its simple radio link layer (SRLL) radio experiment has been very successful and many amateur radio operators have received its signal (including the author). The ground station communicates with the satellite via DTMF codes, while the satellite transmits data back to the ground station using multiple redundant radios. The CUTE-I's success is attributed largely to its overall simplicity in its solutions for its mission goals.

Xi-4 and Xi-5
Both of these satellites are highly successful missions returning images of the Earth. In the authors' opinion, based on all the CubeSats reviewed, these satellites are the most successful. This success is largely in part due to the excellent design process applied by the ISSL development team, building three consecutive prototypes before developing the final space ready hardware. Each prototype provided the ISSL design team insight on the overall design and offered a chance for the team to make changes to both the hardware and the software design. Xi-4 and Xi-S also didn't require strict pointing budgets and relied on passive stabilization. These successes show that CubeSats can be an extremely cost effective way of testing hardware for space qualification. Also it should be evident that most issues that can adversely affect a CubeSat can be dealt with in the design stages of a mission. Despite the possibility of failure,

27

Literature Review

development of a CubeSat is a great opportunity to allow small companies and universities to venture into the realm of spacecraft design.

28

CHAPTER3
SYSTEM REQUIREMENTS

When first proposed, it was decided that RyeSat would be a standard single cube CubeSat, weigh no more than one kilogram and not exceed the dimensions set out by California Polytechnic Institute and Stanford University. It was also decided that this satellite would be used as a learning tool for the satellite design group at Ryerson University. This satellite would explore modular satellite construction techniques and would carry a camera and an additional payload to an orbit of opportunity not exceeding 650 km. Furthermore, RyeSat would experiment with MEMs-based attitude sensors for future use on small satellite missions.

3.1 Overall mission
In addition to the original mission objectives, RyeSat will be constrained to the following requirements proposed in the initial proposal and the lab development environment. These exact requirements are found in Table 9.
Table 9: Overall system requirements

#

Requirement RyeSat shall test and Demonstrate MEMS based Rate sensors in the space environment. RyeSat shall take images of the Earth and moon. RyeSat will conform to the standard size CubeSat standards (V9.0}. RyeSat will document all of the design process for future reference. RyeSat will utilize as many COTS (commercial off the shelf} parts as possible. RyeSat will be programmed in a higher level programming language such as C RyeSat will utilize the same design process as Ryerson's 2005, 2006 CanSat project.

Origin Proposal Proposal Proposal In house Requirement Proposal In house Requirement In house Requirement

Verification method Design Design Design Design Design Design Design

01

02
03

04
OS

06 07

29

System Requirements

#
08 09 010 011 012 013 014

Requirement RyeSat shall be designed to survive the mission life of 6 months to a year RyeSat shall be designed to send mission health and payload data back to Earth via an amateur radio link. The satellite shall be as simple in design as possible from a systems level perspective. RyeSat shall store important payload data until it can relay the data to a ground station. The team will obtain appropriate licenses for the frequencies used. The team will obtain the appropriate orbital debris mitigation documentation. RyeSat shall use modular design techniques

Origin Proposal Proposal Proposal 09 03 CubeSat specifications V9.0 03 CubeSat specifications V9.0 Proposal

Verification method Design Design Design

Design Design Design

3.2 Mass and Power Budgets
To also give some guidelines in the design of other subsystems the following mass and power budget was created (Table 10).
Table 10: Design budget

mass(g) System Structure Power ADS ACS Payload C&DH COMM Thermal Connectors Total *note structure 400 100 Voltage (V) 0 3.3 3.3 3.3 3.3 3.3 6 3.3 3.3 Draw (mA) 0

power (mW) all normal 0 16S 0 0 0 990 0 0 "'S 1160 Normal +transmit 0 16S 0 0 0 990 1680 0 "'S 2840 Normal +ADS 0 16S 990 0 0 990 0 0 "'S 21SO Normal +ACS 0 16S 0 2640 0 990 0 0 "'S 3800 Normal payload 0 16S 0 0 990 990 0 0 "'S 21SO

so
100

so
300 800 300 300 280 700 "'2

so
100 100

so so

1000 contains the mass of circuit

0 16S 990 2640 990 990 1400 2300 "'S 9480 boards

3.2.1

System bus

It was decided that requirements for each subsystem should be developed next and the requirements fro the way these systems interact should be described first as these choices would greatly affect the subsystem design Table 11 is a list of requirements considered for the design of the system bus. The end result of these requirements lead to the choice to use I2 C.

Table 11: System bus requirements

30

Mass and Power Budgets
~

#
581 582 583 584 585 586 587 588 589 5810 5811 5812 5813 5814 5815 5816 5817

Requirement The system bus standard must accommodate modular subsystem design The standard must allow a means of isolating malfunctioning subsystems The standard must be suitable for a Cube5at and smaller spacecraft The data transfer standard must be a lower signalling voltage standard The standard must utilize physically smaller connectors or be independent of connector design. The standard should be low cost The standard shall not require any additional or highly specialized equipment. The standard shall have a terrestrial industry equivalent (to allow for the use of lower cost parts) . The standard must be reliable and simple The standard should utilize the fewest interconnects possible The standard should not require substantial amounts of code to operate The standard should be able to automatically detect errors and attempt to correct them. The standard must have methods to recover from data errors. The standard must be able to remain reliable for prolonged periods of continuous use. The standard must show some immunity to magnetic fields. The standard must show some immunity to temperature changes. The standard should allow for faster data rates in the future.

Origin 014 09,08,014 014 03,04 011 OS 010 014 010 010 06,010,014 08 08 08,010,014 08 08 014

Verification method Design Design Testing Design Design Design Design Analysis Design Design Analysis Design Testing Design Design Testing Design Testing Design Testing Design Testing Design Design Design

3.2.2

Environmental/ thermal

The environmental requirements were derived from initial analysis of the space environment and the design lifespan specified in the overall requirements. Table 12 highlights these requirements.
Table 12: Environmental requirements

#

Requirement The thermal subsystem shall only use passive means of heat dissipation.

Origin 08,014

Verification method Design

E1

3:1

System Requirements

#

Requirement RyeSat's thermal system will keep the all components in their normal operating temperatures which will be assumed to be-40oc to 80oc unless tighter tolerances are specified within a particular subsystem. Thermal management subsystem shall be autonomous. Thermal management systems will be placed on every subsystem and they shall as similar in design as possible.

Origin

Verification method Analysis Testing Design Design

E2

08,014

E3 E4

08,014 014

3.2.3

Power

The power requirements were derived mainly from the overall mission lifespan and our system bus choices. Table 13 lists these requirements.
Table 13: Power requirements

#

Requirement The power system should provide adequate power to perform operations while in orbit. The power system will be rechargeable. The power system will be fault tolerant. The power system will be capable of reporting its condition. The power system shall be designed to survive the vacuum of space. The batteries selected for the final design shall be selected to survive the vacuum of space The system must supply a 3.3V uninterruptible line for the C&DH module. The system will supply a 6- 5 V uninterruptible line for the radio. The system shall have controllable lines for non essential systems. The system will supply a switchable 3.3V 250mA line for the ADS. The system will supply a switchable 3.3V 750mA line for the ACS. The system will supply a switchable 3.3V 250mA line for the payload. The system will supply a switchable 3.3V 800mA line for the thermal management system. The system shall only use the top surface of the board (heater and its control circuit will be placed on the bottom). The system shall perform a check before enabling itself on the system bus.

Origin 08 010 08 010

Verification method Analysis Design Design Design Testing Design Design Analysis Test Design Test Design Design Design Design Design Design Design

P1 P2 P3 P4

PS

08

P6 P7 P8 pg P10 P11 P12 P13

08 08,014 08,014 08,014 08,014, Design budget 08,014, Design budget 08,014, Design budget 08,014, Design budget E4

P14

Design Design Test

P15

SB2

32

Mass and Power Budgets
4,

#
P16 P17

Requirement The solar cells shall be used as a rough means of attitude estimation. The power subsystem shall be designed to survive be functional between -40░ to 85░C

Origin A2 E2

Verification method Design Analysis Design Test

3.2.4

Attitude Determination and Control

Attitude pointing requirements came from both the initial proposal and the payload. The decision to split the ADCS up into two separate subsystems was done to simplify the work breakdown of the team. Table 14 lists these requirements
Table 14: ADCS requirements

#
A1 A2 AD1 AD2 AD3

Requirement The ADCS will be split into two parts RyeSat shall be designed to be stabilized on all 3 axes. The ADS shall be designed to allow for integration of a GPS device. The ADS shall determine and record its orientation. The ADS will calibrate sensors in software

Origin

Verification method Design Design

014, proposal 01 01

Design Design Design Analyze Test Design Test Design Test Design Analysis Design Analyze Design Analyze

AD4 ADS AD6 AC1 AC2 AC3 AC4 ACS AC6 AC7 AC8

The ADS will be functional between -40░ and 85░C The ACS will perform a check before it enables its self on the system bus. The ACS shall only utilize only the top surface of the board The ACS shall control its attitude using magnetic torque rods. 2 The ACS shall have provisions for a 3 reaction wheels. The ACS will be effective between 400-1000 km orbits The ACS shall have modes that automatically de-tumble the spacecraft The ACS will allow for the use of different control 2 algorithims The ACS will perform a check before it enables its self on the system bus. The ACS shall only utilize only the top surface of the board The ADS will be functional between -40░ and 85░C

E2 SB2 E4 A2

SB2 E4 E2

Design Test Design Design Test

2

Late changes to requirements

33

System Requirements

3.2.5

C&DH/Comm Subsystem

The requirements for the C&DH came from a literature review of existing CubeSats and the design life time and the system bus choices. Some of the communications requirements were outlined from the CubeSat design specifications, while others were derived from the initial proposal and its requirements. Table 15 shows lists these requirements
Table 15: C&DH requirements

#

Requirement The onboard computer shall be fault tolerant. The on board computer shall be reprogrammable in orbit. The onboard computer shall be programmable in C. The onboard computer shall be radiation tolerant for the mission life. The onboard computer will be supervised by a watchdog or another more reliable but simpler microcontroller. The onboard computer Shall have a "fire code" reset option. The OBC shall be designed to monitor its system health and report failures and errors as the mission proceeds. The OBC shall intelligently decide if it is safe to perform a requested mission task (i.e., check battery levels; ensure devices are deployed ... etc.) All subsystems shall interface with the OBC directly using a simple protocol The radio shall be capable of transmitting the payload's data back to Earth. The radio shall be designed to have the capability to be turned off by remote command. The radio shall not transmit until15 minutes after deployment. The radio shall transmit on its lowest power settings 15 minutes to 30 minutes after deployment. The radio shall begin transmitting at its highest power setting 30 minutes after deployment. There shall be a "fire code" reset signal that the communications system will forward to reset the OBC. The system must operate on a 3.3V uninterruptible line for the processors. The system must operate on a 5 V uninterruptible line for the radio. The system will have two digital modems, one DTMF and one Bell 202.

Origin 08 08, 014, 011,02 06,014 08 08 OBC1 08 OBC1 09,011 OBC1 08 $81,014 09 03, CubeSat specifications V9.0 (as per FCC Rules) 03, CubeSat specifications V9.0 03,CubeSat specifications V9.0 03,CubeSat specifications V9.0 08 P7 P8 08, 09,011

Verification method Design Test Design Design Design Test Design

OBC1 OBC2 OBC3 OBC4

OBC5

OBC6 OBC7

Design Design

OBC8

Design

OBC9 OBC10

Design Analysis

OBC11

Design

OBC12 OBC13 OBC14 OBC15 OBC16 OBC17 OBC18

Design Design Design Design Test Design Design Design

34

Mass and Power Budgets

#
OBC19 OBC20 OBC21 OBC22 OBC23 OBC24 OBC25 OBC26

Requirement The system will have EEPROM space onboard for local storage. The system will monitor amateur radio via bell 202 modem chip Both processors will enable the WDT timers and service them accordingly. The systems backup processor will monitor a fire-code detector. The systems backup processor will reset the entire satellite should it detect aberrant behaviour. The backup processor will be subject to a mandatory reset every 60s. The system will be the only source of 12 C bus pull-up resistors. The system will be the only source of the MCLR (master reset) pull-up resistor. All mission data will be stored (mission, progress, payload data) in non-volatile memory at regular (short) intervals and only erased when confirmed archived by ground station. All data packets communicated between processors will be verified by an embedded checksum. The Payload will perform a check before it enables its self on the system bus. The Payload shall only utilize only the top surface of the board The Payload will be functional between -40░ and 85░(

Origin 011 09,08 08 08,09 08 08 08, SB specifications 08

Verification method Design Design Test Design Test Design Test Design Test Design Design Design

OBC27

09,011

Design

OBC28 OBC29 OBC30 OBC31

SB specifications SB2 E4 E2

Design Test Design Test Design Test Design Test

3.2.6

Payload

The requirements for the payload came directly from the decisions made regarding the OBC and the initial proposal.
Table 16: Payload requirements
#
Pll Requirement RyeSat shall take images of the Earth and moon. The images shall have a resolution of 5-10 km per pixel when viewing the Earth. The images shall have a resolution of 50-100 km per pixel when viewing the moon. 2 C communication interface to the onboard Payloads will utilize an 1 computer. The Payload will perform a check before it enables its self on the system bus. The Payload shall only utilize only the top surface of the board The Payload will be functional between -40░ and 85░C Origin Verification method Design Analysis Analysis Design Design Test Design Test Design Test

02
Pl_l Pl_l SB specifications SB2

PL2 PL3 PL4 PL5 PL6 PL7

E4
E2

35

CHAPTER4
SYSTEM ANALYSIS AND DESIGN

RyeSat is comprised of 5 subsystems: C&DH, Power, ADS, ACS, payload (Figure 12). These subsystems are connected using a standard interface based on the
1
2

C bus. The satellite' s system

block diagram is shown in Figure 13: System block diagram (hardware specific)Figure 13

C&DH board/rad Power board Reactio

yload board camera

Figure 12: Satellite configuration drawing

37

System Analysis and Design

ADS SUBSYSTEM

.-----------Anten~ na=============lи
PTI/ other ontrol pins Audio

f

5V Radio

C&DHICOMM !'UBSYSTEM

12C& power for data switchsllemp sensors

l _l

i'CData -Other data busPower- Logic signalAUDIO и

Figure 13: System block diagram (hardware specific)

4.1 Architecture of Rye Sat
One of the key tasks for RyeSat was to define a method for communication between each of the individual subsystems. It was decided that the interface must be flexible to deal with future design considerations, be proven reliable and be standard in industry. Furthermore, it was noted early in the design phase that there was little chance that this mission or future missions would need an internal data transfer rate greater than 100,000 bit/sec, as the available radios designed for smaller satellites are typically limited to 9600 bits/sec. It was also noted that there are only 5

38

Architecture of RyeSat

subsystems on the spacecraft capable of creating data. These considerations led to the adoption of the
1

2

C based standard.

The standard chosen for the RyeSat specifies both a data bus and a power control bus (Figure 14). This type of standard is useful for isolating each subsystem from the rest of the spacecraft. This standard also has the potential to produce individual subsystems that can later be marketed to other interested companies as proven hardware. The spacecraft bus has a 3.3V uninterruptible power source for mission critical subsystems, a 5 volt uninterruptible source for the radio, 4 separate controllable power sources for each of the subsystems, and a 2 line data bus used to communicate between the subsystems. Figure 15 illustrates the full data interface (Alger, et al. 2007). The data bus is based on the
1

2

C standard which is already designed to handle multiple
1
2

masters, corrupted commands, and slight variations in clock speeds. The

C standards also offer

standard data transfer rates of 100 Kbits/s, 400 Kbits/s, and 3.4Mbits/s. To improve the reliability on the first RyeSat, the
1

2

C bus clock speed is limited to 100Kbits/s and a data switch is placed

between each subsystem and the main data bus. The data switch is designed to remain closed until the subsystem performs its own start-up checks and deems itself operational and able to communicate with the rest of the satellite. However, such a check will only ensure that the subsystems firmware is still functioning properly and will not act to disconnect the subsystem in the event of its own single event latch-up. In future revisions, a windowed watchdog timer ("dead-man" style switch) will be developed and the subsystem will be expected to continually send a varying pulse to ensure it is working correctly, if the pulse stops (or is irregular) the switch will disconnect the subsystem from the data bus. Furthermore, if there happens to be a subsystem that is constantly causing problems, the power subsystem will simply turn off the faulty subsystem.

39

System Analysis and Design

...............
Power

~

иData bus

Figure 14: Systems block representation of the proposed standard.

Figure 15: Electrical Schematic of Interface used on RyeSat.

4.1.1

Advantages of an 12 C Data Bus
1

Phillips originally developed the

2

C standard in the late 1980's to simplify the number of

interconnects between devices in consumer electronics such as televisions and VCRs (Phillips NXP Semiconductor 2000). Since then,
1
2

C has become a widely accepted standard for lower speed

(100Kbits/s-400Kbits/s) devices such as analog to digital converters, EEPROMS and sensors. The key advantage of
1
2

C is its software addressable interface. This style of protocol allows for a

drastic simplification of the hardware used to connect devices in spacecraft and allows for a simple and elegant system design. Another benefit to
1
2

C is the possibility of adding completely

different subsystems to a known working system without any modification to the hardware of the existing system, allowing older proven parts to seamlessly integrate with new payloads. Furthermore,
1
2

C is capable of running multiple masters (one microcontroller is capable of

requesting data from another microcontroller on the bus without going through an intermediary bus controller), allowing future designers to utilize similar design architectures as found in MIL1553b at a faster speed. Additionally,
1

2

C has natural noise immunity, a wide working voltage

range; it is also insensitive to temperature swings and consumes a minimum amount of power (Phillips NXP Semiconductor 2000). Finally,
1

2

C transceivers are already found in many

microcontrollers and flight computers, allowing for a relatively easy adaptation of technology developed on smaller satellites to larger ones.

4.1.2

Disadvantages of an 12 C Based Standard

The interface proposed is not entirely free of problems and has its tradeoffs including reliability issues associated with sharing a common bus, lack of speed associated with time division data

40

Thermal Design

transfer methods, and the possibility of utilizing all available addresses on a complex satellite.
2 Most reliability issues with an 1 C based interface can be addressed with simple solutions; some

of these solutions can be hardware based, like the proposed dead man switch, and others can be software based solutions, like an intelligent power/bus monitor subsystem . Either way reliability
2 can be improved upon with little more than minor design changes that are already within the 1 C

specification. Additional ways to improve bus reliability would be to run a secondary I2 C bus in parallel, similar to a standard MIL-STD-1553 system, this could potentially allow the system to recover gracefully if only one bus was experiencing problems. However, this interface will always have problems associated with shared time access busses, which must be kept in mind when designing a subsystem using this specification. Nevertheless, this problem can be mitigated if it is encountered by using faster data transfer speeds. Address limitations will most likely never be a problem on small satellites as there are theoretically 128 possible combinations with 7 bit
1

2

C

addressing. The only real addressing problems will happen when specialized components, like temperature sensors, share identical addresses.

4.2 Thermal Design
The design process illustrated the need for a thermal control subsystem to protect thermally sensitive subsystems such as the battery and the camera. It should also be noted that most of the commercially available integrated circuits (ICs) are designed for automotive thermal

environments (-40░C to 85░C in operation). To mitigate the cold case, a thermostat system was developed and heaters were appropriately sized to keep the spacecraft warm in the cold case. To augment this system,
1

2

C based temperature sensors are attached to each of the subsystems to

monitor and gather health data to help designs for future missions. From base line calculations, it was found that the hot cases were not a major concern for the spacecraft and additional methods to cool the spacecraft would greatly affect the mass and power budgets. Figure 16 and Table 17 illustrate how the thermal subsystem interacts with the rest of the spacecraft.

41

System Analysis and Design

ACS

-

I

Thennoobot controHed heater

J
0
0" Ill
<II (J

12CTomp Senaor

I
I
Thennootot

C&DH /COMM
12C Temp
Senaor

I

Thonnootot

oontrotled
healer

I

ADS

controMed
healer

I
I
Th<lnnootot contro"-<t

c.
0"
Ill

c::

.L. r

12C Tomp

Senoor

I I
Thonnootot

Power

heater

Payload

controu.d h<lolor

r

12C Temp Sen aor

I

-

12C Temp SenoO<

I

Figure 16: Thermal subsystem block diagram

Table 17: Interface matrix
Type Power Data Structure Thermal Electrical noise Input 3.3V 850 mA source 3.3V uninterruptible source
2 C based interface (temperature sensors) Standard 1 2 Temperature in 1 C format

Output

Attached to all cards Local temperatures 6 micro heaters (system wide total of 2.3 W of heat) Heat loss through structure Possible noise due to Switching of heater (f< .5Hz)

Analysis
Thermal analysis was conducted using the methods outlined in (Larson and Wertz 2005). Table 18 to Table 21 and the additional tables found in Appendix A were used to ensure the heaters were adequately sized for the mission. First, the hot case was calculated using the assumption that one face of the CubeSat was facing the Sun; another was facing the Earth, while the remaining sides were facing cold space. This simplified the process of determining the geometric factors for albedo and Earth infrared effects. From these assumptions, the heat flux for each side was calculated and summed together. Next, assumptions regarding heat generated by the parts within the spacecraft were added to this heat flux. Finally, radiative means of expelling heat were modeled and temperatures on the surface and within the spacecraft were calculated. This process was carried out similarly for the cold case but with the assumption the sun facing side was actually facing cold space.

42

Power Subsystem

The 1000 km orbit was determined to be the worst case for RyeSat thermally as it was the coldest. It was determined that a minimum of 2.3W of heating was needed to satisfy the typical minimum temperature requirements for most components on the spacecraft (-40░C). For the other extremes (SOOKm), it was established that the spacecraft would have no problems with components over-heating as the spacecraft's overall temperatures would be around 79░C, within the components cooling requirements.
Table 18: Spacecraft overall temperature at 1000 km without heaters

overall
Q power consumed [W] Q total in HOT [W]

HOT

COLD

T average surface rq T average insiderC)

3 23.93419004 28.61755116 70.45526918

0.5 6.567948 -54.6972 -43.2162

Table 19: Spacecraft overall temperature at 1000 km with 2.35W heater

overall
Q power consumed [W] Q total in HOT [W]

HOT

COLD

T average surface (oC) T average inside(OC)

3 23.93419004 28.61755116 70.45526918

0.5 8.917948 -37.3496 -21.7608

Table 20: Spacecraft overall temperature at 500 km without heaters

overall
Q power consumed [W] Q total in HOT [W]

HOT

COLD

T average surface rq T average inside( 0 C}

3 25.7198 34.0923 79.0513

0.5 7.9041 -44.3531 -30.5365

Table 21: Spacecraft overall temperature and at km with 2.3SW heater

overall

HOT

COLD

Q power consumed [W] Q total in HOT [W] T average surface (oC) T average insiderC)

3 25.7198 34.0923 79.0513

0.5 10.2541 -28.9794 -11.0548

4.3 Power Subsystem
The power subsystem is one of the key subsystems on RyeSat; it is responsible for charging the satellite's battery, using power from the solar cells. This subsystem will also be regulating and controlling the flow of power to secondary systems such as the ACS, ADS and payload. This

43

System Analysis and Design

system will also be providing uninterruptible power to mission critical systems such as the radio and C&DH module. To accomplish these tasks, the functions and structure illustrated in Figure 17 was implemented into a single subsystem. Table 22 illustrates the interaction of the subsystem with the rest of the spacecraft.

Uninterruptible 3.3V and 5V regulation (hardware}

Power regulation 3V x4 separate lines (Hardware}

Power subsystem

Figure 17: Power subsystem function block diagram

Table 22: Interface matrix
Type Input Output 3.3 uninterrupted SV uninterrupted Battery Feed line 1 (3.3V 200 mA) Feed line 2 (3.3V 800 mA) Feed line 3 (3.3V 200 mA) Feed line 4 (3.3V 800 mA)

Power

11 Raw Solar cells Battery

Data

Programming interface (PGC PGD) System wide reset (activates when brought low) Commands to turn on supply lines Commands to turn off supply lines Commands requesting Battery Voltage Commands Requesting battery current Commands requesting remaining battery life 1 Standard PCB card (see structure document for details) 1 micro heater

Battery voltage Battery current draw Estimated Battery life in mAhrs Connection to structure in corners 4 thermal pads in corner Possible 1 MHz from DC-DC converters

Structure Thermal Electrical noise

44

Power Subsystem

Analysis
To provide a base line of the power available, three test cases were considered; these are the Sun directly facing a single side of the spacecraft, the Sun striking a edge directly on exposing two sides at an equal angle, and the Sun facing a corner of the spacecraft striking three faces at an equal angles. It should be noted that these cases are only ideal cases and, without a maximum power point tracking system (MPPT) it is unlikely to see such power output from the solar cells. Table 25 and Table 26 show power budgets, and were used to determine if at any point the power subsystem would have to cut off a secondary subsystem to maintain power for mission critical systems. The equation that is used to estimate the output of the solar cells is shown below in 4-1.

P

= cos(B) и 1Jsolarcell и S иA

4-1

Where 8 is the angle of the cell to the Sun, 1Jsolarcell is the efficiency of the solar cell, A is the area of the cell, and S is the solar flux, S

= 1320 W jm 2 .

Table 23: Solar cell power generation assumptions Satellite power calculations temperature Solar constant Solar cell efficiency BOL loaded Solar cell efficiency EOL Solar cell voltage @ max power Solar cell current @ max power(cm 2 ) Solar cell area cm 2 28 deg c 1320 26.5% 22.1% 2.4 0.016 26.62 2

# of cells per side

Table 24: Power outputs from solar cells

BOL

EOL

Power generated Case 1[W] (direct sunlight against one face) Power generated Case 2[W] (two sides) Power generated Case 3 [W]

1.8623352 2.633739698 4.562018089

1.55311728 2.196439521 3.804550934

45

System Analysis and Design

Table 25: Power consumption (without heaters on)
Idle conditions Radio receive C&DH idle Power Payload ADS ACS Thermal Total Vokaoe lrurrent 5.0 3.3 3.3 3.3 3.3 3.3 3.3 amos PoweriWl notes 0.08_0 _QAOO radio data sheet 0.033 estimate 0.010 0.010 0.033 estimate 0.000 0.000 oowered off 0.025 0.083 estimate 0.000 0.000 oowered off 0.000 oowered off 0.000 0.549 Transmit Radio transmit C&DH idle Power Payload ADS ACS Thermal Total Voltaae Current amos PoweriWl notes 5.0 0.320 .1 .600 radio data sheet 3.3 0.010 0.033 estimate 3.3 0.010 0.033 estimate 3.3 0.000 0.000 oowered off 3.3 0.025 0.083 estimate 3.3 0.000 0.000 loowered off 3.3 0.000 0.000 loowered off 1.749
I

Pavload mission Radio receive r:&DH idle Power Pavload ADS ACS Thermal Total

Vokaae lrurrent 5.0 3.3 3.3 3.3 3.3 3.3 3.3

amos Power(W 1 notes 0.080 0.400 radio data sheet 0.010 0.033 estimate 0.010 0.033 estimate 0.330 worst case estimate 0.100 0.083 estimate 0.025 0.000 lQQ_wered off 0.000 0.000 0.000 oowered off 0.879

Attitude control Radio receive lc&DH idle Power Pavload ADS ACS Thermal Total

Voltage !Current amos PoweriWl! notes 5.0 0.080 0.400 radio data sheet 0.010 0.033 estimate 3.3 0.033 estimate 3.3 0.010 n 3.3 0.000 off 0.083 estimate 3.3 0.025 3.3 0.600 1.980 worst case estimate 0.000 oowered off 3.3 0 2.529

Table 26: Power consumption (with heaters on)
Idle conditions Radio receive C&DH idle Power Payload ADS ACS Thermal Total Voltage Current amps Power(W) notes 0.080 5 0.400 radio data sheet 3.3 0.010 0.033 estimate 3.3 0.010 0.033 estimate 3.3 0.000 0.000 powered off 3.3 0.025 0.083 estimate 3.3 0.000 0.000 !powered off 0.800 2.640 worst case 3.3 3.189 Transmit Radio transmit C&DH idle Power Payload ADS ACS Thermal Total Voltage Current amps Power(W) notes 0.320 1.600 radio data sheet 5 3.3 0.010 0.033 estimate 3.3 0.010 0.033 estimate 3.3 0.000 0.000 [powered off 3.3 0.025 0.083 estimate 3.3 0.000 0.000 !powered off 3.3 0.800 2.640 worst case 4.389

Payload mission Radio receive C&DH idle Power Payload ADS ACS Thermal Total

Voltage Current amps Power(W) notes 5 0.080 0.400 radio data sheet 3.3 0.010 0.033 estimate 3.3 0.010 0.033 estimate 3.3 0.100 0.330 worst case estimate 3.3 0.025 0.083 estimate 3.3 0.000 0.000 powered off 3.3 0.800 2.640 worst case 3.519

Attitude control Radio receive C&DH idle Power Payload ADS ACS Thermal Total

Voltage Current amps Power(W) 5 0.080 0.400 3.3 0.010 0.033 3.3 0.010 0.033 3.3 0.000 0.000 3.3 0.025 0.083 3.3 0.600 1.980 3.3 0.800 2.640 5.169

notes radio data sheet estimate estimate powered off estimate worst case estimate worst case

4.4 Attitude Control Subsystem
2 The attitude control subsystem is an 1 C based magnetic torque controller; its task is to control

power to three orthogonally placed magnetic torquers. Figure 18 shows its configuration and Table 27 illustrates the subsystem's interaction with the rest of the spacecraft.

46

Attitude Control Subsystem

H-Bridge X axis

X axis magnetic torque rod

H-Bridge Y axis

Zaxis magnetic torque rod

Attitude Control subsystem

Figure 18: ACS hardware block diagram

Table 27: Interface matrix Type Power Input
3.3V 800mA

Output

Data

Command to de-tumble satellite Command to turn on torque coil, duration, and power 1 Standard PCB card (see structure document for details) 1 magnetic torque coils attached to wall of spacecraft 1 micro heater Residual magnetic field on torquer Magnetic moments due Current loops in the spacecraft

Error messages Acknowledgements Current usage Connection to structure in corners 4 thermal pads in corner 3 independent magnetic torque rods

Structure Thermal Electrical noise Magnetic moment

4.4.1

Spacecraft Disturbance Torques

One of the first steps in designing an ACS is to determine the magnitude of the disturbances acting on the spacecraft. CubeSats are subjected to various disturbance torques including gravity gradient, solar radiation pressure, magnetic and aerodynamic disturbances. The following sections and tables illustrate the methods and assumed values used to estimate disturbance torques in 400 and lOOOkm orbits; these tables were adapted from methods presented in Larson and Wertz. Table 28 shows the standard formulas for estimating disturbance torques.

47

System Analysis and Design

Table 28: Disturbance torque models

Type of disturbance torque Gravity Gradient

Standard formula (Larson and Wertz 2005)

Tgg

=

~ llmax- lminlsin28 2rorbit
F = ~A 5 (1
c
Tsrp

Solar Radiation Pressure

+ q)cosi

= F(Cps- Cm)

Tmag

= DresiduaJBearth =
D
residuai-R .3
orbit 2Mearth

Magnetic
Tmagmax

Aerodynamic

Assumptions
To estimate the largest gravity gradient torque on a CubeSat, the center of mass was located 2 em away from the volumetric center of the CubeSat (adhering to the limit imposed by the CubeSat standard). Considering the simple planer case as shown in Figure 19 the masses (m1, m2, m3) can be analytically solved given the desired center of mass and the spacecrafts total mass.

y

X

z

Figure 19: Considered shape to calculate worst case gravity gradient

Assuming the center of mass was located at x=2,y=2,=0cm (coordinate frame at the geometric center) and the total mass of the system was 1kg, it is determined that the masses shown in Figure 19 m1,m2,m3 are 0.4kg, 0.3kg, 0.3kg, respectively and the system's principal moments of inertia would be lxx = .002, lyy = .003, lzz = .005 kgиm 2 и Solar radiation pressure and

aerodynamic drag disturbance torques are calculated considering that the force was acting at the

48

Attitude Control Subsystem

center of pressure located at x=-5, y=O, z=O em, the center of one of the plates furthest from the worst case centre of mass. As a CubeSat is limited in size, there is a practical limit to the size of a potential magnetic dipole. As magnetic dipoles are created from current loops in the satellite, they are limited in crosssectional area by the size of the spacecraft. Another limiting factor is the number of possible loops on a single board, as well as the amount of current through the loop. In this particular case, it was assumed that the maximum area for a current loop was lOcm x lOcm, a maximum of 2 current loops could exist on a single board and depending on the subsystem the maximum current was either 250 or 800mA. The other possible magnetic dipoles that could be created in the satellite would be from the vertical supply lines; these dipoles were modeled as single current loops with varying distances from the ground pin . An example of how these fields were oriented is shown in Figure 20, and the estimated worst case magnetic moments are tabulated in Table 29.

Figure 20: layout of potential current loops

Table 29: Estimated magnetic moments from current loops
Magnetic moment Horizontal (Am 2 ) power on a board 1 (3.3@800mA) power on a board 2 (3.3@800mA) power on a board 3 (3.3@250mA) power on a board 4 (3.3@250mA) power on a board 5 (3.3@250mA) power on a board 6 (5V@80mA) total magnetic moment dipole 0.016 0.016 0.005 0.005 0.005 0.0016 0.0486 Magnetic moment Vertical (Am 2 ) 0.0008 0.0016 0.00075 0.001 0.00125 0.00048 0.00588

This analysis illustrates that the maximum dipole of the satellite can be estimated to be on the order of .OS [Aиm 2 ].

49

Table 30: disturbance torques at 400km
Space craft parameters X [em] Y[cm] Z[cm) Mass [kg) lxx (ideal)[kgиm 2) lyy (ideal)[kgиm 2] lzz (ideal)[kgиm 2) lxx (worst case)[kgиm 2) lyy (worst case)[kgиm 2) lzz (worst case)[kgиm 2) max moment of lnertia[kgиm 2) minimum moment of inertia[kgиm 2) Centre of pressure x [em] Centre of pressure y [em] Centre of pressure z [em] Centre of mass x [em] Centre of massy [em] Centre of mass z [em] Centre of solar pressure x[cm] Centre of solar pressure y[cm] Centre of solar pressure z [em] C solar pressure -C gravity [em] C pressure -C gravity [em] Area side 1 [m 2] Area side 2 [m 2) Area side 3 [m 2) Area side 4 [m 2) Area side 5 [m 2) Area side 6 (m 2) Environmental parameters p(atmosphere) [kg/m 3) C (speed of light) [m/s] Magnetic moment of earth [Tиm 3 ) orbit parameters assume circular h [km) orbital period [s] mass of earth [kg] gravitational constant [m 3/kg/s 2) Radius of earth [km] R[m) ~earth [mlfs2] Gravity Gradient Max Torque due to gravity gradient [Nиm) Solar radiation F [N) Torque due to solar radiation [Nиm] magnetic field natural residual dipole of space craft [Aиm 2) strongest expected magnetic field torque due to magnetic forces [Nиm) Aerodynamic Cd V[m/s] F [N) Torque due to aerodynamic forces [N иm) total disturbance torque [Nиm] 2.50E+OO 7.67E+03 7.72E-06 5.62E-07 3.06E-06 4.86E-02 5.11E-05 2.48E-06 8.43E-08 6.14E-09 5.76E-09 1.05E-11 3.00E+08 7.96E+15

Table 31: disturbance torques@ lOOOkm
Space craft parameters X [em] Y[cm) Z[cm] Mass [kg] lxx (ideal)[kgиm 2) lyy (ideal)[kgиm 2) lzz (ideal)[kgиm 2) lxx (worst case)[kgиm 2) lyy (worst case)[kgиm 2) lzz (worst case)[kgиm 2) max moment of lnertia[kgиm 2) minimum moment of inertia[kgиm 2) Centre of pressure x [em) Centre of pressure y [em] Centre of pressure z [em] Centre of mass x [em] Centre of massy [em] Centre of mass z [em] Centre of solar pressure x[cm] Centre of solar pressure y[cm] Centre of solar pressure z [em] C solar pressure -C gravity [em] C pressure -C gravity [em) Area side 1 [m 2] Area side 2 [m 2) Area side 3 (m 2) Area side 4 (m 2) Area side 5 [m 2) Area side 6 (m 2) Environmental parameters p(atmosphere) [kg/m 3 ) C (speed of light) [m/s] Magnetic moment of earth [Tиm 3 ) orbit parameters assume circular 1.43E-12 3.00E+08 7.96E+15

10.0 10.0 10.0 1.00 1.67E-03 1.67E-03 1.67E-03 2.00E-03 3.00E-03 5.00E-03 5.00E-03 2.00E-03 5.00 0.00 0.00 2.00 2.00 0.00 5.00 0.00 0.00 7.28 7.28 l.OOE-02 l.OOE-02 l.OOE-02 l.OOE-02 l.OOE-02 l.OOE-02

10.0 10.0 10.0 1.00 1.67E-03 1.67E-03 1.67E-03 2.00E-03 3.00E-03 5.00E-03 5.00E-03 2.00E-03 5.00 0.00 0.00 2.00 2.00 0.00 5.00 0.00 0.00 7.28 7.28 l.OOE-02 l.OOE-02 1.00E-02 l.OOE-02 l.OOE-02 1.00E-02

400 5.55E+03 5.97E+24 6.67E-11 6380 6780 3.99E+14

h [km) orbital period [s] mass of earth [kg) gravitational constant (m 3/kg/s 2) Radius of earth [km) R[m) ~earth [mlfs2] Gravity Gradient Max Torque due to gravity gradient [Nиm) Solar radiation F (N] Torque due to solar radiation [Nиm] magnetic field natural residual dipole of space craft [Aиm 2] strongest expected magnetic field torque due to magnetic forces [N иm] Aerodynamic Cd V[m/s) F [N) Torque due to aerodynamic forces [Nиm] total disturbance torque [Nиm)

1000 6.31E+03 5.97E+24 6.67E-11 6380 7380 3.99E+14

4.47E-09

8.43E-08 6.14E-09

4.86E-02 3.96E-05 1.93E-06

2.50E+OO 7.35E+03 9.66E-07 7.03E-08 2.01E-06

so

4.4.2

Spacecraft Actuator Sizing

There are two major types of spacecraft actuators: those that store momentum on the spacecraft, such as reaction wheels, and those that apply an external torque to the satellite, such as magnetic torquers. The following sections are used to size reaction wheels and magnetic torquers for RyeSat.

A.

Reaction Wheel Sizing

There are 3 main criteria for sizing reaction wheels. These criteria are: minimum torque required to reject disturbances, the minimum torque required to slew at a desired rate, and the minimum amount of angular momentum storage needed over an orbital period. Table 32 summarizes the methods used to estimate these criteria.
Table 32: Reaction wheel sizing criteria

Requirement Ability to reject disturbance torques

Standard formula (Larson and Wertz 2005)
Twheel

= ToistCSF)

Design Margin =2
Twheel =

6.10E-06 [Nиm]

Ability to slew

tz
ToistP

481

Required slew angle 90[deg] Time to slew 60 [s]

8.72665E-06 [Nиm]

Momentum storage

4 Orbital period is 5553[s]

Hstorage =

-JZ

3.00E-03[Nиmиs]

To investigate if it was possible to scale down a reaction wheel for use on RyeSat, a study was performed to determine if a motor and flywheel could be selected from those available on the market. To ensure the selected motor was capable of controlling the spacecraft the following methods were used. The following relationship is used to relate torque to an applied voltage

4-2

A candidate motor (Portescap 2007) was found with the following motor characteristics (Table 33 and Figure 21 ). From a design perspective, this motor was ideal for several reasons including its brush less DC design, its maximum design spin rate of 50,000 RPM, and its large rotator inertia.
Table 33: Example motor constants

51

System Analysis and Design

Ki [Nиm/A]
L [mH] R [ohms]
/motor [kgиm 2 ]

7.80E-03 36 3.75 1.13E-06 3.00 0.026

Vapplied [V]
Mass of motor (datasheet) [kg]

With these basic motor constants the following motor characteristics presented in Table 34 were calculated.
Table 34: Example motor characteristics
Max wheel speed [rad/second] Max wheel speed [rpm] Torque @ max power[mNm] Max power [W] Max current[A] Max momentum storage (motor only) [mNиmиs] 385 3625 3.12 0.6 0.2 0.0435

This particular motor has a suitable amount of torque to accomplish both slew and disturbance rejection; however, despite the motors large rotor inertia, its momentum storage is insufficient for the proposed mission. To make this motor suitable for RyeSat, a flywheel must be added to increase the motor's moment of inertia.

Figure 21: Picture of Portescap motor

The size of the flywheel is determined by the following relationship:

( !flywheel ) min

= Urw- lmotor) = ( Hstorage) UJ max

lmotor

4-3

Table 35: Flywheel sizing considerations

52

Attitude Control Subsystem

Minimum Momentum storage [mN иmиs] max wheel speed [rad/second] required moment of inertia (Reaction wheel) [kgиm 2 ] minimum moment of inertia (flywheel) [kg иm2 ]

3.00 385 7.79E-06 6.66E-06

Assuming the flywheel is a solid disc, the moment of inertia of the flywheel is given as

1 I= -mr 2 2 m phrrr 2 1 I= -phrr * r 4 2

=

4-4

Figure 22: Flywheel: solid disc configuration

Table 36: Flywheel: solid disc parameters
Density [kg/m 3 ] Radius of needed wheel [mm] Thickness of needed wheel [mm] I flywheel [kgиm 2 ] Mass of flywheel [kg] Mass of motor (datasheet)[kg] Mass of assembly[kg] Reaction wheel inertia [kgиm 2 ] Momentum storage [mNиmиs] Time to go from max speed on direction to another [s] 7800 20

6
1.176E-05 0.0588 0.026 0.085 1.29E-05 4.96 3.18

It is obvious from Eq. (4-4) that this design is an inefficient use of mass. However, this design will allow for mounting on either the motor's shaft, or directly to the flat rotor on the top of the motor.

53

System Analysis and Design

A mass efficient design would use a ring mounted to the flat rotor on top of the motor. Although balancing this reaction wheel will be more difficult, and further analysis is needed to determine if this is physically possible with the candidate motor.

- 1 2 I - zm(router

+ rinner 2 )
rinner )
2

m

= phrr(router 2 -

4-5

1 - z Iphrr(router 4 - rinner 4 )

Figure 23: Mass efficient flywheel design

Table 37: Simple ring flywheel parameters
Density [kg/m 3 ] R_inner [mm] Router [mm] Thickness of needed wheel [mm] Mass of flywheel [g] Mass of assembly[g] I flywheel [kgиm 2 ] Reaction wheel inertia [kgиm 2] Momentum storage [mNиmиs] Time to go from max speed on direction to another [s] 7800

10
20

4
29.4
55 7.35E-06 8.48E-06 3.26 1.05

For comparison a few currently available or proposed reaction wheels were compared with this design in Table 38.

Table 38: Comparison to other available wheels
Sinclair interplanetary (Sinclair Interplanetary 2008)

CubeSat kit ADACS (Pumpkin 2008) Nominal torque [mNиm]

TU Berlin (Kayal, et al. 2005)

Proposed

6

2

.003

3.4

54

Attitude Control Subsystem

CubeSat kit ADACS (Pumpkin 2008) Nominal momentum storage Voltage Power Mass Dimensions

Sinclair interplanetary (Sinclair Interplanetary 2008) 30 3-6 2 185 [5,5,4)

TU Berlin (Kayal, et al. 2005)

Proposed

[mN иmиs] [V) [W) [g) [em]

1.1 12 1.53 910 [10,10,7)
4

.1 3-5 .3W- .7W 44 [2.5,2.5,1.2)

3.26-4.96 3.3 .8 55-85 [4,4,2]

B.

Magnetic Torquer Sizing

Magnetic torquers produce an external torque on a spacecraft by creating a magnetic dipole. This magnetic dipole then creates the torque described in Eq. (4-6). Magnetic torquers are traditionally used on larger spacecraft to offload momentum from storage devices such as reaction wheels, momentum wheels, or control moment gyros. On some smaller spacecraft (and some CubeSats) magnetic torquers have been used as the sole means of attitude control.
Ttorquer

= ffiapplied

X BEarth

4-6

To properly size the magnetic torquer to be the sole means of attitude control in the spacecraft, the torquer must be designed to provide the required amount of torque to counteract disturbances even when far away from the optimal orientation with the Earth's magnetic field. Even with oversized torque coils there will be instances when the spacecraft is not correctly oriented in the Earth's magnetic field to apply a torque to counteract disturbances. However, limits can be set on how far the magnetic torquer and the Earths magnetic field can be from an optimal orientation before the coil loses its effectiveness, and the control algorithm can be designed to account for periods when torque is unavailable.

Table 39: Magnetic torquer requirements

orbit parameters assume circular

h lowest [km]

400
6778.1

a lowest [km]
h highest [km]
a highest [km]
3

1000
7378.1

Estimate for one wheel in a sealed box Includes magnetic torquers and 2 other wheels

4

55

System Analysis and Design

orbit parameters assume circular Magnetic moment constant [Tиm 3 ] (Larson Wertz) Strongest earth magnetic field (lowest alt "'poles) [T] Weakest earth magnetic field (highest alt "'equator) [T] Torque required from coils [mNиm]

m x B min angle between torquer and earths magnetic field to be effective [deg]
required m (highest alt) [Am 2 ] required m (lowest alt) [Am 2 ]

7.96E+15 5.11E-05 1.98E-05 5.00E-03 45 0.3568 0.1383

Careless Magnetic Torque Coil In an open core design the magnetic moment is produced orthogonally to the windings. This style of coil's magnetic moment can be calculated using the following equation

m

= NIAcoil

4ии7

Where N is the number of loops, I is the current, and A is the area of the coil. I is then found using ohm's law and the material properties of the wire

I

= Vapplied
R
N (2rrrcoil)<P
Awire
4-8

R=----I

= VappliedAwire
N (2rrrcon)<P

4-9

And assuming a circular coil,
4-10

Combining Eq. (4-7}, Eq. (4-9), and Eq. (4-10) yields
Awirercoil Vapplied m=----......;....;; __

2б>

4-11

If there is a limit on the coil mass, the number of turns allowed in the coil is limited. If the number of coils is limited too much, the current demands will be too high to maintain the desired magnetic moment and may even be too high for the wire to safely conduct. Conversely if the current is highly limited, the number of turns required will cause the magnetic torquer to weigh too much to comply with the mass budget.

56

Attitude Control Subsystem

M N=------2rrrconAwirePwire
Table 40: Air core design parameters

4-12

cross-sectional area of the wire[mm 2 ] Radius of coil [em] Voltage applied [V] resistivity [O/m 3 ] Maximum magnetic moment [Am 2 ] N [turns] Current (I) [A] density of copper [kg/m 3 ] Mass [g]

.102 4 3.3 1.72E-08 0.392 400 0.194 8930 91.7

From Eq. (4-11) it is found that there are only three obvious parameters to change the magnitude of the magnetic dipole; applied voltage, radius of the coil, and the cross-sectional area of the wire (gauge). The resistivity of copper will vary when the device is used (due to heating) however as long as currents are within limits the coil will not heat up appreciably.

Ferrite Core Magnetic Torquer Design
This type of magnetic torquer is more commonly found on larger spacecraft. The magnetic dipole created by this torquer is along the axis of the core. Although this method is more complex to analyze it has the added benefit of a stronger magnetic dipole (at least 50 times stronger with a poorly selected core). One of the problems encountered when designing a cored magnetic torquer is to ensure the coil is properly designed for the core. If the designed coil is too strong for the core selected it may induce a constant magnetic field along the core creating a constant torque on the satellite. The magnitude of the magnetic moment created by this torquer can be modeled using Eqs. (4-13 to 4-15). This analysis is adapted from the one originally found in the Lionsat magnetic torquer design (Wagner, et al. 2003).

floNI B=-----

L(-1-+Nd) Jlcore

4-13

N _
d -

4[In (;) - 1]
(L)2 ; 4ln ;

(L)

4-14

57

System Analysis and Design

m=--Rearrange the preceding equations to solve form

Brrr 2 L

4-15

rrr 2 NI m=-1----+Nd
J.lcore

4-16

Mass is then calculated using the following method:

M

Mcore Mcoil

= Mcore + Mcoil = Pcore1Tr 2 L
-

(T[ 2) 2rrrN Pwire 4 D

4-17

The power consumed is determined as

P =VI or

P=R R = <l>wire и Awire и Lwire 2 R = <l>wire D ) 2rrrN

vz

4-18

(i

Table 41: Ferrite core design (magnetic parameters)

llo llrl maximum Voltage [V] maximum current[A] Resistance[OJ maximum power consumed[W] wire diameter (31gague) [mm] resistivity per volume[O/m 3 ] estimated resistivity per m[O/m] length of wre used [m] Radius of core [mm]
Length of coil on core [em] Number of turns in the coil Demagetization factor(Nd) B Maximum magnetic moment [Am 2 ]

1.25664E-06 125 3.3 0.1185 27.8551 0.3910 .226 1.72E-08 0.4285 65 3.175 6.5 3258 0.0198 0.2680 0.4391

Table 42: Ferrite core design (mass parameters)

density of core [kg/m 3 ]

7870

58

Attitude Control Subsystem

density of wire[kg/m 3 ] mass of core [g] Mass of coil [g] total mass [g]

8930

17.4
23.3

40.7

Table 43: Ferrite core design (size parameters)

number of coils per layer number of layers overall diameter [em] estimated rod length [em]

288

12
1.18
7

Table 44: Comparison of available magnetic torquers
(Space Quest
5

2008)
Magnetic moment Voltage Power Mass [Am 2 ] [V] [W] [g]

Air core

Ferrite core

5 10 3 200

.39 3.3 .65 90

.44 3.3 .4 40

Comparing the results in Table 40 to those in Table 41 it is found that the ferrite core design weighs almost half the mass of a similarly sized air coil and consumes less power. Therefore, the ferrite core is a superior choice.

5

Nominal design custom ones are available

59

CHAPTER 5
HARDWARE TESTING AND SIMULATION

The bus will consist of the C&DH module running as a master and the remaining subsystems will
2 act as slaves on the 1 C bus (Figure 24). In addition to the subsystems, sensors and EEPROMs will

also be present on the bus. A table of these devices and their addresses is presented in Table 45.

9 ~ . fi~ :R~ p ---------------------------------- v~
11

~r-Y~------~r-----~~----~--~~----~--SDA
~~ n r-------~ n r-------~ lfr---~--~n~------~~ s c L

1 :и

~ CD&H

Payload

ADS

ACS

Power

Master

Slave

Slave

Slave

Slave

Figure 24: Physical network (Sturrman 2007)

2 Table 45: 1 C Address table for RyeSat

Modules CDH Main CDH backup payload ADS ACS Power Ox EO OxEE OxE8 OxE2 OxE4 OxE6

Temperature sensors CDH Radio(possible) Power ADS ACS Payload Payload camera Ox90 Ox92 Ox94 Ox98 Ox9A Ox9C Ox9E

EEPROMs CDH OxAO

5.1 Bus Operation
2 The bus will have a common data sentence containing not only the obligatory 1 C start, stop,

collision and addressing commands but a control byte length of incoming packets and a checksum (see Figure 25). With this structure, nine cases have been defined to deal with most

61

Hardware Testing and Simulation

data transmissions with packet sizes up to 65536 bytes long. Of these 9 cases, 6 are potential error cases that have been identified.

~---------

Data

Packet

Length

-----------7

Figure 25: Sample data sentence

5.1.1

Case 1

The first case is when the master would like to address one system and not expect a reply. The Master (C&DH) will check to see if the bus is clear to take over. If so, it will send a start condition
2 to the bus (as defined in the 1 C specification (Phillips NXP Semiconductor 2000)). It will then

send the desired slave address with the read/write bit set high, at which point the correct slave will respond with an acknowledge bit. The master will then send a control byte to inform the slave what command is being issued to it. Next, the length of the data packet is sent (from the beginning of the control byte to the end of the check sum). Subsequently, the slave will initiate a loop to receive and store the data and the checksum. After this data sentence is sent, the master will send the stop condition to the bus and the addressed slave will revert back to an idle state on the bus. Table 46 summarizes this case.
Table 46: Case 1 (Master sends no response wanted)
Master status Slave status Data sent/received Master sends start Slave address + write bit Ack Control byte ack Length MSB ack Length LSB ack Data
[0]

Tx Rx+

ack bits

Data
[1]

...
...

Data [n] ack

Checksum MSB ack

Checksum LSB ack

s
T n

Addressed slave

ack

ack

5.1.2

Case 2

The next case is similar to the previous; the master will wait for a clear bus, send an address, control-byte, length data, and checksum. However instead of sending the stop command, it will repeat the slave's address and set the read/write bit low allowing the slave to send data back to the master. At the end of this case the slave will hold the clock low to prepare for Case 3. This case is summarized in Table 47.

62

Bus Operation

Table 47: Case 2(Master sends, and a response is wanted)
Master status Slave status Data sent/received Master sends start Addressed slave ack ack ack ack ack ack ack ack ack ack Tx Rx + ack bits

Slave address+ write bit

Cont rol byte

length MSB

length LSB

Data [O]

Data
[1]

...

Data [n]

Checksum MSB

Checksu m LSB

Slave address+ read bit

5.1.3

Case 3

As stated in Case 2, the clock will be held low after the master sends the slave address and the read bit. While the clock is held low, the slave will be preparing its response to the command data. Once the slave is ready, it will resend the control byte which the master can use for

verification purposes. The slave will then send its response length data and a checksum. If this transfer is successful, the master will then stop the bus and both the master and slave will revert to an idle state. Table 48 summarizes case 3.
Table 48: Case 3 (Master receives a wanted response)
Master status Slave status Data sent/received Master sends Addressed slave ack Control byte ack length MSB ack length LSB ack Data[O] ack Data[l] Rx+ ack bits Tx

... ...

ack Data[n]

ack Checksum MSB

Nack Checksum LSB

STOP

5.1.4

Case 4

Case 4 is the beginning of the error cases; this particular case is designed to catch programming errors that could overwhelm the slave with data. This case will occur when the master

"accidentally" sends a command with a data packet larger than expected to the slave. It will begin normally with the master sending start conditions address and read/write bit, and length. After the length is received, the slave will perform a simple check before it begins its data collection loop to determine if the length is smaller than its previously designed and documented buffer length. In the event the master is attempting to send a packet that is too large, the slave will first log an error code and then will not acknowledge (Nack) the first data byte. The master will eventually stop the bus resetting both the slave and master to idle states. Its structure is found in Table 49.

63

Hardware Testing and Simulation

Table 49: Case 4 (incorrect packet size)
Master status Slave status Data sent/received Master sends Addressed slave start Slave addres s + write bit ack Control byte ack Length MSB ack Length LSB ack Data[O) NACK Tx Rx+ ack bits

I stop

1

5.1.5

Case 5

This case is designed to account for lost bytes or bus error when the master is transmitting. If during any transmission by the master a byte is corrupted (i.e., bit missing from byte), the slave will record this as the last occurred error and will "nack" as this is implemented on most microcontrollers as an automatic function, at which point the master will send a stop command to free up the bus. Its structure is found in Table 50.
Table 50: Case 5(1ost byte from master)
Master status Slave status Data sent/received Master sends Addressed slave start Slave address + write bit ack Control byte ack Length MSB ack Length LSB ack Data[O) ack Data[l) ack Tx Rx+ ack bits

... ...

Data[i) NACK

STOP

5.1.6

Case 6

This case is similar to Case 5 except that the error occurs when the slave is in the middle of transmitting a data sentence. If during any transmission by the slave a byte is corrupted, the master will send a "nack", the slave will then detect this "nack" and record an error. As a "nack" is traditionally used by the master to close communication with the slave transmitting, the slave will automatically be reset to an idle state and the master can relinquish control of the bus by sending a stop command. Its structure is found in Table 51.
Table 51: Case 6 (lost byte from Slave)
Master status Slave status Data sent/received Master sends Addressed slave ack Control byte Rx+ ack bits Tx

I I

ack Length MSB

I I

ack Length LSB

I

1 ack
Data[O]

I

1 ack
Data[l]

I .. I

1 ... 1 NACK
Data[i]

I

1 STOP 1

I

5.1.7

Case 7

Case 7 occurs when the slave detects an incorrect checksum. This will occur after a Case 2 so, at this point, the slave will be holding the bus. Before the slave releases the bus, an error will be

64

Bus Operation

recorded in the most recent error register and the slave will immediately send the error code out as its first piece of data, the master will than detect that the ctrlbyte is not the same and send the stop command, allowing both devices and the bus to return to an idle state. This case's structure is found in Table 52.
Table 52: Case 7 (incorrect checksum on slave)
Master status Slave status Data sent/received Master sends Addressed slave Ack error code (OxE3) STOP Rx+ ack bits Tx

5.1.8

Case 8

Case 8 occurs when the response checksum is determined to be incorrect, at which point the bus should be already free, as a complete Case 2 and Case 3 would have been sent. At this point, it is up to the master to choose to re-run the command.

5.1.9

Case 9

Case 9 is a follow up command and is simply a modified example of Case 2 and 3 with a single byte reply. Its structure is found in Table 53.
Table 53: Case 9 (error follow up)
Master status Slave status Data sent/received Master sends Addressed slave start Slave address write bit ack + Control (Ox EO) ack byte Length MSB ack Length LSB ack Checksum MSB ack Checksum LSB ack Slave address+ read bit Ack Tx Rx+ bits ack

Slave sends Addressed slave

Ack Control byte

ack Length MSB

ack Length LSB

ack Error code

ack Checksum MSB

Nack Checksum LSB

STOP

5.1.10 Checksums and Error Codes
Checksums for these data sentences are calculated as follows: и и и Formulate the response packet in memory without the checksum bytes Create and initialize an unsigned integer (16b) to zero. Iterate byte for byte through the packet, adding the byte value to the checksum integer

65

Hardware Testing and Simulation

и и

Stop after the last byte of data. Append the checksum integer to the packet

Cautions: и It must be ensured that the integer is in the correct format, with the Most Significant Bit (MSB) sent before the Least Significant Bit (LSB) и It must be ensured that the integer sum can "wrap around", meaning that: 65534 + 3 = 1)

The standard error codes all slave devices will use is listed in Table 54. Bus collision errors are only present on devices which can detect collisions on the
1

2

C bus; this can be useful in

determining if the device is faulty or if there are multiple devices trying to respond to a single command.
Table 54: list of standard bus error codes
Error codes No detected error Too Much Data for slave byte lost on Master transmission byte lost on slave transmission Incorrect checksum Bus Collision "'variant of byte lost on master Bus Collision "'variant of byte lost on master Code OxEO OxEl OxE2 OxE3 OxE4 OxES Ox06

5.2 Thermal Subsystem
The thermal system will utilize a hardware controlled thermostat and an
1
2

C based temperature

sensor. This will allow the thermal subsystem to operate heaters without intervention from any other system and allow reporting of individual board temperatures to the C&DH and the ground station. The circuit for the heating subsystem is shown in Figure 26.

66

Thermal Subsystem

Figure 26: Thermal system schematic

5.2.1

Heater Control

The heater control circuit consists of a thermostat control IC (TC624) an N channel MOSFET, a Minco thin film heater and a resistor.

Sizing the resistor
The data sheet for the TC624 indicates that the /OUT pin is high when the temperature is below the trip point. This configuration is ideal for driving a heater and is even outlined in the TC624's datasheet. It is recommended that the heater be turned on 5 to lOoC before the minimum

temperature (i.e., heater turns on at -35░C when the lowest minimum temperature is -40 oq

MOSFET Selection
A MOSFET is suggested in the TC624 datasheet to act as a switch for the heater. Although the datasheet does not suggest a particular device, it does stress that it should be able to be driven with CMOS logic levels (3-5 V 250uA typically). The MOSFET should also have a low voltage drop across it to minimize the power lost before it reaches the heater coil. The chosen MOSFET is the same as the one used in the power subsystem (IRLML2502), as it meets the minimum requirements, and, utilizing similar parts, simplifies both the assembly and ordering processes.

Heater Selection
At the time of writing, MINCO offered many tools to size heaters for particular applications. For the pica-satellite application, it was determined system wide that 2.3W of heating power is needed to heat the spacecraft in a worst case scenario. With 5 individual boards in the spacecraft, analysis shows that each of the heaters must provide an average of 0.46 Watts.

67

Hardware Testing and Simulation

Fortunately, Minco offers a heater, 3 x3 inches with the correct resistance; the part number is HK5464R23.3L12B. This device also comes with an adhesive backing approved by NASA for outgassing. However, it is not rated for temperatures below -32░C so there should also be a mechanical means to hold this heater to the board. Alternatively, the rear plane of the board could be etched with a similar coil to heat the board.

5.2.2

Health Monitoring
1

Temperature will be taken by the MPC9803 C&DH module using the system wide
1

2

C temperature sensor and passed directly to the

2

C bus. To ensure proper operation of these devices on the

bus, each will have to have a unique address. Table 55 shows the predetermined addresses for the temperature sensors board by board.
Table 55: Temperature sensor address per board

Board C&DH Radio(possible} Power ADS ACS Payload Payload camera

Address 1001000 1001 001 1001010 1001100 1001101 1001110 1001111

A2 GND GND GND +3.3V +3.3V +3.3V +3.3V

A1 GND GND +3.3V U GND GND +3.3V U +3.3V U

AO GND +3.3V U GND GND +3.3V U GND +3.3V U

U U U U

5.3 Power subsystem
The design of this subsystem can be broken up into several subcomponents: voltage regulation, battery monitoring and conversion of power from the solar cells.

5.3.1

Uninterruptible Feed lines

This satellite has two uninterruptible power supply lines; one is for the main C&DH board which runs at 3.3 V and the other is a 5V line for the amateur radio.

3.3VIine
The 3.3V line consists of three main IC's, capacitors and a resistor. It is best to explain each device with its supporting components in the following breakdown: circuit breakers, MOSFET, and voltage regulation. The circuit for the 3.3 Volt line is shown in Figure 27.

68

Power subsystem

~BAT

Figure 27: 3.3V uninterruptible supply circuit

Automatic Resetting Circuit Breakers The MAX5904 acts as an automatically resetting circuit breaker to prevent the system from drawing too much current and damaging other systems. The time it stays off after it is triggered is between .25sec - lsec, which should be a suitable amount of time to allow for a device to recover from a single event upset or latch-up. This device uses an external current sensing resistor to allow the designer to set a unique current limit for the circuit. This particular device measures the voltage difference across the current sensing resistor and will trigger the breaker when it exceeds 25mV. Analysis to size this resistor must also consider the manufacturing tolerances of the resistor and the MAX5904 to ensure it will trigger as desired. To guarantee the circuit breaker will trigger before 250mA, a 0.080 current sensing resistor was chosen. M OSFET Selection The MAX5904 Drives an N-Channel MOSFET to control the flow of current in the circuit; if the MAX5904 is below the 250mA limit (and everything else is connected correctly), the MAX5904 will send a high signal to the MOSFET, allowing current to flow. If the current exceeds the 250mA limit, the MAX5904 will pull the MOSFET's gate low, preventing current from flowing. This MOSFET must be selected with some care to ensure it will switch at the voltage levels provided by the MAX5904 and be able to sustain a constant flow of current and not incur large power losses. The MAX5904 supplies a high signal between 3.6V and 5.8V. Since MOSFETS are charge controlled devices, one only has to ensure the gate threshold voltage is met and there is ample current supplied to guarantee a fast switching rate. For the chosen N-Channel MOSFET 69

Hardware Testing and Simulation

(IRLML2502L the switching period was found to be .15ms which will be adequate for power supply line switching. Also important in MOSFET selection is the devices Current consumption, as MOSFETS have a resistance associated with them when enabled. With this particular device, the power loss was O.OOSW and this related to a voltage drop of 0.02V, which is negligible for the voltage regulator.

Voltage Regulation
The MAX8887 is a low drop out linear regulator able to reliably deliver a constant voltage (3.3V) up to a cut off point 0.2 mV (3.SV) above its designed output. This device also is equipped with a bypass capacitor that can be used to limit the device's noise on the ground plane, causing less distortion for the radio and sensors. For this device to work properly, the data sheet suggests that filtering capacitors be placed on both the inputs and the outputs

5 volt line
The SV line will only power the onboard handheld radio and will not require a protection circuit. As it is better to power a failing radio and be short power for other systems rather than to limit power to the radio and not be able to receive or transmit. 5 Volts is generated from the battery voltage using a Max1790 de-de converter, which is capable of supplying SV, 0.8A in the configuration shown in Figure 28. There are several required components for this device to operate correctly; these include the
3.3~-tH

inductor, a 4.70 resistor and two bypass capacitors (.22~-tF and .68~-tF). The data sheet for

the MAX1790 goes into detail regarding the selection of these components. As this device is outputting SV, an external protection diode must be located before the output to the system to prevent current from flowing in reverse through the inductor and damaging the MAX1790 device. The diode chosen is the same Schottky diode chosen to protect the solar cells and is capable of handling the SOOmA start-up current and fast switching requirements.

70

Power subsystem

Figure 28: 5 volt step up and supply circuit

5.3.2

Controllable Feedlines

The controllable feed lines are very similar to the 3.3V uninterrupted line presented earlier. The major difference is the automatically resetting breaker is replaced with a latched breaker that requires a toggling from the microcontroller to reset if it is tripped. The other difference is with some of the supply lines which require a different voltage regulator capable of supplying a higher current. The circuits of these two variants are shown in Figure 29 and Figure 30.

ou..-curr.,nt c:n ..clc clrcut

ov .. rcLrr.,nt cho>c'k c lrcut
U3

U2

IN

CND

~
2
~

OUT

5

BP

4 C4

Jи2uF
JeluF

Figure 29: 3.3V 250 mA power supply lines (PS land3)

Figure 30: 3.3V 800 mA power supply line (PS 2 and 4)

Max5905 Circuit Breaker
Early in the design process for the satellite, there was a decision to limit most subsystems to 250mA at 3.3V; however, the actuators on the ACS and the heaters required around 800mA to operate effectively. Again, similar analysis to the Max5904 can be used to size the current

71

Hardware Testing and Simulation

sensors for this device. It was found that 0.080 resistors can be used for supply lines requiring only 250mA, and 0.020 resistors can be used for controlling supply lines carrying 850mA.

TPS79633 Voltage Regulator
The TPS79633 regulator was selected to replace the MAX8887 for supplies requiring a larger current draw, as the MAX8887 is only capable of sourcing 300mA. The main difference is the package design and the ability to source more current. The filtering and bypass capacitors are the same as the MAX8887 to simplify the ordering process.

5.3.3

Feedline Control Mechanism

The feed line control mechanism acts as a hardware AND gate, verifying the battery is beyond the low voltage threshold and the microcontroller is commanding the supply line on. The circuit for the feed line control mechanism is shown in Figure 31.
Un l nt.,. t.d3 . 'J.J

Figure 31: Feed line control mechanism

Minimum Voltage Detection
Most lithium ion cells are capable of discharging well below their safe recharge voltage (typically 3V), so a protection circuit must be in place to ensure the battery does not over discharge. This problem is a bit of a paradox for the C&DH/COMM subsystem, which must always be on and functioning after deployment. To compromise, the minimum cut off voltage has been raised from 3V to 3.4V and the cut-off circuit will only power off non-critical subsystems. Assuming this measured voltage was the open circuit voltage (not the case as the battery is under load at all times), there will be at a very minimum of 5-10% of the battery's usable capacity left over to run

72

Power subsystem

vital systems; this in turn equates to an absolute minimum of 20 minutes of run time for critical systems. These conservative estimates should prevent the battery from being over discharged and allow the C&DH/COMM subsystem to remain powered during the eclipsed periods of the orbit.

LTC1440 and SN74LVC1G14 Configuration
The LTC1440 is a comparator device. These devices are used to determine when a voltage has passed a certain threshold and will send a logic high signal once it has. The inverter (SN74LVC1G14) is used to switch the logic of the comparator around. The trigger point on the comparator is set according to the device's datasheet (This process is also shown in Eqs. (5-1 to 5-3)) and is set to trigger when the battery voltage drops below 3.4V. The comparator will stay triggered until the battery voltage increases to 3.65V. This was done to ensure the battery pack has time to recharge properly even without the aid of the microcontroller. The datasheet for the LTC1440 indicates a design process for selecting resistor values. The results of this process are presented in Table 56.

V:ref- VHB lref

5-1

=

2

2R11

Solving for

VHB

VHs=---Rll
R12

Vref

+ 1/2

5-2

Solving for the trip point

R9 _ [

Vtrip

Rlo -

V:

ref

+ VHs
2

]
-

1
5-3

VHysteresisactual

= -V:---=ref

VHB Vtrip

73

Hardware Testing and Simulation

5.3.4

Solar Cell Measurement and Power Transfer Bus

This part of the circuit has been designed to function with a wide variety of solar cells and is adaptable to different configurations for future missions. The input bus consists of six diode protected input ports and one unprotected crossover link to allow for charging on the ground or the grouping of multiple power subsystems in future missions.
Table 56: LTC 1440 resistor sizing table
Resistors selected (same as Fig.33) RlO 5100000 R9 10000000 Rll 3000000 R12 68000 Vref 1.182V

Output voltages Vtrip 3.539V Vhin 0.079V Vlow 3.460V Vhigh 3.618V

VHB cannot exceed .OSV Vhb 0.026V

I ref and lbais should be as small as possible Iref 25.97E-9A Ibias 2.32E-6A

Diode Protected Inputs
These inputs were designed to measure the current being produced by the solar cells on one side of the spacecraft utilizing a LT1787 current sensor. A 10bq015 schottky diode is used to protect the solar cell and the current sensor from reverse currents. These diodes will prevent up to lSV flowing in the reverse direction. The circuit is shown in Figure 32. Sizing the Current Sensor The candidate solar cell manufacturer indicates that the peak power of the cells occurs at 2.4 V per cell and 400mAhrs for the given size selected. It is planned that two cells in series will be used per side giving a maximum voltage and current around 4.8V and 400mAhrs, respectively. Diode Selection The schottky diode selected (10bq015) was chosen to minimize the voltage drop across the diode to maximize the power supplied to the charging bus. It was also chosen to prevent a maximum current of 800mA from traveling in reverse through solar cells shadowed and not producing power. This diode was utilized throughout the design to minimize ordering errors. The key characteristics of the chosen diode are shown in Table 57.
Table 57: Key Diode Characteristics

74

Power subsystem

Max Max Max Max Max Max

average forward current peak forward current Forward voltage drop reverse leakage current 25░C Reverse leakage current lOOoC Reverse DC voltage

lA 140A .34V .SOmA 12 mA lSV {2SV Peak)
To ch' r

D2
lBBQBl:!

Rl4

current sensи

SC S

l

6 <ANl

Figure 32: Two solar cell circuit

5.3.5

Battery Charger

The main component of the battery charging system is the bq24002 from Texas instruments. This device, along with a DC- DC boost voltage converter (MAX1760) and voltage divider, will charge the battery and supply current for the system when it is exposed to sunlight. The circuit is shown in Figure 33.

BQ24002 Monolithic Charger IC
This device was selected amongst the many available on the market for its simplicity, ability to change charge current, indication of charge status features, and easy to solder TSSOP package. This device, however, has a slightly higher input voltage. This requires the use of a DC-DC converter to ensure power will transfer from the cells on non ideal orientations of the solar cells and the Sun. To ensure this device utilizes the most amount of available solar power and does not burn out the DC-DC voltage step up converter, the charge current will be limited to O.SA.

75

Hardware Testing and Simulation

Figure 33: Battery charger circuit

5.3.6

Battery Monitor

The battery monitor will consist of the subsystem microcontroller estimating the battery draw/recharge current over time. A current sensor (LT1787) will be used to directly measure the current. To help verify these estimates, the battery voltage will be measured using a simple voltage divider. The circuit for this is shown in Figure 34.

curr.,..t.l.,sи

..,

R27 R28

...

~

Figure 34: Battery monitor circuit

5.3. 7

System Wide Interface

The power subsystem will be connected to the rest of the satellite using a standardized interface, which includes a 30 pin connector a bus switch and programming enable jumpers. Figure 35 shows the circuit for the systems interface.

76

Power subsystem

5.3.8

Microcontroller

Figure 36 illustrates the connections made to the microcontroller (PIC 16F777). As it can be seen in this figure, the microcontroller acts only to gather the sensor data (mainly Analog data) and control the power supply enable pins.

Figure 35: Interface to the satellite bus

Figure 36: Microcontroller pin-out

5.3.9

Overall Schematic Design

The following figures (Figure 37 and Figure 38) show the full circuit for the power subsystem in detail.

77

*+J_AT

l l _llj

.JБZI Tt.auF
Rl3 . 880

Ryerson
Sp.-::и Syst . . s
tAd 6\1
Po~o~l'r

Un i versity
t. Contr-ols
~

-.!7
115 IBKO

33~r

Cll
sK t.o 101.1 nojsp

Iy'l~ i cs

subystl'ro
Rиv 2 . 1 , / 2/ 289?

d i. ctr i but i. on I. control
1'1i'kи
AI~,.

I

I

pag@' 1 a r 2

U24

f'2911<
Ul3

Ull

l2uF
I,

JБ22

l ntor<e>Ud3. 3\1

I? 128
\IDD \IDD

RCIWTIOSO RC I,TIOSI A'C2;r CCPt RC3/SCL

Llz_./Or.;------,
Pu-и -oely 2
PoWI'r"SUPP 1u 3

~ ~
.control PSl
+BAT
R')

RC4 / SDA

><
X

Vl6

RC:l/SDO
RC6/T)(
RC7/~

I? PIS

RDI/PSPI RDI , PSP I "

~

1"-----,,....~

~

I . 8110

Rll

~
~

RD2,PSP2 RD3/PSP3 RD4/ PSP4 RD6/PSP6
RD?/ PSP?

ill_~~~~~s:~rr::J~[!!jU f2 - ~
,-----""'"-"'-'"-'---"~
~leKo

rrnJ2
I0
2

I&

"BK*
~~

RD:l/PSP~.-~~~~

0 IJ3
I

\ISS

Lou bat tиr-y

vo l t.agp CS.t..cto,.. c 1rcut

y29
\ISS

~~BAT

* +IAT

lRl
4

.JБ1

*+BAT

*+BAT

.P
ov.,.et.r,.H\t dwelt: c lrcut
Ul R2

lfluF
ov.,.o.r~t

....!Б'
d'lt<:lr

lfluF
~

..E:13

c i r-eut

ou.,..c:urrиnt ch.clt: cl,..cut

U3

t-----~~:~.1 , ..':EJ8
!l"tиl
\ISS

!) 9"U

i!

ON

6 ~

1---------'l~:~.l , ..':EJ? [!tU~-----'lJ!I"UI g~u
. 82RO
4

!)

6

---~ sи,.,.иl
!l"tиl
4 \ISS

R3

i. nt

l!wns
i!

\ISS

i!

ON

~

!) 9"U
ON

inZE
7
6
~
04

lfluF
ov""'c:urrиnt eh.clc c i. r-cut
U?

R4
. 12RO

Q2

~

U2

Po .... rsupp 1y 4

CND

'

~

.. и и -b

Tz. 2uF

lllluF
Figure 37: Power subsystem schematic

"If

I-1ru11 .... B~ j 9 1~ - ~~~~
)"2 . 2-.JF

78

Power subsystem

~~-15

~91091~

D3

и1---~--~и

~a.cet5

ll4

.-------i

1110815

~910915

D6

~810915

D9

11
r

~5

R14 1.291!

R15

~7
"':"hFt

l.29R

u

.

":'"1-..:t

U1?1

I
I

'

~8
":"tuFt

R16 1.291!

.

~ ~
'
Rl?

.

-:-t.st

ls29

1.291!

'

R28

(_pe
-:-hE't

l.29R

f

U2

.., .

~

I~

v v
~2

-)

-v~3

(}}~5

I I

~~,

I

~

~9

~
JJuFи

R31

R32

v ~и ~

I

~~6

~~8

I

cЦ

;,...-~18

5~

to

l Ow

~oiseo ~r-

SC Supply 6 CAH>)--1
SC Supply 5 CAN> SC S14!ply 4 CAN)
SC S:L1lfL!.i 3 CAH)

SC

&:~2

CAN>.

~CAH>:

~
J..tt!!"'U d,.AtCAtt)

U22

~ ~ ~
SOLMVOLTACБ<AH>:

~

R26 R2? 1111<и
R28

1111<и

__ltJ?

J1uF

1

Rиv 2 . 8 5/2,2897

I p~ge

2 of 2

Figure 38: Power subsystem schematic continued

79

Hardware Testing and Simulation

5.3.10 Physical Implementation
The power subsystem circuit must only occupy a single PCB card in the satellite . A battery will rest on a second blank PCB and will be connected to the first using the BATil input. Figure 39 illustrates the layout of the final power subsystem.

Figure 39: PCB layout

5.3.11 Firmware Design
The firmware design consists of two main parts: the main continuous loop and the interrupt routine (Figure 40). The main loop will constantly measure the charge status, the current drawn from the solar cells and battery and write these values to registers accessible during an interrupt. The interrupt will then send data out to the system that requested it (C&DH or ADS). The interrupt will perform error checking on the incoming signal to ensure it is valid (Figure 41) and then, if the command is correct, it will then execute the appropriate case to load the data output variable (Figure 42).

80

Power subsystem

Figure 40: Firmware Design (Main loop)

Figure 41: Firmware design (Interrupt)

mmm
QrR'

Oltf'F

11~11c..(411
DcO:I
1)1(1)

~

~

~

iliH. m;1 1 1 1

~
0

~
0

~
0

~
0

~

~

~

~

Figure 42: Firmware design (Interrupt) continued

81

Hardware Testing and Simulation

5.3.12 Commands to Control Power Subsystem
Commands to the power subsystem will be sent via
1

2

C and will be formatted as shown in Section

5.1 (pg 61). At the time of writing, the power subsystem will respond to the commands listed in this subsection with the following responses.

Communications Test
This command simply tests if the
1

2

C interface is working properly. Table 58 summarizes the

command; Table 59 and Table 60 show the input and output of this command.
Table 58: Summary of the communications test command
Description Control byte packet length DATA checksum Communications interface testing. OxOO OxOOOA HELLO calculate description Control byte packet length DATA checksum Comm. IF test response. OxOO OxOOOA HOWDY calculate

Table 59: Communications test command input
Ctrlbyte OxOO length MSB OxOO Length LSB OxOA Data 'H' 'E' 'L' 'L' Check MSB OxOl Check LSB Ox7E

'0'

Table 60: Communications test output
Ctrlbyte OxOO length MSB OxOO Length LSB OxOA Data 'H' Check MSB OxOl Check LSB Ox95

'0'

'W'

'D'

'Y'

Power Distribution Control
PS1 PS2, PS3, and PS4 correspond to the states of the controllable supply lines; if the supply needs to be turned on, a OxFF is sent; if it needs to be turned off, a Ox11 is sent; if no change is desired, a Ox55 will be sent. The responses are similar, with a OxFF indicating the supply line is on and Ox11 indicating the line is off. Table 61 summarizes this command and Table 62 to Table 63 show an example of this command.
Table 61: Summary of the Power distribution control command
Description Control byte packet length DATA checksum power distribution control Ox02 Ox0009 Ox??( Power bus one) Ox??(2) Ox??(3) Ox??(4) Calc Description Control byte packet length DATA checksum Power dist response. Ox02 Ox0009 Ox?? Ox?? Ox?? Ox?? Calc

82

Power subsystem

Table 62: Example input for the power control command
Ctrlbyte Ox02 length MSB OxOO Length LSB Ox09 Data Ox 55 Oxll OxSS Ox 55 Check MSB OxOl Check LSB OxlB

Table 63: Example output of the power control command
Ctrlbyte Ox02 length MSB OxOO Length LSB Ox09 Data OxFF Oxll OxFF OxFF Check MSB Ox03 Check LSB Ox19

Solar Cell Currents and Solar Cell Bus Voltage
This command will return the measured current and voltages as lObit ADC readings (lossless and compact data format). This command is summarized in Table 64. Table 65 and Table 66show the command and the structure of the response. The relationship relating the solar cell currents [A] to the ADC Reading is:

/ 5 C'

1024) 064 ( - 3.3

= ADCsc

And the relationship relating the voltage [V] to the ADC reading is
Vscvolt

-

2

(1024) _

3.3 -

ADCscvolt

Table 64: Summary of the solar Cell inquiry command
Description Control byte packet length DATA Checksum calc Solar cells status Ox04 OxOOOS Description Control byte packet length DATA checksum 6 current readings+ 1 Bus Voltage reading Ox04 Ox0013 7 unsigned int (16b) calc

Table 65: Input for the solar cell inquiry command
Ctrlbyte Ox04 length MSB OxOO Length LSB Ox OS Check MSB OxOO Check LSB Ox09

Table 66: Structure of the output for the solar cell inquiry command
Ctrlbyte Ox04 length MSB OxOO Length LSB Ox13 SCl SC2 SC3 SC4

scs

SC6

Volt

Check MSB

Check LSB

83

Hardware Testing and Simulation

Battery Charger Status
This command will return the status of the battery charger (one byte), the measured battery voltage (two bytes), and the measured battery draw (two bytes). The status off of the monolithic charger is read off the port and a high condition on of the status pin is indicated with half a byte with a OxF as a high, and a low is indicated with a OxO. The upper 4 bits of the byte represent status pin one and the lower 4 bits representing status pin two (e.g., OxFO indicates a high on status 1 and a low on status 2). A summary of this command can be found in Table 67, and its command and response can be seen in Table 68 and Table 69. The battery current drawn [A] and voltage [V] can be related to the reported ADC values using the following relationships:

1024) lbattdrawи064 ( 33

= ADCbattdraw

Vbatt (1024) - - 33 2

= ADCbatt

Table 67: Summary of the Battery inquiry command
Description Control byte packet length DATA checksum Calc Solar cells status Ox04 OxOOOS Description Control byte packet length DATA checksum 6 current readings+ 1 Bus Voltage reading Ox04 Ox0013 1 byte+ 2 unsigned int (16b) calc

Table 68: Input for the battery inquiry command
Ctrlbyte Ox08 length MSB OxOO Length LSB Ox OS Check MSB OxOO Check LSB Oxll

Table 69: Structure of the battery inquiry output
Ctrlbyte Ox02 length MSB OxOO Length LSB OxOA Status Batt volt Batt Draw Check MSB Check LSB

5.4 Attitude Control Subsystem
The design of the ACS subsystem will integrate two of the three coils on a single board, along with the H-bridge controllers and the microcontroller

84

Attitude Control Subsystem

5.4.1

H-Bridge

An H-Bridge was chosen to control the magnetic coils, as it can vary the amount of Voltage (and indirectly current). The H-Bridge chosen is the MPC1751a which is a single monolithic device capable of driving its own internal MOSFETS to drive separate coils. These devices are typically used in small stepper motor control in terrestrial applications. To control a coil with this device, there needs to be two inputs from the external controller, these being labelled for ease as: direction (DIR) and duty cycle (PWM). Because there is a natural inductance in the coil being used to change the spacecrafts attitude, pulse width modulation can be effectively used to set the coil's current. All that needs to be determined is the coil's true inductance and a minimum

frequency can be established.

5.4.2

Microcontroller

The pulse width modulation (PWM) controller on the microcontroller is a fairly efficient way of varying the duty cycle (time on

I

time off) to the H-bridge. PWM works by setting a duty cycle

and an overall frequency. These values must be within the range of the H-Bridges response range (<200 KHz) and faster than the minimum frequency of the coil. Failing to do so will cause the Hbridge to be unable to switch the coils fast enough or cause the output of the coil to become discrete. The circuit used for a magnetic torquer only ACS subsystem is found in Figure 43.

Figure 43: Schematic for the ACS subsystem (magnetic torquers only)

85

Hardware Testing and Simulation

5.4.3

Physical Implementation

The following figure illustrates the layout of the ACS subsystem .

и
< ne
PGD PGC

_Q_ _lJ_
e e

SC L SDA t-nablt-

SVCU > ии

3<uии
SDAe SCLe GNDe. ~~

<2> и и JJ
(3) и и
(4) и и

и

GNDe GNDe. PGDe PGCe t1CLRe.

e e e

J2
ии ии

J3

Figure 44: PCB layout (preliminary)

5.5 Control Law Development
5.5.1 Rotation Sequences

The following Rotation sequence is used to develop the control laws illustrated in further sections. This development of the Euler rotation sequence will follow the conventions presented in Kumar (2006).
5-4

0

cosy -siny

0 ] [cosб siny 0 cosy sinб

1

0

0

-sinб] [cosa 0 -sina cosб 0

sina cos a
0

0 1

o]
5-5

Rbo

sinacosб cosacosy sinasinбsiny + cosacosy = [cosasinбsiny - sinacosy cosasinбcosy + sinasiny sinasinбcosy - cosasiny

-sinб ] cosбsiny cosб cosy

5-6

86

Control Law Development

5.5.2

Spacecraft Dynamics

The standard vector notation for the dynamics of a rigid spacecraft is expressed as:
5-7

This vector equation can then be expanded to the standard Euler-Newton equations of motion:

5-8

For ease of development of the control laws, it is convenient to express time varying parameters (expressed as

q and ij) with

ones that vary with the orbital position (expressed as q' and q"). It

can be shown that the relationship between time varying parameters and orbital position varying parameters is as follows;

. q

= at = ae at = q 8

aq

aq ae

,.

azq a(q' iJ) .2 .. q - at at - q"8 2Where q'

.. + q'8

5-9

= ae aq

For a circular orbit these relations reduce down to:

. q

= q 'Wo
5-10

ij=q"wo2
Using a 3-2-1 rotation sequence as shown in Kumar 2006, the angular velocity terms can be expressed in terms of rates of change of body angles as follows:
Wx

= -(iJ + a)sinб + y
5-11

Wy
Wz

= (iJ +a )cosбsiny +бcosy

= (iJ + a)cosбcosy + бsiny

87

Hardware Testing and Simulation

Angular acceleration can then be expressed as follows:

wx)
wbo

=

(

~Y

=

(ji(ii (ii

(ii

+ B)sin(б)- б(a+ 8)cos(<f>)

)

Wz

+ ~)cos(<f>)sin(y)- ~(a+ ~)sin(<f>)sin(y) + Y(a + 8!cos(<f>)cos(y) + ~.cos(y) - ~ysin(y) + 8)cos(y)cos(<f>)- <f>(a + 8)cos(y)sin(<f>)- y(a + 8)sin(y)cos(<p)- бsin(y)- <f>ysin(y)

5-12

Using Eq. (5-8 to5-12) the normalized and coupled equations of motion for a satellite in a circular orbit can be expressed as:

a" cosб cosy-б" sin y- ( 1 - kxz

+ kyz)(1 +a')б' sinб cosy ( 1 + kxz - kyz)(1 + a')y' cosб sin y + б'y' cosy T + (kxz - kyz)(1 + a') 2 sinбcosбsiny = _z_
IzWo kyzб" cosy- ( 1 - kxz + kyz)(1 +a')б' sinб sin y kxz- kyz)[(1 + a')y' cosб cosy- б'y' sin y] IzWo

5-13

kyza" cosб sin y

+

- (1T + (1- kxz)(1 + a') 2 sinб cosб cosy = _Y_
-kxza" sinб

5-14

+ kxz y" + [(1 - kyz) cos 2y - kxz] (1 + a')б' cosб + (1- kyz)[(1 + a') 2 cos 2 б- б' 2 ] sin y cosy=~
IzWo

5-15

Where:

And k 1 and k 2 can also be found from:

If the controller is only to take into account the effect of gravity gradient to control its actuators, the gravity gradient force will have to be modeled into the previous equations. Gravity gradient can be expressed with the following vector equation:

5-16

And this equation can be expanded to its individual parts expressed in the body frame as:

88

Control Law Development

Tx
Tb

"'(~~) =

(-3 :
3

(Iyy- lzz)(cosasin<J>cosy + sinasiny)(cosasinбsiny- sinacosy))

-3:3

Uzz -lxx)(cosasincJ>cosy + sinasiny)cosacosб
Uxx-

s-17

-3:3

lyy )Ccosasinбsiny- sinacosy)cosacosб

Combining Eq. (5-13 to 5-15) and Eq. (5-17), the equations of motion expressed can be expressed as follows:

a" cosб cosy-б" sin y- ( 1 - kxz + kyz)(1 +a')б' sinб cosy - ( 1 + kxz- kyz)(1 + a')y' cosб sin y + б'y' cosy

+ (kxz - kyz)(1 + a') 2 sinбcosбsiny + 3(kxz- kyz)(cos a sinб sin y +sin a cosy) cos a cosб = 0
kyza" cosб sin y + kyzб" cosy- ( 1- kxz + kyz)(1 +a')б' sinб sin y - (1- kxz- kyz)[(1 + a')y' cosб cosy- б'y' sin y] + (1 - kxz)(1 + a') 2 sinб cosб cosy + 3(1- kxz)(cos a sinб cosy+ sin a sin y) cos a cosб= 0 -kxza" sinб + kxz y" + [( 1 - kyz) cos 2y - kxz] (1 + a')б' cosб + ( 1 - kyz) [(1 + a') 2 cos 2 б - б' 2 ] sin y cosy - 3 ( 1 - kyz) (cos a sinб cosy + sin a sin y) (cos a sinб sin y - sin a cosy = 0

5-18

5-19

5-20

5.5.3

Linear Control Law

For a point of comparison with the adaptive sliding mode controller, a linear control law can be compared. The development of this controller requires linearized versions of Eq. (5-18 to 5-20), and these can be expressed as:

5-21

б"
y"

+ (1- kl)y' + 4k1б = 0 + (k 2
-

5-22 5-23

1)б' + k 2 y

=0
0 0 0 0 0

These equations can be arranged into the standard

X =AX+ BU form:
0 0 0
kl -1 0 0

a' 3(k2- kl) a" 1- klk2 б' 0 = б" 0 y' 0 y" 0

0

1

0 0 0 0 0 0- k2

0 0
1

0 0 -4kl 0 0

a a'
</>

0
1

0 0 -k2

б' + 0 y 0 1 y' 0

0

0 0 0
1

0 0

0 0 0 0 0
1

[~:]

5-24

89

Hardware Testing and Simulation

From Eq. (5-24}, a linear control law can be solved for using pole placement, knowing the desired performance characteristics. Kumar (2006) shows the development of a simple linear controller and the final outcome is shown in Eq. 5-25.

Uб

= -2 (б Wб 8б' -

W~ 8f/J

+ (1

- k 1 )8y'

+ 4k 1 8f/J

5-25

Uy

= -2 (y Wy 8y'- w~ 8y + (kz- 1)8б' + kz8y = (б = (y = 1 and Wa = Wб = Wy = 2
was simulated

The controller from Eq. (5-25) with (a

with the initial conditions shown in Table 70. Figure 45 shows this controller reaching the desired attitude in about half an orbit, and Figure 46 shows how much momentum would have to be stored if reaction wheels were used, finally the torques required are shown in Figure 47.
Table 70: initial conditions for PO controller

Principal MOl

[kgи m 2 ]

Stored momentum [mNms]

a
Angle[roll pitch yaw) Rate б

[r:d]

Desired angle

y 70░ rO"l 70░

r-002 0.003
0.005

1

[~]

r~:o]

[~]

~ 1:[ ! 1~~
0

0.5

: : : : : : : :l
1.5 2 2.5 3 3.5 4 4.5 5

:

:

:
1.5

:
2

:
2.5

:
3

:
3.5

:
4 4.5 5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits

90

Control Law Development

Figure 45: Angular response PD controller.

!~:r : : : : : : : : l l ~_:v : : : : : : : : l~:E : : : : : : : : l
0 0.5 1.5 2 2.5 3 3.5 4 4.5 5

1
5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits

Figure 46: Momentum storage for a simple PD controller
X

10-6

1~--~,--~,--~,--~,--~--~ ,--~,--~ ,--~ , --~

0~ииии~~----------------------------------~
I I
I

:-k
I
I

-1

I I I

z p

E' -2
-3

-4

-51~~--~'--~'--~'--~'--~'--~'--~'--~'--~'--~

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Figure 47: Torques for PD controller

5.5.4

Magnetic PD Controller

In a simplified model, the magnetic field vectors can be calculated at any point using the following equation :

91

Hardware Testing and Simulation

5-26

This equation can be further expanded out and expressed in terms of the orbital frame as follows:

B0

_

e 0 = -3

R3 H
R

{-2 8
cos

0 sin (} .sin . imJ {i .

Sin lm

COS lm

.

k

]

J
5-27

0

0

And finally the magnetic field vectors can be expressed in terms of the body frame:
5-28

5-29

Torque from a magnetic torquer is expressed as follows:
5-30

As only the components of

M that

are perpendicular to

B create

a torque, the following

relationship is used to obtain the optimal torque to stabilize the spacecraft. This approach was also utilized by Makovec (2001) and Wisiewski (2004).

Moptimal

~ Ms: Ms

--

=

Moptimal X

IIBsll

Bs

5-31

Eq.(S-30) and Eq.(S-31) can then be expanded out to

A simple PD controller can be applied to Eq. (5-32) with following equation:

M8

-

as the control torque as shown in the

92

Control Law Development

Moptimalx Moptimaly Moptimalz

= -kly(Y)

- k2y (y')
5-33

= -klcp(б)- k2cp(б') = -kla(a) k1б

k2a (a')

And the gains for this controller were selected to be as follows:

k1y =

= k1a = 0.0000225

k2y = k2б = k2a = 0.0000801
With this control law and the previously selected gains, a test case was run using the initial conditions found in Table 71. The plot in Figure 48 shows that this particular controller with these gains will settle the spacecrafts attitude at the desired orientation in about 3-4 orbits. Figure 49 show that this controller produces the required amount of torque without exceeding the available magnetic moment of the previously designed actuator.
Table 71: Initial conditions for magnetic PO Controller

Principal MOl [kg и m 2 ]

Stored momentum [mNms]

a
Angle[roll pitch yaw) Rate

б
y
0

[r:d]

Desired angle

[0.002] 0.003
0.005

[~]

[70░ 70░
70░

l
3 3.5 4

Wo 1 2w 5 Wo

[~]

i'~E:: . ::::
0 0.5 1 1.5 2 2.5

4.5

l
5 5 5

I ~ts:
0 0.5 0 0.5

1

1.5

! ~r;;
1

1.5

: : : : : : :l
2 2.5 3 3.5 4 4.5

:: ::: :: j
2 2.5 3 3.5 4 4.5

Orbits
Figure 48: Magnetic PO controller response

93

Hardware Testing and Simulation

2r-~--~--~--~~--~--~--~~==~

X

10

-7

- - uu __.,.._........,_ _ _ _ _ _ _---1 ----- ucl> .......... u
p

y

-2

-4

0
X

0.5 10-S

1.5

2

25

3

as

4

~5

5

4
- - mz
и.;r-~.,.._-~-=-----------1

~

0 -2
-4

.......... mx
4.5

----- my

0

0.5

1.5

2

2.5

3

3.5

4

5

Orbits
Figure 49: Magnetic PD controller input

5.5.5

Sliding Mode Adaptive Controller

To ease the development of the adaptive control law, it is easier to express the spacecraft nonlinear equations of motion in Lagrangian form, as this will provide a symmetric inertia matrix with

a", cp"y" as coefficients. Although this can be done from the energy equations directly, it is

easiest in this case to use the following relationship and Eqs. (5-18 to 5-20):

La

= Ea cosб cosy + Ecf> cosб sin y -

Ey sin y
5-34

The full derivation of these equations can be found in Kumar and the final result is reproduced in Appendix E. To design a sliding mode controller, first the sliding planes are selected as follows:

5-35

Where c1

-

c6 positive constants (control gains) of the sliding are plane and will specify the

performance of the controller. The adaptive parameters in this control law will be the inertias of the spacecraft. Doing so will allow the controller to adapt to changing moments of inertia of the spacecraft (caused due to

94

Control Law Development

antenna deployment, fuel sloshing etc.). It will also adapt the controller to minor actuator failures, and misalignments. Applying Eq. (5-34) to Eqs. (5-18)(5-19)(5-20) and then dividing by / 22 will allow the expressions to be written in the following form:

5-36

This will allow the design of a candidate Lyapunov function with the following form:

5-37

The derivative of V gives:
5-38 5-39

Substituting Eq. (5-36) into Eq. (5-39) and rearranging, the following relationship can be shown:
5-40

Where;
5-41 5-42
5-43

These equations can be expressed in terms of the spacecraft's principal moments of inertia which will be changed by the controller:
5-44 5-45 5-46

The adaptation of the inertial parameters is handled with another adaptive function based on the previous sliding mode controller

95

Hardware Testing and Simulation

5-47

5-48

Eq.(5-48) expands out to:

5-49

Knowing that:

5-50

Vd Becomes:

+53 ( 87lxx + 8alyy + 89lzz + Cs Uy) -51 ( 81lxx + 82lyy + 83lzz)
5-51

-52 ( 84fxx + 8sfyy + 86fzz) -53 ( 87fxx + 8alyy + 89lzz)

Setting the following terms from Eq. (5-51) to zero

-5181lxx- 5284lxx- 5387lxx

+ -lxxlxx
Y1

1 -

"'I

=0

5-52

-518 2 iyy -52 8 5 iyy- 5 38 8 iyy +..!.. iyy l;y Yz

=0

5-53

5-54

Allows the estimated parameters to be found as:

= Y1 (51 81 + 5284 + 5387) l;y = Y2 (51 82 - 528s - 538s)
f;z

i~x

5-55 5-56 5-57

= Y3(5183 -5286 -5389)

To ensure that Vd remains negative, definite and asymptotically stable the remaining terms are set to:

96

Control Law Development

( 8 1 fxx + 8 2 fyy + fJ 3 f22 +c1 Ua) (8 4ixx + 8 5 iyy + 8 6izz + c3 Uб) ( e4ixx + 8siyy + e6izz + CsUy)

= -rysgn(S1 ) - K1 S1 = -rysgn(S2 ) - K 2 S2 = -rysgn(S3)- K3S3

5-58 5-59

5-60

This leads to the final control law in terms of angular acceleration with respect to the orbital velocity:

Ua

8 1 ixx + 8 2 iyy + 8 3izz + rysgn(S 1 ) + K 1 S1 = _____ . ;. . ;. . ._________ _
Ct
2 4 6 5 2 2 = ----------------)

5-61

Uб

8 ixx + 8 iyy + 8 izz + rysgn(S

+K

S

c3

5-62

Uy

8 7 ixx + 8 8 iyy + 8 9 izz + rysgn(S 3) + K_ = _____ . . ;. . .;. . _________ 3 S3

cs

5-63

To relate these commanded accelerations to torque from an actuator (e.g., reaction wheel) the following relationships are used;

Initial Attitude Control Using Sliding Mode Technique
To prove this controller is adaptable to different spacecraft both the ideal spacecraft MOl and the worst-case MOl were tested with the same initial conditions. The initial conditions for the ideal MOl are shown in Table 72 and the worst case in Table 73. It can be seen in both Figure SO and Figure 53 that the controller stabilizes the system in less than half an orbit. Figure 52 and Figure 55 both show that the angular momentum used in this maneuver is lower than that of the previously designed reaction wheel. Figure 52 and Figure 54 show that the torque required to settle the system is well within the capabilities of the motor. Additionally those figures show that the adaptive gains settle down after 0.5 orbits.

97

Hardware Testing and Simulation

Table 72: Initial conditions ideal cube Principal MOl Stored momentum [mNms]

a
Angle[roll pitch yaw) Rate

[kgи m 2 ]

б
y

[r:d]

Desired angle

r-001666 0.001666
0.00166

1

[~]
Stored momentum [mNms]

[70░ 70░
70░

l

[2f]

[~]

Table 73: initial conditions worst case MOl Principal MOl

[kgи m 2 ]

Angle[roll pitch yaw)

Rate[б] [r:dJ

Desired angle

r002 0.003
0.005

1

[~]

[70░] 70░
70░

[~0]

[~]

! ~l ! 1~~
0 0

~ 1~ ~-=-~=-=--=-~-=--=-~-=--=--=-=-==l '- 0 0.5 1.5 2 2.5 3 3.5 4 4.5
1

5

0.5

0.5

: : : : : : : : :l : : :: ::l
1 1.5 2 2.5 3 3.5 4 4.5 5

:

:

:

1.5

2

2.5

3

3.5

4

4.5

5

Orbits

Figure 50: Attitude response (ideal cube MOl)

98

Control Law Development

X

10-5

1

'

'

'

'

6
E
1-'

0.5 0,
I

- - ua ----- ucl> .......... u
'Y

A

-0.5 -1 -1 .5 0
r r r r r r r

0.5

1.5

2

2.5

3

3.5

4

4.5

5

'(ij
ID
C>

c::

w

0.1 }-----------I 0.05

rJ

и~----~----~----~----------

- - Ixhat
-----иI~~

0

iro

-0.05

f\..................................................................................................и.и.и.и~.~~~~~..
:'

~

-0.1 .. -0.15 '-----'----r - - L - - - - - - ' - - - - - - - ' - - - -r '----'-r - -- - r '_----'-r -------'-------l. 1.5 2 2.5 3 3.5 4 4.5 5 0 0.5

Orbits

Figure 51: Torque and adaptive gains (ideal cube MOl)

!~~v : : : : : : : : : l !: ~ : : : : : : : : : l l ~~v : : : : : : : : : l
0 0.5 1.5
2

2.5

3

3.5

4

4.5

5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits

Figure 52: Reaction wheel storage momentum (ideal cube MOl)

99

Hardware Testing and Simulation

l ! ~l : : : : : : : : : l
-50 0 0.5 1.5 2 2.5 3 3.5 4 4.5 5
1

~ 1~l
0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits
Figure 53: Attitude response (worst case MOl)
X

10-6

5
.............

'
I I

'

'

'

'

or-..
-5 -101-15
r r r
r
r

- - ua
----- ucll .......... u
y

...........
1-'

z

E

r

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

C/)

0.1 0.05 0 -0.05

, ________ _: _____ ,: ____ _:__________ _:_____ :_ ___ _

"(ij
C>

C

J ~

--lxhat

----- 1 yhat

Q)

~

> ~ ro

\

иииииииииии 1 zhat .иииииииииииииииииииииииииии-ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
0.5 1.5 2 2.5 3 3.5 4 4.5 5

-0.1 ....
-0 .

1 S~--~r--~r~--L-'--~---L-'--~'----L---~'----L-'--~

0

Orbits
Figure 54: Torque and adaptive gains (worst case MOl)

100

Control Law Development

!~:~r : : : : : : : : : l !: p: : : : : : : : : l ~~ ~::r: : : : : : : : : 1
0 0.5 1.5
2

2.5

3

3.5

4

4.5

5

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits
Figure 55: Reaction wheel storage momentum (worst case MOl)

Attitude Maneuver Response
A second test case was run to test this control laws ability to track a desired attitude angle, again similar to the previous case both the ideal cube and worst case MOl simulated with the initial conditions found in Table 74 and Table 75. Again Figure 56 and Figure 59 show the control law settling to the desired attitude in under half an orbit. Figure 57 and Figure 60 show the torque required is within the capability of the actuator, more interestingly the adaptive gains both seem to settle to a constant slope. Figure 58 shows the momentum settling down to a final value as expected (as the moments of inertia are equal) and Figure 61 shows a minor increase in the angular momentum as expected as a constant torque is needed to overcome a gravity gradient torque.
Table 74: Attitude maneuver initial conditions (ideal cube)

Principal MOl [kgи m 2 ]

Stored momentum [mNms]

Angle[roll pitch yaw)

a б Rate
y

[r:dl

Desired angle

[0.001666] 0.001666
~~~~Jgg

m

[~:]
~0

[~]

rS'l
45░
~~0

101

Hardware Testing and Simulation

Table 75: Attitude maneuver initial conditions (worst case MOl)

Principal MOl

[kgи m 2 ]

Stored momentum [mNms]

a
Angle[roll pitch yaw} Rate б

[r:d]

Desired angle

r-002]
0.003

~ ~~~

m

[~:
~0

l

y

[~]

[45░ 45░
~~0

l

f ~f : : : : : : : : : l
0 0.5 1.5 2 2.5 3 3.5 4 4.5 5 0.5 1.5 2 2.5 3 3.5 4 4.5 5

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits
Figure 56: Attitude maneuver response (ideal cube MOl)
X

10-6

8 6

.

'

'

'

.

'

.
- - ua

";:'2
0
-2

z

E4
w ,,
0
r r r

..........

----- uc!J
uy

r

r

r

r

0.5

1.5

2

2.5

3

3.5

4

4.5

5

C/)

0.1 0.05

r - - r - - - - r - - - , - - r, ---r,--.,-------.-------.-~==::::::!==:::::;F -

'(ij

C::

--lxhat
, ...... _____ .., _______________ .., _____ .., _____ ,_____ ----- 1 yhat

~

g- ~~ иииииииииииии~иииииииииииииииииииииииииииииии~ииииииииииииииииииииииииииииииииииииииииииииии "0 -0.05 r- \ ........... ..
<( -0. 1 ,____r.___'--r_ _,___ r _ 0 0.5 1.5
_,___ r_...._r_----'-r-----'-r_ ____._r_ ____._r_

~ >

rt O~r--------------------------------l:"'~"= ...~ .. ~~z~ha~t
___.~.

2

2.5

3

3.5

4

4.5

5

Orbits

102

Control Law Development

Figure 57: Torque and adaptive gains while maneuvering (ideal cube MOl)

~ ~и~~ : : : : : : : : : j ~ -~~ : : : : : : : : : l l~~~ : : : : : : : : : l
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5

Orbits
Figure 58: Reaction wheel storage momentum while maneuvering (ideal cube MOl))

I~f : : : : : : : : : j
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5

! ~f : : : : : : .: : : j
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5

~ ~f : : : : : : : : : j
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5

Orbits
Figure 59: Attitude maneuver response (worst case MOl)

103

Hardware Testing and Simulation

X

10-6
L L
L L

8

1-'

6
4 2

- - ua ----- ucp .......... u
y

E ~

0~
-2
r r r r r r r

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

rn c
0>
"+='
t╗

0.1
--lxhat

ro o.o5

,r------------~-------~---~----------------

----- 1 yhat .......... 1 zhat

>

~
<(

-0.05 \ ............................................................................................................. .
-0. 1 '-..-------'-----'--'---' ---''----'---''------'-----'--'----r _
__.____ _._r_ ____,_

0

0.5

1.5

2

2.5

3

3.5

4

4.5

5

Orbits
Figure 60: Torque and adaptive gains while maneuvering (worst case MOl)

z
en E
E ..........
1j

21
1.5 1 0 0

I

s
I

0.5

: : : : : : : : :
1.5 2 2.5 3 3.5 4 4.5 1.5 2 2.5

l
5 5

z

en E

-er

o:l : :
0.5

: : : :
3 3.5 4

z
en E
E ..........
I
?-

4.5

:J

1J
0

; ; ; ; ; ; ; ; ;
0.5 1.5 2 2.5 3 3.5 4 4.5

Orbits

l
5

Figure 61: Reaction wheel storage momentum while maneuvering (worst case MOl))

104

CHAPTER6
CONCLUSIONS AND FUTURE WORK

6.1 Conclusions
Pica-satellites are viable development platforms for testing new technologies in the space environment. The opportunities given to fly the earliest pica-satellites as secondary payloads have benefited all facets of the space community, both by effectively training the next generation of spacecraft designers and by pushing the boundaries of space technology at largely reduced risk and cost. The CubeSat standard is a wonderful way for universities and companies to

participate in small satellite design. With a larger number of universities and companies doing research in small satellites, one can expect complex space technologies to be developed even faster. Already the development of space technology through CubeSats is evident with missions like CanX-2. It is felt by the author that future CubeSat missions will become even more complex, and these satellites will eventually be performing the tasks traditionally expected by nano and micro-satellites, such as operating inexpensive telescopes. And even if physical requirements prevent CubeSats from performing these tasks (such as inability to scale down optics), the technology developed for CubeSats will influence larger systems by creating technology that has lower mass and power requirements. In this thesis, a novel systems bus and a power subsystem were designed, developed and tested. Additionally, actuators and control algorithms for the satellite were designed.

6.1.1

System Bus

The standard used in RyeSat is similar to those used in other CubeSats. Because of this similarity, a standard based on this work could be widely accepted as a future industry standard. Furthermore, this standard is also relatively low cost and requires no special connectors or specialized hardware. Early breadboard tests have shown no problems with the interface,

105

Conclusions and Future work

illustrating an early level of repeatability and reliability. The subsystems developed thus far are fully compatible with earlier breadboard models, proving that the standard can allow for incremental improvements and development of a system. In addition, only the slowest speed data rate has been used, implying there can be further improvement in the data rate. Although no standard can ever solve all problems, the standard proposed by the author does handle low data transmission requirements satisfactorily and is scalable for future missions. Additionally, this bus setup is similar to the already proven MIL-STD-1553 bus and is scalable both upwards and downwards to allow for larger and smaller satellites and subsystems.

6.1.2

Power Subsystem

The power subsystem as presented is a working breadboard level of the actual spacecraft part; it is fully capable of supplying the 3.3V and 5V uninterruptible supply lines, and switching on and off the controllable 3.3V supply lines. The power subsystem is also capable of charging a lithium ion battery from a simulated solar cell input and measures various currents and voltages within the system to verify its correct operation. Furthermore, the power subsystem fits the standard size PCB and is capable of communicating with the rest of the satellite using the standard bus proposed.

6.1.3

ACS

Both magnetic torque rods and reaction wheels were sized for use on RyeSat, and it was found that these actuators would fit within a single cube CubeSat and will be highly effective in controlling the attitude of RyeSat along all three axes. The PD magnetic controller was able to stabilize the tumbling motion without exceeding the available magnetic moment from the designed torque coils. Finally, nonlinear adaptive sliding mode controllers for the reaction wheels were successful in stabilizing the 3-axis attitude motion of the RyeSat with a high degree of attitude precision and within half an orbit. Furthermore, these control laws did not exceed the torque available from the designed reaction wheels.

6.2 Future work
6.2.1 System Bus

An effort should be made to create a module that will allow previously developed systems to interact with the industry standard CubeSat kit. The power board would be a logical place to add

106

Future work

a bridge between the previous Ryerson devised pin out and that of the CubeSat kits. The major difference between the two standards is the physical interface and the way power to subsystems is individually controlled by the power subsystem. The modification would divert the 3.3V and SV
2 uninterruptible lines to the base CubeSat kit flight module and carry the 1 C lines from the Flight

module to the standard interface. Also, a re-examination of the board standard should be undertaken to allow it to fit together with the standard CubeSat kit card standard.

6.2.2

Power Subsystem

The power subsystem can be further improved in order reduce the number of parts on the board and simplify the design. This subsystem also needs to undergo several tests before actual implementation on the RyeSat; these tests include a vacuum test of the selected lithium ion cells, a full vacuum test of the charging system and battery, and a test with the estimated extreme temperatures.

6.2.3

ACS &ADS

In this thesis, the ADS was used to filter, calibrate and gather data from analog sensors. The C&DH subsystem would then apply the control law and send commands to the ACS which would then turn on the torque coils. One problem with this approach is that it involved the active participation of the C&DH module, a system that could be already busy doing other things such as decoding radio signals or dealing with payload data. The other problem with this setup is the magnetometer is currently located on the ADS subsystem preventing the ACS from directly knowing what magnetic field it is torquing against; this hinders the capability of the ACS greatly.
2 A better strategy would be to add a remote 1 C based magnetometer available to both the ADS

and ACS; this would allow for placement of the magnetometer further away from the torquing coils and the radio. This would also also allow the ACS to act more intelligently in its application of the magnetic torque coils. The other change that should be made to the overall design is the division of work for each component of the attitude determination and control system (ADCS). First, the ADS module should pre-process the raw data and produce the most up to date estimation of the attitude; this device could then just be polled for the spacecraft's current attitude states by either the C&DH for transmission to earth or by the ACS for determining the control outputs. The ACS should also be modified to be an on orbit reprogrammable device.

107

References
Alger, M ., G. McVittie, T. Patel, and Shaild. "Picosatellite CDR document." Department of Aerospace, Space Systems Dynamics & Controls Group, Ryerson University, Toronto, 2007. Alminde, L. AAU CubeSat,. Ala borg University. 2003. http://www.cubesat.auc.dk/ (accessed September 20, 2007}. Alminde, L., M. Bisgaard, D. Vinter, T. Viscor, and K. Ostergaard. "AAU CubeSat Documentation." Robustness of Radio Link Between AAU Cubesat and GroundStation. Alalborg University. 2002. http://www.cubesat.aau.dk/ (accessed September lOth, 2007}. AMSAT. AMSAT- Satellite Detaii-CubeSat OSCAR 55. The Radio Amateur Satellite Corporation. April6, 2006. http://www .amsat.org/ amsat-new/satellites/satlnfo. php ?sat ID=69& retU RL=satellites/all_ oscars.php (accessed July 22, 2008}. Bleier, T., et al. "Lessons Learned, Quakefinder." QuakeSat. Stanford University. 2004. http://www.quakefinder.com/lessons.htm. (accessed June 15, 2007}. Caillibot, P. Systems Engineering and Ground Station Software for the CanX-2 Nanosatellite,. Masters Thesis, Toronto, Ontario: Unversity of Toronto, UTIAS, 2005. David, L. CubeSats: Tiny Spacecraft, Huge Payoffs. lmaginova. September 8, 2004. http://www.space.com/businesstechnology/cube_sats_040908.html. (accessed July 10, 2007}. Diamond systems Corporation. Earthquake Research Satellite Demonstrates Ruggedness of Diamond Systems' CPUs. Diamond systems Corporation. 2001-2008. http://www.diamondsystems.com/articles/13 (accessed March 9, 2008}. Durham, Matthew. Cubesat Community- Missions. 2008. http://www.cubesat.org/ (accessed March 23, 2008}. ESA. Space Engineering SpaceWire- Links Nodes routers and networks. ESA Publications Division, ESA, Noordwiik Netherlands: ESTEC, 2003. Fleeter, R. The Logic of Microspace. El, Segundo, CA.: Space Technology Libaray, Microcosm Press, 2000. Galysh, 1., K. Doherty, J. McGuire, H. Heidt, D. Niemi, and G. Dutchover. "CubeSat: Developing a Standard Bus for Picosatellites." Proc. SPIE (Society of Photo-Optical Instrumentation Engineers) 4136, (November 2000}: p. 64-71. Holbert, K. Space Radiation Environmental Effects,. Arizona state University. Febuary 26th, 2008. http://www.eas.asu.edu/"'holbert/eee460/spacerad.html (accessed March 9, 2008}. Hughes, P. Spacecraft Attitude Dynamics. 1st Dover edition. Mineola, New York: Dover Publications, 2004. HutputtEanasin, A., and A. Toorian. "CubeSat Design Specifications Revision 9, Cal Poly." Cubesat Community. California Polytechnic State University. August 2, 2006. http://cubesat.atl.calpoly.edu/media/CDS_revlO.pdf (accessed January 1, 2007}. Intelligent Space Systems Laboratory. University of Tokyo CubeSat Project Critical Design Review. Power Point Presentation File. ISSL at the University of Tokyo, Tokyo, April 6, 2001.
-.XI Series of CubeSats. ISSL Tokyo University. March 19, 2008. http://www.space.t.utokyo.ac.jp/cubesat/index-e.html (accessed March 26, 2008}.

108

Kayal, H., K. Briers, H Driesher, J Eckler, and 0 Hillenmaier. "Miniaturization -a New Evolution Level of Developmetn of Reaction Wheels." 5th International Symposium of the International Academy of Astronautics on Small Satellites for Earth Observation. Berlin, 2005. Krebs, G. Gunter~s space page. December 08, 2007. http://space.skyrocket.de/index_frame.htm?http:/ /space.skyrocket.de/doc_sdat/xi-4.htm (accessed March 30, 2008). Kumar, K. D. Fundamentals of Space Systems. 1st edition. Toronto, Ontario: Ryerson Bookstore, 2006. Lab for Space Systems. "CUTE I Satellite Homepage, Tokyo Institute of Technology." CUTE I. TITECH CUBESAT PROJECT TEAM. Febuary 21, 2006. http://lss.mes.titech.ac.jp/ssp/cubesat/index_e.html (accessed March 9, 2008). Larson, W., and J. Wertz. Space mission analysis and design. 3rd Edition, 7th printing. El. Segundo, California :Space Technology Libarary/Microcosm, 2005. Long, M., et al. "A cubesat derived design for a unique academic research mission." 16th Annual USU Conference on Small Satellites. Logan, Utah, 2002. Makovec, K. "A Nonlinear Magnetic Controller for Three Axis Stability of NanoSatellites." Masters thesis, Aerospace Engineering, Virginia Polytechnic Institute and State University, Blacksburg, Virginia, 2001. Microchip. "16 -Bit 28pin Starter Development Board User's guide." 2007. http://wwl.microchip.com/downloads/en/DeviceDoc/DS-51656A.pdf (accessed May 3, 2008). {Z}verby, E. Attitude control for the Norwegian student satellite nCube. Masters Thesis, Department of Engineering Cybernetics, Norwegian University of Science and Technology, Trondheim: Norwegian University of Science and Technology, 2004. Paruchuri, N. KUHABS~ KUBESAT&KUTESAT-1 Technical Kansas: Kansas State University, 2006.
Report~

Design of a Modular. Thesis, Lawrence,

Phillips NXP Semiconductor. The 12C-Bus Specification Version 2.1. Data sheet, Eindhoven, The Netherlands: NXP semiconductor, 2000. Portescap. "The nuvoDisc Motor." Portescap- Minature Motors. 2007. http://www.portescap.com/catalog/nuvoDisc%2032BF%20promo%20flyer%208.07.pdf (accessed June 5, 2008). Pumkin. "CubeSat Kit." CubeSat Kit.FM430 Flight ModuleHardware Revision: C. Pumkin Incorporated, San Francisco, California. 2007. http://www.cubesatkit.com/docs/datasheet/DS_CSK_FM430_710-00252-C.pdf (accessed July 20, 2007). Pumpkin. CubeSat kit datasheets. April 2008. http://www.cubesatkit.com/docs/datasheet/DS_CSK_ADACS_634-00412-A.pdf (accessed June 3, 2008). Sinclair Interplanetary. Sinclair interplanetary Reaction wheels. 2008. http://www.sinclairinterplanetary.com/30mNm-secwheel2008c.pdf (accessed June 3, 2008). Space Flight Lab. CanX-1. University Of Toronto lnistitute for Aerospace Studies. 2007. http://www.utiassfl.net/nanosatellites/CanXl (accessed 08 10, 2007).
-. CanX-2. 2007. http://www.utias-sfl.net/nanosatellites/CanX2 (accessed 08 10, 2007).

Space Quest. SpaceQuest products. 2008. http://www.spacequest.com/products/TQR-5.pdf (accessed June 3, 2008).

109

Stras, LN., D.D Kekez, G.J. Wells, T. Jeans, R.E.Pranajya,F.M Zee, and Foisy.D.G. "The design and operation of the Canadian advanced nanospace eXperiment (CanX-1)." AMSAT-NA 21st Space Symposium. Toronto, Ontario, Canada: Proc. AMSAT-NA 21st Space Symposium, 2003. Sturrman, Bryan. "RyeSat 12C Comm spec- lCD." Internal Interface Control Document, SpaceSystems Dynamics and Controls group, Ryerson University, Toronto, 2007. US Department of Defense. Digital time Division Comand/Response Multiplex Data Bus. Online Document. 1996. Villa, M. Project Management of a Student Built Space Satellite: The KUTESat- 1. PhD Thesis, University of Kansas, Lawrence, Kansas, USA: University of Kansas, 2005. Villa, M. "Project Management of a Student Built Space Satellite: The KUTESat- 1." PhD Thesis, University of Kansas, Lawrence, Kansas, USA, 2005. Wagner, A., M. Sams, R. Krauland, and A. Salerno. "Lion sat Team 4 Magnetic Torquer." Pennsylvania State University. 2003. http://www.mne.psu.edu/me415/fall03/lionsat4/designtrl.htm (accessed May 28, 2008). Wagner, J. Cajun Advanced Pico-satellite Experiment,. University of Louisiana at Lafayette. 2005. http://cape.louisiana.edu/ (accessed March 26, 2008). Wang, T. "Development, Implementation, and Testing of Software for the CanX-1 On board." Masters Thesis, UTIAS, University of Toronto, Toronto,Ontario, Canada, 2004. Wikipedia. M/L-STD-1553. Wikipedia. July 22,2007. URL: http://en.wikipedia.org/wiki/MIL-STD-1553 (accessed July 22, 2007). -.Serial Peripheral Interface Bus. June 2008. http://en.wikipedia.org/wiki/Seriai_Peripheral_lnterface_Bus (accessed July 31, 2007). Wisiewski, R. Aalborg University Student Satellite. Aalborg University. 2004. www.cubesat.auc.dk (accessed 08 20, 2007).

110

Appendix A
Side 1 earth facing

Thermal Calculations
Table 76: Sides 1- 3 in a 1000 km orbit (hot and cold cases) Side 2 Radial outward facing Side 3 space facing

500 km alt Solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR Hot 1420 0.3 244 0.85 0.92 0.01 0 0.8587 0.8618 0 178.09438 337.756656 Cold 1360 0.23 218 0.85 0.92 0.01 0 0.8587 0.8618 0 159.11711 248.0053568

500 km alt Solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR

Sun facing Hot 1420 0.3 244 0.85 0.92 0.01 1 0 0 1306.4 0 0

Space facing Cold 1360 0.23 218 0.85 0.92 0.01 1 0 0 0 0 0

500 km alt Solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR Hot 1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.6212 Cold 1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.02329

Q solar Qalbino Q Earth lr Q backload Qface1

0 1.7809438 3.37756656 0 5.15851036

0 1.5911711 2.480053568 0 4.071224668

Q solar Qalbino Q Earth lr Q backload

13.064 0 0 0 13.064

0 0 0 0 0

Q solar Qalbino Q Earth lr Q backload

0 0.048117 1.076212 0 1.124329

0 0.04299 0.790233 0 0.833222

111

111~1

Hid I \..diLUidliUrl!;

Table 77: Sides 4- 6 in a 1000 km orbit (hot and cold cases) Side 4 space facing Side 5 space facing Side 6 space facing

500 km alt
Hot solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR Cold

500 km alt
Hot solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR Cold

500 km alt
Hot solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q albino q EarthiR Cold

1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.621 2

1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.0232 9

1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.621 2

1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.0232 9

1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.621 2

1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79 .0232 9

Q solar Qalbino Q Earth lr Q backload

0 0.04811 7 1.07621 2 0 1.12432 9

0 0.04299 0.79023 3 0 0.83322 2

Qsolar Qalbino Q Earth lr Q backload

0 0.04811 7 1.07621 2 0 1.12432 9

0 0.04299 0.79023 3 0 0.83322 2

Q solar Qalbino Q Earth lr Q backload

0 0.04811 7 1.07621 2 0 1.12432 9

0 0.04299 0.79023 3 0 0.83322 2

112

Table 78 Sides 1- 3 in a 500 km orbit (hot and cold cases)

Side 1 500 km alt solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

earth facing

Side 2 500 km alt

Sun facing

Side 3 500 km alt

space facing

Hot 1420 0.3 244 0.85 0.92 0.01 0 0.8587 0.8618 0 178.09438 337.756656

Cold 1360 0.23 218 0.85 0.92 0.01 0 0.8587 0.8618 0 159.11711 248.0053568

solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

Hot 1420 0.3 244 0.85 0.92 0.01 1 0 0 1306.4 0 0

Cold 1360 0.23 218 0.85 0.92 0.01 1 0 0 0 0 0

solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

Hot 1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.6212

Cold 1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.02329

Q solar QAibedo Q EarthiR Q backload Qface1

0 1.7809438 3.37756656 0 5.15851036

0 1.5911711 2.480053568 0 4.071224668

Q solar QAibedo Q EarthiR Q backload

13.064 0 0 0 13.064

0 0 0 0 0

Q solar QAibedo Q EarthiR Q backload

0 0.048117 1.076212 0 1.124329

0 0.04299 0.790233 0 0.833222

113

1nerma1 Latcutanons

Table 79: Sides 4- 6 in a 500 km orbit (hot and cold cases)

Side4 500 km alt solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

space facing

Side 5 500 km alt

space facing

Side 6 500 km alt

space facing

Hot 1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.6212

Cold 1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.02329

solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

Hot 1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.6212

Cold 1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.02329

solar constant Albedo Earth IR Emissivity of side Absorption of side Area F solar F Albedo FEIR q solar q Albedo q EarthiR

Hot 1420 0.3 244 0.85 0.92 0.01 0 0.0232 0.2746 0 4.81168 107.6212

Cold 1360 0.23 218 0.85 0.92 0.01 0 0.0232 0.2746 0 4.29896 79.02329

Qsolar QAibedo Q EarthiR Q backload

0 0.048117 1.076212 0 1.124329

0 0.04299 0.790233 0 0.833222

Qsolar QAibedo Q EarthiR Q backload

0 0.048117 1.076212 0 1.124329

0 0.04299 0.790233 0 0.833222

Q solar QAibedo Q EarthiR Q backload

0 0.048117 1.076212 0 1.124329

0 0.04299 0.790233 0 0.833222

114

The following is an elaboration of the methods used in the previous tables
Qnet =

I
sides

Qsolar

+ Qalbedo + Qearth/R + Qbackload + Qheatgenerated

6-1

_ Tinside - Tspace _ Tsurface - 0 _ Tsurface - Tinside Q netR 1 L total
hradiativeA K solarcell(g lass)A

and
Rtotal

6-2

=

1
hradiativeA

+------Ksolarcell(glass)A
6-3

L

Where:
E

is the emissivity of the solar cell (major covering on the spacecraft)

ais the Boltzmann constant 5.67051x10-8W/m2K4 A is the area of the face of the spacecraft Tis the temperature (for the given subscript) The following is the equation relating the trip point on the thermostat to a particular resistor value
Rrrip

= 0.5997 X (Tdesired)2.1312

6-4

115

Appendix B
A.l.

12 C Communications Test Code

Single Byte Each Way
A.1.1. Overview

The following code was used as a reference to test and demonstrate the proposed system bus communication standard. This early iteration of the code utilized two different series of PIC microcontrollers a PIC24F as the master and a PIC16 as the slave. Either of these processors could have been the master or slave however in the interest to save power and increase reliability the 8Bit Pic16 series is more commonly used throughout the spacecraft as a slave device. So for this test it made sense to have the 16 series as the slave

A.1.2.

Slave

The slave is a PIC16F777 is shown below.

SSDC Ryerson University I2C test [Slave]

Code Excerpt 1: Slave Code for PIC 16 series
I /unit Powerboardfirmwarev0002; //control port/ttl port definition #define PSl PORTD.F4 #define PS2 PORTD.F5 #define PS3 PORTD.F6 #define #define #define #define #define PS4 busenable chargeenable STATl STAT2 PORTD.F7 PORTD.F2 PORTD.F3 PORTD.Fl PORTD.FO

116

//#define SCLK //#define SDA

PORTC . F3 PORTC.F4

// anal o g channel definiti o n #define getS o lCel_1 #define getS o lCel_2 #define getS o lCel 3 #define get So lCel 4 Adc Read(1 2) Adc_Read(1 0 ) Adc_Read ( 8) Adc _Read ( 9 ) Adc_Read ( 11 ) Adc_Read ( 13 ) Adc_ Read (2 ) Adc_Read (0) Adc_Read ( 1 )

-

#define getS o lCel - 5 #define getSo lCel 6 #define getSolVolt #define getBattVolt #define getBattDraw

//Built in functions from MikroC #define Lo(param) #define Hi (par am) ((char *)&param) [OJ ( (char *)&par am) [ 1 J ( (char *)&par am) [ 2 J ( (c har *)&par am) [ 3 J

#define Higher (par am ) #define Highest (par am) #define lo(param) #define hi (par am)

((char *)&param) [OJ ( (char *)&par am) [ 1 J ((char *)&param) [ 2 J ((char *)&param) [3J

#define higher(param) #define highest(param)

/*******************************************************************************
* Global Variables *******************************************************************************/ char junk; II a place to dump extraneous data i . e . Address after it is checked unsigned char ctrlbyte ; unsigned char length_msb, length_lsb , c heck_msb , check_lsb; char Datain[20 J ; unsigned char dataout[20J={"\x00\x00\x05\x00\x05 \ xFF " ) ; char i,j=O ; unsigned int length , checkcalc=O, checkreceived, lasterror=O ; unsigned int BattVolt, Battdraw , Sol_1 , Sol_2 , Sol_3, Sol_4, Sol 5, Sol_6 , Sol_volt ; unsigned char temp3[13J="sucks " ;

lllll/ll/llllll/llllllllllll/lllllllll/1/ll/l/llll/llll/lllll/ll//ll/lllllll////

char readi2cbyte(void); void s_writei2cbyte(unsigned char data_out) ; void S_PUTS( char* wrptr); void readADC (vo i d) ; void clearwdt(void); void howdy (void);

/***~***************************************************************************

interrupt function *******************************************************************************/

void interrupt (void) INTCON . GIE=O; //PORTD=OxFF; /* t urn of further interrupts*/

II turn on tes t port

117

2 1 C Communications Test Code

if(!SSPSTAT.F2 && !SSPSTAT.FS) {

/* checks i2c state: for our protocol only state 1 works slave receive and last packet was and address other states are interpreted as errors* I

PORTC. F7=1; checkcalc=O;

/* flick a bit to indicate receive mode has started.*/ /* reset the checksum as some is done in a loop*/ /* empty the SSPBUFF OF THE ADDRESS*/

junk=readi2cbyte ();

ctrlbyte=readi2cbyte(); length_msb=readi2cbyte(); length_lsb=readi2cbyte();

/*read control byte

*/

/*read the high byte of length*/ /*read the low byte of sentence length*/ /* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/ /*read in data bytes into an array* I /*add them up as a checksum now; to save a loop later*/

length=length_msb* OxlOO+ length _lsb;
i f (length<20) {

for {i=O; i< (length_lsb-5); i++) { Datain[i}=readi2cbyte(); checkcalc=checkcalc+Datain[i}

else{ lasterror=OxEl; /*error condition sentence is to big */ /* flash the error on the test port */

!/ TRISD=-OxEl;

check_msb check_lsb

=readi2cbyte(); =readi2cbyte();

/*read the high byte of checksum*/ /*read the low byte of checksum*/

/* check the checksum first turn the received one back to an int */ checkreceived= (unsigned int) check_msb*OxlOO +(unsigned int) check_lsb /* then add up all the received bytes*/ checkcalc checkcalc=ctrlbyte+ length_msb+ length _lsb+ if (checkcalc==checkreceived) { /* this is the main heart of the isr thus far, the slave is synced with the master the datachecksum is ok and the sentence is an appropriate length now is the time to interpret the ctrlbyte and utilize the data received

*I
switch case ( ctr lbyte) OxOO: howdy(); break;

II PORTD=Datain[O];

else

if (lasterror!=OxEl) {

/*check to see if this is not because of previous error*/

lasterror=OxE4

/*error condition Checksum wrong* I /* flash the error on the test port */

!/ TRISD=-OxE4; I

else

if(SSPSTAT.F2&&!SSPSTAT.F5) {

/* checks i2c state: for our protocol only state 3 works slave transmit and last packet was and address other states are interpreted as errors*/

II PORTC.F6=1 ; S PUTS(dataout)
else i f (SSPSTAT. F2) { lasterror=OxE3; else if(!SSPSTAT.F2) ( lasterror=DxE2;

else { lasterror=OxEE; I

/*

Reset interrupts and before leaving interrupt function*/

118

PIR1. SSPI F-0; INTCON. GIE=1;

111111111111111111111111111111111111111111111111111111111111111111111111111111

/*******************************************************************************
* Main

*******************************************************************************/
void main (void)

1*-----------------------------------------------------------------------------Jconfiguration of i2c on MSSP port ------------------------------------------------------------------------------*1

II (*pic16)
TRISC.F3=1;11 configure clock as input TRISC.F4=1;11 configure data as input

II

SSPBUF SSPADD SSPSTAT SSPCON

=OxOO; =OxE6; =Ob10000000; =Ob00110110; II see section 10.4 pic 16f7x7 data sheet for specifics =ObOO (SSP1CON, SSP1CON2) & (SSP2CON, SSP2CON2)

II

SSPCON2

1118 series has two available i2c ports [4 registers]

II although their configuration is similar if not identical to the following
1*------------------------------------------------------------------------------l interrupt setup ------------------------------------------------------------------------------*1

II (*pic16l
PIE1=0x00; PIE1. SSPIF=1;

PIE2=0xOO;II turn off all other
INTCON=O; INTCON. PEIE=1; INTCON.GIE=1; PORTD=Ob00001100; llbusenable=1;

II chargeenable=1;
11------------------------------------------------------------------------------

1*-----------------------------------------------------------------------------IADC setup ------------------------------------------------------------------------------*1 ADCON1 = OxOO;

II Configure analog inputs and Vref

TRISA=Ob00000111; TRISB=Ob00111111;

TRISD = Ob00000011; IIPORTD=OxFF;

II set direction of control outputs and charge stat inputs

readADC ();

do Delay_ms ( 500) ; PS1=-PS1; PS2=-PS2; PS3=-PS3;

119

2 1 C Communications Test Code

PS4--PS4;

INTCON. GIE=O; readADC (); INTCON. GIE=1 ; I I clearwdt () ; while (1);

/*******************************************************************************

* Watchdog reset function
*******************************************************************************/

void clearwdt(void) { asm CLRWDT

/////l//l////////////////////l//////////l/////l/////////////l/////////l/////////
//*****************************************************************************

I /Slave Read char readi2cbyte (void) while (! SSPSTAT . BF); PIR1.SSPIF=O; return ( SSPBUF) ;

//*****************************************************************************

c...

II wait till the buffer is full II reset the overflow interrupt(sspov is tied to this) II return databyte in buffer

//***************************************************************************** //*****************************************************************************

//Slave Write
//*****************************************************************************

void S_writei2cbyte (char data_out) SSPBUF = data_out; SSPCON . CKP = 1; /* data byte loaded into buffer */ /* Release the clock */

//******************************************************************************

/l//////llll////l/1/l/////////////////////l///////l/////////////////////////////

void S_PUTS(char *wrptr)

{

while(*wrptr!=Ox FF && *wrptr+1!=0x00) SSPBUF=(*wrptr++); SSPCON. CKP=1; while (SSPSTAT .BF);
)

)

void readADC (void)

BattVolt Battdraw Sol Sol Sol Sol 1
2
3

getBattVolt ; getBattDraw ; getSolCel getSo l Ce l getSolCel getSo l Ce l getSolCel 1; 2;
3;

4

4;
5;

Sol 5 Sol 6

getSolCel 6;

120

Sol_volt - getSolVolt; WordToStr(BattVolt, temp3);

v o id howdy (void) ( dataout[O]='b'; dataout [ 1] =0; dataout[2]=0xOA; dataout [3]=temp3 [0]; dataout [ 4] =temp3 [ 1]; dataout[S]=temp3[2]; dataout [ 6] =temp3 [ 3]; dataout [7] =temp3 [ 4]; dataout[S]='h'; dataout[9 ] = ' i'; dataout[10]=0xFF;//null to end string dataout[11]=0x00;

A.1.3.

Master

The master is built around the 28 pin starter kit from microchip details are found in (Microchip
2 2007), for th is particular application the second 1 C bus on the microch ip kit was used.

Code Excerpt 2: Slave Code for PIC 16 series
#include "p24fj64ga002.h"

II the above include path may be different for each user. If a compile II time error appears then check the path for the file above and edit II the include statement above.
#include <i2c.h >

#define XTFREQ #define PLLMODE #define FCY #define BAUD RATE #define BRGVAL #define I2CBAUD

7372800
2

//On-board Crystal frequency //On - chip PLL setting //Instruction Cycle Frequency

XTFREQ*PLLMODE 9600 ( (FCY/BAUDRATE) /16) -1 400000

II i2c clock running at 400khz

//_CONFIG1(JTAGEN_OFF&GCP_OFF&GWRP_OFF

&COE_OFF& ICS_PGx1

&FWDTEN_OFF );

//_CONFIG2(IESO_OFF &FNOSC_PRIPLL&FCKSM_CSDCMD&OSCIOFNC_OFF &I2C1SEL_SEC &POSCMOD_XT );

II
void delay (void) int var1 , var2; for(var1=0;var1!=100 ; var1++) for(var2=0;var2 ! =10000;var2++);

II
//void

EnableintiM2C2 ; attribute ( (1nterrupt, no_auto_psv)) _MI2C2Interrupt (void)

121

2 1 C Communications Test Code

I I! II II II Ill

II

jDone=l;

IFS3bits.MI2C2IF = 0;

I /Clear the DMAO Interrupt Flag;

void main (void) CLKDIVbits. RCDIV = 0; RPINRlBbits . UlRXR = 9; RPOR4bits.RPBR = 3; TRISB = Ox0300; UlBRG UlMODE UlSTA BRGVAL; OxBOOO; Ox0440 ;

I/ Make Pin RP9 UlRX I I Make Pin RPB Ul TX

I I Reset UART to 8-n-1, alt pins, and enable I I Reset status register and enable TX & RX

PADCFGl = OxFF; LATB OxFOOO; TRISB = OxOO; unsigned int config2, configl; char check=O,ZZ=90; unsigned int checksum ; unsigned char BB, i=O , X;

I I Make analog pins digital
//Toggle LED ' s

II Configure LED pins as output

char Da tain [] = ( 'Z ' , 'Z ' , ' Z' , 'Z' ) ; unsigned char ctrlbyte = ' z'; unsigned char length_msb=' Z ', length_lsb=' Z', check_msb= ' Z ' , check_lsb= ' Z ' ; lasterror=O; unsigned int length, checkcalc=O, checkreceived ,
/* Baud rate is set for 100 Khz */

config2 = Ox90;

/* Configure I2C for 7 bit address mode */ configl = OxF20; //(I2C_ON & I2C_IDLE_CON & I2C_CLK_HLD &

II II II II II II
while (1) (

I2C_IPMI_DIS & I2C_7BIT_ADD & I2C_SLW_DIS & I2C_SM_DIS & I2C_GCALL_DIS & I2C_STR_DIS & I2C_NACK & I2C_ACK_DIS & I2C_RCV_DIS & I2C_STOP_DIS & I2C_RESTART_DIS & I2C_START_DIS); Openl2C2(configl,config2);

Idlel2C2(); Startl2C2 ();
/* Wait till Start sequence is completed */

while ( I2C2CONbits . SEN ) ;
/* Write Slave address and set master for transmission */

check= MasterWritei2C2(0xE6) ;

/* Wait till address is transmitted */
i f (check==O ) (

checksum=BB+ 7+0; check_msb=checksum/256; check_lsb=checksum % 2 56; LATB=OxAOOO; Idlel2C2 () ; MasterWritei2C2(0x00); Idlel2C2 () ; MasterWritei2C2(0x00) ; Idlel2C2(); MasterWritei2C2(0x07); Idlel2C2 (); MasterWritei2C2 (BB) ; Idlel2C2() ; MasterWritei2C2(0x00) ; MasterWritei2C2 (check_msb); Idlel2C2 () ; Idlel2C2();

122

MasterWritei2C2(check_lsb); Idlei2C2(); Stopi2C2();

II

else {Closei2C2 () ; LATB=OxOOOO; ) BB++;

//if(BB==OxFO) (BB=OxOO;) delay ();

II II

LATB=OxSOOO; delay () ;

Idlei2C2 (); Starti2C2 (); while(I2C2CONbits.SEN ) ; check= MasterWritei2C2(0xE7);//
if ( check==O ) {

Write Slave address and set master for receive

LATB=OxSOOO; Idlei2C2(); ctrlbyte= MasterReadi2C2 (); Acki2C2 (); while(I2ClCONbits . ACKEN == 1); Idlei2C2(); length_msb=MasterReadi2C2{); Acki2C2{); while{I2C1CONbits.ACKEN == 1); Idlei2C2(); length _lsb=MasterReadi2C2 () ; Acki2C2 (); while{I2C1CONbits.ACKEN == 1); Idlei2C2(); length=length_msb*Ox100+length_lsb; II if (length<20) { X=length_lsb-5; for (i=O;i<(X) ;i++) { Data in [ i] =MasterReadi2C2 (); Acki2C2(); while(I2C1CONbits.ACKEN == 1); Idlei2C2(); checkcalc=checkcalc+Datain[i] ; /*add them up as a checksum now; to save a loop later*/ /*read in data bytes into an array* I /* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/ /*read the high byte of length*/

I* read the low byte of sentence length* I

II II II II II II

else Datain[0]=127; Datain[1]=127; Datain[2]=127;

check_msb Acki2C2() ;

=MasterReadi2C2() ;

/*read the high byte of checksum*/

while{I2C1CONbits.ACKEN == 1); Idlei2C2{); check_lsb =MasterReadi2C2{); /*read the low byte of checksum*/ NotAcki2C2 {) ; while {I2C1CONbits .ACKEN == 1); Idlei2C2{) ; Stopi2C2{); else{ ZZ=-check;//0x02; LATB=OxOOOO; Closei2C2 ();

123

2 1 C Communications Test Code

while ( !UlSTAbits oTRMT); UlTXREG; UlTXREG ;
1 " 1 ;

while (! UlSTAbits oTRMT); ctrlbyte;

II Echo Back Received Character with quotes

II II II II

while(!UlSTAbitsoTRMT); UlTXREG; length_rnsb; while(!UlSTAbitsoTRMT); UlTXREG; length_lsb;

for (i;Q; i<length_lsb-5; i++) { while (! UlSTAbits oTRMT); UlTXREG; Datain[i];

while (! UlSTAbi ts oTRMT); UlTXREG ; UlTXREG ; Ul TXREG ; UlTXREG ; UlTXREG ; delay(); return; check_rnsb; check_lsb;
I" I;

while ( !UlSTAbits oTRMT); while (! UlSTAbi ts oTRMT); while (! UlSTAbits oTRMT); 10; 13; while (! UlSTAbits oTRMT);

124

Appendix C

Power Subsystem firmware

Figure 62: Power subsystem main loop & WDT

Figure 63: Interrupt error checking steps

125

.,
Ql

c -..::; c
u .... 0.
0
j

j

..5
\D
j

....

... ... ...

1..0
'l"""'i

N

Ql

~

Ql

bO ~

E Q) .... VI

, ....
0
l..

0

> VI

:::::1
Q)

3:

Appendix D
//notes:

Power Subsystem Code
Code Excerpt 3: Complete listing of the power subsystem code

/*unit Powerboardfirmwarev0006 ; Watch dog timer is turned on with a 1:128 postsca l er this should allow for at time out period of 2.3 seconds or so

------------ -- -- ------------------*/
//control port/ttl port definition #define PSl #define PS2 #define PS3 #define PS4 #define busenable #define chargeenable #define STATl #define STAT2 PORTD . F4 PORTD . F5 PORTD . F6 PORTD . F7 PORTD . F2 PORTD.F3 PORTD. F1 PORTD . FO PORTC. F3 PORTC . F4

/I #define SCLK
//#define SDA

//analog channel definition #define getSolCel_l #define getSolCel_2 #define getSolCel_3 #define getSolCel_ 4 #define getSolCel_5 #define getSolCel_6 #define getSolVolt #define getBattVolt #define getBattDraw Adc_Read(12) Adc_Read(lO) Adc _Read ( 8) Adc_Read(9) Adc_Read(ll) Adc_Read(13) Adc_Read(2) Adc_Read ( 0) Adc_Read(l)

#define turn_on_charger #define active_on_bus

PORTD=Ob00000100 PORTD=Ob00001100

//#define TMRlintervalH (65535 - 50000)/256 //#define TMRlintervalL (65535 - 50000) % 256 //#define I2Ctimeout //Built in functions from MikroC #define Lo(param) #define Hi(pararn) ((char *)&param) [0] ((char *)&param) [1] ((char *)&pararn) [2] ((char *)&par am) [3 ]

#define Higher(pararn) #define Highest (par am) #define lo(param) #define hi (par am)

((char *)&param) [0] ( (char *)&par am) [ 1] ( (char *)&par am) [ 2] ((char *)&param) [3]

#define higher (par am) #define highest(pararn)

/*******************************************************************************
* Global Variables *******************************************************************************/ char junk; // a place to dump extraneous data i . e. Address after it is checked unsigned char ctr lbyte ; unsigned char l ength_rnsb , length_ l sb , c h eck_msb , check_l sb , chargestatus,lasterror=O ; cha r Data i n[20 ]; unsign ed cha r da t aout [ 25 ]; uns i gned int le n g t h , checkca l c = O, c h eck r eceived ,i ; unsigned in t BattVolt , Ba tt d r aw , So l _l , Sol_ 2 , Sol _ 3 , Sol_4 , So l _5, Sol_6 , So l _vo l t; unsigned long RTCcounts = O, TIMEOUT ; unsigned char powerstat ;

llll/lll/llll/lll//lll/l/llll/llllllllllll/ll/11111111111111/lll/lllllll/lllll/1

127

Power Subsystem Code

char readi2cbyte(void); I /void s_writei2cbyte (unsigned char data_out); void S_PUTS ( char * wrptr); void readADC (void); void clearwdt (void) ; vo i d howdy (void); void powerswitch(char *datain); void solarpanelstatus(void); void batterystatus(void); void errorstatus (void); void commanderror (void);

/******************************************************************************* interrupt function *******************************************************************************/ void interrupt (void) INTCON. GIE=O; /* turn of further interrupts*/

1*-----------------------------------------------------------------------------Timer counter increment (for future use)

------------------------------------------------------------------------------*/
I I i f ( PIRl==OxOl I I PIR1==0x09) { II //if (RTCcounts %10==0) {PS1=-PS1; II PS1=-PS1; II RTCcounts=RTCcounts+ 1; /Ill II /I ///1 ///1
T1CON TMR1H TMR1L ObOOOOOOOO; = TMR01intervalH; = TMRlintervalL;

T1CON = Ob00000001; PIR1.TMR1IF=O;

II
/*-------------- --------------------------------------------------------------* /

/*-- ---------------------------------------------------------------------------I2C STATE MACHINE

------------------------------------------------------------------------------*/
I /else if (PIR1==0x08 I I PIR1==0x09) {
PS2=-PS2; if(!SSPSTAT.F2 && !SSPSTAT.FS) { /* checks i2c state: for our protocol only state 1 works slave receive and last packet was and address other states are interpreted as errors* I

I !PORTC . F7=1;
checkcalc=O;

/* flick a bit to indicate receive mode has started.*/ /* reset the checksum as some is done in a loop*/ /* empty the SSPBUFF OF THE ADDRESS*/

junk=readi2cbyte();

ctrlbyte=readi2cbyte(); length_msb=readi2cbyte () ; length _lsb=readi2cbyte () ; if (length<20) {

/* read control byte

*/

/* read the high byte of length */ /* read the low byte of sentence length*/ /* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/ /* -5 accounts for ctlbyte length & checksum*/ /*read in data bytes into an array*/ /*add them up as a checksum now; to save a loop later* /

length=length_msb*Ox100+length_lsb; for (i=O;i<(length-S);i++){ Datain[i]=readi2cbyte(); checkcalc=checkcalc+Datain[i]

else { lasterror=OxE1; errorstatus (); /*error condition sentence is to big */ /* flash the error on the test port */

II TRISD=-OxE1;

check_msb

=readi2cbyte();

/*read the high byte of checksum*/

128

check_lsb

-readi2cbyte();

/*read the low byte of checksum*/

/* check the checksum first turn the received one back to an int */ checkreceived; (unsigned int) check_msb*OxlOO +(unsigned int) check_lsb /* then add up all the received bytes*/ checkca lc checkcalc;ctr lbyte+ length_msb+ length _1 sb+ if (checkcalc;;checkreceived) { /* this is the main heart of the isr. thus far, now is the time to interpret the ctrlbyte the slave is synced with the master the datachecksum is ok and the sentence is an appropriate length and utilize the data received

*I
switch (ctrlbyte) break; break; break; break; break; break;

case OxOO: howdy(); case Ox02: powerswi tch (Datain); case Ox04: solarpanelstatus (); case Ox08: batterystatus (); case OxEO: errorstatus (); default commanderror();

else

if (las':error!;OxEl) {

/*check to see if this is not because of previous error*/

lasterror;OxE4 errorstatus();

/*error condition Checksum wrong*/

else

if (SSPSTAT. F2&&! SSPSTAT. FS) {

/* checks i2c state: for our protocol only state 3 works slave transmit and last packet was and address other states are interpreted as errors*/ S_PUTS(dataout) ;

else if(SSPSTAT.F2) { lasterror;OxE3; errorstatus (); else if(!SSPSTAT.F2) { lasterror;OxE2; errorstatus (); else{ lasterror;OxEE; errorsta tus {) ;

II /*----------------------------------------------------------------------------*/
/* Reset interrupts and before leaving interrupt function* I PIRl;Q; INTCON. GIE;l;

/l/1/l//////l/////////l///////////////////////////////////l/1111/l/l/1///////l//

/**~****************************************************************************

* Main *******************************************************************************/ void main (void) /*WDT setup *I OPTION_REG;ObOOOOlOOO; II see note on WDT chapter 26 in Family guide OPTION_REG;ObOOOOllll;

/*-----------------------------------------------------------------------------1

configuration of i2c on MSSP port

------------------------------------------------------------------------------*/

129

Power Subsystem Code

I I {*pic16)
TRISC.F3=1;// configure clock as input TRISC.F4=1;// configure data as input SSPADD SSPSTAT SSPCON =OxE6; =Ob10000000; =Ob00110110; II see section 10.4 pic 1 6f7x7 data sheet f or specifics

I/

SSPCON2. SEN =1; ( SSP1CON , SSP1CON2) & ( SSP2CON , SSP2CON2)

I /18 serries has two available i2c ports [ 4 registers]

II although their conf igurati on is similar if not identical to the following

11-----------------------------------------------------------------------------1*-----------------------------------------------------------------------------lc onf iguration of Timer (for future use)

------------------------------------------------------------------------------* /
/1
/1
TMR1H TMR1L = TMR1intervalH; = TMR1intervalL; /* timer turned on and works off of internal osc*/

II

T1C ON = Ob00000001;

11-----------------------------------------------------------------------------/*-------------и----------------------------------------------------------------1

interrupt setup //(*pic16) INTCON=O; PIE1=0x08; //PIE 1=0x09 PIE2=0x00;

------------------------------------------------------------------------------*/
I I Turn off interrupts while configuring them (to be safe)
// PIE1.SSPIF=1; turn on only I2C interrupt Delay_ms (500); I I startup delay to allow crystal to stabilize

II PIE1.TMR1IF=1 & PIE1.SSPIF=1;; turn on timer & I 2C interrupt II turn off all other interrupts in different register

INTCON.PEIE=1; II turn on interrupts fr om PIE1&PIE2 registers

//-----------------------------------------------------------------------------1* -----------------------------------------------------------------------------IADC & I O port setup

------------------------------------------------------------------------------*/
ADCON1 = OxOO; TRISB

II Configure analog inputs and Vref

TRISA = Ob00000111; Ob00111111; TRISD = Ob00000011;

II set direction o f control outputs and charge stat inputs

1*-----------------------------------------------------------------------------IMain

------------------------------------------------------------------------------* /
readADC ();

//if (BattVolt<=574) {
II II II
//else I NT CON. GIE=1; PORTD=Ob11110100; do Delay_ms(1000); //Waiting lo op
{

PORTD=Ob11111000; delay_ms(1000 ) ;

I NT CON. GIE=O; readADC () ; INTCON. GIE=1; if (BattVo lt >620) {PORTD=PORTD&Ob11110111;} else if (BattVolt<=600) {PORTD=PORTDI0b00001000;}
}

II turn off charger II turn on charger

II

else if (BattVolt<=570) {PORTD=PORTDI Ob01111100;} clearwdt(); }while (1);

130

/*******************************************************************************
* Watchdog reset function

*******************************************************************************/
void clearwdt (void) { asm CLRWDT

llllllllllllllll/1/ll/1/lll/llllll/lllllllllll/llll/lll/llllll/lllllllllllllll/1
//*****************************************************************************
//Slave Read //***************************************************************************** char readi2cbyte (void) while (! SSPSTAT. BF ) ; PIRl.SSPIF=O; SSPSTAT. BF=O; return (SSPBUF);

II wait till the buffer is full II reset the overflow interrupt(sspov is tied to this) II return databyte in buffer

//***************************************************************************** //*****************************************************************************
//Slave Write //***************************************************************************** void S_PUTS(char *wrptr) SSPBUF=(*wrptr++); SSPCON. CKP=l; .. while (SSPSTAT .BF); (

while((*wrptr!=OxFF && *wrptr+l!=OxOO))

//******************************************************************************

l/ll/1/ll/llllll/1/lllllllll/llllllllll/lllllllll/llllllllll/llllllllll/ll/ll/ll

//*****************************************************************************
//ADC Read //***************************************************************************** void readADC (void)

BattVolt Battdraw Sol 1 Sol 2 Sol 3 Sol 4 Sol 5 Sol 6 Sol_volt

getBattVolt; getBattDraw; getSolCel 1; getSolCel_2; getSolCel 3; getSolCel 4; getSolCel 5; getSolCel 6; get Sol Volt;

powerstat=PORTD; chargestatus='G';

//****************************************************************************** //**************************************************************** *************
//COMUNICATIONS TEST //***************************************************************************** void howdy (void) {

131

Power Subsystem Code

char k; unsigned int check2;

dataout[O]=OxOO; dataout [ 1] =OxOO; dataout[2]=0xOA ; dataout[3]= ' H ' ; dataout [4]= ' 0 '; dataout [S]= ' W'; dataout [6]= ' D '; dataout[7]= ' Y '; dataout[8]= ' x ' ;//null to end string dataout[9]= ' y ' ; dataout[10 ] =0x FF;//null to end string dataout [ 11] =OxOO ;

check2=0; k=O; while(dataout[k] != ' x'
&& dataout[k+1] != ' y ' )

check2=check2 + dataout[k]; k++;

dataout [ k] =Hi ( check2) ; dataout [ k+1] =Lo (check2);

//******************************************************************************

//*****************************************************************************
//POWER DISTRIBUTION CONTROL

//*****************************************************************************
void powerswitch(char *datain) ( char k ; unsigned int check2;

char power; power=PORTD;

i f (datain[O]==OxFF) ( power. F4=1;
if (data in [ 1] ==OxFF) ( power. F5=1;

else i f

(datain[O]=Ox11) (power . F4=0;)

else i f (datain[1]=0x11) (power.FS=O;} else i f (datain[2]=0x11) (power.F6=0;} else i f (datain[3]=0x11) (power.F7=0;}

i f (datain[2]==0xFF) ( power . F6=1; i f (datain[3]==0xFF) ( power . F7=1 ;
PORTD=power ;

dataout[O]=Ox02; dataout[1]=0x00 ; dataout[2]=0x09; if if (PS1) (PS2) (dataout [ 3]=0xFF ; } else(dataout[3]=0x11;} (dataout[4]=0xFF;} else(dataout[4]=0x11 ; } (dataout[S]=OxFF;} else(dataout[5]=0x11;} (dataout[6]=0xFF;} else(dataout[6]=0x11;}

i f (PS3)
if (PS4)

dataout[7]= ' x '; dataout[8]= ' y ' ; dataout[ 1 0]=0xFF;//null to end string dataout[11]=0x00;

check2=0; k = O; while(dataout[k] != ' x'
&& dataout[k+1] != ' y ' )

check2=check2 + dataout [ k]; k++;

dataout [ k ] =Hi ( check2) ; da taou t [ k+ 1] =Lo ( check2) ;

//******************************************************************************

132

//*****************************************************************************
//SOLAR POWER STATUS //***************************************************************************** void solarpanelstatus (void) { char k; unsigned int check2; dataout[O]=Ox04; dataout[l]=OxOO; dataout[2]=0xl3; dataout[3]=H i (Sol 1); dataout[4]=Lo(Sol_1); dataout[5]=Hi(Sol_2); dataout [ 6] =Lo (Sol_2); dataout [7]=Hi (Sol_3); dataout [8]=Lo (Sol_3) ; dataout[9]=Hi(Sol_4); dataout [ 10] =Lo (Sol_ 4); dataout [ 11] =Hi (Sol_ 5) ; dataout [12]=Lo (Sol_5); dataout[13]=Hi (Sol_6); dataout [ 14] =Lo (Sol_ 6); dataout[15]=Hi(Sol_volt); dataout[16]=Lo(Sol_volt); dataout[17]='x'; dataout[18]= ' y ' ; dataout[19]=0xFF;//null to end string dataout [ 20]=0x00; check2=0 ; k=O; while(dataout[k] !='x' && dataout[k+1] !='y') check2=check2 + dataout [ k] ; k++; dataout [ k] =Hi ( check2) ; dataout [k+1]=Lo (check2);

//******************************************************************************

//*****************************************************************************

I /BATTERY STATUS //*****************************************************************************
void batterystatus (void) { char k; unsigned int check2; dataout [O]=Ox08; dataout [1]=0x00; dataout [2] =OxOA; dataout[3]=chargestatus; dataout [4]=Hi (BattVolt); dataout[5]=lo(BattVolt); dataout[6]=Hi(Battdraw); dataout[7]=Lo(Battdraw); dataout[S]='x'; dataout[9]='y'; dataout [10]=0xFF; I /null to end string dataout [11]=0x00; check2=0; k=O; while (dataout [k] ! =' x' && dataout [ k+1] !=' y') check2=check2 + dataout[k];

133

Power Subsystem Code

k++; da taout [ k] =Hi (check2) ; dataout[k+l]=Lo(check2);

I/******************************************************************************

I/***************************************************************************** I /ERROR STATUS
//*****************************************************************************

void errorstatus (void) { char k; unsigned int check2; dataout[O]=OxEO; dataout[l]=OxOO; dataout [ 2 J =Ox06; dataout[3]=lasterror; dataout[4]='x'; dataout [SJ='y'; dataout[6]=0xFF ; //null to end string dataout[7]=0x00; check2=0; k=O; while(dataout[k] !='x'

&&

dataout[k+l] != ' y')

check2=check2 + dataout[k]; k++; da taout [ k] =Hi ( check2) ; dataout[k+l]=Lo(check2);

I/*********************** и * ** ** * * * * * * ** * * * ** ********* * * * ** * * ** * * * * ** * * * * * * ***** *

//*****************************************************************************

//POWER DISTRIBUTION CONTROL
//*****************************************************************************

void commanderror(void) { dataout[O]=OxEO; dataout[l]=OxOO; dataout[2]=0x06; dataout[3]=0xE7;// bad ctrlbyte error dataout[4]=0x01;// checksum MSB dataout[S]=OxCD;// checksum LSB dataout[6]=0xFF;//null to end string dataout[7]=0x00;
//******************************************************************************

Code Excerpt 4: Simulated master code
#include "p24fj64ga002 . h"
II the above include path may be different for each user. If a compile II time error appears then check the path for the file above and edit II the include statement above.

#include<i2c. h>

#define XTFREQ #define PLLMODE

7372800
2

//On-board Crystal frequency //On-chip PLL setting

134

#define FCY #define BAUDRATE #define BRGVAL #define I2CBAUD

XTFREQ*PLLMODE 9600 ( ( FCY /BAUDRATE) /16) -1 400000

//Instruction Cycle Frequency

II i2c clock running at 400khz

//_CONFIG1(JTAGEN_OFF&GCP_OFF&GWRP_OFF

&COE_OFF& ICS_PGx1

&FWDTEN_OFF );

//_CONFIG2(IESO_OFF &FNOSC_PRIPLL&FCKSM_CSDCMD&OSCIOFNC_OFF &I2C1SEL_SEC &POSCMOD_XT );

II
char buffins [100]="testing123 " ; void delay (void) int var1,var2; for (var1=0;var1 !=100;var1++) for (var2=0;var2 !=10000;var2++);

void solarcheck (void) ; void commcheck (void); void battcheck(void) ; void UARTwritestring (char *stooring); void config_initialize_UART (void); void main (void) CLKDIVbits . RCDIV = 0; RPINR18bits . U1RXR = 9; RPOR4bits.RP8R = 3; TRISB = Ox0300; U1BRG U1MODE UlSTA BRGVAL; Ox8000; Ox0440;

I I Make Pin RP9 U1RX

I/ Make Pin RPB U1 TX

I I Reset UART to 8-n-1, al t pins, and enable

I I Reset status register and enable TX & RX

PADCFGl = OxFF; LATB OxFOOO; TRISB = OxOO; unsigned int config2, configl; //unsigned char *wrptr;

I I Make analog pins digital
//Toggle LED's

II Configure LED pins as output

//unsigned char tx_data[] = (OxOO,OxFF , OxOO,OxFF, );

II

char check=O, ZZ=90; unsigned int checksum ; unsigned char i=O,X; char Datain[20] ; unsigned char ctrlbyte =' Z' ; unsigned char length_msb= ' Z ' , length_lsb='Z',check_msb='Z ' ,check_lsb= ' Z'; lasterror=O; unsigned int length , checkcalc=O , checkreceived, /* Baud rate is set for 100 Khz */ config2 = Ox90; /* Configure I2C for 7 bit address mode */ config1 = OxF200 ; /I (I2C_ON & I2C_IDLE_CON & I2C_CLK_HLD &

II II

II
II II II

II II II II II II

I2C_IPMI_DIS & I2C_7BIT_ADD & I2C_SLW_DIS & I2C_SM_DIS & I2C_GCALL_DIS & I2C_STR_DIS & I2C_NACK & I2C_ACK_DIS & I2C_RCV_DIS & I2C_STOP_DIS & I2C_RESTART_DIS & I2C_ START_DIS); Openi2C2(configl , config2);

config_initialize_UART() ; UARTwritestring(buffins) ; while (1) {

135

Power Subsystem Code

commcheck () ; battcheck (); solarcheck () ;

return;

void commcheck(void) ( char check=O , ZZ=90; unsigned int checksum; unsigned char i=O, X; unsigned char Datain[20]; unsigned char ctrlbyte

=' Z ' ;

unsigned char length_msb=' Z ' , length _lsb=' Z' , check_msb=' Z ' , check _lsb=' Z'; unsigned int length, checkcalc=O, checkreceived, lasterror=O; Idlei2C2(); Starti2C2 (); /* Wait till Start sequence is completed */ while ( I2C2CONbits. SEN ) ; /* Write Slave address and set master for transmission */ check= MasterWritei2C2(0xE6); /* Wait till address is transmitted */
i f (check==O ) (

checksum=S; check_msb=checksurn/256; check _lsb=checksum % 2 56; LATB=OxAOOO; Idlei2C2 (); MasterWritei2C2(0x00); // ctrlbyte Idlei2C2 (); MasterWritei2C2 (OxOO); II length_msb Idlei2C2 (); MasterWritei2C2(0x05);// length_lsb Idlei2C2 (); MasterWritei2C2 (check_msb); Idlei2C2 (); MasterWritei2C2(check_lsb); Idlei2C2 (); Stopi2C2 () ;

delay (); //getl2cdata () ; Idlei2C2 (); Starti2C2 (); while ( I2C2CONbits. SEN ) ; check= MasterWritei2C2(0xE7);// if ( check==O ) ( LATB=Ox5000; Idlei2C2 (); ctrlbyte= MasterReadi2C2(); Acki2C2(); while ( I2ClCONbits .ACKEN == 1); Idlei2C2(); length_msb=MasterReadi2C2(); Acki2C2(); while ( I2C1CONbi ts .ACKEN Idlei2C2(); length_lsb=MasterReadi2C2() ; Acki2C2(); while(I2C1CONbits.ACKEN == 1) ; Idlei2C2(); /*read the low byte of sentence length*/ /* read the high byte of length*/ Write Slave address and set master for receive

== 1) ;

136

length=length_msb*OxlOO+length_lsb; if (length<20) { X=length_lsb-5; for (i=O;i<(X) ; i++){ Datain[i)=MasterReadl2C2 (); Ackl2C2 ();

/* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/

I* read in data bytes into an array* I

while(l2ClCONbits.ACKEN == 1); Idlel2C2 (); checkcalc=checkcalc+Datain [ i J loop later* I
;

/*add them up as a checksum now;

to save a

else { length_msb=O; length _lsb=8; Datain[0)= 1 B 1 Datain{l]= 1 A 1 Datain[2]= 1 D 1
;
;

;

check_msb Ackl2C2 ();

=MasterReadl2C2();

/*read the high byte of checksum*/

while ( I2C1CONbits .ACKEN == 1); Idlei2C2 (); check_lsb =MasterReadl2C2 (); /* read the low byte of checksum* I NotAckl2C2 () ; while(I2C1CONbits . ACKEN == 1); Idlei2C2 (); Stopi2C2();

else{ ZZ= - check;//Ox02; LATB=OxOOOO; Closei2C2 ();

while ( !U1STAbits. TRMT); U1 TXREG =
I "I ;

while (! U1STAbits. TRMT) ; U1TXREG = ctrlbyte;

II Echo Back Received Character with quotes

I/
II II II

while (! U1STAbits. TRMT); U1TXREG = length_msb; while (! U1STAbits. TRMT); U1TXREG = length_ l sb;

for(i=O;i<length_lsb-S;i++) { while (! U1STAbits . TRMT); U1TXREG = Datain[i); while (! U1STAbits. TRMT); U1 TXREG =
I " I ;

II II II II

while ( !U1STAbits. TRMT); U1TXREG = check_msb; while ( !U1STAbits. TRMT); U1TXREG = check_lsb ; while ( ! U1STAbi ts. TRMT) ; U1TXREG = 10; while ( !U1STAbits. TRMT); U1TXREG = 13; delay();

void solarcheck(void)

137

Power Subsystem Code

char check=O,ZZ=90; unsigned int checksum; unsigned char i=O,X; unsigned char Datain[20]; unsigned char ctr1byte ='Z'; unsigned char length_msb= ' Z', length_lsb='Z',check_msb='Z' , check_lsb='Z ' ; unsigned int length, checkcalc=O, checkreceived, lasterro r=O; Idlei2C2(); Starti2C2 (); /* Wait till Start sequence is completed */ while(I2C2CONbits.SEN ); /* Write Slave address and set master for transmission */ check= MasterWritei2C2(0xE6); /* Wait till address is transmitted */
i f (check==O ) {

checksum=9; check_msb=checksum/256; check _lsb=checksum % 2 56; LATB=OxAOOO; Idlei2C2(); MasterWritei2C2(0x04); // ctrlbyte Idlei2C2(); MasterWritei2C2 (OxOO); I I length_msb Idlei2C2(); MasterWritei2C2(0x05);// length_lsb Idlei2C2(); MasterWritei2C2 (check_msb); Id1ei2C2 (); MasterWritei2C2(check_lsb); Idlei2C2 (); Stopi2C2(); delay(); //get12cdata (); Idlei2C2 ( ) ; Starti2C2 (); while ( I2C2CONbits . SEN ) ; check = MasterWri tei2C2 ( OxE7) ; I I if (check==O ) { LATB=Ox5000; Idlei2C2(); ctrlbyte= MasterReadi2C2 (); Acki2C2 (); while ( I2C1CONbits . ACKEN == 1); Idlei2C2 (); length_msb=MasterReadi2C2(); Acki2C2 (); while ( I2C1CONbi ts .ACKEN == 1); Idlei2C2 (); length_lsb=MasterReadi2C2(); Acki2C2(); while(I2C1CONbits.ACKEN == 1) ; Idlei2C2(); length=length_msb*Ox100+length_lsb ; if (length<20) ( X=length_lsb - 5; for (i=O;i<(X);i++){ Datain[i]=MasterReadi2C2 (); Acki2C2 (); while(I2C1C0Nbits.ACKEN == 1); Idlei2C2(); checkcalc=checkcalc+Datain[i] ; /*add them up as a checksum now; to save a /*read in data bytes into an array*/ /* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/ /* read the low byte of sentence length*/ /*read the high byte of length*/ Write Slave address and set master for receive

138

loop later* I

else{ length_msb=O; length_lsb=8; Datain[O]='B'; Datain[l]= 'A'; Datain[2]='D' ;

check_msb Acki2C2();

=MasterReadi2C2 ();

/* read the high byte of checksum* I

while ( I2ClCONbits .ACKEN == 1); Idlei2C2 () ; check_lsb =MasterReadi2C2(); /*read the low byte of checksum*/ NotAcki2C2(); while(I2ClCONbits . ACKEN == 1); Idlei2C2(); Stopi2C2() ;

else ( ZZ=-check;//0x0 2 ; LATB=OxOOOO; Closei2C2(); unsigned int temp; double scl=O.OO,sc2=0.00,sc3=0.00 , sc4=0.00,sc5=0.00,sc6=0 . 00,volt=O.OO;

temp=

(unsigned int) Datain[O]*OxlOO+

(unsigned int) Datain[l];

scl=(double) temp* 0 . 05035400390625; //3.3/1024.0/ . 064 temp= (unsigned int) Datain[2] *OxlOO+ (unsigned int) Datain[3];

sc2=(double) temp* 0.05035400390625; //3.3/1024 . 0/.064 temp= (unsigned int) Datain[4]*0xl00+ (unsigned int) Datain[5];

sc3=(double) temp* 0.05035400390625; //3 . 3/1024.0/ . 064 temp= (unsigned int) Datain[6] *OxlOO+ (unsigned int) Datain[7];

sc4=(double) temp* 0.05035400390625; //3 .3 /1024.0/ . 064 temp= (unsigned int) Datain[8]*0xl00+ (unsigned int) Datain[9];

sc5=(double) temp* 0.05035400390625; //3 .3 /1024 .0 /.064 temp= (unsigned int) Datain[lO] *OxlOO+ (unsigned int) Datain[ll];

sc6=(double) temp* 0.05035400390625; //3 .3 / 10 24.0/ .064

temp=

(unsigned int) Datain[l2]*0xl00 +

(unsigned int) Datain[l3];

volt=(double)temp* 0.0064453125; //3 . 3/1024.0*2

sprintf (buffins,

"SC1: % 5.3f

SC2: % 5.3f

SC3: % 5.3f

SC4 : % 5.3f

SC5: % 5 .3f

,SC6: % 5.3f

SolarVolt: % 5.3f\r\n",scl,sc2,sc3,sc4,sc5,sc6,volt); UARTwritestring (buff ins); delay();

void battcheck(void) { char check=O,ZZ=90; unsigned int checksum;

139

Power Subsystem Code

unsigned char i-0 , X; unsigned char Datain[20]; unsigned char ctr lbyte =' Z ' ; unsigned char length_msb='Z ' , length_lsb= ' Z' , check_msb= ' Z',check_lsb= ' Z'; unsigned int length, checkcalc=O, checkreceived, lasterror=O; Idlei2C2(); Starti2C2 (); /* Wait till Start sequence is completed */ while(I2C2CONbits.SEN ); /* Write Slave address and set master for transmission */ check= MasterWritei2C2(0xE6); /* Wait till address is transmitted */ if ( check==O ) { checksum=13; check_msb=checksum/256; check_lsb=checksum% 256; LATB=OxAOOO; Idlei2C2 (); MasterWritei2C2(0x08); // ctrlbyte Idlei2C2(); MasterWritei2C2 (OxOO) ; I I length_msL Idlei2C2 () ; MasterWritei2C2(0x05);// length_lsb Idlei2C2(); MasterWritei2C2(check_msb); Idlei2C2 (); MasterWritei2C2(check_lsb); Idlei2C2(); Stopi2C2 () ;
)

delay (); //get12cdata (); Idlei2C2 (); Starti2C2() ; while ( I2C2CONbi ts. SEN ) ; check= MasterWritei2C2(0xE7) ; //
if

Write Slave address and set master for receive

(check==O ) ( LATB=Ox5000; Idlei2C2(); ctrlbyte= MasterReadi2C2 () ; Acki2C2(); while(I2C1CONbits.ACKEN == 1); Idlei2C2() ; length_msb=MasterReadi2C2(); Acki2C2() ; while ( I2C1CONbits . ACKEN == 1); Idlei2C2(); length_lsb=MasterReadi2C2 (); Acki2C2 () ; while(I2C1CONbits.ACKEN == 1); Idlei2C2(); length=length_msb*Ox100+length_lsb; if (length<20) { X=length_lsb-5; for (i=O;i<(X);i++)( Datain[i]=MasterReadi2C2 (); Acki2C2() ; while(I2C1CONbits.ACKEN == 1); Idlei2C2 (); checkcalc=checkcalc+Datain[i] ; /*add them up as a checksum now; to save a /*read in data bytes into an array* I /* calculate length for the data loop*/ /* check to see if its smaller then predefined size*/ /* read the low byte of sentence length*/ /*read the high byte of length*/

loop later*/

140

else( length _msb~O; length _lsb~B;
Datain[OJ~ 'B'; Datain[1]~ ' A';
Datain[2]~'D';

check_msb Ack i 2C2 ();

~MasterReadi2C2

(); 1);

/* read the high byte of checksum* I

while ( I2C1CONbits .ACKEN Idlei2C2 () ; check_lsb
~MasterReadi2C2();

~~

/*read the low byte of checksum*/
~~

NotAcki2C2(); while ( I2C1CONbits . ACKEN Idlei2C2 (); Stopi2C2(); 1);

else(
zz~-check;//Ox02;
LATB~OxOOOO;

Closei2C2 ();

unsigned int temp; double
temp~
Battvolt~O.OO,Battdraw~O.OO;

(unsigned int) (unsigned int)

Datain(1]*0x100 + Datain[3]*0x100+

(unsigned int) Datain[2];

Battvolt~(double)temp* temp~

0.0064453125; //3 . 3/1024.0*2 (unsigned int) Datain[4];

Battdraw~(double)

temp* 0 . 05035400390625; //3.3/1024 . 0/.064 "Charge Status:Off BattVolt: % 5.3f BattDraw: %5 . 3f\r\n ",Battvolt, Battdraw);

sprintf(buffins, delay ();

UARTwri testring (buff ins);

void config_initialize_UART (void) unsigned int baudvalue; unsigned int U1MODEvalue; unsigned int U1STAvalue; CloseUART1 (); baudvalue U1MODEvalue U1STAvalue
~
~

BRGVAL; OxSOOO; Ox0440 ;

I I Reset UART to 8-n-1, al t pins, and enable I I Reset status register and enable TX & RX

II II
/I

ConfigintUART1 U1MODEvalue U1STAvalue OpenUART1 OpenUART1

(UART_RX_INT_DIS&UART_TX_INT_DIS); & UART_IDLE_CON &UART_EN_WAKE& UART_DIS_LOOPBACK & UART_DIS_ABAUD&UART_NO_PAR_BBIT

~UART_EN

&UART_1STOPBIT & UART_ALTRX_ALTTX;
~UART_ TX _PIN _NORMAL&UART _ TX_ENABLE&UART _ ADR _DETECT _DIS&UART _ RX _OVERRUN_CLEAR;

II

(U1MODEvalue, U1STAvalue, baudvalue); (U1MODEvalue, U1STAvalue, baudvalue);

void UARTwritestring (char *stooring) int
stooring_index~o; !~0)

while(stooring[stooring_index]

(

I /loop

until

null

string

141

Power Subsystem Code

terminator. WriteUARTl (stooring[stooring_index++)) ; charachter to the uart while(BusyUARTl()); until the uart is finished with the last char .
);

//write //spin

142

Appendix E

Additional mathematics
s1nsin o cos
.

Lagrange's Equations of motion (reproduced from Kumar 2006)
(} C() S~ -_/ ''иfии и

+ ( - sin ~' cos q cos '";+
cos- o sm ~и cos ' ;;m ~:- cos CJ sin и, cos
'

)

.

cos ~. cos

sm ~.

+
и

sino cos q sin coso sm ~:. coso c<Js 1 sm o cos- ; cos <tl
f)

~; cos()

cos ~и

+

sin o coso cos ~' cos o sin ~и
- l,:_u:: co:/ . ., cos

o
6-5

- (1 -+и~
-

(- -(1
ttl (J
/ /
~

sin o si.n ~и - sin o

cos~, i

+

(1 ..;... s1n o sm

cos n cos coso c os ~: cos o sin () cos . . _,

cos (l cos

и fcosnsino

cos o s1.n ; - {-3( 1 o sin <)cos . . _, +и stn tJsi.n ; } 2 cos o sin иycos ~и} sin = 0 - sin o cos ~и + l -

L6

::

1. -

sm . . , coso c o s ~.
2

+и
2 :

cos ~. cos r;1 sin "'>

+ (sin ~/ + A:;;z cos +1 -

+

- :),'xz -

sino coso
-

+ {(( l + k-rz -

k:r::: cos c> cos 2 -: - (2k:;; 2 - '2 ky::. sin 0 coso sin , . + и (2 - 2kn ) sino coso cos 2 ~и cos ~/ sin ~/ + (1 sin;и cos + {(( l + ku : 2

coso sin 2~,

6-6

+ ll и+и kxz -sin o cos cos n cos
sin ~.

cos o cosи

иJ

+{ -

kxz sin o coso cos '"':и
coso cos

+ 3( 1 -

h:z 2 ) ( coso sino cos...._, + sb o sin

cos:и = 0
cos o
6-7

+

+ (1 -

1+

Sln

'"':' COS ~,

- :3( 1 - k 11 z)(cos n sin o cos ~/+ sin o sin : )( cos u sino sin ~и - sino cos . ._,.} = CJ

sin(phi)

= -Cl * sin (phi) * phiD * cos (phi) * alphaD - Cl * cos (phi) * phiD * sin (phi) - Cl * cos (phi) * phiD * * alphaD - Cl * sin(phi) * phiD * cos(phi) + Cl * sin(phi) * gammaDD + 0.3el * Cl * cos(phi) * cos (alpha) * cos (phi) * sin (alpha) - C2 * alphaD * cos (phi) 2 + C2 * alphaD + Cl * cos (phi) * phiD * gammaD;
the tal
A

6-8

theta2 = 0.3el * Cl * sin(phi) * sin(alpha) * cos(alpha) * sin(phi) + C2 * alphaD * cos(phi) 2 + Cl * cos(phi) * phiD * gammaD + Cl * sin (phi) * phiD * cos (phi) + Cl * cos (phi) * phiD * sin (phi) - Cl * phiDD * cos (phi) * sin(gamma) * cos(gamma) - Cl * sin(phi) * sin(gamma) * cos(gamma) * cos(phi) 2 - Cl * sin(phi) * sin(gamma) *
A
A

6-9

143

Additional mathematics

* cos(phi) 2 * alphaD 2 - Oo3el * Cl * cos(phi) * cos(gamma) 2 * cos(alpha) * cos(phi) * Oo2el * Cl * sin(phi) * phiD * cos(phi) * cos(gamma) 2 - Oo6el * Cl * sin(phi) * cos(alpha) * sin(phi) * cos(gamma) 2 * sin(alpha) - Oo2el * Cl * cos(phi) * cos(gamma) 2 * phiD * gammaD- Oo2el * Cl * sin(phi) * sin(gamma) * cos(gamma) * cos(phi) 2 * alphaD + Oo6el * Cl * sin(phi) * sin(gamma) * cos(gamma) * cos(alpha) 2 - Oo3el * Cl * sin(phi) * sin(gamma) * cos(gamma) * cos(alpha) 2 * cos(phi) 2 + Cl * sin(phi) * sin(gamma) * cos(gamma) * phiD 2 + Cl * cos(phi) * sin(gamma) * sin(phi) * cos(phi) * cos(gamma) - Oo2el * Cl * sin(phi) * phiD * cos(phi) * cos(gamma) 2 * alphaD- Oo2el * Cl * cos(phi) * cos(gamma) * gammaD * cos(phi) * sin (gamma) + Cl * sin (phi) * phiD * cos (phi) * alphaD + Cl * cos (ph i ) * phiD * sin (phi) * alphaD + Cl * cos (phi) * sin(gamma) * sin(phi) * cos(phi) * cos(gamma) * alphaD 2 + Oo3el * Cl * cos(phi) * sin(gamma) * cos(alpha)
cos(gamma) sin(alpha)
A A A

-

A

A

A

A

A

A

A

A

A

A

A

* cos(phi) * sin(phi) * cos(gamma) - Oo2el * Cl * cos(phi) * cos(gamma) * gammaD * cos(ph i) * sin(gamma) * alphaD + Oo2el * Cl * cos(phi) * sin(gamma) * sin(phi) * cos(phi) * cos(gamma) * alphaD- Oo3el * Cl * sin(phi) * sin (gamma) * cos (gamma) - C2 * alphaD * cos (phi) 2 * cos (gamma) 2;
2
A A

theta3 = -Oo3el sin (phi)

* Cl * sin(phi) * sin(alpha)

* phiD * cos (phi) + Cl * cos (phi) * phiD Cl * sin (phi) * sin (gamma) * cos (gamma) * cos (phi) alphaD 2 + Oo3el * Cl * cos(phi) * cos(gamma) * phiD * cos (phi) * cos (gamma) 2 + Oo 6el * Cl * + Oo2el и Cl и cos(phi) и cos(gamma) 2 * phiD
A A
A A

* cos(alpha) * sin(phi) - Cl * cos(phi) * phiD * gammaD- Cl * * sin (phi) + Cl * phiDD * cos (phi) * sin (gamma) * cos (gamma) + 2 + Cl * sin (phi) * sin (gamma) * cos (gamma) * cos (phi) 2 * 2 * cos(alpha) * cos(phi) * sin(alpha) + Oo2el * Cl * sin(phi) sin (phi) * cos (a lpha) * sin (phi) * cos (gamma) 2 * sin (alpha) и gammaD + Oo2el * Cl * sin(phi) * sin(gamma) и cos(gamma) *
A A
A

cos(phi)

A

2

*

alphaD- Oo6el и Cl и sin(phi)
A

и sin(gamma)
A

и cos(gamma)

* cos(alpha)

A

2 + Oo3el и Cl и sin(phi)
A

* sin (gamma) * cos (gamma) * cos (alpha) 2 * cos (phi) 2 - Cl * sin (phi) и sin (gamma) и cos (gamma) и phiD 2 Cl * cos(phi) * sin(gamma) и sin(phi) и cos(phi) * cos(gamma) + Oo2e l * Cl и sin(phi) * phiD и cos(phi) cos(gamma) 2 * alphaD + Oo2el и Cl и cos(phi) * cos(gamma) * gammaD * cos(phi) * sin(gamma) - Cl * sin(phi) phiD и cos(phi) * alphaD- Oo3el * Cl и cos(phi) и cos(alpha) * cos(phi) * sin(alpha) + Cl cos(phi) и phiD sin(phi) * alphaD - Cl * cos(phi) * sin(gamma) * sin(phi) и cos(phi) и cos(gamma) и alphaD 2 - Oo3el и Cl cos(phi) и sin(gamma) * cos(alpha) 2 и cos(phi) и sin(phi) * cos(gamma) + Oo2el * Cl и cos(phi) и cos(gamma) gammaD * cos (phi) и sin (gamma) * alphaD - Oo2el * Cl * cos (phi) * sin (gamma) и sin (phi) * cos (phi) и cos (gamma) alphaD + Oo3el * Cl * sin(phi) и sin(gamma) и cos(gamma) + C2 * alphaD и cos(phi) 2 и cos(gamma) 2;
A

и

6-10

*
*
и и и

w

A

A

A

A

theta4 sin (phi) cos(phi);

Oo3el и C3 * cos(alpha) 2 * cos(phi) и sin(phi) + Oo2el и C3 * sin(phi) * cos(phi) * alphaD + C3 * * cos (phi) и alphaD 2 - C3 * gammaD * cos (phi) * alphaD - C3 и gammaD * cos (phi) + C3 и sin (phi) и
A A

6-11

thetaS= -C3 и sin(phi) и cos(gamma)
A

и cos(phi)

* alphaD
A

A

2 + C3 и gammaD и cos(phi) 2 * cos(phi)

+ C3 и sin(phi)
A

и cos(phi)

и alphaD

A

* sin(phi) * cos(gamma) 2 + Oo3el * C3 * cos(gamma) cos(alpha) * cos(phi) и sin(alpha) * sin(gamma) + C3 * gammaD * cos(phi) и alphaD- Oo2el и C3 * sin(phi) cos(phi) и alphaD + Oo2el и C3 и sin(phi) и cos(phi) и alphaD * cos(gamma) 2 + Oo2el * C3 * sin(gamma) * phiD gammaD * cos (gamma) - 0 o2e l * C3 и gammaD и cos (phi) * cos (gamma) 2 * alphaD - C3 и sin (phi) * cos (phi) + C3 sin(phi) * cos(phi) * cos(gamma) 2 - C3 * alphaDD и cos(phi) * sin(gamma) * cos(gamma) - Oo2el * C3 и gammaD cos(phi) * cos(gamma) 2 + C4 * phiD * cos(gamma) 2 - Oo3el * C3 * cos(alpha) 2 * cos(phi) * sin(phi);
2 + Oo3el и C3
A
A

* cos(alpha)

*
и

A

* * *

6-12

A

A

A

theta6 = -C4 * phiD * cos(gamma) 2 + C4 * phiD + C3 * alphaDD * cos(phi) * sin(gamma) * cos(gamma)- Oo2el * C3 * sin (gamma) * phiD * gammaD * cos (gamma) - C3 * gammaD * cos (phi) * alphaD - C3 * gammaD * cos (phi) - C3 * sin(phi) * cos(phi) * alphaD 2 * cos(gamma) 2 - Oo3el * C3 * cos(gamma) * cos(alpha) * cos(phi) * sin(alpha) * sin(gamma) - Oo2el * C3 * sin(phi) * cos(phi) * alphaD * cos(gamma) 2 + Oo2el * C3 * gammaD * cos(phi) * cos(gamma) 2 * alphaD + Oo2el * C3 * gammaD * cos(phi) * cos(gamma) 2 - C3 * sin(phi) * cos(phi) * cos(gamma) 2 - Oo3el * C3 * cos(alpha) 2 * cos(phi) * sin(phi) * cos(gamma) 2;
A A A

A

6-13

A

A

A

A

A

theta 7 = CS * phiD * cos (phi) theta S= Oo2e l

* alphaD + CS * sin (phi) * alphaDD + C6 * gammaD + CS * phiD * cos (phi) ;
A A

6-14

* CS * phiD * cos(phi) * cos(gamma) 2 + Oo2el * CS * sin(gamma) * cos(gamma) * cos(phi) 2 * alphaD + CS * sin(gamma) * cos(gamma) * cos(phi) 2 * alphaD 2 + Oo6el * CS * cos(alpha) * sin(phi) * cos(gamma) * sin(alpha) + Oo2el * CS * phiD * cos(phi) * cos(gamma) 2 * alphaD- Oo3el * CS * sin(alpha) * cos(alpha) * sin(phi) - CS * phiD * cos(phi) * alphaD + CS * sin(gamma) * cos(gamma) * cos(phi) 2 + Oo3el * CS * sin(gamma) * cos(gamma) - Oo6el * CS * cos(alpha) 2 * cos(gamma) * sin(gamma) + Oo3el * CS * cos(alpha) 2 *
A A

A

A

A

6-15

A

A

cos(gamma)

* sin(gamma) * cos(phi)
0

A

2 - CS * sin(gamma)

* cos(gamma) * phiD
A

A

2 - CS * phiD * cos(phi);

theta9 = - 0 2el * CS * sin (gamma) cos(gamma)
A
A

2

* cos (gamma) * cos (phi) 2 * alphaD - 0 o 6el * CS * cos (alpha) * sin (phi) * * sin(alpha)- Oo2el * CS * phiD * cos(phi) * cos(gamma) 2 + CS * sin(gamma) * cos(gamma) * phiD
A

* cos(gamma) * cos(phi) 2 + Oo3el * CS * sin(alpha) * cos(alpha) * sin(phi)- CS * sin(gamma) * cos(gamma) * cos(phi) 2 * alphaD 2 + CS * phiD * cos(phi) * alphaD- Oo3el * CS * sin(gamma) * cos(gamma) - Oo2el * CS * phiD * cos(phi) * cos(gamma) 2 * alphaD- Oo3el * CS * cos(alpha) 2 * cos(gamma) * sin(gamma) * cos(phi) 2 + Oo6el * CS * cos(alpha) 2 * cos(gamma) * sin(gamma) + CS * phiD * cos(phi);
2 - CS sin(gamma)
A
A A A A A A

*

6-16

144

Appendix F

Cube sat specifications document
(Reproduced)

CubeSat Design Specification
(CDS)
Revrsto n 9

.. .. .. ии .. .
.

.... ,.

X

Pub h:: !nt.eml:l l Co ntroik:d W ork in ProБres'

i"T1\R

S..I

05,.26.'\:.:t

Amv .HutputtaiUS!Ii

145

Cube sat specifications document

Overv iew The CuheSat Pn},1t'tt is a international coH aboration of'()ver -40 universiti es, htgh sdlO()!S, and pr ivme firms developing p1cosatd!i!es containing scientific, pr ivate, and government payloads A CubeS at is a l 0 em cube with u mass of up to l kg !)evelopers benei1t from the sharing ofintbnnation within the co:nnmni ty _ Ifyou are planning to stan a CuheSat proJCCt, please contact Cnld(xnia Polytechnic State University (Cal Polyt Visit the CuheSat v.ebsite at J:mnJ.ii.;.klh~"-aU;.?J.pill,;....f_ill,l fbr more tnf'tmnntion

Figun. и 1: Six CubrSats a nd tbdr dep loymtnf

~~

stt nu.

The pr imary mission ofthe CuheSat Program i.s to pmv1de i.1L:'tess to space for small pay loads. The primary respons ibility ofCaJ Poly as a launch coordinatnr is to ensure the safety of the CuheSms anJ protect the launch vchide (L V}, primary pay!oaJ. and othu CubeSnts. CubeSai developers should piay an acti ve role in ensuring the safety and success ofCubeSat rmssions by implementing good engmeering practite, testing. anJ verification ofthetr systems Fai lures ofCuheSats, the P-POD. or interlace hardware can dmnage the LV or a pr irnary pay load and put the entire CubeSat Program in jeopardy As part of the CuheSat Community. aH participants have an oh!iga!ion to ensure safe operation oftheir systems and to meet !he design and testmg reqUirements outl tneJ in t}m
document

2

146

P-POO Interface
The Poh Picosmetilte Orbna! Dcpl<)\er 1P-POD} is Cu! Po!v 's standardized CubeSat deployment s;.;skm It is capable of ~arrymg three standard CubeSats and serves as the intt>rlkce benveen the CubeSats and LV The P-POD is an a iutni rmm, redanguiar box wah a door and a spnng mechanism CuheSats slide ahntl! a series ofraiis e teet ion (;rhit CuheS;;Hs nmst he cornpmibl~ \Vlth the P-POJ) to ensu~e safety and success of the mission, meeting the requirements outhned tn th 1s document Add 1tio nal untlxeseen com pmi hih ty issues w t1 ! be r"~nn.и addressed as they arise

imo

1:

c rm~ ~uthm of tlu p. POD.

General Responsibilit ies
l. CubeSats must not present any danger 1Q n.e;,gnt~onng CubeSats In the P-POD. ihe LV, or AH parts must remain auru: h t.~d to the CllbeSa:s during
launch. ejection and operat ion. No additional space debris may he created. CubeSats rnust be designed to minimize Ji1tn inmg in tbc

P-POD.
Absolutely no pyrotechnics are aHowcd inside the CubeSat. 2. NASA approved materials shouid he ust'd whemиver possible

to prevent contamination of other spucecraf! during
integration. testing. and .lm.mch 3. The-newest rev isio~ of the Cube Sat Specification is always the
ofl'idal version
lи"igure l: Poly Picos.ntrllite Orbitnl Orplo~er

Developers are responsible for heing aware ofth::mges (P-POOI Changes will he rm:tde as infrequently as possible beanng launch provider requirements or widespread safety concerns withm the community Cal Pofy will send an update 10 the CuheSa1 mailmg hst upon any changes to

the specification .
CuheSat.-; using an older version of the specl fkation ma) he exempt from implementing changes w the specification on a case-by-case bas1s
Cal Poly holds final approval of a ll CubeSat designs. Any dev iati ons fn:nn the specification 1nust be approved by Cat Poly launch personneL Any CuhcSwt deemed a safe ty hazard by Cal f'oly launch personne l m a~ be pull ed f mrn the hnmdt

Dimensional and Mass Requirements CubeSats are cube shaped picosateilites. w.ith a nominal length of 100 mm per stde Din1ensions and features are outlined in the CubeSat Specification Dmwmg (Attachrnent 1}. Genera! features of aH CubeSats are< Each single CubeSat may not exceed l kg mass Center ofrnass must be within 2 em of its geometric center Douh!иe and triple configurations are possible . In this crts(~ al.!O\\able rnass 2 kg or 3 kg respei;Uveiy, Only the dimensions in the Z ax is change (227 mm tbr doubles and 340 . 5 mm fhr triples). X andY dimensions rernam the same
3

147

Cube sat specifications document

Structural Requirements
T he structure of the CuheSa t must be s!rong enough !o sur'. i\'e maximum loading defined in the testing requirements and cumulative loading of all required tests and launch. T he C ubeSat stru cture must he compatible with the P-POD .
R ail~ must he smooth and e dge~ must be rounded to a minimum rad ius of l mm. At least 'f5% (85J25 mru of a possible l l3.5mmi of the rail must be in contact with !he P-PO I) rails. 259!:: of the rails may be recessed and NO part of the mil s may exceed the specification.

A ll mils must he hard anod ized to prevent cold-welding, red uce \vear, and provide el ectrical !solation between the CubcSats and the P-POD.

Separation springs must be included at designated contact po ints (Attachment l} Spnng plungers are recommended (?v!c\taster-Carr P/N : 84985/\76 available at tlEЦ:2~ ..!~-~~:~,.HJ~:.mf!.lli,J"i:.9.iU} A custom sepamtion system may be used, but must be approved by Cal Poly launch personneL 'f he use of Ahan imm1 7075 or6061-'f 6 is suggested foT the main ~tru cture . Jf other materials arc used, the thenm1! expansion must be simi lar to that of Aluminum 7075 -T'~J (P-POD matc riail and approved by Ca! Po!y bunch personneL J)eployab!es must he constrained by the CubcSaL 'f he P-POD rails and walls arc NOT to he used to constrain deipolyab!es.

Figure 3 : Spri ng pl nngt' t'.

148

Electrical Requirements E!el:tronic svstems must be designed \Vith the i{:Jl!owing salhv features_ No ~lectron il:S may be aZtiw during laund1 to prevent any e. lel:tri ca! or RF interference \\iL~ the launch vehicle and pr intary payloads CuheSats with rechargeabl e batteries must he Cu dy deadiV<tted Jur ing l aunch or launch \Vith d ist harged baHeries One deploymen t s\Vih:h is reyuired l!\\иo are recvmmenJedi for each CubeSat иr he dep loyment switch should be located at d es;gnated points (.A ttachment l L Developers \Vho w!sh to perfl:mn testing and battery charging after integration must provide ground support equipment (G SE '> that conneds H:.J the CubeSm thr ough designated d<Ha ports lAHal'hme nt l). A remove before Dight (RBFJ pin is n~ gu i r e J to deactivate the C ubeSa!s Juring integration outside th e P-f-OD. T he pin w!!! be removed once !he CubeSats are placed inside the P-POD. RBF pins must fit wit hin the d es igna ted data ports (Atta chm ent J I. RBF pins should nm protrude more !han 6.5 mrn from th e rail s "' hen fu!iy inserted. Operationa: l Requirements CubeSats rnust meet certain requirements pertaining to integration and np~rat i on to meet !ega; ohl 1gatlons and ensure safety of other CubeSa:s
CuheSa ts o;v ilh rechargeable han e ries must hav e the capabilit y to receive a transmitter shutdmvn cmnmand, as per FCC reg dation . T o allow adequate se paration of CubcSats, anten nas nmy he deployed 15 minutes nft~r ej e..::tion from the P-PO D (as detec ted by C ubeSat deployment sw ih.:hcs}, Larger deployable:; such as boon.1s and solar panels may be de ployed J O minutes after eie-.~ti o n from the P-PO I), CuheS~lts may enter !ow powe r transm it mode (l.PT\i} 15 minU!es aflctи ejection from the P-POI). LPT!vl is defin ed as short, pe riodi L~ beacons from the CttbeSat C uhcSa!s may <K ti\'atc a!l primary tran smiH crs. or enter hi gh po\Vcr transmit mode ( HJYl'~I l 30 minutes uftcr ejection from the P-POD. Operators must obtain and provide do<.: umentation of proper lice nses for use of frequenc ies. For amate ur fr equency use, thi s requires proof of frequency coordination by !he Inte rnational Ama!cur Radio Union dAR Ut Appli cations can be found at www.iaru.org. l)eve!opers m.ust obtain and provide docum entation of approval of an orbital debri s mitiga!lon from the Federal ConmHmkations Comm ission (FCC }, Contact Robert Nelson ai. rncl son:!ffcc.org Cal Poly wi !l conduct a minimum of one fit check in which developer hardware wi!! he inspected and mtegrated into the P-POD A flnal fit check wi ll he conducted prior to bunch The CubeSut Acceptunl:e Checklist tCAC ) w ill he used l n veri f)и compl iance ofthe specification (Attachment 2). AdditionaH y, periodil: tel eco nf~re nces, v i d eocon f~r e nces. and progress re ports m.ay he r ~ qu i r ed

5

149

Cube sat specifications document

Testing Requirements
lиesting mu!>t h~ p~rf(mn~J to meet uH launch provider r~quin~ments ttS \vel! as any additional tesling r~qLtirt-ments d ~~meJ n~eessary to ensure th ~ sat~ ty of the CubeSats anJ the P-POlJ .AH f1ight harchH\re wt ll unJergo qua!itki.ttion and acceptи1.nce tesu ng. иn1e P-PODs wi H he tested in a sim ih1.r fi.'ts hion to ensure the safety and worknhtnship before imegrat.km \l:ith CubeStits At the very mininmrn. <.tH CuheSab \V iJl undergo the f{)!lo ..ving tests . Random vibration testing at a !eve! h1gher than the pub!ished launch vehtde enve lope outlined in Lhe \lTP иrherrnal. vacuum bakeout to ensure proper outgass1 ng of components The test cycl e and duration wi!l be out!ined in the \ffP V1 sual inspectit'm of the CubeSat and measurement of critical areas as per the mce Check! ist (CA C) Cube Sat Acceptt:

Quaftfication
outhn~d m the Mission Test Plan J au~ch The \fTP ca; be fhund on the CubeScn websne Qua!iJ1cation test ing wH l be perJ()tnled at above launch levels m developer t"aci!iues fn some circumstances, Ca! Po!y can assist developers in finding testing faci lities. or prov ide testing f\.)r the deve lopers A fee may be assoc lftted with any tests performed by Ctt! Poly CubeSats must \'OT be d 1sassemb!ed or rnodified afler qua! ificmion teslmg Additional testing will he required if modifications o.r thanges nre made to the CuheSa ts after

A !l CuheSats must survive Qua! tf'ication testtng as

(MTP) Jhr their specific

qualifiution.

Acceptmtce
Aller delivery and integration of the CubeSats, additiona l testing \V.I ll be performed \Vit."t the integrated syste rn This test assures proper integration of the CubeSaL'i into the PPOD . Additiona1!y, any unknown, harmful interactions het\veen CubeSats may be d1 scovered dur ing acceptance testing, Cal Po ly wi H coordinate and perform ttCCeptance testing. No additil)nal cost is ttssociated with acceptance testing_ Afler acceptance testing, developers may perfbrm diagnostics through the designuted P-POD diagnostic pmts, and visual inspedilml)f the systern will he performed by Cal Poly launch personneL The P.-PODs WILL \'OT h~ deiruegrated at this point If a CuheSat fai !me is discovered, a decision to de integmte the PиPOD \..,ill be m.ade hy the developers in that PPOD and Cal Po!y based on safety concerns The developer is responsible t()r any additional testing required due to corrective moditications 10 deintegrated CubeSats

Contacts
c иi?J P: :d". s~u: L.ui~ CH~:srx.~ f~~f . .I::::tdJ Pti.ig-St.:.4-rl . '\~r: . .:~sp t~.~-~ f:n ~in:t.иerin~ f)cpL f 80.:' .~ 75h-5U.H7 d:k15'; 756-2:3;6 f4-~A. jl?!.l i .8!i:l.la f~ t' ~~l.F<!<I y.rdLi
Stv..k~:H c .(HH "'и: t~ ~
<.;Li:nf~.:n!

l.:nio:t<rsih
Dnи ~ и;:t:~'r

Fn:L BQb T ~\ и i~~s.

SF'-'t
-f650:!

S~и st.:ms ~"23и811и5- ~

D:o\и ~ k;pm:nt L.+. (SSD L l

Dert. 0 f .i\ t.r01 1attti~s ~tnJ .A~I. r~;..n~Ut l.;;- .)

St;nn:n Le-a:-~li C:e@' C::"t 1p~.:-h; ,tиd u

Am:en Tin)r;"'tt

6

150

Side иZ

Additional Notes: - t>Jo ~xtemal components other than the f{Sll!>
may touch th~ tnslde of ~e P~POD.
- .M~t incorporate a

Remove Before flight p1n
fully discharged.

OR launch with

batt~rtes

- Com]XlnentJ on shaded sides may not extend
more than 6 . 5 mm normal to the surface.

- Rails must be either hard anodized of a material other than aluminum. - $epa{ation Spfingii canbe fouoo at McMaster Carr (PIN: 84985Ai'6)

rot

~

~i,:tи::иi-,~1:X'f~:: .

- Center at gravity must p;e ~"'"~ v ,..,. ..., .,..ии
fr<tm the geometric center;

Side -Y
All dimensions in millimeters unless
~ и -~ f~<:f:~>\~ :

otherwise noted.

Specification I B California Polytechnic State University
Cube~at

sAT__ _

и

Round all edges

and comers.
+,1~ 0.1 mm or better.

Aerospace Engineering Department San Luis Obispo, CA 93407 (805) 756. 5087
и~:~::z:.;и"JUiy _ . . 3<r2o04 -иE.:;~, и r. . -и .
~

"NclrroиscALБ M1
. . . . . '. '

и1

Cube sat specifications document

Cubesat Acceptance Checklist

T:rи{s Q ,~,=--~...mr.ent

.~s rи~ terrJa~::

= t :i be:

w иse:

=::~.n ~:u~ re nt~r

иtr.v?: tt'l the
{CI P)
C H D U l r;-ti ... i'i)f'f ,'rX IM Jd(O,

C.wb-es:at

rntaQra t>~n Pro:adu r-= ~

List: Item

Actual

Required

Width [xиy ]

Ski: .2.

S id~

4

Height [z]

; l J-.5 : :) .l nvn

Diagonal [xиy]
Top L53

Testing : ni'o:

IT # 1: - - - - - - -и --

c~at:e : - - - - - - - - - - - -

IT #2. : - - - - и ----

152

