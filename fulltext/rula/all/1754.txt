Ryerson University

Digital Commons @ Ryerson
Theses and dissertations

1-1-2012

A Nonlinear Model For The Optimal Capacity Placement In Self-Healing ATM Networks Based On Link Restoration Strategy
ABM B. Alam
Ryerson University

Follow this and additional works at: http://digitalcommons.ryerson.ca/dissertations Part of the Computer Sciences Commons Recommended Citation
Alam, ABM B., "A Nonlinear Model For The Optimal Capacity Placement In Self-Healing ATM Networks Based On Link Restoration Strategy" (2012). Theses and dissertations. Paper 1233.

This Thesis is brought to you for free and open access by Digital Commons @ Ryerson. It has been accepted for inclusion in Theses and dissertations by an authorized administrator of Digital Commons @ Ryerson. For more information, please contact bcameron@ryerson.ca.

A NONLINEAR MODEL FOR THE OPTIMAL CAPACITY PLACEMENT IN SELFHEALING ATM NETWORKS BASED ON LINK RESTORATION STRATEGY

by

A B M Bodrul Alam B.Sc., Jahangirnagar University, Savar, Dhaka, Bangladesh, 2005

A Thesis presented to Ryerson University in partial fulfillment of the requirements for the degree of Master of Science in the Program of Computer Science

Toronto, Ontario, Canada, 2012 © A B M Bodrul Alam 2012

Author's Declaration I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research. I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand that my thesis may be made electronically available to the public.

ii   

Abstract A Nonlinear Model for the Optimal Capacity Placement in Self-Healing ATM Networks Based On Link Restoration Strategy © A B M Bodrul Alam 2012

Master of Science Computer Science Ryerson University Network Survivability is a critical issue in telecommunications network due to increasing dependence of the society on communication systems. Fast restoration from a network failure is an important challenge that deserves attention. This thesis addresses an optimal link capacity design problem for survivable asynchronous transfer mode (ATM) network based on the link restoration strategy. Given a projected traffic demands and the network topology, capacity and flow assignment are jointly optimized to yield the optimal capacity placement. The problem is formulated as large-scale nonlinear programming and is solved using a specific type of Lagrange method (so called Separable Augmented Lagrangian Algorithm or SALA for short). Several networks with diverse topological characteristics are used in the experiments to validate our proposed novel model, using capacity installation cost, routing cost, total network cost, used capacity and required CPU time, as performance metrics. Link restoration strategy is compared against global reconfiguration strategy using these performance metrics.

iii   

Acknowledgement It is my honour to express my gratitude to people who made this challenge possible for me. First of all, I would like to thank my supervisor Dr. Isaac Woungang, for giving me the opportunity to work under him. He offered me such a challenging topic for my thesis and with his strong support and guidance; I am finally able to achieve my goals. He did not only guide me in the course of this thesis, but also provided me an opportunity to be benefited from his vast knowledge. He was always present to help me out and guide me whenever I needed his guidance. I would also like to thank my co-supervisor, Dr. Oumar Mandione Guèye, for sharing his enormous knowledge about mathematical optimization, modified Newton method, SALA and for giving his time and guidance to make my journey as a graduate student a success. I would like to acknowledge my gratitude to Department of Computer Science, Ryerson University, for financial support and work experience as a graduate student. Lastly, and most importantly, I would like to thank my wife Faria Khandaker. Without her support, courage and adorableness I would not be here today. I dedicate this thesis to her.

iv   

Dedication

To my wife Faria Khandaker I would not be here without her strong belief in me.

v   

Contents 1 Introduction ................................................................................................................................ 1 1.1 1.2 1.3 1.4 1.5 1.6 Context of Our Study ....................................................................................................... 1 Motivation ........................................................................................................................ 1 Objective of the Thesis ..................................................................................................... 2 Thesis Scope ..................................................................................................................... 3 Thesis Contribution .......................................................................................................... 4 Thesis Organization.......................................................................................................... 4

2 Background and Related Work ................................................................................................ 5 2.1 ATM Networks ..................................................................................................................... 5 2.1.1 Characterstics of ATM ................................................................................................... 5 2.1.2 ATM Network Architecture ........................................................................................... 7 2.1.3 Current Transport Control Plane .................................................................................... 9 2.2 Network Restoration Strategy ............................................................................................. 10 2.3 Mathematical Optimization Techniques ............................................................................. 12 2.3.1 Unconstrained Nonlinear Optimization Problem ......................................................... 13 2.3.2 Constrained Nonlinear Optimization Problem ............................................................. 15 2.3.2.1 Penalty Method ................................................................................................. 15 2.3.2.2 Lagrangian Method .......................................................................................... 16 2.3.2.3 Augmented Lagrangian Method ....................................................................... 16 2.4 Related Work....................................................................................................................... 17 3 Optimization Model and Solution Approach ........................................................................ 21 3.1 Optimization Model for Link Restoration ........................................................................... 21 3.2 Solution Approach............................................................................................................... 23 3.2.1 Separable Augmented Lagrangian Algorithm (SALA) ................................................ 24 3.2.2 SALA Applied on Link Restoration ............................................................................. 27 3.2.3 Dijkstra Algotithm ........................................................................................................ 29 3.2.4 Modified Newton Method ............................................................................................ 29 3.3 Proposed Algorithm for Link Restoration Model ............................................................... 31 3.4 Algorithm for Global Reconfiguration Model .................................................................... 34
vi   

4 Numerical Results .................................................................................................................... 37 4.1 Performance Evaluation Parameters ................................................................................... 37 4.1.1 Network Topologies ..................................................................................................... 37 4.1.2 Traffic Demands ........................................................................................................... 37 4.1.3 Scenarios....................................................................................................................... 38 4.1.4 Performance Metrics..................................................................................................... 39 4.2 Performance Comparison of Link and Global Reconfiguration Strategies ......................... 41 4.2.1 Results for Scenario 1 ................................................................................................... 41 4.2.1.1 Capacity Installation Cost ....................................................................................... 41 4.2.1.2 Total Used Capacity ............................................................................................... 44 4.2.1.3 Routing Cost ........................................................................................................... 46 4.2.1.4 Total Network Cost ................................................................................................ 48 4.2.1.5 CPU Time ............................................................................................................... 51 4.2.2 Results for Scenario 2 ................................................................................................... 53 4.2.2.1 Capacity Installation Cost ....................................................................................... 53 4.2.2.2 Total Used Capacity ............................................................................................... 55 4.2.2.3 Routing Cost ........................................................................................................... 57 4.2.2.4 Total Network Cost ................................................................................................ 59 4.2.2.5 CPU Time ............................................................................................................... 61 4.2.3 Results for Scenario 3 ................................................................................................... 63 4.2.3.1 Capacity Installation Cost ....................................................................................... 63 4.2.3.2 Total Used Capacity ............................................................................................... 65 4.2.3.3 Routing Cost ........................................................................................................... 66 4.2.3.4 Total Network Cost ................................................................................................ 67 4.2.3.5 CPU Time ............................................................................................................... 68 5 Conclusion ................................................................................................................................ 70 Appendix A .................................................................................................................................. 72 References .................................................................................................................................... 78
 

vii   

List of Tables 3.1: Parameters used in our Link Restoration Model ................................................................... 21  4.1: Parameters used for our proposed algorithm ......................................................................... 40  4.2: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 41 4.3: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 43 4.4: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 44 4.5: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 45 4.6: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 46 4.7: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 47 4.8: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 48 4.9: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 50 4.10: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 51 4.11: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands .................................................................................................................... 52 4.12: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 53 4.13: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 54 4.14: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 55
viii   

4.15: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 56 4.16: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 57 4.17: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 59 4.18: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 60 4.19: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 61 4.20: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 61 4.21: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 62 4.22: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands ....................................................................................................... 64 4.23: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy for different traffic demands...................................................................................................................... 65 4.24: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands ................................................................................................................................ 66 4.25: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands...................................................................................................................... 67 4.26: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy for different traffic demands ................................................................................................................................ 68

ix   

List of Figures 2.1: ATM Cell ................................................................................................................................. 5 2.2: ATM Multiplexing ................................................................................................................... 6  2.3: Virtual Paths (VPs) and Virtual Channels (VCs) .................................................................... 7 2.4: Architecture of an ATM Network ........................................................................................... 8  2.5: ATM Reference Model ............................................................................................................ 8  2.6: Classification of Restoration Scheme .................................................................................... 10  2.7: Link Restoration Strategy ...................................................................................................... 12 4.1: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 42 4.2: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 43 4.3: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 44 4.4: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 45 4.5: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 46 4.6: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 48 4.7: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 49 4.8: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 50 4.9: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 51 4.10: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands .................................................................................................................... 52 4.11: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 53
x   

4.12: Capacity Installation Cost (in ) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 55 4.13: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 56 4.14: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 57 4.15: Routing Cost (in ) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 58 4.16: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 59 4.17: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands ..................................................................................................... 60 4.18: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands ................................................................................................... 61 4.19: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric Traffic demands ..................................................................................................................... 62 4.20: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric Traffic demands ..................................................................................................................... 63 4.21: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands ....................................................................................................... 64 4.22: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy for different traffic demands...................................................................................................................... 65 4.23: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands ................................................................................................................................ 66 4.24: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands...................................................................................................................... 67 4.25: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy for different traffic demands ................................................................................................................................ 68

xi   

List of Abbreviations
CFA ATM SALA QoS Capacity and Flow assignment Asynchronous Transfer Mode Separable Augmented Lagrangian algorithm Quality of service

GMPLS Generalized multi-protocol label switching TP VP VC VPI VCI Transmission Path Virtual Path Virtual Circuit Virtual Path Identifier Virtual Circuit Identifier

 

xii   

Chapter 1 Introduction
1.1 Context of Our Study
The Asynchronous Transfer Mode (ATM) is a major technology that supports the Broadband Integrated Services Digital Network (BISDN) technology. ATM networks allow transferring different kinds of services such as voice, video, data; with different bandwidth requirements and different quality of services (QoS). Because of the importance of ATM networks, the importance of the survivable ATM networks design cannot be neglected. A survivable ATM network can be defined as a network which can restore all failed traffics by itself when a failure happens to it. Since ATM networks play an important role in modern life, issues of their survivability [1] have gained much attention in recent years. The design of survivable ATM networks is a specific aspect of a more general problem, referred to as the Capacity and flow assignment (CFA) problem [2]. The CFA problem has been intensively investigated in the literature of network survivability [3]. It consists in finding the optimal capacity placement and traffic flows of a network with the target of achieving minimum cost even if a failure occurs in the network, given the traffic demand and network topology.

1.2 Motivation
Currently, in overlay transport networks (IP/ATM/SONET/DWDM), each control plane is managed by its own layer. In recent years, the Generalized Multi-Protocol Label Switching 1

(GMPLS) has emerged as a new unified control plane for the above transport layers. The already installed ATM core self management features can be reused directly or with some adaptation as a particular implementation of GMPLS. As ATM has become popular, a lot of research works has been done in survivability of networks. Among such research works, related to CFA problem, most of them are formulated as a linear multicommodity flow problem. According to best of our knowledge, only the work presented in [4], formulated the problem as a nonlinear programming problem, with near optimal solution. This feature motivated us to continue in the same direction and propose some novel alternative and innovative approach. Moreover, most of the previous works considered that a cost function of the self-healing ATM network is based only on the capacity installation cost, but in our approach, we consider both the capacity installation cost and transit delay cost.

1.3 Objective of the Thesis
This thesis proposes a novel mathematical model for the CFA problem under link restoration strategy for a survivable ATM network when a link failure occurs in the network. We only treat the case when one link fails at a time. Basically, we propose a link restoration strategy which aims to find the optimal capacity and traffic flow for a survivable ATM network when a link failure occurs in the network provided that the network topology and the traffic demands of the network are known in advance. We formulate the CFA problem as a nonlinear multicommodity flow problem, which we solve by using a Lagrangian technique called the Separable Augmented Lagrange Algorithm (SALA). The nonlinearity comes from the objective function of the proposed mathematical model, where both the routing cost and capacity installation cost are considered. The design objective of 2

our proposed strategy is to optimize the capacity and flow allocation while minimizing the network cost and achieving all traffic constraints and survivability requirements. Unlike other relevant similar works [5-6], we consider both the routing cost and capacity installation cost in our objective function.

1.4 Thesis Scope
In our thesis, we consider a preplanned restoration scheme in the design of survivable ATM networks under a single link failure scenario. The design objective is to provide the network survivability cost effectively. Our proposed link restoration mathematical model considers all possible commodities (all source-destination pairs) of the network. Both symmetric and asymmetric traffic demands are considered and it is assumed that traffic demands per node pair as well as the network topology are given. It is also assumed that 100% restoration is the target, where restoration can occur at the virtual path (VP) or the virtual channel (VC) layers and no capacity modularization is considered. In practicality, the users of the network are unconcerned by the restoration mechanism. Typically, the notion of reliability is closely tied to the QoS that the users receive under normal operation of the network or when a failure occurs (failure state). In this thesis, the reliability (i.e. survivability) objective is considered at the application layer in terms of QoS delivered to the user. Due to the fact that failure can occur at various layers, we take the view that our network design should follow an integrated procedure which takes into account all layers and their failure mechanisms. For the actual implementation of our network, we consider only the link restoration as restoration mechanism for a given link failure

3

scenario, assuming that all the other layers are made aware of this procedure, so that no other restoration procedure is started by them.

1.5 Thesis Contribution
The objectives of this thesis are as follows:   Proposing a novel nonlinear model for the CFA problem under link restoration strategy. Proposing a Separable Augmented Lagrangian Algorithm (SALA) to solve the CFA problem.  Comparing the global reconfiguration strategy versus link restoration strategy in different scenarios with diverse network topologies.

1.6 Thesis Organization
In Chapter 2, some basics of ATM networks, along with the restoration strategies that are considered in our context are discussed. Some mathematical foundations of our techniques are also presented. In Chapter 3, our optimization model for link restoration strategy is described along with the proposed solution approach. In Chapter 4, we describe our results based on several performance metrics. In Chapter 5, we conclude our thesis and highlight some future works.

4

Chapter 2 Background and Related Work
In this chapter, we first introduce some definitions related to Asynchronous Transfer Mode (ATM) technologies. We also discuss the restoration strategies that are used in the design of self healing networks. Finally representative previous research works are described.

2.1 ATM Networks
ATM is designed to transmit voice, video and data, all in the same network. Different types of traffic have different tolerance for packet loss and end-to-end delay. Packets containing voice are to be delivered on time and some loss of data may not deteriorate the quality of the voice. On the other hand, while transmitting a data file, the loss of data cannot be tolerated, but there is no stringent requirement that it should be delivered as fast as possible. The main features of ATM networks are discussed as follows.

2.1.1 Characteristics of ATM
The ATM Packet is known as a cell, and it has a fixed size of 53 bytes as shown in Fig. 2.1. It consists of a payload of 48 bytes and a header of 5 bytes. Header 5 bytes Payload 48 bytes
Figure 2.1: ATM Cell

5

ATM uses asynchronous time division multiplexing. ATM multiplexers fill a slot with a cell from any input channels, and the slot remains empty if there is no cell to send from any of the channels. Figure 2.2 illustrates this fact.

Figure 2.2: ATM Multiplexing [7]

Here, there are 3 input channels that are to be multiplexed. At the first time slot, there is no cell from channel 2. Therefore, the multiplexer fills the slot with a cell from channel 3. When there is no cell from any of the channel, the slot is empty. In ATM, cells belonging to a virtual connection follow the same path. The bandwidth is assigned based on the requirement and available capacity at the time of connection. ATM uses Virtual Path Identifier (VPI) and Virtual Circuit Identifier (VCI) fields of a virtual connection to forward cells. At each intermediate node, VCI/VPI values are swapped and new values are filled. This process is referred to as cell relaying and cell switching. The virtual circuits in ATM are classified into two categories: Virtual Channel connection (VCC) and Virtual Path connection (VPC) as illustrated in Fig. 2.3.

6

Figure 2.3: Virtual Paths (VPs) and Virtual Channels (VCs) [7]

In Figure 2.3, 8 endpoints are communicating using 8 VCs. The first 2 VCs uses the same path from switch I to switch III, so we can bundle this 2 VCs together to form 1 VP. The other 2 VCs share the same path from switch I to switch IV, these 2 VCs can be grouped together. The ability to guarantee QoS is one of the biggest strengths of ATM technology. ATM refers to limiting the cell loss, the transit delay and the delay variation induced by the ATM network.

2.1.2 ATM Network Architecture
ATM network interfaces are of different types as shown in Figure 2.4. Prominent among these is the User-Network interface (UNI). There are 2 variations of the UNI: public and private. Network Node Interface (NNI) provides an interface between 2 ATM switches. The Data Exchange Interface (DXI) defines a standardized method to interface between frame based devices.

7

Figure 2.4: Architecture of an ATM Network [8]

The ATM reference model is defined in ITU-T recommendation [ITU-T I.321]. Figure 2.5 depicts the model, which is made of user plane, control plane and management plane.

Figure 2.5: ATM Reference Model [8]

8

The user plane is for transferring the user's information, while the control plane performs the connection control functions. The management plane is used for maintenance. Each plane is divided into a number of layers but only the lower three layers are specified by the ITU-T. The first one is the physical layer. The functions of this layer are bit transfer, bit alignment, line coding, cell rate decoupling, cell header processing, scrambling/ descrambling and frame generation and recovery. The next layer is the ATM layer. The main functions of this layer are cell multiplexing and de-multiplexing, cell VPI/VCI translation, cell header generation, generic flow control, congestion notification and connection assignment and removal. The third layer is the ATM Adaptation layer. Depending upon the type of application, this layer performs a wide variety of functions. AAL is divided into segmentation and reassembly (SAR) sub-layer and convergence sub-layer (CS). These entities help in achieving routing in ATM. Routing is the act of forwarding packets from source to destination. In ATM, routing is considered as signalling. Signalling is used to establish switched virtual connections. The purpose of signalling is to route the signalling messages from source to destination. To provide the means to route signalling messages, ATM forum has defined the Private Network-toNetwork Interface (PNNI) protocol.

2.1.3 Current Transport Control Plane
Up to recently, the vision of designing a network with an integrated view of all the reliability mechanisms embedded was still a challenge from an implementation view point. This 9

situation has changed since the Internet Engineering Task Force (IETF) has introduced the Generalized Multiprotocol Level Switching (GMPLS) technology. In the current overlay network (IP-over-ATM-over-SONET), each layer has its own control plane which can imitate restoration independently of what happens in other layers. With the advent of GMPLS, a new unified control plane and signalling functions is introduced, which is used for the design of multi layers transport networks including next generation networks. In this context, the ATM core implementation framework can be reused in GMPLS, provided that some adjustments are made on it. In this respect, ATM technology is still a viable solution to most applications.

2.2 Network Restoration Strategy
Network restoration (also called survivability) is the ability of a network to function properly even in case of a failure. The designing of a restorable network [9] is an optimization problem that is optimizing the capacity and flow assignment maintaining several constraints. Generally, the restoration schemes can be classified into two categories: reactive restoration scheme and preplanned restoration scheme as shown in Figure 2.6.
Restoration Scheme

Preplanned Restoration

Reactive Restoration

Path Restoration

Link Restoration
Figure 2.6: Classification of Restoration Scheme

10

 Reactive Restoration
Reactive restoration scheme starts to search for alternate routes after the failure occurs by broadcasting the restoration messages and then reroutes the affected traffic. Reactive restoration scheme is more suitable for networks with rapid change of traffic patterns. This restoration scheme requires little knowledge about the current status of the network.

 Preplanned Restoration
In preplanned restoration scheme [5], all the restoration paths for all the commodities with sufficient bandwidth are pre-computed. In case of a failure, a node responsible for restoring the affected traffic activates the restoration route that is precomputed and reroutes the affected traffic. Preplanned restoration is used in the network environment where traffic patterns do not change frequently. The preplanned restoration scheme can further be classified into path and link restoration. Path restoration can further be divided into two categories global and failure-oriented reconfiguration. In global reconfiguration, all the traffic (affected and unaffected) of all the commodities are rerouted whereas in failure-oriented reconfiguration only the affected commodities are rerouted when a failure occurs. In this thesis, we are concerned with link restoration strategy as shown in Figure 2.7. Link restoration is a local restoration scheme where the source node of the failed link and the original destination make a decision to reroute the affected traffic. So it is obvious that this scheme is less flexible compare to path restoration.

11

4

Restoration path

1

2

3

5

Original path
Figure 2.7: Link restoration

In figure 2.7, node 1 and node 5 are the source and destination of a network. Now the original path is 1-2-3-5. But the link between node 2 and node 3 has failed. As we are considering the link restoration strategy the source node of the failed link (i.e. node 2) and the original destination (i.e. node 5) decide how to reroute the affected traffic. Therefore, the flow will be rerouted through the path 2-4-3-5.

2.3 Mathematical Optimization Techniques
Mathematical optimization [10] is a field where the aim is to find a minimum or maximum for a given function. The general form of an optimization problem P1  can be as follows:

min f  x 
x

(2.1)

s.t. g x   0

12

where f x  is the objective function, g  x  describes the constraints and x is a vector in

n

(i.e. a

vector with n real components) generally referred to a decision variable. The aim is to find a value of satisfied. A variable verifying the constraints (i.e. for which g x   0 ) is called feasible solution. for which the objective function is minimum and all the constraints in g  x  are

The set of feasible solutions is called a feasible set. When is linear, the problem P1  is called linear optimization problem. Moreover, if

the variable of the objective function and the constraint is integer, P1  is called linear integer problem. If some of the variables are integer and some are continuous, then that problem is called Mixed Linear Integer Programming problem. If is nonlinear, P1  is called a nonlinear optimization problem. If the variables are

integers then it is called nonlinear integer problem which is much more difficult to solve compared to the linear integer problem. The problem may also be mixed integer non linear optimization problem, which is even more difficult to solve.

2.3.1 Unconstrained Nonlinear Optimization Problem
Without the constraints g  x   0 in Equation (2.1), the problem

P1 

is called

unconstrained optimization problem. There are several efficient methods to solve unconstrained nonlinear problems [11]. Let's consider the following unconstrained problem

P1  :

min f  x  where x 
x

and f x  is twice differentiable. 13

The algorithm for solving P1  using gradient methods is as follows: Algorithm for Unconstrained Nonlinear Optimization Problem Step 1: Initialization Choose   0 (very small) and an initial value of x0 . Then set t  0.   0 Step 2: If f  xt    and  2 f  xt   0 (where x denotes the norm of x) stop. Else go to step 3 Step 3: Compute x t 1  x t   t d t Set t  t  1 and go back to step 2.

The following is an explanation of the above algorithm:  d t is called a descent direction because it decreases the value of the objective function. Several descent directions are proposed and each of them corresponds to a specific method with different convergence rate.   When d t  f  x t , the method is called a steepest descent method. When
d t    2 f  x t  f  x t , the method is called Newton method. Sometimes
1





 2 f  x t  is not positive defined or does not exist. In that case, d t is not a descent

direction and  2 f x t  should be modified by replacing it with a definite positive matrix. This involves using a modified Newton method rather than computing the inverse of
 2 f xt , because doing so is time consuming.



 t is called the step size in the descent direction. In this thesis we use the Armijo method
[12] to find a suitable  t .

14



The convergence analysis of this type of algorithms [13] has generated sequences xt at a stationary point, but the speed of convergence is not the same for all of them.

2.3.2 Constrained Nonlinear Optimization Problem
If f and g are differentiable in the problem P1  stated in Equation (2.1) , the presence of the constraints makes the problem more difficult to solve. Typically, Lagrangian methods combined with penalty methods are used to solve such problems.

2.3.2.1 Penalty Method
A Penalty method consists of modifying the objective function by adding the constraints. Several penalty methods have been proposed in the literature [12]. Here, we present one of them called the exact penalty. It consists of transforming the problem equivalent problem:

P1 

into the following

min f x  
x

t
2

g ( x)

2

, where x  , t is sequence converging to infinity when t   . t

is called a penalty parameter and when t   , this enforces the current solution to be feasible for problem P1  . The constrained problem P1  is transformed into an unconstrained problem and any unconstrained optimization method can be used to solve it. Basically, the solution approach works as follows: Penalty Methods Step 1: Initialization Choose  0  0 and set t  0.

15

Step 2: Solve min f  x  
x

with an unconstrained method and go to step 3 2 Step 3: If solution is optimal stop; otherwise go to step 4. Step 4: Update t and go back to step 2.

t

g ( x)

2

t is chosen such that t   when t   . t can be updated in several ways. For instance,  t 1   t where   1.

2.3.2.2 Lagrangian Method
The Lagrangian method proposes another way to modify the objective function of problem (P). In this case, the problem P1  is replaced by the following problem:
min f  x   u t g x 
x

where x 

and u t is a sequence of parameters called Lagrange multipliers or dual variables.

f x   u t g  x  is called the Lagrange function. This method works as follows: Lagrangian Algorithm Step 1: Initialization Choose u 0 and set t  0. Step 2: Solve min f x t   u t g x t  with an unconstrained method and go to step 3
x

Step 3: If solution is optimal, stop. Otherwise go to step 4. Step 4: Update and go back to step 2.

2.3.2.3 Augmented Lagrangian Method
The Augmented Lagrangian method (also called multipliers method) is a hybrid method between Lagrangian method and Penalty method. We present here the case using the exact 16

penalty term. It should be noted that we use this method in the context of this thesis. In this method, the problem P1  in Equation (2.1) is transformed as follows:

min f  x   u t  g  x 
x

t
2

g ( x)

2

where

are Lagrange multipliers and

are penalty parameters; but here,

is not required to

go to infinity. This method works as follows: Augmented Lagrangian Algorithm Step 1: Initialization Choose 0  0 and u 0 , then set t  0. Step 2: Solve min f  x   u t  g  x 
x

t
2

g ( x) with an unconstrained method and go to step 3

2

Step 3: If solution is optimal, stop; otherwise go to step 4. Step 4: Update and as follows:

 t 1   t ; u t 1  u t  t g  x t  and t  t  1 . Then go back to step 2.

The stopping criterion is based on the Karush-Khun-Tucker(KKT) optimality conditions[14]. In this thesis a novel special case of the Augmented Lagrangian method (SALA) is proposed to solve our proposed CFA problem based on link restoration strategy.

2.4 Related Work
The design of survivable ATM networks is an instance of a classical problem named as Capacity and Flow Assignment (CFA) problem. This problem was intensively investigated by many researchers in the recent years. Typically, the CFA problem is to determine the optimal capacity and flow of all the links of a network while keeping the network cost minimum when 17

the traffic demand and bandwidth requirements are known. Many researchers have investigated the CFA problem as a linear multicommodity flow problem. Only one of them [4] has modeled the problem as a nonlinear multicommodity flow problem. In [5], Xiong and Mason formulated the CFA problem arising in the design of survivable ATM networks as a linear programming problem. They solve the problem by using a standard method and a heuristic algorithm, with the objective to minimize the spare cost. They compared several restoration strategies quantitatively, in terms of spare cost. However, in their scheme, it is assumed that no capacity modularization is made to conform to physical transportation systems. In addition, their proposed formulation does not treat the case of non-bifurcated flow restoration. In [15, 16] Murakami and Hyong discussed the same issue based on link and end-to-end path restoration. They proposed a joint optimization scheme to address the CFA problem. Simulation results were provided, sharing the advantages of end-to-end restoration compared to link restoration. However, in their scheme, the case of node failure scenario was not investigated. In [17], Murakami and Kim proposed a large scale linear programming method to jointly optimize the capacity and flow assignment problem with a target of minimizing the cost. The authors tested their method on two sample networks for several traffic demands and found that a significant amount of cost saving is possible through their method. However, this method is only applicable to preplanned restoration schemes. In [18], the issue of choosing backup virtual paths on the optimized spare capacity allocation was discussed. The authors compared four Spare Capacity Allocation (SCA) design schemes quantitatively in terms of spare capacity requirements. Moreover, a link based design

18

approach was also introduced and the solution obtained was shown to be adequate in terms of grade of service (GoS) and quality of service (QoS) requirements. In [19], Cheng-Shong Wu et al. addressed the CFA problem and proposed a linear programming formulation for both path and link restoration schemes to minimize the usage of spare capacity. After evaluating their method, they concluded that their proposed scheme was good efficient in spare capacity usage and had a fast restoration time. But this method is applicable only if the backup virtual paths are precomputed before the failure occurs. In [4], Murakami and Hyong investigated the CFA problem and proposed a non-linear, non-smooth multicommodity flow formulation with linear constraints. They demonstrated that their algorithm using modified flow deviation method can converge to a near optimal solution by properly adjusting the optimization parameters. However, avoiding premature convergence is a challenge in their method. In [20], Herzberg et al. presented an approach for spare capacity assignment which reduces the total weighted cost. Their approach takes into account that the restoration routes do not violate the predetermined hop limit value, and the CFA problem is formulated as a linear programming problem which includes two parts. The first part provides a lower bound solution on the spare cost and the second part rounds up the solution to a feasible one. The authors also compare the result of this approach with existing one. The authors apply their scheme in only small and moderate networks, for large networks they do not propose any formulation. In [21], Dunn et al. investigated the CFA problem as well. They showed that the ksuccessive shortest link disjoint paths (KSP) are faster, easier and more robust in restoration for span failure and presented a comparative study of the effectiveness of KSP versus Max flow for 19

restorable networks. However, KSP cannot provide an optimal solution for all types of networks. In addition, they do not consider the path restoration and node failure scenario. In [22], Grover et al. developed a heuristic algorithm to solve the problem of nearoptimal spare capacity assignment in mesh type networks for span failure. They applied the kshortest link disjoint paths, assuming that rerouting capability can be done in the network. However, the full trade off between restorability and redundancy was not revealed in this approach. Their results showed that their approach is applicable for real world planning applications. In [23], Nishimura et al. proposed a distributed control mechanism which is applicable for both link and path restoration. The method allows the shared use of spare channels for various failure scenarios. As a result, the efficient use of spare channels can be achieved. Using a network-flow technique, a linear programming based scheme was also proposed leading to a fast restoration. However, the complexity of their proposed algorithm was not investigated. In the literature we found that a lot of research was done in this field, but most of them formulated the CFA problem as a linear multicommodity flow problem. Only a few [2] treated the CFA problem using a nonlinear model. Unlike the method in [2], in our proposed method, we consider both the routing cost and the capacity installation cost within our objective function. Our method finds a near optimal solution while achieving a fast restoration time.

20

Chapter 3 Optimization Model and Solution Approach
In this chapter, our novel mathematical model using the link restoration strategy is described first. Then the techniques used for solving our model are described in depth, followed by our proposed algorithm for the link restoration strategy.

3.1 Optimization Model for Link Restoration
Link restoration strategy is a local restoration scheme where the source node of the failed link and the original destination decide to reroute the affected traffic. For a better understanding, we consider the notations given in Table 3.1.
Table 3.1: Parameters used in our Link Restoration Model

Notations N ( A, B) a
K
rk Ql

Meaning A graph N where A is the number of nodes and B is the number of arcs
Transit delay unit cost Number of commodities Traffic demand (bandwidth requirement) of commodity k Total number of backup paths when the arc l fails Aggregate flow on the arc a when the arc l fails Equals to 1 if the p th path of commodity k uses the arc a and 0 otherwise Capacity on arc a when the arc l fails The flow commodity k using by its p th path p when the arc l 0 is not failed Unit cost of capacity installation Aggregated flow rerouted on backup path q when the arc l fails Equals to 1 if p th path of commodity k is affected when the arc l fails, otherwise 0 Equals to 1 if the q th backup path uses the arc a when the arc l is failed, otherwise 0 If the p th path of commodity K is affected when the arc l fails a  is a downstream arc with respect to l , 1 otherwise 

l0 xkp

da

k

al kp

0

21

The traffic on the failed arc l is considered as one commodity originating from the upstream node of the link failure. With a link restoration strategy, the objective function can be written as follows:
l za l min  [ a l  d a Ca ] l Ca  z a a 1 n

(3.1)

s.t.
l al a l0 l l za   kkp  kp x kp  aq yq , a  1,....., n; a  l k 1 p 1 q 1 K Nk Ql

(3.2)

x
p 1 Ql

Nk

l0 kp

r k , k  1,............, K ,
K Nk

(3.3)

l0 l xkp ,  yql   kp q 1 k 1 p 1

(3.4)

l 0  za C al , a  1,......... .., n, s  S

(3.5) (3.6) (3.7)

l0 xkp  0, k  1,......, K , p  1,.........., N k

ylq  0, q  1,....., Ql,l


The target of the objective function is to minimize the routing cost and capacity installation cost. The first term of the objective function is the routing cost given by the Kleinrock's average delay function [14] where  a is the transit delay unit cost of the arc
l l a , Ca and z a denote respectively the capacity and traffic on arc a , when the arc l has

failed. The second term of the objective function is the cost of the installed capacities where d a is a unit cost of capacity installation.

22



l In constraint (3.2), y q is the traffic flow on backup path q , Q l is the total number of lo denotes the amount of flow commodity k using its backup paths when the arc l fails, xkp

p th path when no failure occurs in the network,  aq equals to 1 if the q th backup path uses
l al  0 if the p th working path the arc a when a failure occurs on arc l , and 0 otherwise, k kp

of the commodity k is affected when the arc l fails and a is a downstream arc with respect
al  1. to l , otherwise k kp



Constraint (3.2) assures that the traffic flow on an arc a when a failure happens on arc l is the summation of flows on the working paths and the backup paths using that arc a .



Constraint (3.3) is the flow requirement constraint, which ensures that all bandwidth demands of all commodities using all paths are fulfilled, i.e. the bandwidth requirement is met.



Constraint (3.4) expresses that all traffic is ensured to be rerouted on the backup paths when an arc l fails.



Constraint (3.5) is the capacity constraint which ensures that the traffic flow on an arc a should be positive and less than the capacity of that arc a .



Constraint (3.6) and (3.7) are positivity constraints, which ensures that the traffic flows of every commodity on all of its paths should be positive

3.2 Solution Approach
To solve the above model (3.1) to (3.7) we use the Separable Augmented Lagrangian Algorithm (SALA), which involves using Dijkstra algorithm, Modified Newton method and the

23

Armijo method. We describe all of the methods in this section. At first we describe some basics about SALA and then apply SALA in our link restoration model.

3.2.1 Separable Augmented Lagrangian Algorithm (SALA)
SALA was proposed and extensively studied in [12] by Hamdi. It was designed for separable nonlinear large scale programming. For a better understanding, we consider the following separable problem:

min  f j x j 
n j 1

(3.8)

s.t.

 g x   0
n j 1 j j

(3.9) (3.10)
x j are n j -vectors and S j are closed and

xj Sj,

j  1,..., n.

when function f j is twice differentiable, bounded subsets of
nj

. gj :

nj



m

are smooth functions and constraints (3.9) are

coupling constraints. To exploit the separability of the objective function, SALA consists to introduce allocation vectors
yj

to

decouple

the

constraints

(3.9)

by

setting

y j   g j x j , j  1,..., n. We obtain the following equivalent problem:

min  f j x j 
n j 1

(3.11)

s.t.

y
j 1

n

j

0

(3.12)

24

g j x j   y j  0, xj Sj,

j  1,..., n j  1,..., n

(3.13)

(3.14)

Applying the Augmented Lagrangian method [13], we obtain the following:
n 2   min   f j x j   u j ( g j x j   y j )  g j x j   y j  2  j 1  n

(3.15)

s.t.

y
j 1

j

0
j  1,..., n

(3.16) (3.17)

xj Sj,

In the above equations, u j are Lagrange multipliers and   0 is a penalty parameter. To solve problem (3.15)-(3.17), Hamdi et al. proposed in [12] to minimize alternatively with respect to x j and y j . Note that at iteration t, when the problem is solved with respect to one variable the other one is supposed to be known. At iteration t, we then obtain the following sub problems:
2   x tj  arg min x j S j  f j x j   u tj g j x j   y tj1  t g j x j   y tj1  2  





(a)

y tj  arg min

t  t t t t 1 2     u g x y g x y   j j j j j j j  j y j 0  2 

  




 

(b)

(3.18)

u tj1  u tj  t g j x tj  y tj

  

(c)

The equation (3.18)-(c) is the Lagrange multipliers formula. [12] The sub-problems can be solved explicitly by using the Karush-Kuhn-Tucker conditions [13]. We then obtain,

25

1 n y   g j x   g j x tj , n j 1
t j t j

 

 

j  1,..., n and u

t 1

u 
t

t

 g x . n
n j 1 j t j

From the above Equation it can be observed that the same dual vector is used for all subproblems [12]. The Separable Augmented Lagrangian Algorithm can then be presented as follows: Separable Augmented Lagrangian Algorithm (SALA) 1. Choose u 1 ,   0,   0,   0, y 0 j such that 2. j  1,..., n Compute
2   x tj  arg min x j S j  f j x j   u tj g j x j   y tj1  t g j x j   y tj1  2  

y

0 j

 0 and t  1.





3. Compute

 t   g j x tj 
n j 1

If  t   stop. Else go to step 4. 4. Update formula
1 y tj   g j x tj   t n
u t 1  u t 
 t 1   t

 
t
n

t

t  t  1 and go back to step 2.

26

3.2.2 SALA Applied on Link Restoration Strategy
Now, let's apply SALA to the link restoration model (3.1) to (3.7). For this purpose, let u be the dual vector defined by the following u  (u1 , u 2 ,..., u n , U 1 , U 2 ,...., U K , w)   n  K 1 . If
( z * , x * , y * , u * ) is an optimal solution, the KKT conditions [14] involve the following equations:
* l* l* l* if za a ( za , Ca )  ua 0

(3.19)

* l* l* l* if za a ( z a , Ca )  ua 0

(3.20)

l0 * al a * l  a k kp  kp u a  U k*   kp  * if xkp 0

(3.21)

l0 * al a * l  a k kp  kp u a  U k*   kp  * if xkp 0

(3.22)

l* a *  a  kq u a   * if yq 0

(3.23)

l* a *  a  kq u a   * if yq 0

(3.24)

Now the optimal paths are shortest paths where the arc costs are given by this equation:
l l a ( xa , Ca )

a
l C  xa l a

 d a . The total cost is considered as the summation of the transit delay

cost and capacity installation cost of an arc a. Finally, a feasible solution is optimal when the following conditions are satisfied:
lt l t l if za  a  a ( z a , Ca )  ua 0

(3.25)

lt l t l  a  min{ a ( z a , Ca )  ua ;0} if za 0

(3.26)

27

l al a l  kp  ( a k kp  kp u a )  U k   kp  if xkp 0
0

(3.27)

l al a l  kp  min{( a k kp  kp u a )  U k   kp ;0} if xkp 0
0

(3.28)

l l  q  ( a  aq u a )   if yq 0

(3.29)

l l  q  min{( a  aq u a )  ;0} if yq 0

(3.30)

Indeed, a feasible solution is optimal if for all a, we have  a  0 , for all k and p,  kp  0 and for all q,  q  0 .
Nk Ql t K al a l ma  1  k 1  p 1 k kp kp   q 1  aq



 

(3.31)

Nk Mk lt K al a l 0 t l lt ta  za  k 1  p 1 kkp kp xkp   q 1  aq yq



(3.32)

l0 t k Z kt  rk   N p 1 xkp

(3.33)

Nk l0t Mk K l lt tl   k 1  p 1  kp xkp   q 1 yq

(3.34)

Nk K l nlt   k 1  p 1  kp  Ql

(3.35)

t In Equation (3.31), ( m a  1) represents the total number of paths that are both primary

and backup paths through the arc a. In Equation (3.35), nlt represents the summation of the total use of the failed arc and the number of backup paths. Equation (3.32) is the aggregated flow constraint, which ensures that the total flow of an arc must be equal to the summation of the flow of primary and backup path uses of that arc. In equation (3.33), Z kt is the flow requirement constraint which means, the total flow of all the paths for a commodity must be equal to its bandwidth requirement. Equation (3.34) ensures that the total flow on the failed arc for all the 28

commodities and all paths must be equal to the flow of the backup paths. A solution to the above problem is feasible if ta  0, Z kt  0 and tl  0 . Before describing the link restoration algorithm, it is important to shed some lights on the other important methods that we have used in our proposed algorithm.

3.2.3 Dijkstra Algorithm
The Dijkstra algorithm is used to find the shortest path from a given source node to a given destination node in the network. In our proposed algorithm, as we need to explore the paths for each commodity of a network, we use Dijkstra to find the shortest path for each commodity. In fact we find a new shortest path that is not already explored and use that path if its cost is less than that of the previous explored path. The complexity of this algorithm is O(|N|2) where N is the number of nodes in the network.

3.2.4 Modified Newton Method
The modified Newton method is an iterative descent method to find a solution to an optimization problem. Typically, this method is a combination of the original Newton method with the steepest descent method [13]. The modified Newton method has several advantages such as ensuring a global convergence as well as fast convergence. Due to its fast converging nature, we have adopted this method in our SALA-based algorithms. The pseudo code of our modified Newton method is as follows: Algorithm for Modified Newton Method Step 1: Initialize all the parameters as follows:

29

0 0 0   0,  a ,0  x a  Ca ,   [0;1], i  0

Step 2: Compute the step size in the modified Newton direction through Armijo method.
i i i i  i  Armijo ( x a , Ca , a ,dM )

Step 3: Calculate the capacity and flow for the next iteration.

C

i 1 a

i 1 i i i , xa  Ca , xa  idM

 



Step 4: If the new estimated capacity and flow can fulfill the stopping condition, we return them as solution. Otherwise we go to step 2 and repeat the process as follows:
i 1 i 1 i If Lx a , Ca , a    stop i 1 i i 1 i 1 Else set  a  a   x a  Ca , i  i  1, and then go back to step2.

Armijo Method
For an optimization problem, after selecting the descent method and the descent direction, another method is needed to search an appropriate step size in the descent direction. The modified Newton method uses the Armijo method for determining the step size of the descent direction. The appropriate choice of the step size ensures that the sequence of the values generated by the descent method converges with some rate of convergence. The steps of the Armijo method are as follows: Armijo Method Step 1: Initialize the values of all the necessary parameters as follows:
 1 1 0 0 Choose   ; , ( x a , C a ),   10 5 ;10 1 , m  0 and t= 0 10 2 





Step 2: Compute the capacity and flow for the next iteration

30

C

t 1 a

t 1 t t t , xa  Ca , xa   m d M

 



Step 3: Compute the step size as follows:
t t t 1 t 1 t t t t If L(C a Stop and return  m , xa )  L (C a , xa )   m L(C a , xa , a )d M

Else m : m  1 and go back to step 2.

3.3 Proposed Algorithm for Link Restoration Model
The detail algorithm of our proposed link restoration strategy is described as follows: Proposed Algorithm for Link Restoration Model 1. Initialization
l0 l 0 0 Choose >0, u a ,U kl ,  ,  0  0,  > 1, z a  0, x ks1  0 , y ks1  0, 0a  0, m1 a  1,

t 1
2. For all arcs a = 1,....., n, Calculate the optimal flow and capacity of each arc as follows

    z lt t t t lt za  t (za , Ca )  arg 0 z lt C min  t a a l  d a C a  ua a a 2  Ca  za This is done by using the Modified Newton method.
lt

1   l 2  ta l l ( t 1) z z z ( ) 2 ( )    a a a t 1   ma    

3. End (For) 4. For all k=1,...., K
n

1 

{1 p  N k /  kp 1}

min l

k
a 1

al kp

a l l  kp a ( z a , Ca )

l l Determine 1 the length of the shortest path between Ok and Dk and  a ( z a , Ca ) is the

cost of an arc. Here, we first calculate the cost of all the explored path for a commodity and pick the path that has minimum cost. We then calculate the cost of the path from all available paths and 1 takes the minimum one among them. 5. If 1   1 , then N k  N k  1 (Introduction of a new working path); i.e. if any new path costs less than the previous explored path cost then we explore a new path. 31

6. End (If) 7. While p  N k compute
t 1  Z  l l al a  a    kp  k  k  al a l  a kp kp ma nl N k   t 1  a k kp  kp u a  U k   kp  max 0; x kp    l al a l al a t (1   kp   a k kp  kp ) 1   kp   a k kp  kp      

l0 x kp

This equation represents the flow of all the explored paths.
l0  0, N k  N k  1 (Cancellation of a non active working path). In other words, if 8. If xkp

any explored path does not have any flow we discard that path and the total path number of that specific commodity is reduced by 1. 9. End (If)
l  1 then compute, 10. Else If  kp

 2  min

1 q  Ql


a 1

n

l aq

l l  (za , Ca )

Determine  2 the length of the shortest path between Ok and Dk where the arc costs are
l l given by  a ( z a , Ca ).

11. If  2   2 then Q l  Q l  1 (Introduction of a new backup path); i.e. if any new backup path cost is less than the cost of the previous explored path then a new backup path is explored. 12. End (If) 13. While q  Q l Compute the flows of all backup paths as follows:
t 1   l a   l  l t  a aq t nl ma  l ( t 1)  a u a aq   lt  max 0; y q   yq l l t (1   a  aq ) 1   a  aq   

      

l  0 then Q l  Q l  1 (Cancellation of a non active backup path). In other words, if 14. If y q

any explored backup path does not have any flow, we discard that path and the total backup path number of that specific commodity is reduced by 1. 15. End (If) 32

16. End (While q) 17. End (Else of step 10) 18. End (While p) 19. End (For k) This k is the closing of step 4. So we repeat all the steps from step 4 to step 18 for all the commodities. 20. Compute the values of the feasibility and optimality conditions. F  max max ta , max Z kt , tl



t t Opt  max max  at , max  kp , max  q a kp q


a

k





21. If max F , Opt    then Stop. 22. End (If) 23. Else go to step 24 Otherwise update some values and repeat the process until the threshold is achieved. 24. Update formula
t 1 t ua  ua 

t
m
t a

ta
Z kt

U kt 1  U kt 

t
Nk

 t 1   t 

t
nlt
K

tl

k l t 1 ma  1  k 1  p  k al  a  q  l 1 kp kp 1 aq



N

Q



k nlt 1  k 1  p   l  Ql 1 kp

K

N

 t 1   t

Set t  t  1 and go back to step 2

33

3.4 Algorithm for Global Reconfiguration Strategy
For comparing our results against the global reconfiguration strategy, we implemented the following algorithm for the global reconfiguration strategy (using the SALA method). Algorithm for Global Reconfiguration Strategy Step1: Initialize all the necessary parameter values as follows:
s s 1 0 0 0 0 0 0 1 1   0, u1 ,..., u 1 n , 0 , , x1 ,... x n , C1 ,..., C n x11 ,.., x k 1 ,  1 ,..,  n n1 ,..., n n , t
0 0

1 Where u1 is the

s0 0 Lagrange multipliers,  0 is the penalty parameter, x11 are the initial flows of all the ,..., x ks1

0 0 working paths of all the commodities, x10 ,..., x n and C10 ,..., C n are the initial flows and capacities

1  1 is the initial total number of paths through the arcs etc. of the all arcs, t iteration number, n1

Step 2: Calculate the flow and capacity of each arc using the modified Newton method and the Armijo method as follows: For all arcs a = 1, 2....., n

(C , x )  arg 0 x s C
st a st a
a

a

s  t  s 2  at 1     a xa  s t s s s ( t 1) min  s  d a C a  u a x a  ( x a )  2 x a ( x a  t )  s 2  na     C a  xa 

Step 3: End (For) of step 2. Step 4: Calculate the cost of all the explored paths of a commodity and pick the path which has the minimum cost based on our cost function as follows: For all k=1,..., K
a st st   min  kp a ( xa , Ca ) p 1,..., N
k



n

 

 a 1

Determine  , the cost of a new previously unexplored shortest path where the arc costs are
st equal to  a ( x a , C ast ) .

34

Step 5: If    , then introduce a new working path for the commodity.
N k  N k  1.

Step 6: End (If) of step 5. Step 7: Compute the flows of all paths of the commodity using the following formula: While p  N k compute
t 1    kt 1  n  a a   a 1   kp t     n a t t Nk  na   st 1 ( a 1  kp u a )  U k     max 0; x kp   a a t (1   n 1 n a 1  kp ) a 1  kp      

st x kp

st  0 N k  N k  1 (Cancellation of a non active working path). Step 8: If x kp

Step 9: End (If) of step 8. Step 10: End (While) of step 7. Step 11: End (For) of step 4. Step 12: Calculate the values of the parameters  t and  t for the optimality and feasibility conditions of our strategy according to the following equations:

 t  max max  at , max  kt
a k



 and 

t

t t  max max  a , max  kp a kp





Step 13: If max   t ,  t    Stop i.e. our algorithm is stopped as our feasibility and optimality conditions are fulfilled and we have achieved the optimal flows and capacities of the arcs. Step 14: End (If) of step 13. Step 15: Else go to step 16. Step 16: Update the parameter values of our algorithm using the following equations:
t 1 t ua  ua 

t

m

t a

 at  kt
N

U kt 1  U kt 

t
Nk
K

k t 1 na  1  k 1  p  a 1 kp

 t 1   t

35

t  t  1 and go back to step 2.

The algorithm for global reconfiguration is used only to compare the performance of our proposed SALA-based link restoration strategy.

36

Chapter 4 Numerical Results
In this chapter, we describe the performance of our proposed algorithm under various network topologies, traffic demands, performance metrics and scenarios. There are several input parameters for our proposed algorithm. The main ones are described below.

4.1 Performance Evaluation Parameters
4.1.1 Network Topologies
We consider a network as a graph N(A, B) where A is the number of nodes and B is the number of arcs. For our experiments, three different scenarios are considered (which are described next). For scenario 1, we consider the following network topologies N(15,132), N(15,142), N(15,152) and N(15,162). For Scenario 2, we consider 5 different networks : N(3,6), N(5,20), N(8,56), N(12,126) and N(15,162). For Scenario 3, we use the network N(15, 152). The graphical representations of these networks are shown in the Appendix section.

4.1.2 Traffic Demands
Traffic demand (bandwidth requirement) is the required traffic to be carried through the network for a given commodity (node pair). It can be symmetric (same bandwidth) or asymmetric (different bandwidth per direction). For symmetric traffic demands, we set a fixed value (5 bits/second) for all commodities. For asymmetric traffic, we generate the traffic demands for each commodity as follows: 37

Code for Generating Asymmetric Traffic Demands double randdouble( double min, double max) { double result; if (min>max) result = max + (rand()/((( double)RAND_MAX + 1) / min)); else result = min + (rand()/((( double)RAND_MAX + 1) / max)); return result; } For each of the commodities in the network, the above code generates a random number within the range min and max, where min and max are predefined values.

4.1.3 Scenarios
The following scenarios are considered:  Scenario 1: We vary the network connectivity, i.e. the number of the arcs of the networks is changed and the impact of this variation is studied using both symmetric and asymmetric traffic demands, for the considered performance metrics.  Scenario 2: We vary the network size, that is the numbers of the nodes, and we study the impact of this variation using both symmetric and asymmetric traffic demands, for the considered performance metrics.

38



Scenario 3: We keep the network size fixed and vary the traffic demand and see the impact of this

variation for all the considered performance metrics.

4.1.4 Performance Metrics
We use five performance metrics to evaluate our numerical results.  Capacity Installation Cost The first performance metric is the capacity installation cost. As our target of this restoration strategy is to minimize the network cost, one of the costs is the capacity installation cost. We calculate this cost simply by multiplying the capacity and the unit cost for all the arcs of the network and then take the summation of all those.  Routing Cost Routing cost is our second performance metric . In our algorithm, we consider the routing cost and try to minimize it. To calculate the routing cost, we use the Kleinrock's average delay function [14].  Total Network Cost We consider the total network cost of a network as the summation of the capacity installation cost and the routing cost.

39



Total Required Capacity

The main purpose of this research is to optimize the capacity and flow of the network in order to minimize the network cost. Therefore, capacity is the very important metric to be considered.  CPU Time Time is an important factor for restoration. We calculate the required CPU time to get the solution and consider this as a performance metric. Basically, it depends on the processor that is used. In this thesis, we use an Intel 1.86 GHz processor with 1 GB memory to run our proposed link restoration algorithm. The parameters used for our algorithms are captured in Table 4.1.
Table 4.1: Parameters used for our proposed algorithm

Restoration Scheme Failure Scenario Maximum paths per node pair Maximum number of hops for a path Capacity Modularization

Link Restoration Single link failure 10 10 No capacity modularization is made to conform to physical transmission system Link Orientation Bidirectional link ( a link is made by 2 unidirectional arcs) CPU Configuration Processor : Intel Xenon 1.86 GHz Memory: 1 GB Initial Parameters value for the SALA based  a  0.001 (transit delay unit cost),  d a  0.001 Link restoration algorithm (unit capacity installation cost),  u a  0.01374 (Lagrange multiplier),   2.7, U k  0.001659 (Lagrange multiplier), w  0.006,     0.01092 (penalty parameter)
   

Performance Metric

Capacity Installation cost, Routing cost, Total Network Cost, Total Required Capacity, CPU Time 40

Traffic Demand Networks Routing strategy

Symmetric and Asymmetric N(3,6), N(5, 20), N(8, 56), N(12, 126),N(15, 132), N(15, 142), N(15, 152), N(15, 162) All possible paths

4.2

Performance

Comparison

of

Link

and

Global

Reconfiguration Strategies
In this section, the performance analysis and comparison of the link restoration and global reconfiguration strategies under the above mentioned scenarios are described.

4.2.1 Results for Scenario 1
4.2.1.1 Capacity Installation Cost
For comparing the performance metric capacity installation cost between the link and global reconfiguration strategies, the following networks N(15,132), N(15,142), N(15,152), N(15,162) are considered. The results obtained in terms of capacity installation cost using symmetric traffic demands are captured in Table 4.2 and depicted in Figure 4.1.
Table 4.2: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N(15,132) 4.399 1.841

N(15,142) 4.239 1.774

N(15,152) 4.075 1.702

N(15,162) 3.995 1.623

41

Capacity Installation Cost (in Dollars)

Capacity Installation Cost of Link vs. Global ReconfigurationStrategy Using Symmetric Traffic Demands
5 4 3 Link 2 1 0 N(15,132) N(15,142) N(15,152) N(15,162) Global

Figure 4.1: Capacity Installation Cost (in Dollars) for Link vs. Global Restoration Strategy using symmetric traffic demands

Figure 4.1 shows that as the number of arcs increases in a network, the capacity installation cost decreases. Figure 4.1 reveals the fact that in networks having large number of arcs, have better options for selecting candidate paths for each commodity than in networks having fewer arcs when a failure occurs in the network, and consequently networks with large number of arcs require less capacity installation cost. From Figure 4.1, it can also be observed that the global reconfiguration strategy requires less capacity than the link restoration strategy. This is understandable because link restoration is less flexible in selecting restoration paths when failure occurs in the network and thus cannot better share the capacity of the network. Like symmetric traffic demands, we have also compared the restoration strategies with respect to capacity installation cost under asymmetric traffic demands. Table 4.3 summarizes the results and Figure 4.2 depicts them.

42

Table 4.3: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N(15,132) 1.745 0.751

N(15,142) 1.685 0.725

N(15,152) 1.624 0.696

N(15,162) 1.596 0.668

Capacity Installation Cost of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
Capacity Installation Cost (in Dollars) 2 1.5 1 0.5 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.2: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

In asymmetric traffic demands, the performance metric capacity installation cost behaves in the same way as it does in symmetric traffic demands. Global reconfiguration strategy performs better than link restoration strategy because it has more flexibility in its optimization procedure.

43

4.2.1.2 Total Used Capacity
The results obtained when evaluating the performance metric total used capacity for the restoration strategies are summarized in Table 4.4 and depicted in Figure 4.3.
Table 4.4: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N(15,132) 4399.600 1841.420

N(15,142) 4239.892 1774.161

N(15,152) 4075.670 1702.800

N(15,162) 3995.660 1623.620

Total Used Capacity of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
Total Used Capacity (in Bits) 5000 4000 3000 Link 2000 1000 0 N(15,132) N(15,142) N(15,152) N(15,162) Global

Figure 4.3: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

It's obvious that, the more flexible the optimization procedure is, the less capacity is required to optimize the network when a failure occurs. Figure 4.3 reveals this phenomenon for global reconfiguration and link restoration strategies. As the global reconfiguration strategy is 44

more flexible for selecting candidate paths for the commodities, it can better share the network capacity and as a result, it requires less capacity than the link restoration strategy while designing the self-healing ATM network. We repeat the same experiment using asymmetric traffic demands. The results for the total used capacity are captured in Table 4.5 and depicted in Figure 4.4.
Table 4.5: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N(15,132) 1745.890 751.606

N(15,142) 1685.890 725.361

N(15,152) 1624.880 696.066

N(15,162) 1596.920 668.390

Total Used Capacity of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
Total Used Capacity (in Bits) 2000 1500 1000 500 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.4: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

45

In Figure 4.4, it can be observed that for asymmetric traffic demands, the performance metric total used capacity behaves in the same way as it does in symmetric traffic demands.

4.2.1.3 Routing Cost
We have evaluated the metric routing cost for comparing the restoration strategies and results are captured in Table 4.6 and depicted in Figure 4.5.
Table 4.6: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N(15,132) 0.069 0.643

N(15,142) 0.073 0.695

N(15,152) 0.078 0.749

N(15,162) 0.083 0.783

Routing Cost of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0 N(15,132) N(15,142) N(15,152) N(15,162)

Routing Cost (in Dollars)

Link Global

Figure 4.5: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.5 depicts the fact that with the increase in the number of arcs in a network, better options for choosing the candidate routes for optimizing the network cost exist, but on the other hand routing cost is increased as more arcs are used for routing the traffic flows. 46

From Figure 4.5, it can also be observed that the link restoration strategy requires less routing cost than global reconfiguration strategy. This can be justified by the fact that the global reconfiguration strategy reroutes both the affected and unaffected traffic in case of link failure while the link restoration reroutes only the affected traffic flows keeping the unaffected traffics unchanged. As a result, global reconfiguration strategy can better share the network capacity, but at the expense of more traffic routing than in the case of link restoration strategy. We now repeat the same experiment but using asymmetric traffic demands. The results are captured in Table 4.7 and Figure 4.6.
Table 4.7: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N(15,132) 0.068 0.499

N(15,142) 0.072 0.526

N(15,152) 0.076 0.551

N(15,162) 0.083 0.567

From Table 4.7 it can be observed that, routing cost of global reconfiguration in asymmetric traffic is much higher than that of the link restoration strategy, which is exactly the same as in symmetric traffic demands.

47

Routing Cost of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
0.6 Routing Cost (in Dollars) 0.5 0.4 0.3 0.2 0.1 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.6: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

In Figure 4.6, it is clearly observed that the same trend as in the case of symmetric traffic demands prevails.

4.2.1.4 Total Network Cost
The total network cost for link and global reconfiguration strategies under symmetric traffic demands are captured in Table 4.8 and depict in Figure 4.7.
Table 4.8: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N(15,132) 4.469 2.485

N(15,142) 4.313 2.469

N(15,152) 4.154 2.452

N(15,162) 4.078 2.406

48

Total Network Cost of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
5 4 3 Link 2 1 0 N(15,132) N(15,142) N(15,152) N(15,162) Global

Figure 4.7: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.7 shows that when the number of arcs of a network is gradually increased, the total network cost is gradually decreased for all the restoration strategies. This is justified by the fact that capacity installation cost has larger value than the routing cost in a specific network. So, the trend of total network cost depends on the trend of capacity installation cost. We already have seen that, with the increase of the number of arcs, capacity installation cost decreases and as a result the total network cost is also decreased for both restoration strategies. In Figure 4.7, it can also be observed that the global reconfiguration strategy requires less network cost to optimize the network than the link restoration strategy. This can be justified by the fact that the optimization procedure for global reconfiguration is more flexible in selecting the candidate routes for the commodities, and hence the capacity of the network is shared better, thus less network cost is needed for optimizing the network.

Total Network Cost (in Dollars)

49

Like symmetric traffic demands, we have also compared the restoration strategies with respect to total network cost under asymmetric traffic demands. Table 4.9 summarizes the results and Figure 4.8 depicts the results.
Table 4.9: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N(15,132) 1.814 1.251

N(15,142) 1.758 1.250

N(15,152) 1.701 1.247

N(15,162) 1.680 1.235

Total Network Cost of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
2 1.5 1 0.5 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.8: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Figure 4.8 reveals that, in case of asymmetric traffic demands, total network costs in both restoration strategies are also dominated by capacity installation costs, consequently the total network costs are decreased when the number of arcs in a network is increased. 50

Total Network Cost (in Dollars)

Likewise symmetric traffic demands, the global reconfiguration strategy requires less network cost to optimize the network than the link restoration strategy.

4.2.1.5 CPU Time
With respect to CPU time, we have compared the link and global reconfiguration strategy. The results are captured in Table 4.10 and depicted in Figure 4.9.
Table 4.10: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N(15,132) 0.750 0.220

N(15,142) 0.810 0.220

N(15,152) 0.830 0.260

N(15,162) 1.040 0.360

CPU Time of Link vs. Global Restoration Strategy Using Symmetric Traffic Demands
1.2 CPU Time (in Seconds) 1 0.8 0.6 0.4 0.2 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.9: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.9 shows that the proposed restoration strategies are quite fast as the link restoration strategy can execute only within 1.04 seconds for restoring the affected traffics of a

51

large dense network and global reconfiguration strategy requires less time than the link restoration. We repeat the same experiment using asymmetric traffic demands. The results are captured in Table 4.11 and depict in Figure 4.10.
Table 4.11: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N(15,132) 0.750 0.220

N(15,142) 0.810 0.220

N(15,152) 0.830 0.260

N(15,162) 1.040 0.360

CPU Time of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
1.2 CPU Time (in Seconds) 1 0.8 0.6 0.4 0.2 0 N(15,132) N(15,142) N(15,152) N(15,162) Link Global

Figure 4.10: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Figure 4.10 shows that even for asymmetric traffic, our proposed restoration strategy is quite fast. Here also, global reconfiguration strategy requires less time than the link restoration.

52

4.2.2 Results for Scenario 2
In scenario 2, the performance comparison between the link restoration and global reconfiguration strategy has been done in 5 different sizes of networks: N(3, 6), N(5, 20), N(8, 56), N(12, 126), N(15, 162), using both symmetric and asymmetric traffic demands.

4.2.2.1 Capacity Installation Cost
The results for comparing the two restoration strategies in terms of capacity installation cost using symmetric traffic demands are summarized in Table 4.12 and depicted in Figure 4.11.
Table 4.12: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N (3,6) 0.145 0.050

N(5,20) 0.359 0.134

N(8,56) 0.895 0.350

N( 12,126) 2.136 0.851

N(15,162) 3.995 1.623

Capacity Installation Cost(in Dollars)

Capacity Installation Cost of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
5 4 3 Link 2 1 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Global

Figure 4.11: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

53

Figure 4.11 shows that as the size of the networks increases, so does the capacity installation cost. This is due to the fact that when the network size is increased, the number of commodities and their traffic demands are also increased. To fulfill the increased traffic demands, more capacity is needed for the network, which in turn increases the capacity installation cost. In Figure 4.11, it is also observed that the link restoration strategy requires more capacity installation cost than the global restoration strategy. This is justified by the fact that the optimization procedure of link restoration is less flexible in selecting the backup paths for a commodity when a single link failure occurs in the network. Moreover, the difference between the global reconfiguration and link restoration strategy increases in respect of capacity installation cost when the network size increases. We now repeat the experiment using asymmetric traffic demands. The results are captured in Table 4.13 and Figure 4.12. Clearly, the same observations as in the case of symmetric traffic demands prevail.
Table 4.13: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N (3,6) 0.051 0.002

N(5,20) 0.132 0.057

N(8,56) 0.349 0.154

N( 12,126) 0.841 0.369

N(15,162) 1.576 0.668

In Table 4.13, it is also observed that the link restoration strategy requires more capacity installation cost than the global restoration strategy using asymmetric traffic demands which is exactly same as using symmetric traffic demands.

54

Capacity Installation Cost (in Dollars)

Capacity Installation Cost of Link vs. Global  Reconfiguration Strategy Using Asymmetric Traffic  Demands
1.8 1.6 1.4 1.2 1 0.8 0.6 0.4 0.2 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162)

Link Global

Figure 4.12: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

4.2.2.2 Total Used Capacity
The results obtained when evaluating the performance metric total used capacity for the restoration strategies are summarized in Table 4.14 and depicted in Figure 4.13.
Table 4.14: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N (3,6) 145.650 50.124

N(5,20) 359.650 134.162

N(8,56) 895.690 350.260

N( 12,126) 2136.820 851.671

N(15,162) 3995.660 1623.616

In Table 4.14, it is clearly seen that link restoration strategy requires more capacity than the global reconfiguration strategy. In Figure 4.13, the expected results are obtained for link restoration strategy because with the increase in network size, the number of commodities increases, and thus the required capacity also increases. In addition, the optimization procedure

55

Total Used Capacity of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
Total Used Capacity (in Bits) 5000 4000 3000 Link 2000 1000 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Global

Figure 4.13: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

for link restoration is less flexible in selecting the candidate routes compared to the case of global reconfiguration. In Figure 4.13, it can also be observed that the difference between link and global reconfiguration is quite small in small size networks compared to large size networks. We repeat the same experiment using asymmetric traffic demands and the results are captured in Table 4.15 and depicted in Figure 4.14.
Table 4.15: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N (3,6) 51 2

N(5,20) 132 57

N(8,56) 349 154

N( 12,126) 841 369

N(15,162) 1576 668

56

Total Used Capacity of Link vs. Global Reconfiguration  Strategy Using Asymmetric Traffic Demands
Total Used Capacity (in Bits) 1800 1600 1400 1200 1000 800 600 400 200 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Link Global

Figure 4.14: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

In Figure 4.14, it can be observed that in terms of total used capacity, the global reconfiguration strategy performs better than the link restoration strategy for asymmetric traffic demands.

4.2.2.3 Routing Cost
We have evaluated the metric routing cost for comparing the restoration strategies and the comparison results are captured in Table 4.16 and depicted in Figure 4.15.
Table 4.16: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

 

Networks Link Global

N (3,6) 0.003 0.015

N(5,20) 0.012 0.085

N(8,56) 0.029 0.265

N( 12,126) 0.065 0.602

N(15,162) 0.084 0.783

57

Routing Cost of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162)

Routing Cost (in Dollars)

Link Global

Figure 4.15: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.15 reveals that the routing cost is increasing along with the increment in network size for both restoration strategies. It can also be observed that the link restoration strategy in terms of routing cost, we can see that link restoration strategy performs better than the global reconfiguration strategy. This is due to the fact that the link restoration strategy reroutes only the affected traffic flows when a link failure occurs whereas in the global reconfiguration strategy all the traffic flows (affected and unaffected) are rerouted throughout the network. It is also observed that the difference between global and link restoration strategy in terms of routing cost is more pronounced in large size networks and less pronounced in small size networks. We also evaluate the routing cost with asymmetric traffic demands. The results are captured in Table 4.17 and depict in Figure 4.16.

58

Table 4.17: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N (3,6) 0.003 0.014

N(5,20) 0.010 0.055

N(8,56) 0.028 0.160

N( 12,126) 0.062 0.382

N(15,162) 0.078 0.567

Routing Cost of Link vs. Global Reconfiguration Strategy  using asymmetric traffic demands
0.6 Routing Cost (in Dollars) 0.5 0.4 0.3 0.2 0.1 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Link Global

Figure 4.16: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Likewise symmetric traffic demands, link restoration strategy has less routing cost than the global reconfiguration strategy and this difference increases with the increment of network size for asymmetric traffic demands.

4.2.2.4 Total Network Cost
We have evaluated the comparison for link and global reconfiguration strategy for the performance metric, total network cost. The results are captured in table 4.18 and depicted in figure 4.17. 59

Table 4.18: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N (3,6) 0.149 0.065

N(5,20) 0.371 0.219

N(8,56) 0.925 0.615

N( 12,126) 2.202 1.453

N(15,162) 4.079 2.406

Total Network Cost of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
4.5 4 3.5 3 2.5 2 1.5 1 0.5 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162)

Total Network Cost (in Dollars)

Link Global

Figure 4.17: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.17 reveals that if the network size is increased, the total network cost of the network is also increased for both restoration strategies. This is quite understandable since link restoration generates more capacity installation cost than global reconfiguration. We now repeat the same experiment using asymmetric traffic demands. The results that are captured in Table 4.19 and Figure 4.18 clearly show the same observations as in the case of symmetric traffic demands.

60

Table 4.19: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N (3,6) 0.054 0.035

N(5,20) 0.142 0.113

N(8,56) 0.377 0.315

N( 12,126) 0.904 0.751

N(15,162) 1.654 1.230

Total Network Cost of Link vs. Global Reconfiguration  Strategy using asymmetric traffic demands
1.8 Total Network Cost (in Dollars) 1.6 1.4 1.2 1 0.8 0.6 0.4 0.2 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Link Global

Figure 4.18: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

4.2.2.5 CPU Time
With respect to CPU time, we have compared the link and global reconfiguration strategy and the results are captured in Table 4.20 and depicted in Figure 4.19.
Table 4.20: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Networks Link Global

N (3,6) 0.010 0.001

N(5,20) 0.040 0.010

N(8,56) 0.170 0.020

N( 12,126) 0.500 0.110

N(15,162) 1.040 0.360

61

CPU Time of Link vs. Global Reconfiguration Strategy Using Symmetric Traffic Demands
1.2 CPU Time (in Seconds) 1 0.8 0.6 0.4 0.2 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Link Global

Figure 4.19: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using symmetric traffic demands

Figure 4.19 reveals that our proposed link restoration strategy is quite fast as the convergence time is 1.04 seconds only for restoring the affected traffics of the large size network N(15,162). In addition, link restoration requires more time than global reconfiguration strategy. We also evaluate CPU time using asymmetric traffic demands and the results are captured in Table 4.21 and depicted in Figure 4.20.
Table 4.21: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Networks Link Global

N (3,6) 0.010 0.001

N(5,20) 0.020 0.005

N(8,56) 0.100 0.020

N( 12,126) 0.350 0.110

N(15,162) 0.350 0.190

62

CPU Time of Link vs. Global Reconfiguration Strategy Using Asymmetric Traffic Demands
0.4 CPU Time (in Seconds) 0.35 0.3 0.25 0.2 0.15 0.1 0.05 0 N (3,6) N(5,20) N(8,56) N( 12,126) N(15,162) Link Global

Figure 4.20: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy using asymmetric traffic demands

Figure 4.20 shows the required time for executing our proposed algorithm using asymmetric traffic demands. Here also, we have found that the execution time for the large size network N(15,162) is only 0.36 seconds for the link restoration algorithm. Global reconfiguration needs less time to execute than link restoration.

4.2.3 Results for Scenario 3
In this section, the performance comparison between the link and global restoration strategies is done in terms of the same performance metrics discussed earlier, where the traffic demands of the commodities are varied in the network N(15,152).

4.2.3.1 Capacity Installation Cost
We have varied the traffic demands of the commodities here. The results are captured in the Table 4.22 and depicted in Figure 4.21.

63

Table 4.22: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

Traffic Demands Link Global

0.1 0.171 0.038

0.2 0.213 0.076

1 0.812 0.358

2 1.632 0.696

5 4.065 1.702

10 8.130 3.206

Capacity Installation Cost (in Dollars)

Capacity Installation Cost of Link vs. Global Reconfiguration Strategy for Different Traffic Demands
10 8 6 4 2 0 0.1 0.2 1 2 5 Traffic Demands ( in Bit/Second) 10 Link Global

Figure 4.21: Capacity Installation Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

Figure 4.21 shows that as the traffic demands increase, the capacity installation cost also increases for both restoration strategies. It is also observed that global reconfiguration strategy requires less capacity installation cost compared to the link restoration scheme. This can be due to the fact that the optimization process in the link restoration strategy is less flexible in selecting the routes, thus cannot share the capacity of the network in a better way, and thus results in more capacity installation cost than in the case of global reconfiguration strategy. It is also observed that the difference in capacity installation cost between link restoration and global

64

reconfiguration strategies increases along with the increment in bandwidth requirements of the commodities.

4.2.3.2 Total Used Capacity
The results obtained when evaluating the performance metric total used capacity for the restoration strategies are summarized in Table 4.14 and depicted in Figure 4.13.
Table 4.23: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy for different traffic demands

Traffic Demands Link Global

0.1 171.694 38.932

0.2 213.603 76.279

1 812.560 358.318

2 1632.970 696.066

5 4065.670 1702.800

10 8130.760 3206.830

Total Used Capacity of Link vs. Global Reconfiguration Strategy for Different Traffic Demands
Total Used Capacity (in Bits) 10000 8000 6000 4000 2000 0 0.1 0.2 1 2 5 Traffic Demands ( in Bit/Second) 10 Link Global

Figure 4.22: Total Used Capacity (in Bits) for Link vs. Global Reconfiguration Strategy for different traffic demands

Figure 4.22 also reveals that the global reconfiguration strategy requires less capacity to optimize the network than the link restoration strategy. This is due to the fact that the global reconfiguration is flexible for better sharing the capacity of the network compared to the link 65

restoration strategy. Moreover, the difference between global reconfiguration and link restoration with respect to the required capacity increases when the traffic demands of the commodities increase.

4.2.3.3 Routing Cost
We have evaluated the metric routing cost for comparing the restoration strategies and the comparison results are captured in Table 4.24 and depicted in Figure 4.23.
Table 4.24: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

Traffic Demands Link Global

0.1 0.028491 0.11

0.2 0.046749 0.16

1 0.07769 0.4537

2 0.07969 0.55117

5 0.08269 0.74926

10 0.08469 0.93117

Routing Cost of Link vs. Global Reconfiguration Strategy for Different Traffic Demands
1 0.8 0.6 0.4 0.2 0 0.1 0.2 1 2 5 Traffic Demands ( in Bit/Second) 10 Link Global

Figure 4.23: Routing Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

Routing Cost (in Dollars)

66

Figure 4.23 shows that the link restoration strategy requires less routing cost than the global reconfiguration strategy. This is essentially due to the fact that the link restoration strategy routes the affected traffics only whereas the global reconfiguration strategy reroutes all unaffected and affected traffics for failure recovery.

4.2.3.4 Total Network Cost
We have evaluated the metric total network cost for comparing the restoration strategies and the comparison results are captured in Table 4.25 and depicted in Figure 4.24.
Table 4.25: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

Traffic Demands Link Global

0.1 0.200 0.148

0.2 0.260 0.236

1 0.890 0.812

2 1.712 1.247

5 4.148 2.452

10 8.215 4.138

Total Network Cost of Link vs. Global Reconfiguration Strategy for Different Traffic Demands
Total Network Cost (in Dollars) 10 8 6 4 2 0 0.1 0.2 1 2 5 Traffic Demands ( in Bit/Second) 10 Link Global

Figure 4.24: Total Network Cost (in Dollars) for Link vs. Global Reconfiguration Strategy for different traffic demands

67

Figure 4.24 reveals that the link restoration strategy requires more network cost than the global reconfiguration strategy. This is attributed to the fact that the global reconfiguration scheme generates less capacity installation cost compared to the link restoration strategy.

4.2.3.5 CPU Time
With respect to CPU time, we have compared the link and global reconfiguration strategy and the results are captured in Table 4.26 and depicted in Figure 4.25.
Table 4.26: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy for different traffic demands

Traffic Demands Link Global

0.1 0.110 0.080

0.2 0.180 0.120

1 0.820 0.200

2 0.830 0.260

5 0.830 0.260

10 0.840 0.260

CPU Time of Link vs. Global Reconfiguration Strategy for Different Traffic Demands
1 0.8 0.6 0.4 0.2 0 0.1 0.2 1 2 5 Traffic Demands ( in Bit/Second) 10 Link Global

Figure 4.25: CPU Time (in Seconds) for Link vs. Global Reconfiguration Strategy for Different Traffic Demands

CPU Time (in Seconds)

68

Figure 4.25 shows that our proposed link restoration strategy can converge very fast for large size networks i.e. only 0.84 seconds when the traffic demand is 10 bits per second per commodity. The global reconfiguration strategy takes less time to converge compared to the link restoration strategy.

69

Chapter 5 Conclusion
In this thesis, we have addressed the CFA problem in self-healing ATM network under link restoration strategy. The problem has been modeled as a multicommodity nonlinear model and solved using the Separable Augmented Lagrangian Algorithm (SALA) assuming that the network topology and projected traffic demands are given. The findings of this thesis can be summarized as follows:  The global reconfiguration strategy performs better than the link restoration strategy in terms of the total network cost, total used capacity and CPU time. But in terms of routing cost, link restoration strategy always performs better than the global reconfiguration strategy.  The difference between the global reconfiguration and link restoration strategies is more pronounced in networks having fewer arcs in terms of total used capacity and capacity installation cost. But in terms of routing cost, the difference between these two strategies is more pronounced in a network having large number of arcs.  The difference between the global reconfiguration and link restoration strategies is quite small for a small bandwidth requirement, whereas the difference becomes evident for a large bandwidth requirement.

70



The capacity installation cost, total required capacity and the total network cost gradually decrease for both of the restoration strategies when the number of arcs of a network gradually increases, using symmetric and asymmetric traffic demands.



All the five performance metrics of the two restoration strategies are increased when the bandwidth requirements of the commodities are increased.

As a future work, node failures could be investigated as well as applying our solution approach to other types of networks such as Generalized Multi-Protocol Label Switching (GMPLS) networks.

71

Appendix A

1 4
3

0 0

1

2

2

3

N(3, 6) Network with 3 Nodes and 6 arcs

N (5, 20) Network with 5 Nodes and 20 arcs

2 3 1

0

4
3

7 6

5

N(8, 56) Network with 8 Nodes and 56 arcs

72

3 4
3

2

5 1

0

6

11 7

10 8 9

N (12,126) Network with 12 Nodes and 126 arcs

73

4
3

3

5

2

6

1

7

0

8

14 9 13 10 12 11

N (15,132) Network with 15 Nodes and 132 arcs

74

4
3

3

5

2

6

1

7

0

8

14 9 13 10 12 11

N (15,142) Network with 15 Nodes and 142 arcs

75

4
3

3

5

2

6

1

7

0

8

14 9 13 10 12 11

N (15,152) Network with 15 Nodes and 152 arcs

76

4
3

3

5

2

6

1

7

0

8

14 9 13 10 12 11

N (15,162) Network with 15 Nodes and 162 arcs

77

References
[1] D. Rajan and A. Atamturk, "Survivable network design: routing of flows and slack" in Telecommunications Network Design and management, Sixth INFORMS Telecommunications Conference, pp. 65-81, Florida, USA, March 2003. [2] I. Woungang, G. Ma, M. K. Denko, S. Misra, H. C. Chao and M. S. Obaidat, "Survivable ATM mesh networks: Techniques and performance evaluation", Journal of Systems and Software, vol. 83, Issue 3, pp. 457-466, 2010. [3] B. Jxger and D. Tipper, "On fault recovery priority in ATM networks," in Proceedings of the IEEE International Communications Conference (ICC'98), vol. 3, pp.1410 ­ 1414, Atlanta, GA, June, 1998. [4] K. Murakami, S. Hyong, "Near-Optimal Virtual Path Routing for Survivable ATM Networks", in Proceedings of International Conference on Computer Communications, pp.208215, Toronto, Ontario, Canada, June, 1994. [5] Y. Xiong and L.G. Masson, "Restoration Strategies and Spare Capacity Requirements in Self-Healing ATM Networks", IEEE/ACM Transactions on Networking, vol. 7, No. 1, pp. 98110, February 1999. [6] C. Y. Lee and S.J. Koh, "A Design of Self-Healing ATM Networks Based on Backup Virtual Paths", Computers and Operations Research, vol. 25, Issues 7-8, pp. 595-609, July 1998. [7] B. A. Forouzan, Data Communications and Networking. 4th ed. New York: McGraw-Hill, 2007, pp. 523-535, ISBN 978-0-07-296775-3.

78

[8] Sumit Kasera, ATM Networks Concepts and Protocols.1st ed. India: McGraw-Hill, 2006, pp. 40-50, ISBN 978-0-07147732-1. [9] W. P. Wang, D. Tipper, B. Jxger, and D. Medhi, " Faulty recovery routing in wide area packet networks," in Proceedings of 15th International Teletraffic Congress, Washington, DC, June 1997. [10] C. T. Kelly, Iterative Methods for Optimization, in: Frontiers in Applied Mathematics, vol.18, Philadelphia, PA: SIAM, 1999, ISBN 978-0898714333. [11] P. E. Frandsen, K. Jonasson, H.B. Nielsen, and O. Tingleff, Unconstrained Optimization, Informatics and Mathematical Modelling, 3rd ed. Lyngby, Denmark: Technical University of Denmark, 2004, ch.5, sec.5.1, pp.45-46. [12] A. Hamdi, P. Mahey and J.-P. Dussault, " A New Decomposition method in non convex Programming", Recent Advances in Optimization, P. Gritzmann, R. Horst, E. Sachs and R. Tichatschke eds., Lecture Notes in Economics and Mathematical Systems, vol. 452, pp. 90-104, 1997. [13] D. P. Bertsekas, Nonlinear Programming, 2nd ed. Belmont, Mass.: Athena Scientific, 1999, ISBN 1-886529-00-0. [14] L. Kleinrock, Queuing systems, vol. 1, New York: Wiley Interscience, 1975, ISBN 9780471491101. [15] K. Murakami and S. Hyong, "Optimal Capacity and Flow Assignment for Self-Healing ATM Networks Based on Line and End-to-End Restoration", IEEE/ACM Transaction on Networking, vol. 6, no. 2, pp. 207-221, April 1998.

79

[16] K. Murakami and S. Hyong, "Comparative Study on Restoration Schemes of Survivable ATM Networks", In Proceedings of International Conference on Computer Communications, vol. 1, pp. 345 ­ 352, Kobe, Japan, April 1997. [17] K. Murakami and S. Hyong, "Joint Optimization of Capacity and Flow Assignment for SelfHealing ATM Networks", in Proceedings of IEEE International Communications Conference, pp. 216-220, Seattle, WA, 1995. [18] I. Woungang, S. Misra, and M. S. Obaidat, "On the Problem of Capacity Allocation and Flow Assignment in Self-healing ATM networks", Journal of Computer Communications, vol. 30, Issue 16, pp. 3169-3178, 2007. [19] C-S Wu, S-W Lee, Y-T Hou and Y-S Chu, "A New Preplanned Self-healing Scheme for Multicast ATM Network", In Proceeding of International Conference in Communication and Technology (ICCT'96), pp. 888-891, Beijing, May 1996. [20] M. Herzberg , S. J. Bye, and A. Utano, The hop-limit approach for spare-capacity assignment in survivable networks, IEEE/ACM Transactions on Networking, vol.3, pp.775-784, Dec. 1995. [21] D. Dunn, W. Grover and M. McGregor, "Comparison of k-shortest paths and maximum flow routing for network facility restoration", IEEE J. Select. Areas Commun, vol. 12, pp. 88-89, 1994. [22] W. D. Grover, T. D. Bilodeau and B. D. Venables, "Near optimal spare capacity planning in a mesh restorable network", in Proc. IEEE Global Telecommunications Conference, pp. 20072012, Phoenix, AZ, Dec. 1991.

80

[23] H. Sakauchi, Y. Nishimura and S. Hasegawa, "A self-healing network with an economic spare-channel assignment" in Proc. IEEE Global Telecommunications Conference, pp. 438-443, San Diego, CA, Dec. 1990.

81

