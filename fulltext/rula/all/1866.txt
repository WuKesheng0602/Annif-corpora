Ryerson University

Digital Commons @ Ryerson
Theses and dissertations

1-1-2012

The CC-Game: A Variant Of The Game Of Cops And Robbers
Ali Haidar
Ryerson University

Follow this and additional works at: http://digitalcommons.ryerson.ca/dissertations Part of the Applied Mathematics Commons Recommended Citation
Haidar, Ali, "The CC-Game: A Variant Of The Game Of Cops And Robbers" (2012). Theses and dissertations. Paper 1391.

This Thesis is brought to you for free and open access by Digital Commons @ Ryerson. It has been accepted for inclusion in Theses and dissertations by an authorized administrator of Digital Commons @ Ryerson. For more information, please contact bcameron@ryerson.ca.

THE CC-GAME: A VARIANT OF THE GAME OF COPS AND ROBBERS

by Ali Haidar, Bachelor of Science in Computer Science Arts, Science and Technology University Jadra, Lebanon, 2009

A thesis presented to Ryerson University in partial fulfilment of the requirements for the degree of Masters of Science in the Program of Applied Mathematics

Toronto, Ontario, Canada, 2012 c Ali Haidar 2012

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A THESIS

I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research. I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand that my thesis may be made electronically available to the public.

ii

The CC-Game: A Variant Of The Game Of Cops And Robbers Ali Haidar Masters of Science in Applied Mathematics Ryerson University Toronto, Ontario, Canada, 2012

Abstract
Cops and Robbers is a vertex pursuit game played on graphs. The objective of the game, as the name suggests, is for a set of cops to catch the robber. We study a new variant of this game in which the robber can attack a cop or fight back. This variation restricts the movement of the cops and changes many of the parameters and strategies achieved in the regular game. We explore aspects of this variant such as classifications for certain cop numbers, upper and lower bounds, strategies on special graphs, the cop number on products of graphs, complexity of computations, and density of cops in infinite graphs.

iii

Acknowledgements
I would like to thank the Faculty and Staff at the Department of Mathematics at Ryerson University for all their help and support. Their contributions have been essential for the completion of this thesis. First and foremost, my deepest thanks go to my supervisor Dr. Anthony Bonato. His enthusiasm and interest in Graph Theory and Mathematics is a driving force to everyone who works with him. Dr. Bonato's insight, guidance and patience was essential to this work and to my development as a mathematician. I would like to thank Dr. Peter Danziger and Dr. Dejan DeliÂ´ c for being part of my thesis committee and for their guidance. Special thanks go to all the members, organizers and speakers of Graphs at Ryerson who helped expand my knowledge and interest in Mathematics. I would like to also thank Steve Kanellis for his technical help and support. I would like to also express my gratitude to my parents, Mohammad and Fatima, and my wife, Emma. Their unwavering support and constant encouragement continues to be an inspiration for all my work and was invaluable for the completion of this thesis.

iv

Contents

1 Introduction 1.1 1.2 1.3 1.4 Motivation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Graphs: Introduction and Notation . . . . . . . . . . . . . . . Asymptotic Notation . . . . . . . . . . . . . . . . . . . . . . . Graph Theory Concepts . . . . . . . . . . . . . . . . . . . . . 1.4.1 1.4.2 1.5 Random Graphs Graph Algorithms . . . . . . . . . . . . . . . . . . . . .

1 1 4 8 9 9

. . . . . . . . . . . . . . . . . . . . 11

Overview of Thesis . . . . . . . . . . . . . . . . . . . . . . . . 13 14

2 The cc-Game 2.1

The cc-number . . . . . . . . . . . . . . . . . . . . . . . . . . 14 2.1.1 Graph Girth . . . . . . . . . . . . . . . . . . . . . . . . 17

2.2 2.3 2.4 2.5

Cycles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 Retracts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 Isometric Paths . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Corners and Dismantlable Graphs . . . . . . . . . . . . . . . . 27

v

Contents

2.6

Joined Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 31

3 Planar and Product Graphs 3.1 3.2

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 Planar and Outerplanar Graphs . . . . . . . . . . . . . . . . . 31 3.2.1 Outerplanar Graphs . . . . . . . . . . . . . . . . . . . 32

3.3

Graph Products . . . . . . . . . . . . . . . . . . . . . . . . . . 39 3.3.1 Strong Product . . . . . . . . . . . . . . . . . . . . . . 40

3.4

Nearly Irreducible Vertices . . . . . . . . . . . . . . . . . . . . 44 49

4 Miscellaneous Results on the cc-Game 4.1 4.2

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 Complexity . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 4.2.1 Cops, Robbers, and the cc-Game . . . . . . . . . . . . 51

4.3 4.4

Random Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . 53 Infinite Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . 56 4.4.1 Chains and Cop Density . . . . . . . . . . . . . . . . . 59 64

5 Results and Open Problems 5.1 5.2 5.3

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64 Results and Theorems . . . . . . . . . . . . . . . . . . . . . . 64 Open Problems and Conjectures . . . . . . . . . . . . . . . . . 65 67

Bibliography

vi

List of Figures
1.1.1 Robber attacks the cop . . . . . . . . . . . . . . . . . . . . . . 1.1.2 A backup cop . . . . . . . . . . . . . . . . . . . . . . . . . . . 1.2.1 A disconnected graph . . . . . . . . . . . . . . . . . . . . . . . 1.2.2 Distance between vertices . . . . . . . . . . . . . . . . . . . . 1.2.3 Families of graphs . . . . . . . . . . . . . . . . . . . . . . . . . 1.2.4 A homomorphism on Cycles . . . . . . . . . . . . . . . . . . . 3 3 5 6 6 7

1.4.1 A random graph G(20, 0.5) . . . . . . . . . . . . . . . . . . . . 11 1.4.2 A graph with an Euler circuit. . . . . . . . . . . . . . . . . . . 13 2.1.1 One cop is not enough . . . . . . . . . . . . . . . . . . . . . . 17 2.2.1 Dominating set in C6 . . . . . . . . . . . . . . . . . . . . . . . 20 2.2.2 Large cycles need more than two cops . . . . . . . . . . . . . . 21 2.2.3 Three cops on large cycles . . . . . . . . . . . . . . . . . . . . 21 2.3.1 A retraction u  v . . . . . . . . . . . . . . . . . . . . . . . . 22 2.4.1 An isometric path . . . . . . . . . . . . . . . . . . . . . . . . . 24 2.4.2 An isometric path need not be 2-guardable . . . . . . . . . . . 26 2.5.1 cc-Game on a dismantlable graph . . . . . . . . . . . . . . . . 28

vii

List of Figures

2.6.1 Construction of Joined graphs . . . . . . . . . . . . . . . . . . 29 3.2.1 Planar graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 3.2.2 An outerplanar graphs . . . . . . . . . . . . . . . . . . . . . . 33 3.2.3 A maximal outerplanar graphs . . . . . . . . . . . . . . . . . . 34 3.2.4 Cop territory on an Outerplanar graphs . . . . . . . . . . . . . 36 3.2.5 Truncated Icosahedral . . . . . . . . . . . . . . . . . . . . . . 39 3.3.1 Strong Product of two graphs. . . . . . . . . . . . . . . . . . . 41 3.3.2 Cops move diagonally on Strong product graphs . . . . . . . . 44 3.4.1 Ordering of Nearly irreducible vertices. . . . . . . . . . . . . . 45 3.4.2 A kite graph. . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 4.2.1 The four complexity classes. . . . . . . . . . . . . . . . . . . . 51 4.4.1 Finite number of cops on an infinite tree . . . . . . . . . . . . 57 4.4.2 Graph with e.c. property . . . . . . . . . . . . . . . . . . . . . 58 4.4.3 A robber escaping finitely many cops in R. . . . . . . . . . . . 59

viii

Chapter 1 Introduction
1.1 Motivation

Cops and Robbers is a vertex pursuit game played on a reflexive, undirected graph (that is, a graph where there is a loop on each vertex). The objective of the game, as the name suggests, is for a set of cops to catch the robber. This game was introduced by Quilliot [14] in his doctoral thesis and further independently considered by Nowakowski and Winkler [15]. Since then, the game of Cops and Robbers has been the subject of much interest in the mathematical and computer science literature; for more background, see the recent book [5]. The game is played over a series of rounds and starts with the k cops choosing at most k vertices. The robber then picks a vertex himself to start on. At the beginning of each round, the cops will move to neighboring

1

1.1. Motivation

vertices. The robber will also move to one of its neighboring vertices after the cops' move. Since the game is played on a reflexive graph, the players can choose to remain on their present vertex. A winning strategy for the cops is a set of instructions that enables them to catch the robber after a finite number of rounds. If the robber cannot be caught with a finite number of moves from the cops, then the robber wins. A graph in which a strategy exists for one cop to win is called a cop -win. A graph in which a strategy exists for k cops to win is called k -cop-win. The minimum number of cops needed to capture a robber in a graph is called the cop number of that graph. This graph parameter is well defined with its maximum being the number of vertices of the graph. For a graph G, the cop number is denoted c(G). The cop number was first introduced and defined in by Aigner and Fromme in [1]. Although the game of Cops and Robbers has applications to counterterrorism and missile guidance systems (see [12]), it sometimes is far from realistic. When we vary some conditions of the game, our understanding of all the aspects of it may be dramatically reduced. Therefore, some researchers started considering variants of the game. Some of the variants studied where a game in which the cop can catch the robber from a distance k and another one in which the cop has imperfect information on the location of the robber; see Chapter 8 of [5]. We consider a new variant of the game of Cops and Robbers. In this variant, the robber is able to attack the cop. We say that the robber attacks 2

1.1. Motivation

the cop if he chooses to move to the vertex on which the cop is present and eliminate her from the game. This variation places many restrictions on the cops' strategy. A cop is unable to be at distance one from a robber unless she is also adjacent to another cop. The job of the second cop would be to capture the robber if he chooses to attack the first cop. In this variant, we write cc(G) for the minimum number of cops needed to capture the robber. We refer to cc(G) as the cc-number of G. See Figure 1.1 and Figure 1.2.

C

R

Figure 1.1.1: Robber can attack the cop in next move.

C

C

R

Figure 1.1.2: A second cop protecting a cop adjacent to the robber.

Before we proceed further, in the next section we provide some background and notation in graph theory.

3

1.2. Graphs: Introduction and Notation

1.2

Graphs: Introduction and Notation

In this section we will introduce graph theory and the necessary notation used in this thesis. A graph G has a non-empty vertex set V (G) and an edge set E (G). A graph consisting of V (G) and E (G) is sometimes referred to as G = (V, E ). We say G is of order n if the cardinality of its vertex set V (G) is equal to n. If u and v are two vertices that have an edge between them, then we call that edge uv . We say that vertices u and v are adjacent or joined. Alternatively, we might simply say that u  v meaning that u and v are adjacent. Graphs can be either finite or infinite, and an infinite graph has an infinite number of vertices. We assume for all purposes that all graphs are finite, unless otherwise stated. A loop is an edge from a vertex to itself. Graphs can contain loops or multiple edges. Multiple edges consist of two or more edges connecting a pair of vertices u and v in a graph G. We assume that all graphs do not contain any multiple edges since they make no difference in the play of the game. We define the set N (u) as the set of vertices adjacent to u and the set N [u] as N (u)  {u}. The degree of a vertex u is the cardinality of its neighbour set N (u). We refer to the degree of some vertex u as degG (u), or deg(u) if G is clear from context. A graph in which every vertex has degree k is called k -regular. A path is a sequence of vertices such that each vertex is joined to the next vertex in the sequence; the length of a path is the number of its edges. We write Pn for the path with n vertices. We call a graph

4

1.2. Graphs: Introduction and Notation

connected if there is a path between any two of its vertices. A disconnected graph, on the other hand, is a graph that has two vertices u and v that are not connected by a path (see Figure 1.2.1). All the graphs we study in this thesis are connected, unless otherwise stated. A vertex whose neighbour set is empty is called an isolated vertex.

u v

Figure 1.2.1: A disconnected graph with an isolated vertex u.

A vertex whose neighbour set contains exactly one vertex is called an end -vertex. Finally, a universal vertex is a vertex that is adjacent to every other vertex in the graph. In a graph of order n, the degree of a universal vertex is n - 1. The distance between two vertices u and v in some graph G is the number of edges on the shortest path between those two vertices and is referred to as d(u, v ) (see Figure 1.2.2). If u = v , then d(u, v ) = 0. If either u or v is disconnected, then the distance is . The diameter of a graph G, referred to as diam(G), is the maximum of all distances between vertex pairs in G. In a disconnected graph, the diameter is .

5

1.2. Graphs: Introduction and Notation

u

v

Figure 1.2.2: In this graph, d(u, v ) = 2

We now define certain families of graphs. A cycle, referred to as Cn , is a connected graph of order n in which every vertex has degree equal to 2. A complete graph with n vertices, called a clique and referred to as Kn , is a graph containing all possible edges except loops. A cycle along with one vertex adjacent to all its vertices forms a wheel. A wheel of order n is referred to as Wn . See Figure 1.2.3 for examples of these graphs.

Figure 1.2.3: Clockwise from top left: a path, cycle, clique and wheel of order 5.

In a graph G, a dominating set of vertices S has the property that each vertex not in S is joined to some vertex in S . The domination number, denoted  (G), is the number of vertices of the smallest dominating set S in 6

1.2. Graphs: Introduction and Notation

G. For example, a graph G with a universal vertex u will have  (G) = 1 and S = {u}. Lemma 1.1. In a graph G, we have that c(G)   (G). Proof. Let G be a graph with domination number  (G), and let S be a minimum order dominating set. In the first round, we place one cop on each vertex in S. Since every vertex in the dominating set has a cop on it, then any vertex the robber chooses to start on will be connected to at least one cop. The robber will be captured in the following round. The minimum degree is the degree of the vertex of G that has the least number of edges incident to it. We refer to the minimum degree of a graph G as  (G). A homomorphism f from G to H is a function f : V (G)  V (H ) which preserves edges, that is, if xy  E (G), then f (x)f (y )  E (H ). We will refer to such a homomorphism as f : G  H .
2 1 3
f(1)=f(6)= u
f(3)=x f(2)=v

7

4

6

5

f(5)=f(7)=z

f(4)=y

Figure 1.2.4: A homomorphism f from C7 to C5 .

In Figure 1.2.4, we have a homomorphism. Note that homomorphisms can add edges between the non-adjacent vertices in G. For example, in the 7

1.3. Asymptotic Notation

figure, we have that the vertices 1 and 5 are not joined in C7 but their images are joined. The homomorphism we have in the figure is f : C7  C5 defined by: f (1) = f (6) = u, f (2) = v, f (3) = x, f (4) = y and f (5) = f (7) = z . An embedding from G to H is an injective homomorphism f : G  H with the property that xy  E (G) if and only if f (x)f (y )  E (H ). An isomorphism is a bijective embedding of G to H . Isomorphisms are oneto-one mappings from one graph to another that preserve adjacency and non-adjacency. If G and H are isomorphic, then we denote this by G  = H.

1.3

Asymptotic Notation

Several results that will follow in this thesis are asymptotic so we present some asymptotic notations that will be used. Let f and g be two functions whose domains are a subset of R. We write f = O(g ) if f (x) x g (x)

lim sup

exists and is finite. This is equivalent to saying that for some constants c and N , f (x)  cg (x) for x > N . If f = O(g ) and g = O(f ), then we will say that f = (g ). We also say that f = o(g ) if limx
f ( x) g (x)

= 0. An example of

the use of the big O notation in the context of the game of cops and robbers is Meyniel's conjecture which states that if G is a connected graph of order  n, then its cop number satisfies c(G) = O( n). See [9] and Chapter 3 of [5]

8

1.4. Graph Theory Concepts

for more on Meyniel's conjecture.

1.4

Graph Theory Concepts

We move on in this section to more advanced concepts within graph theory. In particular, we introduce random graphs and graph algorithms. One of the most powerful tools in graph theory is the probabilistic method. The probabilistic method, pioneered by Paul Erd os and AlfrÂ´ ed RÂ´ enyi, is a method used to prove a property for a certain class of combinatorial objects. If every object in a certain class fails to satisfy a certain condition or have a certain property, then the probability of an object picked randomly from this class satisfying that condition or having that property is zero. Hence, if the probability of a randomly chosen object from a certain class having that property is greater than zero, then there must exist at least one object from that class that has that property. Although the probabilistic method uses probabilistic proofs, it can be used to prove results which have no explicit reference to probability in their statements.

1.4.1

Random Graphs

We study in this thesis one of the tools of this probabilistic method, the random graph. In random graphs, the adjacency between two vertices is determined by a probability p  (0, 1). Define a probability space on graphs of a given order n  1 as follows. Fix a vertex set V consisting of n distinct 9

1.4. Graph Theory Concepts

elements, usually taken as [n], and fix p  [0, 1]. Define the space of random graphs of order n with edge probability p, written G(n, p), with sample space
n equalling the set of all 2( 2 ) (labelled) graphs with vertex set V , and

P(G) = p|E (G)| (1 - p)( 2 )-|E (G)|

n

A random graph G with n vertices is referred to as G(n, p), where p is the edge probability (see Fig 1.4.1). In G(n, p), the probability p can be either constant or a function of n such that p = p(n). We only study random graphs with a constant p in this thesis. The cop number and the cc-number for a random graph are random variables over the probability space G(n, p). These two variables will be estimated in terms of n and p. A complete survey of the results on the game of cops and robbers on random graphs can be found in Chapter 6 of [5]. We use some of these results and expand them to the cc-game in Chapter 3.

10

1.4. Graph Theory Concepts

Pajek

Figure 1.4.1: A randomly drawn graph with 20 vertices, where edges were drawn with probability 0.5. The vertices are located on the perimeter of the figure.

1.4.2

Graph Algorithms

An important notion for a graph parameter is determining the complexity of an algorithm used to compute the parameter. Complexity is the measure of the inherent difficulty of a computational problem. The measure of complexity is often described in the amount of time needed to execute an algorithm or the number of steps needed relative to the size of the problem. In this thesis, we describe the complexity of computing or checking the validity of a cop number and a cc-number. We describe this complexity in terms of the number of vertices in the graph in question. All algorithms we consider focus on graph decision problems. In graph decision problems, the input is a 11

1.4. Graph Theory Concepts

graph usually represented in a data structure that can describe the graph's vertices and their adjacencies. The complexity of a computational problem can be in one of several complexity classes, the two most studied of which are polynomial time P or non-deterministic polynomial time NP. Problems in P are those that are solvable in polynomial time, that is, there complexity is O(nm ) for some integer m  0. NP is the set of decision problems such that if the answer is YES, then there is a certificate or proof of this fact that can be checked in polynomial time. An example of a P problem is checking if a connected graph is Eulerian which means that there exists a circuit within this graph spanning each edge exactly once. The vertices of an Eulerian graph must all have an even degree (see Figure 1.3.2). An algorithm would calculate the degrees of a graph. The result will be found in polynomial time. An example of an NP problem is finding if graph contains a cycle that includes all its vertices. Such a cycle is called a Hamiltonian cycle. Without a more efficient algorithm, one can simply exhaustively examine all the permutations of vertices for a cycle spanning all vertices. For n vertices, that is n! permutations which is a huge number of possible solutions even for a relatively small n. Furthermore, not all NP problems are of equal complexity. The problem of finding a Hamiltonian cycle is NP-complete which means that finding an efficient algorithm is very unlikely. So-called NP-hard problems are those which are as hard as any in NP. We will discuss the complexity of computing the cc-number of a graph in Chapter 4.

12

1.5. Overview of Thesis

Figure 1.4.2: All the vertices of an Eulerian graph have even degrees.

1.5

Overview of Thesis

In this thesis, we derive results on the cc-number of a graph. We find an upper and lower bound on cc(G) in terms of c(G). We also compute the cc-numbers on cycles and outerplanar graphs and find the winning strategies on these graphs. We then investigate classifications of graphs by cc-number and found a classification for graphs with cc(G) = 1 and a family of graphs with cc(G) = 2. We also compute upper bounds on the cc-number of a strong product of two graphs, investigate the complexity of computing cc(G), compute the density of cops in infinite graphs, and the order of the cc-number in random graphs. These results and others will be explained in detail in Chapters 2, 3, and 4. In Chapter 5, we summarize the results we found and the problems that remain unsolved.

13

Chapter 2 The cc-Game
2.1 The cc-number

The game of Cops and Robbers is one of many vertex-pursuit games played on graphs. A great amount of literature has been published about this game and some important theorems have been found; see [5] We study in this chapter the new variant we briefly introduced in Chapter 1, called the ccgame. In the cc-game, the only difference from the regular Cops and Robbers game is that a robber is able to "attack" the cop. The rules otherwise are the same. In the first round, the cops choose the vertices on which they can start. The robber then chooses a vertex different than those chosen by the cops in the first round. The game then proceeds with the cops moving according to a strategy that enables them to catch the robber, if such a strategy exists. We first try to relate the cc-number to the cop number in the regular

14

2.1. The cc-number

game. By comparing the two parameters, we can exploit existing theorems on the cop number. Theorem 2.1 gives us an upper and lower bound on the cc-number in terms of the cop number of graph G and its domination number  (G). Theorem 2.1. If G is a graph, then

c(G)  cc(G)  min{2c(G),  (G)}.

Proof. We start by proving that c(G)  cc(G). Let S be a winning strategy of cc(G)-many cops on G. Place cc(G)-many cops on G and move them according to the strategy S . Since cc(G)-many cops are enough to win in the cc-game, it will be enough to capture the robber in the regular Cops and Robbers game (since the robber gains no extra moves by reverting to those rules and the cops' movements are not otherwise restricted). Now we prove that cc(G)  2c(G). Let S be the strategy followed by the c(G)-many cops to capture the robber in the regular game. Place two cops on each vertex where S tells you to place one cop, thus, doubling the number of cops. Follow the strategy S by moving the two partnering cops at once as if they were one cop. Since there are always two cops together on any vertex occupied by the set of cops, the robber can never attack the cops and the strategy S can be followed to catch the robber. Lastly, we prove that cc(G)   (G). Assume there are  (G)-many cops in the cc-game. Start by placing a cop on each vertex belonging to the 15

2.1. The cc-number

dominating set of G called X . The robber, by the rules of the cc-game, cannot attack a cop on his first move and therefore, will occupy any vertex u  X . Since there is a cop on each vertex of the dominating set, at least one cop will be joined to the vertex u. The cop will capture the robber in the following step. We know by Theorem 2.1 that the cc-number is at most twice the cop number (hence, the name of the parameter). However, we conjecture something stronger. For all the graphs that we know, Conjecture 2.2 holds. Conjecture 2.2. For all graphs G,

cc(G)  c(G) + 1.

An important part of studying the game of Cops and Robbers is classifying graphs with a specific cop number. The same is also relevant in the cc-game. We are interested in classifying the graphs that share the same ccnumber. Theorem 2.3 classifies all graphs G that have cc-number cc(G) = 1. Theorem 2.3. For a graph G, cc(G) = 1 if and only if  (G) = 1. Proof. Suppose that for a graph G, we have that cc(G) = 1. If the cop captures the robber in the first round, then the vertex the cop occupies must be adjacent to all other vertices in G. Hence,  (G) = 1. Conversely, if  (G) = 1, then G has a universal vertex. Hence, cc(G) = 1.

16

2.1. The cc-number

R

C

Figure 2.1.1: A lone cop can only catch the robber in the first round.

A large class of graphs that has been studied intensively is cop-win graphs (see [15] and Chapter 2 of [5]). Corollary 2.4 follows directly from Theorems 2.1 and 2.3 and shows that cop-win graphs have a cc-number equal to 2 unless they contain a universal vertex. Corollary 2.4. If c(G) = 1 and  (G) = 1, then cc(G) = 2.

2.1.1

Graph Girth

The girth of a graph is the length of the shortest cycle contained in that graph. For example, a graph of girth at least 4 contains no triangles. Aigner and Fromme proved in [1] Theorem 2.5 that places a lower bound on the cop number of a graph G if that graph has girth greater than four. Theorem 2.5 ([1]). If G has a girth at least 5, then

c(G)   (G),

where  (G) is the minimum degree in G. Theorem 2.5, with some modifications, can be applied to the cc-game. 17

2.1. The cc-number

Theorem 2.6 finds a lower bound for the cc-number in graphs whose girth is greater than or equal to 5. Theorem 2.6. If G has a girth at least 5 and c(G) =  (G), then

cc(G)   (G) + 1

where  (G) is the minimum degree in G. Proof. This proof is analogous to the proof given by Aigner and Fromme in Theorem 2.5. We start with  (G) cops and prove that the robber survives indefinitely. We must first show that the robber survives in the first round. For the robber to be caught in the first round, cc(G) =  (G), which is an upper bound for cc(G) in any graph. Since we have  (G) cops, this means that  (G) =  (G). Theorem 1 implies that c(G)  cc(G)   (G) and from [1] we know that c(G)   (G). Putting all these inequalities together we obtain that :  (G)  c(G)  cc(G)   (G), which implies that all these values are equal. Hence, for the robber to be caught in the first round, c(G) must be equal to  (G). This violates the hypothesis of the theorem. Let C be the set of vertices occupied by the cops. The set C has at most  (G) cops. The set N (R) is the set of vertices adjacent to the robber. Since there are no 3-cycles, none of the vertices of N (R) are joined and 18

2.2. Cycles

|N (R)|   (G). None of the vertices of C can be joined to two vertices of N (R) since that would result in a four cycle, hence, at most  (G) cops on  (G) vertices of C will be joined to  (G) vertices belonging to N (R). Now if |N (R)| >  (G), then the robber can move to a vertex not adjacent to the  (G) cops. If |N (R)| =  (G), then the robber will pass indefinitely with none of the cops being able to move to any of the vertices of N (R) since she will be attacked by the robber. Since none of the vertices of N (R) are adjacent, any two cops moving to any two vertices of N (R) will not catch the robber. We therefore need at least one extra cop to capture the robber, and so, cc(G)   (G) + 1.

2.2

Cycles

Cycles are special graphs in which the degree of each vertex is equal to two. The cop number, in any cycle Cn where n  4, is 2. In Theorem 2.7, we prove that the cc-number in cycles can be either 2 or 3 depending on the number of vertices.    2 if 4  n  6,   3 if n  7. Proof. Since each vertex in a cycle is joined to two vertices, a single vertex will dominate three vertices (two neighbours and itself). So if in a cycle Cn we have 4  n  6, then Cn has domination number  (Cn ) = 2 (see Figure 2.2.1). From Theorem 2.1 we obtain that 1  cc(G)  2 and since  (Cn ) = 2, 19

Theorem 2.7. A cycle Cn with n vertices has cc(Cn ) =

2.2. Cycles

then by Theorem 2.3 we can know that cc(Cn ) > 1. Therefore, cc(Cn ) = 2 when 4  n  6.

u

v

Figure 2.2.1: A cycle C6 with dominating set S = {u, v } and  (G) = 2.

When n  7, since c(Cn ) = 2, by Theorem 2.1 cc(G) must be between 2 and 4. Place two cops on any two vertices. The first option would be that both cops move, in tandem or on the same vertex, in the same direction towards the robber (counter-clockwise or clockwise). Assuming without loss of generality that the two cops are moving clockwise towards the robber, then whenever the two cops are at distance 1 from the robber, the robber moves clockwise increasing the distance to 2. This happens indefinitely and the robber wins. The second option would be moving one cop clockwise and the second cop counter-clockwise. After a finite number of rounds, the robber will be stuck with his two neighbours adjacent to cops (N (r) = {u, v }, see Figure 2.2.2). The robber will pass whenever it is his turn to move and either cop cannot move to u or v since they will be at distance 1 from the robber and can therefore be attacked. The robber passes indefinitely and wins.

20

2.2. Cycles
R

u

v

C

C

Figure 2.2.2: Robber passes indefinitely.

Now assume cc(Cn ) = 3. Move one cop clockwise and two cops, on the same vertex, counter-clockwise. After some round t > 0, the robber will be at distance 2 from one cop on one side and at distance 2 from two cops on the other side (see Figure 2.2.3). The robber will have to pass when it is his turn since moving to an adjacent vertex means being at distance 1 from the cop and thus, being caught in the following move. The two cops that are moving together then move to be at distance 1 from the robber forcing him to be caught by the lone cop if he moves and by them if he passes.
R u v

C C C

Figure 2.2.3: 2 cops move counter-clockwise.

21

2.3. Retracts

2.3

Retracts

Retracts play a major role in some theorems and their proofs in the Cops and Robbers game. Let H be a subgraph of graph G attained by deleting a vertex from G. We say H is a retract of G if there is a homomorphism f from G onto H so that f (x) = x for every vertex x in V (H ). The mapping f , therefore, is the identity on H , and is called a retraction. For such a mapping to be a retraction, distances between any two vertices do not increase in H compared to those in G. In Figure 2.3.1, N [u]  N [v ] and the mapping    v

if x = u,

f ( x) =

  x otherwise. is a retraction. In this case, we can say u  v .

v

u

Figure 2.3.1: A retraction u  v

We will mention two theorems related to retracts and the cop number in the game of Cops and Robbers. Both theorems were proven by Berarducci

22

2.3. Retracts

and Intrigila in [2]. Theorem 2.8 proves that the cop number never increases in a retract. Theorem 2.8. If H is a retract of G, then c(H )  c(G). Theorem 2.9 finds an upper bound on the cop number of graphs using retracts. Theorem 2.9. If H is a retract of G, then

c(G)  max{c(H ), c(G - H ) + 1}.

We were able in Theorem 2.10, through an analogous approach to the one used by Berarducci and Intriglia, to find an upper bound on the cc-number of graphs using retracts. Theorem 2.10. If H is a retract of G, then

cc(G)  max{cc(H ), cc(G - H ) + 2}.

Proof. Let m = max{cc((H ), cc(G - H ) + 2}, so m  cc(H ). Start with m cops in the subgraph H playing the winning strategy there. If the robber remains in H , then he will be caught eventually. If the robber goes to G - H , then we leave two cops in H sending at least cc(G - H ) cops to G - H since m  cc(G - H ) + 2. The two cops remaining in H will occupy the robber's retraction in H . If the robber decides to go to H , then the retraction is equal 23

2.4. Isometric Paths

to the actual position (that is, f (x) = x) of the robber and he is caught. If he stays in G - H , then he will be caught by the cops there.

2.4

Isometric Paths

As is the case for retracts, isometric paths play an important role in several key theorems in the game of Cops and Robbers, such as the the cop number in planar graphs (See Chapter 4 in [5]). We call a path P in a graph G isometric if the shortest distance between any two vertices is equal in P and G; that is, for all vertices u and v in P , we have that dP (u, v ) = dG (u, v ). An example of an isometric path is shown in Figure 2.4.1.

Figure 2.4.1: The bolded path is an isometric path in this graph.

Another concept that is related to retracts is k -guardability . For a fixed integer k  1, an induced subgraph H of G is k -guardable if, after finitely many moves, k cops can move only in the vertices of H in such a way that if the robber moves into H at round t, then he will be captured at round t + 1. For example, a clique in a graph is 1-guardable. 24

2.4. Isometric Paths

The concepts of isometric paths and k -guardability were used by Aigner and Fromme in [1] to prove that an isometric path is 1-guardable. Theorem 2.11 ([1]). An isometric path is 1-guardable. By providing an analogous proof to the one used by Aigner and Fromme, we prove in Theorem 2.12 that an isometric path is 2-guardable in the ccgame. Theorem 2.12. An isometric path is 2-guardable, but need not be 1-guardable. Proof. Let P = {v0 , v1 , ..., vk } be an isometric path in a graph G, and let Di = {x  V (G) : d(x, v0 ) = i}. Since P is an isometric path, it follows that vi  Di for i = 0, 1, ..., k . The cops, restricted to P , play as if the robber is on vj when the robber is on some vertex of Dj , j = 0, 1, ..., k - 1, and on vk when j  Dk . We will call this the robber's image. If the robber is in Dj , then he can only move to vertices of Dj -1 , Dj and Dj +1 , so his image can only move from vj to vj -1 , or vj +1 , or remain at vj . Start both cops on v0 . As far as they and the image are concerned, they are playing the game on a path, and in this game the cops win. Note that the cops will always move together occupying the same vertex at any round. After the image has been caught, the actual robber can still move in G, but the robber's image moves to an adjacent vertex on P or is stationary. The cops now move to recapture the image. Suppose that the robber tries to enter P after his image has been caught. Before his move onto P , he is in Dj for some j . If j < k , then his image is on vj and so are the cops. The robber can only move to one of 25

2.4. Isometric Paths

vj -1 , vj , or vj +1 . Whichever vertex he chooses, the cops will capture him on the next move. If j  k , then the image is on vk and so are the cops. The robber's only possible moves are to vk or vk-1 and the cops captures him on the next move. The same proof may fail in the cc-game if only one cop is used. A robber can leave and enter an isometric path an infinite number of times in some cases because the cop cannot be at distance 1 from him. This restricts the movement of the cop. Consider, for example, Figure 2.4.2
u

V0

V1

V2

V3

Figure 2.4.2: The cop cannot move to V2 on the isometric path (bolded).

The cop starts on v0 and the robber starts on u. The cop then moves, according to the strategy we used in the proof so far, to v1 while the robber remains on u. Now the cop is supposed to move to v2 . If she does, however, she will be at distance 1 from the robber and therefore can be attacked. The robber can move freely now between u and v3 (into and out of the isometric path) and the cop can't capture him or stop him from entering.

26

2.5. Corners and Dismantlable Graphs

2.5

Corners and Dismantlable Graphs

The cornerstone of characterizing cop-win graphs in the game of Cops and Robbers is the notion of a corner. Consider a graph G with vertices u  V (G) and v  V (G). We say u is a corner in G if we have N [u]  N [v ]. The importance of corners comes from the fact that if the robber occupies a corner, then there exists a vertex which can be occupied by the cop that is adjacent to the robber and all its neighbours. The cop can catch the robber in the following move. The vertex v is said to cover or dominate u. A concept that follows from corners is dismantlable graphs. A graph is dismantlable if some sequence of deleting corners results in the graph K1 . For example, each tree is dismantlable: delete end-vertices repeatedly until a single vertex remains. An example of a graph that is not dismantlable is a chordless cycle. Theorem 2.13 on dismantlable graphs characterizes all cop-win graphs. Theorem 2.13. A graph is cop-win if and only if it is dismantlable. We studied corners to see if they have any significance in the cc-game. Corollary 2.14 follows from Theorems 2.3 and 2.13. Theorem 2.15 studies the effect of adding corners to dismantlable graphs in the cc-game. Corollary 2.14. If G is a dismantlable graph and  (G) > 1, then cc(G) = 2. Theorem 2.15. Let G be a cop-win graph with  (G) > 1. If a corner u is added such that N [u]  N [v ], where v is some vertex in G, then the resulting graph G satisfies cc(G ) = 2. 27

2.5. Corners and Dismantlable Graphs

Proof. Since  (G) > 1 and c(G) = 1 , then cc(G) = 2 as shown in Corollary 2.3. Add a corner u such that N [u]  N [v ] resulting in a new graph G . Note that all the neighbours of u are adjacent to a vertex v in G. The two cops will play the same strategy S that they played in G. If the robber stays in G, then he will be captured. If the robber goes to the newly added vertex u, the cops will assume that the robber is on v and follow the strategy S accordingly. The strategy on G will have both cops capture the robber on v (or his image in this case), or otherwise, the robber would attack the lone cop. Once both cops are on v , and since N [u]  N [v ], the robber cannot escape and will be captured in the following step. (See Figure 2.5.1.)

u R

C

v

G
C

Figure 2.5.1: The robber will be caught in the following move.

Theorem 2.15 reinforces our finding in Theorem 2.1. Adding a corner to a cop-win graph will result in G being cop-win as well which means that cc(G ) equals one or two. Theorem 2.3 shows that it cannot be one unless  (G) = 1.

28

2.6. Joined Graphs

2.6

Joined Graphs

Define a graph G as the resultant graph of connecting two graphs G and G at one vertex. Let v1  V (G) and v2  V (G ) be the two vertices that will superimpose to create a new vertex u. We construct the joined graph by adding a new vertex u that we then join to every neighbour of v1 and v2 . That is, N (u) = N (v1 )  N (v2 ). Vertices v1 and v2 are then deleted along with all the edges previously incident to them. An example is shown in Figure 2.6.1.

u V1 V2 V1 V2

G

G'

u

G''
Figure 2.6.1: Constructing a joined graph.

For joined graphs, Theorem 2.16 shows how the cop number and ccnumber relate between the initial graphs and the joined graph.

29

2.6. Joined Graphs

Theorem 2.16. If c(G) = cc(G) > 1, c(G) > c(G ) and cc(G) > cc(G ), then c(G ) = cc(G ) = c(G) = cc(G). Proof. We need to prove that c(G ) = c(G) and cc(G ) = cc(G). We start with the regular game, where we place c(G) cops in G according to a winning strategy there. The vertex u is the vertex that connects the two graphs G and G . Let c(G)-many cops use their winning strategy to catch the robber in G. If the robber stays in G, then he will eventually be caught. The robber must move to G to avoid capture. Since c(G) > c(G ), c(G )-many cops will follow the robber into G leaving at least one cop on u. The robber will be caught in G . If he attempts to go back to G, then the cops who were left on u will catch him. An analogous approach is used to prove that cc(G ) = cc(G) in the ccgame. We start in G and capture the robber if he stays in G. If he chooses to go to G , then we move all the cops to u first to force the robber to leave any vertex adjacent to u. We then leave one cop on u and the rest will go into G . The robber will ultimately be caught by the cc(G) - 1 cops (as cc(G) - 1  cc(G )), or by the lone cop if he attempts to go back to G through one of the vertices adjacent to u.

30

Chapter 3 Planar and Product Graphs
3.1 Introduction

In Chapter 2, we introduced the cc-game and presented some of the results and proofs we have found. In this chapter, we continue exploring this game in more complex families of graphs such as planar graphs and product graphs. We also look at a classification of a family of graphs with cc-number equal to 2.

3.2

Planar and Outerplanar Graphs

Planar graphs are one of the most studied graphs in graph theory. A graph G is called planar if it can be embedded in a plane without two of its edges crossing. A generalization of planar graphs are graphs which can be drawn

31

3.2. Planar and Outerplanar Graphs

on a surface of a given genus. Planar graphs, therefore, have graph genus 0, since the plane is a surface of genus 0. For more on genus, see Chapter 4 of [5]. Cycles, K3 and K4 are planar graphs are planar whereas K5 and K3,3 are not planar. Figure 3.2.1 shows some planar graphs.

Figure 3.2.1: Clockwise from top left: K3 , K4 , grids, and cycles are planar graphs.

Aigner and Fromme studied the Cops and Robbers game on planar graphs and found that planar graphs require at most three cops to catch the robber; see [1]. An alternative proof of Theorem 3.1 was given in [5]. Theorem 3.1 ([1]). If G is a planar graph, then c(G)  3.

3.2.1

Outerplanar Graphs

Before we set out to study the cc-game on planar graphs, we study a simpler but related class of graphs. Outerplanar graphs are graphs that satisfy the following three conditions; see [5].

32

3.2. Planar and Outerplanar Graphs

1. Every vertex lies on a circle. 2. Every edge of G either joins two consecutive vertices around the circle or is a chord across the circle. 3. If two chords intersect, then they do so at a vertex. Figure 3.2.2 shows an outerplanar graph.

Figure 3.2.2: An outerplanar graph.

Maximal outerplanar graphs are outerplanar graphs that cannot have any additional edges added to them while preserving outerplanarity. Every maximal outerplanar graph with n vertices has exactly 2n - 3 edges. Figure 3.2.3 shows a maximal outerplanar graph.

33

3.2. Planar and Outerplanar Graphs

Figure 3.2.3: A maximal outerplanar graph.

Outerplanar graphs can be cop-win graphs and an example of that is a maximal outerplanar graph. A cycle, on the other hand, with n  7 is an outerplanar graph with cc(G) = 3 and c(G) = 2. Clarke proved Theorem 3.2 in her doctoral thesis. Theorem 3.2 ([6]). If G is outerplanar, then c(G)  2. Before we proceed, we define cut vertices. A vertex is called a cut vertex if removing it results in increasing the number of connected components in the graph. The proof of the following theorem relies on arguments analogous to those found in [5,6]. Note that Theorem 3.3 verifies Conjecture 2.2 in the case of outerplanar graphs. Theorem 3.3. If G is outerplanar, then cc(G)  3. Proof. We need to show that in any outerplanar graph G in the cc-game, three cops will suffice to win. Assume first that G has no cut vertices. Order 34

3.2. Planar and Outerplanar Graphs

the verticies around the circle as {v0 , v1 , . . . , vn }. Suppose that for a given i that vi is not adjacent to vi+1 . We can renumber the subscripts so that i = 0. Since G is connected and the degree of v0 is at least two, let vj be the vertex of least index which is adjacent to v0 . The edge v0 vj prevents any vertex in {v1 , v2 , ..., vj -1 } from being adjacent to any vertex of {vj +1 , vj +2 , ..., vn-1 } since this would create a chord, and no vertex of {v1 , v2 , ..., vj -1 } is adjacent to v0 by assumption. Therefore, vj is a cut vertex, which is a contradiction. Hence, we may assume that for all i, vi is adjacent to both vi-1 and vi+1 , with subscripts taken modulo n. If the embedding contains no chords, then it is a cycle and three cops suffice (See Theorem 2.6) to capture the robber. Let a0 , a1 , . . . ,ak be the vertices of degree at least 3 in order around the circle. Note that vertices on the cycle between ai and ai+1 are of degree 2 and so the path between ai and ai+1 is well-defined. Place the cops C1 , C2 , and C3 on the vertex v0 . If v0 has degree 2, then it is on a path between a0 and ak (renumbering the ai if necessary); if it has degree 3 or more, then renumber so that a0 = v0 . In either case, we can move C1 , C2 , and C3 to a0 and ak so that the robber is not on the path between these two vertices. We move two cops to a0 or to ak depending which one has a shorter distance to the robber. We now assume more generally that C1 and C2 are on ai and C3 is on aj for some i < j , respectively, and that the robber is not on and cannot move to any vertex in {vp , vp+1 , ..., v0 , ..., vq }, where vp = aj and vq = ai . That 35

3.2. Planar and Outerplanar Graphs

is, every path from the robber to a vertex in {vp , vp+1 , ..., v0 , ..., vq } passes through ai or aj . Such an area is the cop territory. The idea of the proof now is to show that the cops can increase the cop territory, so that it is eventually all of G and the cops win. We need not worry about C3 being a lone cop on aj yet. One cop is enough to stop the robber from moving to be at distance 1 with the cop in the cc-game and the robber will not be able to go to {vp , vp+1 , ..., v0 , ..., vq }. See Figure 3.2.4.
C3

C2 C1 R

u

Figure 3.2.4: C1 and C2 move to u to expand the cop territory.

Suppose ai has a chord to a vertex in the robber territory. Let ar be a vertex adjacent to ai which is closest to aj . If the robber is on the arc of the circle from ai to ar , then he cannot move off that arc if C1 on ai does not move. Therefore, C2 moves to aj and then along with C3 can be moved to ar and the cop territory has increased. If the robber is between aj and ar , then 36

3.2. Planar and Outerplanar Graphs

C1 and C2 move from ai to ar again increasing the cop territory. A similar analysis holds for aj . Hence, the only case to consider is when neither ai nor aj have an interior edge to the robber territory. In this case, the only paths to the cop territory from the robber are the ones along the cycle incident to ai and aj . That is, every path from the robber to the cop territory passes through ai+1 or aj . Hence, moving C1 and C2 along the path from ai to ai+1 does not allow the robber to move into the cop territory, and the cop territory has increased. We will refer to this as the no-cut-vertex strategy. The key difference between this strategy and the one in the regular Cops and Robbers game is that whenever a cop has to move into the robber territory, another cop joins her. The third cop stays on guard on the other vertex (that is, passes on ai or aj ). Now suppose that G has at least one cut vertex. Let

B (G) = {G1 , G2 , ..., Gm }

be the set of maximal induced subgraphs of G such that each Gi itself has no cut vertices. Note that each Gi will contain a vertex which is a cut vertex of G, and each Gi has at least two vertices. We can retract G onto Gi , for any i, by the mapping described as follows. Let x  V (Gi ) and x be a cut vertex of G. All vertices of G that are disconnected from Gi by the deletion of x are mapped to x. Vertices of Gi are mapped to themselves. Let Gi denote this retract. Since Gi is a

37

3.2. Planar and Outerplanar Graphs

subgraph of an outerplanar graph, Gi is also outerplanar. Fix an embedding for each Gi . Choose some Gi and place the three cops on two vertices in Gi as in the case with no cut vertices. We now use the following strategy on Gi . Employing the strategy of the case with no cut vertices, the cops will capture the robbers image on Gi . Since |V (Gi )|  2, at least one more vertex and one more element of B (G) is added to the cop territory. If the robber is actually on Gi , then he has been caught. If not, then the cops have captured the robbers shadow on a vertex x whose deletion separates Gi from the Gk where the robber presently resides. This cut vertex also lies in some Gj that either contains the robber (that is, j = k ) or contains a cut vertex y = x whose deletion separates Gj from Gk (and j is unique). Fix an outerplanar embedding of Gj . The cops now execute the no-cut-vertex strategy on Gj . Hence, the cops eliminate the subgraphs in B (G), and eventually they capture the robber (rather than just his image). At all times, when capturing the robber or his image, two cops will be moving together to expand the cops territory and one cop will pass. We were unable to find a similar result for the cc-number on planar graphs. In particular, Conjecture 2.2 remains open in the case of general planar graphs. Theorem 3.1 in its proof relies heavily on the fact that isometric paths are 1-guardable in the Cops and Robbers game; a fact that does not apply to the cc-game. We suspect that the following conjecture is true but no solution has been found yet.

38

3.3. Graph Products

Conjecture 3.4. If G is a planar graph, then cc(G)  4. One of the planar graphs that such a conjecture remains open for is the planar projection of a certain geometric structure called the buckminsterfullerene. The graph corresponding to that structure is called the truncated icosahedral graph. Figure 3.2.5 shows both the geometric structure and its planar graph representation which has 60 vertices.

Figure 3.2.5: A buckminsterfullerene (left) and truncated icosahedral graph (right).

3.3

Graph Products

Graph Products are operations that take two graphs G1 and G2 and produce a graph H with the following properties [11]: 1. The vertex set V (H ) = V (G1 ) Ã V (G2 ) is the Cartesian product of the two sets V (G1 ) and V (G2 ).

39

3.3. Graph Products

2. Two vertices in V (H ) are adjacent if their components satisfy certain conditions in G1 and G2 . These conditions vary between different types of products. Graph products come in many types, each with different rules on adjacency between two vertices in the product graph. Some of the most studied product graphs are the categorical product, the strong product, the Cartesian product and the lexicographic product. In the Cartesian product, (u, v ) and (x, y ) are adjacent if u = x and vy  E (H ) or ux  E (G) and v = y . The categorical product is product in which a pair of vertices (u, v ) and (x, y ) are adjacent in the product graph if ux  E (G) and vy  E (H ). The lexicographic product is a product where two vertices (u, v ) and (x, y ) are adjacent if ux  E (G), or u = x and vy  E (H ). The game of Cops and Robbers has been studied, with varying degrees of success, on these products. The results can be found in Chapter 4 of [5]. We tried in our research to implement similar approaches in the cc-game and found some interesting results in the cc-game on strong products.

3.3.1

Strong Product

The strong product G H of two graphs G and H is defined on the Cartesian product of the vertex sets of G and H , with two distinct vertices (u, v ) and (x, y ) being adjacent in G H if u = x and vy  E (H ), or ux  E (G) and

v = y , or ux  E (G) and vy  E (H ).

40

3.3. Graph Products

This means that two vertices have to either be equal or adjacent in both factors of the product [11]. Figure 3.3.1 shows two graphs G and H with their strong product G
a

H.
b 1 2 3

G
(a,1) (a,2)

H
(a,3)

(b,1)

(b,2)

(b,3)

G H

Figure 3.3.1: Strong product of G and H.

The first theorem we find is that strong product of two graphs with ccnumber equal to 1 also has cc-number equal to 1. Theorem 3.5. If cc(G) = 1 and cc(H ) = 1, then cc(G H ) = 1.

Proof. Consider two graphs G and H with cc(G) = 1 and cc(H ) = 1. We know from Theorem 2.2 that both graphs must contain a universal vertex. Let u and v be the universal vertices in graphs G and H respectively. Consider the vertex (u, v ) in the graph G every vertex in G H . The vertex (u, v ) is joined to

H that has a neighbour of u in G or a neighbour of v

in H . The vertex (u, v ) is also adjacent to every vertex containing either u or v and neighbouring the other vertex of that pair (for example, vertices 41

3.3. Graph Products

(u1 , v ) and (u, v1 ) are connected to (u, v )). Hence, (u, v ) is a universal vertex in G H , and so cc(G H) = 1

If we have two graphs G and H , and v  H , then we define G.v as the induced subgraph in G H with vertices {(u1 , v ), . . . , (un , v )}, where

V (G) = {u1 , . . . , un }. Since v is common as the second component of all those vertices in G.v , then G.v is an isomorphic copy of G. Theorem 3.5 uses this concept to find the cc-number on strong products of any graph with a graph containing a universal vertex. Theorem 3.6. If cc(G) = k  2 and cc(H ) = 1, then cc(G H ) = k.

Proof. We start by placing k cops on some vertex (u1 , v ), where v is the universal vertex in H . Since we have k cops and cc(G) = k , we play the strategy of the k cops on G.v . This can be done on G H because of the

properties of the strong product. For example, if the strategy on G tells a cop to go from u1 to u2 and these two vertices are adjacent, the cop on G H can move from (u1 , v ) to (u2 , v ). The projection of the robber on G.v will be caught. Once that happens, if the robber is on G.v , then he has been caught and not his image. If he is on some vertex G.v1 , then he must be adjacent to the cop who caught his image since v is connected to v1 . The robber is caught in the following step. Theorem 3.6 finds an upper bound on the cc-number of the strong product graph of any two graphs in terms of their cc-numbers.

42

3.3. Graph Products

Theorem 3.7. If cc(G)  2 and cc(H )  2, then

cc(G

H )  cc(G) + cc(H ) - 1.

Proof. We start with cc(H ) cops on a vertex (u, v ), where u  G, v  H and u is one of the starting positions for one of the cops in G according to the winning strategy in that graph. We then place cc(G) - 1 cops on G.v in the remaining starting positions for that strategy. We play on G.v as if we are playing in G while assuming that the cc(H ) cops are one cop. Once the cops capture the robber, move cc(G) cops to where the robber's image was caught and shadow his image on G.v . Since cc(G)  2, then we will be left with at least cc(H ) - 1 cops. Now we execute the strategy for H using cc(G) and cc(H ) - 1 cops. The cc(G) cops move as one cop on the projection on H and shadow the image of the robber on G at the same time. This is possible because we are playing on the strong product where cc(G) can move on G, H , or at both at the same time (see Figure 3.3.2). When the robber's image is caught on H while his image on G is shadowed by cc(G), the robber is caught and the cops win.

43

3.4. Nearly Irreducible Vertices
a b 1 2 3

G
(a,1) (a,2)

H
(a,3)

(b,1)

(b,2)

(b,3)

G H

Figure 3.3.2: The cop (red) can in one move shadow the movement on G, H or both.

It remains an open problem to find bounds or values for the cc-number on other types of products such as the Cartesian product, categorical product, and lexicographic product.

3.4

Nearly Irreducible Vertices

In this section, we attempt to classify a family of graphs whose cc-number is less than or equal to two. We have already classified graphs with cc-number equal to 1 in Chapter 2. An important concept in this classification is a nearly irreducible vertex. In a graph G, a vertex v  G is nearly irreducible if there exists another vertex u  G such that N (v )  N (u). That is, all the vertices adjacent to v are also adjacent to some other vertex u. A nearly irreducible ordering in a graph G is an ordering (v1 , . . . , vn ) of the vertices of a graph G such that for each i < n, vi is a nearly irreducible

44

3.4. Nearly Irreducible Vertices

vertex in Gi = G -{v1 , . . . , vi-1 }. Figure 3.4.1 shows a graph with an ordering of nearly irreducible vertices v1 to v9 .
v9

v6

v7

v8

v5 v3 v4

v2

v1

Figure 3.4.1: An ordering of nearly irreducible vertices v1 to v9 .

Theorem 3.8 proves that a certain class of graphs has cc-number at most 2. Before we proceed to its proof, we define a kite graph and a triangle-free graph. A kite is a graph in which a vertex v is nearly irreducible with respect to a vertex u and some vertex z exits that is adjacent to u but not to v (See Figure 3.4.2). This means if v is a nearly irreducible vertex in a kite-free graph, then N (v ) = N (u). A graph is triangle-free if it does not contain K3 as a subgraph.

45

3.4. Nearly Irreducible Vertices
v

u

z

Figure 3.4.2: A kite graph.

Theorem 3.8. If G is a triangle-free and kite-free graph, then cc(G)  2 if and only if there exists an ordering of nearly irreducible vertices. Proof. We start by proving the reverse direction and we do so by induction. For n = |V (G)|, we have that G = K1 and cc(G) = 1 < 2 and the result holds. Now we assume that for |V (G)| = n, the result holds and cc(G)  2. For the inductive step, suppose that G is kite-free and triangle-free with |V (G)| > 1, and admits a nearly irreducible ordering. We show that cc(G)  2. Let v be the last vertex in a nearly irreducible ordering of G. Hence, there is a vertex u such that N (u)  N (v ). As G is kite-free, we must have that N (u) = N (v ). The graph G - v inherits the nearly irreducible ordering from G. Therefore, G - v has cc-number at most 2 by inductive hypothesis. Let S be the winning strategy for the two cops in G. We fix the following retract,

46

3.4. Nearly Irreducible Vertices

f (x) =

   u if x = v,   x otherwise.

Now we will play a similar strategy S in G = G - v . If the robber goes to the newly added vertex v , then the robber's image f (R) will be on the vertex u as per the retract we defined. Since cc(G)  2, then the robber will be caught by the cops if he was to remain in G. Using S , the robber moves to v and the cops move to u. Since there are no triangles, then v is not adjacent to u and one cop cannot be attacked by the robber directly from v . The cops will catch the robber's image on u. The robber cannot leave v and N (v ) without passing through u and therefore remains there. Since N (v )  N (u), the robber will remain on v to avoid being caught. One cop, say C1 , will move to one of the common neighbours of u and v while the other cop, say C2 , will stay on u. The robber can pass and will be caught by C1 in the following step or he could move to one of the vertices adjacent to both u and v and be caught by C2 in the following step. Therefore, cc(G )  2, and the reverse direction follows by induction. We will prove the forward direction using induction. For the base step, consider a graph G with cc(G)  2. We consider the last move by the robber after which he is supposed to be caught according to the winning strategy of the cops. Suppose that the cops apply their winning strategy, and consider the second-to-last move of the cops before the robber is captured. We must have that some cop, say C1 , on a vertex that is joined to the robber (as the 47

3.4. Nearly Irreducible Vertices

robber is captured in the next round). As there are no triangles, C1 is not on a vertex that is adjacent to any other neighbours of R. To avoid the robber either attacking C1 or escaping to some neighbour, the remaining cop C2 must be on a vertex that is joined to the vertex C1 is on (or possibly C1 and C2 are on the same vertex) and to each neighbour of R. Hence, the position of the robber is a nearly irreducible vertex. Now since cc(G)  2 and we already proved that it has at least one nearly irreducible vertex, delete a fixed nearly irreducible vertex which we call v in G with N (u) = N (v ) for some u. Note that here we use that G is kite-free, so we have the equality of the two neighbour sets, rather than just N (u)  N (v ). All the vertices of G - v remain unchanged except for the neighbours of v . We play the same strategy on G - v as the one we would have played on G. If R was to go to v , then we play in G - v as if he is on u. This means that the robber will gain no extra moves by deleting G - v . Since the winning strategy in G allows the cops to catch the robber on v , the same strategy can be used to catch the robber on u or one of the neighbours of u and v . Therefore, cc(G - v )  2. We may now use induction on |V (G)| to obtain a nearly irreducible ordering for G. Hence, if cc(G)  2, then there is an ordering of nearly irreducible vertices.

48

Chapter 4 Miscellaneous Results on the cc-Game
4.1 Introduction

In this chapter, we will be revisiting three concepts that were mentioned in Chapter 1. The concepts of complexity, random graphs, and infinite graphs will be explained in further detail and their relevance to the cc-game will be explored. We will mention some of the results on the three topics in regards to the game of Cops and Robbers as well as the results we found in the cc-game. These results are accompanied by proofs and explanatory figures.

49

4.2. Complexity

4.2

Complexity

We introduced the computational complexity of algorithms in Chapter 1, and we will be exploring this subject further in this chapter. For our applications(although this will not be used explicitly), graphs are represented as data structures such as adjacency lists or adjacency matrices. The two major complexity classes for algorithms used in graph decision problems are P and NP. P is the class of problems with polynomial time complexity. NP is the class of problems decided by non-deterministic polynomial algorithms. The relation between P and NP is not entirely clear. One of the deepest conjectures in mathematics is if the classes P and NP are equal. It is clear that complexity class P  NP but someone has yet to prove that there is a problem in NP that is not in P. Not all problems in NP are of equal complexity. We call a problem NPhard if a polynomial-time algorithm for it, if found, would mean that there exists a polynomial-time algorithm for every problem in NP. In other words, finding a polynomial-time algorithm for an NP-hard problem would imply that P=NP. An NP-complete problem is a problem that belongs to both classes, NP and NP-hard. This, again, means that if a polynomial-time algorithm is to be found for a problem that is NP-complete, then we would have proved that P=NP. Note that there exist problems which are NP-hard and not in NP (such as the halting problem). Figure 4.2.1 shows the complexity classes

50

4.2. Complexity

and the conjectured relations between them. Further readings and references on these classes and the research on them can be found in [13] and [17].

NP-hard NP-complete

P

NP

Figure 4.2.1: Four complexity classes, assuming P=NP.

4.2.1

Cops, Robbers, and the cc-Game

The work that has been done on algorithms and their complexities in the game of Cops and Robbers is fairly limited. We will mention the problems that have been studied and some of the results that have been achieved. More on this topic can be found in Chapter 5 of [5], and in [8]. Two of the problems that have been studied are the following. k -COP NUMBER: Given a positive integer k , for the input (G, k ) is c(G)  k ? k -FIXED COP NUMBER: Given a fixed positive integer k , for the input

51

4.2. Complexity

G is c(G)  k ? The difference between the two is that in the latter the cop number k is a fixed positive integer that does not change based on the input G. In the first problem, k can be thought of as a function of n, the number of vertices  of G. For example, an instance of this is determining whether c(G)  n. We will not give the proofs of the following two theorems about the mentioned problems but only use their results in the cc-game. Theorem 4.1 shows that the problem with a fixed cop number can be solved with a polynomialtime algorithm. It first appeared in [2] and was later reproved in [10]. Theorem 4.1 ([2],[10]). The problem k -FIXED COP NUMBER is in P. Theorem 4.2 shows that the problem with cop number k that is a function of the number of vertices n of a graph G is an NP-hard problem. Theorem 4.2 ([8]). The problem k -COP NUMBER is in NP-hard. We consider analogous results in the cc-game. The problem we were working on can be defined as follows. k -CC NUMBER: Given a positive integer k , for the input (G, k ) is cc(G)  k? This means that k can be a function of n in G. Theorem 4.3 shows that the problem k -CC NUMBER is NP-hard. We first define approximation ratios and approximation functions. Approximation algorithms calculate solutions that are close to the optimal solutions and are used when an optimal solution cannot be found. An approx52

4.3. Random Graphs

imation ratio f (n) for an input n of an algorithm is a multiplicative factor which is a ratio of the cost of a solution C to the cost of the optimal solution C . A f (n)-approximation -algorithm is an algorithm that computes a solution within an approximation ratio f (n) [16]. Theorem 4.3. Computing cc(G) is NP-hard. Proof. It was proved in [8] that there is a constant d > 0 such that there is no polynomial time algorithm to approximate c(G) within a multiplicative factor f (n) = d log n, unless P = NP. By Theorem 2.1, we know that c(G)  cc(G)  2c(G). Thus, by Theorems 2.1 and 4.2, we have that cc(G) will fall within the multiplicative logarithmic factor of c(G) where computing it is NP-hard. Further discussion of the algorithmic aspects of the cc-game is beyond the scope of this thesis. However, a number of open problems remain to be solved. The most important of those problems is whether the computing the cop number, or the cc-number of a graph G is in NP.

4.3

Random Graphs

In Chapter 1, we defined random graphs and gave some background on them. We continue our work on these graphs in this section and highlight some of the results in the game of Cops and Robbers and the cc-game when played on random graphs. 53

4.3. Random Graphs

A random graph, denoted G(n, p), is a graph with n vertices in which the probability of any two vertices being adjacent is p. Further, edges are independently chosen. There are two types of random graphs. The simpler type which we mainly study here is a random graph where p is constant. For example, the random graph that was shown in Chapter 1 is an instance of G(10, 0.5) which means that it has 10 vertices and the probability of two
1 . The more general type of random graphs is vertices being adjacent is p = 2

one in which the probability p is a function of the number of vertices n; that is, p = p(n). The domination number of a graph G is an elementary upper bound for the cop number and the cc-number. It is definitely not the best upper bound in general graphs. A path Pn , for example, has c(Pn ) = 1 and cc(Pn ) = 2 for all n. However, the domination number for a path is  (Pn ) =
n 3

. In

random graphs, the cop number, cc-number, and the domination number are of the same order as we will show. Before we move on to the theorems and results, we define the term asymptotically almost surely that will be used later on. We say that an event holds asymptotically almost surely (or a.a.s.) if it is true with probability tending to 1 as n  . Hence, in a random graph G(n, p), a condition holds a.a.s. if as the number of vertices tends to infinity, the probability of such a event being true tends to 1. Dreyer was the first to study the domination number in a random graph in his doctoral thesis [7]. The result was asymptotic bounds on the domination 54

4.3. Random Graphs

number of a random graph G(n, p) with p a fixed constant. If p  (0, 1), then we define Ln = log
1 1-p

n. > 0, a.a.s.

Theorem 4.4 ([7]). Let 0 < p < 1 be fixed. For every real (1 - )Ln   (G(n, p))  (1 + )Ln . In particular,  (G(n, p)) = (log n).

The cop number on a random graph was studied in [4] and a similar result was found to the one in Theorem 4.5. Theorem 4.5 ([4]). Let 0 < p < 1 be fixed. For every real (1 - )Ln  c(G(n, p))  (1 + )Ln . In particular, c(G(n, p)) = (log n). We used these two theorems and Theorem 2.1 to deduce Corollary 4.6. Corollary 4.6. Let 0 < p < 1 be fixed. For every real (1 - )Ln  cc(G(n, p))  (1 + )Ln . In particular, cc(G(n, p)) = (log n). 55 > 0, a.a.s. > 0, a.a.s.

4.4. Infinite Graphs

Proof. By Theorems 4.4 and 4.5 we have that

(1 - )Ln   (G(n, p))  (1 + )Ln , (1 - )Ln  c(G(n, p))  (1 + )Ln .

(4.1) (4.2)

Recall from Theorem 2.1 that for any graph G:

c(G)  cc(G)  min{ (G), 2c(G)}.

(4.3)

Therefore, by Equations (4.1)(or by(4.2)) and (4.3), we have that (1 - )Ln  cc(G(n, p))  (1 + )Ln , so cc(G(n, p)) = (log n). An open problem is determining the cc-number on a random graph G(n, p), where p = p(n).

4.4

Infinite Graphs

So far, in all the graphs we have studied including the random graph, there was a finite value for the number of vertices n. An infinite graph is a graph in which the number of vertices is infinite. These graphs may exhibit special properties that are different from finite graphs, and this is also true for the Cops and Robbers games. For example, a tree with a finite number of vertices 56

4.4. Infinite Graphs

has cop number equal to one and cc-number equal to one or two. A tree that contains a ray, which is a one-way infinite path, would need an infinite number of cops and cc-cops. Figure 4.4.1 shows a tree that contains a ray.
C C C

R

Figure 4.4.1: A finite number of cops cannot catch the robber.

The concept of random graphs and a countably infinite set of vertices can be combined to give the infinite random graph or the Rado graph, written R. The graph R is defined as the probability space G(N, p) which is graphs whose vertex set are the non-negative integers (countably infinite), and the probability of adjacency between any pair of vertices is p. We will refer to the Rado graph by the symbol R. An important property that we will need in this section is the e.c. property of graphs. We say a graph is existentially closed or e.c. if for all finite disjoint sets of vertices A and B , there is a vertex u joined to all vertices of A and no vertices of B . We say that u is correctly joined to A and B . Figure 4.4.2 depicts the e.c. property.

57

4.4. Infinite Graphs

A

B

u
Figure 4.4.2: u is correctly joined to A and B .

A weaker version of the e.c. property is when a graph is strongly n-e.c. We say a graph G is strongly n-e.c. if for all disjoint sets A and B in G with |A|  n, there is a vertex u correctly joined to A and B . Note that a graph is e.c. if and only if it is strongly n-e.c. for all n  1. For all the theorems and proofs that follow in this chapter, we will be working on infinite graphs that are countable. The set of vertices for such graphs in N. Theorem 4.7 shows two results. These two results combined mean that the Rado graph is the unique e.c. countable graph. Theorem 4.7 ([5]). With probability 1, the following is true. (1) The graph G(N, p) is e.c. (2) The graph G(N, p) is unique up to isomorphism.

58

4.4. Infinite Graphs

4.4.1

Chains and Cop Density

The cop number of R is infinite, and this can be shown directly. Let the robber occupy at some round t a vertex u and the cops occupy a finite set of vertices X . By the e.c. property, there is a vertex v joined to u and not joined or equal to any vertex of X . The robber moves to v and avoids being caught. This holds for all vertices of R. See Figure 4.4.3.
v

u

X
Figure 4.4.3: A robber escaping finitely many cops in R.

When working with infinite graphs that are countable, we know that such graphs are made up of the limits of chains of finite graphs. Studying these chains provides insight into some properties that are not possible to study for the graph as a whole. The cop density of a finite graph, denoted Dc (G), is a property that was introduced in [4]. The cop density is the ratio of cops needed in a finite graph to the number of vertices in that graph. That is, c(G) . |V (G)|

Dc (G) =

59

4.4. Infinite Graphs

Note that since the cop number is well defined and bounded, we have Dc (G)  [0, 1]. The same concept can be extended to infinite graphs. Every countably infinite graph is the limit of a chain of finite graphs, and there are infinite chains with the same limit. Suppose that G = limn Gn , where C = (Gn : n  N) is a chain of induced subgraphs of G. Define

D(G, C ) = lim Dc (Gn )
n

as the cop density of G relative to C , assuming the limit exists. We simply refer to this as the cop density of G. We define a similar term that describes the ratio of the cc-number in a graph to the number of vertices in that graph. We call this value Dcc (G), where cc(G) . |V (G)|

Dcc (G) =

The limit Dcc (G, C ) is defined analogously as D(G, C ). For example, a cycle C10 has cc(C10 ) = 3 which means its cop density is 3 cc(G) = = 0.3. |V (G)| 10

Dcc (C10 ) =

Now let G be a disjoint union of infinitely many cycles with 10 vertices, and let Gn be the disjoint union of the first n of those cycles. If the chain C is Gn , then the density Dcc (G, C ) is equal to the limit of the density of Gn which is a constant and is equal to 0.3. 60

4.4. Infinite Graphs

Theorem 4.8 was proved in [4] and it shows that in an infinite graph G, a chain can be found with cop density equal to any real number in [0, 1]. This is true for both the cop number and the cc-number. The proof below is analogous to the approach in [4] and Chapter 7 in [5] with some added details on why the same proof works for the cc-game. Theorem 4.8. If G is strongly 1-e.c., then for all r  [0, 1], there is a chain C in G such that Dcc (G, C ) = r. Proof. Let (pn : n  N) be a sequence of rationals in [0, 1] such that

n

lim pn = r,

with p0 = 1. For example, if r has a decimal expansion 0.r1 r2 r3 . . ., then we can choose pi = 0.r1 r2 . . . ri . We construct a chain C = (Gn : n  N) in G such that G = limn Gn , and with the property that Dc (Gn ) = pn . Enumerate V (G) as {xn : n  N }. We proceed inductively on n. For n = 0, let G0 be the subgraph induced by x0 . Then cc(G0 ) = 1 = p0 . |V (G0 )| Fix n  1. Suppose the induction hypothesis holds for all k  n, and let pn+1 = a , where a and b are positive integers. Further suppose for an b inductive hypothesis that {x0 , . . . , xn }  V (Gn ). Without loss of generality, as r  [0, 1] we may assume a < b, and gcd(a, b) = 1. We add vetices to Gn in 61

4.4. Infinite Graphs

stages. Define Gn+1 to be the graph induced by V (Gn ) {xn+1 }. Suppose that c(Gn+1 ) = a and also that |V (Gn+1 )| = b . If
a b

, then let Gn+1 = Gn+1 . =a b

Otherwise, we add some new vertices to adjust the density Dc (Gn+1 ). Each time an isolated vertex is added to a graph, the cc-number increases by one. That cop would have to start on that isolated vertex. Adding an end-vertex to a graph does not change the cop number or the cc-number. We may assume that
a b

<

a b

by adding an appropriate number of end-vertices. In

this way, b will become larger, while a will remain unchanged. We may add an arbitrary finite number of isolated vertices and end-vertices to Gn+1 by the strongly 1-e.c. property. We add x isolated vertices and y end-vertices to Gn+1 to form Gn+1 so that cc(Gn+1 ) a = . |V (Gn+1 )| b

Dcc (Gn+1 ) =

This is possible if we can solve the equation a +x a = , b b +x+y which is equivalent to

(b - a)x - ay = ab - a b.

(4.4)

Note that ab - a b > 0, since otherwise ab  a b which is contrary to the

62

4.4. Infinite Graphs

hypothesis. Hence, we obtain a linear Diophantine equation

cx + dy = e,

where c = b - a > 0, d = -a < 0, and e = ab - a b > 0. As gcd(b - a, -a) = gcd(a, b) = 1, then (4.4) has infinitely many solutions. The general integer solution of (4.4) is x = x0 - at, y = y0 - (b - a)t, (4.5)

where (x0 , y0 ) is a particular fixed solution, and t is an integer. (For example, we may take (x0 , y0 ) = (-a, a - b).) As the coefficients of t in (4.5) are both negative, we may choose an appropriate t < 0 to ensure an integer solution of (4.4) (x, y ) with x, y  0. This completes the induction step in constructing Gn+1 . As {x0 , . . . , xn }  V (Gn ) for all n  N, we have that C = Gn : n  N is a full chain for G. Further,

Dcc (G, C ) = lim pn = r.
n

Now since the infinite random graph R is e.c. (and so is strongly 1-e.c.) we have the following corollary. Corollary 4.9. For all r  [0, 1], there is a chain C in R such that Dcc (R, C ) = r.

63

Chapter 5 Results and Open Problems
5.1 Introduction

In this chapter, we will summarize the results and theorems that we have found. We will then mention the open problems and conjectures that remain unsolved.

5.2

Results and Theorems

We started by finding results that relate the cc-number of a graph to its cop number. In Chapter 2, we found an upper and lower bound on cc(G) in terms of c(G) and this later allowed us to utilize some results of the game of Cops and Robbers in the cc-game. We then explored and computed the ccnumbers of some special graphs such as cycles in Chapter 2 and outerplanar

64

5.3. Open Problems and Conjectures

graphs in Chapter 3. One of the more significant results in this thesis was classifying graphs by their cc-number. Such classifications were found for graphs with cc(G) = 1 in Chapter 2 and a family of graphs with cc(G) = 2 in Chapter 3. Product graphs were explored in Chapter 3 and results were found in the cc-game on strong products such as the upper bound of the ccnumber of the strong product of two graphs. In Chapter 4, we investigated the complexity of computing cc(G). Some corollaries and results were then found when playing the cc-game on random graphs. Finally in the same chapter, we considered infinite graph as well as the Rado graph, and the implications of their properties on the cc-game.

5.3

Open Problems and Conjectures

Throughout this thesis we have mentioned some of the problems that remain unsolved. We will summarize those here. In Theorem 2.1, we established that c(G)  cc(G)  2c(G). By observing the strategies for the cc-game on special graphs, we noticed that we seem to only need one more cop to play the cc-game as opposed to the original game. The following conjecture remains unsolved, and it is arguably the main open problem in this area of research. Conjecture 5.1. For a graph G, we have cc(G)  c(G) + 1.

65

5.3. Open Problems and Conjectures

We studied planar and outerplanar graphs in Chapter 3 and while we found results on the cc-game on the latter, an upper bound on the cc-number on planar graphs remains to be found. Note that if G is planar, then c(G)  3. Conjecture 5.2 however, remains open. Conjecture 5.2. If G is a planar graph, then cc(G)  4. In Chapter 3, we classified a family of graphs with cc(G) = 2. It remains unknown if a classification exists for all graphs with cc(G) = 2. Another open problem that we were not able to examine was the ccnumber on product graphs. Results were found in Chapter 3 on the ccnumber on strong products of graphs but similar results are yet to be found on other types of products such as Cartesian, categorical, and lexicographic products. In Chapter 4, an open problem was mentioned when we studied algorithmic complexity for the cc-game. That problem is whether computing the cc-number of a graph is NP-complete, and therefore is NP. Note that this mentioned problem is NP-hard but even the relationship between the different complexity classes remains the subject of research and debate. When we studied random graphs, we found some results on graphs where the probability p of G(n, p) is constant. An open problem that was not examined was finding the cc-number, or some bounds on the cc-number in G(n, p), where p = p(n).

66

Bibliography
[1] M. Aigner, M. Fromme, A game of cops and robbers, Discrete Applied Mathematics 8 (1984) 1Â­12. [2] A. Berarducci, B. Intrigila, On the cop number of a graph, Advances in Applied Mathematics 14 (1993) 389Â­403. [3] A. Bonato, A Course on the Web Graph, American Mathematical Society, 2008 [4] A. Bonato, G. Hahn, C. Wang, The cop density of a graph, Contributions to Discrete Mathematics 2 (2007) 133144. [5] A. Bonato, R.J. Nowakowski, The Game of Cops and Robbers on Graphs, American Mathematical Society, 2011. [6] N.E. Clarke, Constrained Cops and Robber, Ph.D. Thesis, Dalhousie University, 2002.

67

[7] P.A. Dreyer, Applications and variations of domination in graphs, Ph.D. Dissertation, Department of Mathematics, Rutgers University, 2000. [8] F.V. Fomin, P.A. Golovach, J. Kratochvil, N. Nisse, Pursuing fast robber in graphs, Theoretical Computer Science 411 (2010) 1167Â­1181. [9] P. Frankl, Cops and robbers in graphs with large girth and Cayley graphs, Discrete Applied Mathematics 17 (1987) 301-305. [10] G. Hahn, G. MacGillivray, A characterization of k -cop-win graphs and digraphs, Discrete Mathematics 306 (2006) 2492-2497. [11] W. Imrich, S. Klav zar, Product Graphs, Wiley-Interscience, 2011. [12] R. Isaacs, Differential Games: A Mathematical Theory with Applications to Warfare and Pursuit, Control and Optimization, New York: John Wiley, 1965. [13] C.H. Papadimitriou, Computational Complexity, Addison-Wesley, 1994. [14] A. Quilliot, Jeux et pointes fixes sur les graphes, Th` ese de 3` eme cycle, UniversitÂ´ e de Paris VI, 1978, 131Â­145. [15] R.J. Nowakowski, P. Winkler, Vertex-to-vertex pursuit in a graph, Discrete Mathematics 43 (1983) 235Â­239.

68

[16] V.V. Vazirani, Approximation Algorithms, Springer-Verlag, Berlin, 2001. [17] A. Wigderson, P, NP and Mathematics-a computational complexity perspective, In: Proceedings of the ICM'06, 2007.

69

