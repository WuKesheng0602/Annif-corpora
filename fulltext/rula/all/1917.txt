INTERNET BASED CONTROL SYSTEM DESIGN

by

YAN FENG, B. Eng. ELECTRICAL ENGINEERING JILIN UNIVERSITY, 1992

A thesis presented to Ryerson University in partial fulfillment o f the requirement for the degree o f Master of Applied Science in the Program o f Electrical and Computer Engineering

Toronto, Ontario, Canada, 2004 © Yan Feng, 2004
PROPERTY OF RYERSON üfüV ER Sm ' LIBRARY

UMI Number: EC53462

INFORMATION TO USERS

The quality of this reproduction is dependent upon the quality of the copy submitted. Broken or indistinct print, colored or poor quality illustrations and photographs, print bleed-through, substandard margins, and improper alignment can adversely affect reproduction. In the unlikely event that the author did not send a complete m anuscript and there are missing pages, th ese will be noted. Also, if unauthorized copyright material had to be removed, a note will indicate the deletion.

UMI
UMI Microform EC 53462 Copyright2009 by ProQ uest LLC All rights reserved. This microform edition is protected against unauthorized copying under Title 17, United S ta te s Code.

ProQ uest LLC 789 East Eisenhower Parkway P.O. Box 1346 Ann Arbor, Ml 48106-1346

AUTHOR'S DECLARATION
I hereby declare that I am the sole author of this thesis.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

BORROWER'S PAGE
Ryerson University requires the signatures of all persons using or photocopying this thesis. Please sign below, and give address and date.

Name

Address

Date

Signature

lU

ABSTRACT

Internet Based Control System Design
© Yan Feng, 2004 Master of Applied Science in the Program of Electrieal and Computer Engineering Ryerson University The thesis presents a novel Internet-based controller designed with the remote controller computer synchronizing its clock with the local computer. An observer-based state feedback control strategy is proposed to compensate the Internet delay and improve the system performance. Asymptotic stability of the closed-loop system is achieved without the assumption of reliable transmission from the controller computer to the local computer, which reduces the requirement for high performance Internet access. Computer simulations are conducted to evaluate the proposed control strategy, and the results have confirmed its effectiveness. The experimental results have demonstrated the supreme performance of the proposed control strategy.

IV

ACKNOWLEDGMENT
I would like to express my gratitude to my supervisors, Dr. Guangjun Liu and Dr. Bin Wu for their unfailing support and guidance before, during and after the process of this work. It was indeed a great pleasure to work under their supervision.

Special thanks are given to the my colleagues at the Systems and Control Laboratory of Ryerson University: Guozhong Gerry Bao, Dejun Wang, Cliff Chan, and Peter Hodal for their beneficial discussions on control theories and contributions in the apparatus.

I would like to express my appreciation to Natural Sciences and Engineering Research Council (NSERC) of Canada for the grant for this project.

Finally, special thanks to my parents QingYi and ShuLan Wang, my wife Jun Song and my lovely daughter YuRu for their encouragement, understanding, and continuous support, to whom this thesis is dedicated.

TABLE OF CONTENTS

1.1 M o tiv a tio n s .........................................................................................................................1 1.2 B ackground on D istributed A rchitecture of C ontrol S y s t e m s ............ 2 1.2.1 Background on N etw ork Control S y stem s.............................................................. 2 1.2.2 Background on Internet Based Control S y stem s....................................................7 1.3 S u m m ary of C o n t r ib u t io n s ...........................................................................................8 1.4 O rganization of the T h e s is ...........................................................................................9

CHAPTER 2 PROBLEM FORMULATION OF INTERNET BASED CONTROL SYSTEM
2.1 2.2

........................................................................................... 11

T he Internet D e l a y .......................................................................................................11 P roblem F o r m u la tio n ..................................................................................................15

CHAPTER 3 INTERNET BASED CONTROL SYSTEM DESIGN........................... 19
3.1 3.2 3.3 C ontrol S cheme O v er view ..........................................................................................19 C ontrol S cheme S y n t h e sis ......................................................................................... 20 S tability A n a l y sis .........................................................................................................25

CHAPTER 4 INTERNET BASED CONTROL SYSTEM SIMULATION................ 28
4.1 4 .2 4.3 4 .4 D D A R M M odel a n d L in e a r iz a t io n ....................................................................... 28 S im ulation P r o c e d u r e ................................................................................................ 30 T he S imulation R e s u l t s .............................................................................................. 33 S im ulation R esults D is c u s s io n .............................................................................. 40

CHAPTER 5 EXPERIMENT OF THE INTERNET BASED CONTROL SYSTEM 42
5.1 D escription OF T he A p p a r a t u s .................................................................................. 42

VI

5.2 5.3 5.4

E x p e r im e n t P r o c e d u r e s ..................................................................................................... 44 E x p e r im e n t a l R e s u l t s ........................................................................................................ 49 E x p e r im e n t a l R e s u l t s D is c u s s io n ............................................................................... 59

CHAPTER 6 CONCLUSIONS AND FUTURE WORK............................................... 61
6.1 6.2
C o n c l u s io n s .............................................................................................................................. 61 F u t u r e W o r k ............................................................................................................................62

REFERENCES................................................................................................................... 63

V ll

LIST OF FIGURES
Figure 1.1 The general structure of NCS........................................................................ 3 Figure 2.1 Response Time for North America............................................................. 14 Figure 2.2 Response Time for Europe........................................................................... 14 Figure 2.3 Global Response Time.................................................................................. 14 Figure 2.4 Diagram of Internet-based control system................................................. 16 Figure 3.1 The outline of the Internet control system................................................. 21 Figure 3.2 The case with the critical condition A7^ = hTp + 7; + r, + 23 Figure 3.3 The case with the condition A Fp + + 7; + 24 Figure 3.4 The case with the condition > ATp +T^ + T , + t^ ....................................... 24 Figure 4.1 Feedback Linearization................................................................................ 29 Figure 4.2 The outline of simulation procedure........................................................... 31 Figure 4.3 The approach of introduction to the inputs of the system........................ 33 Figure 4.4 Stability of the system...................................................................................34 Figure 4.5 System response with Internet delay longer than 0.85r^.......................... 34 Figure 4.6 System response with 7:=[15.73 12.6], Z , = [l.3 4.2f................................... 35 Figure 4.7 System response with // = 6 .......................................................................... 36 Figure 4.8 Output response of the system with step input.......................................... 37 Figure 4.9 Output response of the system with Internet delay less than 0.3t^^......... 37 Figure 4.10 Output response of the system with Internet delay longer than 0 .9 % ^ ^ .. 38 Figure 4.11 Step response of the system with =[10 15], Z , = [l.7 7.2]^.................... 39 Figure 4.12 Step response of the system with //= 6 ...................................................... 39 Figure 4.13 Output response of the system with increase change reference inputs. 40 Figure 4.14 Output response of the system with decrease change reference inputs. 40 Figure 5.1 The outline of the experiment...................................................................... 42 Figure 5.2 The demonstration of DDARM and the control computer....................... 43 Figure 5.3 A picture of DDARM................................................................................... 44 Figure 5.4 The outline of the experiment procedure................................................... 47 Figure 5.5 The graph of the desired trajectory............................................................ 48 Figure 5.6 The graph of the desired velocity................................................................ 48 Figure 5.7 The graph of the desired acceleration......................................................... 49 Figure 5.8 The position of DDArm at ATp = 0.01s, // = 5.............................................. 50 Figure 5.9 The velocity of DDArm at ATp = 0.01s, ft = 5 .............................................. 50 Figure 5.10 The torque of DDArm at ATp = 0.01s, // = 5 .............................................. 51 Figure 5.11 The average delay, , for each A7^......................................................... 51 Figure 5.12 The position of DDArm with the friction model...................................... 53 Figure 5.13 The average delay, , for each A7^......................................................... 53 Figure 5.14 The velocity of DDArm with the friction model...................................... 54 Figure 5.15 The torque of DDArm with the friction model........................................ 54 Figure 5.16 The position of DDArm with = 0.065s................................................... 55

V lll

Figure 5.17 The velocity of DDArm with = 0 .0 6 5 s ................................................................. 55 Figure 5.18 The torque of DDArm with = 0 .0 6 5 s ..................................................... 56 Figure 5.19 The position of DDArm with = 0.08s ..................................................... 56 Figure 5.20 The velocity of DDArm with F ^ ^= 0 .0 8 s ..................................................... 57 Figure 5.21 The torque of DDArm with F^ = 0 .0 8 s....................................................................... 57 Figure 5.22 The position of DDArm with F,, = 0.1s...................................................... 58 Figure 5.23 The velocity of DDArm with F,, = 0.1s....................................................... 58 Figure 5.24 The velocity of DDArm with = 0.1s....................................................... 59

IX

LIST OF TABLES
Table 1.1 A sample of the report of the Internet performance Table 5.1 Technical Information of DDRAM (Joint A) 13 44

NOMENCLATURE
àTc àTp

: the control period of the controller computer ; the control period of the local computer
: ATc/ATp,

a positive integer

tc(i) tp(j) to

: the i* * *starting time of the execution for the controller computer : the j*'' starting time of the execution for the local computer : the initial starting time : the upper bound of the delay of reliable data transfer from the local computer to the controller computer
: the

time period for the controller computer to send the package

n

: the number of times for the controller computer to send the package during the period : there must be one package correctly received within the delay controller computer sends
n

, if the

packages during

to the local computer

: the maximum control strategy computing time for the controller computer : the buffer to store the receiving data from the local computer
r^i^f ïi

: the buffer to store the control signals produced by the controller
: the

number of packages in

r^huf(i)

at time

t^ (i)

tj r

: the maximum size of : the maximum size of

ti c

XI

CHAPTER 1 INTRODUCTION AND LITERATURE REVIEW 1.1 Motivations
As control systems become more complex and lager in scale, distributed architecture is proven to be an efficient and reliable solution. This solution provides flexibility of operation, evolutionary design process, and ease of maintenance, diagnosis and monitoring. In the meantime, the Internet is developed to be popular communication medium due to the cost-reduction and the economy of time, and most of all, the overcome of the limitation of control in distance between nations of regions. Internet based control system is a combination of the distributed architecture and the Internet. In other words, Internet based control system is a control system communicating with sensors and actuators over the Internet. As a precursor. Networked Control System (NCS) that connects sensors, controller, and actuators to a network, is well developed. Many different kinds of networks have been used in NCS. For instance, the Ethernet bus, token-passing bus (e.g., ControlNet), and controller area network (CAN) bus (e.g., DeviceNet) are promoted for use. Comparing to the traditional point-to-point control system, NSC provides several advantages such as small volume of wiring, distributed processing, modularity, and interoperability. Internet based control system can be considered as an extension of the NCS. It not only has the advantages of NCS, but also overcomes the limitation of distance, using the standard communication protocol, such as Transmission Control Protocol and Internet Protocol (TCP/IP) and User Datagram Protocol (UDP).

A challenging problem associated with Internet based control systems is the Internet delay. The time required to read a sensor measurement and to send a control signal to an actuator through Internet depends on the Internet characteristics, such as the current Internet traffic, routing path, etc. Therefore, the overall performance of an Internet based control system can be significantly affected by the Internet delay. The situation can be even worse when data loss occurs during the transmission. To achieve stability and good performance of an Internet based control system, an observer based prediction control strategy is proposed in this thesis. The proposed control strategy is investigated by simulations and experiments. A direct drive robot arm (DDARM) is selected to conduct experiments in this thesis.

1.2

Background on Distributed Architecture of Control Systems
Distributed Architecture has been developed for many years in control systems.

1,2.1 Background on Network Control Systems

The implementation of distributed control can be traced back to 1970s when Honeywell's distributed control system (DCS) was introduced. With developing of network technology, DCS was extended to be NCS. NCS is being adopted in many application areas for many reasons [1], such as industry automation, manufactory plants [2], automobiles [3], and aircraft [4, 5]. There are two major approaches for NCS design. One is to minimize the packet delay and loss by designing a communication protocol. The other is to regard the existing network situation as given conditions and design a control strategy that handles the network effects for the systems. The general structure of NCS is outlined in Figure 1.1.

Plant

Actuator 1

Actuator n

Sensor 1

Sensor m

Communication Medium Controller

Figure 1.1 The general structure of NCS

In the NCS literature, Halevi and Ray considered a continuous-time plant and discrete-time controller and analyzed the integrated communication and control system (ICCS) using a discrete-time approach [6]. They derived additional state-space equations, and then integrate them with the original state-space equations of a system to form an augmented state-space equation that includes both past values of the plant input and output and the current states of the plant and controller. They also took message rejection and vacant sampling into account. This method is straightforward. However, because of extensive state augmentation, the complexity of the system increases significantly when the dimension of the states and inputs are inereased, and more computation time is required. Luck and Ray proposed a queuing method to use an observer to estimate the states of the plant, and then utilize the previous outputs of system to predict the control signals [7, 8]. In this method, the delays are transformed to be constants, which is much easier to control than random delay systems. However, the queues make the delay unnecessarily longer than usual.

Chan and Ôzgüner proposed another queuing method using an observer and a probabilistic algorithm to compensate the delays [9]. In this approach, the possible choices of the output from the plant reached at controller side are reduced to two values. Two weighting matrices,
Pq

and P,, are computed from the probabilities of the

occurrences of the two values. Then state variables are estimated. However, since this approach itself is not a control algorithm, the stability of the control algorithm needs to be tested, although various control law can be used in this method with the predictive states. And the delays from the queues still exist. In addition, controller-to-actuator delays were not considered in this method. A sampling time scheduling method was introduced by Hong [10]. The main concept of this approach is to choose a long enough sampling period for a discrete-time internet-based control system such that Internet delays do not affect the control performance and the system stability. This method partially solved the delay problem. Furthermore, it allows multiple control loops or user to share the Internet appropriately. However, approach may lead to a sampling period that is longer than adequate. Nilsson et al. derived an optimal stochastic control method for controlling a plant over a random delay network [11]. In this method, the Internet delay was treated as a Linear-Quadratic-Gaussian problem. The goal of this approach is to minimize a cost function in the case that full state information is known. A control law for optimal state feedback is derived based on the cost function. The performance of this approach is better than the queuing method, since the delay is reduced by not using the queues. Nevertheless, a large amount of plant output and input in conjunction with the past

information of the delays is required. Therefore, a large controller memory is needed to store the information. Walsh et al. published a perturbation method in which delay effect is treated as a perturbation of a continuous-time system under the assumption that no observation noise exists [12, 13]. The main task is to model
e{t) = y { t ) - y ( t - T ^ )

as a special type of

vanishing perturbation, where > > (/) is the output of the plant, and r*'" represents the sensor-to-controller delay in the continuous-time case, which is bounded based on a Lyapunov stability approach. A remarkable advantage of this method is that it can be applied to nonlinear systems. However, it is not applicable to a system containing controller-to-actuator delay. Walsh and Ye studied on some important issues associated with networked control systems [14]. They presented relations between closed-loop stability and the size of transmission deadlines for certain types of scheduling. They introduced a novel scheduling policy, the maximum error first (MEF) - try once discard (TOD) policy; and compared the new scheduling policy with static scheduling. Sufficient conditions of exponential stability of networked control systems were derived. Two experiments were performed to show the superiority of the dynamic TOD over static scheduling. Further, they introduced TOD into multiple-input-multiple-output (MIMO) networked control systems [15], and provided an analytic proof of global exponential stability for both TOD protocol and statically scheduled access methods. The approach is to design the controller using established techniques considering the network transparent, and then analyze the effect of the network on closed-loop system performance. The performance of the system was examined by simulations on an automotive gas turbine and an unstable batch reactor.

Park et al. presented a scheduling method for network-based control systems with three types of data (periodic data, sporadic data, and messages) [16]. The method can adjust the sampling period as small as possible, allocate the bandwidth of the network for three types of data, and exchange the transmission orders of data for sensors and actuators. In addition, the presented scheduling method guarantees real-time transmission of sporadic and periodic data, and minimum utilization for nonreal-time messages. Wei et al. proposed a control scheme for a class of networked control systems (Networked Half-Link Systems: NHLS) [17]. They used the master-slave clock synchronization technology to evaluate the delays online, and then the LQ optimal control based on the obtained delays was adopted to stabilize the controlled plant. Lian et al. analyzed the performance of control actions over distributed networks, and proposed a design methodology of achieving control and communication performance in a networked agent system [18]. They studied the relationship between the sampling rate of a control system and the transmission rate of a communication network, and then utilized an integrated networked control design chart to help select design parameters and visualize overall system performance at different sampling and transmission rates. Based on the design parameters selected, several estimation algorithms are implemented to achieve both control and communication performance. NCS is usually used for a relatively small scope; for instance, it is limited to be within a LAN. Therefore, Internet based control system is needed to handle the system with larger scope.

1.2.2 Background on Internet Based Control Systems
As the Internet technology has been developed rapidly, such as quality of service (QoS) and traffic engineering (TE), the Internet becomes a low-cost communication medium. Much effort has been devoted on development of Internet based systems in many fields, such as education [19], monitoring [20, 21], manufacturing [22], and telerobot [23]. Internet based control systems can be viewed as an extension to NCS. However, there exist some differences in terms of requirements specification and architecture design [24]. Internet delay is random, while the delay in NCS can be known and controlled to some degree. Since it is very hard to control or predict the Internet behaviour, it would be very costly and time consuming to design a special protocol for Internet based control systems and deploy it on the Internet. To handle the time varying delay, two approaches have been used. In the first approach, the variability of the delay is taken care of by the controller, while in the second approach, buffers are utilized to compensate for the delay. Some schemes of Internet based control systems have been designed to provide internet control function and overcome the problem caused by the random delay and data loss over the Internet. Han and Kim introduced the implementation of an Internet-based personal robot with a real-time open loop command-transfer block [25]. The system is designed to be insensitive to the Internet delay by using a command filter that recovers the information loss of control commands, a path generator and a path-following controller that reduce the time difference between the real robot and the virtual robot. Instead of using open loop solution. Oboe proposed a closed-loop solution that combined a buffering mechanism and a predictor to handle the time varying delay and random packet losses [26].

Fung et al. [27] described an adaptive teleoperation system based on the communication quality of Internet so as to improve the system dynamic performance. A command negotiator and a robot controller gain adjustment scheme are introduced, using the measured quality of service parameters. Kress et al. [28] discussed the general issues of control needs, constrains, and concepts which are associated with internet based assembly. Several control strategies used for assembly were investigated based on a discrete event simulation. Chopra et al. [29] extended the scattering formulation for teleoperation over networks with time-varying delays [30], and demonstrated a strategy to recover both passivity and tracking performance using a modified control architecture that incorporates time varying gains into the scattering formulation and feedforward position control. Leung et al. [31] modeled the delay as a perturbation to the system and designed the system to be robust to such a perturbation. Chen et al. [32] presented a robust control method that utilized a time forward observer to predict the state of the plant. In this approach, force, position and velocity feedbacks were proposed to ensure that the system is robust and asymptotically stable. Brady and Tam [33] described the time varying nature of the delay and developed a time forward observer for supervisory control over the Internet. They presented a promising architecture which is flexible to allow the robot to execute commands autonomously, while retaining the ability for the teleoperator to intervene in certain circumstances.

1.3

Summary of Contributions
The contributions of this thesis are summarized as follows:

A new control strategy that achieves asymptotic stability of a considered Internet based control system is proposed. The control strategy combines an observer-based predictor and a state feedback control scheme to compensate the Internet delay. Reliable data transmission from controller to actuator is not required. Therefore, the requirement for high performance Internet access is reduced. The current Internet protocols (TCP/IP and UDP) are utilized. Hence, the complexity of the system caused by designing special protocols is avoided. Moreover, standardized communication protocols also result in better modularity. The simulation results show that asymptotic stability of the Internet based control system is achieved, although some factors, such as Internet delay, the gains, could have impacts on the system. Furthermore, the simulation results indicate that the output of the system follows the desired output. Similarly, the factors influence on the system characteristics. Experiments are conducted using DDARM to evaluate the proposed control strategy, and the results have confirmed its effectiveness. The experiment results show that the design of the Internet based control system achieves stability. The output of the system follows the desired output dynamically.

1.4

Organization of the Thesis
This thesis is organized as follows: Chapter 2 describes the problem formulation

of the internet based control system; Chapter 3 proposes the control strategy of the internet based control system, and then provides procedure and stability analysis of the proposed control strategy; Chapter 4 provides the simulation results of the internet based control system; Chapter 5 provides the experimental results of the internet based control

system and the discussion of the results; and Chapter 6 draws some conclusions and proposes further directions of future research.

10

CHAPTER 2 PROBLEM FORMULATION OF INTERNET BASED CONTROL SYSTEM 2.1 The Internet Delay
Network introduced delay has a significant impact on distributed control system. Network introduced delay can be classified into two types; local network delay and Internet delay. Local network delay appears in networked control systems when the data is exchanged among sensors, actuators, and controllers via the local network. Local network delay could be constant, time varying, or random, depending on the medium access control (MAC) protocol of the control network. There are two major medium access control protocols in the networked control systems. DeviceNet [34] and Ethernet [35] utilize carrier sense multiple access (CSMA) that is a random access MAC protocol, while ControlNet [36] employs token bus protocol (IEEE 802.4) that is a scheduling protocol. Different protocols result in different characteristics of the network delay. Local network delay is controllable, since the network information, such as the size of network, the distance between the components, and the protocols, is known. Along with the development of the Internet technology, Ethernet has been chosen as the local area network (LAN) technology, and was deployed through all over the Internet. Internet delay is a more complicated issue compared with the local network delay. The Internet delay is caused by many factors and is random. The following are the reasons:

11

· Propagation delay: The data bits travel over a wire in a limited speed. This delay is fixed, when the distance between the nodes on the network, and the bit rate of the communication medium is fixed. Propagation delay cannot be eliminated. · Queuing delay: The data packets have to wait to be served at resources, such as routers, within the network. This is another main cause for the Internet delays. However, this delay can be minimized by new technologies, such as QoS and TE. · Network protocol delay: Also called "packetizing" delay. It is caused by breaking data into chunks at one end and reconstructing the data at the other end. · Data loss and corruption also cause network delay. Loss and corruption are treated identically by Transmission Control Protocol (TCP). It resends the packets, until the packets are received correctly. · Internet is not static. Internet traffic changes dynamically, therefore, data is rerouted and delayed. · Transferring data in Ethernet also causes delay. The Internet delays are complex and dynamic. However, it can be improved by advanced technologies [37]. The delay caused by Ethernet is relatively short and controllable. For instance, the delay caused by Ethernet is almost zero if the number of nodes on the network is small. The propagation delay is a constant; it can be calculated by using the distance between the nodes and the speed of light, if the optical communication is used. Queuing delay can be improved by QoS and TE. Theoretically, the maximum Internet delay, D , can be described as follows [38]:

" 4 + ^ * #

p .1 )

12

where

D

is the Internet delay,
m

b is

the bucket size in byte,

R

is speed of transmission line
M

in the link,

is the maximum packet size for the given flow,
H

is the maximum packet

size in the network,
j .

is the number of hops, and

Rj

is speed of transmission line in link

However, this upper bounded Internet delay is not applicable for current Internet yet,

because not all routers that are currently used in the network support the QoS and TE technology. It takes time to upgrade the routers worldwide. In reality, the performance of Internet is monitored and reported by some organizations. A report generated by Internet Traffic Report [39] is shown in Table 1. It is a report for a particular moment on March 15`* * , 2004. The website is updated every five minutes. The Traffic index is a score from 0 to 100 where 0 is "slow" and 100 is "fast". It is determined by comparing the current response of a ping echo to all previous responses from the same router over the past 7 days. Response Time in reference to Internet traffic is how long it takes for a chunk of data to travel from point A to point B and back (round trip). A typical response time on the Internet is 200 ms. Packet Loss measures the reliability of a connection. It presents the percentage of packets that are lost during transmissions.

Asia Australia Europe North America South America .

67 76 ;

306 233 161 101 167

5% 0% 0% 4% 0%

Table 1.1. A sample of the report of the Internet performance Response Time is a parameter to express the Internet delay. It can be seen that the average Internet delays in most regions are less than 300ms. If the QoS technique is

13

implemented all over the world, the delays will be definitely shorter. Figures 2.1, 2.2 and 2.3 show the Response Time for North America, Europe and all over the world, respectively.
North Anerica Response Time (MS) : Past 24 Hours

! 1 I 1 ___ _!
68 03/1 4 15: 35 03/14 19:35

I i I I 1
03/14 23:35

j i

11 11
03/15 03:35

-i.1
03/15 07:35 03/1 5 11: 35

1

i
03/1 5 15:35

Figure 2.1 Response Time for North America

Europe Response Time (MS) : Past 24 Hours
^3i - ,------------------------------------------ --------------------- -----384 338

24S

199
1S3-f 03/14 15:40 03/14 19:40 03/14 23:40 03/1 S 03:40 03/1 5 07:40 03/1 S 11:40 03/1 S 15:40

Figure 2.2 Response Time for Europe
Global Response Time (MS) : Past 24 Hours
375T ------------------332 290 247 r --

162

03/14 23:50

03/15 03:50

03/15 07:50

03/15 11:50

Figure 2.3 Global Response Time

14

2.2

Problem Formulation
As the Internet delay has it's own characteristics, Internet based control systems

face some special problems, such as random delay. To compensate the Internet delay, the controller has to be insensitive to time-varying delay. In order to solve the problem, the system can be configured as follows. Consider the following plant model:
x{k + 1) = Ax{k) + Bu(k) y{k) = Cx{k)

(2.2) (2.3)

where x e R " , u e R \ yeR"" , and the matrices A, B, and C are of compatible dimensions. The Internet based control system is represented in Figure 2.4. A local computer is connected to the plant. It implements the data communication among sensors, actuators, and the Internet. A controller computer that performs the control strategy is connected to the control system through Internet. The clock of the controller computer and the local computer is assumed to besynchronized. Since a main task of thiscontrolsystem is to compensate the Internet delay, time is a very important issuehere.AT^is definedas the

control period of the controller computer, namely, the period for the controller computer from the starting moment of the /'* execution to the starting moment of the (/ + !)'* execution. Similarly, A7> is defined as the control period of the local computer, which is the period for the local computer from the starting moment of the /" * execution to the starting moment of the (/+1)'* execution.

15

Actuator

Plant

Sensors

Local Computer Internet

ca

5C

Controller
ubuf Trbuf ( î )

Controller Computer

Figure 2.4 Diagram of Internet-based control system

Furthermore, tc(0

tp {j)

are defined as the starting time of the execution for the

controller computer and the local computer, respectively, where /, j are integers. Let = fiATp, where // is a positive integer. The following equations are satisfied:
^c(0=^o+'^^c t^(/)=tp(/n)
t p U + ' ^ ) - t p U ) = ^Tp

(2.4) (2.5) (2.6)

where

is the initial starting time. All datain the eontrol system needs to be packed before beingtransferred via

Internet. The paekages from the as:

local computer to the controller computercan bedenoted

LTC{k)={y{k),tpik))

(2.7)

where k is time index, and the packages fi-om the controller computer to the local computer can be denoted as:

16

CTL{k) = {(«((A: + X)fi + 0, tc m | / e [0,// - 1 ] }

(2.8)

Note that, in this particular design, there is one set of sensor outputs and the corresponding time in each LTC{k) ; however, there are n sets of control signals and one corresponding time in each to hold the receiving
Kbuf(0^^ CTL(k) .

In addition, two buffers are needed at controller side

LTC(k)s

and the control signals produced by the controller. Let

the buffer to store the receiving data from the local computer. The size of the , r,^/(0 can be described as: (2.9)
< / 2

buffer is assumed to be rj^. At time

/ ; ^ / 0 = {LTC{ij)\ \ < j < r , }

where y, is the number of packages in

at time r^,(/), and /,

<-<i^ .

This is

the data that the controller bases on to predict the future control signals. L^(i) is reset at each starting time of the execution of the controller computer. Let r^^be the buffer to store the control signals produced by the controller. queue, and has the size of
% > 3 //.

is a first-in, first-out (FIFO)

For this system, the following assumptions are made: (Al) There exists a constant rj^such that the delay of reliable data transfer from the controller computer to the local computer is less than (A2) There exist three constants
T^, n ,

.

such that, if « packages are randomly sent ,there must be

from thecontrollercomputer to the local computer during time period

at least onepackage correctly received by the local computer with a delay less than F^^. (A3) // is selected such as: //>max(l + ^-^J;'"^" , ^ ) A Tp lAip (2.10)

17

where

is the maximum control strategy computing time for the controller computer,

namely, the time period from the moment that the controller computer reads the data in rrjw/(0 to the moment that all the control signals for the current packed into C2X(/). Assumption Al can be satisfied by QoS technology, according to [37]. The assumption Al requires a reliable data transfer. The three constants,
T^, n ,

are put in

and

and

in the

assumption A2 obviously exist. Otherwise, there will be no correct transmission of information via Internet. For instance, if
Ji

does not exist, there would be no successful

data transfer, no matter how many attempts. This is obviously impossible. The same situation occurs if either 7^ or does not exist. Therefore, the assumption A2 is

reasonable. The assumption A2 does not require reliable transfer for each single packet. However, it is important to select reasonable values of 7^, « , . Under the assumption

A3, a proper value for // can be chosen. Therefore, the proper relationship between A7^ and
ATp

is established. Hence the following inequalities are satisfied:

1. ATc^ATp+T,+T, + f,,

This inequality guarantees that the new control signals computed in current arrive at the local computer on time. 2. A7' c > r,,

AT(.

This inequality guarantees that at least one new package from the local computer will arrive at the controller computer, and be used to compute the future control signals at each /c(0-

18

CHAPTER 3 INTERNET BASED CONTROL SYSTEM DESIGN 3.1 Control Scheme Overview
In this section, an Internet based control method is developed for a class of linear discrete-time plants to achieve asymptotic stability. The control strategy is to use an observer-based predictor to predict the future control signals by using the previous outputs of the plant. To counteract the effect of controller-to-actuator delay, the predicted control signals are available at the local computer side before the local computer needs them, so that the actuator does not have to wait for the control signals. The sensor-tocontroller delay is taken care of by the prediction using the past information stored in buffer In order to predict accurately, the clocks of the remote computer and the local computer are synchronized by using network time protocol (NTP) [40]. NTP is established as an Internet standard protocol and is used in the Internet to synchronize clocks and coordinate time distribution. NTP is built on IP and UDP. It is designed to maintain accuracy and reliability of the synchronization of the Internet. The main idea of the control strategy can be considered as two steps. The first step is that the observer-based predictor predicts the future state variables, utilizing the past information that is stored in the receiving buffer. The second step is that the future control signals are obtained from the predicted state variables by using a state feedback. In Figure 3.1, the system at time instance packages, i.e.,Z,rc(/,),irc(/ ), ..., and
2

tc(j)

is outlined. At this moment, there are y, arrived. Therefore, y, outputs are in the ) is the first package that

LTCQ^^)

buffer r,.^(!). During the time interval [ (; - 1), (z) ],

19

arrives at the controller computer, while controller computer reads all the data in

LTC(i^^)

is the last arrived package. The

r^^u/Q) ,

and then deletes them to make the buffer . Since
yU J

frfe/O) available for new data. To be convenient, let

are available, they can be used for the observer based prediction of the state variables. The remaining state variables will be predicted using the linear plant model. Therefore, the control signals, m((/+ 1)//),···,«((/ +2 )//-1), are obtained by using the state feedback technique, and then sent to the local computer. The control signals arrive at the local computer before the time instance
tc(i + ï) = t p ( { i + ï ) ^ ) ,

according to the assumption A2. and produce the outputs. Thus,

The plant will take the control signals during the next

AT^

a single cycle of control law completes. The local computer and the controller computer run simultaneously to maintain the control cycles.

3.2

Control Scheme Synthesis
To ensure the system work properly, a system initialization needs to be done

carefully. Suppose that the system starts at time instance fg=0. Some information, such as the control signals and sensor outputs before r,, need to be available before starting the calculation of the control algorithm. The initialization is to fill the buffers at time instance information. and

Hence, the further control signals can be obtained using the

20

Local Computer
x{k +1) = Àx{k) + Bu(k) y(k) = Cx(k)

Internet Synchronized

ubuf

rbuf

State Feedback Controller Controller Computer

Observe Based Predictor

Figure 3.1 The outline of the Internet control system

There are two components for the system initialization: 1. For the remote computer: Let crz,(-l) = {(u(s),tc(-l))|5e[0,//-l]}, and store {(«(s)|se[-//,//-l]} into reasonable values to all the
2. u (s).

and set

For the local computer: Let crL(-2) = {(M(s),tc(-2))|se[-//,-l]} be available, and set reasonable values to all the
m (s).

The local computer sends Z,rC(-//) = (y(-/^),t/> (->")) to the controller

computer, so that L(^(0) is not empty at time /c(0). After the initialization, the system is able to start. At each time instance where i = 0,1,2,3,-- , the controller performs the following operations:
tcii ) ,

21

1. During the time interval following procedure: · For
x(k +11 i)

[fc(;),fc(() + 7}], the controller computer completes the

= Ax(k Ik) + Bu(k) + L(y(k) -

Cx(k | k))

(3.1) (3.2)

x(^ + l|A: + l) = x(A : + l|A:) where ·
k

is the time index,

u(k) e

, and

y(k)

e

.

F o r A: e D ,, + 2, (/ + ! ) ; /] , If« 1 )= where w(A:-l)er,^.
-^ \J ,, ) + B u (k -l)

(3.3)

·

For ^ e [(/ +1)//+ !,(/ +2)//],
i( k \j,, ) = A k ( k - \ \ J J + B u (k -l)

(3.4)

·

For t e [(/ + l)fi +1, (; + 2 )/j],
U (k - l) = - l ^ ( k - l \ j j

(3.5)

Then enqueue · Pack
u(s) (s e

u(s)

(j6[(/+1)//,(/+2)//-1]) into
CTL(i),

[(i +1)//, (i+ 2)// -1]) into the package
u(s) = - K k ( s Ij j , s

hence, (3.6)

crx(0={(«(5),/c(0)l e [(/ + l ) M i +
[tciO + T ^ ,

~

1]}

2. With the time interval package
CTL(i) n

/c(0+^r+T^]» the controller computer sends

times to the local computer, so that the package will be available at , according to the assumption A2.

, the local computer within the delay

The local computer works simultaneously to produce the feedback signals for the controller. According to the assumptions A2 and A3, the package
C T L (i-l)

can be

received by the local computer at time /p(/'n) at the latest. Therefore, the control signals

22

«(/», where

+

... ,

m ((i + 1)//-1) are available at the local computer. At each time the local computer performs the following operations:
u { j ) , and

tp{j),

j e [ifi, (/+!)//-!],

1. Open the received package, read the control signal 2. Pack the package as LTC(J) =

send it to the actuator.

, and send it to the controller computer.

In order to show the operation procedure of the control system, three situations are discussed. At first the case with the critical condition: considered. Figure 3.2 presents the situation. (0 Controller Computer:
£ ATp tc(i + 1)

= A7> + ?; + r, +

is

b
Tr

c
T, ^Tc=^sc

d

e
ATp

f

^

Local Computer:

Figure 3.2 The case with the critical condition A7^ = ATp +T^+T^ + r ^ = r ^

At time

Ae controller computer starts the /'`execution. After time period
CTL(i)

r , , i.e., at the moment c, the package

is available at the controller computer. From
CTL(i)

the moment c to d, the controller computer sends so that
CTL(i)

to the local computer

n

times,

is available on the local computer side at the moment e the latest.
CTL(i),

From the moment e to f, the local computer open the packet

read the

control signals. At time (^((/ + !)//), the local computer starts the((/ + l)//)'* execution. After period ATp, the packageirc((/+l)//) is sent to the controller computer and will arrive at the controller computer before time (/+2).

23

tc (0

t c (' + l)

Controller Computer:

^
Tr

1 ""i ! 7: i
A T c = fiA T p ATp

1

I I h ! '!

,

1

Local Computer: h
Figure 3.3 The case with the condition A7^ +T^+T^+ t^ >

(p ( ( / + ! ) /( )

^c(0 Controller Computer:

tcO + 1)
ATp

t

ATc=/iATp

Local Computer:
tp iifi)

fp((/ +!)//)
> ATp + T^+T^+ t^

Figure 3.4 The case with the condition

Furthermore, under the assumption A3, there are two other possibilities for the control system,
ATp

+7; +?; +r,, >

and r,, > ATp +T^+T^+Y ^, which are demonstrated

in Figure 3.3 and Figure 3.4. Moreover A7^ is selected to be at least the maximum of
ATp+T,+T,+r^ LTCiii + l)//)

and f,,. If A T p + T , + T ,+ T ^ > f ^ is the case, not only the package

arrives at the controller computer before time tc(i + 2), but also more

packages will be available at the moment ((.(7 + 2), i.e., LTC((i+ 1)^ + 1), ... , Z,rC((i + l)// + m), where future control signals. Hence, more new data can be used to predict the

24

If

> ATp +T^ + T , + f ^ ,

it is guaranteed that the package z,rc((/+l)ju) is available
tc(i+ 2 ).

at the controller computer before time available at time t d i + 2), since

However, there will be more packages
AT^ > f , , .

is an upper bound and

3.3

Stability Analysis
For
= {LTCU) Ih

Lem m a 1

at time

tcQ) , tp{i,.)< tpQd)

is true. must be

Proof: in

Suppose that, at time before time
td i).

tc (i) , tp ii ^.) > tpQ/j ) .

Then

LTCQfi) = {y{ifi),tpiifi)}

From (2.5),

tp{i/j) = t d i ) ,

which means the delay from the

local computer to the controller computer
tp% ) < Lem m a 2

<0. This is obviously impossible. So

must be true. There is no overflow under the proposed control strategy with the
F^^fii)\s

assumptions A(l), A(2), and A(3), if the size of the buffer
d sc_

designed as:

TJr > d +

l AT), J

+2

(3.7)

where the symbol

is denoted to be the maximal integer less than the real number s .
1>tj^

Proof: Assume that there exists an integer
^rbuf^) = {i'TC{j)\h

such that

LTC{i,)

is in

From Lemma 1, we have

tp(ii)<tp(ifj).

From (2.5), we have

tpih) < td O

is true.

Since /p(/,) -/p(/,) = (/-1)A7>, the following inequalities are satisfied:
tdO -tp{iô>(l-i)àTp
^/>('i) < t c ( i ) - ( f J r

S/o +*A7^ -- (// +

A4

+ 2 -l)A 4

25

^ tc (.i-l)-T ^ -A T ,

(3.8) Xh) should be at the

As

aresult,/c('~l)></>('i)+^7> + r^c is true, which means that

controller computer before time fX'-I)- Hence, XA) should be used during the (/-I)'* execution of the controller, and would not be in
r^buf(j)

, which is a contradiction.

Lemma 3 Using the proposed control strategy with the assumptions A l, A2, A3, and (3.6), there exists f > 0 such that
u(k) = - K i ( k \ k - T ( k ) )

with

0 < rik )< T

(3.9)

Proof:

Let r>2//+

ATp

+1. For all

s < k - T , LTC{s)

is received by the controller
r^bu/O)

computer before time and
LTC(s)

tp(k-F)+ATp+T^^.

From Lemma 2, no overflow occurs for

can be used to compute the control signals, which are received by the local
tp (k-T )+ A T p +

computer before

+ 2ATc . Note that

tp{k) = tp {k -T ) + vATp + \)ATp

ATp

> tp {k -T )+ A T p + ?,^+2ATc

(3.10) 0< v(k) ^ F .

Hence, for j <it- F , LTC(s) must be used to compute The closed-loop system can be represented by

u(k) , and

x{k+\) = Ax(k)-BKi{k\k-T(k))

(3.11)

where 0 < X*) ^ F. The asymptotic stability for the closed-loop system is presented in the following theorem: Theorem - I f there exist K and L such that the eigenvalues o f A - B K and A - L C are within the unit circle, then the closed-loop system (3.11) is asymptotically stable under the proposed control strategy and the assumptions A l, A2, A3, and (3.7). Proof: For all t> F , let

26

e{k) = x {k \k )-x {lc )

(3.12)

and
tp(k) = x{k Ik - r(k)) - x{k)

(3.13)

From the equations (2.2), (3.1), and (3.12) the following equation is obtained:
e(k + \) = {A -L C )e{k)

(3.14)

From (3.11) and (3.13), the following equation is true:
x{k +1) = (^ - BK)x(k) - BKç(k)

(3.15)

Let (y(t, j ) = x ( j \ k Then, the following equation is obtained:
y / ( k ,k - r(k )+ l) = ( A - LC)e{k - r(k))) T(ky) - x (j)

(3.16)

(3.17)

and for

k -f(k )+ 2 < j < k , y /(k ,j) = A y / { k J - \ )

(3.18)

From (3.13), (3.17), and (3.18), the following equation is true:
<p{k) = y/(k,k)

= A^^'^^-\A-LC)e(\k-T(k))

(3.19)

Let ^(Â :) = [x(it)

e(Jk) ...

e(t-f)]^, the following equation is obtained:
x {k + \) = 0{k)x{k)

(3.20)

where
0 {k ) =

A-BK

*
0'

0

(3.21)

where * represents the part which does not affect the stability analysis, and
A-LC 0 0 A-LC

<P'=

0 0
A^LC

(3.22)

0

0

Hence, the closed-loop system (3.11) is asymptotically stable, provided that the eigenvalues o f A - B K and A - L C are within the unit circle. Thus, the proof is complete.

27

CHAPTER 4 INTERNET BASED CONTROL SYSTEM SIMULATION
Computer simulations were conducted to examine the results of the theoretical analysis. The objective of the simulations is to demonstrate that the design of the Internet based control system achieves asymptotical stability. This chapter is organized as follows. The DDARM model and linearization is described in Section 4.1. The procedure of the simulation is outlined in Section 4.2. The simulation results are presented in Section 4.3. Finally, conclusions are drawn from the simulation results in Section 4.4.

4.1

DDARM Model and Linearization
In the simulation, the DDARM model is used as a plant. Using Lagrangian

equation in classical dynamics, the dynamic equations of the robot can be obtained as [41] + where
q i ,q , , and qi

+

=r,

i = \,2 ,-,n

(4.1)

position, velocity, and acceleration of the /th joint, respectively; effective and coupling inertias; coefficients of centripetal and Coriolis forces; gravity force; friction force at the fth joint; disturbance at the /th joint; input force (or torque) acting at the /th joint;

£),,, J
gi

Dy

(^ijk

/,
df

28

To simplify the simulation, only one joint is set in motion, while the other joints are fixed. Considering the DDARM being set horizontally, the dynamic equation for one joint of the DDARM is then reduced to: X= Mq + X y where A/ =1.05 [41] and technique as follows (4.2)

is friction force at the joint. Using the feedback linearization
X=

Mu + X ,

(4.3)

The following system is obtained:
q=u

(4.4)

The linearization can be shown in following graph:

Linearized System

DDARM Control signal System output

Figure 4.1 Feedback Linearization

Let

x=^[q

q j

, and consider the position as output of the system. The system equations

can be rewritten in state space as follows:
x = A^x+B^u
y = C ,x

(4.5) (4.6)

where
29

=

0 r , 0 0

B^ =

"o' , and C g = [l o]. 1

The model is converted to a discrete model as
x{k + \-) = A x{k) + B u{k) y{k) = Cx{ k)

(4.7) (4.8)

wherex & R " represents the state output, and the matrices A,
B,

variable,

u e R ` is

the system input,y e R " is the system =6"^^, and

and C are of compatibledimensions, A

5 = ( f e `*^^dT)B^. When the sampling period T = \Oms , we have
A= 'l 0.01" '5x10^' , B= , and C = [l 0 1 0.01

o].

4.2

Simulation Procedure
The simulation procedure is outlined in Figure 4.2. Initialization is to assign some

initial value to the control signals, state variables

x

, and the observed state variables

x

.

Moreover, the output of the system is calculated using the model represented by equations (4.7) and (4.8), and then stored into time
tc (0 ) .

. Therefore,

is not empty at

At each time

tc (i ) ,

the controller reads the data from

, and then performs

calculations of the control algorithm. Since the Internet delay is random, upper bounded, and non-zero, the number of packets in
r^tuf

at each time

tc(i)

is a random number in

the range of [1, // ). In other words, the random Internet delay results in different lengths of the buffer
r^tuf

at each computing instance. This property is used to simulate the

30

Internet random delay. Therefore, a random number generator is used to determine the length of the queue. Initialization

Packet the output of system
ài

Send the packet via the Internet

Packet(s) arrive 3 ^t ^rbuf

The plant consumes the control signals

Controller reads random number of packets

Random number generator

Perform the control algorithm Send the packet via the Internet

Reference inputs

Packet arrives at the local computer

Packet the control signals

Figure 4.2 The outline of simulation procedure

Once the controller obtains the outputs from the buffer, it performs computation of the control algorithm, and the data that has been read is deleted to free the space for incoming packets. The implementation of the control algorithm is outlined as follows. First, the observer state variables Jc can be obtained using the Equations (3.1) and (3.2) based on those outputs that arrived at the buffer
Frbu/ · Second, r^i^j-,

for those outputs that are

still being transmitting on their way to the buffer

observer state variables can be

calculated using Equation (3.3). Finally, the future observer state variables are computed using Equation (3.4). Meanwhile, the
p

future control signals are predicted using
p

Equation (3.5) and put into another queue. These

control signals are then packaged

31

into a packet that will be available for the plant before the next starting time of the execution for the controller computer. The
n

control signals are read from the queue, and used to control the plant
n

during the next AT^.

outputs are obtained using Equations (4.7) and (4.8). They will

be stored in the queue that contains the system outputs. Since the control algorithm arranges time wisely, this procedure will go continuously unless the controller stops it. To demonstrate that the objectives have been reached as mentioned at the beginning, two situations are simulated as follows. First, an initial error is used to show the asymptotical stability of the system.^ The reference inputs are considered to be zero, since they will not impact on the stability of the system. However, the reference inputs are introduced to show that the system output follows the desired output. In this simulation, the introduction of the inputs is demonstrated in Figure 4.3. In this approach, desired state variables,
x^,

are used as the reference inputs. The reference input

is given at

controller side. After the introduction of the reference input, the control law will be modified based on Equation (3.5). The remaining of the control algorithm will not change.

32

x{k+\)= A oO c)+ B t()c) yik) = Co{k)

Internet Buffer for Control Signals State Feedback Controller Reference Input
Figure 4.3 The approach of introduction to the inputs of the system

Buffer for Outputs

Observe Based Predictor

4.3

The Simulation Results
To show the stability o f the proposed Internet control system, an initial error is

used. Let /(, = 0.9 , A7> = 0.0 L , A7^ = 0.04s, // = 4 , and

= 0.03s. The initial conditions are

X-7) = [- 0.2 0.6f and Jc(-71 -7) = [0 0]^, and «(/) = 0 for / < 0 . The values o f K and L can be determined by the eigenvalues o f A - B K and
A - L C . Let the eigenvalues o f A - B K be (0.6 0.5), and the eigenvalues o f A - L C be

(0.1 0.2). Thus, we obtain A "= [20 8], A= [l.7 7.2]^. It shows that the system achieves asymptotical stability in Figure 4.4. Note that the value o f j:(0) is not zero, because the system initialization requires that the initial value o f x(k) has to be given seven steps before the time instance /q >according to the proposed control strategy. The value o f % (0) is obtained using the given model and the initial value o f %(-7).

33

1.5

--

Position (Rad) _ Velocity (Rad/Scc)

0.5

-0.5 -

-1.5

Time (Sec)

Figure 4.4 Stability of the system

Although the system could be influenced by many factors, such as the Internet delay, the value of
K

and

L , the

value of n , the stability of the system remains, which is

showed in Figure 4.5,4.6, and 4.7.

--

Position (Rad) - Velocity (Rad/Sec)

i I

Time (Sec)

Figure 4.5 System response with Internet delay longer than 0.85r^

PsopaïïvoF
34

In Figure 4.5, it shows that the longer Internet delay results in the larger variation range for the state variables. Precisely speaking, longer Internet delay means that the Internet delay is longer than 0.85f^^ all the time. The eigenvalues of A - B K and A - L C impact on the value of K and L , which in turn impact on the system. Figure 4.6 shows the case that the eigenvalues of A - B K is (0.8 -0.2) , and the eigenvalues of A - L C is (0.4 0.3), therefore, AT=[15.73 12.6], L = [l.3 4.2]^. The value of
n

also influence on the system

significantly, since it represents the number of predicted control signals in one control period. Thus, the larger the value of // is, the less accuracy the system has. Figure 4.8 shows the case of // = 6.

2.5

--
1.5

Position (Rad) _ Velocity (Rad/Sec)

I
B

0.5

-0.5

-1.5

Time (Sec)

Figure 4.6 System response with K = [15.73 12.6], L = [l .3 4.2]^

35

8

6
--
4

Position (Rad) _ Velocity (Rad/Sec)

2

0

-2
-4

-60

1

2

3

4

5

6

Time (Sec)

Figure 4.7 System response with // = 6

Once the stability is achieved, it is expected that the outputs of the system follow the desired outputs. The approach outlined in Figure 4.3 is used in the simulation for the introduction of the input. Let the feedback gain, as (* -1) where
q=q^-q, K=

The control law is modified

-1) -

k^qik -

1)
A -B K

(4.9) that is

and

q ^is

desired position. Using the eigenvalues of
s].

(0.6 0.5)

in this case, we obtain /: = [20

The observer gain remains Z , = [l.7 7.2]^.

Figure 4.8 shows the output response in the case of step input.

36

1.2

0.9

S 0.7 0- 0.6 0.5 0.4 0.3 0.2 ,

Time (Sec)

Figure 4.8 Output response of the system with step input

1.8 1.6 1.4 1.2

6

0.6 0.4 0.2 !

- 0.2

Time (Sec)

Figure 4.9 Output response of the system with Internet delay less than 0.3x^^

When the reference input is involved, the factors, such as the Internet delay, the value of
K

and

L , and

the value of //, still have significant impacts on the system. Figure 4.9 and

4,10 show that the results with different Internet delays. Figure 4.9 shows the case that

37

the Internet delay is less than 0.3i^ all the time. Figure 4.10 shows the case that the Internet delay is longer than 0.9t^ all the time.

3.5

2.5

1.5

0.5

-0.5

Time (Sec)

Figure 4.10 Output response of the system with Internet delay longer than 0.9% ^^

Figure 4.11 shows the case of A:=[10 15], Z -= [l.7 7.2]^, however, the Internet delays remain small. Figure 4.12 shows the case of //=6. Figure 4.13 and 4.14 show the results with a significant change of the reference input.

38

I
g 0.6

I
0.4

0.2

Time (Sec)

Figure 4.11 Step response of the system with A' = [10 15], L = [l.7 7.2]^

2.5

I

I

0.5

Time (Sec)

Figure 4.12 Step response of the system with // = 6

39

2.2

1.8 1.6 1.4

g1 .2

0.6 0.4 0.2

Time (Sec)

Figure 4.13 Output response of the system with increase change reference inputs
1.2
1.1

C 0 .7 -

O. 0.6
0.5 0.4

0.2

Time (Sec)

Figure 4.14 Output response of the system with decrease change reference inputs

4.4

Simulation Results Discussion
The simulation results have shown that the design of the Internet based control

system achieves asymptotical stability. Some factors, such as, Internet delay,

K , L,

and

40

//, affect the system performance significantly. However, the system stability is maintained. Moreover, the system outputs can be controlled to follow the desired outputs, although the mentioned factors could influence on the system characteristics significantly. Figures 4.4 and 4.8 show the normal cases, in which the Internet delay is random within the range of (Os, 0.03s), the value of the feedback gain and the observe gain are calculated Ifom reasonable given eigenvalues, and
n=A.

On the other hand, the

remaining figures show that different factors change the system characteristics in different ways. From the simulation results, the following are observed: 1. The control strategy achieves the asymptotical stability, although many factors change the system characteristics. 2. The Internet delay impacts on the system characteristics significantly. When the Internet delay is near to the upper bound delay
t^ c

the time, a big overshot

appears in the step response. On the other hand, the performance of the system is very good when the Internet delay is short. 3. // is another factor that influences on the system output considerably. It is shown that overshot become larger if the value of 4. The feedback gain
K, n

is increased.
L

and the observer gain

also influence the system

performance. They can be adjusted to reduce the overshot, or to decrease the transient time.

41

CHAPTER 5 EXPERIMENT OF THE INTERNET BASED CONTROL SYSTEM 5.1 Description of The Apparatus
To demonstrate the asymptotieal stability of the proposed control strategy and the characteristics of the Internet based control system, experiments are conducted as presented in this chapter. The DDARM is chosen as a plant. The main idea is to linearize the DDARM dynamics locally, and then apply the proposed control to the linearized model. It is described in Figure 5.1.

Control Signals

Output Feedback Linearization DDARM

Linearization Loop

Temporary Buffer Delay
r^a

Temporary Buffer Proposed Control Law Input Computer Random delay
t^ c

Figure 5.1 The outline of the experiment

42

Since the QoS technology has not been deployed in the current Internet as mentioned in Section 2.1, the upper-bounded Internet delay does not exist yet in the current internetwork. Therefore, the assumption A1 cannot be satisfied in the reality. In this experiment, the Internet delay is simulated using the program as shown in Figure 5.1. In order to achieve the simulation, two buffers are needed to hold the data. Feedback linearization is typically utilized to simplify system dynamics so that the well-developed linear control techniques can be applied to design the control law for nonlinear systems. In this thesis, using an example plant of DDARM, we propose to linearize the plant dynamics locally using local feedback linearization, and the Internet based overall control is synthesized for the linearized system.

n

Figure 5.2 The demonstration of DDARM and the control computer

The DDARM facility is a two-link planar direct-drive manipulator as shown schematically in Figure 5.2. It consists of two Yokogawa DC motors DNA 1050 and DMB 1035. Both motors are equipped with incremental joint encoders, which have resolutions of 1024000 and 655360 pulses per revolution, respectively. The currents supplied to the motors are controlled by Dynaserv motor drives. The arm communicates

43

with a computer via an analog to digital (A/D) card (AT-MI-16) and a digital to analog (D/A) card (AT-A-6/10) that are produced by National Instruments. The control program is written in the C language. To simplify the experiment, only one joint is used. The specific technical information of joint A can be found in Table 5.1. Figure 5.3 shows a picture of the DDARM. Resolution of Encoder (pulses/revolution) 1,024,000 Maximum Speed (revolutions/second) 1.2 Maximum Torque (Nm) 50 Torque Ripple (%) 5

Brand of Motor YOKOGAWA

Table 5.1 Technical Information of DDRAM (Joint A)

Figure 5.3 A picture of DDARM

5.2

Experiment Procedures
As mentioned above, the experiment procedure includes control signal

computation and feedback linearization. The whole procedure is implemented in the DDARM control computer. Figure 5.4 shows the procedure. The initiali ation is to define
2

44

all the needed variables, such as the system model, gains, and buffers, and assign the initial value to them. The outputs are obtained from the sensor of the DDARM. The analog signals are converted to digital signals using the A/D card before being sent the computer. The computer read the feedback signal and save it into a buffer. Then the program will judge if the computation is needed based on the current time. If the time period that is from last computation time to current time equals to the control period, Afc >then the program performs the control algorithm. Otherwise, the program performs the feedback linearization. The control algorithm is implemented as follows. The program generates a random number between one and
n

. Since the possible number of
n

arrived feedbacks could be minimum one and maximum

, the number of feedbacks

used in this computation can be obtained. After, the feedbacks are obtained, the observer state variables
x

can be obtained using the Equations (3.1) and (3.2). For those outputs

that are not available yet, observer state variables can be calculated using the Equations (3.3). Finally, the future observer state variables are computed using the Equations (3.4), meanwhile, the
n

future control signals are predicted using the Equation (3.5) and put

into another buffer. Then the program takes one control signal from the buffer to perform the feedback linearization using Equations (4.3). The torque will be obtained after the linearization. The program will check if the torque exceeds the limitation of the DDARM before it is sent to the machine. The torque is sent to motor through the D/A card and drives the arm moving. The sensor will measure the current output and send it to the A/D card. The procedure will repeat unless the experiment period is finished. Note that purpose of the experiment is to demonstrate the asymptotical stability of the Internet based control system. The accurate friction model of the DDARM is not in

45

the scope of this experiment. In this experiment, the friction torque is assigned to be a constant. In order to show the asymptotical stability of the Internet based control system, a sinusoidal desired trajectory is designed. Initially, the velocity of DDARM is zero, and the position of DDARM is set to be zero. In order to minimize the initial errors, the desired trajectory is designed as follows:
qj=l-cost

(5.1)

where

is the desired trajectory and

t

presents time. And the desired velocity and

desired acceleration are as the Equations (5.2) and (5.3).
qj=sint
qj = cost

(5.2)

(5.3)

where

q^

is the desired velocity, and

ijj

is the desired acceleration. With the Equations and
q^ = 0

(5.1) and (5.2), the initial values are errors are zeros.

q^ = 0

at time / = 0. Therefore, the initial

The Figures 5.5, 5.6, and 5.7 show the desired trajectory, the desired velocity, and desired acceleration, respectively.

46

Initialization

Read feedback and store it in a buffer

Need eomputation?

Generate a random number and decide the number of feedbacks used in this eomputation

Read the feedbaek
^ r

Perform the eontrol algorithm Save the eontrol signals in a buffer

Read one eontrol signal from the buffer and perform the feedback linearization Send the torque to the DDARM

End?

End

Figure 5.4 The outline of the experiment procedure

47

I §
0.2

·0.2

Time (Sec)

Figure 5.5 The graph of the desired trajectory

0.5 0.4 0.3
0.2

«

- 0.1

- 0.2

-0.3 -0.4 0.5

Time (Sec)

Figure 5.6 The graph of the desired velocity

48

0.5 0.4 0.3

IT 0.2

<

- 0.2

-0.3 -0.4 -0.5

Time (Sec)

Figure 5.7 The graph of the desired acceleration

5.3

Experimental Results
As described in the Section 4.2, the DDARM can be modeled as follows after

feedback linearization and descretization.
x(k + l) = A x(k) + B u(Jk) y{k) = Cx{,k)

(5.4) (5.5)

where
A=
1 0.0 r 0 1

, g=

5x10-^'
0.01

, and C = [l o],

when the sampling period is set to be T = lOmj. After a trial and error tuning, the gains K and L are set to be A "= [100 10], Z , = [l.5 5 6 f . Thus, the eigenvalues of A - B K is
. 0.9475±0.085 lly,
ATc = 0.055,

and the eigenvalues of A - L C is (0.2 0.3). Let (,, = 0^, AT), = 0.0 is, = 0.055 . The initial conditions

// = 5, and the upper bound Internet delay

are ;c(-7) = [o of and ;c(-7|-7) = [o o f, and m (/) = 0 for / < 0 . Therefore, all the

49

conditions of the Theorem in Chapter 3 are satisfied in this example. The desired and actual trajectories are shown in Figure 5.8. Figures 5.9 and 5.10 shows the velocity and the torque. Figure 5.11 shows the average delay from the sensor to the controller for each
ATr

Actual Position - Desired Position

0.6

I
s.

0.4

.1

- 0.2 -

-0.4
0

5

10

15

Time (Sec)

Figure 5.8 The position of DDArm at A7^ =0.01.9, // = 5

0.8

--
0.6 0.4

Actual Velocity - Desired Velocity

-0.4
- 0.6

- 0.8

Tune (Sec)

Figure 5.9 The velocity of DDArm at ATp = O.Ofr, // = 5

50

I
î
-10 -15 -20 -25

Time(Sec)

Figure 5.10 The torque of DDArm at A7^ = 0.01^ ?

=5

100

150

200

Sequence o f controlling period

Figure 5.11 The average delay,

, for each A7^

Friction has a significant influence on the experiment. Friction is caused by complex interactions between two contact surfaces. It considerably depends on the relative velocity of two surfaces. The Tustin model, which is one of the most popular
51

friction models, has been selected for the task of friction compensation in this thesis. The following equation presents this friction model. V= where, and
F^

+ (^s

-

+K4

(5.6) is

are denoted as static friction and coulomb friction, respectively.

the coefficient of viscous friction. P, represents the velocity related to stribeck effect. Finally, and
q

are the frictional force and relative velocity of two contact surfaces. with

Hence, this particular model has four parameters defining the frictional force given velocity
q

. The function

sign(,q)

is defined as
+1 if q > 0 if q = 0 if q < 0

sign{q) =

0
-1

(5.7)

Using this friction model, the Equation (4.3) is revised as
t

= M u + [F, + (F ,-F ,)c x p (-(j-y )]sig n iq ) + F,q

(5.8) and and

According to [42], we obtain that
V, = 0 . l r a d / s V ,= 0 .2 3 ra d ls

F^ =10.57Nm, F ^=7.4\N m , F^ = 3 . 0 l N m - s l r a d , F, =S.6N m, F^ =5.8Nm , F,, = 4 N m - s l r a d ,

when the velocity is positive;

when the velocity is negative. The desired and actual trajectories are

shown in Figure 5.12. Figure 5.13 shows the average delay from the sensor to the controller for each . Figures 5.14 and 5.15 show the velocity, and the torque.

52

Actual Position Desired Position
0.8

0.6

Î
§

0.4

a

0.2

- 0.2

-0.4 0

5
Time (Sec)

10

15

Figure 5.12 The position of DDArm with the friction model

£
% 30

20

100

150

200

Sequence o f Controlling Period

Figure 5.13 The average delay,

, for each AT^

53

0.8 0.6 0.4

Actual Velocity Desired Velocity

« -02
-0.4
- 0.6

Time (Sec)

Figure 5.14 The velocity of DDArm with the friction model

I I H
-10
-

-15 -

-20

Time (Sec)

Figure 5.15 The torque of DDArm with the friction model

To demonstrate the impaet of the Internet delay on the proposed control system, the cases that the upper bound Internet delay are 0.065^, O.OSj , O.Ij are discussed. Figures 5.16, 5.17, and 5.18 show the desired and actual trajectories, the velocity, and the torque with the upper bound Internet delay being 0.065^.
54

--

Actual Position Desired Position

0.6

·o
2

§
2

0.4

0.2

- 0.2

-0.4 0 5 10 15

Time (Sec)

Figure 5.16 The position of DDArm with

= 0.065s^

0.8 0.6 0.4

--

Actual Velocity Desired Velocity

02

Ü

- 0 .2

-0.4
- 0.6

-0.8

Time (Sec)

Figure 5.17 The velocity of DDArm with

= 0.0655

55

I
-10

-15

-20

Time (Sec)

Figure 5.18 The torque of DDArm with

= 0.0655
65m s

Although the performance of the Internet delay being

is acceptable, the

situation becomes worse when the upper bound Internet delay reach SOmj. Figures 5.19, 5.20, and 5.21 show the desired and actual trajectories, the velocity, and the torque with the upper bound Internet delay being 0.08s.

--

Actual Position . Desired Position

0.6

0.4

P

0.2

- 0.2

-0.4
0

5

10

15

Time (Sec)

Figure 5.19 The position of DDArm with

= 0.08s

56

Actual Velocity

Desired Velocity

0.6 0.4

U

-0.2

-0.4
- 0.6

- 0.8

Time (Sec)

Figure 5.20 The velocity of DDArm with

= 0.085

I
I

I

-10

-15

-20

T m e (Sec)

Figure 5.21 The torque of DDArm with

= 0.08^

If the upper bound Internet delay is increased to be lOOm, the actual output hardly follows the desired trajectory. Figures 5.22,5.24, and 5.24 show the case.

57

~ Actual Position _ Desired Position
0.8

0.6

0.4

P

0. 2

-

- 0.2

-0.4 0 5 10 15

Time (Sec)

Figure 5.22 The position of DDArm with

= O.ls-

--
0.6 0.4 0.2

Actual Velocity _ Desired Velocity

· s -0.2

-0.4
-0.6

Time (Sec)

Figure 5.23 The velocity of DDArm with

= O.lf

58

I
I

I

-10

-15

-20

Time (Sec)

Figure 5.24 The velocity of DDArm with

= O.I5

5.4

Experimental Results Discussion
The experiments are conducted using DDARM to evaluate the proposed control

strategy, and the results have comfirmed its effectiveness.The experiment results not only show that the system output follows the desired output, but also demonstrate the impacts of the Internet delay on the system. The experiments evaluate the different cases, in which the upper bound Internet delay are 50ms, 65ms , 80ms, lOOms, respectively. The performance of the system degrades when the upper bound Internet delay increases. From the experiments results, the following are observed; 1. The system output follows the desired output dynamically.

59

2. The Internet delay impacts on the system characteristics significantly. The output follows the desired output well when the upper bound Internet delay is short, while the output hardly follows the desired output when the upper bound Internet delay is long. 3. Selecting a good fiiction model improves the system performance dramatically. Note that the cases of the upper bound Internet delay being shorter than 50ms are not covered in the experiment, even though the performance will be even better in those cases, because such a short delay is not common for the Internet.

60

CHAPTER 6 6.1

CONCLUSIONS AND FUTURE WORK

Conclusions
This thesis was concerned with the Internet-based state feedback control strategy

using a state predictive estimator. In order to demonstrate the proposed work, a direct drive robot, DDARM, is used as a sample of plant. Feedback linearization technique is integrated into the proposed control strategy. The proposed control scheme compensates the random delays and achieves asymptotical stability without the condition of reliable transmission from the controller computer to the local computer. The demand for high performance Internet access is thus reduced. After the simulation results had validated the use of the proposed method, experiments were conducted to demonstrate the effectiveness of the proposed control method. In Chapter 1, the motivation of the research is introduced. The background of the NCS and Internet based control systems is reviewed. Current research in the literature is briefly described. Finally, the major contributions are introduced. In Chapter 2, the differences between LAN delay and the Internet delay are described. The characteristics of Internet delay are discussed. Moreover, the formulation of the Internet based control system using observer-based predictor was described. Some assumptions are made and explained. In Chapter 3, the control strategy of Internet based control system is described. The process of the proposed control strategy is explained. Lastly, the asymptotical stability the proposed control strategy is theoretical proved.

61

In Chapter 4, computer simulations were conducted to confirm the theoretical analysis. The procedures of the simulation were described. The simulation results of the Internet based control system were shown and discussed. In Chapter 5, the experiment apparatus and the experiment procedures were described. The experimental results of the Internet based control system were presented and discussed. In conclusion, the proposed approach has achieved the asymptotical stability. The utilization of the standard communication protocol (TCP, UDF) in the approach reduces the complexity of the system design and increases the modularity. Reliable data transmission Ifom controller to actuator is not required. Therefore, the requirement for high performance Internet access is reduced. Using the linearization techniques, the proposed control strategy is extended to nonlinear system. Lastly, computer simulations and experiments are conducted using DDARM to evaluate the proposed control strategy, and the results have comfirmed its effectiveness.

6.2

Future Work

Regarding the control precision issue, the following future work is recommended: 1) Apply the proposed approach to the real Internet environment, when the upper bound delay is achieved in the reality. 2) Apply the proposed approach to a system that includes multiple plants, which are connected via the Internet. A high performance computer is expected to be the controller computer.

62

REFERENCES
[1] R.S. Raji, "Smart network for control," IE E E
Spectru m ,

pp. 49-55, June 1994.

[2] K.W. Zuberi, K.G. Shin, "Scheduling messages on controller area network for real time cim applications," IE E E pp. 310-314, 1997. [3] U. Ôzgüner, H. Goktag, and H. Chan, "Automotive suspension control through a computer communication network," in
A p p lic a tio n s, P ro c . IE E E C on feren ce C o n tro l T ra n sa ctio n s on R o b o tic s a n d A u tom ation ,

vol. 13(2),

1992.

[4] A. Ray "Performance evaluation of medium access control protocols for distributed digital ZMXonxcs," A S M E J.
D yn. S yst., M ea s., C ontrol,

vol. 109, pp. 370-377, 1987.
M ic ro p ro c e sso rs

[5] J.A. Spark, "Low cost technologies for aerospace applications,"
a n d M icro system s,

vol. 20, pp. 449-454,1997.

[6] Y. Halevi and A. Ray, "Integrated communication and control systems: Part I Analysis," J o u rn e y 367-373,1988. [7] R. Luck and A. Ray, "An observer-based compensator for distributed delays,"
A u to m a tica , o f D y n a m ic S ystem s, M ea su rem en t, a n d C on trol,

vol. 110, pp.

vol. 26, pp. 903-908,1990.

[8] R. Luck and A. Ray, "Experimental Verification of a delay compensation algorithm for integrated communication and control systems,"
C o n trol, In te rn a tio n a l J o u rn e y o f

vol. 59, pp. 1357-1372, 1994.

[9] H. Chan and U. Ôzgüner, "Closed-loop control of systems over a communication network with queues," 1995.
In te rn a tio n a l J o u rn e y o f C on trol,

vol. 62, pp. 493-510,

63

[10] s.H. Hong, "Scheduling algorithm of data sampling times in the integrated communication and control systems,"
T ech n ology, IE E E T ra n sa ctio n s on C o n tro l S ystem s

vol. 3, pp. 225-230,1995.

[11] J. Nilsson, B. Bemhardsson, and B. Wittenmark, "Stochastic analysis and control of real-time systems with random time à c l a y s " A u to m a tica , vol. 34, pp. 57-64,1998. [12] G.C. Walsh, O. Beldiman, and L. Bushnell, "Asymptotic behavior of networked control systems," presented at IEEE International Conference on Control Applications, 1999. [13] G.C. Walsh, H. Ye, and L.G. Bushnell, "Stability analysis of networked control systems," presented at American Control Conference, 1999. [14] G.C. Walsh, and H. Ye, "Scheduling of networked control systems," IE E E
S ystem s M a g a zin e, C o n tro l

vol. 21, pp. 57-65, 2001.

[15] G.C. Walsh, H. Ye, and L.G. Bushnell, "Stability analysis of networked control systems," IE E E
2002.
T ran saction s on C o n tro l S ystem s T ech n ology,

vol. 10, pp. 438-446,

[16] H.S. Park, Y.H. Kim, D.S. Kim, and W. H. Kwon, "A scheduling method for network-based control systems,"
T ech n ology, IE E E T ra n sa ctio n s on C o n tro l S y ste m s

vol. 10, pp. 318-330,2002.

[17] Z. Wei, X.-H. Ma, and J.-Y. Xie, "A novel control scheme based on online delay evaluation for a class of network," Proceedings of the American Control Conference Denver, Colorado Jun 4-6,2003. [18] F.-L. Lian, J. Yook, P. Otanez, D. Tilbury, and J. Moyne, "Design of sampling and transmission rates for achieving control and communication performance in

64

networked agent systems," Proceedings of the American Control Conference Denver, Colorado Jun 4-6,2003. [19] H.H. Hahn, M.W. Spong, "Remote laboratories for control education," in
IE E E C on feren ce on D e c isio n a n d C o n tro l, P ro c.

2000.
P ro c. IE E E

[20] E.C.P. Chang, "Internet based remote camera control system," in
In te llig e n t V ehicles S ym p., p p .

126-129, 1996.

[21] P.l.H. Lin, H.L. Broberg, "Internet-based monitoring and controls for HVAC
a p p lica tio n s," IE E E In d u stry A p p lic a tio n s M a g a zin e ,

vol. 8(1), pp. 49-54,2002.

[22] R.C. Luo, J.H. Tzou, Y.C. Chang, "An Internet-based remote control and monitoring rapid prototyping system,"
E lectro n ic s, IE E E I n t 'l C on feren ce on In d u stria l

vol. I, pp 159-164,2001

[23] E.P.L. Aude, G.H.M.B. Cameiro, H. Serdeira, J.T.C. Silveira, M.F. Martins, and E.P. Lopes, "A multi-level fusion architecture for intelligent navigation of a telerobot," 1999. [24] S.H. Yang, L.S. Tan, X. Chen, "Requirements specification and architecture design for internet-based control system," P ro c .
a n d A p p lic a tio n s C on feren ce, O f IE E E In te rn a tio n a l C o m p u ter S o ftw a re IE E E C on feren ce on R o b o tic s a n d A u to m a tio n ,

vol. 1, pp. 465-472,

2002

[25] H.H. Han, S. Kim, "Implementation of Internet-based personal robot with Internet Control Architecture," P ro c .
A u to m a tio n , O f th e IE E E In te rn a tio n a l C on feren ce on R o b o tic s a n d

vol. 1, pp 217-222,2001 "Web-interfaced, force-reflecting teleoperation system,"
IE E E

[26] R.

Oboe,

T ra n sa ctio n s on In d u stria l E le c tro n ic s,

vol. 48, pp 1257-1265,2001

65

[27] W. Fung, N. Xi, W. Lo, Y. Liu, "Improving efficiency of internet based teleoperation using network QoS," P ro c .
R o b o tic s a n d A u to m a tio n , O f th e IE E E In te rn a tio n a l C o n feren ce on

Washington DC., May 2002

[28] R.L. Kress, W.R. Hamel, P. Murray, K. Bills, "Control strategies for teleoperated internet assembly," lE E E /A S M E 2001 [29] N. Chopra, M.W. Spong, S. Hirche, M. Buss, "Bilateral teleoperation over the Internet: the time varying delay problem,"
C on feren ce, P ro c . O f IE E E A m erica n C o n tro l T ran saction s on M e c h a tro n ic s,

vol. 6, pp 410-416,

June 2003

[30] R.J. Anderson, M.W. Spong, "Bilateral control of teleoperators with time delay,"
IE E E T ra n sa ctio n s on A u to m a tic C o n tro l,

AC-34, No. 5, pp. 494-501, May 1989

[31] G.M.H. Leung, B.A. Francis, Apkarian, "Bilateral controller for teleoperators with time delay via // - synthesis," IE E E 11, pp. 105-116,1995 [32] Q. Chen, S. Fei, A. Song, "Robust control with observer of Internet-based teleoperation," P ro c .
O f IE E E A m erica n C o n tro l C on feren ce, T ra n sa ctio n s on R o b o tic s a n d A u to m a tio n ,

vol.

June 2003
P ro c . O f th e IE E E

[33] K. Brady, T.J. Tam, "Internet based remote teleoperation,"
In te rn a tio n a l C on feren ce on R o b o tic s a n d A u to m a tio n ,

pp. 65-70, 1998

[34] W- Lanrens, CAN System engineering: From Theory to Practical Applications, New York: Springer-Verlag, 1997 [35] A.S. Tanenbaum, Computer Networks, 3 * ^ ^ Edition, Upper Englewood Cliffs, NJ: Pretice-Hall, 1996 [36] B. Raton, ControlNet Specifications, 2"** ed. FL: ControlNet International, 1998

66

[37] A. Leon-Garcia, I. Widjaja, Communication Networks: Fundamental Concept and Key Architectures, 2"^ Edition, New York: McGraw-Hill, 2004 [38] A.K. Parekh, "A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks", Ph.D. dissertation. Department of Electrical Engineering and Computer Science, MIT, February 1992 [39] http://www.intemettrafficreport.com/main.htm [40] D.L. Mills, "Internet time synchronization: The network time protocol,"
T ra n sa ctio n s on C om m u n ication s, IE E E

vol. 39, pp. 1482-1493,1991.

[41] G. Liu, A.A., Goldenberg, "Uncertainty Decomposition-Based Robust Control of Robot Manipulators,"
IE E E T ra n sa ctio n s on C o n tro l S ystem s T ech n ology,

vol. 4,

no. 4, pp. 384-393,1996. [42] T. Jung, G. Liu, "Friction Model Parameter Identification of a Direct-Drive Robot Arm with Genetic Algorithms," Ryerson University, June 2004.
S ystem s a n d C o n tro l L a b T ech n ical R e p o rt,

67


