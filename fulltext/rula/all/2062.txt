DEMAND SIDE SIMULATION: ARCHITECTURE AND PERFORMANCE

by

Jahanzeb Yousaf Bachelor of Science University of the Punjab, Pakistan, 2008

A thesis presented to Ryerson University in partial fulfillment of the requirements for the degree of Master of Science in the Program of Computer Science

Toronto, Canada, 2012 c Jahanzeb Yousaf 2012

ii

Author's Declaration
I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research. I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand that my thesis may be made electronically available to the public.

iii

iv

DEMAND SIDE SIMULATION: ARCHITECTURE AND PERFORMANCE

Jahanzeb Yousaf M. Sc. in Computer Science, 2012 Ryerson University, Toronto, Canada

Abstract
In this thesis, we describe a simulator of residential power consumption, as the first step towards a comprehensive demand-side simulator in the context of smart grid. The simulator uses a commercial Relational Database Management System (RDBMS) as its simulation engine, and is thus capable of supporting much larger simulated systems than other existing simulators which are mostly based on a multi-agent simulation paradigm. The RDBMS-based design also leads to much improved performance while requiring less resources than comparable MAS-based system. Moreover, simulator records all the events which exceed a certain threshold and in response controls demand and assures the stability of the system, based on the future and past events. Furthermore, simulator can help utility companies to obtain initial data that can lead to the development of more complex solutions to monitor and control energy consumption, and thus identify target operating points for the generation and distribution systems, with the ultimate goal of balancing the demand and supply, and of improving energy efficiency at the utility level.

v

vi

Acknowledgements

I would like to begin by expressing my appreciation for my research supervisor Dr. Vojislav Misic. Over the past two years Dr. Vojislav Misic has played a pivotal role in my research acting as a mentor, a source of inspiration and an expert from the field of software engineering. Without him, the completion of my research would not have been possible. I would like to thank my thesis defence committee members: Dr. Alireza Sadeghian, Dr. Jelena Misic, and Dr. Eric Harley for their time, patience and expertise in assessing my research. I am indebted to my family who have supported me in every way up to this day. Their contribution towards shaping my life for the better is truly priceless. And to my little angels, Haider and Usher, thanks for the joy you bring to this whole process of graduate research. Lastly, and most importantly, I would like to thank God Almighty, Allah, for all the blessings I have been provided.

vii

viii

Dedication
To my Parents

&

Wife.

ix

x

Table of Contents
1 Introduction 1.1 Motivation . . . . . . . . . . . . . . . . . . 1.2 Smart Grid . . . . . . . . . . . . . . . . . 1.3 Demand Side Management . . . . . . . . . 1.4 Problem Statement . . . . . . . . . . . . . 1.4.1 Existing Approaches . . . . . . . . 1.4.2 Problem with Existing Approaches 1.4.3 Research Approach . . . . . . . . . 1.5 Contributions of This Thesis . . . . . . . . 1.6 Organization of This Thesis . . . . . . . . . 1 1 2 6 6 8 9 10 10 11 13 13 14 15 16 17 18 20 21 24 25 26 26 29 30 32 33 35 36 39 39 40 41 41 43

. . . . . . . . .

. . . . . . . . .

. . . . . . . . .

. . . . . . . . .

. . . . . . . . .

. . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2

Smart Grid and Demand Side Management 2.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . 2.2 Background of Smart Grid . . . . . . . . . . . . . . . 2.2.1 Funds Allocation for Smart Grid Development 2.3 Smart Grid . . . . . . . . . . . . . . . . . . . . . . . 2.3.1 Misconceptions about Smart Grid . . . . . . . 2.3.2 Smart Grid Vs Present Grid . . . . . . . . . . 2.4 Technical Composition and Functions of Smart Grid . 2.4.1 Smart Grid Technologies . . . . . . . . . . . . 2.5 Demand Side Management . . . . . . . . . . . . . . . 2.5.1 Direct Control . . . . . . . . . . . . . . . . . 2.5.2 Indirect Control . . . . . . . . . . . . . . . . . 2.5.3 Energy Efficiency and Conservation Programs 2.5.4 DSM Technologies . . . . . . . . . . . . . . . 2.5.5 Barriers in Implementing Smart Grid . . . . . 2.6 Recent research and development in smart grid . . . . 2.6.1 Smart Grid Automation . . . . . . . . . . . . 2.6.2 Need for Smart Grid . . . . . . . . . . . . . . 2.7 Benefits of Smart Grid . . . . . . . . . . . . . . . . . Simulating the Smart Grid 3.1 Simulation . . . . . . . . . . . . . . . . . . . . . . . . 3.1.1 Simulation Types . . . . . . . . . . . . . . . . 3.2 Smart Grid Simulations and Demand Side Approaches 3.2.1 Demand Side Simulation . . . . . . . . . . . . 3.2.2 MAS and Non MAS-based Approaches . . . . xi

3

3.2.3 4

Problem with the Existing Simulators

Methodology 4.1 Structure . . . . . . . . . . . . . . . . 4.2 Our Approach . . . . . . . . . . . . . 4.2.1 Transaction Script . . . . . . 4.2.2 Domain Model . . . . . . . . 4.2.3 Table module . . . . . . . . . 4.2.4 Our Data Model . . . . . . . 4.3 Algorithms . . . . . . . . . . . . . . 4.3.1 Frequently Used Appliances . 4.3.2 Regularly Used Appliances . . 4.3.3 Standby Appliances . . . . . 4.3.4 Occasionally Used Appliances 4.4 Model-View-Controller Interaction . . 4.4.1 View . . . . . . . . . . . . . Simulation Results 5.1 Results . . . . . . . . . . . . . . . . 5.1.1 Comparison with GridLab-D 5.1.2 Demand Side Simulator . . 5.1.3 Demand Load . . . . . . . . 5.2 Limitations . . . . . . . . . . . . . Conclusions and Future Work Bibliography . . . . .

5

6

xii

List of Tables
2.1 5.1 5.2 5.3 Traditional Grid vs. Smart Grid. . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 List of appliances with their initial parameter values. . . . . . . . . . . . . . . . . 66 Household appliances that can be interrupted or scheduled without affecting user comfort level. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 List of distributions which suits best with our data. . . . . . . . . . . . . . . . . . 74

xiii

xiv

List of Figures
1.1 1.2 1.3 2.1 2.2 2.3 3.1 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 5.10 Typical demand profile for a day . . . . . . . . . . . . . . . . . . . . . . . . . . . Drivers for smart grid development. . . . . . . . . . . . . . . . . . . . . . . . . . Electricity demand profile from an individual household recorded on a 1-min time base. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 5 8

Illustrates the opportunities: the smart grid as enabling engine. . . . . . . . . . . . 18 Visual representation of the smart grid structure. . . . . . . . . . . . . . . . . . . . 22 Vehicle to Grid configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 CPU and Memory usage when simulating large number of agents. . . . . . . . . . 47 General architecture of the simulator. . . . . . . . . . . Conceptual representation of transaction script pattern. Conceptual representation of domain logic pattern. . . Conceptual representation of table module pattern. . . Simulation engine and model of DSS. . . . . . . . . . Sequence chart showing single iteration operations. . . C-Sharp function. . . . . . . . . . . . . . . . . . . . . Stored Procedure code. . . . . . . . . . . . . . . . . . View of demand side simulator

Average no. of events reported by the controller. . . . . . Comparison of CPU utilization for DSS and GridLab-D. Comparison of Memory Usage for DSS and GridLab-D. Simulation Time of DSS and GridLab-D. . . . . . . . . Run Time of DSS over a period of 1 week. . . . . . . . . CPU utilization of DSS. . . . . . . . . . . . . . . . . . . Memory Usage of DSS. . . . . . . . . . . . . . . . . . . Simulation Time of DSS. . . . . . . . . . . . . . . . . . Histogram of events reporting time (seconds). . . . . . . Probability Distribution Function. . . . . . . . . . . . .

xv

xvi

List of Algorithms
1 2 3 4 Behavior of frequently used appliances . . . . . . . . . . . . . . . . . . . . . . . . 59 Behavior of regularly used appliances . . . . . . . . . . . . . . . . . . . . . . . . . 60 Behavior of standby appliances . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 Behavior of occasionally used appliances . . . . . . . . . . . . . . . . . . . . . . . 61

xvii

xviii

List of Abbreviations
AC AMI CAN COM DBMS DOE DRM DSM DSS DR EPRI EM EV FACTS FIPA FSM GIS GUI HAN HVDC JADE MAS MDMS MVC NIST ODBC OOP PLC PMU PNNL RDBMS SM V2G WAMS XML Alternate Current Advance Metering Infrastructure Controller Area Network Common Object Model Database Management System Department of Energy Demand Response Module Demand Side Management Demand Side Simulator Demand Response Electric Power Research Institution Electric Motors Electric Vehicle Flexible AC Transmission System Foundation for Intelligent Physical Agents Fast Simulation and Modeling Geographical Information System Graphical User Interface Home Area Network High Voltage Direct Current Java Agent Development Framework Multi Agent System Meter Data Management System Model-View-Controller National Institute of Standards and Testing Open database Connectivity Object Oriented Programming Power Line Communication Phaser Management Units Pacific Northwest National Laboratory Relational Database Management System Smart Meters Vehicle-to-Grid Wide Area Management System Extensible Markup Language

xix

xx

Chapter 1 Introduction

1.1

Motivation

The century-old electric grid can easily be ranked as the most complex, massively interconnected systems of power distribution on Earth [1, 2]. The present grid infrastructure is generally based on centralized generation plants, connected to high voltage transmission systems which in turn supply power to medium and low-voltage local distribution grids. The end part (transmission and distribution) of the grid uses near-extinct technologies which significantly limit the use of advanced digital communication, sensing and control technologies, and thus, requires serious refurbishing [1, 3]. Around the world, the distribution part of the grid is owned by governments or privately operated utilities, and its infrastructure suffers aging, underfunding and overstressed. Due to this, it is very difficult to manage and costly to repair [4]. Today's electric grid, in order to function properly has to have an almost perfect balance between electric supply and demand [5]. Moreover, frequent disturbances on the user part of the grid show its unreliable nature [6]. Furthermore, no information about energy consumption and state of grid is communicated between utilities and consumers. This is one major reason of electricity wastage [1]. The power regulatory industry recognizes the need of modernizing the present grid but they are still paying utilities to install near extinct equipment and encouraging them to sell more power even when the demand is not so high. Moreover, there seems no other way to take out the stress by using alternative energy like solar and wind because they require intermittent bursts of power 1

that today's infrastructure isn't capable of providing [4, 7, 6]. In short, the current grid as it stands is inefficient, costly to maintain and constantly demanding more and more consumption of environmentally unfriendly sources to deliver the extra power that society now demands.

1.2

Smart Grid

The global increase in the demand of energy along with the rise in prices of petroleum products has directed governments and utilities to a profound change in the present day energy infrastructure [7]. Building a new grid is very similar to building an interstate highway system, a telephone or Internet network. The objective is to build a power distribution system that is intelligent, flexible, reliable and which can be monitored and controlled end-to-end all the way down to billions of individual user appliances. Moreover, it should address present and future problems such as aging infrastructure, meeting the demand load and changing customer requirements [1]. The traditional grid is mainly operated through isolated control centers. The goal of creating intelligent grid or smart grid is to connect them so that they can communicate and share resources e.g., a solar power station in one part of the country and a hydro-power station in an other, can be connected [1, 5]. One unique feature of the proposed soft grid will be efficiency that is obtained through the use of computing intelligence. Another important feature of the new grid will be its customer focused, i.e., today's power companies sell electricity at their terms this will change, just like we select a package for our cell phone(s). Once the digitized grid is up and running, many types of energy sources can be deployed and balanced together at a large-scale. This balancing and mixing of different sources of energy will shift our present oil based economy to an electricity centered economy [4]. Smart grid refers to the transformation of existing power infrastructure into a grid which is decentralized, flexible, accessible and reliable by using wide range of information technologies. Smart grid facilitates the actions of its users through distributed generation, by implementing de2

arch Europe Ltd., Bristol - BS1 4ND, UK us, parag.kulkarni, zhong.fan}@toshiba-trel.com
60000 50000 Demand(MW) 40000 30000 20000 10000 0 1 TimeoftheDay(EndoftheHour) 3 5 7 9 11 13 15 17 19 21 23

to reduce the sil fuel based ueled by this, educe reliance e supply and One of the key load, i.e. the the available ces and reduce endly reserve discusses the orates on how be potentially jective of this search in the

TypicalDemand(MW) Averagedemand(MW)

asing demand Figure profile for (source: a day. (From Fig.1.1: 1. Typical Load demand profile for a day [2])[9]) his may have Grid' (defined mand side management techniques, energy storage, and by optimal expansion and management of the supply to grid assets [3]. One ofto theconsume essential goals the smart times grid is to match the demand to the available consumers at of specific and defer consuming be expensive other that the technology net demand within the remit e longer run. supplyat (see Figuretimes 1.1) by such using information [8, 9]. is This precise matching of supply of the available supply. This could be driven by providing o match the and demand helps to achieve better generator use and fewer standby resources, which translates he demand to incentives to the consumers through appropriate pricing to into reduced cost foravailability both utility operators and consumers. However, energy storage can accomreflect the or otherwise of energy from intermittent onvincing the wind and solar sources and to induce consumers to use it modate the variability of demand-side and supply-side. Moreover, if energy storage is distributed chieve better when it is available. This will not only improve operational across the demand side, it can also help to soften the impact of demand peaks on the distribution usage pattern efficiencies (reduction in OPEX) but will also obviate the network [10, 11]. Nonetheless, large scale storage is exceptionally expensive at this time. peak between need for capital investments required for putting in place the infrastructure for generating this additional energy (reduction nerally provi- The U.S. Department of Energy (DOE) defines smart grid as "an energy distribution system that to depend on in CAPEX) for the utility companies. Reducing reliance on uses digital technology to improve reliability, security, and efficiency of the electric system from the demand. fossil fuel based energy sources will also have a desirable side large generation, through the deliverythe systems to electricity consumers a growing number of effect, that of reducing negative impact on theand environment. se additional To realizeand this vision requires theintent implementation ofgrid a new huge capital distributed-generation storage resources" [1]. The of modernizing the (or Modern ty companies level of intelligence in the existing grid with two way commu3 the consumers' premises, i.e. iendly (those nications between the grid and energy). The necessity for a communication infrastructure and protocols.

Grid Initiative) is to develop an energy delivery system that uses advanced sensing, communication and control technologies to produce, transfer, and distribute electricity to the end user. Moreover, it should not have a centralized control and should be capable of integrating innovative tools and technologies from transmission all the way down to consumer appliances and equipments [1]. Decentralization of the power distribution network is vital for the success and reliability of the future grid. Currently, the grid is dependent on few generation sources. Distributed generation will make the future grid more resilient against massive failures (i.e., natural disasters or terrorist attacks). When these distributed sources are combined with smart grid technologies, electricity could be better controlled and distributed, and the grid would be less susceptible to cyber-attacks. A modern, robust and effective smart grid must come up with · An economical solution that provides best value through innovation and built on the infrastructure already placed [3, 12]. For example, many telecommunication companies have state of the art, next generation network infrastructure which can be used to fulfill communication needs of the smart grid along with the development of new infrastructure [1, 12]. A similar solution has been proposed in [1], where users are informed on their hand-held device about the energy consumption. They can turn on or off all or any particular appliance while away from their house. · A model that can adapt to new standards for efficiency, and computer automations that can ultimately yield true business transformation and benefits for all. Being open to the latest standards of network management and application development will be a big change for the utility sector, but one that is vitally necessary to move forward in the development of smart grid [12]. Moreover, the new grid should be fully IP1 enabled [12]. · Improved security and quality of supply, incorporate renewable energy, centralized advanced diagnostics and controls, and resilient to hazards and uncertainties [3, 12].
1 Internet

protocol, the method by which information is sent between any two computers on the Internet

4

Smart Grid Infrastructure Development

Energy Policy Drivers Sustainability Competitiveness Security

Drivers
Carbon Emission Dependence on Important fuels Energy Cost Concerns Electric Vehicles Consumer Participation

Energy Sustainability Concerns

International Smart Grid Efforts

Utilities Improving Operational Efficiencies Choice Between Different Tariff Rates

Affordable technology

Renewable Integration

Massive Job creation

Cutting Down Outages

Avoid Estimated Meter readings

Country's Abundant Renewable Resources

Figure 1.2: Drivers for smart grid development. (Adapted from [13]) · A way to provide utilities with advanced visualization and automation tools to enhance their ability to monitor grid operations [1]. Some of the driving forces that led to the development of smart grid development are shown in Figure 1.2. There are three crucial components for smart grid development [4]: · Two-way communication: There should be a two way flow of information and control between utility and consumers in order to develop and deploy a seamless and interactive network. · Advanced Control System: An intelligent control system that can be deployed and stretched over a real-time rambling network. · Smart Devices: Smart appliances must be installed on user premises that can respond to utility signals in order to get full benefits out of the new grid. 5

1.3

Demand Side Management

Smart grid prescribes a system which is extensively distributed, communication driven and coustomer focused. Initial technologies being provided as starting point for the smart grid are: · Advance Metering Infrastructure (AMI): AMI collects and analyzes the energy usage of household data [7, 11] · Meter Data Management System (MDMS): a state of the art electricity metering system for communicating real-time data from consumer to utility, which is connected to the utility through various mediums including broadband over power line, power line communication and radio frequency [7, 11]. It provides finer level information about consumption patterns to allow for better scheduling of power generation. · Home Area Network (HAN): HAN or smart home, where appliances are connected and coordinating with Smart Meter (SM) [7, 3]. Advances in AMI, MDMS and HAN have resulted in the development of Demand Side Management (DSM) techniques. Broadly, DSM techniques are classified as direct control techniques in which loads are controlled by utilities and indirect control techniques where the customers are motivated to determine the loads through the time of use pricing or other economic incentives [14]. Many utilities are developing DSM solutions in order to monitor their distribution activities and changing customer demands to meet the desired load. Next section talks about some of the most common approaches used to implement DSM solutions.

1.4

Problem Statement

The issue with the current power distribution system is the high variability between peak and average loads; the higher the difference, the more expensive the electricity will be. This is because 6

a significant portion of total supply is used by residential customers, i.e., for cooking, heating and cooling purposes. The main reasons are their random activation patterns which can vary with seasons, time-of-day etc, and difference in consumption behavior of household appliances. Figure 1.3 shows appliance usage in a household and the amount of energy consumed by different appliances on a minute to minute basis. Whereas, comparing residential and industrial consumers, residential consumers are unpredictable unlike industrial ones. For industrial consumers, the difference of peak to average load is due to the use of large electrical motors as well as to the daily cycle of industrial activity. Since the power of industrial machinery/or EMs at which they are operating is already known and measures exist for a long time to reduce the peak-to-average load ratio. The question is: How can we reduce the ratio of peak-to-average load? To address this issue, first we have to know the current peak-to-average ratio. There are two possible ways to find it. The first is to observe the relation between activation and consumption patterns, which can be achieved either by deploying smart meters or smart controllers in the households and by encouraging consumers to reduce their load at the time of peak demand by offering incentive based program which is not yet very common. The second way is through simulation which seems more preferred solution in these circumstances i.e., large scale simulation involving thousands of household appliances. In order to implement efficient and cost effective DSM solutions, it is necessary to target residential users as they consume most of the energy produced in power generation plants [16, 17, 18]. There are many independent entities (appliances) in a household which mostly have random activation patterns. The good thing is each of these appliances depicts simple behavior which is easy to understand and model. The energy consumed by these devices not only depends on appliance's power, but also on their time of usage. A number of studies [19, 16, 20] have shown that stand-by consumption (i.e., refrigerator, freezer, central heat etc.) is significant comparing to regularly used appliances consumption. For example, power consumed by iron and microwave is much less than refrigerator, air-conditioning and other heating devices. The penetrating use of smart meters and 7

energy use vary dramatically with time of day and time of year. Although one domestic appliance may use less than 1 kWh per day, appliance usage in general results in large demands for electricity at peak times [7]. When demands from several appliances occur at the same time they can produce a peak demand of several kilowatts. The appliances,

ences (e.g. seasonal/weather variations). The ``moderately predictable'' consumption relates to the habitual behaviour patterns of the residents. For example, many people watch TV programmes at regular times each day/week and switch lights on/off each weekday morning as they rise and then leave for work. Lastly ``unpredictable'' consumption

Fig. 1. Example of an electricity demand profile from an individual household recorded on a 1-min time base [7].

Figure 1.3: Electricity demand profile from an individual household recorded on a 1-min time base (from [15]). other smart grid technologies have enabled utilities to predict future demand and supply. In order to investigate the effectiveness of DSM solutions and their impact on customer's comfort, it is important that new models and simulation software should be developed. The preferred approach for modeling DSM solutions involving thousands of homogeneous appliances is through simulations. However, the crucial requirement here is flexibility and scalability, as the simulator should ultimately include not only residential users, but office building, hospitals, educational, and even some commercial users as well.

1.4.1

Existing Approaches

Several software modeling tools are available for assessing and understanding different components of smart grid. Simulation requires model - simplified representations of real systems - and simulation translates the model to analyze a system's changing behavior over the time that would not be otherwise exposed [19]. In this manner, simulation is a powerful approach that helps to 8

develop conceptual and architectural design of software-intensive system, and allows for accurate evaluation of system architecture behavior, as well as identification of major flaws in the early stages of analysis and design phase [21]. Many researchers have proposed the use of the multi-agent based simulation (MAS), in which the behavior of the system under consideration is modeled using a number of autonomous agents - software entities that interact with one another while trying to solve a global goal or a set of individual goals [22, 23]. Most prominent features of a MAS system are autonomy (all agents are autonomous to some extent), local scope (no agent has a global view of the system), and decentralization (i.e., there is no central authority to control all agents). This allows them to achieve parallelization of complex tasks and achieve resilience to failure of one or more agents [24]. However, MAS systems are also known to require lots of memory whilst not being very efficient in terms of computation time [25]. A number of simulators have been used in the field of power system engineering, and some of them are specifically designed to cope with the requirements of DSM. A considerable effort in this regard is GridLab-DTM , which provides its users with advance modeling techniques and high performance algorithms to understand and design smart grid appliances [7]. Most of the simulators that include DSM are MAS-based, since the need to simulate nearly independent behavior of a large number of entities (i.e., residential households, in this case) appears to be naturally suited to the MAS-based paradigm.

1.4.2

Problem with Existing Approaches

MAS-based simulators offer flexibility, but their foremost problems are their scalability and performance. Since each agent consumes some resources (i.e., memory and computational time), MAS-based simulators are applicable only for scenarios with a relatively small number of devices [26, 27]. As the number of tasks and agents increase, system's computational time and mem9

ory usage typically exhibit an exponential increase. In addition, large scale simulation involving thousands of agents are difficult to scale due to the volume of inter-agent communication and the inefficiency of the underlying implementation platforms such as Java Agent Development Framework (JADE) [25]. The maximum possible number of tasks that can be handled with a MAS based simulator is, then, inversely proportional to the number of agents involved in the simulation [22].

1.4.3

Research Approach

In order to mitigate the scalability problem, the research in this thesis aims to use a twofold approach. · We have used Relational Database Management System (RDBMS) as the underlying simulation engine, as it is a mature technology that has been used commercially for a long time. Modern RDBMSs are capable of supporting a huge number of objects (even the smaller ones can support billions of objects) in a fast and efficient way, even on desktop-sized machine. · Secondly, we build the simulator using the Model-View-Controller (MVC) architectural pattern, a widely accepted design for applications of interactive nature [28]. One obvious advantage of using MVC pattern is its intuitive nature, i.e., an ideal that we have in our mind when designing classes. Another advantage is it keeps the door open for other software approaches and design patterns. Moreover, it supports encapsulation, makes the code re-usable and allows independent testing of components.

1.5

Contributions of This Thesis

This thesis has the following contributions: · A novel architecture for large scale simulation based on ubiquitous relational database management system and enterprise design patterns for simulating the power demand of residen10

tial users. The RDBMS is used as an underlying simulation engine which offers excellent performance as well as scalability comparing to the more common MAS-based approaches. On the other side, the table module of enterprise design pattern organizes domain logic according to the principle of one class per table, regardless of the number of rows in the table. This solution requires certain implementation constructs which fortunately exist in the chosen RDBMS. · An evaluation of the demand side load by analyzing inter-arrival rate of reported events, requesting demand load greater than a certain threshold value. · An evaluation of communication traffic between smart meters and the utility. The estimation is based on the number of events reported by a specified number of households which are greater than a certain threshold value (in Watts). The goal here is to generate input data for traffic modeling in a smart grid communication network.

1.6

Organization of This Thesis

The thesis is organized as follows: Chapter 2 briefly overviews the background of smart grid and financial support of different governments showing their interests for the development of smart grid. It provides a detailed overview on smart grid and technologies involved in the implementation of smart grid. Moreover, it also discusses some of the challenges being faced by the future grid and highlights some recent researches to indicate what is presently going on in the field of smart grid? It also highlights the role of end users to help balance supply and demand and lists some of the prominent benefits of implementing smart grid. Chapter 3 reviews related work and is split into two main sections. The first provides a brief introduction to simulation and types of computer simulations, and the later provides an overview of 11

some of the important smart grid simulators already existing in the field of DSM. It also highlights the limitations of some of the important approaches taken to develop these simulators. Chapter 4 provides a detailed overview of our data model and describes the research approach followed to implement the proposed large scale Demand Side Simulator (DSS). It also briefly overviews the pros and cons of each of three domain logic patterns and the circumstances in which they can be used. Moreover, it also lists the algorithms used to implement activation patterns of different types of appliances. Chapter 5 present a comparison of simulation time and computation resources (i.e., CPU utilization and memory usage) for DSS and Gridlab-D. It also demonstrates the simulation time and resource usage of DSS when it is run for large number of household appliances and an evaluation of demand side load by calculating average messages sent in response to load variations. An evaluation of communication traffic between SMs and utility controllers is also presented by performing Kolmogorov-Smirnov (K-S) test on the resultant data. Chapter 6 summarizes the present work and provides some promising directions for the future research.

12

Chapter 2 Smart Grid and Demand Side Management

2.1

Introduction

The electric power grid is an interconnected network for providing electricity to consumers. It includes three major components: Power Generation - generates electricity from combustible fuels (i.e., coal, oil, gas, nuclear and biomass) or non-combustible fuels (i.e., wind, solar, hydro), Transmission - carries electricity from power generators to demand centers or substations, and Distribution - from a transmission to distribution level voltage, so that distribution lines carry power for final delivery where end users consume it. The overall demand for energy is growing faster than energy generation. This imbalance stimulates peak energy demand and puts the grid's reliability in danger. In the past three decades, the demand of energy has grown so high, causing five massive blackouts three of which have occurred in the last nine years only. To avoid encountering with such situations, many countries are putting their efforts into integrating renewable energies by modernizing present grid and allowing distributed power generation which requires collective efforts in order to improve energy efficiency and resource utilization for power generation, transmission, distribution, and consumption systems. Distributed generation will not only reduce peak load, but will also reduce carbon (CO2 ) emission, the green house effect and the energy consumption [29]. Another advantage of distributed generation is quicker recovery in a disaster scenario, as communities are no longer dependent on the central power plant generation. Despite innovative institutional efforts and network designs of the power grid, its power deliv13

ery infrastructure suffers aging across the world. Decentralization of the power industry has made possible for distributed resources (i.e., a household with excess power from its solar panel or wind turbine or small office with diesel generator) can be brought on-line either by the utility will or by the owner of the generation in an effort to sell electricity back to the utility. Fortunately, there are some excellent alternatives for improving the efficiency of alternative and distributed generation sources, which not only include "on-grid" sources such as micro-turbines, wind farms, solar energy, and biomass, but also energy scavenging and storage techniques that can allow consumption of "off-grid" sources. Additionally, the grid of the future will need to operate with great diversity of sources and demands, yet respond robustly to any failures [30]. In this context, there is a demanding need for an extended and modernized electricity network, commonly known as "Smart Grid".

2.2

Background of Smart Grid

The concept of smart grid development emerged in late 2001, when a study conducted by U.S. DOE highlighted heavy financial losses due to transmission bottlenecks and other practices in the US grid [31, 3, 32]. In 2003, DOE presented its vision for Grid2030 which is summarized as: "Grid 2030 energizes a competitive North American Market place for electricity. It connects everyone to abundant, affordable, clean efficient and reliable electric power anytime, anywhere. It provides the best and most secure electric services available in the world" [3]. In 2003, an action plan for the implementation of 2030 vision was also drafted in the national electricity delivery technologies roadmap workshop. Following this, in 2004, GridWise project was also launched by the U.S. Department of Energy Office of Electricity Delivery and Energy Reliability [31, 3, 32]. The aim of this project was to develop [3]:

· Communication architectures and standards 14

· Simulation and analysis tools · Smart technologies · Test beds and demonstration projects and · New regulatory and market frameworks. The GridWiseR Architecture Council, is a major body for development of open architectures and standards for intelligent interactive systems. The group has organized many conferences and workshops on smart grid interoperability. The Electric Power Research Institution (EPRI) Intelli-grid (intelligent grid) initiative is focused on developing technical frameworks for smart grids. The Intelli-grid architecture provides a methodology, tools and recommendations for standards to assist in planning and procuring IT-based systems such as advanced metering, distribution automation and demand response [3]. In 2007, U.S. passed a bill "Energy Independence and Security Act" and two years later Obama's government announced smart grid investment plan and also announced "IEEE P2030" of smart grid standards and interoperability principles and marked the official start of the construction of smart grid [31, 3].

2.2.1

Funds Allocation for Smart Grid Development

Since the beginning of smart grid, the infrastructure has been associated with drudgery [4]. We must accept that journey towards the development of smart grid requires a long term commitment and large scale investments from governments and private sectors. According to an estimation, $16 trillion of investments will be needed to meet "Grid2030" initiative and an approximately 500 billion Euros will be required to upgrade the electricity transmission, and distribution infrastructure in Europe only [1]. In early 2009, the U.S. government has announced a stimulus package to address the country's aging power infrastructure. In the package $6.9B was allocated for DSM programs, $2B each for research of renewable energies (e.g., biomass and geothermal) and advanced vehicle 15

battery research and $11B for smart grid research and development and pilot projects and construction of new transmission lines to connect country's power grid to green energy sources [1]. Moreover, the government promised to cover 50% cost of utilities investing in smart grid equipments. Furthermore, we should take the task of refurnishing the present grid as an opportunity to thrive the job market and leave a safer and healthier environment for our next generations.

2.3

Smart Grid

The next generation electricity distribution system which is able to take autonomous decisions is flexible enough in its architecture to adapt to new technologies. One of the key aspects of smart grid is its two-way flow of information between consumers and suppliers, whereby consumers receive real time price signals that reflect the true cost and carbon intensity (i.e., generation through environmentally unfriendly sources) of the grid and suppliers receive up-to-date and accurate predictions of the future demand and supply. The objective here is, not to match the supply to the demand, but in contrast, to match the demand to the available supply by using technology [9]. This way (i.e., matching demand to available supply) helps to achieve better generator utilization and fewer standby sources of energy which translates into reduce costs for both consumers and the utility operations. The dependency on non-renewable sources can be reduced (if impossible to get rid of altogether) by flattening the demand profile as shown in the Figure 1.1. In general smart grid should have following characteristics [33, 30, 34]: · Self-healing: autonomous in its operations and intelligently configure itself to make efficient use of available resources i.e., distributed renewable energy resources such as solar, wind and hydro. · Robust: stable enough to withstand any cyber attacks and at the same time sustain to line or cascading failures due to natural disaster (i.e., earthquake, storm etc.) or terrorist activity. 16

· Flexible: it should have the capability to adapt to new technologies such as energy storage in the form of home batteries, fuel cells, and plug-in hybrid or electric vehicles and renewable energy sources. · Bi-directional: Most importantly it can facilitate two-way flow of information (real time price and demand signals) both from utility to consumers and back to utility. The goal is to enable utilities to better predict their needs and in some cases involve consumers in some form of time-of-use based tariffs. Moreover, another important goal is to integrate renewable energies to the present grid so that energy industry can meet the needs of the future demand and supply [31]. The U.S. DOE define smart grid as [32], "an electric delivery network, from generation to the consumer integrated with the latest advances in digital and information technology to improve the electric system reliability, efficiency, security and resilient". However, much of the literature agrees that smart grid delivers electricity from suppliers to consumers using twoway digital technology to control appliances at consumer's home to save energy, reduce cost and increase reliability and transparency. Adapting to the concept of smart grid means the power industry will transform from a centralized producer controlled network to a less centralized and more consumer interactive infrastructure. A smarter grid makes this transformation possible by bringing the philosophies, concepts and technologies that enabled the Internet to the utility and the electric grid [35]. More importantly, it aligns the industry's best ideas for grid modernization to achieve their full potential (as shown in Figure 2.1).

2.3.1

Misconceptions about Smart Grid

Usually people confuse the term "Smart Grid" with "Smart Meter", thinking both terms have the same meaning or are a substitute for one another. In reality, metering is just one of many applications that comprise smart grid. However, the purpose of smart meter is to enable a two-way 17

illustrating the opportunities: the smart grid as enabling engine.

Enabling nationwide use of plug-in hybrid electric vehicles...

Allowing the seamless integration of renewable energy sources like wind...

Making large-scale energy storage a reality...

SMART GRID

Ushering in a new era of consumer choice...

Making use of solar energy ­ 24 hours a day...

Exploiting the use of green building standards to help "lighten the load..."

Figure 2.1: Illustrates the opportunities: the smart grid as enabling engine (from [35]).
15

communication, and gather data generated from the circulated technologies and consumer's involvement (also known as MDMS). Smart Grids do not include generation (i.e., centralized power generation), distributed or renewable [3]. Instead, smart grid covers technologies that facilitate us to incorporate new tools and techniques to keep the grid up-to-date. The function of the intelligent grid is to facilitate the actions of its participants eihter by bringing distributed generation in use or through DSM techniques or by optimal expansion and management of grid assets [3]. As these participants may be large or small (residential) their interaction with smart grid may or may not be at power level but they must interact at distribution level [3]. Since the definitive success of the smart grid relies on the efficiency of these devices in magnetizing and rousing a multitude of consumers [35].

2.3.2

Smart Grid Vs Present Grid

Contrasting to our present grid, smart grid has obvious benefits over many aspects of the power system. Table 2.1 [31, 36] provides a brief comparison between current grid and smart grid. Generally, the goals of building smart grid are to provide grid observability, better control of 18

Features Communication Metering-Measurement Control Customer role Reliability Power restored Rates (Pricing) Operation and management Generation resources Utility business Model

Table 2.1: Traditional Grid vs. Smart Grid.
Present Grid None or Unidirectional at best Accumulated Usage Limited Passive Tend malfunctions and power interruption Artificial Fixed Artificial device calibration Centralized and thermal dominated Utility centric ownership and operation

Smart Grid Bidirectional Interval Measurement Universal Active Adaptive protection and being islands Self-healing Actionable prices Remote monitoring Distributed and renewable Distributed ownership and operation

assets, enhance power quality, and system throughput and security. Other goals include: minimizing operations cost, maintenance and system planning. Some of the key characteristics [31, 37] of the future grid assumed to have are: Self-healing: The grid of the future will be capable of rapidly detecting, analyzing its operational status, responding and recovering to disruptions. The grid has the ability to intelligently monitor, diagnose and repair itself for the problems that are too large and too fast for human intervention (also known as self-healing mechanism). The smart grid will also be capable of predicting potential failures and future outages by mining data from the past events. Interactive: Smart grid enables real time two-way flow of information between consumers and utility and thus incorporates consumer equipments and behaviors into it's design and operations. The smart grid encourages users to actively participate in grid operations. For instance, price signals and DSM programs will encourage consumers to modify their consumption patterns according to grid's capacity to meet their demands. Robust: The grid of the future will be better immune and will stand resilient to cyber security attacks and natural disasters. Today, the world is completely aware of the criticality of energy delivery infrastructure and need for defense against malicious attacks and disruptions. For this reason, enhanced security is an essential characteristic of the smart grid. The security has been integrated into the architecture from the conception which will reduce physical and cyber-vulnerabilities and help improve the speed of recovery from failures and security breaches. Optimization: Improve asset utilization, effective in reducing operation and maintenance costs 19

and reduce power losses. Compatibility: A grid that will be compatible enough to accommodate different types of power generations including green power (environmentally friendly sources). As it is expected that distributed energy resources such as roof-top solar panels, and advanced storage batteries will be increasingly adopted by residential and commercial users. Integration: Integration of other technologies and resources - such as reusable energy - poses one of the greatest challenges for smart grid to become reality. It is being considered that linking all levels of transmission and distribution stations will be the greatest engineering project of this century. Some of the integration challenges include process optimization, information integration and standardization, inter-regional power transactions, network redundancy and refinement of the resource management.

2.4

Technical Composition and Functions of Smart Grid

Broadly, smart grid is divided into four main parts [31]:

2.4.0.1

Advanced metering infrastructure

AMI can easily be the backbone of future grid as it enables two way flow of information between utility and consumers where end users receive real-time price information and supplier-side receives up-to-date and accurate prediction of the future demand. This is one feature that makes the smart grid stand unique compared to traditional grid. It consists of the four main components [31, 7, 10] · Smart Meters: the credit of bi-directional communication goes to smart meters. Their key functions are automated unit reading, hourly pricing and consumption, power quality, theft detection, and pre-paid fees - selling electricity back to the utility. 20

· Home Area Network: it links smart meters and smart appliances (not in the market yet) to achieve the purpose of reasonable use of energy and hence reduce power consumption. Suitable means of linking are HomePlug and ZigBee technologies. · Meter Data Management System: it is a DBMS for sharing data with other information systems. Its main purpose is to validate the integrity and accuracy of AMI data for analysis and predict future consumption patterns. · Run pass: is used to interact with many other system-level application layers to achieve various functions.

2.4.0.2

Advanced Distribution Operation (ADO)

As compared to traditional power distribution, which partially automates circuit switching; ADO is a complete automation of all control devices and functions with the primary focus on the selfhealing capabilities of the smart grid.

2.4.0.3

Advanced Transmission Operations (ATO)

The goal is to achieve intelligent transmission with primary focus on congestion management and reducing the risk of mass failure.

2.4.0.4

Advance Asset Management (AAM)

It deals with the management of industrial equipments at user/logic layer and application and system layers.

2.4.1

Smart Grid Technologies

Smart grid integrates many technologies such as grid control technologies, transmission and distribution technologies and MICRO & MACRO grid technologies. Below are some of the key 21

amounts of sensory data coming in from the extremities and control system elements. Refer to Figure 1 for a visual representation of the Smart Grid structure.

·

.
2.2: Visual representation of the smart grid structure (from [39]). Figure1Figure smart grid structure technologies [31, 38] involved in the development of smart grid.

B. Smart Grid Components: At the physical level, the Smart Grid is comprised of five fundamental components: 2.4.1.1 Strong and Flexible network technologies · New Grid Components:. Distributed Generation (DG), The grid such of the future should have a strong flexible structure (Figure 2.2) which can cope with unas residential-scale CCHP (Combined Cycle Heat Power) units, (Plug-in Electric expectedand catastrophic events such as war,PHEV terrorist attacks and naturalHybrid disasters. Ultra-high voltage Vehicles), micro-turbines, solar photovoltaic cells, transmission can improve transmission capacity as well as distance and reduce transmission losses wind turbines, and grid energy storage units enable which help to save larger line corridor areas, saving capital and ecological environment. increased bi-directional power flow between power distributors and end-users
2.4.1.2

·

Sensing and Control Devices: Core duties are A high-speed bi-directional, real-time integrated communication network for smart grid must be evaluating congestion and grid stability, monitoring equipment energy theft enough prevention, and control reliable and isolated fromhealth, public network, and flexible to meet smart grid existing and strategies support. Technologies include: advanced future business needs microprocessor meters (smart meter) and meter reading equipment, wide-area monitoring systems, dynamic 2.4.1.3 line Demand Side Management rating (typically based on online readings by Distributed temperature sensing combined with Real DSM enables several functions through smart meters such as keeping track of the electricity use time thermal rating (RTTR) systems), electromagnetic at different times of the day, sending price signals and tariff rates and allows users to rate their signature measurement/analysis, time-of-use and realtime pricing tools, advanced switches and cables, 22 backscatter radio technology, and Digital protective relays. Smart meters: A smart grid replaces analog

·

Smart Grid Communication System

·

own policy for electricity usage according to their internal schedule. Thus, Wide Area Management System (WAMS) should be an important direction for the development of power monitoring system.

2.4.1.4

Intelligent Scheduling System

Smart scheduling is the core of smart grid as it promotes the ability to control large power grids and optimize the allocation of resources, risk mitigation, scientific decision making, flexible and efficient regulation and market deployment. Moreover, it also includes an emergency command system and an advanced distribution automation and control, and interaction with the user (such as, load management and real-time pricing).

2.4.1.5

Advanced Power Electronics

Power electronics technologies not only help energy savings up to 40%, but also reduce the volume of mechanical and electrical equipment, meanwhile providing best efficiency. These technologies include superconducting transmission cable, fault current limiters, composite conductors, Flexible AC Transmission System (FACTS), advanced energy storage, HVDC (High Voltage DC) transmission, advanced transformers, circuit breakers and dynamic voltage restorer as the representative of customer power technology.

2.4.1.6

Distributed Energy Access

Distributed energy includes distributed generation and distributed energy storage. Smart grid aims to build an intelligent network system which is adaptive in nature and that can monitor and collect power information of the network and real-time usage by using the most economic and secure transmission and distribution methods, in order to achieve energy efficiency, improve grid reliability and to convey quality energy to end-users. 23

2.4.1.7

Active Network Management Modules

To accommodate distributed energy, the present distribution network must move from a centrally controlled network to an actively distributed sub-networks. This transition will not only allow distributed energy generation to be more active, but will also enable the network operators to achieve higher degree of efficiency and reliability through automation in system controls.

2.4.1.8

FACTS Devices

FACTS devices can convert the transmission and distribution networks to a highly efficient and reliable system by improving the quality of power delivery. Some of the benefits of installing FACTS devices [31, 40] include: · Steady-state and dynamic reactive power compensation and voltage regulation · Steady-state and dynamic stability enhancement · Increase power transfer capability of existing assets and power quality and · Reduced fault current and transmission losses.

2.5

Demand Side Management

A significant amount of electricity produced in central power plants is consumed by residential sectors (small offices and commercial buildings). The largest portion of the energy is used for heating purposes [16, 17, 18]. The unit rate of electricity produced in these plants is very high, due to inefficient generation (at most 55% capacity). This is mainly because of waste heat produced as a by-product, and high fluctuations in demand. The ever increasing effects of greenhouse gases and growing energy prices require innovative changes in electricity generation, production and distribution [18]. 24

Making efficient use of energy, demands active user participation and use of efficient appliances (e.g., using LED-lights instead of conventional bulbs). In this regard, educating end-users [17] about the amount of energy consumed by each of their household appliances can help reduce the difference between peak and average loads. To achieve this, utilities have to design easy-tounderstand programs based on incentives, and encourage consumers to effectively manage their energy usage. This evolution will allow users to make more informed decisions about their energy consumption, adjusting both the timing and quantity of their electricity use. This ability is known as DSM, a "set of interconnected and flexible programs which allow customers a greater role in shifting their own demand for electricity during peak periods, and reducing their energy overall" [20]. DSM schemes using control systems operate at times when people consume more power i.e., encourage consumers to run heavy loads when overall demand is low, rather than at peak times [11]. Broadly, DSM techniques are categorized as Direct Control techniques where utilities manage and control demand side load (programs run under demand response fall under this category), and Indirect Control techniques where customers are encouraged to determine the loads through the time of use pricing (more effectively done through smart appliances) or by offering lower electricity prices (unit rate of electricity) [14].

2.5.1

Direct Control

Demand Response (DR) programs help shifting consumers load during periods of high demand to off-peak periods and can reduce critical peak demand [20]. In other words DR enables the loads to respond to changes in the supply side or price signals (i.e., higher prices indicate high demand) [34]. Also, DR can be implemented in the system by offering end-users lower price incentives for times when system reliability is not in danger (i.e., demand is not so high). Moreover, shifting peak demand not only provides electricity at lower rates, but also saves the cost of building additional 25

generation capacity to meet future critical peak demand [20]. Since utilities don't follow a single standard in implementing DR; thus computer automation will help in this regard, and to realize the true benefits of DR. Some of the obvious advantages of DR are [41]: it reduces human errors and helps to match the demand to the available supply. Studies in [42, 6], suggest that up to 70% of residential load can be interrupted or scheduled with no noticeable impact on consumer's comfort level.

2.5.2

Indirect Control

The key idea of DSM is to encourage consumers to consume electricity at specific times when the demand is not so high, thus shifting the load from peak times to off-peak times. This can be achieved by offering low electricity prices when we have excessive supply of electricity. This will not only improve grid reliability, but also improves power quality as well as minimize our reliance on carbon generating energy sources and thus reduces negative effects on the environment. According to [17, 16], about one half of the total energy is being consumed by residential consumers, home offices and commercial building sectors altogether. Most of the literature while discussing smart meters and smart appliances, and the role of different stakeholders such as energy suppliers, political institutes, green parties, smart devices manufacturers etc., totally ignores the role of the end users or more precisely their opinions and attitude towards new and effective ways of energy consumption and preservations [17]. In other words, if we really want to change the energy consumption patterns and make efficient use of the energy, this should not only be done from a top-down perspective.

2.5.3

Energy Efficiency and Conservation Programs

A study [17], found that many users are not well aware of their appliances usage. Thus, bringing awareness in consumers about the insight of the amount of energy consumed by each of their 26

household appliances can significantly change user's behavior about usage of these devices. As much as 15%-20% [8, 1] of energy can be preserved without doing much effort if users are provided with dynamic feedback - at the moment of using the appliance - through smart meters or appliances display (smart appliances). A study [1], lists different types of feedbacks and amount of energy saved against each of the types. By providing direct feedback, users are provided with immediate updates on their energy consumption patterns which has been proven very effective. A similar system using smart meters and existing modern telecommunication systems has been proposed in [1]. The idea is to inform users about their electricity consumption over their cell phones.

2.5.3.1

Smart Appliances

Smart or intelligent appliances can manage their activities according to the tariff information received from the utility [1]. A study in [42], has shown that appliances like electric heaters, furnace fan, refrigerators, washing machines and dishwashers are the most energy consuming appliances in a household. Smart technology can help in making efficient use of these appliances (i.e., by saving unnecessary usage of energy) as these appliances can be programmed to partly or completely turn-off (depending on electricity rates) without compromising the comfortability of the consumer [17]. However, the most concerning thing in this regard is to what degree the consumer will allow interference of these machines (smart appliances) into their lives? It is important to keep the consumer's attitudes and opinions in mind, especially in terms of their control over self regulating devices. Moreover, researches have revealed that there is a mix response when it comes to smart appliances acceptance. Furthermore, some users showed their unwillingness to change their daily habits e.g., they do not want to leave their wet laundry in the washing machine for hours. In addition, the respondents stress the need of self-control when it comes to the operation of these domestic smart appliances [17]. 27

V2G ­ Vehicle to Grid
What needs to be in this area:


Business Cases  Hardware Requirements  Communication Metering/Billing  Utility Contracts

06:00 - 09:30 High Demand

14:30 - 19:00 High Demand
09:30 - 14:30 Some of the charging done here

00:00 - 06:00 Most of the charging done here

01:00 02:00 03:00 04:00 05:00 06:00 07:00 08:00 09:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00

Key Enabler  Interconnection Standards
Nov 2008 Slide 20

19:00 - 00:00 Mostly Charged

Figure 2.3: Vehicle to Grid configuration (from [43]). 2.5.3.2 Distributed Storage

Fig. 6.

nd greenhouse gas management (see related paper by In particular, it has been p A major issue related to energy storage is: How to store surplus energy for the later use? An Baumann and Pearlman). series of standards for distribu include connectivity of electr immediate answer to the question is "batteries", but they can't store energy for longer periods. consideration are the followin Moreover, in present days there is no economical way to store a large amount of energy. However, ELECTRIC VEHICLE INTERCONNECTION WITH · Guide for EV connec another solution to this problem that can address both energy storage as well as THE GRID · transportation Standard for EV con ­ Functional Requir needs of the future are wide-scale usage of plug-in EV. In addition to distributed energy (solar, Several of the renewable sources have a problem of · Standard for EV con wind and tidal), an electric car if connected the smart grid ariability (i.e., intermittency) and means ofto storage are could provide additional distributed ­Validation Tests o eeded to ensure the stability of the grid. Batteries are the energy storage medium and helps manage supply and demand curve [43]. Nonetheless, there is a urrent solution. Another possibility that could address lot of work that needs to be done to make Vehicle-to-Grid (V2G) technology mature enough to be CONCL oth transportation requirements and energy management widespread deployment of plug-in would be the advent of for made available general public. Figure 2.3, illustrates the layout of EV connected to smart grid Many organizations are wo lectric or plug-in hybrid electric vehicles. While taking and time of the day where we can store surplus energy (in the form of EV transform charging) for later the use. existing grid dvantage of the transition to electricity generation to more grid. Making use of mo No doubt, EV provides a electric significantcar amount of storage capacity at distribution level. It has nd more renewable resources, the if connected computer control technology o the smart grid could provide additional nonobvious effects on the system in terms of total load i.e., there will be hundreds of thousands of the use and provision of el ransportation functionality e.g. as a distributed energy manner, making more use of a torage medium, and to help in load regulation. 28 sources while assisting in the A variety of activities need to be done to enable vehicle we do have. However, all of o grid interconnection to become a reality. First of all

vehicles getting charged at once, because of the lower electricity prices [40, 34]. Moreover, EV adds significant storage capacity into the network, but there are many requirements that must be met to make this happened, [40] one such requirement is frequency regulation. However, some companies are taking steps towards utilization of the energy storage technology and have deployed some trial projects. One example in particular is the installation of "Flow Batteries" in UK, which is capable of supplying 150kWh, with a maximum output of 100kW. These batteries are being used locally to supply emergency load, in case there is a loss of supply from the substation [40].

2.5.4

DSM Technologies

Some of the technologies [34, 40, 44] that can be used to implement DSM are: · Smart Meters: [34, 40, 44, 45] Today the most prevalent of the smart grid technologies are the smart meters. They provide means of communication between consumers and utilities and also make it possible for integration of other technologies such as DR. Moreover, smart meters can provide real time pricing of the electricity or indirect load control known as dynamic price response which includes time of use tariff, real time pricing and coincidental peak pricing. Furthermore, they are being considered as one of the most valuable tools of detecting and preventing electricity theft as information is being exchanged in real time. Therefore, tempering or bypassing the meter can be transmitted to the utility. · Demand Response: In practice DR can be defined as: "a technology that can enable loads to respond to the generation, transmission and distribution". It helps utilities to better optimize the flow of power across network and manage their transmission and distribution equipments. Also, it can be implemented in the system by offering end-users lower prices at the time when the system reliability is not in danger (i.e., demand is not so high). The communication between Demand Response Module (DRM) and the system can be done through Power Line Communication (PLC) or wireless. The DRM respond to changes in the supply side and can 29

switch off a group of appliances or any specific one(s). The module can either turn on the appliances automatically or can be set to do so manually. · Outage Management: The security and reliability of the supply in transmission and distribution is measured through several parameters e.g., number of interruptions, duration of an interruption and power interruption due to other failures. There are a number of factors that can effect these figures. For example, comparing to the cities, interruptions to rural areas may take longer to report and fixed. To improve the situation, smart sensors with Geographical Information System (GIS) capabilities can be deployed which can rapidly transmit the nature and the exact location of the incident to the local grid (or maintenance team). · Active Fault Level Monitoring: It monitors the different locations of the network in real time to access the level of connected generation and overall fault level. In case, the fault level approaches to its maximum permitted level(s), appropriate actions such as changing network topology by splitting the 'busbar' and changing the equivalent impedance. · Phasor Measurement Unit (PMU): Normally monitoring grid activities are done by calculating the average values taken over a period of time. But, this does not indicate the rapidly changing phenomena that can be associated with the system collapse. Monitoring the line voltage phase angles (phasors) can fill the gap by providing instantaneous measurement of electrical magnitudes and angles that can reveal emerging instability. However, this technology is mostly needed in industrial operations where the phase difference between 0 and 1 is non-negligible.

2.5.5

Barriers in Implementing Smart Grid

Among several challenges, some are listed below that utilities must overcome to make smart grid a reality. 30

2.5.5.1

Compatibility with Current Standards and Technologies

The critical factor to the performance of smart grid is its ability to interact with heterogeneous devices. Effective interoperability can only be achieved if a unified framework of various interfaces and standards have been agreed, developed and deployed. The issue arises when replacing the old and aging assets with new equipments which fall under smart grid concept. This brings in the complexity and unadaptability of the new assets with current communication standards and network management schemes [40]. For smart grid there is a need of an open and interoperable standard which can be extended across the gird from top-down to bottom-up as it is the case of Internet [43]. Energy Independent and Security Act of 2007 (EISA) has made National Institute of standards and Testing (NIST) responsible to oversee the development of interoperability standards [3]. In this regard, NIST is closely working with several other organizations to mitigate the problem [43]. Moreover, NIST is currently developing interoperability standards for equipments [3, 46]. Furthermore, a unified body should be formed where organizations of the participating nations can work together to identify existing standards and the need for the new ones.

2.5.5.2

Planning and Re-structuring of Power Industry

Privatizing the energy market has created an environment of high competition and investment. This will bring many new devices interfacing with existing structures which require greater consolidation [40]. At this level, devices have to deals with uncertainties, real time prediction and supply-side reliability [37]. Smart grid design must address these issues so that consumer can access to different tariffs and tax incentives for DSM technologies as well as deploying predictive real time system controls [47]. 31

2.5.5.3

Lack of Market Power for Smaller Utilities

Larger companies can easily dominate the market as they have more resources and better incentives to offer. Thus, it is less likely that projects started by smaller companies can get attention of a larger audience and may be postponed [40]. However, there are some challenges at energy auction level that must be addressed such as public impedance to deregulations, lack of time-dependent pricing information available to users, lack of consumer willingness to participate and lack of environmental imposition of taxes [37]. Moreover, a pricing model acceptable for all parties should be adopted as electricity rates at the time of peak demand is much higher comparing to off-peak time [5].

2.5.5.4

Cost of Smart Grid Technologies and Funding

Putting the new infrastructure in accordance to smart grid compliance requires heavy investments from the governments as well as private sectors. The justification behind smart grid technologies lie behind many assumptions and possible future scenarios such as existence of a high level of intermittent generation in the system. The affordability of smart grid technologies both to utility and end users must be assessed carefully due to high uncertainties involved. It will not be a straightforward task for sure [40]. Due to this, need of capital to spur innovation of new technologies in the area of smart grid is even higher [34, 37].

2.6

Recent research and development in smart grid

Due to the increase penetration and acceptance of smart grid concept, U.S. DOE's Advanced Research Projects-Energy (ARPA-E) has announced $30 million in aids for the research and development projects which mainly focused on finding alternative ways for the development of devices for smart grid so that the use of scarce earth metals can be reduced. The most relevant projects in this regard are EV batteries and wind power generators. Moreover, ARPA-E has also made available 32

additional funding($100 million) for research and innovation in the field of bio-fuels, thermal energy storage, solar power electronics and grid controls [48]. Siemens has recently expanded their team to meet the ever increasing demand for its products and services, mainly in smart grid and IT, in an effort to build an efficient and industrial automation. The company's sales has gone up by 9% whereas, it's order intakes are up by 15% for the 2nd quarter of 2010 [48].

2.6.1

Smart Grid Automation

Due to the highly complex nature of electrical systems, it is important to perform extensive testing to ensure its stability in the context of operational behaviors, before installing them practically. Apparently, installing a complex dynamic structure for a proposed system for experimental purposes seems very unrealistic and expansive. This is where computer automations are highly valuable, though they are computationally exhaustive, but they are much more cost effective. As of the mid 1990s, computer automation (or computer simulation) is a well studied and widely utilized problem solving technique. Simulations have widely been used in many different fields such as optimization of a new technology, engineering, testing, training, education and video games. Simulation provides a powerful approach for dealing with large number of components and interaction that comprise current and future's complex systems, since it provides concepts and capabilities that are missing in software analysis and design methods and tools. Moreover, simulating a complex system before implementation offers many benefits such as higher quality design, reduce costs, save time (operated more quickly than actual system), studying a problem at several different levels of abstraction, and for teaching and coaching purposes [49]. While simulating, discussing new ideas about how the system can be improved by brainstorming, posing questions and building better process understanding and so on [32]. Simulation is no longer simply a tool for analysis; simulations can provide support for a wide variety of purposes including, training, interaction, visualization, industrial automation, and decision support in real-time, just to name a few [49]. 33

Around the world, many researchers are trying to demonstrate the behavior of smart grid, particularly by implementing intelligent agents. The work in [26], concerns a simulation based analysis and designs for a smart city. This system included heterogeneous devices that act as consumers and/or producers of energy in an environment where they can act autonomously and collaborate in short time frames. The simulator is composed of three layers and all entities (households, appliances, power stations etc.) have been implemented using JAVA multi-agents system whereas, external systems can interact with the simulation through web services. Each agent represents a real world device on the grid and has different energy consumption patterns depending on the appliance it models. The simulator gets in startup values and scenarios from the database. The values are based on 2001 Residential Energy Consumption Survey (RECS) [50] done by U.S DOE. A project named "iDEaS" (Intelligent Decentralized Energy-Aware Systems), implemented in JAVA agents at University of Southampton demonstrates three key components of the smart grid [33]: · Energy Management: The project exhibits how agents can monitor, visualize and co-ordinate to help efficient use of energy in a house. · Micro-storage: How intelligently agents can store electricity to flatten demand (load) across the grid and reduce both costs and green house gases in the environment and · Efficient Energy Distribution: How agents can intelligently and effectively distribute energy within the smart grid, whereas fully complying to the capacity constraints of the transmission lines, while operating under novel marketing strategy. The author in [51], has prototyped a flexible and scalable approach to develop a MAS simulator at the micro-grid level, whereas (software) agents are implemented as devices to do different types of monitoring, analysis and reporting. The communication between agents was done through XML and JADE standards based on IEEE Computer Society Foundation for Intelligent Physical Agents (FIPA) conventions, to ensure that simulator can support different standards and hardware platforms. JADE library was used for its flexibility, ease of use and support for mobile agents. 34

Agents are autonomous in performing two types of duties which are categories as: Device agents - responsible for controlling a particular device in the electrical grid (e.g., transformers, circuit breakers and relays), while GUI agents - responsible for monitoring all simulation activities and provide graphical interface and reporting system performance. A modeling approach in [52] - very similar to the one presented in [26] - aimed to develop a simulator for evaluating different smart grid control algorithms by defining several different scenarios. The simulator takes in scenarios and data values from an externally connected database and generate graphical output for analysis. However, a simulator using network based approach is presented in [52]. The simulator illustrated that by deploying central coordinator inside the home gateway of the end-user has reduced (i.e., shifting) up to 22% of residential peak load. A detailed review, describing a roadmap for FSM (Fast Simulation and Modeling) tools for distributed systems can be found in [53]. The literature provides an overview of the FSM functionalities and provides guidelines for developing a simulator for electrical industry which is capable of these functions.

2.6.2

Need for Smart Grid

We need smart grid [13, 36]: · to manage already in placed electricity resources i.e., minimizing the number of new transmission and distribution wires · to distribute ownership between the utility, third-party providers and the customers. This will reduce overall long-run costs and spur innovation in generation sources. · to maximize the use of renewable energy resources by effectively incorporating into the grid. Distributing generation throughout the grid is expected to improve reliability, reduce the need for transmission expansion (i.e., long distance power transmission wires), reduce major siting issues, and encourage applications of alternative renewable options. 35

· to make efficient use of SMs which will act as an interface between utilities and customers to provide customers access to more detailed usage data thus educating customers (about their usage patterns and making efficient use of energy), wide range of pricing options including pre-payments and dynamic pricing. Moreover, customers can sell electricity back to the utility (i.e., a house with solar panel or wind turbine, an EV or commercial building with excessive diesel generation). This will increase the level of competition as well as consumer participation · to fully link both utility and consumers i.e., on the distribution side sensors and expert systems will be installed to automatically balance power flow and re-route power around disturbances, reported outages and provide utility operators with up-to-date weather conditions and future demands and on the consumer side, smart appliances and smart meters will be available, to make customers better understand how individual appliances and behavior impact their energy usage and cost. This will keep the utilities informed about the future demand and users will get up-to-date electricity pricing which will give them greater control over their consumption and help them reduce their electricity bills.

2.7

Benefits of Smart Grid

By transforming our present grid infrastructure into state of the art grid of the future (smart grid) can provide following prominent benefits [37, 40, 54, 55]: · Improved design and performance of the present electric grid · Reducing power outages as well as chances of blackouts · Enrich customer involvement through DSM programs · Monitoring utility operations and asset management 36

· Reduction in restoration time, operations and maintenance cost due to predictive analytics and self healing attribute of the grid · Availability of data for strategic planning as well as better prediction of future demand (with the help of AMI and MDMS) · Increased integration of distributed generation resources and save environment by minimizing the use of carbon emission sources · Improve grid reliability and power quality · Large scale distribution storage in the form of EV · A grid which is more secure and tolerant to attacks such as cyber-attacks or any unpleasant activity · Increased capital investment (i.e., utilities and business investing billions of Dollars in domestic solar, wind, energy efficiency, smart grid and EV companies and projects) and starting an era of job creation, opportunity and sustainable prosperity on an unprecedented scale that hasn't been seen in decades.

37

38

Chapter 3 Simulating the Smart Grid
Many utility companies are developing the so-called DSM solutions which aim to plan, implement and monitor the activities of utility companies mostly power distribution and consumption - with the primary focus on changing customer's energy consumption patterns to meet the desired load [17, 56]. DSM provides effective solutions, which contributes to the future distribution networks in various aspects, i.e., electricity market, control management, infrastructure construction and introduction of decentralizing energy sources and EV [57]. A crucial step in implementing DSM solutions is the accurate and timely monitoring of energy consumption, without which fine tuning of consumption is simply not possible. However, obtaining real data about real consumption at the level of individual customers e.g., a single household or an office - is difficult, and using simulation models can give us large amounts of data with a desired level of confidence in a safe and cost effective way [17, 58]. Therefore, a software system which can accurately simulate the power consumption can give us important insights into the behavior and performance of electricity usage, and provides the foundations for building energy management system of the future [17, 59].

3.1

Simulation

A model is a simplified representation of a real system. A simulation translates the model to analyze system's changing behavior over time that would not be otherwise exposed [19]. Simulation can be used to explain system behavior, improve existing systems, or to design new system too complex to be analyzed by spreadsheets or flow charts [58]. Simulations have widely been used 39

in many different fields, such as optimization of a new technology, engineering, testing, training, education and video games. Simulation provides a powerful approach for dealing with large number of components and interaction that comprise current and future's complex systems since it provides concepts and capabilities that are missing in software analysis and design methods and tools [21]. Moreover, simulations are also used for developing conceptual and architectural design of software-intensive systems. Furthermore, simulation helps to evaluate system architecture behavior and identify major flaws in the early stages of analysis and design phase [21]. Simulating complex system before implementing offers many benefits, such as higher quality design, reduce costs, save time operated more quickly than actual system, studying a problem at several different levels of abstraction, and for teaching and coaching purposes.

3.1.1

Simulation Types

Normally simulations are done on computers - i.e., standalone server-simulation or network based or distributed simulations. A simulation system can be discrete-event based - state changes at aperiodic time depending on the event nature - or continuous based - state changes with constant time increment [58]. A discrete event simulation manages events in time. Most computer based simulations fall in this category. In this type of simulation, the simulator holds a list of events sorted by simulated time and triggers events as their time reach in the simulation. A special type of discrete-event simulation is agent-based simulation which employs fussiness and independence consist of more than one autonomous agent that are able to interact with one another. These agents may have a global goal to solve together, or they may individually have their own goals to pursue [22]. Typically, continuous dynamic simulation performs numerical solutions of differential equations and uses their results to change the state and output of the simulation. Examples of continuous dynamic simulations include flight simulators, chemical process modeling and simulation of 40

electrical circuits.

3.2
3.2.1

Smart Grid Simulations and Demand Side Approaches
Demand Side Simulation

DSM focuses on improving energy efficiency and reducing consumption while preserving the same level of service and comfort. Utilities are designing easy-to-understand programs based on incentives to encourage consumers to effectively manage their energy usage. Various models have been developed by researchers to demonstrate the possible benefits of DSM. An on-line dynamic distributed resources management simulation [7] tool has been developed using Java and SQL database. Users can access the tool by logging in through a website. The goal is to illustrate customer-driven DSM operations and evaluate an estimate for home electricity consumption while minimizing the customer's cost [7]. The tool simulates the operations of smart homes i.e., (HAN) which is connected to the Internet through a smart meter. The tool carries out management tasks (distributed renewable resource management) using particle swarm optimization - an optimization algorithm which determines the distribution of energy obtained from various sources depending on the load. Based on the information retrieved from household appliances, the tool in return manages distributed renewable energy resources and electricity consumption. The results are validated through a sample case by comparing electricity bills with the one using optimized algorithm and same system without using the algorithm. The work in [6], addresses many important questions that may arise with the implementation of DSM, particularly in the residential sector. The simulation models household devices behavior and effects of DSM operations on their usage. Implementation has been done in Matlab using object oriented concepts for encapsulating user devices from DSM operations. All the implemented household appliances and DSM units get their initial values from excel file and generate graphical output. One limitation that must be kept in mind is 41

that the DSM system has a straightforward implementation i.e., it does not consider inter-device communication and more complex devices such as EV and only considers simple behaviors (i.e., turning 'on' and 'off') of all the implemented devices. A simulation platform upon which energy management algorithms for a distributed generation demand control system can be designed and tested is presented in [11]. The software is classified into three distinct components a) system level energy management - an embedded web server, b) communication - done through a CAN1 bus and c) energy node - distributed generation sources, batteries and EV. The novelty lies in its ability to separately observe the impact of high level management algorithms on the system as a whole, and also simulate the impact of the system on the individual components of a community micro-grid [11]. An agent based simulator for establishing marketing mechanism to collect funds through consumer bills, for the implementation of DSM programs is presented in [14]. One thing that makes this simulator a little different from conventional ones, is it uses human operators that control the behavior of their respective agents i.e., it involves three agents: government, sectoral and an expert (human). Each type of agents perform their specific duties. Government agent set forth the strategy for raising electric prices within predefine limit whereas, fifteen industrial sector agents formulate their strategy how to maintain the profits after raising the proposed unit price of electricity. Finally, open agent or human expert can intervene in any type of agent when it feels necessary to do so. A number of simulators in the field of power system engineering exist, including packages such as NEPLAN, PSS NETOMAC and SINCAL that provide professional network planning tools. However, well known simulators for communication systems include: ns-2, OPNET and QualNET, they all provide a platform for large scale network simulation [52]. However, they are not well suited to accurate simulation of energy consumption at the fine-grained level which is needed for future work on designing and implementing demand side solutions.
Area Network - a high speed bus protocol most commonly known for its application in the high-noise automotive environment.
1 Controller

42

3.2.2

MAS and Non MAS-based Approaches

Many researchers have proposed Multi-Agent System (MAS) approach to simulate different aspects of smart grid. In fact, agents have been the focus of attention in many areas of computer science and artificial intelligence and being widely used in several different applications [23]. Because of the advantages of autonomy, reactivity, social ability and so on, agent technology has been widely used for economic modeling and many important computer applications such as planning, process control, communication network configurations, and concurrent systems can benefit from agent based approach [14, 23]. Moreover, there are many applications of multi-agent technology in power market, such as power generator's biding, power market simulation and negotiation strategies [14]. In MAS, several software agent - a computer program which works toward its goal in a dynamic environment on behalf of another entity (human or computational), possibly over an extended period of time, without continuous direct supervision or control, and exhibits a significant degree of flexibility and creativity in how it seeks to transform goals into action tasks - cooperate to achieve some task. Based on the definition of software agent, a multi-agent model has the following prominent characteristics: autonomy - all agents are at least partially autonomous, local scope - no agent has global view to the system, and decentralization - there is no central controlling agent. Many tasks can be achieved in parallel by assigning different tasks to different agents. More robust, since there is no centralized controlling agent, the MAS systems can tolerate failures of one or more agents. This also adds modularity from a programmers perspective i.e., easier to add new agents with new task and responsibilities with simple programming [24, 60]. Moreover, MAS systems are useful where elucidation of intelligence is required [24]. Despite these benefits, MAS based approach is not well supported for every application e.g., applications which require fine grained data about individual entities as in the case of DSM solution which involve many agents and the number can go up to thousands or even higher. The execution of the agent based solution 43

i.e., DSM solution requires lots of memory and can be very time consuming. Moreover, large scale simulation involving thousands of agents are difficult to scale due to inefficiency of JADE agent service directory [25]. A substantial effort in the context of agent-based simulation is GridLab-DTM [7, 61], which is an agent-based, open sourced flexible simulation environment specifically designed to model smart grid system by U.S. DOE at PNNL, in collaboration with industry and academia. It is capable of tracking simultaneous states of numerous agents having many types of properties and behaviors, and gathering information about their status as time passes in the simulation. The ability to couple the tool with many third party data management and analysis tools provide unmatched analysis capabilities. At the core is an advanced algorithm that computes states of millions of objects simultaneously. The next state is determined after looking at each objects: next proposed state, consistency of the states with other object in the model, and time span that state last. In simplest, GridLab-DTM deeply examines every part of a distribution system with every other. All classes and libraries (internal or external) use are written in C language. Classes (or models) in GridLab-DTM are stored in GLM (GridLab-DTM Model) or XML (Extensible Markup Language) extensions. Often there are other files defining simulation boundary and provide supporting data. Normally, GLM files are required for stochastic studies and XML files are required for model exchange with other tools and viewing output results [61]. GridLab-DTM cab be used for simulation and analysis of power distribution system. It provides its users with advanced modeling techniques and high performance algorithms to understand and design smart grid appliances [7]. These appliances can help reduce energy consumption and electricity cost. Another feature is the availability of processed historic data which one can used to compare their consumption with the past. GridLab-DTM stimulates interaction between physical phenomena, business systems, market and regional economies, and customer behaviors. The results include many power system statistics (i.e., reliability metrics), business metrics (profitability), and per customer cost metrics. The output file can be read by a variety of tools such as Matlab, Excel, Gnuplot, and ODBC (Open Database 44

Connectivity). An agent-oriented approach for a self-healing smart grid by designing and imitating an autonomous micro-grid are shown in [62, 63]. The work in [26], concerns a simulation based analysis and designs for a smart city. This system included heterogeneous devices that act as consumers and/or producers of energy in an environment where they can act autonomously and collaborate in short time frames. The work in [29, 51, 64], demonstrates how agent technologies can assist in managing energy usage in homes, meeting the demand with the supply and effectively distribute energy within the smart grid. A MAS based model based on real scenario (i.e., a case study of Computer Science building in University of Nottingham) to help manage energy in human-centric buildings (offices, hospitals, schools etc.) is presented in [65]. The simulation model is based on four elements i.e., organization's energy management policies, energy management technologies installed in the building, electric appliances and human behavior. The aim is to meet all staff member's energy needs while making efficient use of electricity consumption. Another open source electrical system simulation tool specifically designed for utilities is OpenDSS (Open Distribution System Simulation) [66]. The top structure of the tool is written in Object Pascal using DELPHI environment, whereas business logic is in C/C++ languages. The simulator accepts input in the form of scripts (text based) or through external programs, can be connected through COM interface provided by the simulator. The output can be a graph, generated with the help of tool's built-in graphical DLL or MATLAB graph which further enhance tool's analytical and graphical capabilities. Some other efforts towards simulating different behaviors of smart grid include InteGrid [67], a laboratory based simulation engine to test, refine and validate advanced smart grid concepts. The project is a joint venture of Spirae2 and Colorado State University. The simulation engine is capable of providing solutions for utility, industry and commercial power systems. The work in [68], is
company which provides services for integrating renewable and distributed energy resources into power grids and industrial power systems.
2A

45

a standalone server simulation (XpertSim) which is a Dynamic Distribution System with primary focus on DSM and distribution automation. The application takes in historical and forecasted load models and produce powerful graphs and reports for analysis in web-compatible form. To study proposed designs and protocol used in smart grid, a laboratory based test-bed, "SmartGridLab" is designed in [29]. The design consists of two parallel networks: a power network with energy flow and information network with sensing and control data flow. The work presented in [18], is a graphical interface simulator developed using object oriented concepts. The simulator simulates heat and electricity streams within and between houses with the primary objective is to achieve energy efficiency. The next state of the grid is determined after evaluating status of each individual houses. The GUI allows to add or remove configurations and outputs runtime simulation results in graphical format. The same simulator with enhanced capabilities is presented in [57], with improved communication infrastructure/protocol and simulation speed. A hybrid approach of software and laboratory based test-bed which uses Internet as underlying communication infrastructure between utility and residential consumers in presented in [69]. The objective is to identify residential load profile whereas, residential consumers and utility are represented by client and server software. In this methodology, residential consumers each with a smart is represented by an experimental laboratory based workbench, configured to send/receive data over TCP/IP. The utility is being represented by a computational system which can analyze smart meters data and can store in a database (DBMS) whereas, Internet is used as bi-directional link to transmit and receive data.

3.2.3

Problem with the Existing Simulators

The problems with the above mentioned (smart grid) simulators are: · The primary focus is on the provider's side i.e., generation, transmission and distribution whereas, we are targeting to solve a consumer's (demand) side problem . · Secondly, non of them provide support for large scale simulation i.e., there is a limitation 46

that the whole s proof of concept done on the code of the resources. be possible with architecture are that this number covers existing in

VI. F

The work pres be coupled with system and how can be used tran relying at enterp implemented as p been identified th
·

Large Scale strated, we h However in Figure 3.1: CPU Memory usage when simulating large number (software) agents (from running it i Fig. 4. and Example: Memory and CPU measurements with of respect to 30000 [27]). simulated agents and DPWS devices in the "amplification scenario" physical com segments. L on the number of agents while simulating scenarios involving thousands of devices (agents) main, might stable, while in parallel the Assassin agent(s) try exactly the [22, 26, 27, 70]. As the number of tasks and agents both exceed from a certain threshold and results opposite i.e. to minimize agent populations based on specific · Strategy: M the criteria. systems performance degradation begins to grow exponentially with the load of high The logic of behind this scenario can range from were done a simple (like the one we implemented here as proof of concept) communication-to-computation ratio between agents, that is, it becomes non-scalable [22]. are there to up to very complex ones e.g. from the game theory domain. coming from domains. E. Evaluation Figure 3.1 shows simulation of a large number of software agent while monitoring system · re- Mobility: Th have made some measurements by a monitoring sources (i.e.,We CPU and Memory usage). initial The tests were performed on system with following and on stati system resources, the time to create a service agent, the a significan configuration: Intel(R) Core(TM) 2 Duo CPU 6600, 2.4 GHz, 64-bit Microsoft Windows VISTA number of agents created etc. All of the tests were done in a aforementio with configuration: Intel®CoreTM2 CPU operatingPC system, 8 the GB following of RAM, 64-bit SUN Microsystems Java SE v1.6Duo (server VM with in- seamlessly), 6600 , 2.4 GHz (x64), 64-bit Microsoft Windows VISTA, 8 in the simul 47 GB RAM, 64-bit SUN Microsystems Java SE v1.6 (server VM However thi with increased heap size). lenges, that As it is depicted in Fig. 4 for up to 25000 devices created, roaming dev

creased heap size). From the Figure 3.1 it can easily be seen that as the number of devices (agents) gone pass 25000 there is dramatic increase in the CPU and memory usage of the system, which resulted it being unresponsive. Since every system has limited memory, increasing the number of concurrent agents required more memory and reduce the possible number of concurrent tasks. This concludes that for every system the maximum possible number of tasks is inversely proportional to the number of agents [22]. In addition to this, agent-based models are very sensitive to their initial values (i.e., small variations to their starting values can result in a totally different outcome). This means we need multiple runs in order to assess the robustness of the results that is even time consuming. In addition to this, large scale simulations involving thousands of agents are difficult to scale due to inefficiency of JADE agent service directory [25] and also limited by the capabilities of the OS platform and its support for MAS systems.

48

Chapter 4

Methodology

In our previous chapter we described some of the approaches used to model DSM and technologies used in smart grid distribution network. Most of them use agents, but there is a limitation on the number of agents that can be used while simulating residential scenarios [26, 27, 70, 22]. Moreover, as the number of tasks and agents both exceed from a certain threshold the system's performance degradation begins to grow exponentially with the load of high communication-tocomputation ratio between agents, that is, it becomes non-scalable [22]. Since every system has limited memory, increasing the number of concurrent agents require more memory and would reduces the possible number of concurrent tasks. This means that for every system the maximum possible number of tasks is inversely proportional to the number of agents [22]. In addition to this, agent-based models are very sensitive to their initial conditions i.e., starting values of the variables. This means we need multiple runs in order to assess the robustness of the results that is even time consuming. Furthermore, large scale simulations involving thousands of agents are difficult to scale due to inefficiency of JADE agent service directory [25]. Keeping these limitations in mind, we are purposing a framework based on the fusion of DBMS and design patterns for large scale simulation. We used RDBMS as an underlying simulation engine which is capable of supporting large number of objects in a fast and efficient way, along with it we build the simulator using the MVC architectural pattern due to its wide acceptability for interactive applications and flexible and scalable nature. 49

View

Controller

DBMS

Simulation Engine

Model

Figure 1(a) Figure 4.1: General Architecture of DSS simulator.

4.1

Structure

. The work presented here is about the simulator of residential consumer energy demand which was ....

started from a very limited residential scenario and moved towards more complete scenarios to Appliance1 model real time energy usage of virtually..every customer. A similar approach has been followed in ... [6, 18, 57]. Since the requirements here are flexibility and scalability, we propose to use a RDBMS - which is designed and refined over the years to handle large number of simple objects - to host the model and the simulation engine with appropriate object structure using enterprise application patterns. As the result our simulator will be able to include not only residential users but office
Simulation buildings, hospitals, educational, and commercial users as well. Model Engine

Appliance2

The Model-View-Controller (MVC) architecture (Figure 4.1) style is widely accepted design for applications which are interactive in nature. It has direct applicability to software with the generic input, processing, output cycle, such as simulator environments. Figure 1(b) · The Model encapsulates state and content, while providing access and manipulation to the content. A model notifies its associated view(s) and controller(s) when there has been a change in its state. This notification allows the view to produce updated output, and the controller to change the available set of commands. The model implements the logic for the application's data domain and consists of simulation engine built atop a commercial RDBMS 50

(Microsoft SQL Server). · The View is implemented using C# language in a .NET environment. It renders the model into a form suitable for interaction and helps visualize all relevant data obtained by the simulator. · The Controller is charged with application level logic and behavioral aspects, and response to user input by initiating calls on model objects.

4.2

Our Approach

As it was stated earlier that modern DBMS can store hundreds of thousands of objects in an efficient way. In our approach we have used DBMS to store data about hundreds of thousands of households and many possible electrical power devices and appliances they might have, using individual appliance data from [8]. Since DBMS is relational in nature whereas our view and controller are object oriented, some kind of structure is required that can act as a middleware between them. A similar problem has encountered and a number of solutions have been proposed to it. One such set of solutions have been proposed by Fowler [71].

4.2.1

Transaction Script

Transaction script organizes the behavioral logic of the application into routines, where each routine implements only one request from the presentation layer (see Figure 4.2). The body of each method/or routine then executes the logic, usually starting a DBMS transaction and committing it at the end (e.g., populating "Device Info" table). It is the most common approach of writing code for any novice software developer. Most of the enterprise systems can be thought of as transaction script as one transaction (procedure) organizes the information and other may change it. The interaction between the front end and back end system (i.e., client-server architecture) contains a 51

Demand Side Simulator +pop_Tables(int no.households)() : void +update_Tables(int simTime, int thresholdValue)() : void +recordEvents(int thresholdValue)() : void +calCurrentConsumption()() : int +empty_Tables()() : void

DB

Figure 4.2: Conceptual representation of Transaction Script pattern. certain amount of logic. In some cases it can range from complex to as simple as displaying information to the end user. However, this process involves many steps of validations and calculations. In short, this pattern treats the application as series of transactions. In a system which involves complex domain logic, transaction script helps arrange actions into transactions and keeps them separate from one another. This leaves the task of taking input from the user, interrogating the back-end data model (DB in Figure 4.2), managing and saving your results back to the database. The point of placing transaction script depends on the application design - it can be a server page or CGI script or a distributed session object. This pattern can be implemented in two ways. A straightforward way which is applicable in most cases is to put multiple transaction scripts in one class, where each class defines a subject area of related transaction scripts. This method allows us to factor the transactions into higherlevel grouping and then creating a business component for each grouping. The second way is put each transaction script in its own class, thus allowing us to organize our domain logic using object oriented concepts (i.e., inheritance and polymorphism). The benefit of this is that, it allows you to manipulate instances of scripts as objects at runtime, even though this is not very common way of designing a system that uses transaction script. Instead, we can use global functions for arranging transaction scripts. In addition, making application layers (presentation, logic and database) independent of each other will make the system flexible, scalable and allows independent testing of transaction scripts. The benefit of transaction script is its simple procedural model and intuitive way of organizing business logic so that everyone can understand it. However, it is well suited for applications with 52

small amount of logic. As the level of the complexity increases, it becomes harder to keep transactions in a well organized form. In particular attention is the replication of the code in between transactions. Since the whole point is to handle one transaction, any common code tends to be duplicated. However, a carefully factored code can minimize many of the frequently occurring problems, but more complex logics must be designed using domain model which allows better structuring of the code which is easy to read, understand and reuse.

4.2.2

Domain Model

A domain model organizes domain logic in the form of interconnected objects (an object can be a house with many electric appliances or it can be representing an appliance with simple behavior) that contain both behavior and data see Figure 4.3. In domain model each object represents a single instance of database row or a device, as it is in our case. This is in essence identical to MAS based approach where each agent which represents single entity (e.g., a device) works and cooperates with many other agents in a dynamic environment to achieve a task, thus triggering problems such as slowing down the system or system become unresponsive due to high consumption of system resources (i.e., memory and computational time) by agents. It exercises the full strength of OOP by allowing us to incorporate all design patterns. Even then domain model does not perfectly suite for each and every problem of software development e.g., working with relational database, COM based applications etc. Using domain model is just like putting a whole new layer of behavioral objects which models the business domain of the application. In this approach of object model some objects provide data while others provide rules for the business (i.e., domain logic). In general there are two types of domain model: simple domain model and rich domain model. The earlier is much like database design with one domain object for each row whereas, the latter supports more complex logic and harder to map on the database. Typically, it evolve inheritance strategies, software design 53

Controller +recordEvent(device_Id, household_Id, oldConsumption, newConsumption)() : void «extends» Delete Update_Device +update_DeviceStatus(int device_Id)() : void +update_ScheduleTime(int device_Id)() : void +update_consumption(int device_Id, household_Id)() : void 1 1 popDevices +generate_Devices(household)() : void +empty(string tblName)() : void

DB
1 1 * houseHold +household_Id()() : void +householde_Name()() : void

* Device +device_Behavior()() : void +consumption()() : void

Device_Type +device_Id()() : void +device_Name()() : void +device_Type()() : void +duty_Cycle()() : void +consumtion()() : void +schedule_Time()() : void

Figure 4.3: Conceptual representation of Domain Model. patterns and complex network of small interconnected objects. In short, an application following this approach should have: · Object-relational mapping: Since this pattern "treats the relational database like a crazy aunt who's shut up in attic and whom nobody wants to talk about" [71] thus, a layer of mapping code is required. · ID generation: In domain model each object represents one entity in the database; this means each object has to store its own unique id (primary key). · Strongly-typed collection classes: An important issue is the intrinsic dependence of domain objects. For example, scheduling all appliances in a household may requires all objects related to the house. If we assign the duty of scheduling all appliances of all houses to one object then the update class might become heavily loaded. The rule of thumb here is to assign objects only those responsibilities which naturally fit to them. However, if bloating 54

occurs then we have to fix it, before it becomes a real headache. Implementing a desktop or multi-user based application using domain model means putting whole lot of objects into the memory at run time. Such applications can involve a large number of objects and swapping too many objects between memory and disk can be very time consuming and requires ample resources, which can lead to poor performance.

4.2.3

Table module

A table module organizes domain logic with one class per table and a single instance of the class handles the business logic for all rows in a database table or view. Whereas, transaction script has only one general class "Device" to handle all devices, a table module has many fine grained classes to handle different categories of devices e.g., standby devices, frequently used devices etc. On the other hand comparing table module with domain model, if you have many devices, a domain model will have one object per device while a table module will have one object to handle all devices. The benefit of table module is it allows you to combine data and logic together and at the same time plays with the strengths of the relational database (see Figure 4.4). The grouping of data and logic (behavior) provides encapsulation - in that the behavior is close to the data it will work on. The table module can be an instance or collection of static methods. The instance (static method) of the table module performs its logic against set of rows passed into it. On the high level, table module looks much like a normal object. The main difference is that, it has no relation with the objects it is working with. Thus, getting information about a particular house (i.e., how many appliances it has and their power consumption) we have to pass in some kind of identity reference. Often this is the primary key used in the database design. The word "table" might give a perception that there is one table module per table in the database, but this is not the case. Indeed, the structure of the table module doesn't really depend on the structure of the tables in the database, but more on the virtual tables perceived by the 55

Populate_Tables +readDeviceTypeTable()() : void +popTables(int no.Households)() : void

Update_Tables +updateDeviceInfo(int simTime)() : void +updateFutureEvents(int simTime)() : void

Controller +recordEvents(int thresholdValue)() : void

DB

calc_Instant_Power +calCurrentConsumption()() : int

Empty Tables +emptyTables()() : void

Figure 4.4: Conceptual representation of Table Module pattern. application, including views and queries. However, sometimes it is beneficial to have single table module for commonly used views or queries. Table module makes data structure fairly easy to access by putting it in the center of the code.
Demand Side Simulator

The benefit of using table module over transaction script is that the code is more reusable and
+pop_Tables(int no.households)() : void +update_Tables(int simTime, int thresholdValue)() : void domain logic is more organized and structured. +recordEvents(int thresholdValue)() : void +calCurrentConsumption()() : int +empty_Tables()() : void

It works well with simple data access layers, DB

and using record set with table module promotes strong typing at design level which leads to fewer runtime errors and better control over the data flow through the application. However, if the domain logic gets complicated its always better to switch with domain model. Substantially, you have to compromise between the complex logic of domain model and table module's easier integration with the underlying table-oriented data structure. Designing an application where the objective is to deal with hundreds of thousands of independent objects (organized in tables) are easier to manage using table module. As in case of domain model, assigning one object per record (table row) will put ample load on computer resources 56

Model
Household PK household_Id household_Name current_Consumption PK Device_Type device_Id device_Name min_Power max_Power average_Usage duty_Cycle mode probability on_Time off_Time next_SwitchTime

Simulation Engine
Future_Event PK,FK1 PK,FK1 PK device_Id household_Id schedule_Time operation Forecast_Demand History PK PK,FK1 PK,FK1 time device_Id household_Id failure_History reliability_History

Device_Info PK,FK2 PK,FK1 device_Id household_Id current_Status power_Consumption PK,FK1

Device_Behaviour device_Id states temperature health_Status current_Type environment_Friendly

Figure 4.5: Simulation Engine and Database Model of DSS. (memory and processing time) and thus significantly limits system performance. With table module, one object will perform all the required operations on the data (database table). For example, a device class is responsible for generating thousands of devices along with their unique properties i.e., initial time of scheduling, amount of power consume etc.

4.2.4

Our Data Model

Figure 4.5, shows the overview of database schema and relationships between tables of the data model and the simulation engine. The "Device Type" table holds the information and initial values of the objects which does not change throughout the simulation see table 5.1. Whereas "Household" and "Device Info" tables gets initialized each time at the start of the simulation. The number of entities generated in "Household" table are dependent on "number of households" value entered by the user before starting the simulation see Figure 4.9. Against each entry in the "Household" table (i.e., for each house) a list of devices from "Device Type" are randomly selected based on the probability values assigned to each device and inserted in the "Device info" table. Initially all de57

Controller

Household

Device Info

Device Behaviour star_tSimTime()

Device Type

Future Events

History

Smart Grid

res_Districit(int) return() create_Devices() list_Devices() get_DevBehavior() return() return() get_PastEvents() return() get_FutureEvents() return()

update_DeviceInfo() return() return()

Figure 4.6: Sequence chart showing single iteration operations. vices are turned `OFF' and their initial schedule time is read from "Device Type" table. However, during the simulation, table "Device Info", keeps track of each device's current status and amount of power it consumes. Whereas "Future Events" table keeps track of all those devices which are scheduled to be turn `ON' or `OFF' on next iteration (or near future in the simulation) and their mode of operation (initially, we have only one mode of operation for all devices). However, the simulation engine controls demand and assures the stability of the system, based on the future and past events. The sequence diagram (Figure 4.6) shows execution of a single iteration of the DSS. The length of the vertical boxes correspond to the life span of the objects during which they remain active. Every time the simulation starts, the clock (shown by smart grid object) keeps track of the time, the simulation takes to complete. The next step is to create a residential district of specified number of houses and after this is to put random number of appliances (devices) in each household from a list of devices provided by "device type" and create each appliance behavior using "device behavior" object. The instance "device info" holds the updated information about device's status and power consumption. Whereas "future events" provides all the necessary information about upcoming events and schedule each device for turning on or off for next time. The simulation iterates until the 58

end-time is reached which is provided by the user at the beginning of the simulation see Figure 4.9.

4.3

Algorithms

There are different types of electric appliances that are commonly used in a household and each appliance has its own cycle of operation (or mode of operation) which defines its contribution to the overall electricity consumption in a household. Based on this, we have grouped home electric appliances into four categories based on their pattern of usage.

4.3.1

Frequently Used Appliances

Appliances such as electrical cookers, microwave, interior lights, and computer equipment etc. are categorized as "frequently used" because they are frequently switched on or off by consumers and are clearly either in use or not in use. They do not have a standby mode and when switched off they do not consume electricity at all. The algorithm used to simulate the usage pattern of these appliances is shown in Algorithm 1. Algorithm 1: Behavior of frequently used appliances while simulation ends do if appliance is `ON' then set time when appliance next turns `ON' + random factor (so that appliance turns `ON' at different time); turn `OFF' the appliance; set new consumption by subtracting old consumption and power consumption of the appliance; else if appliance is `OFF' then set time when appliance next turns `OFF'; turn `ON' the appliance; set new consumption by adding old consumption and power consumption of the appliance; if (sub(newConsumption , oldConsumption))  T hresholdValue then record the information;

59

4.3.2

Regularly Used Appliances

Regularly used appliances refer to dish washer, washing machine or dryer, vacuum cleaner etc, which remain off most of the day time but normally used one or twice a day to do (daily) routine jobs. These appliances consume electricity only when they turn on. The algorithm used to simulate the usage pattern of these appliances is shown in Algorithm 2. Algorithm 2: Behavior of regularly used appliances if appliance is `ON' then set time so that appliance turns `ON' next day and random factor; turn `OFF' the appliance; set new consumption by subtracting old consumption and power consumption of the appliance; else if appliance is `OFF' then set time when appliance turns `OFF'; turn `ON' the appliance; set new consumption by adding old consumption and power consumption of the appliance;

4.3.3

Standby Appliances

Electrical appliances such as TV, refrigerators, central heat/AC etc. are called standby appliances. These appliances have three modes of operation: on, standby and switched off. Standby appliances consume electricity when they are in the modes of "in use" and on "standby". The only way to prevent them from consuming electricity is to disconnect their power supply. The algorithm used to simulate the usage pattern of these appliances is shown in Algorithm 3.

4.3.4

Occasionally Used Appliances

Occasionally used appliances such as hair dryer, electric drills and lawnmower etc, have two modes of operation on and off. Normally, these appliances remain switched off for many days and use 60

Algorithm 3: Behavior of standby appliances if appliance is `ON' then set time when appliance next turns `ON'; put appliance on standby; set new consumption by subtracting old consumption and power consumption of the appliance; else if appliance is `OFF' then set time when appliance goes to standby; turn `ON' the appliance; set new consumption by adding old consumption and power consumption of the appliance;

only at specific occasions i.e., lawnmower is used when we need to trim grass. The algorithm used to simulate the usage pattern of these appliances is shown in Algorithm 4. Algorithm 4: Behavior of occasionally used appliances if genNumber(1,5) equal to 1 then set time when appliance next turns `OFF'; turn `ON' the appliance; set new consumption by subtracting old consumption and power consumption of the appliance; else keep the appliance turned `OFF'; set time schedule time to next day and add random factor to it;

4.4

Model-View-Controller Interaction

To illustrate the manner in which our simulator's view and controller interact with the model, we show a C# function "populateTable" (see Figure 4.7) which takes an integer parameter. The function calls a SQL server Stored Procedure (SP) in the back-end database, shown in Figure 4.8. The C# function pass the integer parameter "length" to the calling SP which in return generates the number of households entries in the table "Household". The parameter "Length" is based on the interface value set by the user in the text box "No. of Households" see Figure 4.9. The 61

       //public float b;          //Object initialization        SmartGrid smartgrid= new SmartGrid();        /*This function is used to Insert entries into the Household Table.The number of records are based on the  user Input for How many households          he wants to run the simulation for?*/        /*This function fills in the Device_Info Table. Each Device is checked against a probability value to          decide if it is present a house or not*/               public void populateTable(int length)        {            try            {                SqlCommand cmd_popDeviceinfotb = new SqlCommand("sp_popTables", smartgrid.openDBconnection());                cmd_popDeviceinfotb.CommandType = System.Data.CommandType.StoredProcedure;                cmd_popDeviceinfotb.Parameters.Add(new SqlParameter("@Length", System.Data.SqlDbType.Int, 0,  "Length"));                cmd_popDeviceinfotb.Parameters[0].Value = length;                cmd_popDeviceinfotb.ExecuteNonQuery();            }            catch (SqlException sqlEx)            {                smartgrid.dbErrorMessage(sqlEx);            }            catch (Exception Ex)            {                smartgrid.errorMessage(Ex);            }            finally            {              smartgrid.openDBconnection().Close();            }        }//function ends here.        public void updateDeviceInfoTable(int sim_RunTime, int delta_val)        {               try            {                SqlCommand cmd_updateDeviceInfo = new SqlCommand("updateDeviceInfo", smartgrid.openDBconnection ());                cmd_updateDeviceInfo.CommandType = System.Data.CommandType.StoredProcedure;                cmd_updateDeviceInfo.Parameters.Add("@sim_RunTime", System.Data.SqlDbType.Int, 0, "sim_RunTime");                cmd_updateDeviceInfo.Parameters.Add("@delta_val", System.Data.SqlDbType.Int, 1, "delta_val");                cmd_updateDeviceInfo.Parameters[0].Value = sim_RunTime;                cmd_updateDeviceInfo.Parameters[1].Value = delta_val;                cmd_updateDeviceInfo.CommandTimeout = 2100;                cmd_updateDeviceInfo.ExecuteNonQuery();            }                            catch (SqlException sqlEx)            {                smartgrid.dbErrorMessage(sqlEx);

Figure 4.7: C# function calling a database procedure.

integer variable (in Figure 4.8) "@ErrVar hh" set to "@@ERROR" which is a global variable in SQL environment to check if any error(s) has been occurred during the SQL transaction. If no error(s) has occurred the transaction will be committed, otherwise it will be roll-backed. The query (INSERT INTO) in the body of the while loop creates number of rows each for one household until the (while-loop) condition becomes false.

4.4.1

View

The view of the DSS is shown in Figure 4.9. Before starting the simulation the user has to provide couple of values, the first is the "Simulation Time in Days" and "No. of Households" he/or she wants to run the simulation for. The threshold value (in Watt hours) is by default set to 500, but user can choose any value between 500 to 2000 Wh. After starting the simulation the clock (shown on the top of Figure 4.9) measures the time the simulator has taken to complete the simulation. The user can select any house to see the devices it has and how many of them are on and off. By clicking on "View Report" the user can see total number of devices in a residential district and the number of devices which are `ON'.

62

CREATE PROCEDURE [dbo].[sp_popTables] ( @Length INTEGER --Number of households to be created ) AS BEGIN DECLARE @ErrVar_hh INTEGER; DECLARE @name VarChar(10); SET @name= 'House_1' DECLARE @i INTEGER; SET @i = 1 -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Insert statements for procedure here BEGIN TRAN pop_Household --Starting an SQL transaction pop_Household SET @ErrVar_hh=@@ERROR --Global Varaible --INSERT INTO HOUSEHOLD TABLE WHILE (@i<=@Length) BEGIN -- Insert statements for procedure here INSERT INTO dbo.Household (household_Id, household_Name, max_Consumption) VALUES (@i , @name, 0) SET @i= @i+1; SET @name = 'House_'+ CONVERT(VarChar(10),@i); END IF (@ErrVar_hh>0) ­- check if any error has occures during the transaction ROLLBACK TRAN pop_Household ELSE COMMIT TRAN pop_Household END

Figure 4.8: Stored procedure generating the number of households.

Figure 4.9: View of DSS. 63

64

Chapter 5 Simulation Results
The information about usage and consumption patterns of all the devices used in our simulator has been taken from [8]. The information is refined so that behavior of all of the devices is close to their real life operations. The information is placed in "Device Type" table - a partial representation of it is shown in Table 5.1. The minimum and maximum powers of all the devices are calculated by subtracting and adding 20% of the original powers provided in [8]. During the simulation each device is assigned a random number (amount of power consumed) between (the calculated) minimun and maximum range. This is to model that the amount of power consumed by the same device is not same for all the houses. The column average usage in Table 5.1 shows average number of hours a day the device remains in use whereas the column, duty cycle (or run time) is the time the appliance is `ON' per day. If the appliance is fully user controlled such as an electric jug, the duty cycle is easier to calculate, but if it manages it's own cycle of operation (duty cycle) such as a refrigerators it is more difficult to calculate. The value in the column labeled "Probability" represents the probability that the appliance in question will be installed in a house. Initial time of schedule is the time when a device starts its cycle of operation in the simulation. The time is randomly choosen for all the devices, but for the standby appliances such as refrigerator and central Heat/AC the start time is set to 12:00 AM and all these appliances follow their duty cycle throughout the simulation. As stated earlier, residential consumers make most of the demand side load. Table 5.2 (based on the table in [42]) lists commonly found household appliances which make most of the residential load. Moreover, two additional characteristics of individual appliances are also shown. From 65

Device Name Water Heating Television Air Conditioning Interior Light (bulbs) Coffee Maker

Table 5.1: List of appliances with their initial parameter values.
Count 1 2 1 14 1 Min Power 96 480 2400 672 640 Max Power 144 720 3600 1008 960 Avg.Usage(hrs) 8 5 8 6 0.25 Duty Cycle 0.33 0.208 0.33 0.25 0.104

Probability 1 1 1 1 0.65

Schedule Time 00:00 00:00 00:00 07:00 05:00

Table 5.2, it can be observed that as much as 64.1% of residential load can be interrupted - defer the activation until the time when the demand is low e.g., water heater - with no noticeable impact on consumers, while up to 68.6% can be scheduled - turned on or off on an externally imposed schedule (i.e., from power meter) in order to reduce the peak demand - as long as the duty cycle remains the same, or close to the customer set value. Appliances such as clothes washer, dryer and dishwasher should not be interrupted as consumers may not like their laundry and dishes remain in the washer for so long. Similarly, appliance like range, TV and indoor/outdoor lights should neither be interrupted nor should be scheduled as no one will like to miss his/her dinner or favorite TV show(s). Table 5.2: Household appliances that can be interrupted or scheduled without affecting user comfort level.
Appliances Central heat/AC Furnace fans Electric water heater Refrigerator Freezer Clothes washer Clothes dryer Dishwasher Cooking range Television Lighting Control Interruptible Schedulable Y Y Y Y Y Y Y Y Y Y N Y N Y N Y N N N N N N Load% 39.9 8.9 7.5 6.6 1.2 0.2 2.7 1.6 1.9 3.1 26.4

5.1

Results

We run the simulator (for a period of 7 simulation days) for a residential district of 200, 1000, 5000, and 10,000 households respectively. A recorder was designed to monitor the power consumption 66

20.1125 17.03631 15.69087 100.585 85.17817 78.22986 170.3892 163.4688 80.09772

400 350 Avg. Events (per min.) 300 250 200 150 100 50 0 500 1000 1500 Threshold 10000 5000 1000 200 2000

Figure 5.1: Average no. of events reported by the controller.

of all the houses in a district and record those events when power consumption of any household goes up by a certain threshold value at a given moment of time (i.e., one time increase in the total consumption of any given house). The threshold values were set to 500, 1000, 1500 and 2000 watts respectively. The information of only those events which exceed the threshold value has been recorded. The number of events recorded against each of the residential district and threshold value are plotted on a 3D chart and are shown in Figure 5.1. The number of events reported are averaged to per minute as it is shown along the y-axis. The threshold value is set by the user before starting the simulation e.g., as it is shown in Figure 4.9, the threshold value is set to 1000 Watt hour. The chart shows a maximum of 355 average number of events are reported by a residential district of 10,000 households and a minimum of 1.6 average events for a residential district of 200 households. 67

5.1.1

Comparison with GridLab-D

We have made some initial measurements by monitoring system resources such as memory usage, CPU utilization and time taken for each simulation run. All the tests were performed on a system with the following configurations: Intel(R) Core(TM) 2 Duo CPU T6400, 2.00 GHz, 64bit Microsoft Windows 7 operating system, 4 GB of RAM. Initially all the readings are taken for a minimum of 10,000 to 100,000 appliances. The results of our simulator are compared with Gridlab-D which is an open source and free to download and install from [61]. To run Gridlab-D on a system for the first time we need to set window's environment variable for gnuplot - a graphical tool used with Gridlab-D to enhance it's graphical capabilities. Moreover, we have to create a new environment variable `GLPATH' and set paths to Gridlab-D's directories to run sample models (sample codes with .glm extension) or your own code which is also saved with .glm extension. The convenient way to write and execute your customized code is to configure Gridlab-D's syntax files with `TEXTPAD'. You can also check your installation as well as run your codes from Gridlab-D console, this option is for expert users and requires plain commands to perform simple tasks. All the software files and installation instructions are also available at [61]. Both simulators (DSS and GridLab-D) were run for same number of appliances while monitoring system resources. A graphical evaluation of the comparison between the two is shown in Figures 5.2, 5.3 and 5.4. Figure 5.2 shows a comparison between average and maximum CPU utilization when both simulators were run for a minimum of 10 to a maximum of 10,000 appliances. From the graph it can be observed that at the beginning of the simulation i.e., when number of appliances are minimum, the maximum CPU utilization of GridLab-D is much higher than DSS and has reached its maximum level (100%) as number of appliances has reached their highest value. Whereas, average and maximum CPU utilizations of DSS increase in a very controlled manner even appliances has growing to their maximum limit. On the other side, if we observe memory usage for both the simulators as it is shown in Figure 5.3. For small number of appliances GridLab-D has depicted a 68

100 90 CPU Utilization (%) 80 70
60

Avg. DSS Max. DSS Avg. GridLab-D Max. GridLab-D

50 40 30 20
10

0
1 10 100 1000 10000

No. Appliances
Figure 5.2: Comparison of CPU utilization for DSS and GridLab-D. significantly lower average and maximum memory usage as compare to DSS but on the contrary, as we increase the number of appliances DSS shows significantly lower memory usage comparing to GridLab-D's exponential increase in memory usage. Figure 5.4 shows comparison of simulation times between Gridlab-D and DSS. Similarly, as the number of appliances remain low, the simulation times for both simulators stayed close to each other, but as the number of appliances go above 1000, the simulation time of GridLab-D increases exponentially whereas, simulation time for DSS is much smaller even the number of appliances has reached 10,000.

5.1.2

Demand Side Simulator

We ran our simulator for a large number of appliances on the same machine with the above mentioned configurations. The results are quite impressive comparing to Gridlab-D. Initially, we run the simulator up to 100,000 appliances, but we believe that the number of simulated appliances can 69

2500
2400

Memory Usgae (MB)

2300
2200

2100 2000
1900

1800
1700

Avg. DSS
Max. DSS Avg. GridLab-D Max. GridLab-D

1600
1500

1

10

100 No. Appliances

1000

10000

Figure 5.3: Comparison of Memory Usage for DSS and GridLab-D.

6000 5500 5000 4500 4000 3500 3000 2500 2000 1500 1000 500 0

DSS GridLab-D

Time (Seconds)

1

10

100
No. Appliances

1000

10000

Figure 5.4: Simulation Time of DSS and GridLab-D.

70

900.00 800.00 700.00

Time (Minutes)

600.00

500.00 400.00
300.00 200.00 100.00 0.00
DSS

0

25000

50000

75000

100000

No. Appliances

Figure 5.5: Run Time of Demand Side Simulator over a period of 1 week of simulated time. easily exceed way more than this limit. Figure 5.5, shows run time for 100,000 appliances when it was run for a period of 7 (simulation) days. Along x-axis are the number of appliances with a uniform interval of 25,000 and y-axis shows time in minutes. The graph is obtained by fixing the number of days whereas, varying the number of appliances and observing the amount of time taken to complete the simulation. Figure 5.6, shows CPU utilization for DSS. Along x-axis are the number of appliances with a uniform interval of 25,000 and y-axis shows the percentage of CPU used. The chart shows that average and maximum CPU utilization remain stable throughout the simulation. Average and maximum memory usages of DSS are shown in Figure 5.7. Along x-axis are the number of appliances and y-axis shows the amount of memory (in MB) used during the simulation. Again, from the graph the overall and maximum memory usages are very close to each other. However, the graph shown in Figure 5.8, shows the time taken by the simulator to complete when the number of appliances are fixed to 50,000 and varying the number of days between 1 to 7. The DBMS approach with appropriate enterprise design pattern has allowed us to create a lot more objects than traditional MAS based approaches. The results have shown that the approach is 71

100

90
80 CPU Utilization (%) 70 60 50 40

30
20 10 0 0 25000 50000 75000 100000 No. Appliances
Figure 5.6: CPU utilization of Demand Side Simulator.
Avg. CPU Max CPU

2600 2500

2400
2300 Memory (MB) 2200

2100
2000 1900

1800
1700 1600 0 25000 50000 No. Appliances 75000 100000
Avg. Memory Usage Max Memory Usage

Figure 5.7: Memory Usage of Demand Side Simulator.

72

450.00
400.00

350.00 Time (Minutes) 300.00
250.00

200.00 150.00
100.00

50.00 0.00 1 2 3 4 No. of Days 5

Sim. Time 6 7

Figure 5.8: Simulation Time of Demand Side Simulator. suitable for large scale simulation involving hundreds of thousands of objects. Moreover, by using this approach the system remains fully functional and responsive and database server is the one doing most of the work at the back-end.

5.1.3

Demand Load

In order to produce input data for traffic modeling in a smart grid communication network, we have also tried to obtain the probability distribution of the number of messages sent in response to load variations. To quantify (i.e., to model) the communication traffic due to smart meter's reporting load chances to utility controller, we performed Kolmogorov-Smirnov test or (K-S test) on the resultant data i.e., events arrival rate. K-S test is used to check whether a given set of sample can be fitted with a given probability distribution. The advantage of using K-S test is that it makes no assumptions about the data i.e., non-parametric and distribution free. Another advantage is it work on non-normal data and not sensitive to scaling. We ran the simulator for 10,000 households (approx. 340,000 appliances) and recorded only those events requesting a load greater than 500, 1000, 1500 and 2000 Watts respectively. All these 73

4000000 3000000 2000000 1000000 0 1 500000 400000 300000 200000 100000 0 0 1 2 3 4 5 6 7 8 1500 Watts 2 3 4 5 6 7 8 9 500 Watts

1500000 1000000 500000 0 1 2 3 4 5 6 7 8 9 10 11 400000 300000 200000 100000 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 2000 Watts 1000 Watts

Figure 5.9: Histogram of events reporting time (seconds). messages are arranged according to their arrival time. A graphical representation has been shown in Figure 5.9. We run the K-S test on the individual data set obtained against each threshold value. The K-S test provided us with a list of distributions which best fit with our data. The top five distributions for each threshold value are shown in the Table 5.3. Table 5.3: List of distributions which suits best with our data.
1000 Dagum Log. Logistic Frechet Log. Pearson 3 Log. Gamma 1500 Phased Bi.Exponential Frechet Log. Logistic Weibull Gamma

500 Burr Weibull Phased Bi.Exponential Frechet Log. Logistic

2000 Fatigue Life Weibull Frechet Log. Logistic LogNormal

We choose `Frechet distribution' [72] which is a special case of the generalized extreme value distribution and is used to model extreme events. The formula which defines Frechet distribution is shown in Figure 5.10, where  is the shape parameter ( > 0), and  is the scale parameter ( > 0). This distribution is bounded on the lower side (x > 0, in the Figure 5.10 'x' is time in seconds and can't be less than 0) and has a heavy tail [72]. A distribution who has a heavy tail, is a probability distribution whose tail is not exponentially bounded i.e., it has heavy tail than the exponential distribution. Moreover, in heavy tail distribution most of the data values are spread out along the tail. Figure 5.10 shows Probability Distribution Functions (PDF) for all four thresholds, 74

8/9/12

f_126.gif (266×50)

500 Watts

1000 Watts

1500 Watts

2000 Watts

Figure 5.10: Probability Distribution Function (K-S Test). the curve describes the rate of flow of information between smart meters and utility controllers.

5.2

Limitations

Simulation models provide a simplistic view of reality and as such their results should not be accepted without assessing their limitations. The main limitations of our (DSS) simulator are given below. · The most obvious limitation is that we have not considered the complex behavior of appliances. We have placed most emphasis on appliance's simplest activation patterns i.e., `ON' and `OFF' where either they consume electricity or does not consume at all. 75

· Another limitation is to consider appliances which are commonly found in a house. This seems the simplest path towards the implementation of large scale simulation. · A more complex and efficient algorithm for the controller should be designed that can help better reduce peak-to-average load ratio by saving energy while fulfilling consumer requirements to a satisfactory level.

76

Chapter 6 Conclusions and Future Work
The intent of this thesis was to build a high performance simulator of residential electricity consumption that will allow us to obtain fine-grained data about the consumption of individual households as well as residential district. The design of the simulator is based on the fusion of DBMS and domain logic patterns. Since, we used MVC architectural pattern to build our simulator and we know that DBMS hosts and manipulates the data which is relational in nature, whereas our controller is object oriented in nature, interfacing the two is not a trivial task. The problem has appeared in many RDBMS applications, and a number of alternative solutions have been systematized in the enterprise application patterns. Since domain model organizes domain logic so that each object corresponds to a single row of data in a database table, which makes the conversion from one to another and vice versa rather simple. However, due to the large number of rows in our tables, this solution was deemed to be unsatisfactory - in fact, it could be very similar to the MAS paradigm in terms of scalability and performance. Similarly, transaction script organizes domain logic in a series of small procedural scripts, each of which corresponds to an operation on the database; script may or may not be collected into application level classes. Some scripts may even be handled by the RDBMS itself, in the form of stored procedures and database triggers. This solution is fast and flexible in the beginning, but may suffer from inflexibility later, when the domain logic evolves and becomes very complex. Finally, a table module organizes domain logic according to the principle of one class per table, regardless of the number of rows in the table. This solution requires certain implementation constructs which fortunately exist in the chosen RDBMS. Since, our simulator considers one event at a time; which means we need only one object at a time, 77

this solution deems more suitable for our problem. Our simulator is able to simulate realistic scenarios, both on small or on large scale. We have purposed a novel framework for large scale simulation based on ubiquitous RDBMS and enterprise design patterns. Moreover, the results are convincing enough to reason that the purposed architecture is much more faster and efficient then agent-based approache (described in section 3.2.1). Furthermore, the simulator can be used for evaluation of demand side load by approximating average number of events for each household requesting a demand load greater than a certain threshold value. In addition, an evaluation of traffic load between utility controllers and smart meters has also been provided by analyzing resultant data obtained from the simulator. The simulator can be used by utility companies to obtain initial data that can lead to the development of more complex solutions to monitor and control energy consumption, and thus identify target operating points for the generation and distribution systems, and helps to achieve the goal of balancing the demand and supply, and of improving energy efficiency which is an important commitment of the smart grid. Regarding future research, it would be beneficial to extend the simulator to include more complex appliance activation patterns (e.g., EM and EV) and more complex human-electric appliance interactions into the model, which will make the tool more applicable. To do this, one can write its own API in C# or alternatively in C/C++ just like GridLab-D has one. The API should allow users to create appliances which can depict different states i.e., on, off, standby, stalled and tripped. Moreover, including residential and office buildings and commercial buildings such as schools, hospitals etc, which have even complex behavior of consuming energy, e.g., large number of staff and complex energy management strategies. Another promising direction is to design a control algorithm that can help to minimize the peak-to-average load difference and thus improve energy efficiency and quality and lead to decreased electricity bills.

78

Bibliography
[1] M. Abdullah and B. Dwolatzky, "Smart Demand-Side Energy Management based on cellular technology - a way towards smart grid technologies in Africa and low budget economies," in AFRICON, 2009, Sep. 2009, pp. 1­5. [2] C. Sorinel, "Smart grid technology," Ovidius University Annals, Economic Sciences Series, pp. 613­617, May 2010. [Online]. Available: http://ideas.repec.org/a/ovi/oviste/ v10y2010i1p613-617.html [3] P. Wolfs and S. Isalm, "Potential barriers to smart grid technology in Australia," in Australian Universities Power Engineering Conference, 2009. AUPEC 2009., Sep. 2009, pp. 1­6. [4] J. Berst, "Electronomics: Why we need smart grid technology and infrastruc-

ture today," Online Article. retrieved from http:// www.xconomy.com/ seattle/ 2009/ 02/ 12/ electronomics-why-we-need-smart-grid-technology-and-infrastructure-today/ , Sep. 2012. [5] J. Moe, "Why we need to build a smart grid fast," Online Article. retrieved from http:// www. marketplace.org/ topics/ tech/ why-we-need-build-smart-grid-fast, Apr. 2012. [6] F. Zeilinger, "Simulation of the effect of Demand Side Management to the power consumption of households," in Proceedings of the 2011 3rd International Youth Conference on Energetics (IYCE), Jul. 2011, pp. 1­9. [7] N. Gudi, L. Wang, V. Devabhaktuni, and S. Depuru, "A Demand-Side Management simulation platform incorporating optimal management of distributed renewable resources," in Power Systems Conference and Exposition (PSCE), 2011 IEEE/PES, Mar. 2011, pp. 1­7. 79

[8] "Electricity demand. electropaedia, energy sources and energy storage, battery and energy encyclopaedia and history of technology." [Online]. Available: http://www.mpoweruk.com/ electricity demand.htm [9] S. Gormus, P. Kulkarni, and Z. Fan, "The power of networking: How networking can help power management," in First IEEE International Conference on Smart Grid Communications (SmartGridComm), Oct. 2010, pp. 561­565. [10] L. MacIsaac and A. Knox, "Domestic end-use simulation of smart grid technologies," in International Conference and Exhibition on Innovative Smart Grid Technologies (ISGT Europe), 2011 2nd IEEE PES, Dec. 2011, pp. 1­6. [11] A. Croft, U. Madawala, and D. Thrimawithana, "Simulation platform for micro-grids with Demand-Side Management," in IECON 2011 - 37th Annual Conference on IEEE Industrial Electronics Society, Nov. 2011, pp. 3254 ­3259. [12] R. Barlow, "Enabling the smart grid we need," Online Article. retrieved from http:// www. wireie.com/ pdfs/ EnablingtheSmartGridWeNeed.pdf , 2011. [13] "Why do we need a smart grid in Ireland," Online Article. retrieved from http:// www.seai.ie/ Renewables/ Smart Grids/ Why does Ireland need a Smart Grid, Aug. 2012. [14] K. Zhang, Z. Ji, and X. Tan, "Simulation of market mechanism in promoting Demand Side Management by Open-agents model," in International Conference on Computational Intelligence and Natural Computing, 2009. CINC '09., vol. 2, Jun. 2009, pp. 371 ­374. [15] G. Wood and M. Newborough, "Dynamic energy-consumption indicators for domestic appliances: environment, behavior and design," Energy and Buildings, vol. 35, no. 8, pp. 821 ­ 841, 2003. [Online]. Available: http://www.sciencedirect.com/science/article/pii/ S0378778802002414 80

[16] K. Kok, S. Karnouskos, D. Nestle, A. Dimeas, A. Weidlich, C. Warmer, P. Strauss, B. Buchholz, S. Drenkard, N. Hatziargyriou, and V. Lioliou, "Smart houses for a smart grid," in 20th International Conference and Exhibition on Electricity Distribution - CIRED 2009, Jun. 2009, pp. 1­4. [17] J. Stragier, L. Hauttekeete, and L. De Marez, "Introducing smart grids in residential contexts: Consumers' perception of smart household appliances," in IEEE Conference on Innovative Technologies for an Efficient and Reliable Electricity Supply (CITRES), Sep. 2010, pp. 135­ 142. [18] A. Molderink, M. Bosman, V. Bakker, J. Hurink, and G. Smit, "Simulating the effect on the energy efficiency of smart grid technologies," in Proceedings of the 2009 Winter Simulation Conference (WSC), Dec. 2009, pp. 1530­1541. [19] "National power grid simulation capability: Needs and issues," Online Article. retrieved from http:// web.anl.gov/ eesa/ pdfs/ brochures/ PowerGridBrochure.pdf , Dec. 09-10 2008. [20] B. Davito, H. Tai, and R. Uhlaner, "The smart grid and the promise of Demand Side Management," The Americas, pp. 38­44, 2010. [21] A. E. Ferayorni and H. S. Sarjoughian, "Domain driven simulation modeling for software design," in Proceedings of the 2007 summer computer simulation conference, ser. SCSC. San Diego, CA, USA: Society for Computer Simulation International, 2007, pp. 297­304. [Online]. Available: http://dl.acm.org/citation.cfm?id=1357910.1357958 [22] L. C. Lee, H. S. Nwana, D. T. Ndumu, and P. De Wilde, "The stability, scalability and performance of multi-agent systems," BT Technology Journal, vol. 16, no. 3, pp. 94­103, Jul. 1998. [Online]. Available: http://dx.doi.org/10.1023/A:1009686016775 81

[23] T. Nagata, H. Watanabe, M. Ohno, and H. Sasaki, "A multi-agent approach to power system restoration," in Power System Technology, 2000. Proceedings. PowerCon 2000. International Conference on, vol. 3, 2000, pp. 1551­1556. [24] C. Kray, "The benefits of multi-agent systems in spatial reasoning," in Proceedings of FLAIRS, 2001. [25] D. Mengistu, P. Troger, L. Lundberg, and P. Davidsson, "Scalability in distributed multiagent based simulations: The JADE case," in Second International Conference on Future Generation Communication and Networking Symposia FGCNS'08, vol. 5, Dec. 2008, pp. 93­99. [26] S. Karnouskos and T. de Holanda, "Simulation of a smart grid city with software agents," in Third UKSim European Symposium on Computer Modeling and Simulation EMS'09, Nov. 2009, pp. 424­429. [27] S. Karnouskos and M. Tariq, "Using multi-agent systems to simulate dynamic infrastructures populated with large numbers of web service enabled devices," in International Symposium on Autonomous Decentralized Systems ISADS'09, Mar. 2009, pp. 1­7. [28] E. Gamma, R. Helm, R. Johnson, and J. Vlissides, Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley Longman, 1995. [29] G. Lu, D. De, and W.-Z. Song, "Smartgridlab: A laboratory-based smart grid testbed," The Americas, 2010. [30] K. Tomsovic, "Research needs for the intelligent grid of the future," in Intelligent Systems Application to Power Systems, 2005. Proceedings of the 13th International Conference on, Nov. 2005, p. 1 pp. 82

[31] X.-S. Zhou, L.-Q. Cui, and Y.-J. Ma, "Research on smart grid technology," in International Conference on Computer Application and System Modeling (ICCASM), vol. 3, Oct. 2010, pp. 599­603. [32] G. Reed, P. Philip, A. Barchowsky, C. Lippert, and A. Sparacino, "Sample survey of smart grid approaches and technology gap analysis," in IEEE PES Innovative Smart Grid Technologies Conference Europe (ISGT Europe), Oct. 2010, pp. 1­10. [33] P. Vytelingum, T. D. Voice, S. D. Ramchurn, A. Rogers, and N. R. Jennings, "Intelligent agents for the smart grid," in Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems: volume 1, ser. AAMAS '10. Richland,

SC: International Foundation for Autonomous Agents and Multiagent Systems, 2010, pp. 1649­1650. [Online]. Available: http://dl.acm.org/citation.cfm?id=1838206.1838524 [34] B. Saint, "Rural distribution system planning using smart grid technologies," in IEEE Rural Electric Power Conference REPC'09, Apr. 2009, pp. 1­8. [35] "Smart grid: An introduction, prepared by litos strategic communications for the U.S. Dept. of Energy," pp. 1­48. [Online]. Available: http://energy.gov/sites/prod/files/oeprod/ DocumentsandMedia/DOE SG Book Single Pages(1).pdf [36] R. Levy, "An Introduction - smart grid 101," Online Article. retrieved from http:// www.naruc. org/ FERC/ SmartGrid101/ SmartGrid101-Introduction.pdf , Feb. 2010. [37] R. Hassan and G. Radman, "Survey on smart grid," in IEEE SoutheastCon 2010 (SoutheastCon), Proceedings of the, Mar. 2010, pp. 210 ­213. [38] C. Shu-yong, S. Shu-fang, L. Lan-xin, and S. Jie, "Survey on smart grid technology." China Electric Power Research Institute, Haidian District,Beijing 100192,China, 2009, pp. 1­7. 83

[39] C. Wei, "A conceptual framework for smart grid," in Power and Energy Engineering Conference (APPEEC), 2010 Asia-Pacific, Mar. 2010, pp. 1­4. [40] V. Hamidi, K. Smith, and R. Wilson, "Smart grid technology review within the transmission and distribution sector," in Innovative Smart Grid Technologies Conference Europe (ISGT Europe), 2010 IEEE PES, Oct. 2010, pp. 1­8. [41] A. Roychowdhury, "Realizing the OpenADR demand and response specification using SIP," pp. 205­212, 2009. [42] R. Podmore and M. Robinson, "The role of simulators for smart grid development," Smart Grid, IEEE Transactions on, vol. 1, no. 2, pp. 205­212, Sep. 2010. [43] R. DeBlasio and C. Tom, "Standards for the smart grid," in Energy 2030 Conference, 2008. ENERGY 2008. IEEE, Nov. 2008, pp. 1­7. [44] C. Harris and J. P. Meyers, "Working smarter, not harder: An introduction to the smart grid," in The Electrochemical Society Interface, Sep. 2010, pp. 45­48. [45] D. Rua, D. Issicaba, F. Soares, P. Almeida, R. Rei, and J. Lopes, "Advanced metering infrastructure functionalities for electric mobility," in Innovative Smart Grid Technologies Conference Europe (ISGT Europe), 2010 IEEE PES, Oct. 2010, pp. 1­7. [46] M. Lauby, "Reliability considerations for application of smart grid technologies," in Power and Energy Society General Meeting, 2010 IEEE, Jul. 2010, pp. 1­4. [47] J. Momoh, "Smart grid design for efficient and flexible power networks operation and control," in Power Systems Conference and Exposition, 2009. PSCE '09. IEEE/PES, Mar. 2009, pp. 1­8. [48] "Smart grid: Smart grid news - grid modernization and the smart grid," Online Article. retrieved from http:// www.smartgridnews.com/ index.html, 2011. 84

[49] E. H.Page, "Simulation modeling methodology: Principles and etiology of decision support," Master's thesis, Virginia Polytechnic Institute and State University, 1994, retrieved from http: //thesimguy.com/articles/simModMeth.pdf. [50] "U.S. Department of Energy. electricity consumption by end use in U.S. households, 2001." [Online]. Available: http://www.eia.doe.gov/emeu/reps/enduse/er01 us tab1.html [51] S. Bou Ghosh, P. Ranganathan, S. Salem, J. Tang, D. Loegering, and K. Nygard, "Agentoriented designs for a self healing smart grid," in First IEEE International Conference on Smart Grid Communications (SmartGridComm), Oct. 2010, pp. 461­466. [52] T. Verschueren, W. Haerick, K. Mets, C. Develder, F. De Turck, and T. Pollet, "Architectures for smart end-user services in the power grid," in IEEE/IFIP Network Operations and Management Symposium (NOMS) Workshops, Apr. 2010, pp. 316­322. [53] X. Mamo, M. McGranaghan, R. Dugan, J. Maire, and O. Devaux, "A roadmap for developing real time distribution system simulation tools for the smart grid," in SmartGrids for Distribution, 2008. IET-CIRED. CIRED Seminar, Jun. 2008, pp. 1 ­7. [54] J. Roncero, "Integration is key to smart grid management," in SmartGrids for Distribution, 2008. IET-CIRED. CIRED Seminar, Jun. 2008, pp. 1­4. [55] "What consumers need to know about the smart grid and smart meters," Online Article. retrieved from http:// www.edf.org/ sites/ default/ files/ EDF-smart-grid-benefits-fact-sheet 0. pdf , pp. 1­2, 2012. [56] T. Luo, G. Ault, and S. Galloway, "Demand Side Management in a highly decentralized energy future," in 45th International Universities Power Engineering Conference (UPEC), Aug/Sep. 2010, pp. 1­6. 85

[57] V. Bakker, A. Molderink, M. G. Bosman, J. L. Hurink, and G. J. Smit, "On simulating the effect on the energy efficiency of smart grid technologies." in Proceedings of the 2010 Winter Simulation Conference, 2010, pp. 393­404. [58] R. J. Madachy, Software Process Dynamics. New York: McGraw-Hill, 2007.

[59] M. Kezunovic, "Teaching the smart grid fundamentals using modeling, simulation, and hands-on laboratory experiments," in IEEE Power and Energy Society General Meeting, 2010, Jul. 2010, pp. 1­6. [60] A. Lucny, "Advantages of multi-agent approach to building of monitoring systems," in Department of Applied Informatics, FMFI. Bratislava, Slovakia, pp. 1­5. [61] "GridLAB-D the smart grid simulator," Online Article. retrieved from http:// www.gridlabd. org/ brochures/ 20090902 gridlabd brochure.pdf , pp. 1­4, Mar. 2012. [62] M. Pipattanasomporn and S. Rahman, "Intelligent distributed autonomous power systems (idaps) and their impact on critical electrical loads," in First IEEE International Workshop on Critical Infrastructure Protection, Nov. 2005. [63] H. Wang, "Multi-agent co-ordination for the secondary voltage control in power-system contingencies," IEE Proceedings Generation, Transmission and Distribution, vol. 148, no. 1, pp. 61­66, Jan. 2001. [64] M. Pipattanasomporn, H. Feroze, and S. Rahman, "Multi-agent systems in a distributed smart grid: Design and implementation," in IEEE/PES Power Systems Conference and Exposition PSCE'09, Mar. 2009, pp. 1­8. [65] T. Zhang, P.-O. Siebers, and U. Aickelin, "Modelling electricity consumption in office buildings: An agent based approach," Energy and Buildings, vol. 43, no. 10, pp. 86 Comenius University, Mlynsk Dolina, 842 48

2882­2892, 2011. [Online]. Available: http://www.sciencedirect.com/science/article/pii/ S0378778811003094 [66] R. C. Dugan, "The open distribution system simulator (opendss)," Online Article. retrieved from http:// www.smartgrid.epri.com/ SimulationTool.aspx, pp. 1­118, 2010. [67] "InteGrid simulation software," Online Article. retrieved from http:// www.integridlab.com/ resources.html, 2012. [68] "Simulation & Optimization - XpertSim," Online Article. retrieved from http:// www. efacec-acs.com/ index.php?option=com rokdownloads&view=file&Itemid=190&id=51: xpertsim, 2012. [69] R. Fernandes, I. Silva, and M. Oleskovicz, "Identification of residential load profile in the smart grid context," in Power and Energy Society General Meeting, 2010 IEEE, Jul. 2010, pp. 1­6. [70] S. Karnouskos and A. Izmaylova, "Simulation of web service enabled smart meters in an event-based infrastructure," in 7th IEEE International Conference on Industrial Informatics INDIN 2009, Jun. 2009, pp. 125­130. [71] M. Fowler, Patterns of Enterprise Application Architecture. 2002. [72] "Frechet Distribution," Online Article. retrieved from http:// www.mathwave.com/ articles/ frechet extreme value distribution.html, 2012. Addison-Wesley Professional,

87

