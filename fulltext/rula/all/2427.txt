NOTE TO USERS

This reproduction is the best copy available.

UMI
R ep ro d u ced with p erm issio n of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited without p erm issio n .

QUALITY CONTROL METHODOLOGIES FOR 3D GEOMETRIC PRIMITIVES DERIVED FROM LIDAR DATA

by ARTUR FIDERA, B.Eng. Ryerson University, Toronto, 2004

A thesis presented to Ryerson University

in partial fulfillment o f the requirements for the degree of Master o f Applied Science In the Program of Civil Engineering.

Toronto, Ontario, Canada Artur Fidera 2004 ©

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

UMI Number; EC52920

INFORMATION TO USERS

The quality of this reproduction is dependent upon the quality of the copy submitted. Broken or indistinct print, colored or poor quality illustrations and photographs, print bleed-through, substandard margins, and improper alignment can adversely affect reproduction. In the unlikely event that the author did not send a complete manuscript and there are missing pages, these will be noted. Also, if unauthorized copyright material had to be removed, a note will indicate the deletion.

UMI
UMI Microform EC52920 Copyright 2008 by ProQuest LLC. All rights reserved. This microform edition is protected against unauthorized copying under Title 17, United States Code. ProQuest LLC 789 E. Eisenhower Parkway PC Box 1346 Ann Arbor, Ml 48106-1346

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

BORROWER'S PAGE Ryerson University requires the signature of all persons using or photocopying this thesis. Please sign below, and give address and date. Signature: Address: Date:

111

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission.

ABSTRACT QUALITY CONTROL METHODOLOGIES FOR 3D GEOMETRIC PRIMITIVES DERIVED FROM LIDAR DATA. Artur Edward Fidera, M.A.Sc., Civil Engineering. Ryerson University, Toronto, 2004.

The purpose of this study is to develop algorithms with a computational ability to reliably establish with precision and accuracy the critical parameters of a solid object in space. Utilizing a least-squares adjustment method and laser scanned data, a three-dimensional computer assisted drawing (3D CAD) model is created based on algorithms for reverse engineering o f the geometric primitives. The derived 3D CAD model o f an object (e.g., machinery component) may be then used in the redesign, retrofitting, and updating of technical drawings. This thesis presents a unique approach to point cloud data modeling and visualization as well as numerical analysis based on stability criteria. Several

statistical techniques from the literature are reviewed and implemented dealing with numerical methods using the stability o f matrices as a criterion. The thesis discusses topics ranging from basic statistical analysis to advanced topics such as Singular Value Decomposition (SVD) and condition numbers. Various theories and techniques o f

obtaining stability criteria are described and analyzed. Tests o f point cloud data revealed that combining standard numerical analysis with Condition Numbers allows for quantifying the goodness-of-fit of the results and for predicting the behaviour of the algorithms.

IV

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

ACKNOWLEDGMENTS
1 would like to acknowledge the enormous assistance and guidance provided by Dr. M. A. Chapman and thank him for his patience, continued support, and knowledge that he passed onto me. I would like to thank Dr. J. Li who directed and helped me to achieve my goals while coding a visual interface for data modeling and visualization. I would like to acknowledge Steven LeBlanc for his enormous help with coding the visual interface and for his assistance in refining the code. Also, thanks to Des Rogan who showed me programming tricks and helped me when there appeared to be no hope...

Finally, 1 would like to thank my family for the support they have provided me throughout the completion of this research. Above all, this work is dedicated to my

fiancée, Barbara, without whose patience and assistance this research could have not been achieved.

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

TABLE OF CONTENTS TITLE PA G E................................................................................................................................. i DECLARATION OF AUTHORSHIP....................................................................................... ii BORROWER'S PAGE...............................................................................................................iii ABSTRACT................................................................................................................................. iv ACKNOW LEDGM ENTS...........................................................................................................v TABLE OF CONTENTS...................:....................................................................................... vi LIST OF TA BLES...............................................................................................:...................... ix LIST OF FIG U R ES :.......................................................................................................... ix x

1.0 INTRODUCTION....................................................................................................... 1.1 Overview.....................................................................................................................1 1.2 O bjectives.................................................................................................................. 2 1.3 Scope of the Study ..............................................................................................4

1.4 Thesis Organization.................................................................................................. 4 2.0 GEOMETRIC FORM FITTING ......................................................................................... 5 2.1 Cylinder Fitting......................................................................................................... 7 2.1.1 Approximate Parameter Estimation........................................................8 2.1.2 Least-Squares Adjustment o f a Cylinder............................................. 18 2.2 Sphere Fitting........................................................................................................... 19 2.2.1 Calculating Approximates for Sphere...................................................19 2.2.2 Least-Squares Adjustment of a Sphere................................................ 22 3.0 ADVANCED NUMERICAL ANALYSIS OF A GOODNESS-OF-FIT....................27 3.1 Advanced Analysis using Condition Numbers (Stability) asa C riterion 28

vi \
R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

3.1.1 Linear Least Squares Problems............................................................. 29 3.1.2 Condition N um ber..................................................................................32 3.1.2 Eigenvalues..............................................................................................35 3.1.4 Eigenvectors..................................................................... 36

3.1.5 Gershgorin D isk s....................................................................................37 3.1.6 The Cayley-Hamilton Theorem............................................................ 38 3.1.7 Characteristic Equation.......................................................................... 38 3.1.8 Matrix N o rm ............................................................................................40 3.1.9 L I Matrix N orm ...................................................................................... 41 3.1.10 L2 Matrix N orm ....................................................................................42 3.1.11 Frobenius Matrix N o ito .......................................................................42 3.1.12 L Infinity Matrix N orm ........................................................................ 43 3.1.13 Spectral R adius.....................................................................................43 3.1.14 EISPACK Matrix Norm.......................................................................45 3.1.15 Householder and Givens Transformation Method............................45 3.2 QL Algorithm - Factorization of A .......................................................................48 3.3 Singular Value Decomposition............................................................................. 49 3.4. Chapter Sum m ary.................................................................................................. 50 4.0 EXPERIMENTATION....................................................................................................... 52 4.1 Testing the g param eter......................................................................................... 54 4.2 Testing the Influence o f the Coverage of the Pipe..............................................66 4.3 Summary o f Results............................................... 85

V II

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

5.0 CONCLUSIONS AND RECOMM ENDATIONS........................................................ 86 5.1 Conclusions...............................................................................................................86 5.2 Recommendations....................................................................................................88 REFERENCES............................................................................................................................89 APPENDIX.................................................................................................................................. 91

vni

L
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

LIST OF TABLES Table 1: G-test-l Summary Table............................................................................................. 58 Table 2; G-test-2 Summary Table............................................................................................61 Table 3: G-test-3 Summary Table............................................................................................. 64 Table 4: Coverage-150 degrees, Summary table.................................................................... 70 Table 5: Coverage-130 degrees, Data Sum m ary.................................................................... 74 Table 6; Coverage-100 degrees. Data Summary..................................................................... 78 Table 7: Coverage-70 degrees. Data Sum m ary...................................................................... 81 Table 8: Coverage-20 degrees. Data Sum m ary...................................................................... 84 Table 9; Results o f Diameter Measurments by Two Different Software Packages (Unit: m m ).......................................................................................................................................85

IX

j R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

LIST OF FIGURES Figure 2.1: Flow o f logic................................................................................ 5

Figure 2.2: Direction o f stretch in d ata....................................................................................... 8 Figure 2.3: Resolving quadrants.................................................................................................14 Figure 4.1 : Preset for Data Kreator............................................................................................52 Figure 4.2: Preset for Data Flipper............................................................................................ 53 Figure 4.3: G-test-1, Data Kreator............................................................................................. 54 Figure 4.4: G-test-1 translation along z-axis by -5 units........................................................ 55 Figure 4.5: G-test-1 visualisation o f data..................................................................................56 Figure 4.6: G-test-2, Data Flipper..............................................................................................60 Figure 4.7: G-test-3, Data Flipper..............................................................................................63 Figure 4.8: Coverage-150 degrees. Data Kreator.................................................................... 67 Figure 4.9: Coverage-150 degrees. Data Flipper.................................................................... 68 Figure 4.10: Coverage-150 degrees. Data V isualization....................................................... 69 Figure 4.11: Coverage-130 degrees. Data K e a to r ................................................................. 71 Figure 4.12: Coverage-130 degrees. Data Flipper...................................................................72 Figure 4.13: Coverage-130 degrees. Data V isualization....................................................... 73 Figure 4.14: Coverage-100 degrees. Data K e a to r.................................................................. 75 Figure 4.15: Coverage-100 degrees, Data Flipper...................................................................76 Figure 4.16: Coverage-100 degrees. Data Visualization........................................................ 77 Figure 4.17: Coverage-70 degrees. Data K e a to r.................................................................... 79 Figure 4.18: Coverage-70 degrees, Data Visualization.......................................................... BO Figure 4.19: Coverage-20 degrees. Data K e a to r.................................................................... 82 Figure 4.20: Coverage-20 degrees. Data Visualization.......................................................... 83

i
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

1.0 INTRODUCTION 1.1 Overview While engineering traditionary involves the design and construction o f a product, engineers are occasionally faced with the problem o f redesigning existing structures. Reverse engineering is the process o f creating a (digital) design model from an existing product. For example, the concept o f reverse engineering may be applied in the

redesigning o f chemical plants, oil refineries, sewage plants, and nuclear plants. Furthermore, reverse engineering may also be used to collect data on existing structures including road networks and urban areas. The process o f reverse engineering includes the development o f three-dimensional (3D) models, which allows for a realistic representation o f original structures. Although reverse engineering is a useful method, it may lack in robustness and reliability. The data used in the process o f reverse

engineering are often poorly defined and incomplete, which compromises the quality and integrity o f the model. Consequently, there is a need for more efficient metrology tools that would address these issues. This thesis presents a mathematical method, which aims to increase the robustness and reliability o f the developed model. M ore specifically, the purpose o f this study is to calculate the critical parameters o f a geometric primitive (i.e., a cylinder or a sphere) based on partial and poorly distributed data in order to describe the spatial orientation and radius o f such forms. W hen establishing the critical parameters o f a solid object in space, the robustness and convergence o f the solid model are compromised by many factors. An uneven

distribution o f the data is one o f the most significant factors that may jeopardize the accuracy o f the model. In a real life situation. Light Detection and Ranging (LIDAR)

1

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

systems are able to sense only a portion o f the surface o f the solid. Thus, the estimated geometric parameters are not always close to *he actual values o f the desired parameters. Furthemiore, the processes o f shape recognition are not only lengthy but they produce a final product that is difficult to analyze. As such, the derived product is usually not the most precise and accurate model o f reality. Human error and an overwhelming amount o f data from laser scanners further compromise the accuracy o f the model. This study offers an alternative approach to the management, utilization, modeling, and visualization o f redundant and voluminous data sets through the use o f least-squares adjustment process and automatic solid recognition with reliable numerical analysis related to the calculated parameters.

1.2 Objectives In this study, algorithms are developed with a computational ability to reliably establish the precision and accuracy o f the critical parameters o f a solid object in space. Historically, least-squares fitting o f primitives other than lines and planes has not been studied in detail. The most commonly studied geometric primitives are ellipsoids,

cylinders, spheres, cones, cuboids, and tori (Kwon et al., 2002; Lukacs et al., 1997; W atson, 2000; W erghi et al., 2000; Werghi et al., 2000). In this thesis, the fitting o f a cylinder is presented and studied. Other common forms such as sphere can be viewed as trivial cases o f a cylinder. Applying a least-squares adjustment method to terrestrial lidar data, a 3D CAD model o f a cylinder is created based on algorithms for reverse engineering o f the primitives. The created 3D CAD model may be then used in the redesign, retrofitting.

R ep ro d u ced with p erm issio n o f th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

and updating o f technical drawings.

In comparison to other methods such as

photogrammetry, the use of LIDAR technology allows for efficient data collection. Although the precision and accuracy o f LIDAR is inferior to that o f photogrammetry, the number o f collected points and the rate o f scanning using LIDAR are significantly better than in other methods. This thesis presents a unique approach to point cloud data

modeling and visualization as well as numerical analysis based on stability criteria. Different methods of calculating matrix norms are reviewed and implemented from the literature dealing with statistics using stability o f the matrices as a criterion. Fundamental numerical analysis methods as well as advanced topics such as Singular Value Decomposition (SVD) and condition numbers are studied to establish the quality o f the results. Various teclmiques o f obtaining stability criteria, theories and their background are described and analyzed. This study presents a detailed overview o f the problem,

reviews the major areas o f interest in numerical analysis and stability criteria, and details some of the principal algorithms used. It also examines the practical aspects o f applied numerical analysis in programming and some obstacles involved in the process. This

thesis describes least-squares fitting, modeling and numerical analysis o f simple three dimensional primitives such as lines, planes and, above all, spheres and cylinders. The problem can be decomposed into five logical steps: form identification, approximate value generation, least-squares fitting, which is described briefly, data modeling, and numerical analysis based on stability criteria.

R ep ro d u ced with p erm issio n of th e cop yrigh t ow n er. Further reproduction prohibited w ithout p erm issio n .

1.3 Scope of the Study This work is an attempt to analyze least-squares adjustment algorithms usable for robust solid fitting in 3D. The rationale is to create a tool that utilizes an efficient and robust least-squares adjustment technique, which allows for the creation o f reliable 3D CAD models with minimal human intervention in the process. Numerical analysis and stability criteria are applied to ensure and enforce the calculation o f the critical parameters o f the solid.

1.4 Thesis Organization In Chapter 2, the least-squares adjustment o f cylinders and spheres is reviewed. Detailed algorithms are presented and calculation o f the approximate values o f critical parameters (i.e., g -offset, / / -orientation parameter in x-y plane, & -orientation parameter in zenith, a -orientation parameters about nomial, and k -curvature) is examined. Chapter 3 presents the available for statistical theoretical background analysis. In o f quality control

methodologies

addition,

Singular Value In

Decomposition and techniques for calculating condition numbers are reviewed.

Chapter 4, tests o f critical parameters are performed with distance and coverage o f the pipe as the changing variables. It was determined that the condition numbers and the use of standard deviations and correlation-coefficient matrices in a controlled environment permitted the analysis of the solution and the establishment o f its behaviour as changes were introduced into the point data cloud.

R ep ro d u c ed with p erm ission of th e copyright ow n er. Further reproduction prohibited without p erm ission .

2.0 GEOMETRIC FORM FITTING The software presented in this paper has been developed for geometric leastsquares fitting o f primitives. In particular, methods have been developed for the fitting o f spheres and cylinders with numerical analysis. The algorithms for cylinder and sphere adjustments are presented in the following sections. While the method of least-squares fitting o f lines and planes is well understood and documented in the photogrammetry and mathematical literature (Fausett, 1999), the fitting o f spheres and cylinders has not been extensively studied. Marshall et al. (2001) applied least-squares fitting to various second order surfaces including spheres, cylinders, cones, and tori. The authors used an angular parameterization o f a model in order to describe the spatial orientation and location of the above-mentioned figures. Although the model was useful in fitting the primitives, it required the calculation o f the first approximates from the point data cloud, since the point data distribution in the cloud data was uneven and potentially biased. Various techniques may be applied to the task of surface reconstruction from 3D range data. Figure 1 depicts the flow of some of the methods used in the process of converting an imaged scene into a surface model.

Physical Data Data Acquisition Parameter Model

Figure 2.1 : Flow of logic.

a
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

In the process o f converting a scene into a surface model, data are first acquired from the real world using a sensing device, such as a laser seamier. The laser seamier acquires data, which are stored as an x, y, and z component of each point. This study presents a model o f least-squares adjustment capable of reconstructing a figure based on partial point cloud data. A medium to high data set is used for this study. The physical object in this trial is a pipe 20nim in diameter and 200mm in length; the data exist for only 40% o f the object and consist o f approximately 29,000 points. The problem

becomes one of extracting an estimate of the sampled surfaces from the limited range of data. Given the relative lack of research in the area of least-squares adjustments in the field of solids, this thesis presents a robust approach to point cloud data fitting with advanced statistical analysis. The unique contributions of this study include methods for estimating first approximates of the parameters related to cylinders and advanced numerical analysis o f the derived parameters. Mathematical problems and calculations in engineering are plagued with numerous errors. In numei ical solutions of linear equations, several sources o f the

inaccuracy are encountered even when exact methods are used (Faddeev & Faddeeva, 1963). The finite accuracy of the computer introduces truncation errors during the In addition, rounding errors are present when the

computational processes.

computational limits of the machine are reached. Mathematical models are merely an approximation attempting to model and mimic real world situations. Given that

À
R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

calculations are frequently plagued with observational errors and blunders, it is often surprising that a set o f approximate values can be calculated at all. The models often used in linear and linearized systems are vectors and matrices. In order to make a statement about computed solutions and errors imbedded in them, it is necessary to describe the relative dependency between solutions using, for example, the condition numbers, norms, and errors or other stability criteria.

2.1 Cylinder Fitting The approximates of the cylinder are determined by first calculating the center line o f rotation, which is the first and most challenging step of this process. Initially, the method o f least squares adjustment was applied to approximate the center line o f the cylinder. The calculation o f the approximate value o f the center line was attempted by using parallel projection of the point cloud onto x-y, x-z, and y-z planes. Following this, least-squares adjustments o f the line were applied. The equations o f the three lines were determined from the corresponding three projections. The equations o f the lines were transformed into equations o f the planes, which are perpendicular to the corresponding projected planes. Thus, the intersection o f the artificially created planes was the actual center line o f the cylinder (Anderson et al., 1988). However, this method of calculating the approximates was unsuccessful since the laser scanned data were unevenly distributed over the object of interest. Furthermore, the high correlation between the shape o f the figure and laser position distorted the orientation of the center line in 3D space. This caused the approximate of the center line to be highly inaccurate, which prevented the final adjustments from converging.

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

2.1.1 Approximate Parameter Estimation Another attempt was made using Principal Component Analysis (PCA). This is a

technique used to find the directions in which a cloud of data points is oriented (Jensen 2004).

Y

Figure 2.2: Direction of stretch in data

These directions define the basic orientation of the data and are, thus, important for establishing orientation o f parameters (e.g., of a line) in space. PGA is utilized in statistics to extract the main relations in data of high dimensionality. The general method o f determining the principal components o f a data set is by calculating the eigenvectors o f the data correlation matrix. These vectors

indicate the directions in which the data cloud is stretched the most. The projections of the data along the eigenvectors are the principal components. The corresponding

eigenvalues give an indication of the amount o f information the respective principal components represent. Principal components corresponding to large eigenvalues represent a great amount o f information in the data set and, thus, are very informative

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

with regards to the relations between the data points. A 3-D case o f PCA was employed to determine the first approximation of the line in 3D space. PCA is a powerful method o f analyzing correlated multidimensional data (Byne et ah, 1980). The data from the laser scanner has a certain degree o f redundancy (Fung & LeDrew, 1987). However, the method adopted in this project was a special case of A Zero Correlation, Rational Transform form of PCA. The principal components are based on the eigenvectors o f the covariance the correlation matrix. The variance-covariance matrix Q . can be defined as:

1

^ ;=i

where Xis a given set o f n-dimensional variables with the meanvector given as M . the number of points used. Each component and N is thenumber component Y; is denoted by

N is

o f a point. Each

Yi=aiiXi+a!iX:+a3iX.i+...-faN.Xi.=ai^X

(2.2)

ai^ is the transpose of the normalized eigenvectors of the matrix C% . The complete transformation can be shown as

W=A^*1

(2.3)

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

where A is the matrix o f eigenvectors which gives the covariance matrix Q o f W by

(2.4)

The Cy matrix will be a diagonal matrix, in which the elements are eigenvalues o f C %

A
Cy 0 0 0

0 4 0 0

... 0 ·.. 0 ... 0 . 4v

(2.5)

where

>X g >Às >

The method of principal components transformation was utilized to successfully approximate the center line of the cylinder in 3D space. PCA properties were used to establish the orientation o f the scanned cylinder, which enabled the definition of the directions in which the cloud o f data points is stretched. The direction of the axis of the cylinder was calculated by normalizing the direction vector of the line. This was based on the center line previously determined from PCA.

r = T\+tin

where tin = {at,bt,ci)

(2.6) ,

The r represents the vector equation o f the line through the point with position vector in the direction m where tE :R .

10

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

and the param etric form o f the line;

X ,= J C o+ < 3 t

(2.7)

J'l =

ya + bt

(2.8)

z, =Z(,+c/

(2.9)

and transforming the line into direction vector â , where 5 : is a direction vector o f a approximated center line of the point cloud data

5 = m = {a,b,c)

and |d |=1

(2.10)

The next step in calculating the approximateso f the parameters for the cylinder involves finding the normal vector to the line going through the origin of the coordinate system.

n=

and | n j=l

(2.11)

and parametrized vector is;

« = (cos / / * sin

sin

* sin

cos z^)

(2.12)

( / / -orientation parameter in x-y plane, z? -orientation parameter in zenith) where Cartesian components of the vector are:

II

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

[a,b,cYP.Pj =X q --X , -- --/" V. r 1^ T* ^ {a,b,cY[a,b,c]

(2.13)

It is important to note that the dot product o f vector a and vector n must be equal to zero to satisfy orthonormality continuous o f these vectors.

(5*«) = 0

(2.16)

This method is employed to verify the fact that vector n is normal to vector 5 and includes in its set of points the origin o f the coordinate system. Moreover, n is also a unit vector calculated along the shortest distance between direction vector â and the origin. Therefore, the next calculated parameter is the shortest distance between the origin and the line.

Pr J I Q ^
m

(2.17)

12

iW
R ep rod u ced with p erm ission o f th e copyright ow ner. Further reproduction prohibited without p erm ission .

,J = QR = ^ ( P Q ) - ~ ( P R f

(2.18)

where P is a point on the line, point Q is the origin o f the coordinate system Q=(0,0,0), and R is the closest point on the line to the origin.

The next step involves using the approximated parameters to calculate their parametrized versions o f approximates. The parametrization o f the approximated n

vector is accomplished by converting it from the right-handed Cartesian coordinate system into the polar coordinates system parametrized approximates to allow for polar coordinates system nonlinear least-squares adjustment.

r --^Jx^~+~y^ /V = tan" ' --
X

(2.19) (2.20)

or / / = IT + tan"'--
X

and z? = tan"`or z?= n + tan" ' (2.21)

where IT is used to resolve the angle position if angle is located in 1^', 2"'*, 3'^`' or quadrant.

13

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

2"'^ quadrant 3"^^ quadrant

quadrant
X

4`^ quadrant

Figure 2.3: Resolving quadrants.

â is the angle between n vector and the z-axis and / / is the angle between the projection o f vector n onto x-y plane and the x-axis. The process resolves two special angles / / and z? out o f the five actual parametrized approximates subsequently used in the adjustment process.

Taking the first derivative of n from Equation (2.12) with respect to angle u gives us a n'" vector.

n^' = (-- sin /z * sin z?, cos //*sinz?,0)

(222 )

The second derivative o f a n vector from Equation (2.22) with respect to angle z? and then to angle produces vector :

= (-- sin /y * cos z^, cos

* cosz^, 0)

(2 2 3 )

14

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

Taking a first derivative o f n from Equation (2.12) with respect to angle z? gives us a « vector.

n'^ =(cos/z*cosz?,sin//*cosz?,-- sinz?)

(2.24)

The second derivative o f a n vector, from Equation (2.24) with respect to angle z? and then to angle z?produces vector ;

= (cos/z*sinz?,-- sin/z*sinz?,-- cosz?)

(2.25)

The second derivative o f a ü vector from Equation (2.22) with respect to angle / / and then to angle / i produces vector n` " ` ";

-- (-- co s/',sin //,0 )

(2.26)

By equating and manipulating the partial derivatives of vector n from from Equations (2.22 - 2.26) the vector n" is produced.

--

//

= ( --sin/z,cos/z,0) =

 smzz

(2.27)

15

R ep ro d u ced with p erm ission o f th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

The next step in determining the parametrized approximates for the cylinder is to compute angle a , which is the angle between vector 5 and vector 1/ .

6Ï --Cos

a*n

(2.28)

N ext, the approximated radius o f the cylinder must be calculated. This is accomplished by rotating the data and aligning the approximated center line o f the data cloud along the x-axis.

X,

yj

y'i Zj

(2.29)

where:

Casa --Sina 0

Sina Casa 0

0 0 1

(2.30)

Cosû 0 --Sinâ 0 1 0 Sinÿ 0 Cosâ

(2.31)

16
/

R ep ro d u ced with p erm issio n o f th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

üs/^ -- ~Sin/i

Sin/i 0 Cos// 0

( 2 .3 2 )

In the next step, the average distance between each point o f the data cloud and tire x-axis is calculated. The average distance is the average radius o f the cylinder. Then, the

approximate radius is parametrized by its inverse parameter k (curvature):

k

(2.33)

Now, by combining the shortest distance between the origin o f the coordinate system and the original center line of the data cloud from Equation (2.18) and subtracting the approximated radius Equation (2.33), the last required parametrized approximate may be calculated. This approximate value represents the shortest distance between the origin of the coordinate system and the surface o f the cylinder:

g = d --R

(2.34)

Following these steps has provided the parametrized approximates required for the leastsquares adjustment o f the cylinder. The parametrized approximates in terms o f g-, / / , z? , ( z , and k have been calculated using Equations (2.34), (2.20), (2.21), (2.28), and (2.33), respectively.

17

R ep ro d u ced with p erm issio n of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

2.1.2 Least-Squares Adjustment of a Cylinder The least-squares adjustment o f a right circular cylinder is completed by first creating a Jacobian matrix A. The derivatives o f the parameterized approximates with respect to the distance from the symmetry axis to the surface o f the cylinder are given as follows:

--

k * { g --( p ' `n)) + l

'

(2.35)

dd '-- '  = - -- = ~ k * ( g * ( f n") + (p* a)*(p* * cosa: + n` "" *'&ma)) --{p · n'")

(2.36)

A{i,2) =

= k* ({p · a ) * ( p * n ) c os a --g * { p ' n'^)) --{ p ' n ^ )

(2.37)

A(i,3) = - -- = k*(^p* a ) * { p * } / * s m a --n-" * cos < 3 " )

(2.38)

^ ( ',4 ~

^ I' - 2 g { p " n) - { p * a f + g~)

(2.39)

where i=0 to N-1 and N is the number o f points. The p is defined as a point in 3D with coordinates read in from data point. These are associated with a residual vector:

w(i) = - ^ * i \ p \ - - 2 g ( p · n ) - ( p » â Y + g ^ ) + g - ( p ' n))

(2.40)

The parametric least-squares method is used for set o f equations as:

18

i
R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited without p erm issio n .

dx-=(A^A)-'A^w
w here 6x is the vector o f corrections to the approximate values.

(2.41)

The method o f least-squares adjustment for a right circular cylinder fitting produced satisfactory results in all trials. This method effectively calculates the

parametrized approximates and allows least-squares adjustments to converge successfully. It should be noted at this point that the sphere is the trivial form o f the cylinder model.

2.2 Sphere Fitting In order to proceed with least-squares adjustments for the sphere, the approximates o f the center o f gravity in 3D space need to be determined. In addition, the radius of the sphere must be computed using parameter k . Once the parameters have been determined, they are used to calculate the parametrized approximates. Finally, the process o f least-squares adjustment may be applied. It should be noted that the sphere problem is a trivial form of the cylinder model.

2.2.1 Calculating Approximates for Sphere The approximates of the sphere are determined by first calculating the center of gravity o f the data. The approximate of the center o f gravity was determined by

calculating the average value for the x, y, and z coordinates o f the point cloud data.

X -o v g .

1

N~l (2.42)
i=0

^

19

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

N -\

Javg

y

= - 7 ;,.

(2.43)

(2.44)

Following this, the approximation of the radius is estimated based on the calculated distance difference between the center of gravity and each point in the point cloud data.

J

.v-l _________________________________
*

R=

2

>

/

;=0

f+(yi~

3 'a v g )  +

(Z / -

)"

(2.45)

The next step in calculating the approximates of the parameters for the sphere involves finding the shortest distance between the origin of coordinate system and the data cloud.

V (x,-0)"+(y,-0)^ + (z,-0)-

(2.46)

The n vector which is the vector connecting the origin of the coordinate system and the center o f gravity is established by:

^

( ^ a v g ' y a vg » ^ a v g )

(2.47)

20

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

The next step involves using the approximated parameters to calculate their parametrized versions of approximates. The parametrization of the approximated n vector is

accomplished by converting it from a right-handed Cartesian coordinate system into a polar coordinate system parametrized approximates to allow for a polar coordinate system non-linear least-squares adjustment Equations (2.19-2.21). Taking the first derivative of gives us a n^' vector.
n

from Equation (2.47) with respect to angle / /

n^' = (-- sin //*sinz?,cos//*sinz?,0)

(2.48)

Taking a first derivative of t / vector.

n

from Equation (2.47) with respect to angle z? gives us a

t / = (cos//*cosz7,sin//*cos27,-- sinz?)

(2.49)

In the next step, the average distance between each point o f the data cloud and the x-axis is calculated. The average distance is the average radius o f the cylinder. Then, the

approximate radius is parametrized by:

=

k

(2.50)

21

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

Following these steps has provided the parameterized approximates required for the leastsquares adjustment o f the cylinder. As such, the parametrized approximates are

computed in terms of g , /y , z?, and k using Equations (2.46), (2.49), (2.50), and (2.53).

2.2.2 Least-Squares Adjustment o f a Sphere The least-squares adjustment fitting for a sphere is begun by creating a Jacobian matrix A. The following are the partial derivatives of the parameterized approximates with respect to the distance from the origin to the surface o f the sphere:

y4(i,0) = ^ = A * ( g - ( f , - n ) ) + l

(2.51)

!

zl(/,l) = - ^ = (-A '* g -l)* (p * « '" )

(2.52)

/1(A2) = - ^ = ( - ^ * g - l ) * ( f ' ' / ) dv =^ =
OK 1

(2.53)

- 2 g { p ' n ) + g~)

(2.54)

These are associated with a misclosure vector:

w(i) = ~ * { \ p \ ~ -2 g (/i» « ) + g-)-t-g-(/7 « /ï)

(2.55)

The parametric least-squares formulation is used for set of equations: dx = {A^ * A)~'* *w (2.56)

22

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

The method o f least-squares adjustment for a sphere fitting produced satisfactory results in all trials. This method effectively calculates the parametrized approximates and allows least-squares adjustments to com. erge successfully. The parametrization of the solid plays a major role in the process o f solid fitting. There are different general approaches to this problem including Algebraic Fitting, Taubin's Fitting, and Euclidian Fitting. Each of these approaches has both limitations and strengths, which are described in the following section. The Algebraic Fitting (AF) is based on the approximation of the Euclidian distance by the algebraic distance and is described by this equation:

=

(2.57)

Given the algebraic distance for each point, using the least-squares method to minimize the distance between best surface fit and the data is expressed as:

. p -- ^ distjxp,Z( /) ) p= \

minimum

(2.58)

Equation (2.61) can be formulated as an eigenvector problem.

Constraining the

eigenvectors of the parameter set {a,p} avoids the trivial solution {o#}- Ô and any possibilities o f the multiple solution. The algebraic approach has high computational

efficiency if the closed-form solution is available, which is generally the case. However, the results obtained from the algebraic method are unsatisfactory in most cases.

23

R ep rod uced with p erm ission o f th e copyright ow ner. Further reproduction prohibited without p erm ission.

Therefore, the algebraic method is often used for first approximation if the situation does not necessitate a statistical approach that is more time consuming and advanced. Taubin's Fitting (TF) uses the first order approximation of Equation (2.61) to estimate distr{x,.,Z{f)).

=

(2.59)

The Taubin's distance algorithm does not require lengthy iterative calculations. The first order approximation of the Taubin's distance algorithm is the exact distance. However, the approximated Taubin's distance is biased due to a lack o f internal consistency. The perfect example o f this phenomenon is a data point xp which is close to a critical point of the polynomial, i.e., ||V/(x/0| = =0 , but f{xp) # 0. The distance between the point and the described polynomial becomes large due to the fact that magnitude is extremely close to zero. However, the fact that the distance is not zero is certainly a I ! limitation, which leads to an answer which is numerically highly unstable. Euclidian Fitting (EF) uses the Euclidian distance instead o f approximated distances, which is invariant to transformation in Euclidian space. Euclidian distances allows for calculating a non-biased estimator. The use o f the A closed form

expression exists for primitive curves and surfaces, ellipses, planes, cylinder cones, and ellipsoids. The Euclidian distance is obtained from a point to the origin o f the Cartesian coordinate system in order to calculate a closed form expression, as described in detail ) ! for cylinder and sphere in Sections 2.0 to 2.2.2. In its general expression, the Euclidian distance is a highly complicated equation and there is no known closed form expression for solving the problem. Therefore, an

24

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

iterative optimization procedure must be carried out in order to compensate for this fact. Given the Euclidian distance distE{xp,Z{f)) for each point, the following steps are used to obtain the solution. First, an initial estimate for the parameters fitting is obtained. Next, o f the Euclidian

= 0,1... is updated using the algorithms presented in

Sections 2.1.2 and 2.2.2, which involves minimizing the least-squares o f Euclidian distances for all data points. Finally, each the basis of
distE{xr,Z{f)).

is evaluated by a M-estimator ^ on is satisfied, the adjustment
b e c o m e s th e fin al

If

is caiTied o u t. so lu tio n .

O th e r w ise , th e a d ju stm en t is term in ated an d

In order to understand data distribution and data errors, it is important to appreciate the basic concepts behind laser technology. The acronym LASER means

Light Amplification by Stimulated Emission of Radiation. There are two major types of laser scanners: triangulation scanners and ranging scanners. LIDAR scanners are of the ranging scanners family. The scanner used to collect the data for this study was a LIDAR scanner. LIDAR scanners often use a pulsed laser to measure the range to a point on an object's surface. The LIDAR scanner is any ranging laser scanner that has four

observables, range p, elevation angle a, horizontal direction 6, and intensity that are relative to the scanner's internal coordinate system. The difference in time ( a/ ) between the pulse and the detection of the returning energy is used to calculate the distance (/? ) to the target using the following equation: =^ (2.60)

25

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

The obtained parameters are used to calculate the x, y, and z point in a Cartesian coordinate system. The triangulation and spatial resection algorithms are implemented to carry out those calculations. The distance from the scanner to the target is measured based on Equation (2.63). The triangulation is based on an active stereoscopic principle and the distance to the object is calculated based on the angular orientation o f the light source and the relative orientation of the receiving unit. Data quality and distribution are critical issues in the investigation o f the calculation o f the critical parameters. In this thesis, the data received from J-Tech

(www.j-techdesign.com) were already compiled in a Cartesian coordinate frame; the observables were x, y, z and intensity. The object that the data were derived from was a section of cylindrical pipe; 20 mm in diameter and 200 mm in length. The point data cloud covered approximately 40% of the surface area of the pipe and consisted of approximately 29,000 points. Due to the limited nature o f the LIDAR system, namely FOV (field o f view) and distance from the target, the point cloud data received had a mid to heavy density and the point data became sparser as the scan approached the edges o f the cylinder. Different methods o f reverse engineering o f the primitives allow us to produce mathematical models. However, these models have finite accuracy and precision as well as errors inherited from data acquisition systems. One example is the LIDAR system. The inherent errors as well as errors in calculation are not necessarily controlled in the process of least-squares adjustment. In some cases, the best fit is not the actual primitive figure that is sought and its spatial orientation may be completely wrong.

26
jW
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

3.0 ADVANCED NUMERICAL ANALYSIS OF A GOODNESS-OF-FIT The model proposed below presents a detailed explanation o f the mathematical algorithms as well as the methodology used to write a fully functional software suite. The arising model issues, including parametrization and data distribution, are presented and discussed. A cylinder and a sphere are the two geometric primitives that are used in this case study due to their frequency o f occunence in industrial settings. The proposed model has certain design flaws. For example, the model o f the cylinder is parametrized by using three spatial angles, the shortest distance between the origin and the outside of the projected cylinder as well as the radius o f the cylinder. Two of the mentioned angles describe the orientation o f the normal to the line passing through the origin. Angle /z describes the orientation o f the normal vector in the x-y plane where the positive x axis is treated as the reference. The ÿ angle is a horizontal angle. Those two angles define a spatial orientation using a polar coordinate system. The third angle, a , i.e., the alpha angle, describes the final orientation of the cylinder. The cylinder is pivoting at the imaginary end o f the normal and the alpha angle defines the cylinder orientation. The distance between the origin and the closest point on the outside shell of the cylinder as well as the radius are calculated in a very similar manner. A detailed description o f parametrization concepts and algorithms may be found in Section 2.1.1, which details the cylinder fitting. The sphere is parametrized in similar manner but without the use o f the alpha angle. A geometric least-squares fitting o f spheres and cylinders was achieved by developing algorithms to calculate first approximates and by utilizing algorithms introduced by Marshall et al. (2001).

27

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

3.1 Advanced Analysis using Condition Numbers (Stability) as a Criterion Mathematical problems and calculations in engineering are plagued with errors o f all sorts. In numerical solutions o f linear equations, several sources o f the inaccuracy are encountered even when exact methods are used (Faddeev et ah, 1963). The finite

accuracy o f the computer introduces truncation errors during the computational processes. In addition, rounding errors are present when we reach the computational limits o f the computer on which the calculations are carried out. Mathematical models are merely a means to an end and they are only an approximation trying to model and mimic a real world phenomenon. Given that calculations are often plagued with observational errors and blunders, it is often surprising that one is able to calculate an approximated answer at all! The models used in linear systems employ vectors and matrices. In order to make a statement about computed solutions and errors imbedded in them, it is necessary to describe the relative dependency between solutions using the condition number, norms and errors. The definition o f a condition number o f a matrix is derived directly from the definition o f norms and errors. The use o f a condition number and norms allows for an objective way of estimating the statistical significance o f "Hilbert Space" or in this case the "N"-Normal Equations matrix. It also allows us to determine the relative accuracy o f the solved linear system. The problem described in this thesis is a linearized least squares problem. The following definition should aid in understanding the notion o f simplified linear least squares problems and error estimation techniques.

28

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission .

3.1.1 L inear L east S quares Problem s A typical linear least squares problem seeks to solve a linear system A * x = b where the matrix A is unsuitable for treatment by the standard methods used for square, non-singular, well-conditioned coefficient matrices. In almost all cases involving geomatics-related data, there are many more equations than unknowns, so that A is actually a matrix with rectangular order o f M rows by N columns. Generally, M is much greater than N. The right hand side may or may not be consistent, and A may not be o f full rank. Such problems cannot be solved

accurately using the linear approach, since the matrix is extremely overdetermined. It is possible to obtain a unique solution or many exact solutions ( x ) might exist. Altematively, there might be no exact solutions, but some vectors ( x ) offer a better goodness-of-fit than others in the sense that they produce a smaller residual error where residual error is defined as: r = b --A * x (3.1)

where the residual error is a measure o f the error that occurs when a given approximate solution vector x is substituted into the equations o f the problem being solved. For a system o f linear equations, the residual errors are expressed by the vector r . When

carrying out an iterative solution process, it is common practice to compute the residual error vector for each new approximate solution and to teiminate the iteration successfully if the vector norm o f the residual en or decreases below some tolerance. It is important to realize that the residual error is not, by itself, a reliable estimate o f the error in the solution o f a linear system. If the residual error has small norm, it is desirable that the

29

I R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

solution error .(between the computed %and the true solution x* ) is small. It is necessary to know the norm o f the inverse o f the matrix, in which case the following restriction holds; ||x --X* <

I I ' I*||v4(x --

X* )||

= ||^~ ' * /I * X --Z j+ 6 - ^ * X* )|| = ||.4~ ' * I I /'II

II

I

(3.2)

Thus, when the norm o f the residual error ||r|| is small, there is a precise upper bound on the enor in the solution. Since such matrix noims are generally not known or

computable, there is a promise o f continuity in the enors: as the residual is driven down, the upper limit on the approximation error is forced down (Dineen, 1998). Once the residual error is calculated based on its vector norm, the logical operator might be put in place to determine which o f the following cases are applicable to the solution. I f there is a unique exact solution, each residual vector component should be equal to zero and the exact solution could be obtained. If there are multiple exact If

solutions, then they form a linear space, and that linear space should be described.

there are no exact solutions, then a "best" solution, which produces the smallest possible residual error, should be produced. This theory is applied in the algorithms and based on those criteria the final solution is obtained by selecting the smallest residual error with preselected threshold in order to stop iterative process as described and depicted by Euclidian Fitting (EF) algorithm described in Section 2.2.2. A linear space (also known as linearization method) mentioned above is a collection X of "vectors", a scalar field F, (usually the real or complex field) and in the cases observed in this paper it is always the real field since we operate in spatial domain which can not be imaginary or negative i.e. the negative distances do not exist in real I '!

1

30

R ep ro d u ced with p erm ission of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

world. The operations o f vector addition and scalar multiplication, with the properties that X includes the zero vector; if x is in X , then so is Â * x , for any scalar A ; and if x , y and z are in X , then so is the sum x + y + z .

The problem encountered in this study was solved using the least squaresadjustment method applying standardized techniques o f equation linearization in geomatics problems. A square coefficient matrix can be constructed by replacing the M by N rectangular system A* x = b by the square system of order N: A ^ * A * x = A^*b and can be further manipulated to the unweighted form of: x= (3.4) * A* x = *b . (3.3)

This linear system is known as the normal equations matrix called the N-matrix in the software created by manipulating the A-matrix called the Jacobian matrix or design matrix. If the columns o f the original matrix A are independent, then A^ * A has a real inverse, and the system can be solved by Gauss elimination, Cholesky decomposition or another applicable method. The method selected for this exercise was Cholesky

decomposition, as it offers efficient algorithms. However, the Cholesky algorithm might not be the most robust algorithm and it fails in the imaginary domain. However, the

working domain for this exercise is measurements in the real world and the spatial domain is the only domain allowable which rules out the possibility o f the imaginary or negative distances. The solution x will not usually satisfy any o f the original equations exactly, but it will be the estimate that minimizes the Euclidean norm (The L2 vector norm is also known as the Euclidean vector norm or the root-mean-square vector norm)

31

Reoroduced with Dermission of the coDvriaht owner. Further reproduction prohibited without permission.

o f the residual error. The L2 vector norm is described in more details further on in this thesis in Section 3.1.10. The normal equations may be used as a guide as to how the answer can be obtained, at least for systems with maximal rank. However, the coefficient matrix o f the normal equations is sometimes ill conditioned (i.e., its condition number being the square o f the condition number of A). Other methods o f solving this problem are preferred,

usually via the QL factorization, QR factorization or a pseudoinverse. Such methods can also handle the case where the matrix does not have full rank. However, the methods mentioned above where not selected due to their computational inefficiency and the fact that the stated problem classifies as invertible matrices which Cholesky decomposition is able to handle with ease and superior computational efficiency.

3.1.2 Condition Number The condition number of the coefficient matrix T o f a linear system is a positive number used to estimate the amount by which small errors in the right hand side 6 , or in A itself, can change the solution x . Small values o f the condition number suggest that the algorithm will not be sensitive to errors. Large values indicate that small data or arithmetic errors may lead to enormous eiTors in the answer. The condition number is defined in terms o f a particular matrix norm. Many

different matrix norms may be chosen, and the actual value o f the condition number will

32

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

vary depending on the norm chosen.

However, the general rule that large condition

numbers indicate sensitivity will hold time no matter what norm is chosen. The condition number for a matrix Â is defined as condition{Â) = (3.5)

If A is not invertible, the condition number is infinite. The following are the characteristics o f the condition number: it is always at least 1 and the identity matrix produces a condition number equal to 1. condition number o f any orthogonal or unitary matrix is 1. Turing's M condition number, M{A) , for a matrix o f order N , is defined as M{A) = N * max|v4»| * max Turing's N condition number, N{A) is '| (3.6) In addition, the

where Frob(A) is the Frobenius matrix norm. The Von Neumann and Goldstine P condition number is maxJ vain A

f(X) =

(3.8)

where max,^ and vain A are the eigenvalues of largest and smallest magnitude, which is equivalent to using the spectral radius o f A and . The Von Neumann and Goldstime

P{A) number was selected for the calculations of condition numbers. The P{A) number was selected as a stability criterion due to its computational efficiency when compared to

:

33

I R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited without p erm ission .

Other methods. Furthermore, the technique o f obtaining the eigenvalues and eigenvectors, which are needed to calculate the condition numbers, played an important role in the selection o f the method. The method o f calculating the eigenvalues and eigenvectors is explained in the following chapters. Moreover, it is the least complicated method of

obtaining the condition numbers without the need for highly complex and expensive statistical softw'are packages. There is also a condition number defined for the eigenvalue problem, which attempts to estimate the amount o f error to be expected when finding the eigenvalues o f a matrix A. Given a square matrix vf, the Z ,, condition number k^CA) is defined as:

^2 = I I 4 * K ' ||,

(3.9)

if the inverse o f A exists. If the inverse does not exist, then we say that the condition number is infinite. Similar definitions apply for and k,,(A) .

Condition numbers are used in error estimation for linear system problems. This study focuses on solving the linear system as described in detail in the Linear Least Squares Problems in Section 3.1.1 using the following modelA*x = b with the exception Thisperturbed right hand

that the right hand side o f theequation has a small error in it.

side is denoted as b + db and the mathematical model is rewritten as; A"*^(x + dx) = b + db (3.10)

If relative errors and the norm are used to define condition number k(A) and if they are compatible with the vector norm used, it is necessary to show that:

i

i

34

R eo ro d u ced with oerm ission of th e coovriah t ow ner. Further reproduction prohibited without p erm ission .

( 3 .1 )

Thus, the condition number needs to be as small as possible, with its smallest possible value being 1 (Press, et al., 1986).

3.1.2 Eigenvalues Eigenvalues are special values associated with a square matrix. They can be used to analyze the behavior o f a matrix in multiplying any vector as well as to calculate its condition number. The formal definition -^f an eigenvalue of a matrix A is that it is any value Â which is a root o f the characteristic equation o f the matrix, det(T --y^*/) = 0 (3.12)

J is an eigenvalue o f A if and only if there is a nonzero vector x , known as an eigenvector described in detail later on, with the property that A*Xf = Jj*Xi There must also be a left eigenvector y , with the property y* A = A^*y = J * y (3.14) An (3.13)

The characteristic equation has exactly N roots, so a matrix has N eigenvalues.

important consideration is whether any eigenvalue is a repeated root, which determines how difficult the eigenvector computation will be. If a matrix has the maximum possible number o f linearly independent eigenvectors N , then the eigenvalues and eigenvectors can be used to diagonalize the matrix. This only happenswhen the matrix is ortho

normal.Eigenvalues o f A have

the following characteristics: A issingular if and only if

35

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

0 is an eigenvalue o f ^

^ is symmetric if all eigenvalues are real; and A is positive Algorithms for

definite symmetric matrix if all eigenvalues are real and positive.

computing eigenvalues include the power method and the inverse power method. The QR method or QL method are more powerful methods that can handle complex and multiple eigenvalues (Press et al., 1986).

3.1.4 Eigenvectors A nonzero vector x is an eigenvector o f the square matrix A if A*Xi = A ; *x, for some scalar value A , called the associated eigenvalue. Sometimes this eigenvector is more particularly described as a right eigenvector, so that we may also consider left eigenvectors, that is, vectors y for which it is true that y*A = A^*y = / / * y for some scalar / / . For every eigenvalue o f a matrix, there is at least one eigenvector. Every nonzero multiple o f this eigenvector is also an eigenvector, but in an uninteresting way. If, and only if, an eigenvalue is a repeated root, then there may be more than one linearly independent eigenvector associated with that eigenvalue. For example, if an eigenvalue is repeated 3 times, then there will be 1, 2 or 3 linearly independent eigenvectors corresponding to that eigenvalue. (3.16) (3.15)

36

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

The following properties of the eigenvector have to be satisfied: if x is an eigenvector, so is s * x , for any nonzero scalar
5

.

If ^ is singular, then it has an

eigenvector associated with the eigenvalue 0, so that ^ * x = 0. If x is a right eigenvector for eigenvalue A , and y is a left eigenvector for eigenvalue / / , and A and / / are distinct, then x and y are oithogonal, that is, biorthogonality. The following methods may be used to calculate eigenvalues in order to determine condition numbers depending on matrix properties and behaviour: Gershgorin Disks, The Cayley-Hamilton Theorem and Circulant Matrix. In addition, more advanced methods may be applied to calculate condition numbers. These are called Matrix Norms. Although Matrix Norms are more robust and descriptive of the matrix, system, they also require advanced teclmiques and additional computational power (Press et al., 1986). * x = 0. This property is sometimes call

3.1.5 G ershgorin D isks

The method of Gershgorin disks provides an estimate o f the size of the eigenvalues o f a matrix. The accuracy of the estimate varies significantly, depending on the size o f the elements o f the matrix. It is most useful for matrices that are predominantly diagonally or sparse (Press et al., 1986). Gershgorin's theorem states that the eigenvalues o f any matrix A lie in the space covered by the disks D{I) :

37

R ep rod uced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

/

£ )(/) =

-V

<R{ I )

(3.17)

where R{I) is the sum o f the absolute values of the off-diagonal (/) elements o f row I : R(^I) = siim{J = / = I)\A{1,J)\ The theorem may also be applied using columns instead of rows due to symmetry. (3.18)

3.1.6 The Cayley-Hamilton Theorem The Cayley-Hamilton Theorem guarantees that eveiy square matrix satisfies its own characteristic equation. For example, if A is given by:

A =(^ then the characteristic equation is

4)

4-5 = 0

(3.20)

which is not true for all values A , only those few special values known as eigenvalues. The Cayley-Hamilton theorem guarantees that the matrix version of the characteristic equation, with A taking the place of , is guaranteed to be true (Press et al., 1986): (3.21)

A ^ - 6 * A + 5*1 =0

3.1.7 Characteristic Equation The characteristic equation o f a square matrix A is the polynomial equation:

38

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

d e l( X -,f* /) = 0

( 3 .2 2 )

where Â is an unknown scalar value. The left hand side of the equation is known as the characteristic polynomial o f the matrix. If A is o f order N , then there are N roots o f the characteristic equation, possibly repeated, and possibly complex.

For example, if A given by Equation (3.19), then the characteristic equation is l l --A 3 ``" I 1 4 - i r " or ^ ': - 6 * ^ + 5 = 0 This equation has roots i = 1 or A = 5. Values of the scalar A which satisfy the characteristic equation are known as eigenvalues of the matrix. A property of characteristic equation o f A : (3 J 4 )

·

A and À'' have the same characteristic equation.

The Cayley-Hamilton Theorem guarantees that the matrix itself also satisfies the matrix version o f its characteristic equation (Press et al., 1986).

39

R ep rod u ced with p erm ission of the copyright ow ner. Further

reproduction prohibited without p erm ission.

3.1.8 Matrix Norm A matrix norm is a scalar quantity, which may be thought o f as a type of "magnitude" of the matrix. The norm may be used to estimate the effect o f multiplying the matrix times a vector, solving a linear system, or other matrix operations. The norm is also used in the analysis of error and convergence. A matrix norm ||?|| must satisfy the following four properties:

1. |j/(||>0, unless A = 0 in which case ||t|| = 0;

2. ||j'*T|| = |6'|*||/l|| for any real number s;

3. ||/l + 5||<|j^l| + ||5(j (triangle inequality);

4.

1 1 ^ 1 1 (sub-multiplicativity).

Matrix norms are most often needed when dealing with combinations o f matrices and vectors. In such a case, it is important that the matrix norm andvector norm that are being used are compatible. Any given vector norm can be used to derive a corresponding matrix norm and will be guaranteed to be compatible. This matrix norm is known as the vector-bound matrix norm. Only if the matrix nomt and vector norm are compatible can one write a useful boundary condition like: (3.25)

The following matrix norms will be described in the following sections:

L .m

40

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

1. Ll matrix norm; 2. L2 matrix norm; 3. Frobenius matrix norm; 4. L Infinity matrix norm; 5. Spectral radius; 6. EISPACK matrix noim;

3.1.9 L l Matrix Norm The L| matrix norm is a matrix noim that is vector-bound to, and hence compatible with, the L, vector norm. Thus, the formal definition o f the norm is /||/( * Fll /

I M I I - max

(126)

where the vector norm used on the right hand side is the L, vector norm, and the maximum is taken over all nonzero vectors x . However, it is easy to show that the L, matrix norm has a simpler formula: ||.4|| = the maximum, over all matrix columns, of the sum o f the absolute values o f the entries in the column (Stewart, 1995).

41

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

3.1.10 L2 Matrix Norm
The Lj matrix norm is a matrix nonn that is vector-bound to, and hence compatible with, the 1, vector norm. presented in Equation (3.26). Where the vector norm used on the right hand side is the Lj vector norm, and the maximum is taken over all nonzero vectors %. The Lj matrix norm has another foimulation: ||zl||= the square root o f the maximum absolute value o f the eigenvalues o f * A. Thus, the formal definition o f the norm is

The computation o f the 2, norm is computationally expensive, and so it is often simpler to use the easily-computed Frobenius matrix norm, which is not vector-bound to the Z,, vector norm, but is compatible with it (Stewart, 1995).

3.1.11 Frobenius Matrix Norm The Frobenius matrix norm is a matrix norm that has the simple formula; jj^l = the square root o f the sum o f the squares of all the entries o f the matrix. The Frobenius matrix norm is not a vector-bound matrix norm, although it is compatible with the Zo vector norm, and much easier to compute that the Lj matrix norm.

The Frobenius matrix norm is sometimes called the Schur matrix norm or Euclidean matrix norm (Press et ah, 1986).

42

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm ission .

3.1.12 L Infinity Matrix Norm The L,, infinity matrix norm is a matrix norm that is vector-bound to, and hence compatible with, the infinity vector norm. Thus, the formal definition o f the norm is

as presented in Equation (3.26). W here the vector norm used on the right hand side is the vector norm, and the

maximum is taken over all nonzero vectors x . However, it is easy to show that the matrix norm has a simpler formula: ||J4|| --the maximum, over all matrix rows, o f the sum o f the absolute values of the entries in the row (Stewart, 1995).

3.1.13 S p ectral R ad ius

The spectral radius o f a matrix is the magnitude o f the largest eigenvalue o f a matrix. The spectral radius is often easy to compute, and it is a useful measure o f the "size" or "strength" o f a matrix. However, the spectral radius is not a vector-bound

matrix norm; it is not compatible with any vector norm. Simply stated, there is no vector norm for which it will be true, for all vectors x, that: (3-27)

if the matrix norm used is the spectral radius. To see this, consider a matrix whose dominant eigenvalue A > 0 has algebraic multiplicity strictly greater than its geometric multiplicity. Then there must be an eigenvector x so that A * x = J * x , but there is also a generalized eigenvector y ,

43

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

orthogonal to x , with the property that A * y = x + Â * y . Now, if the spectral radius is a vector-bound matrix norm, then it must be the case that (3.28)

but, since x is orthogonal to y , we can show that:

I M * ) ' l l = t k ' + ^ * > i l > \A
Hence, the spectral radius is not a vector-bound matrix norm.

(3 .2 9 )

On the other hand, the value o f the spectral radius is a lower bound for the value o f any vector-bound matrix norm on A , because there must be an eigenvalue A and a vector of unit norm x w ith the property that A * x = A* x (3.30)

Thus, the norm o f A* x divided by the norm of x is i . Therefore, the matrix norm o f A must be at least \A\. The Euclidean norm of a real symmetric matrix is equal to its spectral radius (Press et al.,

1986y

&

44

R ep ro d u ced with p erm issio n

of the copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

3.1.14 EISPACK M atrix Norm The EISPACK matrix norm is used in the EISPACK eigenvalue package. The definition o f the norm for an M by N matrix is;
M N

(3.31) /=! J=1

This is a simple exercise to verify that this quantity satisfies the requirements for a matrix norm. This norm is easy to calculate and was used in EISPACK in order to have a standard against which to compare the size o f matrix elements that were being driven to zero (Press et al., 1986).

3.1.15 Householder and Givens Transformation Method The actual calculations used to estimate the condition number using the Householder Method are based on the QL method, which was preceded by a reduction o f a symmetric matrix to tridiagonal form. The Householder Method is used to reduce the The

matrix to the simple form in order for the iterative process to be implemented.

algorithm is applied to the symmetric matrix to transform it into the tridiagonal form. There are two approaches to this method: first is the Givens Method which is a modified Jacobi Method which instead of reducing the whole matrix to diagonal form reduces it to a tridiagonal form. This variation to the Jacobi method allows for carrying a finite

number o f operations unlike Jacobi method which requires iterations (Press et al., 1986).

45

R ep ro d u ced with p erm issio n of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

A Givens rotation is a linear transformation applied to two vectors, or two rows or columns o f a matrix, which can be interpreted as a coordinate axis rotation. The intent of the rotation is to zero out an entry o f the vector or matrix using an orthogonal transformation. A Givens rotation is similar to the elementary row operation that adds a multiple o f one row to another, but because a Givens rotation employs an orthogonal similarity transformation, it offers greater stability and ease of inversion (Press et al., 1986). A Givens rotation matrix G has the form: 'l 0
0

0 (cos(^)),,.
0

0 0
1 0

0
0

O ' 0
0

0 0 (sin(($'))g
0 0 0 1 0 0 (cos(if))^ 0 0

0 0 0

0 (-- sin(<f))y; 0

0 0 1

(T32)

It is possible to zero out entries o f a matrix, one by one, using Givens rotations, similar to the way that Householder matrices are used, to reduce a matrix to a simpler form. The process can be used to zero out the entire lower triangle o f a matrix, but

further operations on the upper triangle would reintroduce zeroes in the lower triangle. Nonetheless, zeroing out the lower triangle means that Givens rotations can be used to produce the QL factorization o f the matrix. On the other hand, the Householder method is as robust and stable as the Givens Method. The Householder method is superior to the Givens method due to its efficiency. There are experiments done with the Givens method which reduce the number of operations to the some as the Householder method and even avoid the necessity o f taking

46

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

square roots which makes those methods competitive. However, this approach is still in the development phase and is not yet recommended to be used over the Householder reduction. The Householder algorithm reduces a square matrix A o f the dimensions N by N to tridiagonal form by # --2 orthogonal transfonnation. Householder matrices can

be used to compute the QL factorization o f a matrix. A Householder matrix can be found which will eliminate all the subdiagonal entries of the first column o f the original matrix. Another Householder matrix can be found which will eliminate all the subdiagonal

entries of the second column, and so on. At the end o f N --lsteps o f this process, the following series is computed which is the product o f a Householder matrix: ^ = the computed matrix is an orthogonal matrix and it is important to note that: (3.34) (3.33)

Therefore, by multiplying both sides by its transpose, which is also its inverse, one gets A = H'^*L or, if Q is defined to b e //^ : A = Q*L (3.36) (3.35)

where X is a lower triangnlar. The QL algorithm is preferred over the QR due to the significantly smaller round off error. Moreover, it is important to mention that the A matrix that is being used here is always a real, symmetric, and tridiagonal matrix. Those properties are guaranteed by the Householder algorithm.

47

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm issio n .

3.2 QL Algorithm - Factorization of A The QL factorization factors a matiix A into an orthogonal matrix Q and a lower triangular matrix L , so that: = (3.37)

The factorization can also be applied to rectangular matrices, in which case one o f the factors is no longer square. The QL factorization can be useful for solving the full range of linear systems, whether they are nonsingular, under-determined, over-determined or ill conditioned. It can be used to carry out the Gram-Schmidt orthogonalization o f a set o f vectors constituting the columns o f A . The QL factorization is also used repeatedly in an

iterative solution o f eigenvalue problems. This property was exploited in the code in order to calculate the condition numbers. The QL factorization was achieved by producing incrementally, by a series o f transformations utilizing Householder matrices. It is also possible to achieve the same results using Givens rotation matrices. However, due to the issues and factors discussed in Section 3.1.15, the Householder method was selected for this particular factorization (Press et al., 1986).

48

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

3.3 Singular Value Decomposition The singular value decomposition of a rectangular M by N matrix ^ is a factorization of the form: = (3.38)

where; U is an M by N matrix with orthogonal columns; S is an V by V diagonal matrix, containing the non-negative singular values of ^ ; F is an V by V orthogonal matrix. The solution of A * x = b for non-square A can be found by seeking that x which minimizes the ||T * x -6 ||. That x is equal to
V * s ~ '* u '^ (3 .39 )

where, since S may have zeroes on its diagonal, 3'" ' is constructed by replacing each nonzero diagonal element by its inverse. For any column I no greater than the minimum of M and N , let o f U , and v, be the / -th column o f V , and it is a fact that
A*Vi = Sii*u^ ( 3 .40 )

be the I - t h column

be the 1 -th diagonal element o f 3'. Then

and
A^ *Uj = Sij*Vi ( 3 .41 )

which leads to the conclusion that A* A^* 1 1 / = s,i * s,i * lif
( 3 .42 )

49

R ep rod u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without perm ission.

and

A * * v , = S;,*Si,*Vj

(3.43)

In other words, U , V and 5 contain information about the eigenvalues and eigenvectors of A* A ^ . Conversely, if the eigenvalues and eigenvectors o f ^*.4^ are known, then the squares o f the singular values o f A , and the left singular vectors o f A (the U matrix) are also known. The singular value decomposition can be used to construct the

pseudoinverse o f a rectangular or singular matrix A (Press et ah, 1986).

3.4. Chapter Summary Numerous methods o f calculating condition numbers by using different techniques o f calculating eigenvectors and eigenvalues were discussed above in order to illustrate the complexity and diversity o f using condition numbers as a stability criterion. The simple change in the method o f calculating the eigenvector might produce a different answer when computing condition numbers. In addition, there is more than one approach to calculate the condition number itself. This multitude of combinations produces a large number o f possibilities to calculate the condition number where each calculated condition number will produce a different answer due to the variation in the manner o f calculating the condition number itself and varying the way of calculating the eigenvalues and eigenvectors. The situation is much less complicated when choosing calculations o f the SVD (Singular Value Decomposition). The choice was made based mainly on the availability of the source code. The code was rewritten to the Visual Basic programming language II and modified to fit into the scope o f this thesis. However, the code and its intricacies are

50

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

not as well explained as condition numbers due to the lack o f detailed information on the subject. This situation exists due to the problem of using "black box" approaches in programming and the concept o f SVD being quite mature. Therefore, the SVD method was tested many times in the past and there is no need of proving the functionality and correctness o f this method. On the otlier hand, a controversy still exists around the

condition numbers, the best way to compute them, and their usefulness for setting stability criteria o f the solutions o f the matrices.

51

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

4.0 EXPERIMENTATION
The five parameters are tested to determine their critical values. The g parameter, which is the distance from the origin o f the Cartesian system to the outer-shell o f the solid, is tested first. The test is carried out by constructing a cylinder model. The

cylinder is created by software (Data Kreator) designed to calculate the position of the points in the X-Y plane with the spacing between the points provided by the user in degrees on the circumference o f the circle. Then the angle is decreased by half to

simulate the LIDAR data, which is sparse on the sides and dense in the middle o f the scanned object. In order to control the coverage of the circle, an additional control box is introduced into the software. This option provides the user with the ability to control how much surface coverage there is on the cylinder, e.g., 90 degree coverage or preset of 180 degree coverage (i.e., half o f the circle). The total number o f points on a ring is about 1450 points if 180 degree coverage is selected. Data Kreator
Output File Name; |data original.txt Radius Spacing in deg. Coverage of the pipe in deg. Number of rings Spacing between rings Start 1

Ba F
180 [2 0 " 0.5 Exit

Figure 4.1: Preset for Data Kreator.

52

R ep rod u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without perm ission.

The user has the power to specify tiie radius o f the circle as well as the number o f rings he/she wants. The user can also define spacing between the rings. Then the ring is copied upward along the z-axis. The second component o f the software suite designed for testing is Data Flipper. Data Flipper allows seven degrees of freedom when manipulating the data. include one scale, angle omega (ay), angle phi ( p ), angle kappa
{
a t

These

),

translation in the

x-direction, translation in the y-direçtion, and translation in the z-direction.

% Data Flippèr
Input File Name; jdata original.txt Scale Omega ( about x-axis) in deg. Phi ( abouty-axis) in deg. Kappa ( about z-axis) in deg. Translalion in x-direction Translation iny-direction Translation in z direction Flipp Create Data

F

Exit

Figure 4.2: Preset for Data Flipper.

The scale is the first option on the form, and the preset is scale equal to one. There are three rotations: one each about x-axis, y-axis and z-axis, respectively. Additionally, three translations in x, y and z directions, respectively, may be introduced. This set up allows for a fully controlled environment and data manipulation in 3D.

53

R ep rod u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission .

4.1 Testing the g parameter
The first parameter to be tested is g , assumed to be in centimeters, which is the shortest distance between the outer shell o f the "extended" cylinder and the origin of the coordinate system. The "extended" cylinder can be defined as the cylinder projected to infinity in both axial directions. Data are created using the software Data Kreator with the following five preset parameters: Radius = 1 Spacing = 10 degrees Coverage o f the pipe = 180 degrees Number of rings = 20 Spacing between rings = 0.5.

Data Kreator
Output File Name; [data original.txt Radius Spacing in deg. Coverage of the pipe in deg. Number of rings Spacing between rings Start

r
10

ji 80
20

|ÔT
Exit

Figure 4.3: G-test-1, Data Kreator.

54

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission .

The cylinder that is wrapped around the z-axis is translated down along the z-axis to ensure that the center of the cylinder coincides with the origin o f the coordinate system. The translation along the z-axis by -5 units is achieved by using the software Data Flipper. The remaining six parameters o f the Data Flipper are treated as control values and were not changed during this test.

% Data Flipper
Input File Name; jdata original.txt Scale Omega (about x-axis) in deg. Phi ( about y-axis) in deg. Kappa ( about z-exis) in deg. Translation in x-direction Translation in y-direction Translation in z direction Flipp Create Data

-5
Exit

Figure 4.4: G-test-1 translation along z-axis by -5 units.

The data cloud used in this thesis can be found in Appendix A, (File name "g-test1"). The data are translated down the z-axis by -5 units to align the centroid o f the cylinder with the origin o f the x, y, and z coordinate system. In order to ensure no further transformation, the following seven parameters are set to; Scale = 1 Omega = 0 degrees

55
/ 4
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

Phi = 0 degrees Kappa = 0 degrees Translation in x-direction = 0 Translation in y-direction = 0 Translation in z-direction = -5. The software "Point Cloud Data 3-D Adjuster and Analyser" is first used to depict the generated point cloud data from the file "g-test-1.txt". The created data are displayed below:

Point Cloiid Dgta 3'D A djuster and Analyser;
g-lesH W

L e tt

p

R ig h t

D ow n

Zoom In 1

Zoom O ut I

S cale (actor:
<. 16.6 y 157.B

11,5

y o lc u lo te

P a ram e te rs 3-D G raph

Figure 4.5: G-test-1 visualisation of data.

56

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission .

The next step is to adjust the data and calculate the geometric parameters o f the cylinder. Furthermore, an analytical and numerical analysis is applied to establish the stability o f the estimated parameters. This thesis concentrates on the development o f the advanced stability criterion routines and testing the stability and thresholds o f the calculations. Two methods of calculating the condition numbers are compared to ensure the validity o f calculated eigenvalues and condition numbers derived from them. The

cortelation-coefficient matrix is used to establish the strength of the relationship between the geometric parameters. The following table illustrates the summary of values obtained from the analysis:

57

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

g

Expected Values o f critical pararneters: *radir. I l k Angle_u_polar Angle_v_poh alpha  -1 0 90 O.OOE+00 Converged ans'A>ers: Angte_u polar Angle v poA alpha * radt< 1 / k -1 226.8545559 90 1.1 IE-15

1

g

1

2.41 E-02

Square root of the diagonal terms ((diag i.ii'^.S): 2.22E-02 8.36E-03 5.91 E-02 6.29358E*14

Unsorted rearranged Eigenvalues for a real syrtjmetnc mabix using TRED2 0 Eigenvalue 1 = Eigenvalue 2 = 14630.089 . Eigenvalue 14310.632 3 = Eigenvalue 1661.6976 4 = 2111.9079 Eigenvalue 5 =

Eigenvalue Eigenvalue Eigenvalue Eigenvalue Eigenvalue

Unsorted Eigenvalues for a real sym m e tic matrix using SVD 14630.089 1 = 14310.632 2 -- 1661.6976 3 = 2111.9079 4 = 1.90E-13 5 =

CNHfrom TRED CW# from SVD 1 1.46E+18 1.022323083 1 1.022323083 8.804302916 6.927427651 B.804302916 7.71E-T16 6.927427651

1 -7.13E-05 8.02E-02 1.52E-03 8.44E-02

Correlation-Coeffident Matrix 1.52E-03 8.02E-02 -7.13E-05 0.9900026 -6.83E-02 1 -6.91 E-02 1 -6.83E-02 1 -6.91E-02 0.9900026 9.85E-03 4.04E-03 5.90E-04

8.44E-02 5.90E-04 4 .04E-O3 9.85E-03 1

Table 1: G-test-1 Summary Table

The pre-defined value o f g is identical to the estimated value as well as the value for 1/yt, which is the radius of the cylinder. The marginal difference between the

expected and converged answer in the alpha, ( a ) , angle. This can be explained by the fact that a finite number of digits is used. In addition, truncation and round off error may influence this particular quantity. The remaining parameters, which are the most The / / angle has an extremely large

important ones, match the expected values.

calculation enor o f approximately 227 degrees, which could be explained by the very

58

R ep ro d u ced with p erm issio n of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

poorly defined angle ^ in the x-y plane. The / / angle is an angle in the x-y plane. In this test, the center line o f the cylinder coincides with the z-axis. This setup creates the problem o f a numerically unstable angle, since the x and y components o f this angle are calculated based on residuals and the lengths o f x and y components are zero. On the other hand, the û angle is well defined. Its numerical value of 90 degrees corresponds precisely with the converged answer. conesponding standard deviation values In addition, the critical parameters have for each calculated critical parameter

o fg , / / , 2? ,<2 -, andyt. Thus, the only value with an extremely high standard deviation is the / / angle due to extremely poor geometry for this particular data set. The high value o f the condition number suggests that the solution is unstable. This is time, since the cylinder is wrapped around the z-axis and the / / angle is highly unstable. In order to further investigate the stability of the software, especially the g parameter, the data are moved down by 5 units as in the last instance and then moved away from the origin of the coordinate system by 100 units along the x-axis.

59

R ep ro d u ced with p erm issio n of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

Data FUjpper
Input File Name: jdata original.txt Scale Omega ( about x-axis) in deg. Phi ( about[)^axis) in deg. Kappa ( about z-axis) in deg. Translation in x-direction Translation in y-direction Translation in z direction
100

 5 j
Exit

Flipp

Create Data

Figure 4.6: G-test-2, Data Flipper.

This approach enables one to predict the value o f the g parameter. file is renamed to g-test-2.txt (see Appendix A).

The output

60

R ep ro d u ced with p erm issio n of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

9

E xpected Values o f chb'cal parameters; Angle u polar A ngle_v polar alptia * radtoi I l k 99 0 0 90 C onverged answ ers: Angle u polar Angle v polar alpha * radtoc I l k 1.16E-15 99 7.81 E-15 90

1

9

1

Square root of the diagons^ terms ((diag ij)'^.5): 0.191809238 1.71 E-03 0.3OE-O3

8.39E-03

3.92E-02

Eigenvalue Eigenvalue Eigenvalue Eigenvalue Eigenvalue

Ur^sorted Eigenvalues for a real symmetric matrix using TRED2 13662.1913 1 18050137.8 2 = 26.8921286 3 = 828.92372 4 = 740880.86 5 -

Eigenvalue Eigenvalue Eigenvalue Eigenvalue Eigenvalue

Unsorted Eigenvalues for a real symmetric matnx using SVD 740880.86 1 = 18050137.8 2 -- 26.8921286 3 4 828.92372 5 = 13662.1913

CNflfrom TRED CHU from SVD 24.36307743 1321.174428 1 1 671205.2447 671205.2447 21775.39056 21775.39056 24.36307743 1321.174428

Correlation-Coefficient Matrix 1.55E-14 0.876991 -1.58E-14 0.465048 1 1 1.80E-14 -0.990113 -1.30E-15 1.55E-14 0.87699063 1.80E-14 1 -1.81 E-14 1.17E-03 1 9.10E-17 -1.58E-14 -0.99011284 -1.81E-14 1.17E-03 9.10E-17 1 -1.30E-15 0.465048395

Table 2: G-test-2 Summary Table

The pre-defined value o f g is identical to the estimated value as well as the value for [/k , which is the radius of the cylinder. The marginal difference between the

expected and the converged answer in the alpha {or) angle and /y angle occurs because a finite number of digits is used. As in the previous test, truncation and round off error may influence this particular quantity. The remaining parameters, i.e., the most

important ones, match the expected values. The / / angle is an angle in the x-y plane. In this test, the center line o f the cylinder coincides with the x-axis due to translation o f 100

61

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm ission .

cm in the x-direction. On the other hand, the û angle is well defined and its numerical value of 90 degrees corresponds precisely with the estimated answer. In addition, the critical parameters have corresponding standard deviation values for each calculated critical parameter of g , / / , , a-, and k . It is important to emphasize a high correlation

of 0.876991 (where 1 is the highest possible correlation, 0 is the lowest) between the g parameter and angle û . The g parameter is the shortest distance between the origin and the outer shell o f the cylinder. Angle. & is the zenith angle. There is also a notably high correlation of 0.465045 between the g parameter and k parameter (where k is the inverse of the radius). Moreover, there is a trend o f the / / angle being inversely

con-elated to the z? angle by - 0.990113 (where -1 is highest inversely correlated value and 0 is the lowest). The value of the condition number is considerably smaller, since the cylinder was moved away from the origin. This translation allowed the g parameter and other free parameters to be well defined, with the exception o f the u angle. The

improvement in the geometry o f the problem yields a smaller condition number. Thus, it is clear that the condition number can be used as a measure o f stability o f equations including the geometi-y o f a cylinder. The final test for g compliance is test-3, where the data are moved away from the origin by 1 km. This test indicates that the software is able to handle the difference in scale of 1:100000. However, the software is unable to maintain the stability o f the The cylinder is created in the same manner as in two

algorithms at great distances.

previous tests, with the difference in the translations. The cylinder is moved by -5 units in the z-direction as before and translated in the y-direction by 100,000 units.

62

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

tu Data Flipper
Input File Name; jdata original.txt Scale Omega (aboutx-axis) in deg. Phi ( about y-axis) in deg. Kappa ( about z-axis) in deg. Translation in x-direction Translation in y-direction Translation in i direction Create Date r ......... |o |o

|o
|o [iQ O O O G [-5 Exit

Flipp

Figure 4.7: G-test-3, Data Flipper.

The values for translation were selected based on easily predictable solutions to the parameters. The table below depicts the output o f this test:

63

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

Expected Values of critical parameters." AngIe_u_polar Angle_v_p< alpha * rad 11k g 99999 90 0 90

1

Converged answers: Angle u polar Angle v p alpha * rad I l k g 99999.05 89.94270424 90 -1.89E-07 0.9999994 Square root of the i)'^0.5): 0.381923628 3.60E-06

8.39E-03

6.30E-03

3.92E~02

Unsorted Eigenvalues for a real symmetric matrix using TRED2 1 = Eigenvalue 14509.303 2 = 6.65Ï6938 Eigenvalue = 668.73656 3 Eigenvalue Eigenvalue 4 = 3562663.1 5 = Eigenvalue 1.746E+13

Unsorted Egenvalues for a real symmetnc matrix using SVD Eigenvalue 1 = 1.746E+13 Eigenvalue 2 = 3562663.1 = 6.8576944 Eigenvalue 3 656.74182 4 = Eigenvalue 14509.381 Eigenvalue 5

CW#frorr7 TRED CNitfrom SVD Correlation-CoefScient Matrix 1203129683 1 -1.35E-02 0.9927265 9.93Ê-05 1 1 6.07E-05 -0.909345 2.54763E+12 4699894.339 -1.35E-02 6.07E-05 1 -2.01 E-05 26500233387 2.&4763E*12 0.992726 1 4699894.339 2550(X)21857 9.93E-05 -0.989345 -2.01 E-05 1.18E-06 1.15E-03 a t 02669 -0.132386 0^3130059 1
Table 3: G-test-3 Summary Table

0.102669 -0.13239 1.18E-06 1.15E-03 1

The pre-defined value of g-has an error o f 5 mm in a distance of 100 km to the estimated value. The value for l / t , which is the radius o f the cylinder, has a negligibly small error. This test demonstrates that the software has an ability to correctly calculate the distance and the radius o f the cylinder with 5 mm accuracy from 1 km. This test assumes that the data are error free. The marginal difference between the expected and converged answer in the alpha ( a ) angle and the / / angle may be explained, as before,

64

R ep ro d u ced with p erm ission o f th e copyright ow ner. Further reproduction prohibited without perm ission.

by the fact that a finite number of digits is used. In addition, truncation and round off error may influence this particular quantity. The r important ones, match the expected values. The /.i x-y plane due to the translation in the y-direction . 'gle ''ng parameters, i.e., the most s a value of 90 degrees in the
J,000 cm. As in all tests, the

Û angle is very well defined and its numerical value of 90 degrees coiTesponds precisely to the converged answer. In addition, the critical parameters have coiTesponding standard deviation values for each calculated critical parameter of g , // , z? , ^ , and k . The

standard deviation tables are suggesting that the angles are vei-y strongly defined with the increase of the distance. precision. However, the g parameter and the radius are decreasing in The large increase in

On the other hand, g and k become de-correlated.

distance increases the value of condition number. The increase in the condition number is not as dramatical as it is when the cylinder is wrapped around the z-axis. This suggests that the distortion of the geometry o f the cylinder is not as significant as when the cylinder coincides with the origin or one o f the axes. It is important to emphasize a high correlation of 0.9927265 between the g parameter (i.e., the shortest distance between the origin and the outer shell o f the cylinder) and angle / / (i.e., the X-Y plane angle). There is also a high inverse The

correlation of -0.989345 between the / / parameter and the zr parameter.

/ / parameter and zr parameter have a large negative correlation due to the normal pointing in the z-direction. This creates a singularity situation and the / / angle is not solved properly. In summary, the g parameter influences the statistical analysis rather strongly. When increased, the g parameter allows the angle to be strongly defined, but at the some

65

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission.

time it minimizes its own precision. Overall, the increase of the g parameter results in a positive effect on the algorithms. As the angle definitions are strengthened, the

g parameter looses its precision, but only by 1 ppm. Moreover, the radius accuracy is not influenced. By increasing the g parameter, the correlation between g and 1/k is

minimized. Understanding the role of the g parameter in numerical analysis is critical, since this parameter significantly influences test values. The condition numbers are

affected in a not very significant way by increase in g parameter. The G-test-1 test has the highest condition number due to poor geometry. The condition number is Finally, the

significantly improved as the cylinder is moved away from the origin.

condition number is increased as the cylinder is translated by great distance. Therefore, the condition number suggests a stable solution.

4.2 Testing the Influence of the Coverage of the Pipe The following tests are completed to determine how the point cloud coverage of the pipe would influence the five parameters. This is of particular importance, since this reduced coverage is a commonly encountered problem with LIDAR data. In order to keep the standard deviations and stability constant, the tests will be performed using data with the center of gravity at the origin o f the coordinate system. The first test is completed with the pipe coverage o f 150 degrees which is 43% coverage. Data are created using Data Kreator:

66

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

# Data Kreator
Output Rie Name: |data origind.txt Radius Spacing in deg. Coverage o1the pipe in deg,
N um ber of rings S p a c in g b etw een rings

ma
fi po ji5o|

p"
Exit

Start

Figure 4.8: Coverage-150 degrees. Data Kreator.

As in previous tests, the data are created using the radius of 1 unit, 10-degree spacing, and 20 rings with the spacing between the rings of 0.5 units. The coverage of the pipe is reduced to 150 degrees in order to detemiine how this will affect the standard deviations of the estimated parameters and the stability criteria of the algorithms. No further changes are applied. Thus, the data are centered around the z-axis and the data's center of gravity is located at the center o f the coordinate system.

67

R ep ro d u ced with p erm ission of the copyright ow ner, t-urther reproduction prohibited without p erm ission .

% Data Flipper
Input File Name: jdata originai.txt Scale Omega ( aboutx-axis) in deg. Phi ( abouty-axis) in deg. Kappa ( about z-axis) in deg. Translation inx-direction Translation in y-çJirection Translation in z direction

Flipp

Create Data

Exit

Figure 4.9: Coverage-150 degrees, Data Flipper

The depicted data are the result of this simulation. The 150 degree coverage o f the pipe in the x-y window is quite noticeable. pattern in the x-z projection. There is also a recognizable naiTOw

This pattern represents one of the sides o f the cylinder

being reduced when compared to the y-z projection:

68

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission .

d ata ofigiimllxl

U p :
LeH

j |S
Do'/m
.

Right

Zoom I In I Scale lectorix 9.6 / 64.2 !

Zoom Oui

K s" ^

Calculate Param eters 3-D Graph

Figure 4.10: Coverage-150 degrees, Data Visualisation

The depicted data have been processed in the software and the following chart was produced based on the summary o f the numerical analysis:

69

R ep ro d u ced with p erm ission of the copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

Caive.fged & ' -f

A ng!e_u_polar Ar>gie_v_pc alpha * rac U k 18Q 90 4 0 .7 0 7 7 8 9 8 3

1

Square root of the diagonal terrais ((diag l.i) '`0.5): 5.07E -02 6.46E -02 2.29E -02 1 .2 7 7 2 2E +14

6.32E -02

U nsorted B g e n v a lu e s for a real s'ym metric matrix using TRED2 0 E igenvalue 1 E igenvalue 4 6 9 .7 0 9 6 2 = 2 4 3 .7 5 3 9 E igenvalue 3 = 3 6 4 3 2 .8 6 E igenvalue 4 = E igenvalue 5 5 4 8 4 6 .4 8

U nsorted E igen valu es for a real s-ymmetric matrix using SV D E igenvalue 1 = 5 4 8 4 6 .4 8 3 6 4 3 2 .8 6 2 = E igenvalue 4 6 9 .7 0 9 6 E igenvalue 3 E igenvalue 4 24 3 .7 5 3 9 3.80E -13 5 E igenvalue

CNft from TRED C N 4 from SVD Correlation-Coefficient Matrix 1 2.23E -02 -9.04E -02 6.48E + 18 1 2 .23E -02 1 0.9909461 1 .5 0 5 4 1 2 3 9 3 1 1 6 .7 8 6 7 8 3 6 -9.04E-G2 0 .9 9 0 9 4 6 2 2 5 .W 7 5 9 6 2 1 1 6 .7 6 6 7 8 3 6 1 1.5 0 5 4 1 2 5 9 3 -1.32E -02 0 .9 6 6 1 9 5 0 .9 5 95428 2 2 5 .0 0 7 5 9 6 2 -0 .3153 1 1.44E + 17 -0 .2 7 5 2 8 9

-1.32E -02 0.9 661954 0.9595428 1 -0 .1 8 8 0 9 2

-0 .2 7 6 2 9 -0 .3 1 5 3 ·0 .3 0 7 2 8 -0 .1 8 8 0 9 1

Table 4: Coverage-150 degrees. Summary table

The value o f g is computed correctly without any errors.

The value for 1/A-,

which is the radius of the cylinder, has no errors as well. The difference between the expected and the estimated answer in the
a lp h a

( a ) angle and the / / angle can be

explained, as before, by the fact that ihtalpha { a ) angle is unable to distinguish which part of the pipe is the beginning and which is the end o f the pipe. Moreover, the /c angle is calculated based on small errors in the residuals, as explained previously. As in all instances, the â angle is very well defined and its numerical value o f 90 degrees conesponds precisely to the expected answer. In addition, the critical parameters

70

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm ission .

have corresponding standard deviation values for each calculated critical parameter of g , / / , , <»·, and k . The standard deviation tables indicate that the angles are strongly

defined with the exception o f the / / angle. In contrast to previous tests, this is a new trend of angles being highly correlated. The condition number is not influenced by

changing coverage from 180 degrees to 150. The next test is completed to detemiine the effect o f decreased coverage of the pipe on the outcome o f the numerical analysis. The following test is completed in 130degree coverage with the same parameters as in the previous test.

[i] Output File Name; jdata originai.txt Radius Spacing in deg. 1 Coverage of the pipe in deg. 1 Number of rings 1 Spacing between rings 1 |io _

[130
|20 jo.5 Exit

1

Start

Figure 4.11; Coverage-130 degrees, Data Kreator

In order to better control the environment, Dai a Flipper is used with the scale set to one while the other parameters are zero.

71

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited without p erm issio n .

Data Flipper
Input File Name: jdata originai.txt Scale Omega (about x-axis) in deg. Phi ( about praxis) in deg. Kappa ( about z-axis) in deg. Translation in x-direction Translation in y-djrection Translation in z direction

Flipp

Create Data !

Exit

Figure 4.12: Coverage-130 degrees, Data Flipper.

Data are depicted in the figure below. The change in the coverage o f the pipe is noticeable in the x-y window.

72

R ep ro d u ced with p erm issio n of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

dalaoriQirid.txt

Left

I

!b

Right

Down : Zoom Out S cale factor' c 7.2 J1.5

Selculate P aram eters 3-D g ra p h

Figure 4.13: Coverage-130 degrees, Data VisuaJization

The Point Cloud Data 3-D Adjuster and Analyser is mn. The output files are combined into one summary chart, which is depicted below. The input and output files can be found in Appendix A, in the folder entitled " 130 deg coverage" .

73

R ep ro d u ced with p erm issio n of th e cop yright o w n e r. Further reproduction prohibited w ithout p erm issio n .

Converged answers: Ar)gle_u_polar Angle v po! alpha ` radtoc 1 ! k S 130 -1 -124.9604723 90 Sguare root of the diagonal terms ((diag !J) ''0.5): 5.90E-Q2 3.16E-05 1.10E-02

1

8.&3E-03

4.80E-02

Unsorted Eigenvalues for a real s-ymrnetric matrix using TRED2 Eigenvalue 1 -2.33E-26 Eigenvalue 2 = 230.4094893 3 = 423.3083807 Eigenvalue Eigenvalue 4 26640.54901 Eigenvalue 5 = 53021.17753

Unsorted Eigenvalues fora real symmetric matrix using SVD 63021.17763 Eigenvalue 1 26640.54901 Eigenvalue 2 Eigenvalue 3 280.4094893 Eigenvalue 423.3083807 4 = 7.62E-13 Eigenvalue 5

CN'iffrotv TRED CNif from SVD Correlation-Coefficient Matrix -2.27 E+30 -1.04E-20 -0.828559 1 1 189.084BIQ -1.04E-20 1 -1.17E-19 1.990243426 1 -1.17E-19 125.254259 189.084819 -0.8285591 1.81E-19 -0.273388 1.990243426 5.43E-03 125.254259 -6.03E-20 0.2179004 1 6.96E*16 -6 .6 3 6 0 3

5.43E-03 -6.63E-03 1.81E-19 -6.03E-2Q -0.2733882 0.21790036 1 -0.8192815 -0.8192815 1

Table 5: Coverage-130 degrees, Data Summary

As in previous examples, the parameters are calculated correctly with the exception o f the angle in the x-y plane. It is important to emphasize that this is a singular example. When the û -angle is 90 degrees and the cylinder is wrapped around the z axis, the / / -angle is calculated based on calculation errors. well-defined based on the standard deviations. The remaining parameters are

The values are recovered with the

standard deviation in millimeters for linear parameters and hundredth o f a degree for angular parameters. The correlation-coefficient matrix suggests strong inversely The condition number increased in value which

corrected g and / / angle parameters.

suggests that the reduction in coverage have impacted the solution.

74

R ep ro d u ced with p erm issio n of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

The data are further reduced down to 100-degree coverage to further investigate the influence o f the coverage on the outcome o f the statistical analysis.

fc Data Kreator
Output File Name: jdata originai.txt Radius Spacing in deg. Coverage of the pipe in deg. Number of rings Spacing between rings

1
jio

20

0,5
Exit

Start

J

Figure 4.14: Coverage-100 degrees, Data Kreator.

There is no rotation or translation introduced to the data in order to keep them consistent with previous tests.

75

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited w ithout p erm issio n .

'- T > , r ; y A

D ata Flipper * 5 -. W:'-

Input File Name; jdata originai.txt Scale O mega (about x-axis) in deg. Phi ( about y-axis) in deg. Kappa ( about z-axis) in deg. Translation inx-direction Translation in >^direction Translation in z direction

Flipp

Create Data

Exit

Figure 4.15; Coverage-100 degrees, Data Flipper.

The data are displayed in three projections for easy comprehension and data visualization. When observing the data, it is noticeable that the coverage is decreased to

100 degrees in the x-y window as well in the x-z window. The data in the x-z window are a projection of the pipe from the side view. visualization o f the frontal side o f the pipe. The y-z projection allows for

76

I R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

d a ta ofiginal.tct

Up Left I [5 Down Zoom In j

i

Right

Zoom 1 Out

Scale rfs factor I 1.334401

J 43 7422037

Calculais Param eters 3-D Graph i

Figure 4.16; Coverage-100 degrees. Data Visualization.

The following compiled chart presents the numerical summary for the data set described above:

77

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without perm ission.

C o n v e rg e d a n sw e rs: A n gle_u _polar Angle_v_ii alpha * radti I l k Q 180 -1 3 3 0 .9 2 1 8 9 8 1 90 Square r o d of the d ia g o n a l term s ((diag I.i)''0.5): 1.42E -02 0 .4 3 7 1 8 6 1 0 1 2 .4 9 5 3 3 E + 1 3 1.50E -02

1

0 .2 0 6 8 4 4

U nsorted S g e n v a lu e s for a real sy^m ivetrh matrix using i'RED2 E igenvalu e -1.37E -26 1 E igen value 2 = 5 .4 4 9 5 9 5 4 1451.8416 E igenvalue 3 E igen value 7874.76 4 3 0 8 3 4 .0 9 9 E igenvalu e 5 =

U nsorted E ig en va lu es fo r a real sym m etric matrix using SV D E igenvalu e 30884 099 1 = = 5 .4 4 9 5 9 5 4 E igen valu e 2 = 1451.8416 E igen value 3 E igen value 7874.76 4 1.74E-14 E igen value 5 =

C N ftfrom TRED C N iffrom SVD C orrelation-C oefficient -2 .2 5 E + 3 0 1 1 -0.45Ù 2544 1 5 6 6 7 .2 2 7 9 1 7 5 6 6 7 .2 2 7 9 1 7 -0 .4 5 6 2 5 2 1 .2 7 2 3 6 1 5 7 2 1 .2 7 2 3 6 1 5 7 0 .1 5 4 4 6 4 -0.5976903 3 .9 2 1 9 0 9 9 2 1 3 .9 2 1 9 0 9 9 2 1 -0 .3 9 5 3 8 -0.2108521 1.7SE+1S 0 .9 9 1 0 5 4 -0.4862831 1

atrix 0 .1 5 4 4 6 4

-0 .3 9 5 3 8 0 .9 9 1 0 5 4 -0 .2 1 0 8 5 -0 .4 8 6 2 8 1 0.14030Ô 0.2 6 1 4 0 1 0 .1 4 0 3 0 6 1 -0.39^7^ 1 0 .261401 -0 .3 9 4 7 4

-0.69769

Table 6: Coverage-100 degrees, Data Summary.

The summary chart illustrates a strong trend of decreasing precision o f the g parameter. There is also a similar trend in the definition o f the radius o f the cylinder. Moreover, the correlation-coefficient matrix demonstrates that all parameters are becoming positively correlated or inversely correlated. The condition numbers show

highly unstable equations, which is a continuation o f the trend from the previous test. Thus, the prediction o f a highly degradable precision of the calculations is demonstrated. Further testing will demonstrate this trend more dramatically.

78

R ep ro d u ced with p erm ission o f th e copyright ow ner. Further reproduction prohibited without perm ission.

The next step is to reduce the coverage of the pipe even further and to detennine whether this will influence the five parameters as well as the stability criterion. In order to maintain the standard deviations and the stability constant, the tests will be completed using data with the center of gravity at the origin of the coordinate system. The test is earned out with the pipe coverage of 70 degrees. Once again, the data are created using "Data Kreator".

Output File Name; jdata originai.txt Radius Spacing in deg. Coverage of the pipe in deg. Number of rings Spacing between rings

|TF

[?r
|2tT
0.5 Exit

Stu:t

!

Figure 4.17: Coverage-70 degrees. Data Kreator.

As in previous examples, the data are created using the radius of 1 unit and 10degree spacing. There are 20 rings with the spacing between the rings of 0.5 unit. The coverage o f the pipe is reduced to 70 degrees in order to deteimine how it will affect standard deviations and the algorithms' stability. No further changes are applied and the data are centered around the z-axis. The data's center o f gravity is located at the center of the coordinate system.

79

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm ission.

dalaoncinal.M

Down ; Zoom In S cale (actor 42 156.6 Zoom Out j i .5

X.

y

Eelculale Parem eters 3-D Graph

;

Figure 4.18; Coverage-70 degrees, Data Visualization.

The chart below represents the statistical summary o f the calculated data.

80

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

Convt^rged answers: Angie_u_po!ar Ang!e_v poir g -1 1.72E-09 90 Square root of the diagona! terms ((diag l.i)` ^0.5):
0 .9 9 3 6 8 4 5 4 1 3 .1 6 E - 0 5 1 .0 5 E - 0 2

a l p h a * .r a d tc

1Jk 1 0.4760878

180

1 .4 4 E - 0 2

Unsorted Egenvafues for a real symmetric matrix using TRED2 1 -8.69E-17 Eigenvalue Eigenvaiue 4840.76439 2 = = 0.83858263 Eigenvalue 3 1343.50747 Eigenvalue 4 = Eigenvalue 5 = 41938.Q166

Unsorted E genvaiuss for a real symmetric matrix using SVD Eigenvalue 41938.0166 1 = 1343.50747 2 Eigenvalue ^ 0.83858263 Eigenvalue 3 = 48^0.76439 Eigenvalue 4 = 1.15E-14 Eigenvalue 5 --

c m from TRED CNitfrom SVD Co.'relation-Coeifici e.nt Matrix 1 1 -6.74E-22 -4.82E*20 1 31.2153207 -6.14E-22 8.663511204 -9.72 E-19 50010.59535 50010.59535 -8.&3E-02 31.2153207 8.663511204 1.61E-10 -8.38E-20 3.65E-r18 0.99819804 -6.81 E-22 1

-8.83E-02 -9.72E-19 1 -4.17 £-11 -3.63E-02

1.61E-10 -8.38E-20 -4.17E-11 1 1.62E-1Û

0.998198 -6.81 E-22 -3.63E-02 1.62E-1Q 1

Table 7: Coverage-70 degrees, Data Summary

There is clearly visible the degradation of the parameters in terms o f the precision. There is almost now a degradation of 100% of a g parameter, and 47% of radius. However the correlation-coefficient matrix shows that the parameters are not correlated. The exception is the g parameter and radius. Moreover, the stability criterion suggests that the equation is more stable in this test that in previous one. The stability is almost as good as in the 150 degree coverage test. This suggests that stability criteria can not be used alone. It is obvious that stability criteria become stable since the error is so great that even a large change in eirors will not have much influence on the poorly defined parameters.

R ep rod u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

The last test presented is the 20-degree coverage test. This test demonstrates that data without errors can be calculated even with extremely low coverage. The user should be aware that this software would calculate the parameters even though they may not be coirect or well defined. The numerical summary is designed for the user to verify the answer. The 20-degree coverage test was the lowest coverage that the software was able to complete. This software is unable to process data with less than 20-degree coverage.

Output File Name; jdata originai.txt Radius Spacing in deg. Coverage of the pipe in deg. Number of rings Spacing between rings R

K

[t 5
Exit

Start

Figure 4.19: Coveragc-20 degrees, Data Kreator.

The data are depicted below. There is a clearly visible arch in x-y window. However, the data in the x-z window resemble a line instead o f a rectangle.

82

R ep ro d u ced with p erm ission of the copyright ow ner. Further reproduction prohibited without p erm issio n .

3-p AdjHSter a n d # M y s e r .
d a ta cnginal Ut

Left

|5

Zoom j
In

Zoom j
Oui ;

1

Scale factor <. 1,8 V 127.2

F r
i^ûlculole

-fty -Rz

*Ry
fR z

P a ra m e te rs

3-D Graph

Exit

Figure 4.20: Covcrage-20 degrees, Data Visualization.

The summary is a good example o f how the results may look when there is no random error introduced to the data. The parameters are recovered ver>' well. However, the estimates are showing an extremely poor definition of those parameters.

83

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

C o n v e rg e d a n sw e rs: Angle__u_polar A n g le_ v_ f alpha * radti I l k g 90 -1 - 3 9 8 .5 3 5 9 5 0 6 9.66E -14 S q u a re root o f th i)^0.5): 1 4 .3 0 0 3 8 9 0 6 1.37E + 15

1

0 .9 5 7 4 1 5

4 .1 0 2 6 7 4 2

8 .7 9 7 3 4 7

U n so rted E g e n v a lu e s f o r a real s y m m e tn c m atrix using TR LD 2 -1.60E -29 E igen valu e 1 = E igen valu e 2 = 5 .W E -0 2 E igen valu e 3 = 9.0545 f 05 E igen valu e 5 1 .5 5 2 0 1 9 4 E igen valu e 5 = 1 4 3 1 .8 7 5 7

U n so rted E g e n v a lu e s for a re a l sy m m e tric matn'x u sing S V D E igen valu e 1 4 3 1 .8 7 5 7 1 E igen valu e 5 1 .5 5 2 0 1 9 2 = 3 5 .1 0 E -0 2 E igen valu e 9 .0 5 4 5 1 0 5 E igen valu e 4 3 .4 1 E -1 5 E igen valu e 5 =

C N itfro m TRE D C N itfro m SV D C orrelation-C oefficient Matrix -8.93E + 31 1 1 -0 .9 5 7 7 2 5 3 -0 .8 6 0 1 6 - 0 .9 8 0 U 0 .9 9 2 1 5 3 2 8 0 8 4 .2 6 1 7 1 2 7 .7 7 5 3 5 5 5 5 -0 .9 5 7 7 3 1 0 .7 0 6 2 2 9 0 .9 9 4 3 9 3 -0 .9 8 5 8 7 0 .7 0 6 2 2 8 6 0 .7 7 5 3 8 7 -0 .8 0 0 3 4 1 5 8 .1 3 9 4 8 9 2 8 0 8 4 .2 6 1 7 1 -0 .8 6 0 1 6 -0 .9 9 6 6 1 2 7 .7 7 5 3 5 5 5 5 0 .9 9 4 3 9 2 7 0 .7 7 5 3 8 7 1 5 8 .1 3 9 4 8 9 -0 .9 8 0 4 4 1 -0 .9 9 6 6 1 4.20E -^17 0 .9 9 2 1 5 3 -0 .9 8 5 8 7 1 2 -0 .8 0 0 3 4 Table 8: Coverage-20 degrees, Data Summary

As mentioned above, the statistics are very degraded. The statistical deviation of the g parameter is calculated to be +/-14.3 units when g = -1 and the radius error is calculated to be at +/-S.79 units when radius = 1 unit. The condition numbers are

suggesting that even a small change will greatly influence the stability of the algorithm. This phenomenon occurs because this is a point where the program numerically overflows if lower coverage is introduced. There is no stability of the algorithm at this point and the numerical summary demonstrates it very clearly.

84

R ep ro d u ced with p erm ission of the copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

4.3 Summary of Results

It should be noted that the software presented in this study, Point Cloud Data 3 0 Adjuster and Analyser, is comparable with software Cyclone by Cyra (Hong, 2003). However, testing has revealed that Point Cloud Data 3D Adjuster and Analyser is able to calculate a more accurate approximation o f the radius. Table 9 depicts a comparison of pipe diameter measurements for the two software packages. Pipe ID 1 2 3 4 5 6 7 Materials Brass PVC Stainless Steel Galvanized Iron Steel Ceramic Aluminum Actual Diameter 38.02 38.05 31.69 80.9 63.45 111.4 113.25 3D Adjuster 33.81 21.74 24.60 74.64 54.35 112.21 113.09 Errors 4.21 16.31 7.09 6.26 9.10 -0.81 0.16 Cyclone by Cyra 29.99 21.04 23.63 77.28 55.56 109.23 110.77 Errors 8.03 17.01 8.06 3.62 7.89 2.17 2.48

Table 9: Results o f Diameter M easurements by Two Different Softrware Packages (Unit: mm)

85

R ep ro d u ced with p erm ission of th e copyright ow n er. Further reproduction prohibited w ithout p erm issio n .

5.0 C O N C L U S IO N S A N D R E C O M M E N D A T IO N S

5.1 Conclusions The importance o f using a full set of numerical analyses in order to establish algorithm stability was demonstrated in this thesis. Various numerical methods were

implemented to derive the goodness-of-fit o f the cylinder. The findings indicate that it is possible not only to find the goodness-of-fit o f the results, but also to foresee the behaviour o f the algorithms if the condition numbers were calculated. The condition

numbers combined with the use o f standard deviations and con elation-coefficient matrices in a controlled environment allowed to analyze the solution and establish the behaviour o f the solution as changes were introduced into the point data cloud. The test of the g parameter reveals that as this parameter increases, angles / / and â increase in precision. This is particularly noticeable with the / / angle, which is

extremely poorly defined when it is wrapped around the z-axis and its centre o f gravity corresponds to the origin o f the coordinate system. This finding is not surprising given that angles are better defined over great distances. This is also clearly seen in the

correlation-coefficient matrices. The conelations between the g parameter and the / / angle and the û angle are almost 1 as the distance is increased to 100000 units. The parametrization methods used to derive the critical parameters in the algorithm are taking full advantage o f this property. The alpha ( zr ) angle is not

influenced by this property since it is defined locally and it is not dependent on the distance from the origin. The correlation-coefficient matrix clearly shows almost a zero correlation between the g parameter and the alpha { a ) angle.

86
R ep ro d u c ed with p erm issio n of th e copyright ow n er. Further reproduction prohioited w ithout p erm issio n .

M oreover, the radius o f the cylinder is not influenced by increasing the distance from the origin. This allows the radius to be well defined wherever the cylinder is

positioned. In addition, the increase in the distance allows the radius to be less correlated with the g parameter. The only degradation in the quality o f the estimates is seen in the g parameter alone. However, this degradation is minimal if compared to the distance. For example, it was observed that at a distance of 100,000 units, the degradation of precision is 0.3819 units, which corresponds to a loss o f precision o f 3.8 centimetres in 1 km. The test o f the coverage of the pipe revealed that decreasing the coverage does not influence th e // and z? angles greatly. Therefore, th e // and ÿ angles are not a function o f the rc influer, ige. However, the test strongly suggests that the //.a lp h a angle is strongly i by the changes in coverage of the pipe. The most susceptible parameters are They both decrease in precision as the coverage is

the g parameter and the radius.

decreased. Moreover, the condition numbers drastically increase in value as the threshold o f 130 degrees is exceeded. This is a sign that less than 130-degree coverage will

destabilize the precision of calculations. The 100-degree coverage is an example o f this trend. The 100-degree coverage test shows a rather large decrease in the precision of the g parameter and the radius. Those errors are amplified even more in the 70-degree and 20-degree coverage configurations.

87

R ep ro d u c ed with p erm issio n of th e cop yright ow n er. Further reproduction prohibited w ithout p erm issio n .

5.2 Recommendations
One o f the recommendations for data collection is to maintain the scan coverage between 130 degrees and 360 degrees, since this coverage produces the most reliable algorithms. Moreover, it is recommended that a distance o f at least 10 times the radius is maintained when pipes are scanned. The distance should not exceed 10,000 times the radius. This is necessary to ensure that angles are well defined and that the g parameter has not been corrupted. In addition; it is recommended that the effects o f operational

errors on the solution are analyzed. Operational eirors occur during data collection and they may distort the data and affect the solution. It is also desirable to study data filtering techniques in order to create algorithms that are able to detect and reject blenders and outliers. Furthennore, intensity values should be taken into consideration to improve the quality of the solution. Studying the influence o f incident angles and range may produce additional useful information in calculating spatial orientation. Also, the use o f different materials as targets will help to better understand the point cloud data coverage o f the pipe.

n

^

88

R ep ro d u ced with p erm ission of th e cop yright ow n er. Further reproduction prohibited without p erm issio n .

REFERENCES

Anderson, E., Crippin, P. W., Davidson, L., Rachich, F. J., & Zorzitto, F. A., 1988. Algebra and Geometry. Toronto: Holt, Rinehart, & Winston o f Canada. Byne, G. F., Crapper, P. F., & Mayo, K. K., 1980. Monitoring land-cover change by principal component analysis o f miiltitemporal landsat data. Remote Sensing of Environment, 10, 175-184. Dineen, S., 1998. Multivariate calculus and geometry. New York, NY: Springer-Verlag. Faddeev, O.K., & Faddeeva, V.N., 1963. Computational Methods o f Linear Algebra. New York, NY: Freeman. Fausett, L. V., 1999. Applied numerical analysis using MatLab. Upper Saddle River, NJ: Prentice Hall. Fung, T., & LeDrew, E, 1987. Application o f principal component analysis to change detection. Photogrammetric Engineering and Remote Sensing, 53 (12), 1649-1658. Hong, J., 2003. 3D modeling o f industrial piping systems using digital photogrammetiy and laser scanning. Toronto: Ryerson University. Jensen. J.R., 2004. Introductoiy Digital Image Processing: A Remote Sensing Perspective (3'`` ed.), Prentice Hall. Kwon, S., Liapi, K. A., Sreenivasan, S. V.. & McLaughlin, J. T., 2002. Human-assisted object fitting to sparse range point clouds fo r rapid workspace modeling in construction automation. BFRJL Publications Online, URL: http://flre.nist.i;ov/hfrlpiib.s/biiiI(l02/PDF/h02 lO l.p d f Lukacs, G., Marshall, A. D., & Martin, R. R., 1997. Geometric least-squares fittin g o f spheres, cylinders, cones and tori. Copernicus, 1068, 1-20. Marshall, D., Lukacs, G., & Martin, R., 2001. Robust segmentation o f primitives from range data in the presence o f geometric degeneracy. IEEE 23 (3), 304-314. Press, W. H., Flanneiy, B. P., Teukolsky, S. A., & Vetterling, W. T., 1986. Numerical recipes: The art o f scientijic computing. New York, NY : Cambridge University Press. Stewart, J., 1995. Calculus (3''^ ed.). Pacific Grove, CA: Brooks/Cole Publishing.

89

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm issio n .

Watson, G. A., 2000. Least squares fittin g o f parametric surfaces to measured data. ANZAM, 42, C68-C95. Werghi, N., Fisher, R. B., Robertson,C., & Ashbrook, A. P., 2000. Faithful recovering o f quadric surfaces from 3D ran^e data bv global fitting. International Journal o f Shape Modeling, 6 (1), 65-78. Werghi, N., Fisher, R. B., Robertson,C., & Ashbrook, A. P., 2000. Shape reconstruction incorporating multiple non-linear geometric constraints. Constraints Journal, 7 (2), 117149. www.j-techdesign.com

90
R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

A P P E N D IX

Software and directory folders are included on the attached CD. Input and output test files are included on the attached CD.

91

R ep ro d u ced with p erm ission of th e copyright ow ner. Further reproduction prohibited without p erm ission .

