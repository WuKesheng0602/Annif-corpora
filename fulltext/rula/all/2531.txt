A FRAMEWORK FOR EARLY DESIGN PROCESS STAGES BASED ON AN ANALOGY TO EVOLUTION

By

Damian A. S. Rogers

B.Eng., Ryerson University, 2004 M.A.Sc., International Space University, 2005

A dissertation presented to Ryerson University in partial fulfillment of the requirements for the Degree of Doctor of Philosophy in the Program of Mechanical & Industrial Engineering Toronto, Ontario, Canada, 2014

©Damian Rogers 2014

ii

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A DISSERTATION

I hereby declare that I am the sole author of this dissertation. This is a true copy of the dissertation, including any required final revisions, as accepted by my examiners.

I authorize Ryerson University to lend this dissertation to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this dissertation by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

I understand that my dissertation may be made electronically available to the public.

iii

iv

Abstract

A Framework for Early Design Process Stages Based on an Analogy to Evolution Degree of Doctor of Philosophy, 2014 Damian Angelo Sidney Rogers PhD program, Department of Mechanical & Industrial Engineering Ryerson University

Recent research has revealed several shortcomings of design processes with respect to modern contexts. Two of these are complexity and sustainability. Design problems are becoming increasingly complex, to the point where designers can be easily overwhelmed. Sustainability, while recognized as pivotal to future human progress and well-being, remains largely disconnected from design processes. Current practices in the field of sustainability are not integrated into the design process and thus, are often carried out only as after-the-fact addenda. The goal of this research is to address these two problems with current design processes. It has long been known that analogies are useful and help to reduce complexity by rooting a topic into pre-existing knowledge of the user. Patterns have also been shown to be useful in helping solve complex problems in engineering, as well as architecture and computer science. Therefore, this dissertation proposes a new design framework which: reduces problem complexity through the use of an analogy and patterns, makes provisions for emergent properties within the patterns and the framework, and provides a means for generating solutions with aspects of sustainability via the patterns and evaluation criteria. The analogical framework, based on similarities found in the phenomena and processes between natural systems (nature) and design, is then used to formulate a new model for describing the design of a product, the Design Genome. The main focus of this dissertation is to use this model as a basis for a new method of concept generation, the Design by DNA method, and concept evaluation, the Fitness Space method. It is shown that the Fitness Space method has the potential to solve many, if not all, of the downfalls of conventional evaluation methods. A pilot experiment testing the Design by DNA method against previously v

known design methods is conducted and demonstrates the feasibility for a full-scale experiment. Even with small population sizes, results from the experiment show promise that the DbD method is useful as a tool for the concept generation process. Based on the work done, it appears that Design by DNA and the Fitness Space are promising approaches for improving design processes.

vi

Acknowledgements

I would like to thank a number of people who have assisted me in one way or another to complete this work. First, I must thank Dr. Filippo A. Salustri, my advisor and mentor, for his inspiration, guidance, introduction to the vast and wonderful world of design, and the always interesting topics of conversation. As well, I am gracious to Dr. Alan Fung, who co-supervised me during the first years of my research and who introduced me to the topic of sustainability.

I must also thank my family and friends; their love and support throughout the years has helped me in ways beyond imagination and helped to keep me moving forward on this long journey. To my friends: thanks for keeping me sane.

There are many others ­ graduate students, professors, and friends ­ who contributed too, professionally and otherwise; to all of them, my sincerest thanks.

vii

viii

Table of Contents
Chapter 1 1.1 1.2 1.3 Introduction .............................................................................................................................. 1

The Big Loop vs. the Little Loop in Design ..................................................................................... 5 Analogies ....................................................................................................................................... 7 Patterns and Pattern Languages ................................................................................................... 9 1.3.1 Sections of a Pattern ...................................................................................................... 9

1.4

Emergence ................................................................................................................................... 11 1.4.1 Weak vs. Strong Emergence......................................................................................... 12

1.5 1.6 1.7 1.8 1.9 1.10

Sustainability ............................................................................................................................... 13 Evolution of Nature ..................................................................................................................... 14 Evolution of Designs .................................................................................................................... 15 The Form-Context Ensemble ....................................................................................................... 19 Premises ...................................................................................................................................... 19 Research Question....................................................................................................................... 21 Literature Review .................................................................................................................... 23

Chapter 2 2.1 2.2

Complexity in Design ................................................................................................................... 25 Design Processes ......................................................................................................................... 26 2.2.1 2.2.2 An Overview of the Design Processes that will be Discussed ...................................... 28 Other Notable Contributions ....................................................................................... 32

2.3

Phases of the Design Process ...................................................................................................... 34 2.3.1 2.3.2 2.3.3 Problem Analysis .......................................................................................................... 34 Concept Generation ..................................................................................................... 39 Concept Evaluation ...................................................................................................... 43

2.4

Summary...................................................................................................................................... 47 Analogical Framework............................................................................................................. 49

Chapter 3 3.1

Evolution of Designs and Products .............................................................................................. 51 3.1.1 3.1.2 3.1.3 Comparing Biological and Artificial Phenomena and Processes .................................. 52 Genes ........................................................................................................................... 57 Lifecycle Processes ....................................................................................................... 58

3.2

Evolution in Design ...................................................................................................................... 60 3.2.1 "Big-loop" Evolution in Design ..................................................................................... 60

ix

3.2.2 3.2.3 Chapter 4 4.1 4.2

"Little-loop" Evolution in Design .................................................................................. 61 "Open Design" and Product Evolution ......................................................................... 61

A Genetic Representation of Design ....................................................................................... 63

Creating Design Genomes ........................................................................................................... 65 Structure of a Design Genome .................................................................................................... 66 4.2.1 4.2.2 4.2.3 Assembling the Design Genome .................................................................................. 67 Gene Pattern Template ................................................................................................ 68 Bicycle Gene Pattern .................................................................................................... 71

4.3

Discussion .................................................................................................................................... 74 The Design by DNA Method .................................................................................................... 77

Chapter 5 5.1

Concept Generation via the DbD Method ................................................................................... 79 5.1.1 5.1.2 5.1.3 5.1.4 Step 1: Elimination of Unnecessary Genes .................................................................. 79 Step 2: Choosing a Starting Point ................................................................................. 80 Step 3: Choosing an Embodiment for Each Gene ........................................................ 81 Step 4: Assembling a Concept ...................................................................................... 83

5.2

Creativity in Design ...................................................................................................................... 84 5.2.1 Using the DbD Method for Creative Design ................................................................. 85

Chapter 6 6.1 6.2 6.3

The Fitness Space Method ...................................................................................................... 89

Definition of the Fitness Space .................................................................................................... 91 Creating the Fitness Space During Design ................................................................................... 92 Optimizing the Fitness Space for Better Design .......................................................................... 95 6.3.1 6.3.2 6.3.3 Case 1: equal card(FBV), unequal Et ............................................................................. 98 Case 2: unequal card(FBV), equal Et ............................................................................. 99 Case 3: unequal card(FBV), unequal Et......................................................................... 99

6.4 6.5

Fitness Space Example................................................................................................................. 99 Downfalls of Current Evaluation Methods ................................................................................ 102 6.5.1 6.5.2 6.5.3 6.5.4 6.5.5 Reference Design Problem:........................................................................................ 103 Changing Reference Problem:.................................................................................... 103 Rating System Problem: ............................................................................................. 104 Changing Rating Systems Problem:............................................................................ 104 Evaluation Criteria Problem: ...................................................................................... 104

6.6

Fitness Space Counter-Example ................................................................................................ 105

x

Chapter 7 7.1

Design Creativity Experiment ................................................................................................ 111

Experimental Procedure ............................................................................................................ 115 7.1.1 7.1.2 Experimental Run 1 .................................................................................................... 116 Experimental Run 2 .................................................................................................... 117

7.2

Experimental Results ................................................................................................................. 118 7.2.1 7.2.2 Results From Experimental Run 1 .............................................................................. 119 Results From Experimental Run 2 .............................................................................. 121

7.3

Discussion of the Results ........................................................................................................... 123 7.3.1 7.3.2 7.3.3 Statistical Analysis of Experimental Run 1 ................................................................. 124 Statistical Analysis of Experimental Run 2 ................................................................. 125 The Effect of Time on the Creativity Results .............................................................. 127

7.4

Conclusions Drawn From the Experimental Analysis ................................................................ 131 Concluding Remarks.............................................................................................................. 133

Chapter 8 8.1 8.2

Future Work............................................................................................................................... 135 Conclusions ................................................................................................................................ 136

Appendix A ................................................................................................................................................ 141 Appendix B ................................................................................................................................................ 151 Appendix C ................................................................................................................................................ 165 Appendix D ................................................................................................................................................ 175 Bibliography .............................................................................................................................................. 195 Glossary ..................................................................................................................................................... 205

xi

List of Tables
Table 6-1: E values for 6 BVs in 3 concepts .............................................................................. 100 Table 6-2: An expanded set of E values including a final version of concept B ........................ 101 Table 7-1: Systems design vs. DbD creativity assessments ....................................................... 119 Table 7-2: TRIZ vs. DbD creativity assessments ....................................................................... 120 Table 7-3: Experiment run 1 walkout checklist results .............................................................. 120 Table 7-4: Conventional method vs. DbD creativity assessments.............................................. 122 Table 7-5: Experiment run 2 walkout checklist results .............................................................. 122 Table 7-6: NASA TLX worksheet results .................................................................................. 123 Table 7-7: Systems vs. DbD creativity assessment confidence levels........................................ 124 Table 7-8: TRIZ vs. DbD creativity assessment confidence levels ............................................ 124 Table 7-9: Experiment run 1 walkout confidence levels ............................................................ 125 Table 7-10: Experiment run 2 creativity assessment confidence levels ..................................... 125 Table 7-11: Experiment run 2 walkout confidence levels .......................................................... 126 Table 7-12: NASA TLX worksheet confidence levels ............................................................... 126 Table 7-13: 100% temporal influence on creativity assessments ............................................... 129 Table 7-14: 20% temporal influence on creativity assessments ................................................. 130 Table 7-15:12.5% temporal influence on creativity assessments ............................................... 130 Table 7-16: 8.3% temporal influence on creativity assessments ................................................ 130 Table 7-17: 0% temporal influence on creativity assessments (original data) ........................... 131

xii

List of Figures
Figure 1-1: Evolutionary Lifecycle of a Product ............................................................................ 5 Figure 1-2: Bicycle Timeline Excerpt........................................................................................... 17 Figure 3-1: Evolutionary Lifecycle of a Product .......................................................................... 52 Figure 3-2: Artifact vs. Organism Gene Comparison ................................................................... 58 Figure 3-3: Natural DNA Lifecycle .............................................................................................. 58 Figure 3-4: Artificial DNA Lifecycle ........................................................................................... 59 Figure 4-1 (this page and preceding page): Gene Pattern for a Bicycle Brake Control ............... 73 Figure 6-1: A Single Balance Variable Axis ................................................................................ 93 Figure 6-2: Current and Target Intervals for a Single Balance Variable ...................................... 93 Figure 6-3: Example Fit and Unfit Regions for a 5 BV Problem ................................................. 94 Figure 6-4: Fitness Space Representations of the Unfit Regions for 3 Concepts ....................... 101 Figure 6-5: Fitness Space Representation of the Final Concept B ............................................. 102 Figure 6-6: Original Concept Screening Matrix ......................................................................... 106 Figure 6-7: Original Concept Scoring Matrix............................................................................. 106 Figure 6-8: Revised Concept Screening Matrix.......................................................................... 108 Figure 7-1: A Selection of Final Concept Designs ..................................................................... 119

xiii

List of Appendices
Appendix A: Bicycle Timeline 141

Appendix B: Bicycle Genome Appendix B1: Bicycle Genome List Appendix B2: Bicycle Genome Morphological Chart Appendix B3: Bicycle Genome Source List

151 153 157 163

Appendix C: Experimental Package Appendix C1: Requirements Document Appendix C2: Bicycle Genes Appendix C3: Hourly Checklist Appendix C4: Walkout Checklist Appendix C5: NASA TLX Worksheet

165 167 168 171 172 173

Appendix D: Experiment Data Appendix D1: Creativity Scores and Checklist Data Appendix D2: NASA TLX Data Appendix D3: Participant Final Concept Submissions

175 177 178 179

xiv

List of Symbols
The notation presented in this list is drawn from accepted systems of notation in predicate calculus and axiomatic set theory. In addition, a number of symbols used exclusively by the author for the Fitness Space Method (Chapter 6) are also included.

Basic logic and set theoretic symbols are:

=

The identity operator, which is transitive (x)(y)(((x = y)  (y = z))  (x = z)), symmetrical (x)(y)((x = y)  (y = x)) and totally reflexive (x)(x = x). For example, x = y iff every attribute of x is an attribute of y, and conversely.



Inclusive union operator, read as "...or...". The result of this operation is the set union of its antecedent and consequent. For example, x  y is the set containing all the members of both set x and set y.



The empty (or null) set.



Intersection operator, read as "...and...". The result of this operation is the set intersection of its antecedent and consequent. For example, x  y results in the intersection of the set entities x and y.



The universal qualifier, read as "for all...". Statements using  are composed of three parts: the  symbol, the specification of a variable or variables over which the quantification is performed, and a statement which is true for the variable(s). The parts are separated by parentheses. For example, (x)(x  I) is read as "for all x, x is a member of I". Also, if I is the set of all integers, (x  I)(x > 0) defines all positive integers and is read "for all x in I, x is greater than o".



Set membership; for example, x  I is read "x is a member of I". xv



Material implication, read as "...implies...". Classically, this is the only kind of implication used in formal logic. The antecedent of  implies the consequent; that is, if the antecedent is true, then the consequent is also true.

¬

Logical not operator, read as "...not...", and resulting in the logical negation of its immediate consequent. For example, is x is true, then ¬x must be false.



The existential qualifier, read as "there exists...". Statements using  have the same form as statements using the universal qualifier.



The inequality operator; logically, this indicates that the antecedent is not identical to the consequent.

A function is denoted by its name followed by arguments. The arguments are in parentheses. For example, card(UBV) is a function whose name is card, and whose argument (in this case) is UBV. Functions may have no arguments. A function returns some data entity. In general, functions are written (x).

The following symbols are used exclusively in the Fitness Space Method.

A, B, C

Individual concepts.

S

The set of all concepts.

x, y, z

Balance variables

BV

The set of all balance variables for a problem

xvi

Chapter 1
Introduction

Chapter 1 Introduction

1

2

Design problems are becoming more complex as civilization advances. As Norman [1] states in his book: "The world is complex; our tools need to match that complexity." This increased complexity requires designers to consider ever more factors. However, there is a limit to the number of factors the human mind can consider simultaneously [2]. This is to say that there are substantive cognitive limits on the ability to understand a problem in its entirety and this limits the ability to design a proper solution "from scratch".

While science, mathematics, and logic have ways of breaking down problems into more manageable pieces, there are at present very few corresponding ways to simplify complex design problems [1][3]. Considering these two issues together, it becomes clear that designers require tools with which to simplify the complex problems into more manageable tasks that go beyond conventional mathematical/logical analysis.

One might consider that problem complexity arises as a product of two distinct notions: the complexity inherent in the product, and the complexity arising from mental models designers make of the product and the design processes. This research will focus on managing the former and reducing or removing the latter.

Complexity of the product may be classified as resulting from a product having: a large number of internal systems, a high number of parts, a high technology level or including new technologies, interconnectedness of systems, etc. While this form of complexity may not be removed from the problem, the goal is to manage it by way of decomposing the problem into smaller, easier to handle, sub-problems. It is possible to imagine that some complexity of the product may result from the irreducible nature of certain aspects of the problem.

Complexity arising from the mental models of the products and processes occurs since designers work on these mental models, not on the products themselves. Thus, the models can have additional complexities that are not inherent to the product, but rather, are cognitive artifacts of designing. In contrast to the complexity arising from the product itself, complexity arising from the mental models can be reduced and dealt with; it is here that an analogy is useful [4]: it can provide a way to better visualize or understand complex design problems as well as provide a 3

systematic way to find potential solutions. While analogies are often used as a creativity method, the current author has used the notion of reasoning by analogy to create a fairly tight analogy between design, as a process, and nature; as will be shown later, in Chapter 3. However, using only analogies is not sufficient for trying to simplify modern complex problems; there are far too many factors in modern problems [1][3][5][6] for a simple analogy to be solely effective. Thus, other techniques will be needed to further manage complexity.

Along with the usefulness of an analogy-based design process, using pattern languages (described in more detail in Section 1.3) to build the analogy will also reduce complexity. Since patterns have been shown to reduce problem complexity in a variety of differing areas of design, as well as other disciplines (architecture, computer science, etc), [7] then it follows that the combination of using analogies and a pattern language as the basis for a design process framework should be effective at reducing design problem complexity.

Next, we turn to the notion of sustainability, which is at current an "after the fact" addendum to design solutions. For designs to mature in the area of sustainability, something must be done to integrate aspects of sustainability into the design process itself. If the analogy were also to draw on and/or include natural, biomimetic, or sustainable design principles, one can expect a more ubiquitous presence of environmental consciousness in the resulting design process. Also, including measurable sustainability factors directly into the patterns will help to fold it into the concept generation and concept selection phases as well. While fully accounting for sustainability factors may not be entirely possible at these early stages, the analogical framework and design methods should have provisions for including as many sustainability issues as possible.

Also, complex design problems most often manifest emergent properties (described in Section 1.4), only some of which are predictable or desirable. Further, there may be needs that can only be met by emergent properties and not reachable through any single subset of the design's elements. Such properties must be managed nevertheless during design. A pattern language, with its interconnectedness and straightforward structure helps to deal with emergent properties.

4

It occurred to the author, while discussing the role of drawings with colleagues in architecture, that a certain similarity existed between design as an element of technological progress and the global ecosystem, and natural evolutionary processes. As this striking similarity was explored further, it became apparent that one could draw an analogy between these two phenomena. From this the author reasoned that it should be possible to describe a genetic code for engineered artifacts, and to use principles of genetic engineering, drawn through the analogy, to suggest a new design process that could more fully account for the impact of designs on the global environment, not only ecologically, but economically, culturally, and technologically as well.

Thus, this dissertation proposes a design framework which: reduces problem complexity through the use of an analogy and patterns, makes provisions for emergent properties within the patterns and the framework, and makes provisions for sustainable solutions via the patterns and evaluation criteria. Given this, it is important to next describe in more detail these notions of: evolution, analogies, patterns, emergence, and sustainability.

1.1 The Big Loop vs. the Little Loop in Design
In modern practice, there are two distinct loops that occur as a result of design: one occurring during the design process (little loop) and one occurring at a macro scale (big loop) as a result of a product being on the market. Figure 1-1 illustrates this notion.

Figure 1-1: Evolutionary Lifecycle of a Product

It is often the case that design practitioners think only of the smaller of the two loops, since this is the one that occurs during the design process. Thus, they fail to realize the broader notion that the products being designed evolve and have evolved over many generations. While there is little 5

chance that a practicing designer will argue with the elements present in the big loop in Figure 1-1, most might contend that evolution in design does not occur. Since the notion of evolution occurring in design will be discussed in more detail in Section 1.7, the author will focus on the loops themselves here.

As has been said, the particular elements in the big loop are commonly found in design literature; however, the novel idea is that they form a loop, rather than a linear progression from beginning to end. Indeed, one only need look at common design processes [3][6][8][9][10][11] to see that many authors infer the existence of the big loop when stating that new designs reference a previous incarnation of the design. In other words, the ends of a product lifecycle do necessarily connect to form a loop, since a current product will influence the next product to be designed.

To clarify how a current product on the market influences the design of the next product, let us look at a fictional example. A car company wishes to design a new model of their sedan. As a starting point, the designers look at the current sedan that the company has on the market. This is then compared to any new requirements, features, or goals that the company wishes to have in the new sedan. In order to judge which features of the design must be improved in the new version, the design team looks at the performance of the previous sedan, with regard to: ecology, market, economics, social preferences, etc. This serves as a basis for the new design by providing feedback from the contextual environment to the designers. Thus, after the design process is finished, a new sedan emerges and is put on the market. An astute company will continuously gather information as to the performance of the new sedan over the course of its time on market, which will then serve as the input to the design team for the next sedan to be designed. In this way, the ends of the lifecycle connect, creating the big loop.

It is interesting to note that the example for the design of a new sedan not only illustrates the notion of the existence of the big loop, but also that products evolve. In particular, a change in the design of a model line of cars is referred to as the next "generation" of that model; which is the same terminology used in describing the next manifestation of a biological entity. A more indepth look at the notion of evolution in design will be described in Section 1.7. Also, the two

6

loops described in brief here will be covered in more detail in Chapter 3. The author will now introduce the notion of analogies.

1.2 Analogies
Analogies are oft considered a cognitive mapping from one subject domain to another [12] by way of correspondence between two entities which share similarities. Another meaning of analogy arises from its most common usage in design; reasoning by analogy, a creativity method [4]. While the latter is the most widely used in design, the author wishes to expand upon the first notion; that is, the cognitive mapping between subject domains. It is this use of the word analogy that will drive the framework, which will be discussed in this dissertation.

In order to first create an analogy between two seemingly similar domains, a structure must first be laid. Here, logic is used to invent the artificial structures of elements and relations for the analogy. Occasionally, this is quite close to a real situation and is then used to represent that situation. If the logic can be tightly drawn, insight into the reality is gained that was not present prior. In this way, the author provides insight into the domain of design through the analogy to natural systems. It should be noted here that analogies are most often based on partial similarities, not causal relations. Thus, there exists the possibility that a false analogy is created or that incorrect inferences are assumed where none exist. It becomes important here to mitigate the potential for false analogies by carefully examining and testing the analogy; whereby, if the analogy holds, then there are predictions that can be made which can be validated.

Alexander [3] says the following about analogies: "Logical methods (analogies)...rearrange the way in which personal bias is to be introduced into a problem". While introducing any personal bias into the design process is seen as a poor idea, the focus in this quote is on the rearrangement of the bias. It is possible to imagine that an analogy may be able to arrange the bias in such a way that it has little or no negative impact on the outcome of the design process. It is exactly this favourable rearrangement that is aimed for in this dissertation.

7

This notion is reinforced by the following: "Present intuitive methods...introduce personal bias in such a way that it makes problems impossible to solve correctly. Our purpose must be to repattern the bias, so that it no longer interferes in this destructive way with the process of design, and no longer inhibits clarity of form." [3] That is, before the current author's research, biases were so engrained into design and the designers themselves that the perceived complexity of problems was inflated over what was actually present. Further, Alexander's quote highlights the need for bias to be rearranged in a way that reduces complexity instead of adding to it; this is exactly the goal of the analogy in this dissertation, which drives the rest of the research.

Another drawback to analogies is that no one analogy can be a perfect one-to-one mapping between the two domains of knowledge, which can possibly lead to misconceptions about the target domain or false conceptions of the mappings between the target and analog domains. [13][14][15] One way to mitigate this is to ensure that the analogy is critically reviewed as an attempt to remove or lessen potential biases and misconceptions that may be drawn. Also, it should be noted that while the framework for this research is built on the analogy, the actual design methods created from it do not require the practitioner to either use, nor have knowledge of, the analogy that the methods were created from. Thus, it can be said that the potential for misconceptions arising from the designer is minimized or even removed.

It is interesting to note that some early attempts at using analogies between nature and design have been used previously. An example of this is in Alexander's [16] work on creating a pattern language that mimics the complex interactions of natural ecosystems and their inhabitants. Another example would be in the field of industrial ecology; whereby, the flows of materials and energy are studied, as they pertain to industrial systems and manufacturing. Industrial ecology may be defined as a: "systems-based, multidisciplinary discourse that seeks to understand emergent behaviour of complex integrated human/natural systems". [17] Both of these examples are seen as complimentary to the research presented herein since neither addresses the early stages of the design process, nor the methods used by designers during those early stages.

8

1.3 Patterns and Pattern Languages
Patterns, as first described by Alexander et al [7], can be thought of as recipes to create a specific artifact. A pattern describes a process, method, or activity related to creating the artifact that it describes. Patterns are useful in that they seek to describe things in simple, yet generative terms so as to appeal to a broader audience, even those with little to no background in the discipline of the artifact, much like a "recipe" for making an object. In this way, patterns can be extremely useful ways to convey information to more people than would be possible with a focused textbook or refereed paper on the subject. A pattern often pertains to a best practice of sorts [18]. This is because most industries tend to "throw away the book" as it were and use the knowledge and experience of those in positions of seniority when creating products. It is expected that exactly this sort of behaviour can be minimized, in that using more structured approaches to design will enhance the fitness and sustainability of the products produced.

Pattern languages are then the culmination of patterns, inter-connected to provide greater meaning or to create a more complex artifact. Just as single words are connected through grammatical relations to make sentences and further, a communicable language, patterns are linked through certain relations to create a pattern language. Unlike the patterns themselves, there is no particular organizational structure or suggestive means for creating the connections and relationships between patterns when forming the pattern language. Therefore, it is an exercise for the pattern language designer to decide how to best create the language logistics. There are some basic guidelines for organizing a pattern language to maximize informational output and ease of use [7]. Since patterns are easy to use, the pattern language resulting from many patterns should also retain this feature and be highly usable. 1.3.1 Sections of a Pattern There are many different styles of patterns, but they are all generally similar. The pattern structure described herein will discuss the major parts of the patterns with common terminology. While there are different approaches, styles, and terminologies associated with patterns, most pattern templates contain the same or similar areas and end with the same result. For illustration purposes, the author will use one of the patterns from a paper that created a pattern language to describe the quality function deployment (QFD) process [20]. 9

Each pattern starts with a title that describes the artefact that is created when the pattern is applied. As an example, the title might be "Creating Product Requirements".

The first major part to a pattern is the problem that the pattern addresses or solves. Continuing the above example, the problem statement might be: "Engineers and designers do not always speak the same language as each other or the customers and thus, requirements for the final design may not be clear". A problem statement should be a short phrase or sentence describing what the pattern will do, or the artifact that the pattern creates, and is written in terms understandable by the expected user of the pattern. It is acceptable to place some key drivers for the pattern in this section as they indicate more precisely the what, why, and where of the artifact and can help users to decide if this pattern is exactly what they are looking for or if they need to pick a different pattern for their problem. One could also include specifics as to when and where to use the pattern, or even when not to use it. Key drivers for the working example might be: customer satisfaction, product quality, different parties using different language to describe wishes, etc. Some authors may or may not choose to add information such as the context to this section, otherwise the context can be a section either immediately preceding or following the problem.

Next, all patterns contain a solution to the problem defined in the previous section. This is the "meat" of the pattern and captures a well-worked process to create the artifact defined in the problem. This would be analogous to the directions to create the functional requirements and constraints, ensuring that the wording flows with what is expected, creating a specification diagram, etc. for the working example. As with the problem, this section should use `common language' to describe the process in order to appeal to all users of the pattern. This section should be well laid out and describe in detail exactly how to go about creating the artifact described.

Fourthly, a pattern should contain an area to describe the consequences or cautionary areas in the use of the pattern. This can describe common problem areas, consequences of the realization of the artifact, how to analyze results, or new problems that could arise. In the working example, this section might include: "wording becomes critical at this stage as incorrect wording can 10

imply different types of characteristics or different levels of constraints" or "designers should review this stage for consistency since the output here will be used in creating the house of quality (HOQ)", etc.

Lastly, all patterns have a section that indicates similar patterns to the one used, or areas to find more information on the specifics in the body of the pattern. This section is useful when there are many similar artifacts to choose between or in this case, in the creation of a full pattern language as it will provide the links to the relating patterns within the language.

For other templates in creating patterns, the reader is encouraged to see the following: Alexander [7], Salustri [18][19], Rogers & Salustri [20], Beck [21], Erickson [22], and Jessop [23]. The author's own template for the patterns used in this research is presented in Chapter 4.

1.4 Emergence
An interesting phenomenon not only in pattern languages, but also in analogies, nature, and design itself, is emergence. Simply put, emergence is said to occur when the whole is greater than the sum of the parts. In philosophy, systems theory, and science, emergence is how complex systems and patterns arise out of a multiplicity of relatively simple interactions. It can also be thought of as: "the arising of novel and coherent structures, patterns, and properties during the process of self-organization in complex systems." [24]

Taking Goldstein's [24] full definition of emergence and elaborating on the key points to better show the deeper qualities, Corning [25] says the following: "The common characteristics (of emergence) are: (1) radical novelty (features not previously observed in systems); (2) coherence or correlation (meaning integrated wholes that maintain themselves over some period of time); (3) A global or macro `level' (i.e. there is some property of `wholeness'); (4) it is the product of a dynamical process (it evolves); and (5) it is `ostensive' (it can be perceived)." In addition to this, Goldstein's definition includes supervenience -- downward causation. It is Goldstein's definition of emergence that is most widely used in current literature. 11

According to Blitz [26], the original coining of the term "emergent" was by G.H. Lewes: "Every resultant is either a sum or a difference of the co-operant forces; their sum, when their directions are the same -- their difference, when their directions are contrary. Further, every resultant is clearly traceable in its components, because these are homogeneous and commensurable. It is otherwise with emergents, when, instead of adding measurable motion to measurable motion, or things of one kind to other individuals of their kind, there is a co-operation of things of unlike kinds. The emergent is unlike its components insofar as these are incommensurable, and it cannot be reduced to their sum or their difference." [27] From these definitions of emergence, one is able to see that not only is it likely that complex systems will exhibit emergent properties, but also, that the existence of these properties will further add to that complexity. 1.4.1 Weak vs. Strong Emergence The usage of the notion of emergence is often subdivided into two perspectives, those being weak emergence and strong emergence. Weak emergence can be used to describe new properties or behaviours arising in systems as a result of interactions occurring at an elemental level. In this case, emergence can be thought of as part of a language, or model that is needed to describe a system's behaviour when that behaviour cannot be described as a combination of the behaviours of elements within the system.

If, on the other hand, systems can have behaviours or qualities not directly traceable to the system's components, but rather to the interactions of those components, and one is willing to accept the supervenience of a system on its components (i.e., that the properties of the system must necessarily include the properties of its components and that those component properties determine the system properties), then it is difficult to account for the cause of an emergent property's effect. These new behaviours or qualities are irreducible to the system's constituent parts [28]. This is viewed as strong emergence. However, while strong emergence is by definition possible, it runs against conventional scientific principles and is included here for the purposes of completion. Some fields in which strong emergence is more widely used include: etiology, epistemology, and ontology.

12

Given this, the author will assume that strong emergence is not present in current design problems and that only the effects of weak emergence are identifiable and might add to the complexity of those problems.

1.5 Sustainability
Sustainability is a word that has been used rather indiscriminately in recent years. While different definitions exist in the literature, the most widely accepted and quoted definition is: "development that meets the needs of the present without compromising the ability of future generations to meet their own needs." [29] In simple terms, this means development in a way that does not hinder our own civilization, but allows future civilization to thrive without having to forego certain pleasures/privileges in life. While this may seem more in-line with the concept of sustainable development, many use the two notions interchangeably. Another view, which is more directed specifically at the notion of sustainability is: "improving the quality of human life while living within the carrying capacity of supporting eco-systems." [30] Other, notable views/definitions include: "It's wrong to exploit global resources in a way that imposes significant costs on future generations." [31] "Sustainability is seen as a matter of distributional equity, about sharing the capacity for well-being between current and future generations of people." [32] "With respect to the environment, this usually means achieving some kind of steady-state between humanity and the Earth, with respect to what we use versus how fast those resources can be replenished. It essentially means finding and maintaining a balanced system including both humans and nature." [33] A sustainable society is one which is: "an ecologically restorative, socially just, and reliably prosperous society" [34] While a large proportion of the population thinks of sustainability as applying only to environmental concerns, the definitions and concepts of sustainability most often refer to all of the social, economic, and environmental components. In this way, sustainable design may be thought of as socially just, economically feasible, and environmentally conscious design.

13

However, in the field of design, sustainability is most often focused at addressing the environmental impact of products throughout their lifecycle. This is due to the fact that the world's increasing population and dwindling resources make the environmental impact of products an order winner over the social and economic impacts, as far as design is concerned. As such, when the author speaks of sustainability in design, he will take that to mean the environmental sustainability of the product being designed.

With respect to this focus on environmental impact, there are currently several methods that are used to measure the impact of products, the most common of which are: carbon footprint (an estimate of the total equivalent carbon dioxide emissions from a person, product, event, or organization), net energy usage (an estimate of the load on the electrical grid, being the difference in the total energy used and generated), and product lifecycle assessments (LCAs). Thus, an analogical framework looking to address sustainability issues should make provisions to allow impact factors to be imbedded into the methods that designers will use in practice.

1.6 Evolution of Nature
The wide diversity of living organisms that can be seen in nature is a direct result of evolutionary processes; whereby, successive generations inherit traits that are better suited for and seemingly fitted to their environments. That is, they are better adapted to survive within their native environment. It is this environment which is an important aspect for evolution, since an organism placed in a foreign environment must either adapt or perish. If the organism does adapt, the new traits are then passed through heredity to future generations, such that those generations may survive.

Evolution, as it is a characteristic of nature, does not strive toward perfection, is neither predictive nor conscious, but reactive. A change in an organism's environment requires reaction with regard to its own component structure if it is to continue to flourish and as such, organisms have adapted over many generations to thrive within their contextual environments, or niches. "Over the course of millions of years, different lineages of organisms have, in effect, experimented with various combinations of morphologies, physiologies, and behaviours to 14

enhance performance." [35] This quote highlights the similarity between organisms and how designers might conduct the concept generation phase of the design process.

In design, solutions are often found from nature. Designers might agree that given the evolution of organisms over millions of years, it is the ideal place to search for solutions, as is reinforced by the following: "The spectacular diversity of life-forms has produced a variety of mechanical and physiological solutions for interacting with both the biotic and abiotic environment." [35] Indeed, one may even think of organisms as being machines; they require energy input, can produce useful work, can execute particular functions, and are suited for their contextual environment. However, organisms are generally not optimal in any one function of their being.

It is interesting to note here that it is possible to model the complex interactions of natural ecosystems and their inhabitants with an extremely complex and interconnected pattern language of living organisms. In his work, Alexander [16] has done just that.

1.7 Evolution of Designs
Currently, there are many different processes for designing products. All of these processes include very similar high-level tasks that are executed throughout the design process. These high level tasks include: understanding the design problem; conceptualizing possible solutions; generating many alternative solutions; selecting a best solution of greatest "fitness"; and detailing and optimizing that solution as required. In the literature, different authors have differing naming conventions, but the foundations of each step remain the same.

Let us focus for a moment on the concept selection task, of which two key aspects are (a) the method used to compare concepts and (b) the reference against which those comparisons are made.

Many researchers ([8][9][10][11][36] and others) have noted that design concepts must be compared to some similar or related product that already exists. This essentially ensures a fixed "origin" for the scale used to measure design concept fitness. Selection of such a product would 15

be based in part on the "success" of particular products on the market. This suggests, and the author assumes it in this dissertation, that new designs are thereby partly reflective of previous designs. Furthermore, we suggest that a population of products undergoing such generational change over time undergoes a sort of evolution.

It is not surprising that nature does something similar when it creates new kinds of organisms; it references an environment in which the organism is to be placed (understanding the problem), has many variations of genetic options available (different conceptual solutions) from which to choose an appropriate combination of genetic material (selecting a best solution), that will fit well within the environment and evolve continuously to increase its fitness with that environment (detailing and optimization).

Furthermore, the way that "successful" design solutions are identified (by users, the market, and society) is similar to natural selection (i.e. designers choose concepts that will ideally be superior to extant products on the market, much like in nature where successive generations are better suited to their natural environment). Indeed, once the product is in the market, its success or failure depends on its fitness with that ever-changing environment (ecology, market, economics, social preferences, etc). Products that fail are not necessarily bad products; they are just bad products for that environment. Because of these similarities, the author proposes that, like natural organisms, designs also evolve over time and as new products are created.

According to Kay [37], "We can no longer treat our designs as mechanical clockwork edifices designed to withstand the test of time. Design is no longer seen as finding a `right' solution to a problem, but rather a process for evolving the built environment to meeting changing needs and conditions. Instead of static structures, we need to develop dynamic processes." As can be seen, this quote emphasizes the concept of evolving products and processes, which is in-line with the biologically inspired, analogical, and dynamic design process presented in this dissertation.

To illustrate the concept of the evolution of designs, refer to Figure 1-2 on the following page depicting a selection from the evolution of the bicycle, from inception to near-present times. The full timeline can be seen in Appendix A. 16

17
Figure 1-2: Bicycle Timeline Excerpt

As can be seen in Figure 1-2, the bicycle, at different times along the timeline, had little in common with the bicycles that are seen today. Throughout the timeline, generational changes can be seen; most arising from the changing environment (i.e.: new views from the public, changing politics, or even the invention or application of a new technology). In fact, nearly every change to the bicycle along the timeline occurred due to a change in the contextual environment. This is also what we see in nature: a change in the environment occurs, species living in that environment try to adapt to that change, and either evolve or fail to adapt and eventually die out.

There are several points of interest to note from the timeline excerpt in the figure above. Firstly, the application of the chain drive to the bicycle by Thomas Humber in 1880, which led to a large change in the way bicycles were made and started the revolution of the "safety bicycle" in 1885 (which is the first generation of bicycle that most closely resembles modern-day bicycles). While the first recorded application of a chain drive dates back to the "Polybolos", a repeating crossbow from the 3rd c BC, it did not see common usage until Leonardo Da Vinci's flat-link chain started to be used in the 16th c [38]. As can be seen, this particular technology, adapted to the bicycle, led to a revolutionary change in bicycles and still holds today; however, the lag time between the invention of the chain drive mechanism and the application was extremely long. Similarly, a lag time for application of the pneumatic tire to the bicycle can be seen, but in a much shorter time of only 43 years from its invention. Another interesting point from this excerpt is the beginning of the "Bicycle Playing Card" line in 1885 which was spurred by the popularity of bicycles in the US. While playing cards are obviously not a direct part of the bicycle timeline, it is an interesting marketing crossover from the bicycle to playing cards and illustrates how certain product lines can affect other, seemingly disconnected, products (or, how one species may influence the evolution of another). Lastly, the timeline shows that some changes even occurred due to political reasons alone, such as the oil embargo seen in the 1973 entry, from the full timeline (Appendix A), which led to a massive uptake in the number of people that used bicycles. While this example shows the evolutionary timeline of the bicycle alone, it is possible to make the same figure for an endless set of products; thus illustrating that designs evolve in a similar manner to natural evolution seen in nature. This notion will be used to further build the analogy-based design process in the upcoming chapters.

18

1.8 The Form-Context Ensemble
Throughout this dissertation, the author will refer to three key terms when referring to a design; namely the: form, context, and ensemble. These three terms are rooted in Alexander's work, in his prelude to pattern languages. [3]

The form is the representation of the design that is directly solving the design problem. One can refer to two different aspects of the form separately; the artistic form or the functional form. This segregation can be likened to the differences in the design field, between art design and engineering design. For the purposes of this dissertation, the author focuses on the functional form of the design, since engineering design is concerned primarily on the functional form. Therefore, the functional form encompasses all of the aspects of a design that contribute to its functionality or usefulness, disregarding those aspects which lend themselves solely to the arbitrary artistic expression (the artistic form). It is nearly always the case that aspects of the functional form are directly measurable or are directly linked with the requirements set out by the customer, either on their own or in combination with some other aspect(s).

Context then refers to everything that is not the form. One can envision the context as being the outside environment that the form is placed in and can also be referred to as the contextual environment. This is consistent with current systems design thinking as well; whereby, the system is the form and the environment is the context.

Finally, an ensemble refers to the combination of a form in a context.

1.9 Premises
The research question for this work depends on the acceptance of certain premises. These premises are extralogical in nature; that is, they are empirical, derived directly from observations of the state of design and cannot be proved mathematically.

19

Design is not well understood. At present, there is no clear definition of what design is, nor is there even agreement on what design might be across different disciplines. One need only to look in a design journal to see the widely differing opinions on what design is. It is, as one author puts it: "an ill-defined art...which lacks formal definition"[39]. Some illustrative examples of the widely differing opinions on what design is can be seen in the following: a largely intellectual, cognitive process [40]; a somewhat "mystical" process [41]; a "socially mediated process" [42]; "planning for manufacture" [43]; and perhaps the most accurate depiction of engineering design, "the evaluation and satisfaction of many constraints" [44]. While all of these may be considered as partly right, in any case, they have not been able to express the totality of what design is.

Design is not currently efficiently performed. As many authors might point out, successfully designing a "great" product is a rather rare occurrence and further, even the design of "good" products does not happen as often as it should. As one author states: "few companies are highly successful more than half the time" [6]. Yet, many might agree that: "designers go through similar thought processes regardless of the specific goal of their effort" [10]. It must hold then, that if all designers use a similar process and yet, still cannot be highly successful, then it stands to reason there is something wrong in the design process itself (i.e. something needs to change).

An analogical approach is easier to teach to students. While one might think of all design as happening in industry, it is the way in which students are taught the discipline of design in postsecondary institutions that shapes how design will be carried out in industry, as those students enter the workforce. Thus, improvements in how design happens must start in the classroom, with what is taught. As any current, full-time, undergraduate student will not hesitate to point out: they are heavily burdened with course load. If we ourselves, as educators and practitioners of design, cannot crisply and distinctly define design, then it is surely not possible for these burdened students to fully grasp the concept of design either. However, all is not lost. Teaching an analogical approach to design helps students to learn the subject matter, since it places notions within realms that they have prior knowledge and eases the burden of learning. [15][45][46][47] It is Ausubel's [45] theory of "Meaningful Learning" that highlighted the effective use of analogies as teaching tools, which was then used as a basis for Novak's [47] work on concept

20

mapping. Learned design practices, processes, and methods are then propagated into industry, as the students graduate and become design practitioners themselves.

1.10 Research Question
The research question(s) that this dissertation will answer are: 1. Is an analogy between designing and evolution a robust, systematic, and rational basis that can be used to build a framework for design? 2. Can a DNA-based analogical design process give rise to designs that are at least as creative as other concept generation methods, especially those that are noted to generate creative designs? 3. Can a DNA-based analogical design process provide a means for faster concept generation for routine design problems?

To answer these questions, this dissertation will first include a literature review of commonly used design processes, in order to elucidate the strengths and weaknesses inherent in current design regimes, which is presented in Chapter 2. Chapter 3 will outline the analogy between nature and design, with direct comparisons of processes and phenomena found in both. The analogy will then be used as the basis for the design genome found in Chapter 4, which shows the structure and detail of the proposed genome for a single product, including examples of individual genes. In Chapter 5, the author illustrates how the design genome from Chapter 4 can be used to create a new concept generation method. Chapter 6 presents the author's proposed solution to problems found in the concept selection phase of cited literature, termed the "Fitness Space". An experimental procedure and example of how one might execute an experiment to test the author's concept generation method from Chapter 5 is given in Chapter 7, along with empirical analyses of the results and statistical analyses of the data sets from a small pilot experiment. Finally, Chapter 8 concludes the dissertation with a discussion of the results, outlined areas of future work, and closing remarks.

21

Chapter 2
Literature Review

Chapter 2 Literature Review

23

24

We see that current design problems are so complex that designers require ways to simplify the problems in order to successfully carry out any type of design process. Many, widely used design processes do not directly deal with the increased complexity of today's issues, neither in the total process itself, nor in the individual steps. This is a problem. As civilization advances, design problems are going to keep increasing in complexity and as a society we must be able to respond by way of changing how products are designed. It is here that the author's research sits: the proposed new design framework encompasses methods that help reduce problem complexity. The goal of this literature review will be to examine the early phases of design processes from other authors in order to elucidate areas where improvements can be made that will help designers deal with problem complexity. Therefore, it will be important to not only look at other design processes as a whole, but also the individual steps within those. The structure of this literature review will therefore reflect the common structure of design processes by first comparing the processes themselves and then examining each individual step. This will help give insight into where improvements can be made.

First, the issue of complexity in design will be examined.

2.1 Complexity in Design
Many authors agree that problems are becoming too complex [1][3][6][9] and perhaps even reaching insolvable levels [3]. This is partly because current design problems include a great number of different factors that the designer must consider and that there is a limit to the number of factors any one person can consider simultaneously [2][3]. Design researchers must therefore seek ways to bridge the divide between a person's limited cognitive capacity and the great size of the design task.

High levels of complexity and rather limited ways to deal with that complexity have led to many failed products on the market [3][5][48]. This shows either that problems have become far too complex for a single person or small group to handle, or that designers desperately need ways to simplify complex problems. Alexander [3] goes on to say that: "good design is losing out to artistic design because it lessens the burden of making a "good" decision to making an "artistic" 25

one." Norman [48] also implies this in his book. This is an alarming statement since it suggests that designers are overburdened with the complex issues of today and are sidestepping the important decisions that make good designs by making artistic choices as an excuse to not deal with the important issues. In Suh's book [10], he states that: "all bad designs or products ­ large or small ­ can be dangerous, cost money, limit the usefulness of products, or delay the introduction of new products." This shows just how important good design decision-making is for the success of a company and also for the safety and satisfaction of the users.

Therefore, it becomes an important task to give designers ways to simplify complex design problems. Some authors have tried to address this in their work. Alexander [3] presents a way to simplify problems by breaking down the requirements into small sub-sets that are dealt with more easily. This is in prelude to his more widely known work on pattern languages [7], as was covered in the Introduction. Patterns were his way of relieving the burden of decision-making by using rules or generally accepted principles and practices. Pahl & Beitz [9] address complexity by solving problems in fixed steps, each involving analysis and synthesis. Ulrich & Eppinger [6] state that problems are too complex to solve as a single problem and must be divided into subproblems via their method of functional decomposition. This last statement supports the current author's work, since the proposed method breaks the main problem down into small, manageable pieces. However, while breaking the main problem up is a good way to simplify it, one can imagine that some problems are so large that even breaking them into smaller pieces still leaves the designers with insurmountable tasks. Further, the additional task of stitching the solutions to the sub-problems together again might add another source of complexity to the problem. Thus, a better approach to simplify design problems would be within the design processes themselves; which then would apply to any problem, large or small. This is the underlying reasoning behind the author's choice to create a new process framework for design.

2.2 Design Processes
The final objective of any design process is to create a form in response to function [3], or in other words, it is a mapping between what we want to achieve (problem) and how we want to achieve it (solution) [10]. Also, a "good" design process can be used to design anything, for any 26

problem, since it allows the designer to use similar thought processes regardless of the final goal [9][10]. Thus, a way of determining if a design process is good, or useful, is by successfully using it for a multitude of different design problems. The current author believes that the methods presented in this dissertation are able to do so. In his book, Federn [49] says that designing must become more logical, sequential, transparent, and open to correction if we are to remain being successful in design. The framework and methods presented in this dissertation address these four points, especially the latter.

Ulrich & Eppinger [6] state that: "Few companies are highly successful (at creating great products) more than half the time". This statement highlights the need for change, with regards to current design practices, in order to increase the likelihood of designing great products, especially when considering the ever-increasing complexity of modern design issues.

In their book, Pahl & Beitz [9] state that a design methodology must: encourage a problemdirected approach (i.e.: be applicable to every design activity, in any field); foster inventiveness and understanding (facilitate finding good solutions); be compatible with the concepts, methods, and findings of other disciplines; not rely on finding solutions by chance; facilitate the application of known solutions to related tasks; be compatible with electronic data processing; be easily taught and learned; and reflect the findings of cognitive psychology and ergonomics (reduce workload, save time, prevent human error, etc). It is the current author's belief that the work presented in this dissertation adheres to all of these points.

Many authors agree that successful design requires a systematic approach [3][9][10][36] and that using a systematic approach can lead to: shorter development times, an increase in patents, an increase in the probability of arriving at a good solution, easier management of complexity, and an increase in creativity [9]. This is exactly what one would wish for in a design process.

Suh [10] contends that there are only two classifications of design process: axiomatic and algorithmic. He goes on to list the algorithmic design categories as: pattern recognition, associative memory, analogy, experientially based prescription, extrapolation/interpolation, and selection based probability. The method presented in this dissertation includes facets of most of 27

these listed categories and thus, may be considered as algorithmic design. Further, Suh says that axiomatic design stipulates that one can accomplish design by upholding two base axioms throughout the process. However, the current author contends that this is not truly possible in a field such as engineering design. There are no equivalents in design to the fundamental truths, such as F=ma, that one might find in physics and implying that any design problem can be solved by upholding two axioms is rather unjustified given the immense diversity that can be found in design problems.

At this point, it should be noted that the findings of the literature survey will have a distinct focus on the front end of the design process, up to and including concept design. While some authors include other steps in their design processes (such as: detail design, manufacturing, sales, etc.), the current author draws the reader's attention to the fact that those topics are well covered in other areas (design for manufacturing for example) and include very different guiding principles, which are beyond the scope of this dissertation. For completion, the reader is encouraged to at the reviewed authors' steps occurring after concept design as reference material, but only the problem analysis and concept design phases will be examined in detail. 2.2.1 An Overview of the Design Processes that will be Discussed

Alexander Alexander's method for design [3][7] is somewhat similar in approach to systems design at the outset: he breaks the problem (system) into subsets (subsystems) to deal with complexity and allow for the search of solutions to the smaller pieces. However, there is not a discreet way he makes the cuts; whereas, systems design cuts the problem into discreet subsystems that are more well-defined.

The process Alexander describes is broken into two main phases: analysis and synthesis, each with their own set of steps. Analysis starts with the identification of misfits, leading to formulating requirements via the use of "misfit variables", and ending with selecting the correct "program" for the problem. This phase is likened to what others may consider as problem analysis. Once the program is found, the second phase starts (the "realization of the program"); whereby, a top-down approach is first used to break the problem into smaller, more manageable 28

pieces and then a bottom-up approach is used to create a concept through the assembly of solutions to the individual pieces. Alexander does not include detail design or manufacturing in his process.

Pahl & Beitz In their book [9], Pahl & Beitz critically review a number of other design processes and present their own process as a culmination of the more desirable parts of the reviewed works. Due to this fact, their work can be considered as a forerunner in the field of design.

They consider a problem as being characterized by three components: an undesirable initial state, a desirable goal state, and obstacles preventing transformation from one to the other at a point in time. They later go on to include complexity and uncertainty. The notions of having specific states that may change over time is interesting since it highlights the idea that design problems are quite dynamic and that considering design problems to be static is a shortcoming in other methods. It is similar notions to these dynamic states that the current author uses in defining his own Fitness Space method for concept evaluation in Chapter 6.

Furthermore, Pahl & Beitz highlight that a systematic approach leads to: "shorter development times, an increase in patents, an increase in the probability of arriving at a good solution, easier management of complexity, and an increase in creativity". These are seen as favourable attributes since they are exactly what designers aim to do in design.

Finally, the design process that Pahl & Beitz present includes the following steps: product planning and clarifying the task, conceptual design, embodiment design (including layout, scheme, and draft design), and detail design. It should be noted here that according to Pahl & Beitz, their embodiment design is akin to what others call detail design and that their detail design is more in-line with what others may consider manufacturing details. By their definitions, embodiment design includes determining the arrangement and shapes and materials of components; whilst detail design is the finalisation of production and operating details.

29

Pugh Pugh [5] refers to his "Total Design" process as a design flow. He states that the flow may look sequential/linear, but that it can "reverse" at any point in the process. The notion of the design process reversing is atypical amongst authors; most tend to view design as being more of a set of iterative loops, rather than direct reversal; do the steps in order and then repeat the order to get a product. The current author agrees with the majority of the literature on seeing the process as a set of loops. It is interesting to note that while Pugh's process is quite linear, he states that at the end of the design flow (the "sell" step) it technically loops back to the start (the "market" step). This is in-line with the current author's own notion of the "big-loop of design", as was introduced in Chapter 1 and discussed in more detail in Chapter 3.

Pugh's Total Design process includes the following steps: market, specifications, concept design, detail design, manufacturing, and sell.

Suh Suh's Axiomatic Design [10] process rests on two axioms, eight corollaries, and sixteen theorems. However, since the corollaries and theorems are derived from the axioms, only the axioms will be discussed. The first axiom (independence axiom) states that all functional requirements (FRs) in the design problem must remain independent of each other (i.e. uncoupled). The second axiom (information axiom) states that the information content of a design should be minimized. However, the current author believes that current complex problems are unlikely to be reduced to a set of requirements that are uncoupled, thus making the satisfaction of the first axiom improbable. Other authors seem to agree with this notion as it is mentioned in other literature that requirements are inevitably coupled [1][3][50][51]. The notion of coupled requirements in design is further illustrated in Suh's own examples; whereby, the requirements are never able to be fully decoupled, but rather, that the design principles (DPs) used in solving the requirements can be made such that they are independent.

Suh states that what is common between fields of design is that designers do the following: know or understand customer needs, define the problem that must be solved to satisfy the needs, conceptualize a solution through synthesis, perform analysis to optimize the proposed solution, 30

check the resulting design solution against the original customer needs. What is odd here is that he places optimization ahead of checking the solution against the requirements, which runs contrary to the commonly accepted practice of checking a concept against the requirements to ensure it is an acceptable solution before optimizing the design. Suh offers no justification in this regard. The current author agrees with the accepted norm of optimization occurring after checking the concept against requirements.

Rather than a strict set of steps to follow, Suh's method is more abstract. He uses the notion of four domains (customer, functional, physical, and process); whereby, design is seen as the activity of mapping from one domain to the next, starting with the customer domain. In this way, it is similar to a conventional view of discreet steps, where the mappings between the domains closely resemble the common phases of other design processes. Here, the three mappings between the four domains are akin to the problem analysis, concept design, and manufacturing phases, respectively.

Terninko Terninko's [36] work rests in the branch of design known as quality function deployment (QFD). He defines QFD as: "a detailed system for translating the needs and wishes of the consumer into design requirements" and "design analysis can be extended to the design of systems, parts, processes, and control mechanisms." A majority of the QFD process is aimed at the problem analysis phase of design; whereby, three of the five steps to QFD are concerned with the problem analysis. While Terninko does not specifically name the five steps, Rogers & Salustri [20] identify the steps as follows: identify customers, determine customer needs/requirements, derive product requirements and performance metrics, concept generation and selection, and determine manufacturing process steps and deployment.

Ulrich & Eppinger In their work, Ulrich & Eppinger [6] present a design process in five stages: concept development, system-level design, detail design, testing and refinement, and production rampup. It should be noted that while the problem analysis phase is not explicitly present here, it is included in their concept development stage; this is generally seen as poor practice, since all 31

others make a discreet separation between the two. The reasoning behind the discretization of the two phases in other methods is due to the fact that the tasks involved and methods used for both of these phases are very different to one another and should not be lumped together.

While system-level design comes after concept development, closer inspection of the details of those steps reveals some inconsistencies with other methods. First, the authors define subsystems and interfaces in the system-level step, but all other literature defines these before the generation of concepts, not after. The reasoning behind other literature establishing the systems work first is because the designers generally need to know the system architecture before devising concepts. System-level design also includes some items (like define final assembly) which cannot be done at this stage considering that the detailed design of individual components (define part geometry) is not done until the next step.

2.2.2 Other Notable Contributions Erkens [52] offers a step-by-step approach to design, based on the balancing of conflicting demands. An approach cut into discreet steps is noted by other authors to help reduce problem complexity. Also, the balancing of conflicting needs appears to be in-line with Alexander's notion of misfits.

Franke [53] emphasizes the iterative nature of design and the importance of individual creativity of designers. Iteration in design is a common point in many authors' work and the importance of creativity outlined here highlights the need for designers to have tools that can help them be creative. A creativity tool for designers is offered in this dissertation.

French [54] highlights fundamental solution strategies for conceptual design, using ideas and analogies from nature. This is an interesting look at analogies in nature and somewhat of a prelude into the current author's own work on his framework built on an analogy to nature.

Gierse [55] outlines the importance of identifying functions and function structures. This is useful since it makes user needs a matter of function, which is more practical and is favoured by most design methods, including the one presented in this dissertation. 32

Jakobsen [56] focuses on the importance of functional requirements. Ensuring that the requirements are formulated in the most precise way possible is a common theme amongst many authors and is also a point of agreement in the current author's work.

Laudien [57] suggests the following guidelines on design: do not make unnecessary provisions, do not over-specify, do not fulfill more demands than are required, and save by simplification and economical construction.

Niemann [58] offers a design process, starting from the problem analysis stage and ending with concept design. The process includes: definition of the task, variation of possible solutions, and formal selection of the optimum solution.

Salustri et al [59] suggest that there are no cut and dry design "problems", but rather, that there are perceived "imbalances" that should be corrected in order to try and maintain equilibrium in the world, between humans, the products we create, and Nature. The notions identified in this work offer insight into the current author's own notion of "balance variables" as will be covered in Chapter 6.

Ullman [11] evaluates other methods in his "A taxonomy for mechanical design". He offers the taxonomy as a way of classifying different design processes and to compare commonly used design terms.

Wögerbauer [60] divides the "overall (design) task" into "subsidiary tasks" and those into "operational & implementational tasks". This appears to be aimed at reducing complexity by breaking apart the main task into smaller, more manageable pieces.

Tomiyama & Yoshikawa [61] advocate for design to be placed in a more global framework and discusses the relationship between design and different fields. Also, Yoshikawa [61] was one of the first to realise that there was a distinction between what design is and how design is performed. 33

2.3 Phases of the Design Process
In this section, the individual steps that make up each phase of the design processes in the literature will be looked at. Since authors generally tackle similar steps in different ways, this section will be structured to directly compare each phase between authors, including individual steps within those phases. Also, different authors name the phases and steps by different conventions; therefore, the name they use will be placed beside the author's name when starting each subsection. Each phase heading will be named after the current author's own naming convention.

The current author sees design as including four major phases: problem analysis, concept design (including concept generation and evaluation), detail design (including optimization), and manufacturing. However, detail design and manufacturing are beyond the scope of this research and will not be included in this literature review. Since the concept design phase is quite large and includes both concept generation and concept evaluation, they will be discussed in separate sections, for clarity. 2.3.1 Problem Analysis The first step of the design process is to determine what the problem is and the implications the problem has for the designing of a solution. Typical deliverables for the end of this phase include a set of requirements that frame the exact nature of the problem and some indication of the importance of each to the customer. While it has been mentioned that different authors call this phase different things, all agree that design starts here. With that in mind, it should be said that some authors have done one of two things out of the norm for this phase: 1) indicate more than one of their own phases for what is considered problem analysis (such as the QFD process, which has three phases to cover this [36]) or 2) include this phase as part of the next one (such as Ulrich & Eppinger, [6] who include problem analysis in the concept design phase).

Alexander ­ Analytical Phase Alexander [3] starts by noting that problems arise from observing the misfits between a form and its context. This is because, as he notes in his book, not many people can invent new forms, but nearly everyone can criticize on an existing one, since it does not take any creativity to do so. As 34

an example, perhaps someone is remarking about their car and notes that it does not have enough trunk space or that the fuel mileage is too low. These are their perceived misfits; attributes of the current form that do not fit the context that the user has set. This is where the problem originates for Alexander, in the forming of the problem statement based off a product that has these misfits. He notes here that as a first step, the designer must strip out any preconceptions from the problem by removing common names (i.e.; the task is not to design a "kettle", but rather, to design a kitchen appliance that heats water to boiling).

Formulating the requirements in Alexander's method is directly related to the misfits that were originally stated. They are formulated as a way to fix the problem identified in the misfit, or in Alexander's words: "These requirements (on the form) are the individual conditions which must be met at the form-context boundary, in order to prevent misfit." Thus, if the misfit was that the car's trunk is not large enough, the corresponding requirement would be that the new car must have a larger trunk than the old and that the desired size would be set by the user. This is then done for all misfits. Alexander also interchangeably refers to these requirements as "misfit variables"; most notably due to the fact that they are indeed dynamic variables arising from the original misfits. However, Alexander notes that not all misfits are used in the process and that the designer takes only those that obtrude most strongly. It is the current author's view that only taking the worst offenders, as it were, leads to a rather incomplete picture of the problem and that the problem is therefore never solved in its entirety.

Pahl & Beitz ­ Product Planning and Clarifying the Task For Pahl & Beitz [9] the phase starts off with a market analysis and clarifying the task, and ends with creating a requirements list. Others may argue, the current author included, that a market analysis is not part of the design process, but a task firmly residing within the domain of the marketing department. As such, the steps of market analysis will not be included here.

Therefore, the first step is then clarifying the task by formulating the problem in terms of function; that is, what the product must do. With the primary function established, they generate a requirements list and indicate whether each requirement is a "demand" or a "wish"; the difference being that a demand must be met, whereas wishes should be considered, but are not 35

necessary. The minimum demands on each requirement are stated in the form of constraints. They add that requirements must be listed in a solution-neutral way so as to remove any biases that are present in certain words or phrases.

Pugh ­ Market (user needs) Starting with a market analysis and specifications of the problem from user needs, leading to the creation of a product design specification (PDS) are what Pugh [5] terms the "front end" of design. In his book, he states that it is quite reasonable for the designer to expect the front end to be done by another group, such as the marketing department. However, he does indicate that it is his belief that the front end of design is currently not handled very well; though not giving an indication as to why or any solution to the problem.

The first step in this phase is to start with a statement of need and to conduct a market analysis based on that need. Pugh holds that a product must be marketable for it to succeed, regardless of how good the product itself is; quoting another author in his book: "Technical excellence is not enough without commercial competitiveness." [62]

Once the market analysis has been completed, it is then the designer's job to create a PDS, which: "acts as a control for the total design activity, because it places the boundaries on the subsequent stages" [5]. The PDS primarily includes defining the performance that is demanded or likely to be demanded from the design, including a performance figure (commonly referred to as a constraint). Aspects of the product's environment are also included in the PDS, where all environments encountered during the lifecycle are considered. The PDS also includes many other aspects (such as processes, legal considerations, social and political implications, etc), as listed in Pugh's book, but these are beyond the scope of this research. Pugh adds that the PDS is expected to evolve throughout the entire design process and as such, is involved in every subsequent phase of design.

Suh ­ Problem Definition This step for Suh [10] includes very few steps and is on the surface quite simple. It starts with finding the customer needs or attributes (CAs); Suh says that this can be done using "popular 36

methods". From the CAs, the goal of the designer is then to translate these into usable functional requirements (FRs), which will be used by the designer in subsequent steps. Thus, it is important to ensure that the FRs are worded in such a way as to outline functions of the design. It is here that Suh's first axiom is introduced; the Independence Axiom. This axiom states that independence of the FRs must be maintained throughout the process to ensure a "good" design emerges at the end. In practice however, this is generally not often possible as functional requirements are inherently coupled in complex designs. Examples Suh gives in his book even show that a simple problem with only two FRs is still coupled, even though the solution of it may involve decoupled components. It is probable that in common design problems the Independence Axiom might never be met. This phase is completed once all FRs for a problem have been identified.

Terninko Given that the QFD process is focused almost solely on customer satisfaction, the problem analysis phase of design is quite extensive, occupying 3 of the 5 steps outlined in Terninko's [36] work. Further, since the concept design phase (step 4) is modeled after Pugh's [5] method, it will not be covered again under Sections 2.3.2 and 2.3.3. The fifth step of the QFD process involves the manufacturing process, which falls outside the scope of this literature survey.

The first step to QFD is focused on understanding the customer. Here, different customer segments (or user groups) are identified and their defining characteristics detailed. This establishes criteria used to prioritize the user groups. A lengthy process is described, detailing how to identify and characterize the customer segments, as well as how to decide which are most important to the design problem. Interactions between the product to be designed and the different segments is also detailed.

Step two involves what is known in QFD as "gathering the voice of the customer" and understanding the context in which the customer expresses needs or desires for the product. The purpose of this step is to establish clear understanding between the customer and the designer as to what the customer means when they make statements about the product. This specifically includes any information pertaining to the subjective performance requirements, which are 37

referred to as the "demanded qualities". Formalizing these demanded qualities helps to ensure that the designed product meets or exceeds the customer's expectations. Further information about the relative importance of these demanded qualities, along with the current level of customer satisfaction with a current product on the market is also gathered.

Step three translates the information gathered from the first two steps into a language that is more common and useful for the designer. Here, specifics about what the customer wants from the final product are turned into more concrete engineering requirements that the designer can work with. Also, the expected performance targets and requirements are mapped to the performance metrics and constraints that the designer will use as guides when evaluating concepts. The information from this step is then used by the designer in the next phase of the design process, when generating concepts.

Ulrich & Eppinger Ulrich & Eppinger [6] do not make a distinction between this phase and the concept design phase, which goes against all other reviewed literature; however, they do discuss three steps which would otherwise be covered in this phase. These three steps might fall under the clarification of the problem and include: identify customer needs, establish target specifications, and analysis of competitive products. Since they include these steps in the concept design phase, the individual details of each step is rather limited; however, the notions they convey are quite similar to other methods reviewed for accomplishing the same tasks. Establishing target specifications early on in the design process is valuable since any concepts generated in the proceeding phases will need to be evaluated and having specified the parameters early on will streamline the evaluation process.

After the clarification of the problem, the authors outline a process of functional decomposition for breaking the problem down into simpler sub-problems, using a function diagram. This diagram serves as a mapping of the functions and how they interact with each other within the system. The diagram includes flows of mass, energy, and information in order to track how inputs are changed by the functions and then emerge as outputs. The complete diagram is then checked against the requirements. 38

2.3.2 Concept Generation Since concept generation and concept evaluation both consume a substantial amount of the early design process, it is valuable to look at both of these stages in more detail than by looking only at say the concept design phase in totality. Therefore, concept generation will be discussed first. A common view amongst authors is that iteration is needed throughout the concept design process, in any or all of the steps, in order to find the best design.

Alexander ­ Synthesis The next task for Alexander [3] is the "realization of the program"; the first step of which is to break all of the misfit variables down into functionally independent subsets by way of functional decomposition. This is similar to the way systems theory breaks a system into functionally independent sub-systems; however, for Alexander there is no discreet way to do this as in systems theory. This decomposition is done as a top-down process; whereby, the end result is a hierarchical tree of sets of requirements, which are as functionally independent as possible. These final sets should all be as specific and detailed as possible and be at the same level of abstraction.

Generation of concepts is then accomplished by turning the tree of requirements into a tree of diagrams, using a bottom-up approach; whereby, a diagram is created for each node on the requirements tree. A diagram on the tree represents a solution for the requirements of that node and expresses both what it is (form) and what it does (function). When all diagrams have been created, a whole concept is made by assembling the aspects of the form represented by the diagrams. Since the nodes of the requirements tree are often sets of linked requirements, Alexander focuses on finding a single embodiment that solves a set of requirements. In this way, he seeks to simplify the problem. However, the linking already pre-assumes certain forms, which does not leave much room for creativity or even a near-comprehensive look at the possible range of solutions.

To illustrate this notion, the current author will use examples found in Alexander's book [3]. Looking at the requirements list, Alexander says that the kettle having sufficient volume and the need to be storable are conflicting, but this is only conflicting if one pre-assumes what a kettle 39

should look like. Since volume implies a capacity and not a shape it should not conflict with storability, which implies a shape or size. One can imagine that some very interesting shapes and sizes might fit in standard storage spaces, all of which may have a broad range of different volumes. This is also true for the requirements of a material which allows the water to be heated, but also allows the heat to be retained (it should be noted that Alexander assumes the kettle is always heated via placement on a stovetop element). In this case, there is no reason for the linking of these two requirements on the material since the former is only applicable to the bottom face of the kettle (where it sits on the element); whereas, the ability to retain heat is a function of the sides and top, which can easily be solved by using different materials or say an insulated layer for faces which are not the bottom (this is even more evident when one considers that heat rises and the heat will generally never escape through the bottom of the kettle). Thus, the linking of requirements in Alexander's method may unintentionally introduce bias into the design, which is not a favourable attribute.

Pahl & Beitz ­ Abstraction Concept generation for Pahl & Beitz [9] includes many steps, the first of which is to break the primary function of the design problem into sub-functions; this is similar to both Alexander [3] and Ulrich & Eppinger [6]. The result is a function structure that resembles Alexander's [3] misfit tree. Pahl & Beitz say that: "establishing a function structure facilitates the discovery of solutions because it simplifies the general search...and solutions to sub-functions can be elaborated separately". [9] Again, this resembles Alexander's functional decomposition into the misfit trees. This functional decomposition of the problem reinforces the current author's notion that design is mainly concerned with the functional form and also supports the framework for the current author's own concept generation and evaluation methods, discussed in Chapters 5 and 6, respectively.

The next step then is to find working principles for each sub-function via some solution finding method. To do this, Pahl & Beitz list many solution finding methods, which will not be listed here due to the vast number of methods they include. However, it is interesting to note that the current author's own method for concept generation includes aspects of many of the methods listed by Pahl & Beitz, thereby supporting the current author's research. Pahl & Beitz 40

specifically mention the usefulness of design catalogues, stating that they provide: "quicker, more problem-oriented access to the accumulated solutions or data; the most comprehensive range of solutions possible, or, at the very least, the most essential ones, which can be extended later; applications independent of specific company or discipline; and data for conventional design procedures as well as for computer-aided methods." [9] The current author would again note that his concept generation method touches on all of these points.

Once working principles have been found for all of the sub-functions, they are combined in a process the authors call "system synthesis" in order to create a "working structure". The working structure represents how a solution will work at a functional principle level; which is again, in line with the current author's own work. The creation of working structures for concepts then leads to a "specification of principle" (functional specifications), after which an initial, coarse evaluation is completed.

After this coarse evaluation, Pahl & Beitz then return to the concepts and enter another concept generation stage, this time for embodiment design. Here, embodiment design is taken to mean the development of a more or less abstract concept into a more concrete proposal. It fundamentally includes clarity, simplicity, and safety, but also incorporates layout, scheme, and drafting of the design (the layout design and form design). It is unclear why the original concept generation and embodiment design are separated here as other literature generally combines the essence of each into a single step. Also, many authors might agree that given this separation of concept design stages, the first concepts may be too vague to evaluate properly and that embodiment may be necessary before an evaluation can be more thoroughly conducted. It should also be noted here that some aspects of the authors' embodiment design step necessarily belong in the detail design phase since they are much further along the design process than concept design. The authors give no indication as to why they have separated the tasks in this manner.

Pugh ­ Concept Generation While Pugh [5] does not give his own specific method for generating concepts, he does state that concept generation may be carried out at the system, subsystem, or component level. It might be resumed then that Pugh allows for any concept generation method to be used in his Total Design 41

process, so long as it follows the first stipulation of having the ability to be carried out at any level of the system. Regardless of the specific method used, Pugh states that concepts must be: recognizable, demonstrably feasible, and justifiable; technically checked out for compatibility and completeness; clear, unambiguous, and complete; and communicable (be of sufficient clarity to be understood).

However, Pugh does make a list of what he considers as the most common creativity techniques for generating ideas, including: analogy, brainstorming, attribute listing, checklists, inversion, and combination. He further says that all of these techniques are grounded in analogy. This is an interesting point since this infers that using an analogy-based framework (such as the one being proposed in this dissertation) may promote creativity in design.

Suh ­ Synthesis For Suh [10], concept design is going from requirements to conceptualization; a process of mapping from the functional to the physical domain. In his work, this means taking FRs and mapping them to DPs. However, Suh offers no tangible solution on how to go about this mapping (i.e.: how to generate the concepts). In this way, Suh's work might be considered incomplete as a design process, especially when considering the possibility that it might not be possible to ever satisfy his Independence Axiom in practical design situations.

Ulrich & Eppinger ­ Concept Generation Ulrich & Eppinger's [6] concept generation phase consists of a five-step process: clarifying the problem and breaking a complex problem into simpler sub-problems, identify solutions for the sub-problems via internal and external search procedures (external and internal search are two steps in this approach), systematically explore the space of solution concepts and integrate the sub-problem solutions into a total solution, and reflect on the solutions and the process. As the authors do not make a distinction between the initial phase of design and this phase, the first step of clarifying and simplifying the problem has been covered in Section 2.3.1 and thus, only the next steps will be covered here.

42

Ulrich & Eppinger list several methods for searching externally via: interviewing lead users, consulting experts, searching patents and published literature, and benchmarking related products. This external search is focused at finding existing solutions to either the overall problem or the sub-problems. They note that finding solutions via external search is usually quicker and cheaper than developing new concepts. In this way, the current author believes that this method of external search is not conducive to producing creative results. The next step for the authors is to conduct an internal search, which is similar to conventional team design methods; whereby, the design team works together in groups to generate concepts, often through the use of creativity techniques.

Next, a design team would systematically explore all of the concepts generated from the external and internal searches and to work through the concepts, combining solutions to sub-problems into a whole concept. Ulrich & Eppinger offer two methods to aid the design team in the systematic exploration; concept classification trees and concept combination tables, both of which are commonly seen in a systems approach to design. The final step of reflection on the generated concepts is used as a way to create a loop within the process, allowing the design team to decide if the steps in this phase should be iterated to find better performing solutions. 2.3.3 Concept Evaluation Given that a multitude of concepts are generated from the previous stage, the next task for the designer is then to evaluate those concepts in order to establish a rank ordering and decide with which final concept to proceed into detail design.

Alexander For Alexander, there is no particular method for evaluating concepts. However, he does propose several guidelines for designers when evaluating concepts. In general, the "Rightness of the form depends...on the degree to which it fits the rest of the ensemble." [3] Recalling that Alexander sees the problem as a collection of misfits or attributes between the form and context which we wish to improve, this quote then implies that evaluating concepts is a process of finding the concept that fixes the problem misfits or the one that addresses highest number of them. In continuation of this, he shows an example where he illustrates the notion that one cannot directly see how well a form fits with its context, but rather we can only see the way that it does not fit. 43

Or in other words, good fit can only be seen from a negative point of view, as the departures from the norm, rather than the norm itself.

Further, Alexander states that there is no way to evaluate whether or not a concept meets requirements from a drawing alone; therefore, he suggests that performance standards should be set and that concepts need to be evaluated against those metrics. He goes on to state that evaluating concepts on vague notions like "safety" or "economy" is a poor method since the words have no consistencies or true meaning in regards to the concept, especially between different design problems. The current author agrees with this view. Alexander also suggests that designers require a way to evaluate concepts which is not based on experimentation (trial-anderror). The current author addresses this in Chapter 6.

Pahl & Beitz ­ Synthesis Pahl & Beitz [9] perform an initial, coarse evaluation of the functional concepts first comprising of broad, generalised questions like: is the proposal realisable, within costs, can it fulfill requirements, etc. The goal here is to remove any concepts that are completely unsuitable before starting the embodiment design (form/layout) and then evaluating what others may consider the more "full" concepts. Some might argue that the first evaluation may not be entirely needed since the ideas are not yet fully conceptualized by the embodiment design step.

After the completion of embodiment design for the remaining concepts a second evaluation is done, which makes use of evaluation criteria derived from the requirements and constraints in the problem. These criteria are then given weights in a top-down approach, based on the objectives tree that was created in the problem analysis phase. Concepts are then assessed on each criterion, based on the magnitudes of their parameters (discussed in detail next), multiplied by the weightings, and summed to give an overall weighted value for each concept. Concepts are compared via this overall weighted value. At this point, designers are urged to search for weak spots in the top performing concepts and modify them before evaluating all concepts once again. This process can be iterated many times until a clear winner is found.

44

Pahl & Beitz illustrate an interesting method for compiling the "parameters" that are used in the decision matrix. Here, a range of values for a criterion is placed on a 1-10 scale and evenly distributed. This allows the designer to compare actual performance metrics in a normalized fashion and to more accurately determine the scores for each concept in each criterion. An example to illustrate how this works may be shown by perhaps looking at the criterion of "low fuel consumption", based on a similar example used in their book [9]. The first step is to relate a range of fuel consumption values to the 1-10 scale, where the worst fuel consumption value would be identified by a 1 on the scale and the best by a 10. Given that the values are distributed evenly along the scale, this gives a range of fuel consumption values corresponding to each integer value on the scale. Here, an estimated fuel consumption of 4L/100km might equate to an 8 on the scale; whereas, 6L/100km might be a 2. This coding of performance metrics to a 1-10 scale is then done for all metrics and are the parameters that the concepts are evaluated on. This method of coding performances is an interesting approach to the evaluation method, which is not seen in other literature and shares some commonality to the evaluation method presented in this dissertation in Chapter 6.

Pugh ­ Concept Evaluation In general, Pugh [5] evaluates concepts on their overall engineering feasibility, compatibility, and completeness. It is unclear why completeness is a measure since it is presumed that all concepts would be at more or less the same level of abstraction and thus, would be approximately just as complete as any other concept under evaluation. To carry out the evaluations, Pugh states that he believes decision matrices are the best way to complete the task, since they give structure and control to the process and do so in a visible, user-friendly manner. Pugh warns against using weightings and simple summation techniques in the matrix to find the best concept, since they instill rigidity and false confidence; however, he then proceeds to do exactly that in some of the examples found in his book.

A reference design is chosen to evaluate all other concepts against in the matrix; for this, a "peer" concept is chosen as reference. Here, the peer concept is the one concept that the design team believes is the best concept, before conducting any evaluations. This peer concept is even allowed to change at any point during the evaluation process, thereby removing any solid 45

grounding for the process itself. A changing reference design not only adds confusion and complexity for the designers, but also does not allow the designer to make a sound judgement, since iterations of the process might never be comparatively evaluated. Further, and Pugh admits this in his book, given that there is subjectivity at every step of the process, using a peer concept can lead to strong-willed individuals creating emotional defenses to their concepts, skewing the results.

Ulrich & Eppinger ­ Concept Selection Ulrich & Eppinger [6] start with what they call "concept screening" and then move on to a more detail evaluation with their "concept scoring"; the two are quite different to one another, but essentially serve the same purpose of evaluating concepts. The concept screening method is used first and is meant to act as a coarse, first pass through the concepts, while the second is a more detailed evaluation occurring after a first iteration of revision/combination on the original concepts.

In concept screening, the designer randomly selects one of the concepts to act as the reference, then scores all concepts against that reference using +, 0, - for better than, equal to, or worse than the reference. There is no justification as to why a reference is chosen at random. Weightings are not added at this stage even though they were determined as part of the customer needs process in the first phase. Scores are summed simply to rank the concepts; the best of which are chosen to move forward or be revised/combined to improve their performance.

Once the screening is complete, concepts are then evaluated using the concept scoring method, which changes the evaluation method and procedure. A new reference is again randomly chosen and is different than the original reference. The evaluation scale changes to a 1-5 scale and weightings are now added to the evaluation criteria. Concepts are scored against the new reference, the scores are multiplied by the weightings, and then summed for each concept. If a concept stands out as a clear winner, the procedure is complete; however, revision and evaluation can be iterated many times in order to find the top scoring concept.

46

The current author believes that Ulrich & Eppinger's concept evaluation method has some downfalls and can potentially lead designers to choosing a less than ideal concept. The changing reference, different scoring methods, choice to withhold weights from the first pass, etc. lead the current author to conclude that this is not an ideal evaluation method to follow and will address these shortcomings, as well as propose solutions, in Chapter 6.

2.4 Summary
This chapter has presented a review of literature on design theory and the engineering design process. Overall, the body of work indicates that the general understanding of the field of design research is still in its youth, relatively speaking, as can be seen by some of the conflicting views of the authors. However, some points of agreement in certain aspects of the design process were shown between the reviewed authors. One such point that can be agreed upon between all of the reviewed literature is that current design problems are far too complex for designers to deal with without the use of tools to mitigate this complexity. Many reviewed authors offered exactly these types of tools, though perhaps in neither in enough breadth or depth to be sufficiently useful for the most complex problems to date. Still, some successes have been demonstrated in industry with regard to the use of some of the reviewed processes and methods. However, there continues to be a lack of consensus amongst design researchers as to what a "best" approach to the design process may be. The current author believes that the research in this dissertation may help to unify these differing views.

47

Chapter 3
Analogical Framework

Chapter 3 Analogical Framework

49

50

Since the analogy is used to create the new design framework and the framework in-turn is used to reshape the early phases of the design process, then much of the author's work rests on the robustness of the analogy between designing and evolution. In this chapter, this analogy will be presented.

3.1 Evolution of Designs and Products
In this chapter, the author addresses the phrase "evolution of a design." As mentioned in Chapter 1, evolving products can be likened to naturally evolving organisms: new designs are partly reflective of a previous entity, on which they are based. This allows the new design to potentially be more fit in the extant environment. A few examples include: the PDA evolving from the leather-bound agenda [63], 3G mobile phones evolving from their 2G predecessors, the automobile evolving from the horse-drawn carriage, and space launch vehicles evolving from missiles. It should be noted here that significant effort was expended searching literature and an example could not be found where one could not at least hypothesize and reasonably propose a preceding state that influenced a design.

The evolution of products, then, takes place on the large scale and not only within a design process. Indeed, when the author writes of evolution, he wishes to convey that it is a course of action that occurs over many cycles of a product's lifetime, or over many generations of an artifact type or product class. As was mentioned in Chapter 1, one can think of two distinct iterative loops of design. The first one occurs on a small scale during a design process, thus encapsulating the process of designing a single product. The second loop occurs at a large scale over generations of products as they are designed, made, used, and impact on/are impacted by the context of their lifecycle, and thus influence successive generations.

The analogy becomes quite interesting in this large-scale, evolutionary loop; this is a focus of this dissertation. It can be seen here that a set of products can act quite like naturally evolving, living things. A product is designed in the smaller design process loop, after which it is brought to market and impacts and is impacted by its environmental context. In this context, certain aspects of the product may be liked or disliked by the users and those features then perpetuate 51

and influence the next product, which is again designed in the smaller loop of the design process. This large evolutionary loop, with its encapsulated smaller design loop, can be visualized in Figure 3-1. The reader is reminded that this same figure was used in the Introduction, but it is repeated here as a reiteration of the importance it holds for the creation of the framework.

Figure 3-1: Evolutionary Lifecycle of a Product

Also of note in Figure 3-1 is that the "feedback" seen in the evolutionary loop is not just consumer feedback from users, but also, sales information, warranty returns, media hype, etc. 3.1.1 Comparing Biological and Artificial Phenomena and Processes In this section, the author outlines the elements of the proposed analogy, by describing each element in terms of natural evolution, and then rewriting the description in terms of the evolution of designed products. This is done to emphasize the similarities between the two phenomena. It begins with an overview of evolution as a process.

Description of Biological Evolution: Natural evolution proceeds on two oppositional processes: mutation and inter-breeding, which increases genetic diversity; and natural selection, which decreases genetic diversity. Mutation and inter-breeding cause new genetic variations that render as new physical characteristics. These characteristics manifest new behaviours by which organisms can react to and affect their environment. Natural selection is the bias shown to organisms whose behaviours allow them to reproduce successfully. If a given genetic change induces a characteristic that enables behaviour in a given environment that allows an organism to

52

reproduce better/faster, then over time that genetic change will become dominant and the organism is said to have evolved.

Description of Artificial Evolution: Given a population of products, evolution proceeds based on two oppositional processes: mutation and interbreeding, which increases "genetic" diversity; and anthropogenic selection (defined below), which decreases "genetic" diversity. Mutation and inter-breeding cause new variations in designs, which render as new physical product characteristics. These characteristics manifest as new product behaviours/performances in

successive generations to fit the environment. Anthropogenic selection is the impact that those behaviours have on the ability of products to last long enough to be become successful in the market. If a given genetic (design) change induces a product characteristic that leads to a behaviour in a given environment and allows a product to succeed in a market, then over time that change will become dominant in the overall population of products. This is anthropogenic selection. Two examples of this are (a) the popularity of double- and triple- paned windows to lower HVAC costs in homes, and (b) the adoption of touch screens in smart-phones.

The basic analogy is quite obvious here. Most importantly, it should be noted that while designers work with intent within the context of a specific design process instance, there is no obvious intent guiding the overall "big loop" of how products are used and accepted in the larger societal/market environment, and how the environment responds to the new product. It is in this larger context that the author focuses his attention.

Next, the elements of the analogy will be examined more closely, starting with the key process of natural (versus anthropogenic) selection.

Description of Natural Selection: Natural selection, as first defined by Charles Darwin [64], is a process by which characteristics that increase the likelihood of an organism's survival and successful reproduction in an environment become more commonplace within a population, over successive generations. As an example, an increase in humankind's cognitive ability has allowed us to thrive as a species and thus natural selection over many generations of humans has seen an increase in our overall cognitive capacity compared to earlier generations. 53

Description of Anthropogenic Selection: The author refers to anthropogenic selection as the process by which products that have characteristics preferred by human users will tend to increase the likelihood of that product's success in an environment. These characteristics become more common in the population over successive generations of possibly many products. For example, touch screens on mobile phones were rare when they were first introduced. However, their aesthetics, usefulness, and user-friendly nature have made them highly successful. Touch screens are now common on mobile phones because they increase the likelihood that the phone will be bought. One can trace the evolution of touch screen mobile phones back to touch screen PDAs, and before that to touch screens at electronic kiosks, and before that to "light pens." Anthropogenic selection is not "natural" in the typical sense, because the criteria under which it operates come from various artificial and intentional sources, such as: legislation and regulation, science and engineering knowledge, and the influence of marketing (natural evolution, on the other hand, occurs without any intent at all). This is not to say, however, that anthropogenic selection is wholly under intentional control; there are many effects that will influence the success of a particular product over which designers have no control at all: market viability, customer acceptance, societal issues, environmental factors, etc.

The author next considers one of the key mechanisms by which new features are introduced into both biological and artificial entities: mutation.

Description of Biological Mutation: A mutation is a permanent change in the genetic structure of an organism. It can be beneficial or harmful, depending on its effect on the organism's survival (per natural selection). Mutations can be spontaneous or induced. A spontaneous mutation is the result of a variation in an internal genetic process, such as molecular decay. An induced mutation is a response to an external stimulus or phenomenon, such as exposure to nuclear radiation, prolonged change in nutritional intake, or an intended alteration via, for instance, genetic therapies.

Description of Artificial Mutation: An artificial mutation is a permanent change in a product's design. Because most products are not self-reproducing, mutation occurs through the 54

engineering processes that create the products. A mutation can be beneficial or harmful, depending on its effect on the survival of the product (per anthropogenic selection) positively or negatively. Mutations can be spontaneous or induced. A spontaneous mutation occurs as the result of a variation in the manufacturing and development processes of product development, such as mis-calibration of quality assurance equipment, defects in manufacturing equipment due to age, defects in raw materials used in manufacturing, new defects introduced when product parts are replaced during maintenance, or even mistakes that occur during product design. An induced mutation occurs in response to an external stimulus or phenomenon, such as design changes to address perceived flaws, upgrades to manufacturing processes or equipment, changes in current technology, or on-site changes implemented during construction. Such mutations manifest as design changes executed by product designers in response to information fed back to them, for future versions of the product. Even after a product is designed and built, it may incur a mutation during its life. An example is renovations of houses. This is a mutation in the design and it occurs well after any engineering processes. If one imagines that a product's design is a model of a product - not necessarily executed before the product - then changing the light fixtures in a house changes the product as well as its design. One of the possible exceptions here is software, which can in some cases change its own behaviour over its useful life. Hence, the author defines the product's DNA as its design.

There is some divergence here in the analogy, arising from the non-self-reproducing nature of most products. However, the authors adopt a broader perspective in which the design and manufacturing processes that create products are analogous to the self-replication of cells and organism-level reproductive cycles of biological entities. In this view, mutations are events that almost invariably alter individuals of a population of products during their creation. It is

possible, but currently very rare, that mutations can be induced in a product already in use. One example of this is so-called product hacking (e.g. http://hackszine.com) whereby consumers alter everyday products to be used in circumstances for which they were not intended. It is possible that a sufficiently innovative and useful product hack noticed by product developers could work its way into future products. Thus, while there is a structural divergence in how aspects of evolution are implemented in natural systems and (as we propose) in artificial systems, the analogy still holds at the functional level. 55

Finally, the author extends his analogy to DNA itself, which is the biochemical template of all natural organisms. If the author's analogy holds, then one should be able to extend it to describe a hypothetical information structure that is the functional equivalent of a biological genome.

Description of Natural DNA: DNA is the inherited genetic material within an organism. Each gene is a segment of DNA. The genes are the chemical units that initiate the processes of organism development and growth, that determine the organism's characteristics and the characteristics that are inherited in successive generations, and also regulate most of the activities which take place throughout the organism's lifetime [65]. Genes ultimately influence all aspects of an organism's structure and function [66]. DNA then is a model of an organism.

Description of Artificial DNA: A design is the information that defines, and is inherited between successive generations of, products: each gene is a segment of the design. Genes are the informational units that describe a product's shape, function, construction, usage, and determine its characteristics as well as the characteristics of all similar products of the same class (as well as future batches or production runs of the product). Genes ultimately influence all aspects of a product's structure and function. "Artificial DNA" is the design of a product and a model of the product. In conventional engineering terms, DNA could encompass: database records, CAD models, system architectures, etc.

Again, we see that the fundamental analogy appears to hold. One particular point of interest here, however, is that designers are not constrained, as nature is, to use only whatever informational building blocks are available. Indeed, the current general standards of design information are exactly what those structures would be, modulo any shortcomings that might be addressed by future developments in the discipline of product modeling.

If one considers only these descriptions of products, there is nothing controversial about them. Yet, using biological terminology and placing the descriptions side-by-side with descriptions of biological systems brings out their similarities, which clearly underscores the nature of the proposed analogy. In the next section, the author more closely examines the specific role of genes in the analogy. 56

3.1.2 Genes It is important to understand the difference between the two types of gene characteristics ­ genotypes and phenotypes ­ because they cover different aspects of organism behaviour. Genotype refers to the internal, structural composition of specific genes; phenotype refers to the external manifestation, which results from both the genotype and the influence of the environment [66][67]. A genotype must be expressed to result in a phenotype. Gene expression refers to the biochemical processes that result in an observable physical, structural, or behavioural effect in the individual. A dormant (non-expressed) gene has no impact on the individual, and its genotype can only be established via DNA profiling. Environmental effects can activate dormant genotypes. For example, some humans have a genetic predisposition to develop cancer; this means they have a genotype that will lie dormant until triggered by some external effect - such as smoking cigarettes.

The same can be said of designed products: every product is situated in a certain contextual environment. A product will have some characteristics (genes) that do not depend on context, and others that do. Products can also have dormant characteristics that are triggered by

environmental factors. Two examples of this are: (1) smartphones, the functionality of which changes when its user downloads applications; and (2) affordances unimagined by a designer but realized by a user, such as using a letter opener as a screwdriver.

To further illustrate this with another example, a genotype in a typical house could be the insulation class within the walls. The corresponding phenotype would be the house's thermal behaviour, which would be categorized as, say, an R12 rating. Changing the genotype will result in a new phenotype ­ e.g. raising the thermal rating to R20. If the genotype leading to an R20 thermal rating is selected by anthropogenic selection (e.g., if owners prefer such houses because they spend less money to heat and cool the house compared to other houses), then the genotype is seen as beneficial and will tend to propagate via construction and renovation of other homes.

A more complete version of the analogy between a natural and artificial gene is given in Figure 3-2.

57

Figure 3-2: Artifact vs. Organism Gene Comparison

Figure 3-2 shows the similarities between natural genes and artificial genes, and how those genes induce observable phenomena in organisms and artifacts. We see that there is complete

symmetry between the natural and artificial conceptualization, as rendered by the author's analogy. In particular, we note that if a complete genome were known for some class of product, one can expect appropriate genes could be selected ­ and thus establish a set of design concepts ­ by tracing back from preferred characteristic phenomena to the causative genetic structures. 3.1.3 Lifecycle Processes In the preceding sections, the authors have shown that it is reasonable to analogize the evolution of products with corresponding processes of natural evolution. To continue the investigation, we must examine the processes of these phenomena. That is, if the analogy truly holds, then we should see similarities in the processes involved as well as the structures. The author has devised such an analogy, between the natural and artificial life-cycle processes; they are depicted graphically in Figure 3-3 and Figure 3-4.

Figure 3-3: Natural DNA Lifecycle

58

Figure 3-4: Artificial DNA Lifecycle

We see here that the natural and artificial lifecycles are quite similar, which reinforces the sense that the analogy is meaningful. One might argue that an important missing feature of the analogy, as rendered in these figures, is the appearance of radically new species (a quantum evolutionary step) [68]. With respect to the design of products, such quantum steps correspond to highly innovative products. However, in both natural and artificial cases, a precursor to these quantum steps can be found. In natural systems, even quantum steps are based on changes, albeit massive ones, to existent DNA. In artificial systems, there is an "as is" context in which some innovation is rooted; in any case, innovation is context sensitive ­ what is innovative in one situation may be quite conventional in another.

Therefore, a designer's ability to innovate is essentially a kind of mutation. The advantage of innovation over its natural correspondent is that it can be directed by human intention towards solutions that are more likely to be successful. The disadvantage of innovation is that success is based not on the relatively reliable environment of nature (at least with respect to the natural laws) but on the often irrational landscape of society. Natural evolution drives organisms toward growth to balance the environmental hazards that tend to kill them off. In design, however, many products are designed for reasons disconnected from simple survival; thus the force of growth is often unbalanced in artificial evolution. [59]

59

However, the sense of balance can be recovered by considering the long-term effects of sustainability. For instance, there is no direct environmental force acting against individuals who consume significant amounts of gasoline to power automobiles. Growth here is

uncontrolled by the human/societal environment. However, if we consider the long-term effects of fossil fuel consumption, we do find environmental forces that act against those individuals (as well as others), such as: the non-replenishment of fossil fuels and global warming eventually leading to a decline in the human-habitable environment. This is an example of how the analogy can help to add factors of sustainability directly into the design process itself.

As will be shown in subsequent chapters, building and refining on this analogy between natural evolution and artificial design can increase the efficiency of the design process, while also helping to improve the sustainability and overall fitness of the designed products within their contextual environments.

3.2 Evolution in Design
Since the notions of biological phenomena and the relations to similar processes in design have been covered, let us next return to the two identified evolutionary loops present in design. 3.2.1 "Big-loop" Evolution in Design When the author speaks of "big-loop" evolution, he is referring to the larger of the two identified loops that occur over the lifecycle of a product class. The two loops were illustrated in Figure 3-1. Here, the larger loop represents events occurring on a macro-scale, over the full lifecycle of a product. It is reasonable to express the lifecycle of a product as a loop since many authors [3][6][8][9][10][11] agree that designs have a previous entity on which they are based. Thus, when one product approaches the end of its own lifecycle, it influences successive generations of products, closing the loop.

Since a product is impacted by previous versions of products and then itself impacts on future versions, within some changing contextual environment, a clear analogy can be made to the

60

similar occurrences in nature; whereby, the success or failure of a generation to fit within its environment influences future success or failure of that organism in successive generations.

This is an important step in design and the analogy itself, since it is often true that previous generations of products are forgotten about or ignored, keeping only the most recent generation in view when beginning the design process. The reasoning behind wanting to keep all previous versions of a product within reach of the designer will become clearer in the next chapter, when the author explains how this analogical framework will be of use in design. 3.2.2 "Little-loop" Evolution in Design When the author speaks of "little loop" evolution, he is referring to the smaller of the two identified loops that occur over the lifecycle of a product class. The two loops were illustrated in Figure 3-1. Here, the smaller loop represents the events occurring in the concept design phase of the design process, consisting of concept generation and evaluation. As was illustrated in the Literature Review, many authors agree that this phase of design is an iterative loop.

The importance of the little loop to this dissertation is as an illustrative tool of the different levels of evolution that occur over a product's lifecycle. It also adds to the analogy by reinforcing the notion that evolution does in fact occur in products and occurs on different scales. 3.2.3 "Open Design" and Product Evolution An interesting field of design study that has emerged recently is that of open design or open collaborative design [69]; whereby, the process of designing a product is made "open" to the general public instead of being solely in the hands of a design team. In this field, projects are facilitated by online collaboration between countless individuals, many or most of whom are the end-user of the product itself. In this way, the evolutionary nature of the product is tightened and sped up significantly, since the end-user directly impacts the design of the product, as opposed to conventional design where the end-user only sees a product after its design and provides feedback to the next design process.

The implications of the open design movement and its impact on this research is furthered by the notion that many of the users of the product that was designed in an open design process then 61

build their own product. Here, one can consider that each individual manifestation of the product is slightly different ­ which is exactly analogous to the subtle differences between individuals of the same species. Differences may occur as a result of the build process used by the user or due to personal changes added to the design; in both cases, these changes can be seen as mutations in the original design. Given these differences between individual instances of a product and the open nature of the design process, many users provide feedback to the community on the performance of their product. This feedback acts as a form of anthropogenic selection since all users then see the slight performance differences in the individual models and the best performing versions act as the base for the next incarnation of the product, which is then made by many users and has its own set of variations, the best of which acts as the next base, and so on. Unlike the slow processes seen in nature, the open design field allows for many more mutations to be tested and fed back into the design at a much quicker pace.

This chapter has shown that the notion of an analogy between nature and design is possible and also that the analogy holds at various levels. In doing so, a new conceptual framework to view design has been created. From this framework, it is possible then to extend the analogy deeper into the steps of the design process and also into the products' designs. In the next chapter, the author will illustrate how the analogical framework provides a new approach to view and define the design of a product.

62

Chapter 4
A Genetic Representation of Design

Chapter 4 A Genetic Representation of Design

63

64

The author's analogical framework was laid out in the previous chapter. It is now possible to explain how that framework can be used to provide new insights into the design process; more specifically, the early stages of design. As described in Chapter 2, what the author means by "early stages" of the design process is everything up to and including concept design. This is because the current version of the framework does not have provisions for changes to the detail design or manufacturing phases of the process.

The framework allows us to look at the product's design in a different way, via a genetic structure; whereby, the "design" of the product can be defined as a complete description of the functional characteristics (or functional form) that tells us what the product does and how it does it. The author refers to this functional description of design as the design genome. If the design genome for a product is known, then it can be used by designers as a roadmap of its design and as a tool during the early phases of the design process. Since the notion of a design genome is new, no such genomes have yet been specified. In the following sections, the author describes how design genomes can be developed.

4.1 Creating Design Genomes
In order to create the design genome for a product, we use a process similar to the one used by the Human Genome Project [70] to identify individual genes in humans; that is, through a procedure analogous to DNA sequencing. Obviously, since the design genome is only an analogical construct, there is no tangible substance to analyze for the genes. However, there are databases of numerous examples of existent products on the market that can be analyzed. Thus, the process of creating the genetic structure of a product starts with data mining as many samples of the product as is possible; including, previous generations of the product that may or may not still be in use.

Data mining existing products serves two key purposes: 1) to find the functional characteristics of the product, thereby identifying the individual genes that define the product's design; and 2) to establish performance relationships for every possible embodiment for each gene, giving rise to evaluation metrics embedded within the genes themselves. The first might be achieved in a 65

similar manner as that of functional decomposition, whereby the primary functions of the product are first found, then subsequently decomposed into sub-functions until the process cannot be continued further. The second requires more rigorous evaluation and comparisons of how each different embodiment performed in different conditions or scenarios.

Obviously, the creation of design genomes for every product in existence is a massive task and might be considered as a barrier to the deployment of this research. However, it can be accomplished piecemeal, one product at a time. Also, the successful use of the design genomes as a tool for concept design does not require the entirety of existing products to be mapped to genomes; a single genome is useful for designing another product in that product class. It should be noted that tasks of this size have already been successfully demonstrated as feasible. One area that a task of this size has been attempted, and is still ongoing, is in the field of genetics; whereby, scientists have successfully mapped the genetic codes of numerous species of living organism. Another example would be in the area of lifecycle assessment (LCA) methods, which have become quite popular [71][72][73]. Building the databases of the impact factors needed to successfully determine the impact of a product over its lifecycle was difficult, took a massive amount of time, and constantly requires updating. In this way, design genomes are quite similar to LCA methods as they would also require updating each time a new technology was introduced or when a product changes.

4.2 Structure of a Design Genome
As has been mentioned in Chapter 1, the use of patterns is known to reduce problem complexity and is well suited for describing the creation of something; in this case, describing design genes. A gene pattern then describes the when, where, how, and why for the use of that particular gene (within specific contexts) and the possible embodiments by which the gene may be manifested, the choice of which becomes a task for the designer during the design process. The structure of the design genome is formed via a pattern language; this is to say that each gene is represented by a single pattern and the collection of all patterns/genes for a product form the language/genome. The reader is reminded that an overview of patterns and pattern languages was given in Chapter 1. 66

This process gives rise to a pattern language that describes the functional form of a single product class, based on the mined data: the author refers to this as the design genome for that product or the [product] genome, where the product class is inserted. For example, the design genome for a bicycle would be called the bicycle genome.

It is possible to envision that the design genomes for multiple products may also be linked together in interesting ways to form a higher order pattern language and that this could be done for every imaginable product in existence. The scale of a project such as this is well beyond the scope of this dissertation, but outlines the interesting possibilities that become available with the creation of this design framework. 4.2.1 Assembling the Design Genome Once the product data mining (and thus, the decomposition of the product into its functional elements) has been completed, the genome can start to be structured. One might liken this to a hierarchical representation of the product, based on its elements. A similar hierarchical structuring is used by Alexander [3][7][16] and Pahl & Beitz [9]. It should be kept in mind that patterns are used to create only the genes and not any other element of the system.

There are multiple ways to represent the final structure of the genome; one such way would be with a simple list. An example of this can be seen in Appendix B1 ­ Bicycle Genome List. In this example, the use of cascading indents and a colour scheme has been used to differentiate between groupings of genes. The bicycle is first broken into 3 major systems; namely, the drivetrain, structure, and user-bike interfaces, as indicated by the top-level headings. These are then decomposed further into their component pieces and represented by the colour black. Looking at the structure system, one can see that it decomposes into two further components, the frame and suspension. Next, the genes that contribute to the tier before them are listed and given the colour green. Inspecting the frame reveals that two genes are responsible for describing it and are the shape of the frame and the material that it is made from. Finally, the possible embodiments for each gene are listed and coloured orange. Thus, under drive type, we can see embodiments such as: chain, belt, shaft, and direct.

67

Another tool for representing the design genome is through the use of a chart similar to a morphological chart. Here, the hierarchy of genes would be given as a set of vertical rows and the embodiments would be placed horizontally in columns. An example of this representation method is given in Appendix B2 ­ Bicycle Genome Morphological Chart. As can be seen, this representation of the genome is not as easy to understand at first glance, but includes the use of images to better illustrate the concepts for each embodiment. Insofar as usefulness of the chart, it conveys more information to the user than does the list.

It is the author's belief that both representations are useful albeit for different purposes; the list can be used as a starting point and organizational method used before creating the individual genes, and the morphological chart can be used as an illustrative tool to be used by the designer during the design process. The list format also lends itself to easier facilitation of connecting similar genes from other products, as might be done during concept generation when seeking creative designs and is covered in more detail in Section 5.2.1.

Since each gene in the genome is described by a pattern, then it is useful to next outline the specific pattern template that is used to create each gene pattern. While a typical set of sections for a generic pattern was given in Section 1.3.1, the following section will show the form of the author's own pattern template, with particular reference to inclusions that should be made with regard to this research. 4.2.2 Gene Pattern Template In this section, the template used by the author to create gene patterns is given. The template includes descriptions on what information is included within each section of the pattern and how the pattern then helps to structure the pattern language. Within the pattern itself, other patterns, either within the same genome or from a different one, will be identified by the use of all uppercase letters and embodiments will be contained within quotation marks, like "embodiment". The reader is reminded that an overview of a pattern template and cited authors was given in Chapter 1; however, it should be noted that all templates used for patterns originated in Alexander's [7] work, with differences usually arising from particular needs in different domains that they are used. As such, the following template used in this work reflects Alexander's original pattern form, with slight differences in the naming convention of the pattern 68

sections for clarity and the contents of the sections for adaptation to the design genome. Other authors [19][20] in the engineering design field have a similar pattern template to the one shown here with the major difference being the adaptations for the design genome.

Title A short, descriptive phrase of the kind of entity that should be generated by the application of this pattern. This should include, where possible, a few small images, sketches, schematics of typical instances, and an optional link to the pattern language morphological chart, as was described in Section 4.2.1. This area should also include: authorship information (originator and contributors); version number, if available; and the date of last change.

Problem Summary One paragraph stating the problem, including a general sense of the context. This should be written as a description of an undesirable situation or need that will be fixed by this pattern. Drivers A factual account of needs (that are not met and therefore lead to the undesirable situation) and obstructions to meeting the needs. Write this as a set of conditions, indications, or symptoms that apply to cases where this pattern may be used. Exposition (optional) Details of the influence of context on the drivers and problem. Counterindications (optional) Details of specific conditions when the pattern should not be applied.

Therefore This section should include: a one sentence statement of resolution in the form of a directive to the pattern user, either as a solution or a decomposition into other patterns; a general description of the kind of entity resulting from application of the pattern; and a procedural, operational, and/or algorithmic description of how the entity is generated. This is written as a "how-to" guide and includes how the entity is tuned/optimised to actual conditions.

69

Also included in this section is the set of possible embodiments that this gene may have, which may include small images, sketches, or schematics to illustrate each embodiment. For simplicity and cohesion between the gene patterns and the genome, these are generally the same images used in the morphological chart representation; however, some authors of the gene patterns may wish to include extra images for deeper illustration of the more complex embodiments.

Consequences This section is a description of the context after implementing the pattern, including good and bad features of the new context. Also included are indications on how the difference between the initial and final contexts can be measured. It should be kept in mind that this section is not a restatement of counterindications.

Also important here is the inclusion of the evaluation parameters, or performance metrics, associated with each embodiment and how they relate to the requirements. It should be noted that these evaluation parameters will be used as a basis for the creating of the balance variables found in Chapter 6. A general sense of how well the embodiments perform in each of the evaluation parameters, under certain contexts (as the context relates to the drivers), should also be included where possible; the author refers to this set of performances for each embodiment as the performance envelope. Included within this performance envelope should also be indications of performance with specific reference to the sustainable aspects of each embodiment. By embedding aspects of sustainability into this section, it can help promote sustainable design by bringing those concerns to the immediate attention of the designer and can also influence the designer's decision on which embodiment to choose. For this purpose, the creator of a pattern would want to include one or more of the following sustainability measures: carbon footprint, net energy usage, environmental impact, an LCA analysis, etc.

Related patterns A list of other patterns not referred to elsewhere in the current pattern, annotated to describe the nature of the relation to the current pattern. Related patterns help to serve two purposes: 1) provides the basis for creating the full genome by linking coupled patterns together (i.e. perhaps linking the brake input with the brake system type), and 2) introduces similar genes from other 70

products that might be used as creative embodiments for this pattern. This second purpose for linking patterns is the basis for creative design using the genome and will be covered in more detail in Section 5.2.1. 4.2.3 Bicycle Gene Pattern Now that the template used in the creation of the gene patterns has been outlined, the next step in creating the full design genome for a product would be to create a single gene pattern. As mentioned in Section 4.1, this is accomplished by mining the data from a set of existing products and then structuring the data into the format required for making the pattern. Continuing the example of creating the genome for the bicycle, one of the genes from that genome will be shown. Figure 4-1 on the following two pages shows the author's gene pattern for "Brake Control", which is one of the patterns identified in the bicycle genome.

71

Title: Brake Control A user interface (UI) for controlling a braking system in a bicycle. Version 1.0, by Damian Rogers Problem

Summary The braking system requires input from the user on when to initiate braking, and often, how much stopping force to apply. Drivers Requirements should state if the varying of the stopping force is required and what user groups are expected, including age and ability differences. If an account of the maintenance schedule and limitations has been made, it should be provided so as to decide if it will impact the BRAKE CONTROL. Other drivers may stem from the finalizing of other genes prior to this one. Exposition (optional) Different users have different needs and abilities, which may affect what type of input they can or cannot use and with how much force they are able to apply to the input device. User groups should be consulted to see if there are indications of needs or concerns outside of the norm. Therefore Design a control device for the user to convey information about when to initiate braking and to allow for differences in how much braking force is applied at any one time. Place the brake control in a convenient location, such that the user can quickly respond to emergency situations. Consideration must be given as to what available means the user will have to use this device; it is wise to have the brake controls and the PROPULSION INPUT accessed via different appendages. The designer must pay particular attention to placement and form of the brake control, since the user will make often use of it and the ergonomics must therefore be taken into account. Embodiments:
Lever Reverse Crank Movement Knob

72

Consequences Evaluation parameters for BRAKE CONTROL may include: accessibility, precision, the ability to vary the input, response time to activate in emergency situations, ability to separately brake different ends or sides, ease of use, and ergonomics. Qualitative performance envelopes for the embodiments can be described through: · Environmental conditions may affect the ability of the user in activating the brake control, especially during wet and/or cold conditions; this is especially true for embodiments "lever" and "knob". The embodiment "reverse crank movement" may be considered unsafe in certain contexts or for some users; however, it does present the simplest operation in terms of learning. Bicycles that will be used by very young age groups or those that are learning may place higher value on this embodiment for ease of use. When considering the ability to choose a specific amount of desired stopping power, "lever" and "knob" have the highest precision. Embodiment "knob" will yield the slowest reaction times between an event occurring and the user being able to initiate braking.

·

· ·

Related patterns

Coupled genes: BRAKE SYSTEM. The BRAKE CONTROL is linked to the BRAKE SYSTEM since the two will be required to interface to each other and therefore, the interface must be consistent between them. Also, some combinations of embodiments for the BRAKE CONTROL and the BRAKE SYSTEM may not be compatible. · FRAME MATERIAL. The FRAME MATERIAL may impact how the BRAKE CONTROL is attached to the frame or how the routing of components is accomplished. Similar Genes: · · User interface for controlling braking systems in other vehicles. Since the bicycle may be thought of as a vehicle, one may wish to look at the interfaces for controlling braking systems from other vehicles, such as: cars, mopeds, or all-terrain vehicles (ATVs). User interface for controlling the braking of a machine. Many machine shops include machines that have rotational motions that can be likened to the motion of the bicycle wheel. Some machines have a way for the user to brake the machine for the purposes of changing functions, speeds, or in emergencies.

·

Figure 4-1 (this page and preceding page): Gene Pattern for a Bicycle Brake Control

73

As can be seen by Figure 4-1, the gene for designing the user interface for controlling the braking system in a bicycle has been created and is 1 of the 18 identified genes from the bicycle genome. The reader is reminded that the full list of genes for the bicycle genome can be seen in both the list and morphological charts formats in Appendix B.

The author would like to note here that while it was stressed that sustainability measures are important inclusions in the consequences section of the pattern, they have not been included in the example pattern in Figure 4-1. The reasoning behind this exclusion is that adding sustainability measures into each pattern is an extensive process, requiring many analyses to be conducted on each of the embodiments for that gene. These analyses are required to properly add usable information into the performance envelope of each embodiment. Further, given that some of the information for conducting these analyses is not currently available for all embodiments, the inclusion of the measures would not be complete enough to show in this example.

Once all of the genes identified in the genome have been created as patterns, the designer can start to make use of them in the design process. This will be discussed further in the proceeding chapter.

4.3 Discussion
What is not present here, but is also a valuable use of the genome is the inclusion of information that companies have gained through the design of previous products. This is to say that the genome has provisions for adding previous experience into the gene patterns. As was mentioned in Chapter 1, many industries rely not on a procedure or fact from a book, but rather from the experience of its senior members. This is due to the fact that a team member with plentiful experience in the subject matter brings learned insight into the, usually static, procedures found in manuals. Thus, the design genome can bring the best of both practices together, since it can integrate personal experience and insight into the gene patterns to add extra information for the designers. Information of this sort would be included under the "therefore" heading of the pattern since it directly relates to the procedure and how to choose when to use each available embodiment. 74

Further, the proposed framework can not only help embed sustainability factors into the design process, but any new aspect for consideration in design can be adapted. There are competing desirable aspects in any design problem, but increasingly, designers have been challenged by requirements of adding new aspects, such as human factors and sustainability. The proposed framework is flexible enough to accommodate any aspect that a designer wishes to address and specifically setup for sustainability issues due to the inclusion of the performance envelopes for the various embodiments, which would include measures of sustainability. By opening the scope of possibilities made available to the designer, through the robustness of the gene patterns and the inter-linking of similar genes, it allows the addition of these new aspects into the design process while still being under the control of the designers and the choices they make. In this way, the framework can accommodate any future design considerations and is intended to be dynamic, evolving over time as design does.

The following quote is of interest since it describes the notion known as design fixation: "Current conventions and personal prejudices may inhibit original developments. Because of inadequate information, new technologies or procedures may fail to reach the consciousness of designers" [9]. The implications of this quote suggest that the design genome may be useful in avoiding design fixation, since it is not necessarily biased towards current conventions or personal prejudices and stands as a database of design principles that can be easily and automatically updated with new technologies, procedures, or knowledge, as they arise. However, this should not be taken to mean or imply that this work is creating a design repository [74]. While the gene patterns are structures that may be used in the creation of future repositories, there are currently no provisions in the design genome for the software side of repositories, such as: queries, security issues, record keeping, etc.

75

Chapter 5
The Design by DNA Method

Chapter 5 The Design by DNA Method

77

78

The design genome and the two illustration methods, given in Chapter 4, allow designers to easily envision different permutations and combinations of genes for a product. This is similar to the role of the designer during the concept generation step of the design process; designers create many concepts, using combinations of different embodiments, in hopes of finding a solution which is a good fit to the requirements stated in the problem. It is also similar to morphological charts, the purpose of which is to give designers a simple way of combining different embodiments into full concepts. It follows then that the design genome may be well-suited for use in concept generation; the method of how to use it will be described in this chapter. The author will refer to this method of using the design genome in concept generation as the "Design by DNA (DbD) Method".

5.1 Concept Generation via the DbD Method
Since the design genome includes possible embodiments from all previous generations of the product class, the designer might be somewhat overwhelmed at the beginning of the concept generation stage. However, given the genome's discretization into individual genes, each gene then is as independent as possible and thus, allows the designer to consider the embodiments one gene at a time. Also, given that particular designs may not require the use of every gene in the genome, it is possible that some will be removed for a particular problem. The entire DbD method for concept generation includes the following tasks: choosing which genes are needed for the given problem, selecting a starting point in the genome, choosing an embodiment for each gene, and assembling the genes into a whole product concept. Each of these individual steps will be elaborated upon below. 5.1.1 Step 1: Elimination of Unnecessary Genes As has been mentioned, the design genome is the collection of identified genes from all previous manifestations within a product class. As such, it may include some genes the use of which is not required for the current design problem. This is often identified by examining the "drivers" included in the "problem" section of the gene patterns and deciding if they are required for the current design problem. For example, when designing a new bicycle, the customer may specify that they do not wish any quick-release pieces to be part of the design. Thus, the "quick-release 79

parts" gene in the bicycle genome (see Appendix B) is not needed and can therefore be eliminated for that particular design problem.

It might be possible that the opposite is also true; that the design problem may require a gene that is not present in the current version of the design genome. This is usually the case when considering innovative or creative designs. Here, a suitable gene will need to be identified from a different genome and added to the current one. More will be covered on this particular topic in Section 5.2.1. 5.1.2 Step 2: Choosing a Starting Point The main goal of this step is for the designer to choose where to begin, by selecting a single gene to focus on. Since all genes reside at the bottom of the hierarchical order (as was mentioned in Section 4.2.1), there is no set place to start and the designer is mostly free to choose any gene as the first to deal with. There are however, some guidelines which may be helpful in deciding if starting with a specific gene may be necessary or beneficial.

Time dependencies. It may well be that the complexity of the design problem and later stages of the design process (i.e.; manufacturing) may place time dependencies on certain aspects of the design; these should be accounted for when choosing a starting point. An example here might be the estimated time for manufacturing a certain part or assembly in the design. It is possible that a certain design may have one part or assembly that will take much longer to manufacture than any other part in the system; this then becomes the starting point for concept design. Indeed, it is almost certain that different parts or assemblies will have different lead times to manufacture; thus, it follows that the longest lead times are the ones which should be conceptualized first. Recall that the genome allows for information of this type to be placed within the gene pattern in order to aide designers in their task.

Logical order based on internal coupling. Some design problems may exhibit a natural order of genes, based on the coupling within the system. In such systems, conceptualizing one gene may not be fully possible until the embodiment for another, coupled gene is known. These cases present a natural order of progression and can help determine the best starting point. An example here might be the braking system on a bicycle. One might not be able to determine the feasibility 80

of different embodiments for the type of braking to utilize without first knowing what the user interface input for braking will be. It can be imagined that designing a brake controlled by an electrical signal is not possible if the user input goes to a cable-pull device.

Customer biased aspects. It may well be that the customer places higher value on certain aspects of the design and that these aspects may influence the choices made in other areas; these aspects are said to drive the design. Here, preference in starting point should be given to any genes identified as driving the design. For example, a customer may stipulate that the car they want designed must have paddle shifting for changing gears; thus, determining the embodiment for say the location of the user interface for shifting would need to be done first, before determining embodiments in other areas of the interior layout of the vehicle.

Taking the above guidelines into account, the designer should, at this point, be able to choose a "good" starting gene with which to proceed to the next step. It should be mentioned that returning to this step may be required for sufficiently complex or coupled designs; whereby, after completing one subsystem of the design, a new starting point may need to be chosen if one or more of the situations in the above stated guidelines are still present in the remaining genes. 5.1.3 Step 3: Choosing an Embodiment for Each Gene Once a gene has been chosen, the designer's task becomes one of selecting the embodiment that most closely satisfies requirements for that particular gene. Here, the morphological chart and gene patterns are used. Analogical framework aside, this step resembles common embodiment selection, using conventional morphological charts in current design practices; the main difference being in the amount of added information available to the designer by way of the gene patterns. While conventional methods may use morphological charts to illustrate different embodiment concepts, the gene patterns include many more details of each embodiment and information which is helpful in assessing which embodiment can perform better, given the list of requirements. It should be noted that any existing method for selecting combinations of embodiments might also be used, or might be modified for use in this step.

For this example, the author will use the gene pattern for the bicycle brake controls, shown previously in Figure 4-1, as reference. For this gene, three possible embodiments can be seen: 81

lever, reverse crank movement, and knob. The designer's task in this step is then to decide which of these three embodiments best suits the problem. Let us assume then that the problem states that the bike is to be designed for small children, many of whom may just be learning to ride a bicycle. From the pattern, we can see that one of the points in the consequences informs us that the embodiment "reverse crank movement" is preferred for users who are young and/or learning. Indeed, if we look at the other consequences, we can see that wet and/or cold conditions and precision are most likely not valued attributes for a user group of young and/or learning users. Thus, all other requirements being equal, using this embodiment should yield the best results.

In more complex systems, or patterns which have a higher number of possible embodiments, the designer may be required to be more rigorous in choosing the best embodiment. It is here that the added performance envelopes (described previously in Section 4.2.2) in the pattern are beneficial for decision making. This performance information allows designers to make an informed decision on which embodiment to choose, given the problem requirements. An example here might be a problem where the customer has stated a desired goal for the reflex time between an emergency event occurring and the user being able to initiate braking, while stressing that stopping in a safe manner is preferred. Performance envelopes might show that "knob" performs the worst here and that "lever" has similar reaction times to "reverse crank movement", but with a higher degree of safety. Thus, the designer would opt for using a "lever" as the embodiment in this case. While it is not present in the example gene pattern, it can be imagined that a pattern having very precise information with respect to values for certain metrics and embodiments may be possible.

While it has been shown that the performance envelopes are beneficial for making informed, more precise decisions, another way they aid the designer is by allowing a quicker decision to be made. Consider that large and/or complex problems may include hundreds of genes; the ability to quickly make valuable decisions on the embodiments for each one and to generate a whole product concept is quite valuable. Also, designers can do so while having a good idea as to how well that concept may perform, given the problem requirements.

82

Conversely, it can be imagined that concepts for very simple problems and/or ones which have very precise performance values embedded into the pattern, could be accomplished using a computer algorithm. Here, the computer would proceed in a manner similar to the designer by comparing the problem requirements with the performances of each embodiment for a gene and selecting the one which has the highest probability of performing well. While this may result in the theoretically best concept, the role of the designer would still be required to check the result and ensure a good product is designed. Detailed information of the sort required for computerbased design has not been included in the example bicycle genome that the author has created as it is beyond the scope of this research; however, it is left as an interesting topic for future work.

While a computer-aided approach was mentioned here, it should be noted that the use of genetic algorithms is not seen as possible in this phase of design. Of importance here is the fact that genetic algorithms require strictly quantifiable information in order to run; however, at the concept design level, the information available on the design (or its individual embodiments) cannot be sufficiently quantified. It is for this reason that genetic algorithms are generally used only in the detail design phase. Indeed, many design decisions made at this stage are on a qualitative level. Thus, there is only a superficial similarity to genetic algorithms, since the DbD method works with concepts that cannot be encoded quantitatively into a genetic algorithm.

The process of selecting embodiments is repeated for each gene, until all have an associated embodiment. The next step of the DbD method will be to combine the selected gene embodiments. 5.1.4 Step 4: Assembling a Concept The final step to the generation of a concept is then to assemble the chosen gene embodiments into a whole product. While this step may be trivial for very simplistic designs or ones with few genes, larger, more complex designs require more attention. Of greatest concern for the success of this step are the interfaces between genes. Problems of greater complexity often require that attention be paid to these interfaces, since it is here where problems may appear that hinder the integration of the genes into a whole product concept.

83

For illustration, let us return to the example of the braking system for the bicycle. As is shown in the bicycle genome (Appendix B), there are separate genes for the brake controls and the brake system. Let us assume that the embodiments chosen for these two genes are "lever" and "disc", respectively. The difficulty in combining these two lies in the interface between them, namely the method by which the output from the lever acts as an input for the disc brakes. One might imagine that the lever acts on a metal cable, as is commonly done in current bicycles. However, perhaps the disc brake system identified requires a hydraulic input. Here, the interface assumed by each embodiment is different and must be changed such that there is agreement between the two genes. Thus, the designer would revisit the two genes in question and modify one, or the other, or both in order to ensure that there is agreement in the interface. Once all interfaces are in agreement, assembling a whole product concept becomes a simple task of combining the embodiments from each gene together into a single, cohesive concept.

Next, the author will discuss the role that creativity plays in generating concepts and how the DbD method allows for more creative concept design.

5.2 Creativity in Design
It is in the concept development stage of any design method that the form of the design starts to take shape, setting the stage for the detailed design, optimization, manufacture, etc. Concept development not only lets designers try to find the best solution for the design problem, but also is the time when creativity is allowed to flourish and when innovative designs may occur. Creativity has been acknowledged as an integral part of design and engineering [9][11][75]. Some researchers have even argued that design inherently includes creativity [76]. Practically, creativity is a measure of design success and can be considered an "order winner". While customers will voice functional and performance requirements, e.g.: cargo space, fuel efficiency, etc. creativity will often remain an unvoiced requirement [77], even though the more creative and innovative products tend to be selected. As such, creativity is highly valued in engineering, as well as in business and industry [78][79].

84

In engineering design, creativity can be implicitly taught by presenting methods that were developed specifically to increase concept creativity, such as brainstorming, TRIZ (the Russian acronym for the Theory of Inventive Problem Solving), random stimuli, etc.

[80][81][82][83][84]

Creativity is generally regarded as a recognizable entity albeit difficult to define - something that one recognizes when one "sees it" [85][86]. Many researchers view creativity as the synthesis of a whole from different, often unrelated parts [87][88][89]. This can involve finding relationships [81][87][88], or transforming [88] those different and unrelated parts. There is general agreement that these "parts" include information and knowledge, which are also crucial elements of design.

Still, even with the current emphasis on design creativity, existent methods generally do not give the designer direction on how to be creative; only that there are ways and/or stimuli to promote creative thinking. That is, in all the creativity methods studied thus far by the author, there is invariably a creative "moment" that is not part of the method itself; put another way, no creativity method reviewed so far can guarantee a creative solution. [5][9][80][82][84][90] 5.2.1 Using the DbD Method for Creative Design The DbD method gives designers a way to be creative; via experimentation with different gene embodiments. Creativity can be introduced into the concept via two directed methods: what genes to include or add, and where to find similar genes from other genomes, and one nondirected method: random selection of gene embodiments. Recalling the analogical framework, the two directed methods can be likened to mutation and inter-breeding, respectively. The first two methods are referred to as directed approaches since the designer is given a path to follow, which focuses their thinking along lines that will produce creative results. It can be said that, insofar as creativity is concerned, the designer is free to use embodiments from similar genes in other products, even when there is little or no commonality between the product classes. Let us now look at these methods for introducing creativity into concepts in more detail, starting with the two directed approaches.

The first is in the formulation of the genes that are wanted for the new design. While the design genome is a complete set of genes to design that specific product class, differences in 85

requirements, new technologies, or contextual situations may require functionality outside of the current genome definition. Designers are free to add genes that they feel are necessary to satisfy requirements, especially in cases where a requirement is new to that product class. For example, the typical bicycle genome is given, but the new design problem allows for non-conventional features. Perhaps the design team comes up with the idea to add smart-phone connectivity and interaction with the bicycle. Since this hasn't been done before, there is no current gene in the bicycle genome describing this feature. Therefore, the designers would splice in a "smart-phone connectivity" gene from another, often similar, product class that does have that feature; perhaps from a car. The gene from a different genome is then able to help the design team characterize how it would integrate into the bicycle design.

The second path for creative design is by linking genes for a given product class with other, similar genes from other classes. As has been discussed in Sections 4.2.2 and 4.2.3, the product genome includes genes and embodiments from previous generations of that specific product class; however, there is little room for innovation at this point, since each of the embodiments has been used previously. Any creative solutions would be based off interesting combinations of the existing embodiments. Here, the use of the related patterns section of the gene pattern becomes quite useful; it provides for connectivity of related genes from other product classes to be linked directly into the gene pattern. For example, a common kitchen appliance, the kettle, has a need for an energy input in order to boil the water. The genome for the kettle would show that it is currently done in 1 of 2 ways: the direct use of heat via transfer from a stove-top element or open fire, or a plug into an electrical socket which allows the conversion of electricity to heat. However, many other products also have the need for either heat or electricity. One such product might be a satellite. By linking the gene describing the electrical energy generation of the satellite with the need for electrical energy in the kettle, the designers now have a much broader palette from which to work. Perhaps they decide that the photovoltaic (PV) arrays (commonly known as "solar panels") are of interest. They can then integrate the notion of PV into the kettle to create a solar kettle concept.

It is the author's opinion that the two methods for creative design presented here are superior to other methods. This may be shown in several ways. First, the use of a directed approach to 86

creativity provides a path for the designer to follow which results in a creative solution. Also, a directed approach outperforms a non-directed approach, since the latter necessarily requires that a creative solution is stumbled upon by chance. The benefit of removing the requirement on chance is two-fold: first, in the ideation of an underlying principle which may be used in a creative way; and second, in the actual creative use of that principle in the solution. This is not to say however, that the DbD method precludes the notion of a designer finding a creative solution by chance, only that it removes the requirement that creativity occur only by chance. Further, the directed methods present more creative possibilities to the designer than is possible when the designer has to discover the possibilities on their own. Lastly, the use of the design genome might be viewed as being akin to a design catalogue; however, the genome includes more detailed information and the ability to be consistently and rapidly updated with the changing world. Add to this the fact that the embodiments in the design genome generally include the performance envelopes and drivers from the requirements; whereas, a typical design catalogue does not.

The third way that designers may generate creative concepts using the design genome is by randomly selecting embodiments for the genes and combining them to see what emerges. Since the genes are randomly selected, this method may be thought of as a non-directed approach to creativity due to the lack of structure and focus for the designer. It should also be noted that this method is similar to current design practices; whereby, creative solutions are stumbled upon by chance, rather than created intuitively as with the first two methods presented.

It should also be mentioned here that, since the use of the design genome allows for more informed decisions to be made about which embodiments to select and for faster generation of concepts, it should then be true that designers have more time to explore creative solutions, given the same amount of total allotted time for the design phase.

Having created one or more concepts, be they creative solutions or not, the next phase of the design process is to evaluate those concepts in order to find one which is a good choice to continue with into the detail design and optimization phases. Thus, concept evaluation will be discussed in the next chapter. 87

Chapter 6
The Fitness Space Method

Chapter 6 The Fitness Space Method

89

90

6.1 Definition of the Fitness Space
It was shown in the Introduction that a form is always set within a context and that the combination of a form and a context is an ensemble [3]. When faced with a design problem, the designer is given a set of requirements that the design will need to satisfy. A balance variable (BV) [59] is a measurable attribute of the form-context ensemble, as it pertains to satisfying the requirements of the given design problem. On the surface, a BV may be thought of as being similar to a performance metric [59]; however, it is able to contain more information and be manipulated in more interesting ways than a simple performance metric.

A single BV contains a pair of intervals, one interval created from the target state of the formcontext ensemble (set by the customer requirements and the design problem itself, thus termed the problem ensemble) and one interval for the present state of the ensemble in the conceptual design (termed the solution ensemble). Each interval contains a nominal, minimum, and maximum value. To illustrate this, let us consider a wall electrical outlet in a typical North American house. The nominal value for the voltage coming from that outlet may be 115V, but expected values may range from 110V ­ 120V and thus the interval becomes the triplet: [110, 115, 120]. It is possible that some BVs may in fact only have a single, nominal value without an interval (i.e.: the range of the interval is zero), based on the attribute and whether the requirements have set a hard limit or a range of acceptable values for that attribute.

The difference between the pair of intervals in a BV measures the fitness between the problem and solution ensembles with respect to that attribute. A difference of zero indicates perfect balance ­ an optimal form for the given context with respect to the attribute. One can imagine that the interval from the solution ensemble may be in one of two distinct states. If it coincides with or is better than the interval of the problem ensemble, the BV is considered fit since it satisfies the customer requirements. If the solution ensemble interval is worse than that of the interval of the problem ensemble, the BV is considered unfit since it does not satisfy requirements. Since a BV can only be in one of these two distinct states, one can think in terms of two distinct subsets of the set of BVs: the set of fit BVs (FBV), and the set of unfit BVs (UBV). 91

The collection of all BVs for a given design problem is a fitness space (FS). While the term fitness space may not be a mathematical "space", it does coincide with the notions of the problem space and solution space commonly found in the literature [91]. The literature [92][93] also shows that the problem and solution spaces co-evolve throughout the design problem; that is, they are dynamic and any such concept evaluation method in these evolving spaces must also be dynamic. Thus, since the FS is comprised of the BVs from the problem, then as the problem and solution spaces evolve, so too does the FS. Indeed, the FS does account for the values taken from the solution sets and the problem per each BV and therefore must definitively also evolve dynamically as they do.

Since attributes of design problems and solutions are often coupled [1][3][50][51], trying to optimize one attribute can negatively impact the others. Therefore, single variable optimization will not result in finding the best design for the given problem. This is why some optimization programs fail to create 'good' products. The notion of the FS accounts for attribute coupling since the designer can visually account for changes in all BVs simultaneously and the FS can therefore be used to assess the impacts of coupled attributes during the optimization process, whether automatically through computer algorithms or manually by human decision-making. This implies that the FS optimizes the design as a whole, rather than just one attribute at a time. Drawing an analogy to mathematics, this can be likened to finding the global optimum of a function as opposed to finding a local optimum. Therefore, minimizing the entire area of the region in the fitness space containing the unfit balance variables results in a better ensemble than would be possible by optimizing any one attribute individually.

6.2 Creating the Fitness Space During Design
Let us start to create the FS by first considering a single BV and how it is manipulated. If the BV is modeled as a line, two unique ranges can be identified: a range that would satisfy the requirements and thus be determined to be fit, and another range which would be unfit. A boundary separates these two regions and is as distinct a boundary as possible, given the requirements (of course, it is possible to imagine a boundary which is in itself an interval and we can then describe this new region as a boundary layer such as one would find in a typical fluid 92

flow, but this is left as future work in the current research). Some BVs may in fact have more than 1 boundary set on the same line, setting a new range. That is to say that it is possible to imagine a BV where there is an ideal range of values in which to design, and that straying either side of that range would make the design become unfit. However, for the purposes of this example, only the case with a single, distinct boundary between the fit and unfit ranges will be considered. For the purposes of illustration, let us take an arbitrary and undefined target state interval for some unknown BV. We place the target state for the problem ensemble on a line and identify the two ranges (fit in green and unfit in red); whereby, the target interval is the boundary between those regions. This gives us the depiction in Figure 6-1.

Figure 6-1: A Single Balance Variable Axis

During the concept design phase, one or more concepts emerge. The performance of each concept can be evaluated using its BVs. Of course, at some stages of the process, the precision of these evaluations may not be very high due to the vague nature of concept design, as opposed to, say, detailed design. However, during the concept design phase we are more interested in ensuring that the design is proceeding in the right direction; toward satisfying the requirements. Thus, each BV of every solution ensemble of each concept then has a "current" state. The current state is represented by an interval. We can then place that interval on the same line as the target interval created from the problem ensemble; the distance between the two measured as an error. Using the error as a measurement thus normalizes all BVs to the same scale, for a given problem. A depiction of the current and target states of a single BV for a concept can be seen in Figure 6-2.

Figure 6-2: Current and Target Intervals for a Single Balance Variable

93

For simplicity, let the intervals of the target and current states have ranges of 0 (i.e.: that there is only the nominal value and not a minimum or maximum acceptable value). We can then set a point along each BV axis, identifying the current state of the form-context ensemble. If the point falls within the fit region then we know that we have satisfied the requirement pertaining to that BV; whereas, a point in the unfit region means we have not satisfied that requirement and that we should improve the design. This gives a distinct way to identify whether each BV is currently in a state of fitness or unfitness. Furthermore, a designer must be able to account for all BVs simultaneously during the design process. Thus, we require a way to visualize all BVs for a given problem concurrently.

To do this, the author uses radar plots [94]: one can simply arrange each of the BV axes at equidistant angles to each other to create a representation of any concept with any number of BVs, in any problem. Since each BV has its own distinct fit, unfit, and boundary regions, simply superposing them together shows us nothing. If however, we use the fit/unfit boundary (the target intervals) of each BV axis as the origin of that axis, we can create two unique spaces: one of which represents the total unfit region of all BVs and one which represents the total fit region. Together, these make up a graphical representation of the FS. An example of these regions, using five BVs, is shown in Figure 6-3.

Fit Region
BV 1

Unfit Region
BV 1

BV 5

BV 2

BV 5

BV 2

BV 4

BV 3

BV 4

BV 3

Figure 6-3: Example Fit and Unfit Regions for a 5 BV Problem

Of note in Figure 6-3 is that the radar plots appear empty. This is for illustrative purposes, to show how a single BV is split into the fit/unfit regions and how all fit regions for all BVs are placed into a single plot (similarly with all unfit regions of all BVs). Thus, the radar plots have 94

been created using the illustration of a BV with only the target state setting the boundary, as was shown in Figure 6-1. An example of the radar plots populated with data will be shown later in Section 6.4.

By definition, all concept designs for a given problem, at the same stage in a design process, are described by the same set of BVs. Therefore, those concepts can be directly compared via their FSs. The set of BVs, per each iteration, is exactly the same between all concepts; that is, the structure remains the same for a given problem, across all FSs, for all concepts. It is this direct comparison of the FSs for every concept which will be used as the means of concept evaluation for this thesis.

From the literature [36], we know that improving a BV which is already deemed fit leads to little or no actual improvement in the overall satisfaction of the customer with the product, but that any improvements in BVs which are unfit does indeed lead to increased satisfaction: where, improving a BV so that it crosses the boundary from unfit to fit gives the greatest increase in satisfaction. Also, it should be noted that continuing to improve a feature which is already considered fit may actually lead to a point where the customer becomes unsatisfied again. This is commonly referred to as a "bloated design" or "over-design". Given this, we can then say that the designer's main task is to decrease the amount of unfitness of each BV in a problem. Therefore, the issue for the designer(s) becomes one of minimizing the unfitness of the entire solution ensemble, since the BVs are coupled. Indeed, this is consistent with Simon's [95] notion of "satisfying vs. satisficing"; whereby, the former indicates the best possible outcome (i.e.: that a concept exactly matches the target value), while the latter indicates that a parameter is "good enough" (in the case of this work, "good enough" would imply that a BV falls in the fit range).

6.3 Optimizing the Fitness Space for Better Design
Now that the FS has been created, it is possible to work toward better design by minimizing the unfit region of the FS. Since the literature showed that improving those BVs that are already fit does not add more to customer satisfaction, the author will in this work concentrate only on the unfit region to improve the design. Design problems are inherently coupled [1][3][50][51] and 95

thus making improvements on the unfit space may negatively impact the fit space; however, as long as the currently fit variables do not become unfit, then one is moving towards a better design. Therefore, focus is placed on minimizing the unfit space, while at the same time watching what happens to the coupled BVs in the fit space and ensuring they do not become unfit. To do this, the following set of variables and equations is defined.

Let S be a set of solutions or concepts [A, B, C,...] intended to address imbalances in some defined problem space. All concepts in S are evaluated using the same BVs. Each concept in S is described by its own fitness space (FS) containing instances of the BVs [x, y, z,...] pertaining to that concept. Let BVA be the set of all balance variable instances for concept A. We can then write: xA is a balance variable x of concept A; that is, xA is an element of BVA.

Let FS = FBV  UBV, and  = FBV  UBV, where FBV is the set of "fit" balance variables and UBV is the set of "unfit" balance variables. A single BV may be in either the fit set or the unfit set, but not in both at the same time. During the course of the design process, BVs may move from one set to the other as a result of changes made to the design by the designer. Indeed, it is hoped that by the end of the concept design phase that all BVs are members of the fit set (i.e.: that UBV has a cardinality of 0), indicating an excellent design. Per the previous paragraph, FSA is then the fitness space of concept A.

Let current(x) be the current value of a balance variable x, as taken from the solution ensemble; let target(x) be the target value for the balance variable x, as taken from the problem ensemble. Recall that the definition of a BV allows for a triplet interval containing the minimum, nominal, and maximum values; however, we shall simplify this to only a nominal value (thus, a range of 0) for the working examples and the statements to follow.

Let maximize(x) be a predicate that is true only for BVs that should be maximized to improve the design. If maximize(x) is false, we take this to mean that x is a BV that must be minimized to improve the design.

96

To ensure there is a uniform rule to identify which BVs obtain fit values and which obtain unfit values, we define a non-dimensionalised error (E) of a single BV (x) in a concept (A) as follows:
(AS) [(x FSA) [maximize(x)   = 
() ()

]]

Equation 6-1

and (AS) [(x FSA) [¬maximize(x)   = 

(()­()) ]] ()

Equation 6-2

For both these, negative value  unfit. Given these definitions of E, if E is a negative value, then the BV being considered is unfit, and if E is not negative (zero or positive) then it is fit. This allows us to populate our 2 sets of BVs; namely, FBV and UBV. It should be mentioned here that there are no bounding maximum or minimum values for E, since it is theoretically possible for a concept to be infinitely far away from the desired solution state.

Let card(FBV) be the size (cardinality) of the set of fit balance variables. Thus, card(FBVA) would then be the size of the set of balance variables in the fit region for concept A. The size of the set of unfit balance variables is then card(UBV). We can now compare the set of FBV for two concepts, A and B.
(AS)[(BS) [(AB)  (card(FBVA) > card(FBVB))]] Equation 6-3

That is, there is one concept in S that has more fit balance variables than any other concept in S.

We can calculate the total error/unfitness (Et) of a concept by summing the errors for each BV in the set UBV. As a whole, we can represent the current state of the unfit space mathematically with a simple summation wherein a concept A, in the set of concepts S, has a total error:
 =
 




  

Equation 6-4

97

Where W is a weighting factor (weighting factors are commonly used in design processes [5][6][9][36] to account for relative importance of diverse criteria). We then write:
(AS)[(BS) [(AB)  (EtA < EtB)]] Equation 6-5

That is, there is a concept A in S that has the lowest possible error of all concepts in S.

Therefore, we can rank all concepts in S by examining their FSs. Ranking is possible since the FS for a given concept is fully characterized by the two cardinalities of the FBV and UBV sets and the two errors associated with those sets (Equation 6-4), for both conditions of maximize and not maximize (Equation 6-1 and Equation 6-2). Thus, using the FS to rank concepts is invariant once the cardinalities and the errors are known.

Here, the best solution/concept would have the largest FBV, while at the same time having the lowest total error. Thus, a "perfect" design would have the lowest possible value for the set UBV, namely 0, and the highest possible value for the set FBV, namely the total number of BVs for that design problem. Since finding the "perfect" design is improbable, we say that concept A in the set of concepts S is the best concept if: card(FBVA)>card(FBVB) and at the same time, EtA<EtB.

However, considering the complexity of design problems and the vast array of concepts generated during the concept design phase, finding one concept that satisfies both of these conditions can be difficult. Hence, there are three special cases which merit discussion. 6.3.1 Case 1: equal card(FBV), unequal Et In case 1, we imagine two concepts, A and B, where: card(FBVA)=card(FBVB), but EtA<EtB. This would imply that both concepts have the same number of fit BVs, but that concept A is closer to satisfying the others. Thus, in this case, the better concept is simply the one with the lower unfit region of the fitness space, or concept A.

98

6.3.2 Case 2: unequal card(FBV), equal Et Case 2 can be exemplified by considering two concepts, where: card(FBVA)> card(FBVA), but EtA=EtB. This implies that concept A satisfies more BVs than concept B, yet their unfit regions are equal. Here, we can say that concept A is better than concept B since it satisfies more BVs without sacrificing anything in the unfit region. 6.3.3 Case 3: unequal card(FBV), unequal Et Here, case 3 can be shown by considering two concepts, where: card(FBVA)> card(FBVB) and EtA>EtB. This also applies to the inverse relations. In other words, one concept has a better cardinality with a worse error or the inverse, a better error with a worse cardinality. In this case, making a final judgement on which concept to deem as the better is too subjective to set a rule. If this case arises in design, the designer would want to either iterate the design process on both concepts to try and improve one or the other or both, or both concepts would be taken back to the customer and a dialogue created between the design team and customer to determine if one concept appeals to the customer more than the other.

6.4 Fitness Space Example
To illustrate the idea of minimizing the unfit region of the fitness space, or Et, the following example is given. Let us consider a fictional design problem where, from previous work in the design process, 6 BVs have been identified that describe the design problem. The design team came up with two initial concepts (A and B) and upon evaluating the FS for each, decided to refine concept B. Table 6-1 represents the calculated errors (E) for the 6 BVs for all three concepts (A, B, and the refinement of concept B) for a hypothetical design. It should be noted here that while E is non-dimensional, it is not normalized to a specific range and thus, potential values for E are infinite and not constrained to ±1, such as the values in the table might suggest.

99

Table 6-1: E values for 6 BVs in 3 concepts

BVs BV1 BV2 BV3 BV4 BV5 BV6

Concept Concept A B -1 -1 -0.4 -0.8 -0.6 -0.4 -0.4 -0.6 -0.8 -0.2 0 0

Refined Concept B 0 0 -1 -0.2 0 0

As a first step in the design process, the columns for concepts A and B in Table 6-1 show the states of the BVs after the preliminary concept designs have emerged. Negative values are shown to represent that these BVs are in an unfit state and thus, as the values approach 0, they are approaching the satisfaction of the requirements. It can be seen that the BVs for concept B are closer to the target state than those of concept A (i.e.: card(FBVB)> card(FBVA) and EtB<EtA). Therefore, the designer chose to refine concept B to try and improve on the current state of unfitness. This leads to the "Refined Concept B" column, showing what the BVs may look like after some refinement to the design. Here, we see that most of the BVs have disappeared from the unfit region (they are now either in the boundary layer or fully in the fit region), with two of them remaining unfit. Further, we see that BV3 actually got worse through the refinement process. This is a common occurrence in design since the BVs are inevitably coupled and that improving some may make others worse. This example captures that notion since BV3 got worse as the others were improved, yet the design got better overall (i.e.: the values of the cardinality and total error for the refined concept B are better than the values for the initial concept B).

Next, we can look at how the unfit regions of the fitness spaces may look for each of the three designs: namely, concept A, concept B, and refined concept B, as defined previously in this section. Here, the area of the shaded region represents the total error (Et) for each concept. These are shown in the radar plots of Figure 6-4.

100

Concept A
1 0.8 0.6 0.4 0.2 0

Concept B
1 0.8 0.6 0.4 0.2 0

Refined Concept B
1 0.8 0.6 0.4 0.2 0

BV1 BV2

BV1 BV2 BV6

BV1 BV2

BV6

BV6

BV5 BV4

BV3

BV5 BV4

BV3

BV5 BV4

BV3

Figure 6-4: Fitness Space Representations of the Unfit Regions for 3 Concepts

As the design improves throughout the design process, the fitness spaces decrease in size (the reader is reminded that the goal is to achieve the lowest value for Et). Since it was shown previously (Section 6.2) that only the negative fitness space has an impact on customer satisfaction and acceptance of the design, then only the negative spaces have been shown in the example. However, the astute designer will also watch the fit region of the fitness space during the design so as to avoid BVs that are fit, crossing the boundary and becoming unfit in the next iteration of design. This phenomenon is shown next in the augmented chart of the BV values in Table 6-2. Here, an extra column has been added as a further refinement on concept B, where the designer has tried to improve the very unfit BV3, but in doing so has caused BV2 to become unfit again.

Table 6-2: An expanded set of E values including a final version of concept B

BVs BV1 BV2 BV3 BV4 BV5 BV6

Concept Concept A B -1 -1 -0.4 -0.8 -0.6 -0.4 -0.4 -0.6 -0.8 -0.2 0 0

Refined Concept B 0 0 -1 -0.2 0 0

Final Iteration 0 -0.2 -0.6 -0.2 0 0

And the associated unfit region of the fitness space:

101

Final Iteration of B
1 0.8 0.6 0.4 0.2 0

BV1 BV2

BV6

BV5 BV4

BV3

Figure 6-5: Fitness Space Representation of the Final Concept B

As can be seen in Figure 6-5, BV2 has become unfit again through trying to fix BV3. This is a common occurrence in design and so the fitness space must be able to account for this situation. Using the fitness space equations earlier in this section, we would be able to calculate the total error of the unfit region and immediately identify whether this final iteration has improved the overall fitness. Not shown here are the weightings of each BV for the design, which would be needed to more accurately calculate the errors, as per the equations defined previously. However, for the purposes of the example and simplicity, we can assume that all weightings of the BVs were equal.

6.5 Downfalls of Current Evaluation Methods
The author's review of the literature from Chapter 2 suggests that many methods for evaluating concepts have shortcomings that lead to poor concepts being selected. If this occurs in the literature on design processes, then it follows that this same outcome ought also occur in industry where the processes are being practiced. This had led to the manufacture and marketing of many sub-standard designs. Thus, the creation of the FS was focused on fixing the shortcomings of other methods; most specifically that of a "decision matrix", of which we see plenty of examples in accepted literature [5][6][9][36][96].

Some of the common shortcomings in accepted design practices, along with how the FS solves these, can be summarized as follows:

102

6.5.1 Reference Design Problem: All decision matrices use some reference design to rate the concepts against, but there are different methods in the literature for selecting and using a reference. Some use a predecessor that is already on the market [3][96], while others randomly select one of the concepts to act as a reference [5][6]. Using one of the current concepts for a reference skews the results since the designer(s) do not know enough about the concept at the onset to make informed decisions as to its performance versus the other concepts.

It has been shown in Sections 6.2 and 6.3 that in building and using the FS, one does not need to choose a reference, since the problem itself stands as the reference point (i.e.: the problem defines the target state). Thus, all concepts are simply measured against the target state of the problem, which was set by the requirements. Therefore, the `reference' for the FS is exactly what the customer wants and not some arbitrarily chosen reference. This is consistent with Alexander's [3] view since in Alexander's work, and any subsequent works derived from it, every step of the design process is always in reference back to the original form-context ensemble which produced the original set of misfits. In other words, like Alexander's work, the current author's method of concept evaluation is rooted in the requirements of the problem. 6.5.2 Changing Reference Problem: In some examples [5][6], we can see that the reference design changes from one iteration to the next. While it might be reasoned that this helps to "triangulate" the optimum design; in fact, it rather adds to the difficulty of the problem, which is exactly what designers are trying to avoid. In addition, a changing reference means that one does not have a single basis from which to view results; again, this makes the problem more difficult to solve. Finally, errors can occur in the ratings if the reference is changed (see the counter-example in the next section), since the designer would then view all concepts from a different perspective.

Since the reference for the FS method is built from the requirements of the problem, then the only way for the reference to change is when the problem (requirements) changes. This does occur often in design, as is shown by the evolution of the problem space, and when it does, the FS adapts to this change since the target states for BVs are then dynamically updated to meet the change in requirements. 103

6.5.3 Rating System Problem: There are many different theories ([5][6][9][36] and others) about which rating systems should be used in decision matrices. Some prefer a simple linear ordinal system ­ equal to, better than, or worse than ­ while others prefer a 5, 9, or 10-point system. Each has its own benefits and drawbacks. It should be noted that the rating system can have a large impact on concept selection and thus the final design; using too coarse a scale might hinder the ability for designers to make a quality assessment and thus make further iterations more difficult by forcing them to keep a higher number of concepts. This is because one cannot differentiate concepts well if the scale is not fine enough.

Unlike a decision matrix, the FS does away with a conventional rating system in favour of using the BVs (performance metrics based on requirements) to evaluate concepts. With a common decision matrix and rating system, evaluations can be rather subjective and may or may not fully represent the concept which is being rated. With a performance metric based system, the evaluations are much less subjective than their rating system counterparts. This is due to the fact that from the very start of a design problem, the designer knows with some certainty what the overall requirements are and thus how each concept performs in meeting each of those requirements. 6.5.4 Changing Rating Systems Problem: A large pitfall is that of a rating system that changes from one iteration to the next. By changing the rating system part-way through the concept selection, it gives designers no bearing on what happened in previous iterations or what might be useful to keep in future iterations. Also, when this is paired with new concepts emerging from iterations in design, it gives no concrete reference for all the concepts to be rated against. Indeed, if a first set of concepts is rated by system A, and the second iteration is rated by system B, it gives no standard with which to compare the sets of concepts. 6.5.5 Evaluation Criteria Problem: A final problem in most concept evaluations is the fact that the evaluation criteria have no direct link with the function of the concept, nor do they have a direct correlation with the original set of requirements which formed the problem in the first place. Rating a concept on "Safety" can be 104

quite ambiguous and cannot simply be solved by changing the functional form. However, rating a concept on its ability to adhere to a certain safety standard is non-ambiguous and is easily verified for rating that concept.

The FS evaluates concepts based on the performance metrics associated with the problem requirements. This ensures that each concept's performance is a direct measure of its ability to meet the requirements.

6.6 Fitness Space Counter-Example
Given the above example and the idea that the FS is here to increase the effectiveness of the design process, let us now look at an example from the literature, which has not been contrived by the current author. The purpose of the following "counter-example" is to point out more clearly the shortcomings of accepted design processes, as mentioned in the previous section, and how the fitness space approach can address those shortcomings. This example is by no means used to single out a single author(s) or design method, but rather; it is used here to demonstrate the problems listed in the preceding section that can lead to highly sub-optimal final designs. Many examples could be used in place of this one, such as: (fill in some other design methods and examples), but this specific example has been picked as it seems to illustrate many of the outlined phenomena that can be improved upon via use of the FS. Also, it should be noted, that while most design methods state that there are iterations to be made, which include augmenting the decision matrix, very few of the examples found in the literature actually included a 2nd iteration of the concept selection process for refined/modified concepts. The example used below is one of the few that do indeed include this iteration step, which is valuable to illustrate the overall design process.

Ulrich and Eppinger, [6] start by listing several concepts for a reusable syringe. Figure 6-6 shows their "concept screening matrix" for the concepts.

105

Figure 6-6: Original Concept Screening Matrix

As is seen here, Ulrich and Eppinger are using one of the concepts as a reference in the screening and that they use a simplified rating of only better than (+), even with (0), or worse than (-) in the scoring fields. While it may be argued that this is too simplistic a scale for scoring concepts, Ulrich and Eppinger claim that this is to speed up the initial concept selection phase.

However, they then go on to the next phase of concept selection, which is a revised concept selection matrix they term as a "concept scoring matrix". In this matrix, they have excluded all of the concepts except the ones they wish to pursue, as shown previously in Figure 6-6, under the heading "Continue?".

Figure 6-7: Original Concept Scoring Matrix

106

Here, in Figure 6-7, the matrix has completely changed in both form and function, as well as the selection of a different reference from which to score. Furthermore, the rating scale has changed and criteria weightings have been added. All of these changes between iterations add ambiguity to the concept evaluation task. A designer already has many issues to track during design; if the evaluation method is also changed during that process, the designer is more likely to be overwhelmed [2]. In other literature [96] the author presents the second stage of concept rating as an addendum to the first stage; thereby, keeping the reference as well as the scoring scheme the same in both cases. This eases confusion and keeps the designer(s) on a clearer path to choose the best design.

Also, some ratings do not necessarily follow from their original relative rankings when transcribed from the screening to the scoring matrices. The reader will notice that the original reference D (Plunge Stop), A (Master Cylinder), and E (Swash Ring) all have a 0 rating in the first two criteria (Ease of Handling and Ease of Use); which, according to Ulrich and Eppinger [6], indicates that they are roughly equal in performance. However, we find in the scoring matrix that suddenly concept E outscores A in both these criteria. Yet, in the literature there has been no indication of A or E being changed in any way as they were both selected to continue without revision or combination, nor has there been an indication as to the rationale behind the change in rank. How then did concept E sporadically outscore A in the second matrix, but not the first? This happens again under the criteria of Durability between concepts A and E. Thus, even in their own example, the authors do not remain consistent in their ratings due to the changing matrices, scoring, and reference point. It is likely then that any other designer trying to use this method would simply be confused and end up adding complexity to the problem, instead of helping to simplify it. Or, if these changes and inconsistencies were intended, there has not been any indicated rationale [97] given as to why the changes are justified, or even correct.

Further, we see in the scoring matrix of Figure 6-7, that there is now an included weighting for each of the selection criteria. Here again, the question of why this was not included in the first table must be asked. Weighting of selection criteria is done earlier in the design process (often during the requirements forming stages in most literature) and is therefore well known and documented by the concept selection phase. Therefore, there is no reason, nor value, to adding 107

the weights in the second table whilst excluding them from the first. In Figure 6-8, the current author has created a revised version of the first, concept screening matrix.

Figure 6-8: Revised Concept Screening Matrix

As can be seen in the revised matrix of Figure 6-8, the selection criteria weights have been added to the table and the scores modified by the weights. One may note the changed ranks for concepts D through G. In fact, concept E has changed from a positive rating in the original matrix to a negative one in this revised matrix and fallen three ranks from 2nd to 5th place. Also, concepts F and G have both moved up one rank, making them both more desirable. We can see from this revised matrix that, without the added information of the criteria weightings, it led to the original authors choosing poor concepts to continue. The original example chose concept E to go through to the next stage of evaluation; whereas, with the revised matrix, it seems that concept E actually needs to be revised in order to proceed, if it should even be considered at all.

Use of the fitness space helps this case: that is, to keep the designer on a clear path by keeping the scheme the same throughout the process. The key to the success of using the fitness space is that the designer is less likely to succumb to the pitfalls of other, published methods similar to the one described above. That is to say, the fitness space method improves on previous methods by removing obvious places to be led astray; such as the weighting and reference points problems that have been illustrated here. 108

Before proceeding, it should be stated here that thus far in the chapter, the author has simplified the examples by assuming the intervals along the BV axes have a range of zero. However, the formulation of the BV allows for each of the intervals to have a non-zero range (i.e.: having some minimum, nominal, and maximum value). In these cases, the calculation of the error for each BV and also the total error for the concept (i.e.: via Equation 6-4), becomes much more complicated. In a simple problem, the designer could probably keep track of the target and current state intervals to see when a BV satisfies requirements. However, in the more common case of complex problems, this task would be overwhelming. Thus, in order to evaluate a BV at any one point in the design problem and further, the total error for the concept, the outlined equations given in this chapter would have to be developed into systems of simultaneous equations that could account for the intervals. The mathematics involved in formulating these systems of equations falls outside of the scope of this research.

109

Chapter 7
Design Creativity Experiment

Chapter 7 Design Creativity Experiment

111

112

Given the author's creation of a new method for concept generation, as outlined in Chapter 5, there is need to validate that the method is useful for designers. However, reference material on how to conduct an experiment to test design methods is very sparse [98]. While such experiments would therefore be valuable to the design research community, they are also very difficult to design and execute due to a lack of appropriate methodological practices. Thus, an experimental method and procedure had to first be created in which to test various design methods against the DbD method. Further, given the very nature of design, creating an experiment to test it is extremely difficult. Firstly, the ability to have many different designers/teams of designers working simultaneously on the exact same design problem is neither efficient nor economical. Secondly, the task of monitoring and recording each and every action of every designer on every team throughout the entire process is a massive undertaking and would, at the very least, require a dedicated facility and a very large amount of funding; neither of these is feasible for this dissertation. Thirdly, analysing the sheer volume of data collected would be an onerous and costly task and further, determining what to analyse and in which way to interpret the collected data would make it even more challenging. Lastly, repeatability of the experiment for scientific thoroughness would require that all of the previous hurdles be overcome more than once.

Thus, given the above-mentioned difficulties in conducting a design experiment, only a small pilot experiment was conducted. This pilot was used as a basis for laying out an experimental procedure that could be used in a larger, more encompassing experiment. In both cases, the hypothesis for the experiment and research question for this dissertation remains the same: how does the DbD method for concept generation perform against other, well-known methods in the area of creativity and speed of completion? As such, this chapter will describe the pilot experiment and discuss its findings and analyses that can be scaled up in the future to a full-scale experiment.

As was discussed in Chapter 5, it has been shown that many designers seek to have creative designs. However, given the overwhelming signs that creativity is a desirable trait in design, there is seldom, if any, consensus on how to measure creativity [99]. Therefore, the author will define what is used to evaluate creativity in design for this pilot experiment. 113

The engineering design literature indicates usefulness as a key measure of creativity [9][11][98]. Ullman [11] specifies that creative ideas must be more than just good ideas; they must solve the problem (i.e.: be useful). De Bono [81] stresses that creative ideas must be novel and include an underlying logic and value. In contrast, ideas that are merely novel may be "bizarre", strange, or even incorrect. Most agree that at the very least, an engineering design must always be useful; which is to say that the design is appropriate, functional, correct, and valuable [81][87][100][101]. It is also shown that creative designs should be novel; described as new, original, or surprising [75][102][103].

Still more researchers include others measures of creativity, such as: fluency, flexibility, detail and elegance [101][103]. In an attempt to facilitate some of the other factors of creativity found in the literature, the author has chosen to also evaluate designs in the area of cohesion. The current author's notion of cohesion will be based on, but not strictly adhere to, the creativity measure of "cohesiveness", as first coined by Chiu & Shu [104]. A cohesive design is one which includes: complexity (details and implications of ideas), elaboration (ideas are explained in detail), fluency (ability to generate many ideas), abstraction (demonstrate abstract ideas or concepts), flexibility (ideas showing a variety of possibilities or realms of thought), and robustness (the design is applicable in a dynamic environment).

However, few have conducted empirical experiments [98] to 1) verify the different component measures of creativity (novelty, usefulness, cohesion), or 2) give designers a way to be creative, not just give pointers on what may, or may not, stimulate creativity. This pilot experiment was aimed at giving participants a way in which to be creative, while at the same time giving them a method which allows for faster concept generation and potentially better overall designs. Results from the study tested whether the Design by DNA (DbD) method is able to score higher than other, more conventional design methods in several different measures.

114

7.1 Experimental Procedure
The study was conducted in two "runs": an experiment conducted with a class of ten students in a design methodologies graduate course, all of whom had previous industry experience in various sectors (experiment run 1); and an experiment conducted with five people directly from industry, from varying backgrounds (experiment run 2). Both experiments were conducted using the same design problem, to design an urban cycle for use by "white-collar workers". The package of material that was used to present, explain, and support each experiment was identical for both runs. The package (see Appendix C) included: a description of what was expected as an outcome of the concept design; a set of requirements for the cycle; an hourly checklist, to be filled in after every hour of working on the design; and a walkout checklist, to be completed when subjects were finished their concept design. In each run, there was a test group and a control group; test groups used the DbD method, and control groups used other design methods. Packages given to test groups included details on a standard set of "genes" (as described in Chapter 4) for the exercise; packages given to the control groups lacked these details.

For both experimental runs, an evaluation of the results from each participant was conducted by a committee of two assessors; namely, the author and Dr. Filippo A. Salustri. The latter kept a certain distance from the execution of the experiments to help minimize potential assessor bias. Assessors were given everything that each participant handed in by the end of the experimental run and the final assessment of each participant's work was based on the three outlined parameters for creative design: novelty, usefulness, and cohesion. A five-point Likert scale was used to determine how well each participant fared in each of the three areas, where a score of 1 indicated poor performance and 5 indicated exceptional performance. Participants also evaluated their own designs in terms of novelty and usefulness, as can be seen in the "walk-out checklist questions" in Appendix C4. Here, cohesion was purposely excluded from the participant selfevaluations since it is a relatively difficult concept and would have likely caused confusion for the participants. Self-evaluations were used as an extra set of data for analysis. Tabulated results from the creativity assessments and walk-out questions can be seen in Appendix D1, while answers to the NASA TLX document questions are given in Appendix D2. A collection of all the

115

final concepts submitted by the participants for this pilot and used by the committee for the assessments are shown in Appendix D3.

It should be noted that, for purposes of confidentiality and also to limit any personal preferences toward certain participants, all work was made anonymous before the assessors received it for evaluation. Further, information as to which method each participant used for their design was removed from the results before the assessors conducted their evaluations; this was done so as to limit potential bias toward certain methods. 7.1.1 Experimental Run 1 In the first run, the design problem was given to the graduate students in the form of a homework assignment wherein students were expected to complete a concept design for the given problem. All students in the class had been given one hour of instruction in each of three different concept design methods: systems design, TRIZ, and DbD. The methods were all taught in the same day. Topics covered in the systems design lecture included: what a system is; how systems interact; how to graphically represent systems; how to use a system representation to decompose a transformation from inputs to outputs; and ideating solutions to individual functions, grouping the function solutions to form systems, and grouping the systems into a full product concept. Topics covered in the TRIZ lecture included: a brief history; an explanation of what contradictions and principles are; short examples of applying individual principles and how to interpret their descriptions; and a longer example starting with finding the basic contradictions, getting the principles, and ideating with the principles to create a concept. Topics covered in the DbD lecture included: a short introduction to the concept of DbD; a short introduction to the creation of the method from the original analogy; how genes and the genome were created; the differences in a typical design process and the DbD method; using the DbD method to ideate embodiments for different genes and how to find embodiments from similar genes in other products, evaluating options and selecting an embodiment for each gene, and assembling the genes into a full product concept; and a worked example on using the DbD method.

All students were given the same design package for their homework, as outlined above. Students were randomly assigned one of the three different concept design methods taught in class to use for their homework. Participants were expected to work individually on this 116

assignment. While there was no hard limit on the amount of time students could spend on the assignment, they were encouraged by the author to not exceed 8 hours; however, nearly all students exceeded this, with some reaching as high as 17 hours. The impact of the increased time spent will be discussed further in the discussion of the results.

All students were expected to submit deliverables including: all ideation and concept generation sketches, notes, etc.; ranking of concepts; refined concepts and new rankings; a two page report on the final "winning" concept, including explanation and sketches; hourly checklists for each hour spent on the homework; the completed walk-out checklist; and any other notes, diagrams, etc that they created during the time spent. 7.1.2 Experimental Run 2 The second experiment was run with participants from industry and took the form of a design "charrette" at the Ryerson University campus. Participants were given a short introduction to the charrette, explaining what was expected from them by the end. All participants were given the same informational package as in Run 1; however, since the second experiment was held in a more controlled setting, participants were also given the "NASA TLX document" (see Appendix C5), to be filled in at the end of the experiment. Since the NASA TLX document measures the task loading, or burden, on an individual during an activity, the author felt that the participants in experimental run 1 would not be able to accurately give valuable judgements as to their task loading, since many were working from home or in unknown experimental conditions, which could not be properly accounted for. However, the participants in experimental run 2 were all subject to the same working environment and thus, their opinions could be comparatively evaluated. Participants were randomly assigned one of two design methods, a conventional design method, as can be found in common design literature [5][6][9], or the DbD method; both of which were introduced to the participants by the author. As in Run 1, participants worked individually on their assignments during the charrette. Total allowable time for the charrette was set at a soft 8 hours, with some small tolerance for over time; however, it is interesting to note that all participants finished within 5 hours.

Since participants from this run were from different fields and none had seen the author's design method before, a short, 1-hour presentation on their assigned design method was given to them 117

two days before the charrette. The control group received a presentation on a conventional design process, while the test group received a presentation on how to use the author's DbD method. Both lectures included a participatory example at the end in order to involve them in the presentation and ensure that the learning was reinforced through doing.

All participants were asked to hand in the final deliverables, including: system architecture documents (identification matrix, system diagrams, etc.); all ideation and concept generation ideas, sketches, notes, etc; rating of concepts; refined concepts and new ratings; a final "winning" concept; if time permitted, a short explanation and sketches explaining the final concept; hourly checklists for each hour spent; the walk-out checklist; and the NASA TLX worksheet.

7.2 Experimental Results
Results from the walkout checklist questions and creativity assessments (both self-evaluations and the committee's evaluations) for both experimental runs were tabulated using a spreadsheet and separately compared. Means for each of the three creativity measures were calculated for each design method in two ways: 1) using all data (committee evaluations and self-evaluations), and 2) using only the committee's evaluations. This was done to see if the self-evaluations had an overall impact on the results, since it is often found that people will either over- or underevaluate their own performances [105][106][107]. It is interesting to note here that the selfevaluations had no impact on the final results for experimental run 2 and only affected one measure from one method in experimental run 1, even though the self-evaluations were often different than the committee's evaluations (for example, in Table 7-1: Systems design vs. DbD creativity assessments and Table 7-2). The measures of interest in the walkout checklists were the participants' answers to: 1) total time spent, 2) if participants would buy their own winning concept, 3) if they were comfortable using the design method they were given, and 4) would they use that design method again. Figure 7-1 depicts a collection of the final concept sketches that were submitted by the participants, ranging from the highly novel concept on the left to more conventional concepts on the right. The full set of submissions can be seen in Appendix D3.

118

Figure 7-1: A Selection of Final Concept Designs

A statistical analysis of the confidence levels for the results to follow will be discussed in detail in Section 7.3. 7.2.1 Results From Experimental Run 1 Since there were three methods being compared in this run, comparisons were done in pairs: DbD vs. systems design and DbD vs. TRIZ. The mean values of the DbD method and the conventional design method were compared; the results are shown in Table 7-1 and Table 7-2.

Table 7-1: Systems design vs. DbD creativity assessments

Novelty Usefulness Cohesion Systems Design Committee only Committee + self Design by DNA Committee only Committee + self 3.83 3.78 3.06 3.13 3.75 3.78 3.44 3.96 3.75 N/A 3.31 N/A

119

Table 7-2: TRIZ vs. DbD creativity assessments

Novelty Usefulness Cohesion Committee only TRIZ Method Committee + self Committee only Committee + self 4.08 3.72 3.06 3.13 3.50 3.94 3.44 3.96 2.67 N/A 3.31 N/A

Design by DNA

As can be seen in Table 7-1 and Table 7-2, the DbD method accrues higher scores than TRIZ in the cohesion category. Of note is the fact that whether or not self-evaluations were included in the calculations has a minor impact on only the usefulness category; whereby, the scenario which added the self-evaluations shows DbD as a category winner against both other methods.

Next, results from the participants' answers to three of the walkout checklist questions were tabulated and are shown in Table 7-3. Other walkout checklist questions were not used in this next analysis since: question 1 will be used to assess the impact of time on creativity in Section 7.3.3, question #2 was previously used to assess creativity, question #4 was used to gauge previous participant design experience, and question #7 was a placeholder for any comments the participants may have wanted to share. This same reasoning will be used when discussing results from experimental run 2, in the next section.

Table 7-3: Experiment run 1 walkout checklist results

Buy

Method Method

Design Comfort Re-use Systems TRIZ DbD 4.33 4.33 4.50 2.67 2.50 3.25 4.33 2.33 4.00

Results in Table 7-3 indicate that participants using the DbD method were more satisfied with their final concept design and also felt more comfortable using the DbD method, as is shown by the higher scores in those two categories. On the question of whether they would want to re-use the design method in the future, the results show that participants would want to re-use the 120

systems method the most, with TRIZ being the least favourable, and DbD scoring in the middle. This is not surprising given that the DbD method was new to them and quite different to any other current method. One can note that while the DbD method scores lower than systems design in the re-use category, the values show that it was quite closely scored. This may indicate that participants that had slightly more preparation and background knowledge or experience with the DbD method may score it higher in this category; however, there is not enough data to confirm this. Given that the DbD method scores the highest in 2 out of 3 questions and is in the middle for the 3rd suggests that the DbD method outperformed the other two methods.

Finally, the average time spent by participants for all three design methods was calculated. Here, the DbD method performed the best, scoring the lowest average time of 8.50 hours, with TRIZ taking an average of 11.67 hours and systems design 14.83 hours. These results reinforce the author's hypothesis that the DbD method allows for faster concept design over other methods. Furthermore, since this variability in time spent appeared to be a factor in the final results of the creativity assessments, the phenomenon was explored in more detail and will be discussed further in Section 7.3.3. 7.2.2 Results From Experimental Run 2 Given that the 2nd experimental run included only two different methods, a direct analysis between them was possible; i.e.: placing the DbD method in direct contest against the conventional design method. As previously mentioned, the means of the assessments were calculated in each of the three creativity categories and for the two scenarios of: assessors' evaluations only, and assessors' evaluations plus participants' self-evaluations. The mean values of the DbD method and the conventional design method were compared; the results of that comparison are shown in Table 7-4.

121

Table 7-4: Conventional method vs. DbD creativity assessments

Novelty Usefulness Cohesion Committee only Conventional Committee + self Committee only Committee + self 4.38 3.75 3.42 3.50 3.13 3.42 3.83 3.78 3.13 N/A 3.25 N/A

Design by DNA

As can be seen in Table 7-4, the DbD method accrues higher scores in both the usefulness and cohesion categories, while the other design method wins out in the novelty category. Inclusion of self-evaluations in the calculations does not affect the results here.

Next, results from the participants' answers to three of the walkout checklist questions were tabulated, as per experimental run 1, and can be seen in Table 7-5.

Table 7-5: Experiment run 2 walkout checklist results

Buy

Method Method

Design Comfort Re-use Conventional Design by DNA 3.50 4.00 3.00 2.67 3.50 3.00

These results seem to indicate that participants using the DbD method were more satisfied with their final concept design, as shown by the higher scores when asked if they would want to purchase their design if it were available on the market today. On the other two questions of comfort with the design method used, and if they would want to re-use that method in the future, the results show that participants seemed to be more comfortable with the conventional method. This is not surprising given that the DbD method was new to them and quite different to any other current method.

As mentioned in Section 7.1.2, this experimental run also asked participants to complete the NASA TLX worksheet, which measures how tasked a person is for the current activity. The worksheet has a total of six questions to measure the task load (burden), which can be seen in 122

Appendix C5; higher values indicate a higher loading and thus, a more arduous task and a less desirable outcome. Results from the worksheets were tabulated and can be seen in Table 7-6.

Table 7-6: NASA TLX worksheet results

Mental Physical Temporal Demand Demand Demand Conventional Design by DNA 7.5 7.17 2.5 1.17 4.75 4.00

Performance Effort Frustration 5.25 3.33 6 6.83 3 2.33

As is seen in Table 7-6, the DbD method scored better in 5 out of 6 of the task loading measures, showing that on average, participants using the DbD method were less tasked than the users of the conventional design method. Even though the DbD method showed a less desirable result in the "effort" category, it is an expected result given that this was the first time that the participants had seen the DbD method and therefore, would have had to put more effort into the process. A point of future consideration would be to see how this measure changes with higher participant familiarity with the DbD method. The author hypothesizes that if participants had more experience with the DbD method, then results for the measure of effort would favour the DbD method, making it a winner in every facet of task loading.

7.3 Discussion of the Results
To ensure that the results from the previous section were statistically significant, t-tests for checking confidence were conducted. In cases where the variance is unknown in the two populations and the sample sizes are less than 30, a t-test is preferred over the z-test and is commonly used to compare the two populations to determine if the conclusions for the hypothesis are statistically significant. Given this pilot experiment was comparing the assessor values for creativity, the one-tailed t-test is used, which tests if the mean of one population is higher than the mean of the second population. In the one-tailed t-test the null hypothesis (H0) is that m1-m20 and the test hypothesis (Ha) is m1-m2>0. Here, the desired result is to be able to reject H0. In engineering, a confidence level of 95% is generally used for the t-tests. 123

When viewing the results of the t-tests for this pilot experiment, the null hypothesis was not rejected in all cases and thus, a definitive conclusion for the significance of the results for this pilot experiment was not reached. Given this, the author felt that valuable information for this data set would be to determine at which level of confidence the null hypothesis could be rejected in each of the measures. Therefore, the results in this section will show the calculated confidence levels at which the null hypothesis can be rejected and the conclusions verified to be significant. The notion of looking directly at the confidence levels associated with each data set was originally used by Fisher [108] as a method to obtain more useful data from a statistical analysis than is obtained by looking only at the rejection of H0. In particular, one can identify specific areas of future work by considering data shown to have the lowest confidence levels.

This confidence level is reflected in the resulting one-tail P value from the t-tests, where the confidence level = (1-P)*100, given as a percent. The confidence levels were calculated for all three creativity factors, in both scenarios, as well as for the walkout checklist questions. 7.3.1 Statistical Analysis of Experimental Run 1 After the confidence was calculated for the three creativity categories across both scenarios, the results were tabulated, as can be seen in Table 7-7 and Table 7-8.

Table 7-7: Systems vs. DbD creativity assessment confidence levels

Novelty Usefulness Cohesion Committee only 93.19% 84.44% 67.34% 83.19% N/A

Committee + self 89.55%

Table 7-8: TRIZ vs. DbD creativity assessment confidence levels

Novelty Usefulness Cohesion Committee only 99.49% 58.65% 51.47% 87.44% N/A

Committee + self 93.05%

124

As can be seen by Table 7-7 and Table 7-8, all but one of the calculated confidence levels in the range (51.47% - 99.49%) fall below the test value of 95%. Thus, the null hypothesis would generally be rejected in those cases. However, the resulting confidence levels do suggest that the results may be useful and that repetition of the experiment with larger sample sizes is warranted. It is interesting to see a confidence as high as 99.49% in this pilot experiment, which further backs the notion that the results are positive. Another interesting conclusion is that the confidence levels in the results from the scenario with the addition of the self-evaluations are lower than those of the committee alone. These lower values might reflect the personal bias inherent in self-evaluations, which might lead to greater variances, but this sociological topic is beyond the scope of this dissertation. Next, confidence levels were calculated for the results of the three walkout checklist questions, listed in the previous section. The results are shown in Table 7-9.

Table 7-9: Experiment run 1 walkout confidence levels

Buy Design Method Comfort Method Re-use Systems vs. DbD TRIZ vs. DbD 59.55% 59.55% 75.20% 77.41% 71.19% 98.47%

Values of 59.55% to 98.47% can be seen in Table 7-9. As before, these values suggest that the results are of interest, especially with one resulting in rejection of the null hypothesis. 7.3.2 Statistical Analysis of Experimental Run 2 Tabulated results for confidence levels in each of the three creativity categories and for both scenarios of experimental run 2 are shown in Table 7-10.

Table 7-10: Experiment run 2 creativity assessment confidence levels

Novelty Usefulness Cohesion Cohesion Committee only 88.05% 84.07% 77.28% 55.44% N/A 96.83% N/A

Committee + self 65.80%

125

As can be seen by Table 7-10, the calculated confidence levels for the three creativity assessments are in the range 55.44% - 88.05%. As with experimental run 1, these results are lower than the rejection value of 95%, but suggest that results may be useful. It is interesting to note the final column of the table; which recalculates the confidence for the category of cohesion, termed cohesion, when the single outlier data point is removed. We see here that the confidence in the result increases significantly, from the original 55.44% to 96.83%, whilst the resulting mean with the outlier removed continues to show that the DbD method scores higher. As with experimental run 1, confidence levels for the scenario with the added self-evaluations are also lower; again, this is most likely due to the bias in self-evaluations.
Table 7-11: Experiment run 2 walkout confidence levels

Buy Design Method Comfort Method Re-use Confidence 70.46% 60.56% 86.39%

Table 7-11 reflects the confidence level results for the questions that were asked on the walkout checklist. Similarly to the creativity assessments, the confidence levels for the questions ranged between 60.56% and 86.39%. Again, these are lower than the test value of 95%.

For this experimental run, the confidence levels were also calculated for each of the 6 measures of the NASA TLX worksheet. Results are shown in Table 7-12.

Table 7-12: NASA TLX worksheet confidence levels

Mental Physical Temporal Demand Demand Demand Confidence 75.25% 87.49% 64.49%

Performance 77.69%

Effort 70.82%

Frustration 75.25%

As with the other calculated confidence levels for this experiment, Table 7-12 shows a range from 64.49% to 87.49%, which are again, lower than the test value. It is not surprising that the highest confidence value was in the measure of physical demand, since there is almost no demand on people in a setting such as this experiment and all participants scored very nearly the same. 126

7.3.3 The Effect of Time on the Creativity Results The author noticed that in experimental run 1, some participants took substantively longer than others to perform the design task: while they were recommended to spend 7-8 hours, the actual range of total time spent ranged between 6 and 17 hours. This kind of variation did not happen in run 2 because of its fixed duration. Also, the participants that had the longest times spent on the experiment also had higher scores in the creativity assessments. Thus, it occurred to the author that the amount of time spent may have affected the quality of the final designs that were submitted and, therefore, any conclusions that might be drawn about the relative ranking of the DbD method with respect to the other methods may have also been affected. It stands to reason that, within certain limits, the more time one spends on a design problem, the better one's results may be. There are, however, other possible influences on the quality of design as well, such as: previous design experience, distractions during work periods, availability of information, etc. The effects of time on the outcomes of the experimental runs becomes evident if one compares the results for run 1 (large time variability) vs. those of run 2 (time consistency); whereby, run 1 shows the other methods being nearly even with (in the case of TRIZ) or scoring higher than (in the case of systems) the DbD method, while run 2 shows DbD outscoring the conventional method. Given the discrepancies in results between the two experimental runs and given the large time variability in run 1, it is reasonable to assume that time spent has some effect on the results.

The author was unable to control for these factors or even to know the proportional effects each such factor may have, with the available data from the experiments. However, if it is the case that time spent and other factors all contribute to design quality, then it is also the case that the influence of time spent can only vary between 0% and 100% influence, and most likely between some small, but non-zero value and some large, but less than 100% value. Here, 0% influence would imply that there is no correlation between time spent and results; whereas, an influence of 100% would mean that time is fully responsible and that all results would be normalized by the time spent. The author will refer to this phenomenon as the temporal influence.

If we maintain that the first assumption is true; i.e., that time does indeed have an influence, then we must find the shape of the line that represents the amount of influence time has with respect 127

to the increase in total time spent. In other words, whether the effect of time has diminishing returns or if it is linear across the range. However, since no other experiments have been conducted in this area and since the information from this experiment is not sufficient enough to empirically deduce the shape of the graph, then the assumption will be that the effect of time on the results is linear. This is a reasonable assumption since: 1) there is no other data to suggest otherwise and 2) the range of times shown in this experiment does not vary widely enough to presume otherwise.

Since it has been reasoned that time spent does indeed have an effect on the outcome of design and that the influence of time can be presumed to be linear, then the next task is to show how this time effect morphs the results. For this, the original data is normalized based on the total time spent via Equation 7-1:
 =       Equation 7-1

Where, ND is the new data arising from the normalization, OD is the original data from the experiment, tmin is the shortest recorded time spent on the experiment, t is the time spent for that data sample, and n is a counter denoting the sample. This was done for all of the creativity assessments for each participant. The new data was then collated and compared in the same manner as the original data and the results tabulated, as is shown in Table 7-13.

However, this only accounts for the case where time is 100% responsible for the difference in results. There also exists the notion, as was posited, that the influence of time may be anywhere in the range of 0% to 100%. Thus, the data must be analyzed by varying the influence within this range. To do this, Equation 7-2 was used:
 =    - 1   + 1 

Equation 7-2



Here, TI represents the amount of temporal influence, as a percent. Microsoft Excel was used to run this equation with the original data in order to populate tables of new data with a coarse scale of varying TI. For this, values of 25%, 50%, and 75% were used as a first pass. The reader is reminded that a value 0% for TI implies that the data is the original data (i.e. not augmented by 128

the elapsed time) and that the case where TI is 100% was already calculated from Equation 7-1. These new tables showed that results for the creativity assessments did indeed change as TI was changed. Results from these tables are not shown since they only show that time is an influence, but not where changing TI had interesting outcomes; such as the key points at which the rankings of the methods changed.

If these key points can be found where the time variability influences the final rankings of the three design methods, then we can start to see how the variability in the time spent by the participants in run 1 affects the experiment outcome for that data set.

The author has attempted to calculate the impact of varying the influence of time spent by normalizing all data such that we are able to see this temporal impact at several key points; namely, 100%, 20%, 12.5%, and 8.3%, with 0% being the original data. It is at these key points that we can see changes in the results occur, as can be seen in Table 7-13 through Table 7-16, with Table 7-17 being a reiteration of the original data, or 0% TI, for ease of comparison.

Table 7-13: 100% temporal influence on creativity assessments

100% Temporal Influence Novelty Usefulness Cohesion Systems Design Committee only Committee + self Committee only Committee + self Committee only Design by DNA Committee + self 1.502 1.506 2.213 2.012 2.217 2.300 1.516 1.543 1.888 2.137 2.883 3.256 1.516 1.516 1.499 1.499 2.817 2.817

TRIZ

129

Table 7-14: 20% temporal influence on creativity assessments

20% Temporal Influence Novelty Usefulness Cohesion Systems Design Committee only Committee + self Committee only Committee + self Committee only Design by DNA Committee + self 2.914 2.889 3.459 3.150 2.820 2.883 2.883 2.914 2.960 3.341 3.194 3.673 2.883 2.883 2.291 2.291 3.080 3.080

TRIZ

Table 7-15:12.5% temporal influence on creativity assessments

12.5% Temporal Influence Novelty Usefulness Cohesion Systems Design Committee only Committee + self Committee only Committee + self Committee only Committee + self 3.211 3.176 3.670 3.344 2.905 2.968 3.164 3.194 3.143 3.545 3.280 3.773 3.164 3.164 2.419 2.419 3.162 3.162

TRIZ

Design by DNA

Table 7-16: 8.3% temporal influence on creativity assessments

8.3% Temporal Influence Novelty Usefulness Cohesion Systems Design Committee only Committee + self Committee only Committee + self Committee only Design by DNA Committee + self 3.388 3.348 3.794 3.457 2.954 3.017 3.331 3.361 3.249 3.665 3.329 3.831 3.331 3.331 2.494 2.494 3.209 3.209

TRIZ

130

Table 7-17: 0% temporal influence on creativity assessments (original data)

8.3% Temporal Influence Novelty Usefulness Cohesion Systems Design Committee only Committee + self Committee only Committee + self Committee only Design by DNA Committee + self 3.83 3.78 4.08 3.72 3.06 3.13 3.75 3.78 3.50 3.94 3.44 3.96 3.75 N/A 2.67 N/A 3.31 N/A

TRIZ

It was found that for the range of influence of time spent between 0% and 8.3%, the resulting ranking of the design methods does not change. In the range of 8.3% to 12.5%, the DbD method starts to overtake the other methods in the usefulness category, under scenario 1 (i.e.: assessment via committee only). Further, above 12.5% and below the next key threshold of 20%, the DbD method is shown to overtake the other methods in the cohesion category. Finally, the DbD method outperforms both other design methods in all categories with any temporal influence factor above 20%. While the results have not been analyzed further, there is reason to believe that the results as presented here support the claim that DbD can perform well compared to other design methods, given a reasonable estimation for the temporal influence.

Lastly, if we then compare the results of the temporal influence on experimental run 1 with the original results of experimental run 2 (negligible time variation), it can be seen that the results directly coincide when the temporal influence for run 1 is between 12.5% and 20%. Thus, it can be concluded that a reasonable estimate for the effect of time on the outcome of a design task is probably in the range of 12.5% to 20%.

7.4 Conclusions Drawn From the Experimental Analysis
When comparing the results of the creativity assessments of experiment run 1 to run 2 and factoring in the temporal influence, one can see that for any temporal influence factor above 131

12.5%, the results of both experimental runs coincides. Which is to say that, for any value above 12.5%, the results seem to indicate that it is possible that the DbD method may be superior to other methods in the creativity categories of usefulness and cohesion. Though the DbD method seems to fall short of the other methods in the novelty category for both experiments, the author hypothesizes that this is due to the fact that the participants were not well versed enough in the DbD method to allow them the broadest scope of its uses, which would hinder the ability to generate the most novel solutions. It is also possible that the participants using the DbD method were not given enough supplemental materials to fully explore the realm of concepts, which would also explain the lower scores for novelty.

Although participants were asked to complete the hourly checklists, the data collected from that source was not used in the analysis presented here. The author felt that the amount of data available in those checklists and the implications of that data was beyond the scope of this research and better left to future work. The author believes that more research and analysis is needed for that particular data set before publishing any results.

Other future work stemming from this study includes running a full-scale experiment to better validate the results and conclusions of the pilot experiment that have been presented here, keeping in mind the challenges associated with such an experiment, as outlined at the start of this chapter. Also of interest are experiments to investigate the difference in results if another experiment is run with the same participants, using the same methods. Here, it might be possible to see how results reflect the increased experience and familiarity that participants have when engaging in a second, similar design study.

Finally, there exists the possibility of using the same experimental procedure outlined here to evaluate other hypotheses about design, such as: the effect of domain knowledge on results, the effect of prior experience in the tested design method, whether or not surroundings play a role (i.e.: if the participants are in a neutral setting or a familiar setting, such as their own homes/offices), more investigation into the temporal influence, what are the aspects responsible for differing novelty scores across participants, etc.

132

Chapter 8
Concluding Remarks

Chapter 8 Concluding Remarks

133

134

8.1 Future Work
The research conducted in this dissertation highlights several areas of interest for future work. Here, the author expands on points of future work that were touched on throughout the dissertation.

In the concept generation phase, the author mentioned the possibility that a computer might be used for very simple design problems and/or ones which have very precise performance envelopes embedded into the gene patterns. The computer algorithm could follow a process, similar to one that the designer uses, by comparing the problem requirements with the performances of each embodiment for a gene and selecting the one which has the highest probability of performing well. While this may result in a theoretically "best" concept, the role of the designer would still be required to check the result and ensure a good product is designed. Detailed information of the sort required for computer-based design, such as that being suggested, would require more precise information to be included into the performance envelopes of the gene embodiments.

While the formulation of the fitness space allowed for possibility of using a boundary layer to model the boundary between fit and unfit regions of a balance variable, the scope of the work did not allow for this to be delved into further. Thus, a topic of future work might be to investigate the use of a boundary layer in the formulation of the balance variable and also to analyze any implications this might have on the overall structure and use of the fitness space as an evaluative tool.

Further, the author recognizes that the example for the use of the FS in Chapter 6 was contrived for the purposes of illustration and that it would be important to demonstrate the use of the FS in a real-world example. However, the work involved and the industry participation required to create such an example is far too large to be included in this dissertation. Thus, it is left as future work.

135

An area of future work stemming from the pilot design experiment in Chapter 7 would be to conduct a full-scale experiment to validate the findings presented in this research. Also of experimental interest would be to further investigate the effect that time has on the outcomes of the design process, with particular focus on further development of the temporal influence notion.

Finally, through the course of the pilot experiment, results from the completion of the hourly checklists led to a source of data which was collected, but not used in the analysis presented in this dissertation. The author believes that the amount of data available in those checklists and the implications of that data might provide interesting insight into the moment-to-moment activities occurring through the concept design process and that this information may highlight areas where the process can be improved.

8.2 Conclusions
In conclusion, it has been shown that products have specific elements that are designed to fulfill certain functional properties. This was likened to a gene which defines a certain characteristic or function in a living organism. Further, organisms have many genes that interact on more complex levels to describe their more complex functioning; similar to subsystems in engineering design. These and other similarities between a design and an organism gave way to a robust and fairly tight analogy between the two domains. Lifecycle processes, internal structure, and even evolution were compared between the two for a new insight into design which was not apparent before. This created a new framework for thinking about design. It was shown that analogies reduce problem complexity, since they reference something that is familiar to the designers. In this way, the genetic analogy should help reduce complexity of current design problems, since the analogy can be drawn at many levels and throughout the entire design process.

Based on this framework, it was then possible to create a new definition of the design of a product and further, an interesting visualization method for the underlying design structure; the design genome. Since the design genome was based off the analogical framework, the structure and elements within it reflected what one would find in an organism. Here, a process for 136

describing what a gene for a product was and further, how to connect those genes into a working structure, was described. For this, patterns were used as the basis for the creation of the genes for a product and linked together to form a pattern language which then represented the design for a single product class. Here, as in other disciplines, pattern languages were used to break down complex problems into easier to handle segments. By using patterns to structure the framework, it was concluded that complexity in design problems should be greatly reduced. Thus, with each gene being represented by an exclusive pattern, it is possible to build a product in accordance with the dependencies inherent within the pattern language itself. It is possible to envision that the design genomes for multiple products may also be linked together in interesting ways to form a higher order pattern language and that this could be done for every imaginable product in existence; a project of immense scale.

This framework, and the patterns created through it, provide a means for which sustainability issues can be addressed. In this way, the issues of sustainability become transparent to the user of the genome. Also, if the proposed gene patterns include sustainability principles and if the anthropogenic selection prefers sustainable solutions, then products constructed with those genes will tend to be sustainable. In this way, the framework in this research provides a way that sustainability can be built into design theory to ensure that it is ingrained in the very roots of the product being designed, instead of being an afterthought (as is currently done in most cases). This is of course dependent on the fact that only the technological aspects of the design and not the cultural aspects were looked at, since designers cannot control for poor cultural influences on products, which may otherwise prefer a non-sustainable solution (such as a person who buys a high gas consumption SUV as a "status symbol" and not for function). Also, since nature is inherently sustainable in its approach to design, then it follows that using the proposed analogous design methods will result in products that include a measure of sustainability.

Further, the ability of the proposed framework to adapt dynamically to changing influences allows for not only sustainable aspects to be further integrated, but also other aspects, such as: human factors, economic aspects, and any future considerations that may develop as design and society change. That is, being based on evolution, the framework itself is designed to evolve over time as design changes to meet shifting societal requirements. 137

Returning to the initial problem of increasing complexity in modern problems, the author then proceeded to show how the design genome could be used within the design process to simplify design problems and act as a tool for designers; not only through the use of patterns, but also through the creation of new design methods, based on the framework. Here, the design genome is used as a way to control the complexity that arises due to the mental models that designers create when practicing design, regardless of any irreducible complexity within the product itself.

Given the definition of the genome, the logical use for it was in the concept generation phase. Here, it was shown that the use of the genome for generating concepts could help streamline this phase of the process and give designers a way to deal with problem complexity. The author called his method of concept generation the Design by DNA Method and showed how to "build" a product from a collection of pre-identified genes, comparable to the way one might manifest a living organism for a certain environment.

Through his study of the different methods used by designers during the design process, the author came across inconsistencies in the way that the concept evaluation and selection step was performed. Given the new analogical framework and the lack of consistency in current evaluation methods, the author proposed his own method for concept evaluation, termed the Fitness Space method. A first step in creating the FS method was to analyze evaluation methods of different authors to highlight underperforming areas and set about to fix these. Among the inconsistencies, it was found that much of the current evaluation methods were laden with subjective measures, leading to sub-standard designs. The FS was proposed as a way to improve upon the concept evaluation step in design and to remove or focus the subjectivity into a single place, thereby improving results.

The difficulties of designing an experiment to test hypotheses about the design process were outlined and a pilot experiment was conducted as a basis for testing a proposed experimental procedure that could be used to validate the author's hypotheses about the DbD method. In this pilot, participants used different concept design methods to find a solution to a given problem (in this case, the design of a bicycle). Though the population sizes were smaller than hoped, the 138

results were promising in that they showed the possibility that the DbD method could be superior to other concept design methods and that conducting a full-scale experiment is warranted. Confidence intervals for all measures were calculated and ranged from 55.44%-99.49%, with the majority falling in the 70%-80% range. While most confidence intervals were below the accepted norms of 95% or 99%, the small sample sizes for the experiment were hypothesized as rationale for the results. Another interesting result from the pilot experiment was the variability in time spent on the experiment during the first run. Here, the total time spent ranged from 6 to 17 hours. Given the large variability, the author posited that the time might have an influence over the results of the experiment and referred to this as the temporal influence. The total time spent was then used to normalize the original data and the results were presented. Multiple points were identified as tipping points for changes in the rank ordering of the design methods and it was shown that with any temporal influence over 20%, the probability of the DbD method to outperform all other tested methods was promising. Also, for any temporal influence over 12.5%, the results of both experimental runs coincide.

This dissertation has shown that both engineering design and pseudo-design in nature share many aspects, such as: a similar design process; life-cycle processes; phenomena like evolution, mutation, and natural selection; a goal of sustainability; and design complexity. Therefore, it is possible to argue by way of analogy that there could be an even greater number of commonalities between natural and artificial design, which have not been discussed here.

Finally, it is hoped that providing this analogical framework for design will promote a means to increase the rate at which we evolve current designs and that our methods of anthropogenic selection will help to ensure that the best possible designs are the ones which flourish. This is feasible since, unlike organisms, there is no specific lifetime for any one generation of a product and that if a new product is designed which is a better fit for its environment, then it will naturally be chosen by humanity. So, it is possible to see that we have within us a means to evolve our own designs, which is faster than that of nature, and that hopefully our designs will soon reach a level of sustainability which is beneficial for our own contextual environment; the Earth.

139

Appendix A
***

Bicycle Timeline

141

142

143

144

145

146

147

148

149

Appendix B
***

Design Genome

151

152

Appendix B1 - Bicycle Genome List
Drivetrain · Drive type o Chain o Belt o shaft-drive o direct-drive o none Braking type o Disc o v-brake o cantilever (side pull) o cantilever (top pull) o reverse crank movement o band Gearing (dependent on design, may not need gearing at all) o Gearing type derailleur and cogset epicyclical/planetary hub gears differential o Gearing location internal · crank · wheel hub external · crank · wheel hub tires o Tire type mountain "10-sp" Cruiser Solid hard shell none o Tire size wide range, pick something suitable or leave for "detailed design"

·

·

·

153

Structure · Frame o Frame form mountain "male" mountain "female" 10-sp "male" 10-sp "female" cruiser recumbent "bmx" Folding o Frame material Aluminum Steel Wood Plastic Carbon fibre Other metal (Titanium) Other composite (Tensegrity) Suspension o Suspension location none front rear seat other (hub) combination o Suspension type coil spring leaf spring shock (gas filled) shock (liquid filled) strut (combination of a spring and shock)

·

154

User-Bike Interfaces · User "mounting" area o User mount material foam gel plastic wood other combination o User mount shape Sleek wide banana other Controls o Propulsion input Foot pedals hand crank rowing o Brake controls Lever Pedal direction knob turn o Gear change controls lever ratchet dial o Steering handlebar steering wheel weight shift frame pivot o Other (the designer may need other controls depending on their features) Other o Quick release parts seat front wheel rear wheel cargo storage water bottle holder 155

·

·

156

Appendix B2 - Bicycle Genome Morphological Chart
Sys Sub-sys Gene
Chain-drive Belt-drive Shaft-drive direct-drive

Gene  Embodiments

Propulsion

Drive                type

Disc

v-brake

side  cantilever

top  cantilever

reverse  crank

band

Brakes

Braking             type

derailleur  and  cogset

epicyclical/planetary

hub  gearing

differential

Gearing        type

Drivetrain

Gearing

crank  -  internal

crank  -  external

hub  -  internal

hub  -  external

Gearing   location

mountain

"10-speed"

cruiser

solid

hard  shell

none

Tire                      type

Tires

Wide  range  of  sizes

Tire                             Size

157

mountain  -  male

mountain  -  female

10-speed  -  male

10-speed  -  female

cruiser

recumbent

"BMX"

folding

Frame               form

Frame

aluminum

steel

wood

plastic

carbon-fibre

other  metal  (titanium)

other  composite  (Tensegrity)

Frame   material

Structure

none

front

rear

seat

other  (hub)

combination

Suspension   location

Suspension

coil  spring

leaf  spring

shock  -  gas

shock  -  liquid

strut

Suspension   type

foam

gel

plastic

wood

other

combination

User  mount   material

User        Mount

sleek

wide

banana

other

User  mount   shape

159

foot  pedals

hand  crank

rowing

Propulsion   input

lever  pull User-Bike  Interfaces

pedal  direction

knob  turn

Brake  controls

Controls

lever

ratchet

dial

Gear-change   controls

handlebar

steering  wheel

weight  shift

frame  pivot

Steering   device

seat

front  wheel

rear  wheel

cargo  storage

bottle  holder

other

Other

Quick-release   parts

161

Appendix B3 ­ Morphological Chart Picture Source List

163

164

Appendix C
***

Experimental Package

165

166

Appendix C1 - Requirements Document
Must Haves
· · · · · · · · · · · · · · must be human powered this is to say that the human must use input at all or mostly all times this does not preclude an electric assist bike or an electric motor which drives the bike while the human input charges a battery or something usable in urban areas (i.e.: areas that will have a high presence of motor vehicles and pedestrians, think downtown T.O.) usable by white collar workers consider what these workers would bring to work each day and need affordances for must be able to travel distances up to 20km one-way able to be secured to common urban bicycle storage/securing devices (i.e.: bike racks and those silly key/loop thingies in T.O.) if your design requires a certain storage/securing type, which isn't one of the two listed above, indicate what it is and if it is common in other urban areas designers may consider storage/securing solutions which are not yet common, but may be soon (i.e.: "Cyclepods") must be marketable to upper-middle class and upper class people that would be in a white-collar job (marketability here can be thought of in terms of including certain features and a given price range) must adhere to ALL safety standards as laid out by the Ministry of Transportation (MTO) if you are creating something with a motor, you must check the MTOs rules on what can still be classified in the cycle range, there are power limits and size limits) users must be able to arrive at their job without tattered/soiled clothes

Would Likes
· · · would like to include environmentally friendly factors, if possible users should be able to use the cycle without arriving at work exhausted/sweaty from their commute o it is up to the designer to think of ways that this can be accomplished would like the cycle to have some interesting technological features suitable for a cycle of this higher calibre o consider that the user will be quite tech savvy and always connected designers are given the choice on whether they wish to make their design easily maintained and serviced by the "handy-man" type users or if they wish it to only be maintained by a dealer/shop o justify your choice

·

Wow Factors
· These are the types of characteristics which "wow" your customer when they see the design. It is unimportant to focus on including these in the design as they only seek to over impress the customer and have little to no affect on overall success of the design. However, adding some wow factors into the design can be great in boosting customer satisfaction as long as the must haves are all present and some or most of the would likes are also included in the design. Wow factors can also distinguish your design from any other design in the marketplace and lead to higher market share for the customer. Customers might indicate a wow factor by saying "wouldn't it be great if the car could also fly?" Incorporate tech connectivity, perhaps rivaling that of the typical car Use your imagination!

· ·

167

Appendix C2 - Bicycle Genes
Drivetrain · Drive type o Chain (often leads to soiled clothes unless covered, easily maintained, possibly unsafe) o Belt (cleaner than chain option, possible safety concern) o shaft-drive (safe, usually internal/clean, little/no maintenance, more costly) o direct-drive (i.e.: pedals attached to the wheel/wheelhub) (limits gearing possibilities and may increase user force input) · Braking type - related genes: electric regenerative, magnetic, drum o Disc (maintenance requires more knowledge than cantilever options, more efficient) o v-brake (common, easily maintained, cost effective, inefficient, more user-friendly than cantilever options, susceptible to defects and alien substances on the rim)) o cantilever (side pull) (easily maintained, cost effective, inefficient, susceptible to defects and alien substances on the rim)) o cantilever (top pull) (common, easily maintained, cost effective, inefficient, susceptible to defects and alien substances on the rim) o backward crank movement (this option cannot be used with a geared hub, more difficult to service) o band (inefficient) · Gearing (dependent on design, may not need gearing at all) o Type - related genes: constantly variable, centrifugal derailleur and cogset (easily maintained, cost effective, usually exposed) epicyclical/planetary (complex, more difficult to service, usually self-contained) hub gears (often internal, more complex than a cogset) differential (usually little/no maintenance, more complex, self-contained) o location (internal and external are split, may have 1 or more options here) internal · crank (complex, requires expertise to service) · wheel hub (complex, requires expertise to service) external · crank (common, easily maintained) · wheel hub (common, easily maintained) · tires o tire type - related genes: treads mountain (more suitable for diverse terrain) "10-sp" (best suited to smooth surfaces and high speeds) Cruiser (best suited to urban areas) Solid (less ride comfort, lower failure rate) hard shell (poor ride comfort, service usually requires full replacement) none (poor ride comfort) o tire size: options are vast, pick something suitable or leave for "detailed design"

168

Structure frame shape - related genes: ladder, monocoque, shell, exoskeleton mountain "male" mountain "female" 10-sp "male" 10-sp "female" cruiser recumbent (high user comfort, higher input efficiency) "bmx" Tricycle (increased usability, often more costly) o Frame material Aluminum Steel (heavy) Wood (eco-friendly) Plastic (lightweight, generally not durable) Carbon fibre (costly, strong) Other metal Other composite (possibly eco-friendly, strong) Suspension o Option - design may incorporate more than 1 option (added suspension options increases user comfort, but decreases input efficiency due to losses) front rear seat none o type - related genes: air ride coil spring (common, maintenance-free, easily fitted, optionally adjustable) leaf spring (uncommon) shock (common, requires some expertise for service, optionally adjustable) strut (the combination of a coil spring and shock into an assembly) quick release parts - design may or may not have any such parts and may have more than 1 (may slightly add to overall complexity, added security, better for storage/transportability/space-saving options) o seat o front wheel o saddlebags o water bottle holder o other o

·

·

169

User-Bike Interfaces o User "mounting" area - related genes: hanging seat foam seat gel seat plastic seat wooden seat banana seat (the huge long ones from kids bikes back in the day) combination of 2 or more options (consider a plastic shell with foam/gel layer) o Propulsion input - related genes: pump, see-saw, rope pull pedals hand crank rowing · Controls o Brake controls - related genes: pedal, "by-wire" (i.e.: electronic with some input) Lever (common, easily serviced, inexpensive, simple) reverse pedaling (more complex, less control over braking force) knob turn (slower response time/potentially unsafe) o gear change controls lever (simple, easily serviced) ratchet (most complex, requires some expertise to service) dial (sometimes referred to as quick-change) (more complex than lever, better user comfort) o steering handlebar (simple, inexpensive, easy to use) steering wheel (higher user comfort weight shift (requires more user awareness, less moving parts) frame pivot (i.e.: the frame itself is on a pivot whereby the front and rear sections can be aligned in different ways to steer in a certain direction) left-right speed control (steering via separately controlling the speeds of left side wheels and right side wheels. only usable in a tricycle configuration. for more details, see the steering systems in a tank or bobcat) o other (the designer may need other controls depending on their features)

170

Appendix C3 - Hourly Checklist
1) What best describes the design stage you are in? 1 Identifying design elements 2 Ideating embodiments 3 Evaluating embodiments 4 Refining ideas and concepts 5 Creating a full product concept

2) Report on progress during this time period

· ·

Briefly touch on what was accomplished A point may be: "selected the drivetrain" or "finished the system diagram"

3) What, if any, obstacles have you come across during this time period?

·

Briefly report on anything that slowed progress

4) At this point, how much time (to nearest half hour) do you estimate you need to finish?

5) Approximately how much time in this period has been spent re-reading the design notes? 1 Little/none 2 Some 3 Fair 4 Lots

171

Appendix C4 - Walkout Checklist
1) Estimate your total time spent on this design problem (round to the nearest 30min interval)

2) How do you think your winning concept rates in terms of: (Use a 1-5 scale with 1 being the worst and 5 being the best) 2.1) Novelty (how novel was your winning concept compared to other products on the market?) · A novel design is: new, original, or surprising

2.2) Usefulness (does your design fulfill some, most, or all of the requirements? How well does it satisfy those requirements?) · A useful design is: appropriate, functional, correct, and valuable

3) You would want to buy your winning concept if it were to be put on the market tomorrow 1 Disagree 2 Somewhat disagree 3 Neutral 4 Somewhat agree 5 Agree

4) Do you have previous design experience? If so, compare the method you used today against what you've used in the past.

5) How comfortable did you feel with using this method for concept design? 1 Very uncomfortable 2 Somewhat uncomfortable 3 Neutral 4 Somewhat comfortable 5 Very comfortable

6) You would want to use this method for concept design again in the future 1 Disagree 2 Somewhat disagree 3 Neutral 4 Somewhat agree 5 Agree

7) Please add any other comments you wish to share about your experiences using this design method.

172

Appendix C5 - NASA TLX Worksheet

173

Appendix D
***

Experiment Data

175

176

Appendix D1 ­ Creativity Scores and Checklist Data

177

Appendix D2 ­ NASA TLX Data

178

Appendix D3 ­ Participant Final Concept Submissions

Experimental run 1, participant 1

179

Experimental run 1, participant 2

180

Experimental run 1, participant 3

181

Experimental run 1, participant 4

182

Experimental run 1, participant 5

183

Experimental run 1, participant 6

184

Experimental run 1, participant 7

185

Experimental run 1, participant 8

186

Experimental run 1, participant 9

187

Experimental run 1, participant 10

188

Experimental run 2, participant 1

189

Experimental run 2, participant 2

190

Experimental run 2, participant 3

191

Experimental run 2, participant 4

192

Experimental run 2, participant 5

193

Bibliography

195

196

[1] [2]

Norman, Donald A. Living with Complexity. MIT Press, Cambridge, MA. 2010. Miller, G.A. "Images and models, similes and metaphors." In Ortony, A. (Ed.), Metaphor and Thought. Cambridge University Press, 1979. Alexander, C. Notes on the Synthesis of Form. Harvard University Press, 1964. Gentner, Dedre. "Structure-mapping: A theoretical framework for analogy." Cognitive Science, April­June 1983, 7(2): pp. 155­170. Pugh, S. Total design: integrated methods for successful product engineering. Addison-Wesley Publishing Company, Workingham, 1991. Ulrich, K.T. & Eppinger, S.D. Product Design and Development. McGraw-Hill, 1995. Alexander, C., Ishikawa, S., and Silverstein, M. A Pattern Language: Towns, Buildings, Construction. Oxford University Press, London, 1977. Dieter, G. Engineering Design. McGraw-Hill, New York, 1983. Pahl, G. & Beitz, W. Engineering Design: a Systematic Approach (2nd Ed.). Edited by Wallace, K., Blessing, L., and Bauert, F., Translated by Wallace, K. Springer-Verlag London Ltd., London, UK, 1996. Suh, N.P. Axiomatic Design: Advances and Applications. Oxford University Press, New York, 2001. Ullman, D. The Mechanical Design Process (3rd Ed.). McGraw-Hill, New York, 2003. Wong, E. David. "Understanding the Generative Capacity of Analogies as a Tool for Explanation". Journal of research in science teaching, 30(10): pp. 1259-1272, 1993. Cosgrove, M. & Osborne, R. "Lesson frameworks for changing children's ideas", Learning in Science: The Implications of Children's Science: pp. 101-111, 1985. Duit, R. "On the role of analogies and metaphors in learning science", Science Education, 75(6): pp. 649-672, 1991. Glynn, S. "Explaining Science Concepts: a Teaching-With-Analogies Model", in S. Glynn, R. Yeanny, & B. Britton (Eds.), The Psychology of Learning Science. Lawrence Erlbaum Associates, New Jersey, 1991.

[3] [4]

[5]

[6] [7]

[8] [9]

[10]

[11] [12]

[13]

[14]

[15]

197

[16]

Alexander, C. The Nature of Order: An Essay on the Art of Building and the Nature of the Universe. Routledge, 2004. Allenby, Brad. "The Ontologies of Industrial Ecology", Progress in Industrial Ecology, 3(1): pp. 28-40. Salustri, F.A. "Using design patterns to promote multidisciplinary design". In Proceedings of CSME International Conference on Multidisciplinary Design in Engineering, 2001. Salustri, F.A. Pattern Template. 23 Nov. 2004. Research notes. Accessed 07 June 2008. http://deseng.ryerson.ca/axiki/Research/Main:Pattern_template. Rogers, D. & Salustri, F.A. "A Quality Function Deployment Method Pattern Language for Efficient Design". In Proceedings of the International Conference on Engineering Design (ICED), Stanford, CA, 2009. Beck, Kent & Cunningham, Ward. "Using pattern languages for object-oriented programs." Technical Report No. CR-87-43, submitted to the OOPSLA-87 workshop on the Specification and Design for Object-Oriented Programming, 1987. Erickson, T. "Supporting interdisciplinary design: Towards pattern languages for workplaces". Workplace Studies: Recovering work practice and information system design, Cambridge University Press, 2000. Jessop, A. "Pattern Language: A Framework for Learning". European Journal of Operational Research, 153(2): pp.457-465, 2004. Goldstein, Jeffrey. "Emergence as a Construct: History and Issues", Emergence: Complexity and Organization, 1(1): pp. 49­72, 1999. Corning, Peter A. "The Re-Emergence of `Emergence': A Venerable Concept in Search of a Theory", Complexity, 7(6): pp. 18­30, 2002. Blitz, David. Emergent Evolution: Qualitative Novelty and the Levels of Reality. Kluwer Academic, Dordrecht, 1992. Lewes, G.H. Problems of Life and Mind (First Series), Trübner, London, 1875. Laughlin, Robert. A Different Universe: Reinventing Physics from the Bottom Down, Basic Books, 2005.

[17]

[18]

[19]

[20]

[21]

[22]

[23]

[24]

[25]

[26]

[27] [28]

198

[29]

United Nations General Assembly. Report of the World Commission on Environment and Development: Our Common Future. Transmitted to the General Assembly as an Annex to document A/42/427 - Development and International Co-operation: Environment. 1987. IUCN/UNEP/WWF. "Caring for the Earth: A Strategy for Sustainable Living". Gland, Switzerland, 1991. http://coombs.anu.edu.au/~vern/caring/caring.html. MacKay, David. Sustainable Energy ­ Without the Hot Air. UIT Cambridge Ltd, 2009. Jabareen, Yosef. "A new conceptual framework for sustainable development". International Journal of Environmental, Cultural, Economic and Social Sustainability, 10: pp. 179-192, 2008. Salustri, F.A. "Sustainability". E-mail to Damian Rogers and Matthew Hunter. 12 Oct. 2008. Conservation Economy. "What is a Conservation Economy?", Conservation Economy. Accessed June, 2008. http://www.conservationeconomy.net. Fish, Frank E. & Beneski, John T. "Evolution and Bio-Inspired Design: Natural Limitations". In Biologically Inspired Design: Computational Methods and Tools, edited by Goel, Ashok K., McAdams, Daniel A., and Stone, Robert B., pp. 287-312. Springer-Verlag, London, 2014. Terninko, J. Step-by-Step QFD: Customer-Driven Product Design (2nd Ed.). St. Lucie Press, Florida, 1997. Kay, James J. "On complexity theory, exergy, and industrial ecology". In Construction Ecology: Nature as a Basis for Green Buildings. Edited by Charles J. Kibert, Jan Sendzimir, and G. Bradley Guy. Spon Press, London, 2002. Soedel, Werner & Foley, Vernard. "Ancient Catapults". Scientific American, 240(3): pp.124-125, 1979. Patel, R.M. & McLeod, A.J. "The Implementation of a Mechanical Engineering Design Interface Using Engineering Features." Computer-Aided Engineering Journal, Dec., pp. 241-246, 1988. Dixon, John R. "The State of Education." Mechanical Engineering, 114(11): pp. 6062, 1992.

[30]

[31] [32]

[33]

[34]

[35]

[36]

[37]

[38]

[39]

[40]

199

[41]

Ferguson, Eugene S. "Designing the World We Live In". Research in Engineering Design, 4(1): pp. 3-11, 1992. Konda, Suresh, Monarch, I., Sargent, P., and Subrahmanian, E. "Shared Memory in Design: A Unifying Theme for Research and Practice". Research in Engineering Design, 4(1): pp. 23-42, 1992. Waldron, Kenneth J. "Secret Confessions of a Designer". Mechanical Engineering, 114(11): pp. 60-62, 1992. Fenves, S.J. & Rasdorf, W.J. "Treatment of Engineering Design Constraints in a Relational Data Base." Engineering with Computers, 1(1): pp. 27-37, 1985. Ausubel, D.P. Educational psychology: A cognitive view. Holt, Rinehart, & Winston, New York, 1968. Nagel, E. The Structure of Science: Problems in the Logic of Scientific Exploration. Routledge, London, 1971. Novak, Joseph D. Learning, Creating, and Using Knowledge: Concept Maps as Facilitative Tools in Schools and Corporations. Lawrence Erlbaum Associates, New Jersey, 1998. Norman, Donald A. The Design of Everyday Things, Basic Books, New York, 2002. Federn, K. "Wandel in der konstruktiven Gestaltung." Chemie Ingenieur Technik 42(11): pp. 729-737, 1970. Schwaninger, Arthur E. & Peasant, Janet L. Modeling the Requirements Process. Systems Exploration Inc. Dayton, OH, 1993. Steward, Donald V. "The design structure system: a method for managing the design of complex systems." Engineering Management, IEEE Transactions on, (3): pp. 7174, 1981. Erkens, A. "Beiträge zur Konstruktionserziehung". VDI-report 72: pp. 17-21, 1928. Franke, H.J. "Konstruktionsmethodik und Konstruktionspraxis: Eine Kritische Betrachtung". In Proceedings of the International Conference on Engineering Design (ICED), 1985. French, Michael. Invention and Evolution: Design in Nature and Engineering (2nd Edition). Cambridge University Press, 1994. 200

[42]

[43]

[44]

[45]

[46]

[47]

[48] [49]

[50]

[51]

[52] [53]

[54]

[55]

Gierse, F.J. "Functionen und Functionen-Strukturen, zentrale Werkzeuge der Wertanalyze". VDI-report 849, 1990. Jakobsen, K. "Functional Requirements in the Design Process". In Modern Design Principles. Trondheim, Tapir, 1988. Laudien, K. Maschinenelemente. Dr. Max Junecke Publishing Bookshop, Leipzig, 1931. Niemann, G. Maschinenelemente (3rd Ed.). Springer, Berlin, 1975. Salustri, F.A., Rogers, D., and Eng, N.L. "Designing as Balance-Seeking Instead of Problem-Solving". Design Principles and Practices, 3(3): pp. 343-356, 2009. Wögerbauer, H. Die Technik des Konstruierens (2nd Ed.). Oldenburg, München, 1943. Tomiyama, Tetsuo & Yoshikawa, Hiroyuki. "Extended General Design Theory". In Yoshikawa, H. and Warman, E.A., Eds., Design Theory for CAD, Proceedings from IFIP WG 5.2 Working Conference on Design Theory for CAD, pp. 95-130, Amsterdam, North-Holland, 1987. Hodgson, Geoff. "Behind methodological individualism." Cambridge Journal of Economics, 10(3): 211-224, 1986. Charlie Rose ­ A conversation with Jeff Hawkins, http://www.charlierose.com/view/interview/3624. Darwin, C. On the Origin of Species by Means of Natural Selection, or the Preservation of Favoured Races in the Struggle for Life. John Murray, London, 1859. Tortorra, G. and Derrickson, B. Principles of Anatomy and Physiology (11th Ed.). John Wiley & Sons, Inc., 2006. McCance, K. and Huether, S. Pathophysiology: The Biologic Basis for Disease in Adults and Children (5th Ed.). Elsevier Mosby, MS, 2006. Johannsen, W. "The Genotype Conception of Heredity". American Naturalist, 45: pp. 129-159, 1911. Simpson, G.G. Tempo and Mode in Evolution. Columbia Univ. Press, New York, 1944.

[56]

[57]

[58] [59]

[60] [61]

[62]

[63]

[64]

[65]

[66]

[67]

[68]

201

[69]

Advanced Civilisation. "Open collaborative design." Adciv.org. 29 July 2010. http://www.adciv.org/Open_collaborative_design. DeLisi, Charles. "The Human Genome Project: The ambitious proposal to map and decipher the complete sequence of human DNA." American Scientist, 76(5): pp. 488493, 1988. International Journal of Life Cycle Assessment. Multiple issues. Springer, London. White, Philip, St. Pierre, L., and Belletire, S. Okala Practitioner: Integrating Ecological Design. Okala Team, 2013. Guidelines for life-cycle assessment: a code of practice. Society of Environmental Toxicology and Chemistry, 1993. Szykman, S., Sriram, R.D., Bochenek, C., Racz, J.W., and Jocelyn, S. "Design repositories: Engineering design's new knowledge base". IEEE Intelligent Systems, 15(3): pp. 48­55, 2000. Hubka, V. & Eder, W.E. Design Science- Introduction to the Needs, Scope and Organization of Engineering Design Knowledge. Springer-Verlag, London, UK, 1996. Hatchuel, A. & Weil, B. "C-K design theory: an advanced formulation". Res. Eng. Design, 19: pp. 181-192, 2009. Cross, N. Designerly Ways of Knowing, Springer-Verlag, London, UK, 2006. Kelley, T. & Littman, J. The Ten Faces of Innovation. Doubleday, NYC, NY, 2005. Mahle, U. "The Path to Invention". Mechanical Engineering, 129(9): pp. 37-38, 2007. Altshuller, G.S. & Shulyak, L. And Suddenly the Inventor Appeared: TRIZ, the Theory of Inventive Problem Solving (2nd Ed.). Technical Innovation Center, Worcester, MA, 1996. De Bono, E. Serious Creativity, HarperCollins, NY, 1992. Jones, J.C. Design methods. John Wiley & Sons, 1992. Osborn, A.F. Applied imagination: principles and procedures of creative problemsolving (3rd Ed.). Scribner, 1963.

[70]

[71] [72]

[73]

[74]

[75]

[76]

[77] [78] [79] [80]

[81] [82] [83]

202

[84]

Roozenburg, N. & Eekels, J. Product design: fundamentals and methods (Vol. 2). Wiley, Chichester, 1995. Betz, J. "Assessing creativity in architectural design: Evidence for using student peer review in the studio as a learning and assessment tool". ASEE Annual Conference, Austin, TX, June 14-17, 2009. Gero, J.S. "Computational Models of Creative Design". Chalmers Design Seminar, University of Toronto, March 19, 2008. Amabile, T.M. "The Social Psychology of Creativity". Journal of Personality and Social Psychology, 43: 997-1013, 1983. Boden, M.A. "What is Creativity?" in M.A. Boden's (ed.) Dimensions of Creativity, pp. 75-117, The MIT Press, 1994. Ward, T.B., Smith, S.M., and Finke, R.A. "Creative Cognition". In R.J. Sternberg's (ed.) Handbook of Creativity, Cambridge University Press, 1999. Suh, N.P. The Principles of Design. Oxford University Press, New York, 1990. Hybs, Ivan, & Gero, John S. "An evolutionary process model of design". Design Studies, 13(3): pp. 273-290, 1992. Dorst, K. & Cross, N. "Creativity in the Design Process: co-evolution of problemsolution". Design Studies, 22: pp. 425-437, 2001.

[85]

[86]

[87]

[88]

[89]

[90] [91]

[92]

[93]

Poon, J. & Maher, M.L. "Co-evolution and Emergence in Design". Journal of AI in Engineering, 11(3): pp.319-327, 1997. Chambers, John, Cleveland, W., Kleiner, B., and Tukey, P. Graphical Methods for Data Analysis, pp. 158-162, Wadsworth, 1983. Simon, Herbert A. "Theories of bounded rationality". Decision and organization 1: pp. 161-176, 1972. Salustri, F.A. Weighted Decision Matrix. 21 July 2013. Research notes. Accessed 21 Apr. 2012. http://deseng.ryerson.ca/dokuwiki/design:weighted_decision_matrix. Bracewell, R.H., and Wallace, K.M. "A tool for capturing design rationale". In Proceedings of the 14th International Conference on Engineering Design (ICED'03), pp. 185-186. Design Society, 2003. 203

[94]

[95]

[96]

[97]

[98]

Shah, J.J., Kulkarni, S.V., and Vargas-Hernandez, N. "Evaluation of Idea Generation Methods for Conceptual Design: Effectiveness Metrics and Design of Experiments". Journal of Mechanical Design, 122: pp. 377-384, 2000. Chiu, I. & Salustri, F.A. "Evaluating Design Project Creativity in Engineering Design Courses". Proceedings of the Canadian Engineering Education Association, 2010.

[99]

[100] Akin, O. & Akin, C. "On the process of creativity in puzzles, inventions and designs". Automation in Construction, 7: pp. 123-138, 1998. [101] Besemer, S.P. & Treffinger, D.J. "Analysis of Creative Products: Review and Synthesis". Journal of Creative Behavior, 15: pp. 158-178, 1981. [102] Brown, D.C. "Guiding Computational Design Creativity Research". In J. Gero's (ed.) Studying Design Creativity, Springer, 2008. [103] Torrance, E.P. Torrance Tests of Creative Thinking, Scholastic Testing Service, Inc., 1974. [104] Chiu, I. & Shu, L.H. "Potential Limitations of Verbal Protocols in Design Experiments". Proceedings of the ASME IDETC/CIE Conference, Montreal, 2010. [105] Harris, M.M. & Schaubroeck, J. "A metaanalysis of selfsupervisor, selfpeer, and peersupervisor ratings". Personnel Psychology, 41(1): pp. 43-62, 1988. [106] Hough, L.M., Eaton, N.K., Dunnette, M.D., Kamp, J.D., and McCloy, R.A. "Criterionrelated validities of personality constructs and the effect of response distortion on those validities". Journal of Applied Psychology, 75(5): pp. 581, 1990. [107] Podsakoff, P.M. & Organ, D.W. "Self-reports in organizational research: Problems and prospects". Journal of management, 12(4): pp. 531-544, 1986. [108] Fisher, R.A. Statistical Methods and Scientific Inference. Hafner Publishing Co., Oxford, England, 1956. [109] Summers, Joshua D., Lacroix, Zoe, and Shah, Jami J. "Case-Based Design Facilitated by the Design Exemplar". Gero, John S. (ed.), Artificial Intelligence in Design: pp. 453-476, 2002.

204

Glossary
This glossary contains terms, relevant to the author's work presented in this dissertation, that may not be commonly used in engineering. The glossary also contains entries for terms created by the author for this work. For each term in the glossary, the page where the term is first used is given in parentheses.

Anthropogenic Selection: The process by which products that have characteristics preferred by human users will tend to increase the likelihood of that product's success in an environment. (page 51)

Balance Variable: A measurable attribute of the form-context ensemble, as it pertains to satisfying the requirements of the given design problem. (page 87)

Design Genome: A description of the functional form of a product, made up of elements which are analogous to genes in living organisms. (page 63)

Emergence: New properties or behaviours arising in systems as a result of interactions occurring at an elemental level and which cannot be explained via simple summation of the individual element properties or behaviours. (page 10)

Fitness Space: The set of all balance variables for a given design problem. This is also taken to mean the set containing the two sets of fit and unfit balance variables. (page 88)

Gene Embodiment: A possible embodiment that may be used to satisfy the identified needs within a gene pattern. (page 79) 205

Gene Pattern: Describes the when, where, how, and why for the use of a particular gene (within specific contexts) and the possible embodiments by which the gene may be manifested. (page 64)

Genetic Algorithm: A computer-based search heuristic that mimics the process of natural selection during the course of the optimization step in the design process. (page 83)

Inter-breeding: A process of the mixing of different breeds on the genetic level, which results in variations in the genetic code and is rendered as new physical characteristics. (page 50)

Lifecycle Assessment: An assessment tool for evaluating the environmental impact of a product through its entire lifecycle, starting from design, through its useful life, and ending with its disposal or recycling. Also known as cradle-to-grave analysis. (page 14)

Mutation: A process by which external influences cause a change in the genetic code for an organism. The change may be beneficial or harmful, spontaneous or induced. (page 50)

Pattern: A pattern describes a process, method, or activity related to creating the artifact that it describes. Patterns can be extremely useful ways to convey information to more people than would be possible with a focused textbook or refereed paper on the subject. (page 7)

Performance Envelope: A set of typical performances, associated with a gene embodiment, that can be expected as a result of using that particular embodiment as a solution to the gene pattern that it is associated with. (page 68)

Quantum Evolutionary Step: The appearance of radically new species or a step along the evolutionary path of a species that is far enough removed from its predecessor that a direct path between the two stages of evolution is not fully realisable. (page 57)

206

Routine Design: The reuse of previous designs containing the same or similar knowledge, since the designer knows what knowledge is needed to solve the problem (i.e.: neither innovative nor creative). [109] (page 20)

Supervenience: A relation that describes situations where the lower-level properties of a system determine its higher-level properties. (page 10)

Sustainability/Sustainable Development: Development that meets the needs of the present without compromising the ability of future generations to meet their own needs. As defined by [29]. (page 11)

Temporal Influence: An empirical factor developed to explain the impact that the variability in time can have on the results of the concept design phase. (page 118)

207

