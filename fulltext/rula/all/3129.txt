INSPECTION OPTIMIZATION OF LOAD-SHARING SYSTEMS

by Maryam L Kassaei, B.Sc., Sharif Unversity of Technology, Tehran, Iran, 2012

A thesis, presented to Ryerson University in partial fulfillment of the requirements for the degree of Master of Applied Science in the Program of Mechanical and Industrial Engineering

Toronto, Ontario, Canada, 2014 Â© (Maryam L Kassaei) 2014

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A THESIS

I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand that my thesis may be made electronically available to the public.

ii

INSPECTION OPTIMIZATION OF LOAD-SHARING SYSTEMS Master of Applied Science, 2014, Maryam L Kassaei, Mechanical and Industrial Engineering, Ryerson University

ABSTRACT

In this thesis, periodic inspection of a load-sharing k-out-of-n system has been studied to obtain the optimal inspection interval using the analytical and simulation approaches. The components of a load-sharing system are stochastically dependent, which makes the analysis of these systems more complex than those with independent components. In order to acquire the optimal inspection interval for the system, two models have been developed to study load-sharing systems with Tampered Failure Rate (TFR) and Cumulative Exposure (CE). The former considers only the current load of the components and the latter accounts for the history of load. Various load intensities are examined to study the effects of this parameter on each model. It is observed that as the load intensity increases, the system needs more frequent inspections. The results also reveal that a system with the CE model requires a shorter inspection interval in comparison to that with the TFR model.

iii

AKNOWLEDGMENT

I would like to express my deepest gratitude to my supervisor, Dr. Sharareh Taghipour for introducing me to the interesting and applicable field of reliability and inspection optimization. Dr. Taghipour has always been encouraging, supportive, and guiding me step by step and patiently through my research. Her enthusiasm into our research area has always inspired me and her willingness to share her expertise has helped me progress in my research and for this I owe her much gratitude. I have benefited immensely from many useful discussions we had. I am also grateful for her critical reviews on this thesis. I would also like to express my gratitude to my husband, Ali Khosousi, for his invaluable comments and reviews as an outside reader which helped me improve this thesis, and for his love and support throughout my studies. I would also like to acknowledge Ryerson University and Department of Mechanical and Industrial Engineering for providing financial support. Lastly, I would like to offer my sincere gratitude to my lovely parents who have always been a source of encouragement and support in my life, my brother, whom without his help and inspiration I would never be in this place, and my sister whose guidance and support has always been valuable for me.

Maryam L Kassaei April 2014

iv

PREFACE

Chapters 2 and 3 of this thesis are the extensions of the following journal and conference papers published/submitted during my Masters studies:

Journal Paper:

M. L Kassaei, S. Taghipour, "Periodic Inspection Optimization of a k-out-of-n Load-Sharing system," IEEE Transactions on Reliability, Jun 2013, under review.

Conference Proceedings:

M. L Kassaei, S. Taghipour, "Inspection Optimization Model for a k-out-of-n Load-Sharing System With Dependent Components," Proceeding of the Industrial and System Engineering Research Conference, 2013.

S. Taghipour, "Optimal Inspection Model for a Load-Sharing Redundant System," Proceedings of the Annual Reliability and Maintainability Symposium 2014.

v

TABLE OF CONTENTS

1. LITERETURE REVIEW 1.1. INTRODUCTION 1.2. THE CONFIGURATION OF COMPONENTS IN A SYSTEM 1.2.1. SERIES CONFIGURATION 1.2.2. PARALLEL CONFIGURATION 1.2.3. K-OUT-OF-N CONFIGURATION 1.2.3.1. LOAD-SHARING SYSTEMS 1.3. RELIABILITY AND MAINTENANCE OPTIMIZATION OF MULTI-COMPONENT SYSTEMS 1.4. RELIABILITY AND MAINTENANCE OPTIMIZATION OF K-OUT-OF-N SYSTEMS 1.5. RELIABILITY AND MAINTENANCE OPTIMIZATION OF LOAD-SHARING SYSTEMS 1.6. INSPECTION OPTIMIZATION MODELS FOR COMPLEX SYSTEMS 2. INSPECTION OPTIMIZATION OF A K-OUT-OF-N LOAD-SHARING SYSTEM WITH TAMPERED FAILURE RATE MODEL

1 1 3 4 4 5 6 7 10 11 12

14

2.1. INTRODUCTION 2.2. PROBLEM DESCRIPTION, OBJECTIVE AND ASSUMPTIONS 2.3. INSPECTION OPTIMIZATION MODELING

14 15 18

2.3.1. DISCUSSING FAILURES AND INSPECTIONS FOR A 1-OUT-OF-2 LOAD-SHARING SYSTEM 19 2.3.2 MATHEMATICAL SOLUTION FOR A 1-OUT-OF-2 SYSTEM 2.4. SIMULATION ALGORITHM
vi

23 27

2.5. NUMERICAL EXAMPLES 3. INSPECTION OPTIMIZATION OF A K-OUT-OF-N LOAD-SHARING SYSTEM WITH CUMULATIVE EXPOSURE MODEL

29

41

3.1. INTRODUCTION 3.2. PROBLEM DESCRIPTION 3.3. SIMULATION ALGORITHM 3.4. NUMERICAL EXAMPLES 4. CONCLUSION AND FUTURE WORK APPENDIX A APPENDIX B REFERENCES GLOSSARY

41 41 43 43 49 52 53 58 63

vii

LIST OF TABLES

TABLE 1:
PARAMETERS OF THE POWER LAW INTENSITY FUNCTION AND THE PROBABILITY OF MINIMAL REPAIR/REPLACEMENT OF COMPONENTS

31

TABLE 2:
MINIMAL REPAIR, REPLACEMENT, DOWNTIME, SYSTEM FAILURE AND INSPECTION COSTS

31

TABLE 3:
ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES, COMPONENT'S DOWNTIME PENALTY FOR 1-OUT-5 SYSTEM,

36

 2

TABLE 4:
ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES, COMPONENT'S DOWNTIME PENALTY 3-OUT-5 SYSTEM,   2

37

TABLE 5:
COMPONENT'S DOWNTIME PENALTY FOR 4-OUT-5 SYSTEM,  ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES,

38

2

TABLE 6:
TOTAL EXPECTED COSTS FOR K-OUT-5 SYSTEMS, WITH

k  1,3, 4 , AND   0,1, 2

39

TABLE 7:
PARAMETERS OF THE POWER LAW INTENSITY FUNCTION AND THE PROBABILITY OF MINIMAL REPAIR/REPLACEMENT OF COMPONENTS

45

TABLE 8:
MINIMAL REPAIR, REPLACEMENT, DOWNTIME, SYSTEM FAILURE AND INSPECTION COSTS

45

TABLE 9:

TOTAL EXPECTED FOR A 3-OUT-OF-5 SYSTEM WITH 

 0.7

AND 

 1.2

46

TABLE 10:
THE AVERAGE OF THE EXPECTED VALUES FOR THE TWO MODELS WITH TWO LOAD INTENSITIES   0.7 AND   1.2

48

viii

LIST OF FIGURES

FIGURE 1: ELECTRICAL POWER DISTRIBUTION, AN EXAMPLE OF ACTIVE REDUNDANCY FIGURE 2: PORTABLE GENERATOR, AN EXAMPLE OF STANDBY REDUNDANCY FIGURE 3: BLOCK DIAGRAM OF A SERIES SYSTEM CONSISTING OF n

2

3

4
COMPONENTS

FIGURE 4: BLOCK DIAGRAM OF A PARALLEL SYSTEM CONSISTING OF n FIGURE 5: BLOCK DIAGRAM OF A 2-OUT-OF-3 SYSTEM FIGURE 6: PIPELINES, AN EXAMPLE OF A LOAD-SHARING SYSTEM FIGURE 7: BLOCK DIAGRAM OF A COMPLEX SYSTEM FIGURE 8: PERIODIC INSPECTIONS OVER LIFE-CYCLE T

5
COMPONENTS

6

7

8

15

FIGURE 9: CASES 1 AND 2, THERE IS A SYSTEM FAILURE IN THE INSPECTION INTERVAL FIGURE 10: CASES 3 AND 4, THERE IS NO SYSTEM FAILURE IN THE INSPECTION INTERVAL FIGURE 11: CASE 5, BOTH COMPONENTS SURVIVE IN THE INSPECTION INTERVAL FIGURE 12: SIMULATION ALGORITHM FLOWCHART FOR TFR MODEL FIGURE 13: TOTAL EXPECTED COSTS FOR   1, 2,...,12 FOR K-OUT-OF-5 LOAD-SHARING SYSTEMS, WHERE k  1,3, 4 , AND   2
ix

21

22

23

30

34

FIGURE 14: TOTAL EXPECTED COSTS FOR   1, 2,...,12 k  1,3, 4 , AND   1 FIGURE 15: TOTAL EXPECTED COSTS FOR   1, 2,...,12 k  1,3, 4 , AND   0

34
FOR K-OUT-OF-5 LOAD-SHARING SYSTEMS, WHERE

35
FOR K-OUT-OF-5 LOAD-SHARING SYSTEMS, WHERE

FIGURE 16: SIMULATION ALGORITHM FLOWCHART FOR THE CE MODEL

44

FIGURE 17: 47 THE EXPECTED COSTS AND THE OPTIMAL INSPECTION INTERVALS FOR THE TWO LOAD-SHARING
MODELS WITH LOAD INTENSITY

  0.7

FIGURE 18: 48 THE EXPECTED COSTS AND THE OPTIMAL INSPECTION INTERVALS FOR THE TWO LOAD-SHARING MODELS WITH LOAD INTENSITY   1.2

x

1. LITERETURE REVIEW

1.1. Introduction
Unreliability is one of the main concerns in industries [1]. Unreliability of a system can cause superficial effects, like the failure of a fuse in the electrical system of an apartment, or serious effects, such as the failure of a medical device in a hospital that may cause disability or even death of a patient. These failures can cause deficiencies in a system in different ways, which has led to development of reliability engineering. Reliability is a measure of performance for a system or its components which ensures that the system is functional over a period of time and under certain conditions. Reliability can be expressed by probability functions [2]. The main purpose in reliability engineering is to avoid or lessen the failure of components and accordingly the whole system. In order to achieve this goal, the reliability of the system needs to be improved, which signifies the importance of inspection optimization and maintenance. This topic is the main focus of this study. Many different techniques are used by engineers to design a system which can satisfy a minimum level of reliability. One of the most common and cost-effective design techniques is redundancy configuration [3]. Redundancy is the existence of alternative ways to perform a required function in a system. Multi-processor computers, multi-engine machines, multi-engine aircrafts, and electric generators are some examples of redundant systems. Redundancy can be categorized into two types, listed below [4]:

1

1. Active redundancy: In this type of redundancy, there are  components in the system operating simultaneously,  out of which are required in order for the system to function, and the remaining components are supporting the system. Electrical power distribution is an example of the active redundancy. Several power lines connect each facility with customers. Each power line includes monitors and circuit breakers. The combination of power lines provides excess capacity. Whenever an overload is detected the circuit breakers disconnect a power line and power will be distributed among the remaining lines (Fig.1). Communication systems processors are another examples of the active redundant systems.

Figure 1: Electrical power distribution, an example of active redundancy (http://www.schneider-electric.com/products)

2

2. Standby redundancy: In this type of redundancy, there are  components in the system,  out of which are active and operating simultaneously, and the remaining components are inactive and on standby. Whenever an active component fails, one of the inactive components takes over the workload. If the failed components outnumber the inactive components, the system will fail. The standby generator (Fig.2) can be considered an example of this type. Whenever the main power source shuts down, the generator will produce power to avoid power outage.

Figure 2: Portable Generator, an example of standby redundancy (http://www.powermate.com/generators/)

1.2. The Configuration of Components in a System
A System is usually represented as a set of different components arranged in Series, Parallel, k-out-of-n, or any combination of these. Therefore, before any analysis, the structure and reliability block diagram of the system should be fully understood. The reliability block diagram is used to
3

show the arrangement of components and their functional relationship. Different system configurations are discussed in the following section, and their block diagrams are presented.

1.2.1. Series Configuration
In a series system, every single component must be operational in order for the system to work. In this configuration, even if only one component fails, the entire system will fail consequently. Hence, the reliability of such systems is the same as the least reliable component. Series configuration represents a non-redundant system [5]. A system consisting of a modem, cable and wireless router to provide wireless internet is an example of a series system. All three components should be operational at the same time, otherwise there will be no wireless internet connection. Fig.3 shows the block diagram of a series system with  components.

1

2

3

 - 1



Figure 3: Block diagram of a series system consisting of  components

1.2.2. Parallel Configuration
In a parallel configuration, the system remains operational until all the components fail [5]. This configuration falls under the active redundant systems. Therefore, as the number of elements increases, so does the reliability of the system.

4

As an example of the parallel configuration, consider a lighting unit with a number of light bulbs. The unit delivers light until all the light bulbs fail. Fig.4 shows the block diagram of a parallel system consisting of  elements.

1

2

 Figure 4: Block diagram of a parallel system consisting of n components

1.2.3. k-out-of-n Configuration
A k-out-of-n system is an active redundant system configured in parallel, with the constraint that a minimum of  components must be operational in order for the system to function [6]. A parallel system is basically a special case of a k-out-of-n system, where  is equal to one (1-outof-n). A k-out-of-n configuration is a very popular form of redundancy, which has extensive applications in industrial and military systems. Consider a three-cylinder engine which works if at

5

least two out of three cylinders fire. This engine configuration is a 2-out-of-3 system. Fig.5 shows the block diagram for a 2-out-of-3 system.

1

2

1

2

3

2

1

3

3

Figure 5: Block diagram of a 2-out-of-3 system

1.2.3.1.

Load-Sharing Systems

A load-sharing system, is a k-out-of-n system which is subject to a certain amount of load shared equally or unequally among the system components. In such system, when a number of components fail (less than  -  + 1), the system remains operational and the load is distributed to the remaining components. In a load-sharing system, the survived components experience a higher level of load, and thus higher hazard/failure rates. The components of a load-sharing system are dependent as they share a specific amount of load. An example of a load-sharing system is a system consisting of several pipelines transporting water, oil or gas; whenever a pipeline segment fails, the load of that segment is transferred to the

6

other segments which are still operational (Fig. 6). Therefore, the entire system still continues to work, and the load of the failed segments is equally distributed to the remaining parts, increasing their hazard rates.

Figure 6: Pipelines, an example of a load-sharing system (http://business.time.com)

1.3. Reliability and Maintenance Optimization of Multi-Component Systems
Most technical systems, such as transportation systems used in airplanes and trains, consist of different components in a mixed configuration (Fig.7), which are called multi-component systems. In a multi-component system, the components interact with one another. These interactions create dependency among the components that can be categorized as follows [7]:

1. Economic dependence, occurs when the cost of maintenance and replacement creates dependency among the components. In other words, the replacement of a number of components together may cost less than the replacement of them individually. In fact, it might
7

be cost efficient to replace a functional component at the time of replacing some failed components, which creates dependency among them. Systems like aircrafts, ships, telecommunication, and mass production lines are examples of this type [8].

D

B

G

I

A

E

C

H

J

F Figure 7: Block diagram of a complex system

2. Structural dependence, occurs when the maintenance and replacement of some components require replacement or disassembly of some other parts or components [7].

3. Stochastic/Probabilistic dependence, which happens when the state of a component, such as its workload, affects the life-time distribution of the other components. Stochastic dependence is sometimes referred to as probabilistic dependence or failure interaction. This type of dependency accounts for the relationship between the components of a system and the failure of each component. For instance, the failure of one component increases the failure/hazard rate

8

of other components. In an aircraft with multiple engines, if an engine stops working, the other engines experience higher workload. Therefore, they may fail earlier than their mean time to failure. Components of a load-sharing system are also stochastically dependent since the failure of one component increases the load of the remaining components. This type of dependency is the focus of the present study.

There are many studies [13,14,17] on reliability and maintenance of multi-component systems, however most of these studies consider only one of the dependencies discussed above. The complex nature of the problem makes these models too complicated to be solved or analyzed when considering more than one of these dependencies [9]. In 1986, Thomas [7] put together a survey reviewing the models which were previously proposed for complex systems along with their maintenance and replacement policies. A few years later in 1991, Cho and Parlar [10] reviewed the maintenance of various multi-component models. In 2012, Sarkar et al. [11] reviewed the literature and collected different maintenance policies for complex systems. This article provides a good overview for both single and multi-component systems during the past 50 years. According to these reviews [7,10,11], while there are several publications on multi-component systems with economic dependence, the studies on complex systems with stochastic dependence are sparse. Most of these studies only consider two-component systems, because in practice it is difficult and sometimes impossible to evaluate the actual effect of the failure of multiple components on each other [12]. Murthy and Nguyen [13,14] studied the maintenance of systems considering stochastic dependence. They formulated the failure interactions between components in a two and multi-

9

component systems and developed expressions for the expected operation costs for both finite and infinite life-times. Scarf and Deara [15] developed a model considering both economic and stochastic dependences between components in a two-component system. The policies in their model were age-dependent. They further extended their model to block replacement policies for a twocomponent system [16]. Zequeira and B'erenguer [17] analyzed the maintenance costs for a two-component standby parallel system taking into account the stochastic dependence. In their study, they considered periodic inspections and preventive maintenance. The present work considers stochastic dependence for a complex multi-component system. In this study, the failure of one component increases the failure/hazard rate of other components. The novelty of this work is that this model is applied to multi-components as well as two-component systems.

1.4. Reliability and Maintenance Optimization of k-out-of-n Systems
Studying a k-out-of-n system while including the dependency of the components is very complicated, which is the reason why most studies on such systems assume independent components [18-20]. However, in the real world, many systems are load-sharing [6], which makes the assumption of independency unrealistic [21,22]. There are numerous studies on k-out-of-n systems whose main focus is the reliability and maintenance of such systems. In 1981, Chiang and Niu [23] proposed a recursive formula to find the reliability of a system consisting of independent and identically distributed components. They also provided lower and upper bounds for the reliability of each component and the whole system. Later in 1989, Kossow and Preuss [24]

10

developed a model to find the exact system reliability of k-out-of-n systems with non-identical components. They assumed that the failures are not independent. Sooktip et al. [25] studied the reliability optimization of a system with multiple k-out-of-n subsystems configured in series. The main goal of their study was to maximize the system reliability considering constraints such as cost. Coit and Liu [26] also discussed the redundancy allocation in a series system consisting of multiple k-out-of-n subsystems in order to maximize the reliability.

1.5. Reliability and Maintenance Optimization of Load-Sharing Systems
As discussed earlier, there are numerous studies about the reliability of k-out-of-n systems in the literature [23-27]; however, the studies on load-sharing systems are limited. In 1988, Scheuer [28] proposed a model to estimate the reliability of an m-out-of-n system with independent and identically exponentially distributed components. In this model, the components were independent, but the failure of a component was assumed to cause higher failure rates in the survived components. Few years later in 1998, Liu [29] estimated the reliability of a load-sharing system with general life distributions and non-identical components. In this work, however, the components were assumed to be non-repairable and removed from the system after each failure. Kvam and Pena [30] estimated the properties of a load-sharing system with equal loads, identical components, and continuous distribution function. Yinghui and Jing [31] studied the relationship between the failure rates of components and various loads in a k-out-of-n load-sharing system. They assumed that the components were non-repairable and the failures followed exponential distribution. Shao and Lamberson [32] presented a Markov model to analyze the reliability and availability of a k-out-of-n load-sharing system with repairable components. More

11

comprehensively, Amari and Bergman [21] proposed a method to compute the reliability of k-outof-n load-sharing systems consisting of both identical and non-identical components. They also implemented general failure distributions to their model. In a recent study, Amari et al. [33] presented reliability characteristics of a k-out-of-n warm standby system with identical components subject to exponential lifetime distributions.

1.6. Inspection Optimization Models for Complex Systems
Nowadays, the unreliability of complex multi-component systems is a very important issue since most systems are multi-component, such as medical, transportation, and military systems. In such systems, there are several components interacting with each other. The failure of these systems can have extremely substantial impacts. If the engine of an airplane fails, the result is catastrophic and irreversible. If a medical device fails, the result could be death of a person. By performing inspection and maintenance, a system can operate safely and reliably during a specific period of time. The question though is that how often the inspections should be scheduled. The failure of the components in a system occurs at random, which makes it hard to answer this question. While the components of a system require frequent inspections to avoid failure, the number of these inspections should be optimized due to their considerable expenses. Such schedules need to account for the costs related to failure and inspection of the system. Even though there are numerous studies in the literature discussing the failure and lifetime characteristics of k-out-of-n and load-sharing systems, such as reliability and availability, the inspection and maintenance optimization of such systems have received little attention. Yet, inspection and maintenance optimization models have been extensively discussed for multicomponent systems [12,34-36,39,40].

12

For a 1-out-of-2 cold standby system, Lu et al. [37] developed a periodic inspection optimization model for a system with two identical components using the concept of delay-time modeling. The author assumed that repair time is not negligible and repair is equivalence to replacement. Pham and Wang [38] proposed a model for opportunistic maintenance of a k-out-ofn system with imperfect preventive maintenance in which the components are identically distributed and independent. Unlike [37], in their study, minimal repair is considered and repair time was assumed negligible. In the present study, two models for periodic inspection optimization of an active k-out-of-n load-sharing system with multiple identical components are proposed. The failures follow a nonhomogeneous Poisson process. The stochastic dependence has been taken into account so that each failure of components increases the hazard rates of the remaining components. To the best of the author's knowledge, the present work is the first study developing an inspection optimization model considering dependent components and the possibility of both minimal repair and replacement of the components after failure.

13

2.

INSPECTION OPTIMIZATION OF A K-OUT-OF-N LOADSHARING SYSTEM WITH TAMPERED FAILURE RATE MODEL

2.1. Introduction
To discuss the reliability and inspection optimization of a load-sharing system, one should consider the properties of a load-sharing system and whether the load history affects the components life-cycle or not. According to Amari et al. [33], load-sharing systems can be categorized into two types: Tampered Failure Rate (TFR), and Cumulative Exposure (CE), which will be described below.

1. Tampered Failure Rate (TFR) Model: In this model, the failure rate of a component is independent of its load history. In other words, the failure/hazard rate of a component depends only on the current load of the components. This model was first proposed by Bhattacharrya & Soejoeti [41] in 1989. The focus of this chapter is on the TFR model.

2. Cumulative Exposure (CE) Model: Unlike TFR, this model considers the cumulative effect of the load history applied to each component to find the failure rate and reliability of the system. This model was first proposed by Nelson [42] in 1980. The CE model will be discussed in detail in Chapter 3.

14

In this chapter, inspection optimization of a k-out-of-n load-sharing system with tampered failure rate is studied. The components are assumed to be dependent and identical. This chapter also includes the description of the problem followed by an inspection optimization model developed in this study. The analytical model and failure situations for a 1-out-of-2 system are presented along with the reason why a simulation algorithm is required for solving the model. A detailed description of the simulation algorithm is provided. This chapter also contains several numerical examples and discussions.

2.2. Problem Description, Objective and Assumptions
In the proposed model, a k-out-of-n load-sharing system is considered. The system is inspected periodically at times , where  = 1,2,3, ... ,  . Assume that the system's planning horizon is , which is the life-cycle or life expectancy of the system (Fig.8). Thus,  =  or  = ( - 1) + , where  < . The system starts with a specific amount of load which is equally distributed among all  components.

Figure 8: Periodic inspections over life-cycle T

15

The load function considered here is given by  = (-) , which is a function of  and the number of failed components thus the load is equal  [21,22]. When there is no failed for all components. The parameter





component 0 = 1,

 indicates the intensity of the load distributed among the remaining components. Since the system is k-out-of-n, it remains functional if less than  -  + 1 components fail in an inspection interval. In this case, the failures remain hidden until the next inspection time, when they will be detected and repaired. The load of the failed components is transferred to the survived components. When the number of failed components surpasses  -  + 1, the system stops working immediately, and this is when the system is inspected instantly and all failed components are detected and repaired. The repair of a component at inspection or at a system failure's time can be either a minimal repair or a replacement, depending on the component's age. Replacing a component returns it to the state of as-good-as new, while a minimal repair brings it back to the state just before the failure. In fact, at the time of each inspection, if a repair is needed an age-dependent probability function () is used to decide whether it is a minimal repair or a replacement. In this function,  is an indicator of the age of the component at the failure time. If a system does not fail within an inspection interval, the failed components still decrease the reliability of the entire system, because of the increased load of the survived components. This, in turn, reduces the performance of the system. Therefore, a penalty cost should be considered for the time period that a component is down due to failure. In addition, for each system failure, a considerable penalty cost is assumed.

16

The objective of this work is to develop a model to find the optimum inspection interval  for the system which minimizes the total expected cost incurred over the life cycle . The assumptions made are summarized below: 1. The system is a k-out-of-n load-sharing system, with  = (-)
 

as the load-sharing

function.  indicates the number of failed components at any moment, and  is the intensity of the load. 2. 3. The failures of the components follow a non-homogeneous Poisson process (NHPP). The hazard rate of a component at any moment is (, ) =  (), where  is the age of the component and  is the load function at that moment. 4. When the total number of failures in an inspection interval is less than  -  + 1, the failures are rectified at the next periodic inspection and the load of the failed component is shared by the other working components; thus, their hazard rates increase. 5. 6. 7. 8. Repair times are negligible. There is a penalty cost for each component's downtime. There is a penalty cost for system failures. The failed component is minimally repaired or replaced according to its age by using the probability function (). 9. System is inspected periodically at times  where  = 1,2,3, ... , . 10. The last inspection takes place at the end of the life-cycle .

17

2.3. Inspection Optimization Modeling
The total expected cost incurred over the system's lifecycle consists of the following:      Cost of inspections, Cost of minimal repairs, Cost of replacements, Penalty cost for downtime of the failed components, Penalty cost for system failures.

Consider  to be the cost of one inspection, therefore the total inspection cost is:

  = ( +    ) Ã 

(1)

In Eq.1,  is the number of periodic inspections. The number of system failures is also added since whenever a system fails an inspection takes place. The following costs are assumed given:

-  : Cost of one inspection, -  : Cost of minimal repair of a component, -  : Cost of replacement of a component, -  : Penalty cost for downtime of a component per unit time, -  : Penalty cost for each system failure.

 The total expected cost incurred over the life-cycle  is indicated by [ ] and is as follows:

18

 ] [ = ( +     ) Ã 

+      Ã  +    Ã  +  Ã  +     Ã  (2)

2.3.1. Discussing Failures and Inspections for a 1-out-of-2 Load-Sharing System
To solve Eq.2, obtaining different expected values are needed. To explain how these expected values are obtained over the life-cycle , assume that the system is parallel with only two components, A and B, which is equivalent to a 1-out-of-2 system with initial ages 0 =  and 0 = , respectively. Also assume that there is only one inspection interval of length  in which  =  =  . The two components may or may not fail during the inspection interval . This arises the five following cases:



Cases 1 and 2:

Both components fail in the inspection interval (Fig. 9). After the failure of the second component, the system fails. These two cases may seem to be similar whereas they have different outcomes. Components A and B do not necessarily have the same initial ages at the beginning of the interval, even though they both have been subject to the same amount of load; thus, their hazard rates are different since they have different initial ages (assuming the hazard parameters are the same for all components). The probability of the system failure depends on the sequence of the failures. In other words, the expected number of system failures may be different when component A fails first (Case 1)
19

compared to the case when component B fails first (Case 2). When component A fails, its load is transferred to component B after the failure time (i.e. 1), which increases component B's hazard rate. When component B fails, the system stops working and both components are inspected and are either minimally repaired or replaced. For component A, at the time of system failure, the probability of a minimal repair is ( + 1 ) and the probability of a replacement is  ( + 1 ) = 1 - ( + 1 ), in which  + 1 and 1 are the age and the uptime of component A at the time of failure, respectively. For component B, at the time of system failure, the probability of a minimal repair is ( + 1 + 1 ) and the probability of a replacement is  ( + 1 + 1 ) = 1 - ( + 1 + 1 ), in which  + 1 + 1 and 1 + 1 are the age and the uptime of component B, respectively. Therefore, at time 1 + 1 , the number of minimal repairs, replacements, uptime, and downtime of the two components are known. When components A and B are repaired, the system continues to function, so the next step is to obtain the required expected values over the remaining interval, i.e.  - ( 1 + 1 ). In other words, if  is a random variable of interest, for example the number of minimal repairs or replacements, then:

[  ] = [ 1+1 ] + [ -1 -1 ]

(3)

Furthermore, at the time of system failure, the failed components are repaired, so their ages might not be the same due to their different failure times and maintenance actions (whether it is a minimal repair or replacement). Afterwards, the system becomes completely operational with the two components working with the same amount of load.

20

System failure may occur many times in the inspection interval , therefore; obtaining the required expected values are not analytically feasible (see Section 2.3.2), especially for a system with several components and inspection intervals. A simulation model is developed to solve this problem and acquire the expected values required in the objective function.

Figure 9: Cases 1 and 2, there is a system failure in the inspection interval



Cases 3 and 4:

These cases consider the failure of only one component in the inspection interval (Fig. 10). In these two cases, the system never fails in the interval. The load of the failed component is transferred to the survived component after the failure time. The failed component is only detected and repaired at the inspection time . The number of minimal repairs or replacements at time ,
21

which is one in Cases 3 and 4, is a function of the age of the components, i.e.  + 1 (in case 3) or  + 1 (in case 4). In Case 3, the uptime of the components A and B, in the inspection interval , are 1 and , respectively. Similarly, in Case 4, the uptime of the components A and B are  and 1 .

Figure 10: Cases 3 and 4, there is no system failure in the inspection interval



Case 5:

In this case, neither of the components fails in the interval (Fig. 11). There is no downtime and the uptime of the both components is equal to . There is no minimal repairs, replacements and system failures.

22

Figure 11: Case 5, both components survive in the inspection interval

2.3.2 Mathematical Solution for a 1-out-of-2 System
The objective of this section is to derive an analytical solution to find the required expected values in Eq.2 and then explain the computational difficulty of obtaining them, particularly for the case when several components are considered over multiple inspection intervals. First the functions used in the analytical solution will be introduced below:  Pdf and CDF of 1: (the first failure time of component  with initial age ) are as follows:

1 (|, ) = ( + , ) - 
 (|, 1 ) = 1 -  - 
+

+

(,)

(,)

,

(4)

where (, ) =  (). Similarly, the pdf and CDF of 1 are defined as:

1 (|, ) = ( + , ) - 
 (|, 1 ) = 1 -  - 
+

+

(,)

(,)

(5)

23



The probability that a component A or B survive up to  given their initial ages are  and , is defined as follows:
 (|, 1 ) = (1 = |0 = , ) =  -   (|, 1 ) = (1 = |0 = , ) =  - 
+

(,)

+

(,)

.

(6)

For simplicity, it is assumed that the failed components receive only minimal repair after a failure detection. Let : 1 (, , ) = [|0 = , 0 = ]. (7)

To develop a formula which can be used generally to find the expected value of any random variable of interest  , a place-holder function (, ) is considered. This function's value changes according to the random variable of interest  , like the number of minimal repairs or uptime. Therefore, by using this function the general formula remains the same for all random variables, and the only function that changes accordingly is the place holder function. By knowing all the definitions, it can be shown that:

1 (, , ) =
 0 -  { (,  + ) + 1 ( -  - ,  + ,  +  + )}1 (|, 0) 1 (|, 0) 1 (| + , 1) - 0  { ( + , ) + 1 ( -  - ,  +  + ,  + )}1 (|, 0) 1 (|, 0) 1 (| + , 1)

 
0  0 

1

+ 

2

  +  (, ) 1 (|, 0) 1 ( - | + , 1) 1 (|, 0) 0    +  (, ) 1 (|, 0) 1 ( - | + , 1) 1 (|, 0) 0

3

4

24

 +(, ) 1 (|, 0)1 (|, 0).

5

(8)

The terms indicated in Eq.8 are corresponding to the five different cases in Section 2.3.1. Assuming that  =  = , the place holder function (, ) is defined according to the random variable of interest as follows ( and  are the ages of components A and B):

(a) Expected number of system failures,

0, (, ) = { 1,

 =    =  . 

When  =  =  or y=  = , just one of the components has failed during the time interval and there is no system failure. It should be noted that  and y cannot be greater than , since it is assumed to be equal to the life-cycle of the system.

(b) Expected number of minimal repairs,

0, (, ) = { 1, 2,

 =  =   <  =    <  =  .  <    < 

When  =  =  , both components survived up to time  and there is no failure, and as a result repair is not needed in that time interval. If  <  =  or  <  = , one of the components

25

survived up to time  and the other one failed before  and it needs to be repaired. If both  and  are less than , both components failed and need to be repaired.

(c) Expected uptime (total uptime of both components),

2 min(, ) + max(, ) ,  + , (, ) = {  + , 2,

 <    <   <  =  .  <  =   =  = 

When  <  and  < , both components failed in the time interval so the total uptime is equal to the summation of the ages of the first failed component and the second one. When  <  =  or  <  = , just one component failed before , therefore the total uptime is equal to the age of the failed component plus . Finally, if both components survived up to the time , the total uptime is 2.
Eq.8 shows how 1 (, , ) can be obtained recursively. There is no closed form for 1 (, , ), and numerical approximation methods, such as Simpson's rule can be applied to estimate the integrals. In Simpson's rule, the integration interval is discretized and the integral is estimated according to a rule which depends on the number of discrete points. To obtain 1 (, , ), it is needed to first calculate

1 (, , ) for all 0 <    , 0     and 0    , and then solve a system of linear equations. This
is computationally intensive, especially when shorter intervals are considered for discretization.

Eq.8 can be extended for  inspection intervals as follows:

 (, , ) =

26

 0

- 0  0   { (,  + ) +  ( -  - ,  + ,  +  + )}1 (|, 0) 1 (|, 0) 1 (| + , 1)

 

- 0  { ( + , ) +  ( -  - ,  +  + ,  + )}1 (|, 0) 1 (|, 0) 1 (| + , 1)

+ 

  +  {(, ) + -1 (,  + ,  + )} 1 (|, 0) 1 ( - | + , 1) 1 (|, 0) 0

   +  (, ) + -1 (,  + ,  + ) 1 (|, 0) 1 ( - | + , 1) 1 (|, 0) 0
 +{(, )-1 (,  + ,  + )} 1 (|, 0)1 (|, 0).

(9)

In Eq.9, it is assumed that the length of the last inspection interval is , and those of the other inspection intervals are . As it can be seen,  and -1 are called recursively inside Eq.9. Thus, using Eq.9 and Eq.8 is not computationally feasible for a multi-component system over a long planning horizon. Therefore, to calculate the expected values in Eq.2, a simulation model is developed, which will be described in the following section.

2.4. Simulation Algorithm
As discussed in the previous section, the analytical solution is not computationally feasible for this problem, which is why a simulation algorithm is needed. The assumptions are that the components of a load-sharing system follow a NHPP with a power law intensity function and the hazard rate of a component is (, ) =  () =  (  ) ()
  -1

, in which  is defined as the age

of the component and  as the number of failed components at a specific moment. For the simulation model, it is necessary to generate the times of the first failure for all components. Since the components are identical, the parameters of the power law ( and ) are the same for all
27

components.  , which is the intensity of the load function  = (-) , and the life-cycle,  , are both known. Here is a brief description of the simulation algorithm: at time zero, the first failure time is generated for all components, assuming that the number of failed components is zero ( = 0). The first failure time for a component with initial age  is generated as follows:





   =  [() -  log()]


 

1

1/

- ,

(10)

where  is a random number generated from uniform distribution ( = (0,1)). The derivation of the next failure time, Eq.10, is provided in Appendix A. If the minimum generated failure time of the components is lower than the first inspection interval, the load of the component with the minimum failure time will be transferred to the surviving components and their failure times are regenerated using Eq.10. Then  becomes one. Again, the minimum of all failure times are selected and if it falls within the remaining time before the first periodic inspection, then  =  + 1, and the hazard rates of the remaining components are adjusted and their failure times are regenerated. If the total number of failures is lower than  -  + 1, there will be no system failure, and all the failed components are detected at time . These components will either be minimally repaired or replaced according to their age which is given by () =  - . At the time of inspection () is calculated using the current age of the components and then a random number uniformly distributed within (0,1) is generated. If this random number is greater than (), the component will be replaced, otherwise it will be minimally repaired. The number of minimal repairs,

28

replacements, and uptime of the components will be recorded at each time. If the total number of failures becomes  -  + 1, the system stops working and the number of system failures is increased by one. At the moment of the system failure, all failed components are repaired or replaced,  becomes zero again, the next failure times are generated, and the same procedure continues until the end of the life-cycle  . Fig.12 presents the simulation flowchart for calculating the required expected number of minimal repairs, replacements, system failures, and the expected uptime.

2.5. Numerical Examples
To use the simulation algorithm proposed in the previous section for finding the optimal inspection interval, k-out-of-5 load-sharing systems are considered, where  = 1,3,4 and  = 0,1,2 with load function  = (-) . When  = 2, the survived components are subject to higher load if a component fails, compared to the case when  = 1. Moreover,  = 0 indicates that the system is not load-sharing since always  = 1 . For all systems, the same parameters are considered for the power law intensity function, i.e.,  and  in (, ) =  (  ) () in Table 1. It is also assumed that the probability of minimal repair or replacement of a component is determined based on the function () =  - ,  > 0,   0,   0, where  is the age of the failed component at the failure time. Parameters  and  are also given in Table 1. The same minimal repair, replacement, downtime, system failure and inspection costs are assumed for all systems, which are given in Table 2. The costs and parameters are taken from Taghipour et al. [39].
29
  -1  

, presented

Start for given initial ages, intensity parameters, and , ,  = 0

- For the failed component and the survived components: Uptime=Uptime+ Mintime Add Mintime to their current ages - Current time=Current time+ Mintime - Generate the time of the next failure for the survived components. Next inspection= Next inspectionMintime

Generate time of the first failure for all components Current time=0 ,  = 0 Next inspection= Systemfailures=0 Uptime=0 for all components No

Current time < ?

Stop

Yes Mintime= minimum of failure times of survived components

Yes i=i+1 No

Mintime < Next

No

inspection?

i=n-k+1?
Yes Systemfailures=Systemfailures+1 For the failed component and the survived components: Uptime=Uptime+ Mintime Add Mintime to their current ages - Current time=Current time+ Mintime - Update the age of the failed components according to the maintenance action (minimal repair or replacement) - Keep track of the Minimal repairs and Replacements. - Generate the next failure time for all components considering i=0. - Next inspection= Next inspection- Mintime -i=0 Yes

For the survived components: Uptime=Uptime+ Next inspection Add "Next inspection" to their current ages -Current time=Current time+ Next inspection -Update the age of the failed components according to the maintenance action (minimal repair or replacement) -Keep track of the Minimal repairs and Replacements. - If i>0 generate the next failure time for all components considering i=0. -i=0

No Next inspection= 

T-Current time< ? Yes

mod (Current time,) =0?

Next inspection= -Current time failures 30

No

Figure 12: Simulation algorithm flowchart for TFR model

The objective is to find the optimal inspection interval which minimizes the total expected cost incurring over the life-cycle  = 12 months. Each component is assumed to be as-good-as new at the beginning of the life-cycle, so the initial age  is zero for all components. It is also assumed that the inspection interval , varies from 1 to 12 months. If the life-cycle , which is 12 months, is not divisible by , the last inspection interval is shorter than the preceding inspection intervals. The simulation algorithm is executed 1,000 times. Each required expected value (i.e. the number of minimal repairs, replacements, system failures, and downtime of components) is then the average of the values of the corresponding random variable obtained from the 1000 simulation runs. The expected values for all systems when  = 2 are presented in Tables 3, 4 and 5.

TABLE 1 PARAMETERS OF THE POWER LAW INTENSITY FUNCTION AND THE PROBABILITY OF MINIMAL REPAIR/REPLACEMENT OF COMPONENTS    
3.5 1.3 0.9 0.3

TABLE 2 MINIMAL REPAIR, REPLACEMENT, DOWNTIME, SYSTEM FAILURE AND INSPECTION COSTS
Minimal repair Replacement Inspection Penalty for a system failure Penalty per unit time for each component's downtime $50

$70

$210

$250

$550

First consider the case when  = 2 in k-out-of-5 load-sharing systems, where  = 1,3,4. The total expected costs are calculated using Eq.2 for different values of  = 1,2,3, ... ,12 are shown in Fig.13. As it can be seen in Fig.13, for the 1-out-of-5 system,  = 1 provides the optimal inspection interval with the total expected cost of $7,967.62. However, for the 3-out-of-5 and 4-out-of-5
31

systems, the optimal inspection intervals are  = 3 and  = 12, with the total expected costs of $9,550.12 and $11,485.71, respectively. In the 1-out-of-5 system, more components are allowed to be down without causing a system failure; therefore, more downtime penalty cost is incurred. Thus, for this system, a shorter optimal inspection interval is obtained to avoid high penalty cost due to downtime of the failed components. In addition, when more components are down while the whole system is still operational, the hazard rates of the remaining components are higher in one inspection interval. This also causes the higher number of component failures and eventually system failures in a 1-out-of-5 system with  = 2, compared to the same system with  = 1. The results for the case of  = 1 are shown in Fig.15. The optimal inspection interval  = 2 is obtained for a 1-out-of-5 system with  = 1, which implies that the lower load intensity requires less frequent inspection. The optimal  = 3 is obtained for the 3-out-of-5 systems when  = 2 (Fig.13) and  = 1 (Fig.14). A 3-out-of-5 system compared to a 1-out-of-5 system is prone to more system failures. The more system failures provides also the more opportunity to detect and rectify the failed components; therefore, the less periodic inspections may be required. For the 4-out-of-5 systems when  = 2 (Fig.13) and  = 1 (Fig.14), the optimal inspection interval is obtained to be  = 12. This result is totally expected, since increasing  makes the system closer to a series system (i.e. an n-out-of-n system), in which  has no contribution to the total expected cost incurred over the life-cycle (except the periodic inspection costs). In other words, the system fails whenever a component fails, and there is no downtime for a component; therefore, periodic inspections do not contribute to lessen components failures, unless preventive maintenance is conducted at periodic inspections' times.

32

In order to clearly show the fluctuations in costs for different inspection intervals, Table 6 presents the estimated expected costs for  = 1, 2, 3, ... , 12 for all systems. Now, consider the case when  = 0 (shown in Fig.15), which is similar to a non-load-sharing k-out-of-n system. For the 1-out-of-5 system, the optimal inspection interval is obtained to be  = 3 with the total expected cost of $4,213.95. Comparing this case with the case when  = 2 , it is expected to have a lower number of components failures, because their hazard rates are only function of their ages, and not the load. The less number of component failures implies the less components downtime, and so the system requires less frequent periodic inspections ( = 1 is obtained when  = 2 ). The same argument can be made for obtaining the optimal  = 6 for the 3-out-of-5 system when  = 0, compared to the case when the same system with  = 2 is considered (where the optimal  = 3 is obtained). Similar to the 4-out-of-5 systems when  = 2 and  = 1, the optimal inspection interval  = 12 is obtained for the case of  = 0, implying the minimal role of periodic inspections in reducing the total expected cost. Tables 3, 4, and 5 present the total expected number of minimal repairs and replacements for all components, the expected number of system failures, and the total expected uptime for all components when  = 1, 2, 3, ... , 12 and  = 2. It should be noted that the simulation algorithm returns the expected minimal repairs, replacements and uptime for each component separately. In the table, sum of the corresponding values for all components is presented. The standard errors for all estimated expected values (i.e. those for an individual component, or the expected number of system failures) are also calculated. The standard error is between 0.02502 and 0.06339.

33

Figure 13: Total expected costs for =1,2,...,12 for k-out-of-5 load-sharing systems, where k=1,3,4, and =2

Figure 14: Total expected costs for =1,2,...,12 for k-out-of-5 load-sharing systems, where k=1,3,4, and =1

34

In general, comparing the total expected costs obtained for the three systems when  = 0,1,2 (given in Tables 3,4, and 5), it is observed that a higher  results in higher total expected costs for the three systems due to the occurrences of more component failures. Therefore, there will be more minimal repairs, replacements, downtime, and eventually system failures.

Figure 15: Total expected costs for =1,2,...,12 for k-out-of-5 load-sharing systems, where k=1,3,4, and =0

35

TABLE 3 ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES, COMPONENT'S DOWNTIME PENALTY FOR 1-OUT-5 SYSTEM,  = 2 System Type and Load Intensity Expected number of
Expected Uptime



Minimal repairs

Replacements

System Failures

1

10.54

12.26

1.55

51.67

2

12.54

13.61

3.71

48.21

3

12.96

13.73

4.32

47.52

4

13.33

13.87

4.70

47.04

5

13.15

13.88

4.66

47.21

1-out-of-5

6

13.31

13.94

4.94

46.63

 = 

7

13.27

13.96

4.93

46.70

8

13.47

13.97

5.00

46.40

9

13.70

14.16

5.06

46.91

10

13.47

14.07

5.02

46.68

11

13.42

13.82

4.95

46.61

12

13.66

14.12

5.30

45.98

36

TABLE 4 ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES, COMPONENT'S DOWNTIME PENALTY 3-OUT-5 SYSTEM,   2 System Type and Load Intensity Expected number of



Expected Uptime Minimal Repairs Replacements System Failures

1

9.53

11.74

3.93

53.72

2

9.82

11.94

5.69

52.38

3

9.89

11.90

6.18

51.65

4

9.97

12.03

6.53

51.47

5 3-out-of-5

10.14

12.08

6.59

51.65

6

10.03

11.99

6.78

51.21

 = 

7

10.00

12.05

6.80

51.19

8

10.09

11.95

6.83

51.14

9

10.03

12.14

6.83

51.52

10

9.95

12.13

6.81

51.39

11

10.11

12.11

6.88

51.31

12

10.24

12.15

7.18

50.83

37

TABLE 5 ESTIMATED EXPECTED NUMBER OF MINIMAL REPAIRS, REPLACEMENTS, SYSTEM FAILURES, COMPONENT'S DOWNTIME PENALTY FOR 4-OUT-5 SYSTEM,   2 System Type and Load Intensity Expected number of


1

Expected Uptime Minimal Repairs Replacements System Failures

19.39

8.59

11.31

52.61

2

14.85

8.86

11.38

51.15

3

13.26

8.85

11.44

50.74

4

12.51

8.82

11.53

50.49

5 4-out-of-5

12.51

8.87

11.49

50.50

6

11.82

9.13

11.47

50.18

 = 

7

11.84

9.05

11.55

50.16

8

11.70

8.90

11.38

50.30

9

11.86

8.96

11.67

50.14

10

11.77

8.86

11.58

50.23

11

11.79

8.96

11.47

50.21

12

10.94

8.77

11.54

50.06

38

TABLE 6 TOTAL EXPECTED COSTS FOR K-OUT-5 SYSTEMS, WITH k  1,3, 4 , AND   0,1, 2 Total Expected Costs in Dollars


1 2 3 4 5

1-out-of-5 7967.62* 8796.94 8867.57 9005.70 8956.65 8976.13 8970.20 9053.98 9138.50 9076.15 8968.23 9115.56 6417.34 5947.93* 6377.12 6422.11 6375.43

3-out-of-5 9590.58 9628.32 9550.12* 9627.23 9684.56 9579.96 9608.25 9622.89 9642.7 9621.17 9687.05 9722.5 8211.33 8134.48 8108.22* 8271.36 8234.63

4-out-of-5 12071.76 11807.28 11659.61 11637.93 11611.65 11641.17 11666.09 11514.03 11685.03 11596.60 11605.75 11485.71* 11143.30 10850.88 10674.87 10769.81 10711.78

 = 

6 7 8 9 10 11 12 1 2

 = 

3 4 5

39

6 7 8

6507.07 6455.71 6563.04 6452.97 6425.79 6491.24 6553.62

8131.55 8222.82 8161.85 8204.95 8140.29 8125.76 8187.91

10707.41 10728.16 10674.72 10726.76 10697.94 10610.91 10558.17*

 = 

9 10 11 12

1 2 3 4 5

5902.54 4495.24 4213.95* 4238.09 4278.97 4252.8 4291.88 4261.86 4280.37 4310.09 4416.8 4369.61

7088.81 6853.18 6803.07 6763.31 6867.58 6738.36* 6754.25 6841.58 6834.7 6792.3 6800.38 6761.72

10481.81 9886.52 9826.79 9893.99 9828.07 9826.71 9785.87 9729.69 9776.66 9728.95 9860.84 9593.93*

 = 

6 7 8 9 10 11 12

*

The costs associated to the optimal inspection interval for each system.

40

3. INSPECTION OPTIMIZATION OF A K-OUT-OF-N LOADSHARING SYSTEM WITH CUMULATIVE EXPOSURE MODEL

3.1.

Introduction

As discussed in Chapter 2, there are two types of load-sharing systems, Tampered Failure Rate (TFR) and Cumulative Exposure (CE). In TFR, it is assumed that the fluctuations in load do not affect the age of the remaining components while changing their hazard rates. Therefore, failure of each component depends on its current age and load. However, in CE, the fluctuations in load in previous inspection intervals affect both the scale parameter () and the age of the remaining components [43], which means the workload history of each component is important. The objective of this chapter is to find the optimal inspection interval for the systems using the CE and describe the applications of the model by numerical examples. Similar to the TFR, there is no feasible analytical solution for CE, as a result, a simulation model is needed which will be described later. This chapter includes the description of the problem and the assumptions made along with the description of simulation algorithm used to find the expected values in the model followed by numerical examples.

3.2.

Problem Description

In this section, the assumptions are the same as were in Chapter 2. The only additional assumption made here is to take the load history into account, which is the basis of the cumulative exposure model. Therefore, a k-out-of-n load-sharing system with a cumulative exposure (CE) is
41

considered, in which the variations in load affect both the scale parameter and the age of the remaining components. Failures follow a non-homogenous Poisson process (NHPP) with a power law intensity function. The system is periodically inspected to detect the failures over the life-cycle of the system. A failed component may be replaced or minimally repaired at each inspection based on its age. To model the effective age for the cumulative exposure, it is assumed that when there is no failure in an interval, the load function for age is 1. However, when there are  failed components (  0), the age of the remaining components is affected by the load function/factor of  = (-) . Therefore, the age of a survived component is given by [43]:
 

           +  Ã     .

To find the optimal periodic inspection interval, the total expected cost should be calculated during the life-cycle of the system. The total expected cost, as discussed in Chapter 2 (Eq.2), is:

 ] [ = ( +     ) Ã 

+      Ã  +    Ã  +  Ã  +     Ã  ,
(2)

where  is the inspection cost,  is the cost of minimal repair,  is the cost of replacement,  is the penalty cost for a component's downtime, and  is the penalty cost for system failure.
42

It is not analytically feasible to obtain the required expected values in Eq.2. Therefore, a simulation algorithm is developed to find these expected values for the system. The inspection interval corresponding to the minimum expected cost is defined as the optimal inspection interval.

3.3.

Simulation Algorithm

The simulation algorithm for the CE model is the same as that for the TFR which has been modified to take into account the variations in the scale parameter and also the age of the components. These modifications have been highlighted in Fig.16. Analogous to the simulation algorithm for the TFR, the input parameters include , , , , the parameters of the power law intensity function ( and ), and the parameters of () ( and ). The probabilities of a minimal repair and a replacement at age  are respectively given by () =  - and  () = 1 - (). Fig.16 shows the simulation flowchart for the CE model.

3.4.

Numerical Examples

To use the simulation algorithm proposed for the CE model, a 3-out-of-5 load-sharing system is considered. The parameters of the power law intensity function and () are shown in Table 7 [39]. In addition, two load intensities of  = 0.7 and  = 1.2 are studied. Table 8 also provides the different costs.

43

Start for given initial ages, intensity parameters, and , ,  = 0

- For the failed component and the survived components: Uptime=Uptime+ Mintime Add Mintime to their current ages - Current time=Current time+ Mintime - Adjust the scale parameter - Generate the time of the next failure for the survived components. Next inspection= Next inspection- Mintime

Generate time of the first failure for all components Current time=0 ,  = 0 Next inspection= Systemfailures=0 Uptime=0 for all components No

Current time < ?

Stop

Yes Mintime= minimum of failure times of survived components

Yes i=i+1 No

Mintime < Next

No

inspection?

i=n-k+1?
Yes
- Systemfailures=Systemfailures+1

For the failed component and the survived components: Uptime=Uptime+ Mintime Add Mintime to their current ages - Current time=Current time+ Mintime - Update the age of the failed components according to the maintenance action (minimal repair or replacement) - Keep track of the minimal repairs and replacements - Adjust the scale parameter - Generate the next failure time for all components considering i=0. - Next inspection= Next inspection- Mintime -i=0

For the survived components: Uptime=Uptime+ Next inspection Add "Next inspection" to their current ages -Current time=Current time+ Next inspection -Update the age of the failed components according to the maintenance action (minimal repair or replacement) -Keep track of the minimal repairs and replacements. - If i>0, adjust the scale parameter and generate the next failure time for all components considering i=0. -i=0

No Next inspection= 

T-Current time< ? Yes

Yes mod (Current time,) =0?

Next inspection= -Current time failures 44

No

Figure 16: Simulation algorithm flowchart for the CE model

TABLE 7 PARAMETERS OF THE POWER LAW INTENSITY FUNCTION AND THE PROBABILITY OF MINIMAL REPAIR/REPLACEMENT OF COMPONENTS    

3.5

1.3

0.9

0.3

TABLE 8 MINIMAL REPAIR, REPLACEMENT, DOWNTIME, SYSTEM FAILURE AND INSPECTION COSTS
Minimal repair Replacement Inspection Penalty for a system failure Penalty per unit time for each component's downtime

$70

$210

$250

$450

$100

The life-cycle is considered to be  = 12 months. Using 1,000 simulation runs, the required expected values in Eq.2 were obtained for the inspection intervals  = 1,2, ... 12 months and the two load-sharing models with  = 0.7 and  = 1.2 . The total expected costs under different inspection policies are calculated using Eq.2. The results are shown in Table 9. Fig.17 presents the total expected costs calculated for  = 1,2, ... 12 months and the optimal inspection interval for the two load-sharing systems, TFR and CE, when  = 0.7 . As it can be seen, the optimal inspection intervals for the TFR and the CE are obtained to be 10 and 5 months, respectively. In the CE model, higher expected number of minimal repairs, replacements, and system failures are obtained compared to the TFR model. The increase in minimal repairs is not very significant while the increase in replacement is considerable, which is because an increase in the age of the components results in higher hazard rates, and thus they require more replacements than minimal repairs. Therefore, it can be concluded that a system with CE should be inspected more frequently than the one with TFR. Because of these frequent inspections, the components

45

experience less downtime in the CE model. The average of the expected values of the random variables in Eq.2 is calculated over all inspection intervals  = 1,2, ... 12 . The results are presented in Table 10, showing higher expected number of minimal repairs, replacements, and system failures for the CE model.

TABLE 9 TOTAL EXPECTED FOR A 3-OUT-OF-5 SYSTEM WITH  = 0.7 AND  = 1.2

Total Expected Costs in Dollars TFR  1 2 3 4 5 6 7 8 9 10 11 12
*

CE  = 0.7

TFR  = 1.2
8468.00 8385.61 8484.67 8394.23 8389.46 8419.87 8310.03 8398.78 8296.58* 8398.37 8335.37 8462.73

CE

8030.98 7796.27 7764.62 7825.68 7846.89 7839.58 7804.81 7843.63 7814.07 7739.56* 7778.82 7868.68

8299.91 8177.75 8165.25 8228.36 8127.39* 8188.97 8207.72 8142.10 8196.29 8234.15 8176.69 8172.43

9182.64 9128.62 9001.81* 9038.74 9072.41 9089.49 9047.34 9052.58 9052.51 9065.49 9154.84 9089.63

The costs associated to the optimal inspection interval for each system.

46

Figure 17: The expected costs and the optimal inspection intervals for the two load-sharing models with load intensity =0.7

In Fig.18, the load intensity of  = 1.2 is considered. The optimal inspection intervals of the TFR and the CE models are 9 and 3 months, respectively. As  increases, more system failures occur in both models, and since there is a relatively high penalty cost of $450 associated with each system failure, it is optimal to inspect the system more frequently when  = 1.2 compared to  = 0.7. The fluctuations in the total cost for different inspection intervals are provided in Table 9.

47

Figure 18: The expected costs and the optimal inspection intervals for the two load-sharing models with load intensity =1.2

TABLE 10 THE AVERAGE OF THE EXPECTED VALUES FOR THE TWO MODELS WITH TWO LOAD INTENSITIES  = 0.7 AND  = 1.2
 = .   = . 

Average TFR model
Expected # of inspections Expected # of minimal repairs Expected # of replacements Expected # of system failures Expected downtime of all components

CE model

TFR model

CE model

8.16 7.60 9.99 4.74 10.27

8.47 7.61 10.83 5.05 9.95

8.76 8.43 10.74 5.34 9.51

9.35 8.48 12.28 5.93 8.98

48

4. CONCLUSION AND FUTURE WORK

In the present study, two models are developed to find the optimal inspection interval for a load-sharing system with the Tampered Failure Rate (TFR) and the Cumulative Exposure (CE). The system remains operational if the number of failed components is less than  -  + 1 in an inspection interval, and it fails otherwise. The system is periodically inspected to detect the failed components. At a system failure, all the failed components are detected and rectified. Failures are assumed to follow a Non- homogeneous Poisson Process (NHPP). The first step to find the optimal inspection interval was to find the required expected values for Eq.2. Finding an analytical solution was shown to be impractical even for the simplest case of a 1-out-of-2 system. Therefore, the model was implemented using a simulation algorithm to accommodate the mathematical complexities of the problem. This algorithm can be used to obtain the expected values for any k-out-of-n load-sharing system over its life-cycle. Several numerical examples were provided to demonstrate the proposed simulation algorithm for the TFR and CE models. The results revealed that for a k-out-of-5 system, when  = 1, 3, 4 with the TFR model, as  increases the system needs more frequent inspections. This was expected since as  increases, the load function increases and so does the load applied to each component. When the load increases, the hazard rate of the survived components rises, requiring more frequent inspections of the system. The effect of varying  is somewhat different. As  increases, the system was found to need less frequent inspections. The reason is that when  is close to , the system is similar to a series system and periodic inspections do not contribute to the reduction of the total expected cost.
49

Therefore, no periodic inspections, or less frequent inspections is/are recommended. When  is much smaller than , particularly with a high load intensity, there is a high downtime for the failed components, so more frequent inspections can reduce the total expected cost if the inspection cost is not very high. It can be concluded that a higher load intensity results in a higher total expected cost; thus, the system requires more frequent periodic inspections for a system which is not close to a series system. Considering 3-out-of-5 systems with the TFR and CE models, it was seen that the system with the CE model needs more frequent inspections to avoid a high penalty for the system failure. For the CE model also, as  increases, more frequent inspections are needed. In the CE model, the increase in minimal repairs is not significant compared to the increase in replacements, which is due to higher hazard rates and also the alterations in the age of the components. It should be noted that the optimal inspection interval for both models depends on the input parameters including the hazard rate parameters, load intensity, and costs. It should be noted that this model can be applied to continuous as well as discrete time periods. The continuous time is not considered in the simulation model since most companies are interested in inspections taking place on a common practice which is a multiple of a time unit (month, week). The models proposed in this work is similar to those of Taghipour and coworkers [35,39] who developed the inspection optimization models for a system with soft and hard failures. Soft failures do not cause system failures and do not interrupt system operation, however, they can influence the performance of the system. Soft failures are detected only at inspections. Hard failures are selfannouncing since they cause system failure and they need immediate attention. If the system never fails in an inspection interval the failures of a k-out-of-n system are similar to soft failures in

50

[35,39]. However, the main difference between the present work and [35,39] is the consideration of the dependency among the components through sharing a certain amount of load. Taghipour and Banjevic [36,40] extended their inspection models to an opportunistic case, in which a hard failure makes an opportunity to inspect and rectify also the soft failures. In the current research, the system failures provide opportunities for the other failed components to be detected and rectified and they are, in a sense, similar to the opportunistic inspections in [36,40]. However, hard failures in [36,40] are completely independent from soft failures, while the components in a k-out-of-n load-sharing system are dependent on each other. For the future work, the proposed model can be extended to the case when the components are not subject to the same amount of load. Such model, for example, can be used for gateways in telecommunication networks. Gateways send and receive packets on a network. When a gateway is down, the packets (load) are forwarded to the other working gateways, to eventually reach their destinations. A gateway may be physically located in a busy network, so it might be subject to a larger workload. In addition, the load may fluctuate at different days/times. Another extension of this work could be the case when non-identical components are considered in a system. In this case, both the hazard parameters and initial age of the components are different. Non-negligible repair times can also be considered in the model.

51

APPENDIX A

Derivation of the Next Failure Time

() = 1 - () =  -  (, ) =  () (, ) =  -  (, ) = 
- 
+

+

()

(,)   -1  ( )( )   

+

(, ) =  ,   (0,1)
+

  -1   ( ) ( )  =   


(, ) =  - =   = -log()   -1      =   ( ) ( )  =  ( ) ( ) ( ) ]      
 + +

 +     =  [( ) -( ) ]  

Therefore:  +      =  [( ) - ( ) ] = - log()    +     1 ( ) = [( ) - log()]   
   1  +  =  [( ) - log()]      1    =  =  [( ) - log()] -    1 1

52

APPENDIX B

The MATLAB Code For The TFR Simulation Model:

% % % % % % % %

Function SimulationOpportunisticMRSoftHardFile(TotalTime,Tau) runs the simulation model OneSimulationRun(), which is the model for the opportunistic case with the assumption of minimal and replacements of soft and hard failures 1,000,000 times. The outputs which are the expected number of minimal repairs, replacements, and uptime for all components with soft failures, and the expected numbers of minimal repairs and replacmenent for hard failures are exported to the excel files

function SO = LoadSharing(TotalTime,Tau,k,alpha) function [Out,SystemFailure]=OneSimulationRun() NextFailures=zeros(1,CompNo); CurrentAges=zeros(1,CompNo); FailedUnits=zeros(1,CompNo); Out=zeros(CompNo,3); % Out(i,1) replacements , Out(i,3) uptime SystemFailure=0; for i=1:CompNo; z= rand(1); NextFailures(i)=Params(i,2)*power(power(CurrentAges(i)/Params(i,2),Params(i,1 ))-log(z),1/Params(i,1))-CurrentAges(i); end; # of minimal repairs , Out(i,2) # of

CurrentTime=0; NextInspection=Tau; i=0; TotalFailures=0;

while CurrentTime < TotalTime [Mintime,MinIdx]=min(NextFailures); while Mintime < NextInspection i=i+1; TotalFailures=TotalFailures+1; if i < CompNo-k+1 for j=1:CompNo;

53

if FailedUnits(j)==0 CurrentAges(j)=CurrentAges(j)+Mintime; Out(j,3)=Out(j,3)+Mintime; if j ~= MinIdx NextFailures(j)=GenerateNextFailure(Params(j,1),Params(j,2),CurrentAges(j),i, CompNo,alpha); end end end FailedUnits(MinIdx)=1; % Indicated that the unit is failed NextFailures(MinIdx)=100; % Not to be selected as the min since the unit is already down CurrentTime=CurrentTime+Mintime; NextInspection=NextInspection-Mintime; else % System failure SystemFailure=SystemFailure+1; for j=1:CompNo; if FailedUnits(j)==0 CurrentAges(j)=CurrentAges(j)+Mintime; Out(j,3)=Out(j,3)+Mintime; if j==MinIdx rf=Params(j,3)*exp(-Params(j,4)*CurrentAges(j)); repairz= rand(1); if repairz <= rf % minimal repair Out(j,1)=Out(j,1)+1; else % replacement Out(j,2)=Out(j,2)+1; CurrentAges(j)=0; end FailedUnits(j)=0; end else rf=Params(j,3)*exp(-Params(j,4)*CurrentAges(j)); repairz= rand(1); if repairz <= rf % minimal repair Out(j,1)=Out(j,1)+1; else % replacement Out(j,2)=Out(j,2)+1; CurrentAges(j)=0; end FailedUnits(j)=0; end % if FailedUnits(j)==0 if j==MinIdx || (k < CompNo) NextFailures(j)=GenerateNextFailure(Params(j,1),Params(j,2),CurrentAges(j),0, CompNo,alpha); else NextFailures(j)=NextFailures(j)-Mintime; end; end % for j i=0; CurrentTime=CurrentTime+Mintime; NextInspection=NextInspection-Mintime; end % System failure [Mintime,MinIdx]=min(NextFailures); end; % while Mintime < NextInspection

54

for j=1:CompNo; if FailedUnits(j)==0 CurrentAges(j)=CurrentAges(j)+NextInspection; Out(j,3)=Out(j,3)+NextInspection; else rf=Params(j,3)*exp(-Params(j,4)*CurrentAges(j)); repairz= rand(1); if repairz <= rf % minimal repair Out(j,1)=Out(j,1)+1; else % replacement Out(j,2)=Out(j,2)+1; CurrentAges(j)=0; end FailedUnits(j)=0; end % if FailedUnits(j)==0 if i > 0 NextFailures(j)=GenerateNextFailure(Params(j,1),Params(j,2),CurrentAges(j),0, CompNo,alpha); else NextFailures(j)=NextFailures(j)-NextInspection; end; end % for j i=0; CurrentTime=CurrentTime+NextInspection; if CurrentTime - Tau*(CurrentTime/Tau)== 0 RemainingTime=TotalTime-CurrentTime; if RemainingTime < Tau NextInspection=RemainingTime; else NextInspection=Tau; end end % While CurrentTime < TotalTime % function

end end

function nextfailure=GenerateNextFailure(beta,eta,CurrentAge,i,n,alpha) z= rand(1); sigma_i=power(n/(n-i),alpha); nextfailure=eta*power(power(CurrentAge/eta,beta)(1/sigma_i)*log(z),1/beta)-CurrentAge; end Data = xlsread('C:\data\load_sharing\Components.xls');

RecordsNo=numel(Data(:,2)); rowindx=0; while (rowindx < RecordsNo)

55

rowindx=rowindx+1; Params(rowindx,1)=Data(rowindx,1); Params(rowindx,2)=Data(rowindx,2); Params(rowindx,3)=Data(rowindx,3); Params(rowindx,4)=Data(rowindx,4); end CompNo=rowindx;

SimOut=zeros(CompNo,3); SimulationRuns=1000; MinimalMatrix=zeros(SimulationRuns,CompNo); ReplacementMatrix=zeros(SimulationRuns,CompNo); UpMatrix=zeros(SimulationRuns,CompNo);

for iteration=1:SimulationRuns; [out,SystemFailure]=OneSimulationRun(); SystemFailureArray(iteration)=SystemFailure; MinimalMatrix(iteration,:)=out(:,1)'; ReplacementMatrix(iteration,:)=out(:,2)'; UpMatrix(iteration,:)=out(:,3)'; SimOut=SimOut+out; end; AvgSTDSystemFailure(1)=mean(SystemFailureArray); AvgSTDSystemFailure(2)=std(SystemFailureArray); AvgSTDSystemFailure(3)=std(SystemFailureArray)/sqrt(SimulationRuns); for i=1:CompNo; AvgSTDMinimals(i,1)=mean(MinimalMatrix(:,i)); AvgSTDMinimals(i,2)=std(MinimalMatrix(:,i)); AvgSTDMinimals(i,3)=std(MinimalMatrix(:,i))/sqrt(SimulationRuns); AvgSTDReplacement(i,1)=mean(ReplacementMatrix(:,i)); AvgSTDReplacement(i,2)=std(ReplacementMatrix(:,i)); AvgSTDReplacement(i,3)=std(ReplacementMatrix(:,i))/sqrt(SimulationRuns); AvgSTDUp(i,1)=mean(UpMatrix(:,i)); AvgSTDUp(i,2)=std(UpMatrix(:,i)); AvgSTDUp(i,3)=std(UpMatrix(:,i))/sqrt(SimulationRuns); end;

SimOut=SimOut/SimulationRuns; SO=SimOut;

56

f1=strcat('AvgSTDMinimals-tau-',num2str(Tau),'.xls'); f = fullfile('C:', 'data', 'load_sharing','Results', f1); xlswrite(f,AvgSTDMinimals);

f1=strcat('AvgSTDReplacement-tau-',num2str(Tau),'.xls'); f = fullfile('C:', 'data', 'load_sharing','Results', f1); xlswrite(f,AvgSTDReplacement); f1=strcat('AvgSTDUp-tau-',num2str(Tau),'.xls'); f = fullfile('C:', 'data', 'load_sharing','Results', f1); xlswrite(f,AvgSTDUp); f1=strcat('AvgSTDSystemFailure-tau-',num2str(Tau),'.xls'); f = fullfile('C:', 'data', 'load_sharing','Results', f1); xlswrite(f,AvgSTDSystemFailure); end

57

REFERENCES

[1] A. Van Horenbeek, L. Pintelon, and P. Muchiri, "Maintenance Optimization Models and Criteria," International Journal of System Assurance Engineering and Management, vol. 1, no. 3, pp. 189-200, 2010. [2] A.K.S. Jardin, J.A. Buzacott, "Equipment Reliability and Maintenance," European Journal of Operational Research, vol. 19, no. 3, pp. 285Â­296, 1985. [3] S.R. Chakravarthy, A. Krishnamoorthy, and P.V. Ushakumari, "A k-out-of-n Reliability System with an Unreliable Server and Phase Type Repairs and Services the (N, T) Policy," Journal of Applied Mathematics and Stochastic Analysis, vol. 14, no. 4, pp. 361-380, 2001. [4] A. Birolini, "Reliability Engineering Theory and Practice," Springer, Ed. 6, 2010. [5] R. Billinton, R.N. Allan, "Reliability Evaluation of Engineering Systems," Springer, Ed. 2, 2013. [6] W. Kuo, M. J. Zuo, "Optimal Reliability Modeling: Principles and Applications," Hoboken: John Wiley & Sons, ch. 7, pp. 231-280, 2003. [7] L.C. Thomas, "A Survey of Maintenance and Replacement Models for Maintainability and Reliability of Multi-item Systems," Reliability Engineering, vol. 16, no. 4, pp. 297-309, 1986. [8] H. Wang, "A Survey of Maintenance Policies of Deteriorating Systems," European Journal of Operational Research, vol. 139, no. 3, pp. 469-489, 2002.

58

[9] R. Dekker, R.E. Wildeman, and F.A. van der Duyn Schouten, "A Review of MultiComponent Maintenance Models with Economic Dependence," Mathematical Methods of Operations Research, vol. 45, no. 3, pp. 411-435, 1997. [10] D.I. Cho, M. Parlar, "A Survey of Maintenance Models for Multi-unit Systems," European Journal of Operational Research, vol. 51, no. 1, pp. 1-23, 1991. [11] A. Sarkar, S.C. Panja, and B. Sarkar, "Survey of Maintenance Policies for The Last 50 Years," International Journal of Software Engineering & Applications, vol. 2, no. 3, pp. 130, 2011. [12] R.P. Nicolai, R. Dekker, "Optimal Maintenance of Multi-component Systems: a Review," in Complex System Maintenance Handbook. D.N.P. Murthy and K.A.H. Kobbacy, Ed.: Springer, 2007, ch. 11, pp. 263-286. [13] D.N.P. Murthy, D.G. Nguyen, "Study of a Two-component System With Failure Interaction," Naval Research Logistics, vol. 32, no. 2, pp. 239Â­247, 1985. [14] D.N.P. Murthy, D.G. Nguyen, "Study of a Multi-component System With Failure Interaction," European Journal of Operational Research, vol. 21, no. 3, pp. 330-338, 1985. [15] P. A. Scarf, M. Deara, "On the Development and Application of Maintenance Policies for a Two-component System With Failure Dependence," IMA Journal of Mathematics Applied in Business & Industry, vol. 9, pp. 91-107, 1998. [16] P.A. Scarf, M. Deara, "Block Replacement Policies for a Two-component System With Failure Dependence," Naval Research Logistics, vol. 50, no. 1, pp. 70Â­87, 2003. [17] R.I. Zequeira, C. Berenguer, "Maintenance Cost Analysis of a Two-component Parallel System With Failure Interaction," in Proceedings Reliability and Maintainability Symposium, 2004, pp. 220-225.

59

[18] Y. Ben-Dov, "Optimal Reliability Design of k-out-of-n Systems Subject to Two Kinds of Failure," Journal of the Operational Research Society, vol. 31, no. 8, pp.743Â­748, 1980. [19] Z. Tian, M.J. Zuo, and R.C.M. Yam, "Multi-state k-out-of-n Systems and Their Performance Evaluation," IIE Transactions, vol. 41, no. 32, pp. 32-44, 2009. [20] Z. Chen, "Component Reliability Analysis of k-out-of-n Systems With Censored Data," Journal of Statistical Planning and Inference, vol. 116, pp. 305-315, 2003. [21] S.V. Amari, R. Bergman, "Reliability Analysis of k-out-of-n Load-sharing Systems," in Proceedings Reliability and Maintainability Symposium, 2008, pp. 440-445. [22] S.V. Amari, K.B. Misra, and H. Pham, "Tampered Failure Rate Load-sharing Systems: Status and Perspectives," in Handbook of Performability Engineering, Springer, 2008, ch. 20, pp. 291Â­08. [23] D. T. Chiang, S. C. Niu, "Reliability of Consecutive-k-out-of-n:F System," IEEE Trans. Reliability, vol.R-30, no.1, pp. 87-89, 1981. [24] A. Kossow, W. Preuss, "Reliability of Consecutive-k-out-of-n:F Systems With Nonidentical Components," , IEEE Trans. Reliability, vol.38, no.2, pp. 229-233, 1989. [25] T. Sooktip, N. Wattanapongsakorn and D.W. Coit, "System Reliability Optimization With k-out-of-n Subsystems and Changing k," in Proceedings international conference on Reliability, Maintainability and Safety, 2011, pp. 1382-1387. [26] D. W. Coit, J. Liu "System Reliability Optimization With k-out-of-n Subsystems," International Journal of Reliability, Quality and Safety Engineering, vol.7, no. 2, pp. 129-142, 2000. [27] P. J. Boland, F. Proschan, "The reliability of k out of n systems," The annals of probability, vol. 11, no. 3, pp. 760-764, 1983.

60

[28] E.M. Scheuer, "Reliability of an m-out of-n System When Component Failure Induces Higher Failure Rates in Survivors," IEEE Trans. Reliability, vol.37, no.1, pp.73-74, 1988. [29] H. Liu, "Reliability of a Load-sharing k-out-of-n:G System: Non-iid Components with Arbitrary Distributions," IEEE Trans. Reliability, vol.47, no.3, pp. 279-284, 1998. [30] P.H. Kvam, E.A. PeÃ±a, "Estimating Load-Sharing Properties in a Dynamic Reliability System," Journal of the American Statistical Association, vol. 100, no. 469, pp. 262-272, 2005. [31] T. Yinghui, Z. Jing "New Model for Load-sharing k-out-of-n: G System With Different Components," Journal of Systems Engineering and Electronics, vol. 19, no. 4, pp. 748Â­751, 2008. [32] J.Shao, L.R. Lamberson, "Modeling a Shared-load k-out-of-n:G System," IEEE Trans. Reliability, vol. 40, no. 2, pp. 205-209, 1991. [33] S.V. Amari, H. Pham, and R.B. Misra, "Reliability Characteristics of k-out-of-n Warm Standby Systems," IEEE Trans. Reliability, vol. 61, no. 4, pp. 1007-1018, 2012. [34] Z. Tian, H. Liao, "Condition Based Maintenance Optimization for Multi-component Systems Using Proportional Hazards Model," Reliability Engineering & System Safety, vol. 96, no. 5, pp. 581-589, 2011. [35] S. Taghipour, D. Banjevic, "Periodic Inspection Optimization Models for a Repairable System Subject to Hidden Failures," IEEE Trans. Reliability, vol. 60, no. 1, pp. 275-285, 2011. [36] S. Taghipour, D. Banjevic, "Optimal Inspection of a Complex System Subject to Periodic and Opportunistic Inspections and Preventive Replacements," European Journal of Operational Research, vol. 220, no. 3, pp. 649-660, 2012.

61

[37] X. Lu, W. Wang, H. Yang, M.J. Zuo, and D. Zhou, "Optimizing The Periodic Inspection Interval for a 1-out-of-2 Cold Standby System Using The Delay-Time Concept," Quality and Reliability Engineering International, vol. 28, pp. 648Â­662, 2012. [38] H. Pham, H. Wang, "Optimal (, T) Opportunistic Maintenance of a k-out-of-n: G System With Imperfect PM and Partial Failure," Naval Research Logistics, vol. 47, no. 43 pp. 223Â­239, 2000. [39] S. Taghipour, D. Banjevic, and A.K.S. Jardine, "Periodic Inspection Optimization Model for a Complex Repairable System," Reliability Engineering and System Safety, vol. 95, no. 9, pp. 944-952, 2010. [40] S. Taghipour, D. Banjevic "Optimum Inspection Interval for a System under Periodic and Opportunistic Inspections," IIE Transactions, vol. 44, no.11, pp. 932-948, 2011. [41] G.K. Bhattacharyya, Z. Soejoeti, "A Tampered Failure Rate Model for Step-stress Accelerated Life Test," Communications in Statistics: Theory Method, vol. 18, pp. 1627Â­1643, 1989. [42] W. Nelson, "Accelerated Life Testing Step-stress Models and Data Analysis," IEEE Trans. Reliability, vol. R-29, pp. 103Â­108, 1980. [43] S. Taghipour, "Optimal Inspection Model for a Load-sharing Redundant System," in Proceedings Reliability and Maintainability Symposium, 2014.

62

GLOSSARY

NHPP TFR CE     (, ) ,   ,       1 (|, )

NON-HOMOGENEOUS POISSON PROCESS A LOAD-SHARING SYSTEM WITH TAMPERED FAILURE RATE A LOAD-SHARING SYSTEM WITH CUMULATIVE EXPOSURE NUMBER OF COMPONENTS IN THE SYSTEM NUMBER OF INSPECTION INTERVALS LOAD FUNCTION LOAD INTENSITY HAZARD RATE ( INTENSITY FUNCTION OF THE NHPP) PARAMETERS OF POWER LAW INTENSITY FUNCTION SYSTEM'S LIFE-CYCLE LENGTH OF PERIODIC INSPECTION INTERVAL COST OF INSPECTION COST OF MINIMAL REPAIR COST OF REPLACEMENT DOWNTIME PENALTY COST OF A FAILED COMPONENT PENALTY COST FOR SYSTEM FAILURE PROBABILITY DENSITY FUNCTION OF A COMPONENT GIVEN ITS INITIAL AGE .  IS
THE NUMBER OF FAILED COMPONENTS

63

 1 (|, )

CUMULATIVE DENSITY FUNCTION OF A COMPONENT GIVEN ITS INITIAL AGE .  IS
THE NUMBER OF FAILED COMPONENTS

 1 (|, )

PROBABILITY THAT A COMPONENT SURVIVES UP TO  GIVEN ITS INITIAL AGE .  IS THE
NUMBER OF FAILED COMPONENTS

 [ ]

TOTAL EXPECTED COST INCURRED OVER CYCLE [0, ] PROBABILITY OF MINIMAL REPAIR PROBABILITY OF REPLACEMENT PARAMETERS OF THE PROBABILOTY FUNCTION ()

()  () , 

64


