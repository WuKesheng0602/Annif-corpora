Unit Commitment Using Complementarity

by

Steven Victor Craig Bachelor of Engineering, McMaster University, 2007

A thesis presented to Ryerson University

in partial fulfillment of the requirements for the degree of Master of Applied Science in the Program of Electrical and Computer Engineering

Toronto, Ontario, Canada, 2015 c Steven Victor Craig 2015

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A THESIS

I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

I understand that my thesis may be made electronically available to the public.

ii

Unit Commitment Using Complementarity Master of Applied Science 2015 Steven Victor Craig Electrical and Computer Engineering Ryerson University

Abstract
A need exists to optimally dispatch power generation to meet per-hour requirements on the power grid. This is a well documented and established problem called Unit Commitment (UC). It is commonly formulated as a Mixed Integer Linear Program (MILP), which utilizes intelligent solvers to produce a solution with speed and accuracy. The linear nature of MILP requires linear approximations of nonlinear constraints. This work introduces the Theory of Complementarity in order to remove integer variables, resulting in a continuous rather than a discontinuous solution space. This permits use of classical solution techniques, as well as nonlinear constraints, thereby increasing accuracy. A formulation is developed to demonstrate a proof of concept of the complementarity theory as used in UC. A subset of constraints will be used and the results will be compared against an MILP optimization, for 10- and 26-generator configurations. Similar trends in generator status and total cost are noted.

iii

Acknowledgements
Foremost, I would like to express my sincere gratitude to my supervisor, Dr. Bala Venkatesh. I am most grateful for his patience with me as a graduate student, and also for his brilliant ideas, insight, guidance, and financial support. I would like to thank my readers, Dr. Peng Yu and Morgan Cunningham for their valuable feedback and suggestions. I owe thanks to my family for their support and encouragement, and of course the occasional nutritious meal...

"If I have seen further it is by standing on the shoulders of giants." - Isaac Newton

iv

Dedication

I dedicate my thesis to the memory of my late mother Christine Craig, who was one of my biggest fans.

v

Contents
Declaration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Abstract . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Dedication . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ii iii iv v

List of Tables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . viii List of Figures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . List of Symbols . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 Introduction 1.1 1.2 1.3 1.4 Introduction to Unit Commitment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Review of the State of the Art . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Research Objective . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Thesis Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix x 1 1 3 8 9 10

2 Mixed-Integer Linear Programming Formulation 2.1 2.2 2.3

UC Formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 Solution Space . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 Simulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 2.3.1 2.3.2 10-generator 24-hour System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 26-generator 24-hour System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

2.4

Conclusion

vi

3 Complementarity Formulation 3.1 3.2 3.3 3.4 3.5 3.6

22

Mathematical Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 Solution Space . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 Corollary into UC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 Making UC Nonlinear . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 UC with Complementarity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 29

4 Results and Evaluation 4.1 4.2 4.3

10-generator 24-hour System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 26-generator 24-hour System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 36

5 Conclusion & Future Work 5.1 5.2

Contribution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 Future Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 41

References

vii

List of Tables
1.1 2.1 2.2 2.3 2.4 2.5 2.6 2.7 4.1 4.2 4.3 4.4 State of the Art Comparison . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8

Load Data (MW) for 10-Generator System . . . . . . . . . . . . . . . . . . . . . . . . . . 17 Price Data ($) for 10-Generator System . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 Output Data From 10-Generator System - Full MILP . . . . . . . . . . . . . . . . . . . . 18 Status Values from 10-Generator System - Full MILP . . . . . . . . . . . . . . . . . . . . 19 Load Data (MW) for 26-Generator System . . . . . . . . . . . . . . . . . . . . . . . . . . 19 Output Data From 26-Generator System - Full MILP . . . . . . . . . . . . . . . . . . . . 20 Price Data ($) for 26-Generator System . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 Output Data Comparison For 10-Generator System . . . . . . . . . . . . . . . . . . . . . . 31 Complemented Status Values from 10-Generator System - Complementarity . . . . . . . . 31 Output Data Comparison For 26-Generator System . . . . . . . . . . . . . . . . . . . . . . 31 Complemented Status Values from 26-Generator System - Complementarity . . . . . . . . 33

viii

List of Figures
2.1 2.2 2.3 3.1 4.1 4.2 4.3 4.4 Cost curve of typical generator . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 Two-generator one load bus example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 MILP Discontinuous Solution Space . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 Complementarity Continuous Solution Space . . . . . . . . . . . . . . . . . . . . . . . . . 25 10 Generator System Marginal Hourly Prices . . . . . . . . . . . . . . . . . . . . . . . . . 32 10 Generator System Power Demand vs Supply . . . . . . . . . . . . . . . . . . . . . . . . 32 26 Generator System Marginal Hourly Prices . . . . . . . . . . . . . . . . . . . . . . . . . 34 26 Generator System Power Demand vs Supply . . . . . . . . . . . . . . . . . . . . . . . . 34

ix

List of Symbols
 i k  D x    ki an anm bn Bik bnm cn Desired minimum factor of total spinning reserve capacity Phase angle of bus i Phase angle of bus k Demand Lagrangian multiplier from LR example Dual or LR problem from LR example General vector from complementarity definition Reserve Lagrangian multiplier from LR example Objective function from LR example Optimal value of Lagrangian Function from LR example Y-Bus Data =
NM m

anm Price coefficient for generator unit

Price coefficient for unit fixed cost =
NM m

bnm Price coefficient for all segment costs

Susceptance element of Y-Bus between nodes i and k Price coefficient for cost of generator segment Price coefficient for spinning reserve x

dn DT f F (x) G10 Gik i ICn L Ld Lj M m n NB NG NM NT P P 10 Ptnm Ptn

Price coefficient for startup cost Minimum down-time General function from complementarity example General function from complementarity definition Indices of 10 minute reserve gen Conductance element of Y-Bus between nodes i and k Index for bus number Status variable for generator from time t - 1 Lagrangian Function from LR example Load Demand from ANN example Normalized Load Demand from ANN example Penalty coefficient from complementarity example Index for segment number of generator unit Index for generator number Number of buses Number of generators Number of segments in generator unit Number of hours Random chromosome member population from GA example Capacity of 10-minute quick start units Generator real output power, per segment =
NM m

Ptnm Generator real output power, per generator xi

P Dti PL Qtnm QDti R60n Rtn Stn SRt t TC Utnm Utn UT Vi Vk Vtnm Vtn x y

Bus real power demand Real power flow in transmission line Generator reactive output power, per segment Bus reactive power demand Ramp rate limit Spinning reserve variable Generator startup status Minimum system spinning reserve requirement Index for hour number Total Cost Generator on status =
NM m

Utnm

Minimum up-time Voltage at bus i Voltage at bus k Generator on status, dual =
NM m

Vtnm

General variable from complementarity example General variable from complementarity example

xii

Chapter 1

Introduction
In this chapter, a high level description of power systems and the Unit Commitment problem is first presented, followed by a survey of related work. Finally, an overview of the thesis objective and document summary is presented. By the end of this chapter, the reader will have an understanding of the Unit Commitment problem, how the problem has been addressed in the past, what the goals are of this thesis, and how the thesis is organized.

1.1

Introduction to Unit Commitment

A power system operator's core objective is to keep the power system running. The operators are given day-ahead load demands and generation source availabilities, where their task is to switch on generation sources in order to meet the load demands. The operator's task is made more complicated with events such as unforeseen generator outages and/or unforeseen spikes in demand. When these contingencies are not planned for, the system's operating frequency may drop, or worst case, the reliability of the system may be in jeopardy. Two common solutions to maintain system stability are to have additional generation running on standby (ready to be connected to the grid), or practise load shedding ("blackouts" for customers). Having such additional generation is expensive, and being without power is not desirable for any consumer. The system operator's secondary objective is to keep the system running in a cost-effective manner. Costs associated with each generation source include the cost to simply remain available for selection 1

CHAPTER 1. INTRODUCTION

1.1. INTRODUCTION TO UNIT COMMITMENT

(dispatch), the cost of switching the unit(s) on and the cost per unit of energy produced. Such costs vary dramatically with the type of generator in question, e.g. a nuclear reactor will have different start-up costs than a modestly sized natural gas generator. Careful selection of which generators are dispatched can have a dramatic effect on the cost of energy to the final consumer. Reliability and cost planning must be done in conjunction with each other, which becomes a very complex challenge. The Unit Commitment (UC) optimization problem mathematically facilitates system operators to dispatch power generation reliably and optimally against day-ahead forecasted demands. It follows that sources of generation whose outputs are not certain, namely renewable sources such as wind and solar, present challenges to the UC problem. Such sources cannot be dispatched in the sense that they cannot be commanded to produce a certain output at a certain time. The UC problem is well documented and well established. UC is calculated for day-ahead use, typically for a full 24 hour period, and in per-hour increments. For a generator to be mapped as committed or not, a status variable is assigned and classically restricted to an integer value of 0 or 1 (off or on, respectively) for each generator segment, for each hour. Generators available for dispatch generally carry with them a host of properties beyond cost that will affect how UC commits them for use, for example that they cannot be turned on instantly and take time to produce full power. These properties are formulated mathematically as optimization constraints: power input/output balance at each bus in the system, limits to how quickly a generator requires to be turned on or off, limits to how long a generator must remain on or off for and initial running conditions of the generator if it is running at time "t - 1" to when the UC computation begins. Practical systems also account for operating contingencies such as generator outages or a demand in excess of the prediction, so additional generation is typically dispatched to remain on standby for potential use. The industry standard method [1] of computing UC is as a "Mixed Integer Linear Program" (MILP). An MILP is a subset of a "Integer Linear Program", where all variables of the optimization are restricted to the set of Integers, while as an MILP can also have continuous variables. In the case of UC, the generator status variable is the one restricted to be an integer, or more specifically a binary integer, with a possible value from the set {0, 1}. The first disadvantage of using a Linear Program for UC is the requirement that all constraints have to be linear; nonlinear constraints need to be approximated. An inherent property of an optimization with an integer restricted variable is that the solution space is discontinuous, which introduces a major disadvantage in that solution methods involving derivatives ­ 2

CHAPTER 1. INTRODUCTION

1.2. REVIEW OF THE STATE OF THE ART

or more generally a smooth objective function ­ cannot be used. An example of such solution method is the well-known Newton-Raphson method, which relies heavily on function derivatives.

1.2

Review of the State of the Art

The past few decades have seen numerous approaches to solving the UC problem, each of course with its own benefits and drawbacks. Methods described in this section have formulations very similar to each other, so a common and generalized formulation is presented first, with individual nuances described in detail on a per method basis. Minimize Total Cost T C , made up of a quadratic cost function involving fixed unit costs an , energy costs bn , startup costs dn . Ptn represents the amount of power to be generated, Utn represents the on/off status of the unit, and Stn represents the off to on state transition of a unit such that the associated startup cost is accounted for.
2 + bn · Ptn ) · Utn + dn · Stn (an · Ptn t n

TC =

(1.1)

Subject to constraints featuring the same variables and coefficients with the addition of P Dti which represents the respective demand, and Rtn which represents the spinning reserve capacity: a) Power Balance: Ptn =
n i

P Dti

t

(1.2)

b) Generator Limits: Utn · Ptn  Ptn  Utn · Ptn c) Spinning Reserve: Utn · (Ptn - Ptn )  P Dti + Rtn
n

t, n

(1.3)

i, n

(1.4)

Dynamic Programming is a solution method where the main optimization problem is broken down into numerous sub-problems. As each sub-problem is solved, the solution to the main problem is realized recursively [2] [3]. In the case of solving UC, the sub-problems solved are each period, i.e. each hour. Despite being flexible [4] [5], it's performance tends to suffer as the input system grows [4] [5] [6] 3

CHAPTER 1. INTRODUCTION

1.2. REVIEW OF THE STATE OF THE ART

[7] [8] [9] [10]; although it can be improved by use of a supercomputer [3] or by implementing heuristics [11], its use requires simplification of complex constraints which reduces accuracy [3] [7] [12]. Dynamic Programming appears commonly today in bioinformatics. A detailed example can be found in [13]. The total cost comprises of the "production cost" (cost of fuel) and the "startup cost" (cost of generators turning off), and they are the sub-problems solved at each iteration. With traditional Dynamic Programming, the inefficiencies stem from the available paths of feasible solutions the solver has to deal with. The authors presented an equation to determine the number of paths, which for a 4 unit system and 24 hours, amounts to (24 - 1)24 . In their proposed method, only a subset of feasible paths are saved between states, which vastly reduces the computational burden and maintains an accurate/optimal solution provided the saved number of paths is chosen intelligently.

Mixed-Integer Linear Programming (MILP) is a solution method similar to Dynamic Programming, in that some algorithms break down the problem into sub-problems and solved with algorithms such as cutting-plane method, branch and bound method, branch and cut method, and branch and price method. MILP is the current industry standard [1], performs well on large systems [7] and adapts well to fundamental system changes [14]. Recent years have seen a vast improvement in commercial solver intelligence, providing generous improvements in computation speed [1]. MILP problems are useful anywhere an output cannot take on a fractional form, e.g. 2.2 houses cannot be built, or 1.5 drivers would not drive a bus. A detailed example can be found in [15]. The authors used the CPLEX optimization package to implement the formulation. The package is configured to use the interior-point method initially, and refined subsequently using the branch-and-cut algorithm.

Fuzzy Logic is a logic form which extends a binary {true, false} decision into more of a continuous [completely true, completely false] range. It is the most straightforward approach to dealing with system or input uncertainties ("fuzziness") [16] [17], however it introduces tradeoffs [16] such as slow performance [17]. Due to the good handling of uncertainty, fuzzy problems are a useful way to incorporate renewable sources to the UC problem and can also handle contradictory objectives [1]. Fuzzy problems are less of a solution method than they are an extended way of thinking, as the respective problems can be 4

CHAPTER 1. INTRODUCTION

1.2. REVIEW OF THE STATE OF THE ART

solved using MILP [1], Dynamic Programming [17], or the Priority List method [16]. Inherently, despite the conceptual useful of fuzzy logic, using MILP, Dynamic Programming or Priority List methods still subject the overall result to the limitations of the solution methods. Fuzzy logic has other applications in learning algorithms. A detailed example can be found in [18]. The "fuzzy" variables are normalized to be  [0, 1] and defined as Load Capacity of Generators (LCG)={Low, Below average, Average, Above Average, High}, Fuel Cost (FC)={Zero, Small, Large}, and similar for Startup Cost (SUP) and Production Cost (PRC). Input variables are mapped to output variables; PRC= LCG and FC and SUP, or in fuzzy set notation, PRC=LCG^FC^SUP. Fuzzy "If-Then" rules for each fuzzy variable are defined; If LCG is low and FC is zero Then PRC is low. As well, membership functions are constructed for output variables. Then, the "Defuzzification Process" takes place where the fuzzy result is mapped back to numerical values.

Lagrangian Relaxation (LR) is an approach which decouples the problem into subproblems and relaxes the constraints by use of Lagrange multipliers [11] which introduce a "cost" to constraint violation, resulting in an approximation from the original problem. While fast [4] [5] [10], it tends to lose accuracy as the input system gets larger [4] [10]. LR requires the use of heuristics in order to handle complex constraints [3] [5] at the expense of speed and accuracy [19]. LR is not unlike fuzzy logic, in that it is an extension of thinking and can be solved by other methods such as Dynamic Programming [19]. A detailed example can be found in [20]. The UC problem is formulated as cost minimization. The dual is then established and then maximized using the LR method. The Lagrangian function, L, is then defined as follows, where  represents the objective function as defined in (1.1), and  and  are Lagrangian multipliers:

L=+
t

 · P Dti -
n

Utn · Ptn

+
t

 · P Dti + Rtn -
n

Utn · Ptn

i

(1.5)

The optimal value of the Lagrangian function is defined as  = min {L}, such that the dual of the UC problem is defined as: D : max , s.t.   0 (1.6)

With this formulation and dual problem D, the authors solved the problem using Dynamic Program5

CHAPTER 1. INTRODUCTION ming.

1.2. REVIEW OF THE STATE OF THE ART

Simulated Annealing (SA) is a method that likens an optimization problem to the mathematical description of molten metal cooling to a crystal structure, as thermodynamic law states that a crystal structure corresponds to a state of lowest energy [12]. SA has the advantage of being adaptable to system changes and complex constraints [12] and producing accurate solutions [4] [6], however it is known for being very slow [3] [12] perhaps due to it beginning with a randomly generated solution over which to iterate [4]. Parallelism and solver improvements have been expected to improve computational demand [12]. A detailed example can be found in [21]. First, an initial guess solution for the problem is determined. For each temperature unit drop in the simulated cooling process, the initial solution is modified slightly (randomly). A comparison is then made to the "Total Cost" using the modified guess and the unmodified guess, modelled after the change in energy of the element being annealed. Depending on the result, the modified solution is either accepted, or accepted based on a Boltzmann distribution probability. After each temperature change, a local optimization is performed until the stopping criteria is met.

Artificial Neural Network (ANN) is an artificial intelligence based computing method modelling after an imitation of the human brain. It is premised on the biological fact that the brain consists of billions of neurons, which function as small limited computers working in tandem [8], while also breaking the problem down into subproblems [9] and using cascaded networks. While fast [8] it is very system dependent [8] [9] as it requires "training" about the system in advance of performing the desired optimization [8]. The said training does improve performance [8] [9] however it is generally known for being inaccurate [8]. Use of multi-stage networks can improve both time and accuracy [9]. ANNs are used extensively today in machine learning applications. A detailed example can be found in [8]. A three layer ANN model is used by the authors, where the inputs (one load demand, Ld , for each hour in the simulation) are normalized (Lj ) upon input to the network by the following equation: Lj - Lmin,j Lmax,j - Lmin,j

Lj =

(1.7)

6

CHAPTER 1. INTRODUCTION

1.2. REVIEW OF THE STATE OF THE ART

The output of the network is an NxM matrix (where N is the number of units and M is the number of hours) consisting of the binary on/off commitment for each unit at each hour, unless the network cannot produce a schedule with complete certainty. In that case, it is the result of insufficent training, and a non-binary value is assigned and is handled in the following stage. After the "pre-schedule" is ascertained from the ANN, it is fed to a modified Dynamic Program for optimization.

Genetic Algorithm (GA) is a parallel search based optimization technique modelled after the biological theories of natural selection and genetic recombination [22]. Over the past decade, there have been vast improvements in the performance of the method [23]. A series of "genetic operators" are defined (such as initialize population, copy, mutation, crossover, shift, intelligent mutation, and evaluation) [22] [23] and used throughout the process. A unique aspect of GA is the use of the mutation operator that is able to identify local minima and prevent the algorithm from getting stuck [22]. A detailed example can be found in [22] or [23]. The algorithm begins with a randomized population of P members called chromosomes, where chromosomes are either binary or continuous encoded strings (variables), each representing possible solutions. Members are evaluated against the objective function and given a solution quality measure, and depending on the result, recombination (crossover operation) occurs and a new candidate population is chosen. This process is repeated iteratively and in conjunction with other methods (e.g. LR or DP) for the economic dispatch aspect of the UC problem.

Bender's Decomposition (BD) is a solution method that divides the problem into a master problem and subproblems. The master problem typically consists of an optimization of the objective function and typical constraints solved by any method, such as MILP or LR [24] [25] [26]. The subproblems can serve the method in a number of ways, most commonly to solve power flow and network operating limit aspects, and solved by methods such as Newton-Raphson [24]. Detailed examples can be found in [25]. The example aims to solve the transmission constrained UC problem. The master BD problem solves the unconstrained UC using augmented LR method, and the subproblems solve the transmission flow problem. Upon violation in a subproblem, a benders cut is generated and sent back to the master problem for inclusion in the next iteration.

7

CHAPTER 1. INTRODUCTION

1.3. RESEARCH OBJECTIVE

Table 1.1: State of the Art Comparison Method Dynamic Programming MILP Fuzzy Logic Lagrangian Relaxation Simulated Annealing Artificial Neural Network Genetic Algorithm Bender Decomposition Advantages Can be useful with heuristics; fast Scales well; fast Inherits from partner method Fast; inherits from partner method Accurate Fast Fast Inherits from partner method Disadvantages Doesn't scale well; requires simplification of complex constraints Must be entirely linear Slow; inherits from partner method Inaccurate; inherits from partner method Slow System dependent; inaccurate Complex Inherits from partner method

Conclusion It should be noted that in all cases, a {0,1} binary constrained variable was employed for generator on status. This implies that the optimization is not necessarily continuously differentiable. The disadvantage of a nondifferentiable optimization problem is that the solution method must be custom tailored to handle the discontinuities. Conversely, if the problem is differentiable, then a much wider range of generalized solution methods can be applied. A table presenting a summary of the above advantages versus disadvantages is presented in Table 1.1.

1.3

Research Objective

The research in this thesis transforms the MILP-based UC problem from a discontinuous optimization to a continuous optimization. This is done by using the theory of complementarity and succeeds in not adding a great deal of complexity or change to the formulation. The goal is to demonstrate a proof-ofconcept to provide a foundation for future work using the proposed method. The formulation presented will be vastly simplified and is intended to serve as a proof of concept rather than a proposed alternative to methods currently in use today.

8

CHAPTER 1. INTRODUCTION

1.4. THESIS OVERVIEW

1.4

Thesis Overview

Chapter 2 presents the mathematics of a classical MILP formulation of the UC problem, explaining the objective and constraints in detail. Results are presented for an optimization using this method. Chapter 3 introduces the mathematics behind the theory of complementarity, proposes a complementarity basis of the UC problem presented in Chapter 2, and walks through the reduction and transformation of the MILP formulation into a complementarity formulation. Chapter 4 presents the system data used for testing, and the results of the simulation of the proposed method of Chapter 3. Chapter 5 concludes the thesis with an overview of the results of Chapter 4, a review of how the results relate to the research objective, and how the results can be utilized in future work.

9

Chapter 2

Mixed-Integer Linear Programming Formulation
In this chapter, a full Mixed Integer Linear Program formulation of the UC problem is presented, the resulting solution space is demonstrated graphically, and results of a corresponding simulation are presented. By the end of this chapter, the reader will appreciate a standard solution of the UC problem and its drawback.

2.1

UC Formulation

A UC formulation using Mixed Integer Linear Programming by Venkatesh, Yu, Gooi and Choling is adapted and presented from [1], focusing on conventional generators only. Here, Utnm (generator unit segment on/off status) and Stn are binary variables capable of assuming values from the set {0, 1}.

Minimize total cost T C , consisting of generator unit segment fixed costs anm and per-segment energy costs bnm against the segment-wise output power Ptnm , spinning reserve costs cn , and start-up costs dn over all generator unit segments m to total segment count N M , all generator units n to total unit count

10

CHAPTER 2. MILP N G, and all hours t to total hour count N T :
NT NG NM NT NG

2.1. UC FORMULATION

TC =
t n m

(anm · Utnm + bnm · Ptnm ) +
t n

(cn · Rtn + dn · Stn )

(2.1)

Where each generator follows a typical cost curve, as shown in Figure 2.1, adapted from Table X of [1]. Even when producing no power, the fixed and startup costs attribute to a non-zero cost, which increases per unit power produced until the generator maximum limit is reached.

11

CHAPTER 2. MILP

2.1. UC FORMULATION

Figure 2.1: Cost curve of typical generator

Figure 2.2: Two-generator one load bus example

12

CHAPTER 2. MILP The minimization is subject to the following constraints:

2.1. UC FORMULATION

a) Power balance - this constraint follows from the fact that a power system bus (node) does not consume energy between output power Ptnm and demand P Dti . Note that this equation represents a linear approximation of actual power balance equations, for all buses i to bus count N B . Any number of generators and any number of loads may theoretically be connected to a given bus, and this equation governs the connections such that the load must consume all provided power. Figure 2.2 demonstrates a two-generator, one-load bus.
NG NM NB

Ptnm =
n m i

P Dti

t

(2.2)

b) Generator output limits - this constraint specifies lower and upper limits on the power output of a given generator unit. Generators are often designed to operate at certain efficiencies, which can best be achieved by ensuring the generator isn't running too light or too heavy.

Utnm · Ptnm  Ptnm  Utnm · Ptnm

t, n, m

(2.3)

c) Segment switching rule - this constraint limits the individual generator segments to be on or off, and ensures that only one segment of the unit operates for a given time, for conventional generators.
NM

0
m

Utnm  1

t, n

(2.4)

d) Spinning reserve capacity - this constraint ensures the spinning reserve capacity Rtn of a generator unit is limited to the 10-minute reserve capacity, 0, or the difference between what is currently being generated and the maximum capacity - whichever is less. This ensures no needless excess of reserve capacity.
NM

Rtn  min R10n · Utnm , PnM · Utn -
m

Ptnm

n

(2.5)

e) Capacity of largest online generator - this constraint ensures the minimum available spinning reserve of the system SRt is at least as large as the largest generator unit of the system, in case of an

13

CHAPTER 2. MILP operating contingency. SRt  PnM · Utn f) Spinning reserve criteria t, n

2.1. UC FORMULATION

(2.6)

i. Online - this constraint ensures that the total spinning reserve capacity of the system is at least a percentage () of the specified minimum spinning reserve capacity. This ensures the minimum spinning reserve capacity value is obeyed.
NG

Rtn   · SRt
n

t

(2.7)

ii. 10-minute reserve - similar to the online reserve, but this constraint looks after the offline units, to ensure that specified units (set in G10) that can start within 10 minutes are available as needed, based on their 10-minute quick start capacity P 10.
NG

Rtn +
n nG10

(1 - Utn ) · P 10  SRt

t

(2.8)

g) Generator ramp rates - this constraint ensures that the dispatch levels of a generator between intervals obeys the (likely thermal) limits of changes to generator output according to their 60-minute ramp limit R60n . -R60n 
m NM NM

Ptnm -
m

Pt-1,nm  R60n

t, n

(2.9)

h) Minimum up time - this constraint ensures that a generator is dispatched for at least the amount of time required in order to obey the (likely thermal) limits on the run time, represented by U T . In order to achieve the best performance and lifetime of a generator, a minimum amount of time it should be run for is specified.
min{T,t+U Tn }

(Ut+1,n - Utn ) · U Tn -
s=t+2

Usn  max 1, U Tn - T + t + 1

n, t = 1, . . . , T - 2 (2.10)

i) Minimum down time - this constraint ensures that when a generator is turned off, it remains off for the amount of time required by the generator (DT ), for likely thermal reasons. This helps to ensure

14

CHAPTER 2. MILP the best performance and lifetime of the generator.
min{T,t+DTn }

2.1. UC FORMULATION

(Utn - Ut+1,n ) · DTn +
s=t+2

Usn  DTn , n, t = 1, . . . , T - 2

(2.11)

j) Initial conditions - these constraints ensures that minimum up (2.10) and down (2.11) times are enforced with consideration for the generator's status in the interval before the current period of dispatch. i. Uptime: If ICn > 0 & U Tn > +ICn , then
U Tn -ICn

Utn  U Tn - ICn
t=1

n

(2.12)

ii. Downtime: If ICn < 0 & DTn > -ICn , then
DTn +ICn

Utn  0
t=1

n

(2.13)

k) Generator start-up - this constraint determines whether a generator starts up (i.e. turns from off in the previous interval to on in the current interval) for the purpose of adding the associated cost to the objective. Stn = max{Utn - Ut-1,n , 0} t, n (2.14)

l) Line flow - this constraint limits the power flow through the transmission system (P L) between buses (also see (2.2)) over their respective admittances from ki .
NB NM

P Lk 
i

ki ·
n i m

Ptnm - P Dti

 P Lk

t, k

(2.15)

where in l),

n i

NM m

Ptnm - P Dti represents the power flow to the respectively indexed bus at the

respectively indexed time.

15

CHAPTER 2. MILP

2.2. SOLUTION SPACE

2.2

Solution Space

Consider an example with two generators U1 and U2 as inputs to the optimization in (2.1)­(2.15), it results in the discontinuous, non-differentiable solution space shown in Figure 2.3. As this formulation is written as a Mixed Integer Problem, its implementation (software, or bravely otherwise) must explicitly have a restriction on Utn and Stn limiting the possible values to the set of {0, 1}. The authors of the formulation used the "MOSEK" solver in their work, which allows such explicit integer restrictions [27].

2.3

Simulation

The formulation presented in Section 2.1 was implemented by the authors using the "MOSEK optimization engine," albeit for use studying wind generators, their results are shown here for comparison as the input data is being reused [1] [28].

2.3.1

10-generator 24-hour System

This system features 14 buses and 10 generators, where load demand input data is listed in Table 2.1, and unit price input data is listed in Table 2.2. Generator on/off output statuses are provided in Table 2.4. The metrics chosen for comparison are Total Cost and the running time of the simulation. These are shown in Table 2.3.

2.3.2

26-generator 24-hour System

The system features 57 buses and 26 generators, with load demand input data listed in Table 2.5. Unit price input data is listed in Table 2.7. The metrics chosen for comparison are Total Cost and the running time of the simulation. These are shown in Table 2.6. Generator output statuses were not provided by the authors.

16

CHAPTER 2. MILP

2.3. SIMULATION

Figure 2.3: MILP Discontinuous Solution Space

Table 2.1: Load Data for 10-Generator System Hour 1 2 3 4 5 6 7 8 Load (MW) 700 750 850 950 1000 1100 1150 1200 Hour 9 10 11 12 13 14 15 16 Load (MW) 1300 1400 1450 1500 1400 1300 1200 1050 Hour 17 18 19 20 21 22 23 24 Load (MW) 1000 100 1200 1400 1300 1100 900 800

17

CHAPTER 2. MILP

2.3. SIMULATION

Table 2.2: Price Data for 10-Generator System Gen # 1 2 3 4 5 6 7 8 9 10 a n 1 = a n2 = a n 3 1000 970 700 680 450 370 480 660 665 670 bn 1 16.38 17.38 16.97 16.75 20.20 23.09 27.84 26.13 27.38 27.88 bn 2 16.48 17.45 17.54 17.07 20.79 24.18 27.96 27.51 27.51 27.98 bn 3 15.57 17.51 18.11 17.39 21.39 25.27 28.08 27.65 27.65 28.08 dn 1000 970 700 680 450 370 480 660 665 670 R60n 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000

Table 2.3: Output Data From 10-Generator System - Full MILP Variable Total Cost Running Time UC - Full MILP $575 932 8 sec

18

CHAPTER 2. MILP

2.3. SIMULATION

Table 2.4: Status Values from 10-Generator System - Full MILP Hours 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 Generators 4 5 6 7 0 1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 0 0 1 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

Table 2.5: Load Data for 26-Generator System Hour 1 2 3 4 5 6 7 8 Load (MW) 1700 1730 1690 1700 1750 1850 2000 2430 Hour 9 10 11 12 13 14 15 16 Load (MW) 2540 2600 2670 2590 2590 2550 2620 2650 Hour 17 18 19 20 21 22 23 24 Load (MW) 2550 2530 2500 2550 2600 2480 2200 1840

19

CHAPTER 2. MILP

2.3. SIMULATION

Table 2.6: Output Data From 26-Generator System - Full MILP Variable Total Cost Running Time UC - Full MILP $681 634 23 sec

Table 2.7: Price Data for 26-Generator System Gen # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 a n1 24.05 24.06 24.26 24.38 24.50 117.31 117.64 117.95 118.29 76.41 76.47 76.56 76.60 120.67 120.49 120.40 120.39 239.20 239.64 239.93 132.08 271.20 272.91 273.91 274.91 275.91 b n1 25.75 25.89 26.03 26.16 26.29 37.71 37.83 37.96 37.08 13.77 13.81 13.84 13.88 11.35 11.39 11.42 11.45 23.47 23.57 23.67 11.39 8.07 8.09 7.99 7.89 7.89 a n2 23.14 23.11 23.26 23.36 23.48 116.11 116.38 116.60 116.86 63.82 63.61 63.48 63.20 93.36 92.59 92.02 91.66 214.51 214.86 214.87 87.09 193.60 194.91 273.91 273.91 273.91 bn 2 25.91 26.06 26.21 26.34 26.47 37.84 37.97 38.10 38.23 14.13 14.17 14.21 14.26 11.66 11.71 11.74 11.78 23.69 23.79 23.90 11.61 8.46 8.48 8.38 8.28 8.18 a n3 21.71 21.61 21.68 21.76 21.87 114.24 114.41 114.47 114.62 44.03 43.39 42.92 42.15 55.60 54.01 52.80 51.95 180.39 180.61 180.22 27.12 77.20 77.91 273.91 273.91 273.91 b n3 26.07 26.23 26.39 26.52 26.65 39.97 38.10 38.25 38.39 14.48 14.53 14.58 14.64 11.97 12.02 12.07 12.10 23.91 24.01 24.12 11.83 8.85 8.87 8.77 8.67 8.57 dn 13.04 13.11 13.19 13.26 13.32 18.98 19.05 19.12 19.19 7.24 7.26 7.29 7.32 5.99 6.01 6.03 6.05 11.96 12.01 12.06 5.91 4.43 4.43 4.43 4.43 4.43 R60n 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900

20

CHAPTER 2. MILP

2.4. CONCLUSION

2.4

Conclusion

This chapter presents a detailed UC formulation featuring many practical system constraints. The solution space of the problem is visually represented using a simple 2-generator example. The formulation is then used against a 10-generator and 26-generator test system for demonstration and as an example for future comparison. It should be noted that the formulation and commercial solver produced very fast and accurate results, as well as scale very well for the larger system.

21

Chapter 3

Complementarity Formulation
This chapter is intended to introduce the mathematical theory of complementarity into the UC problem. The first connection between complementarity and Unit Commitment is presented here, and then cascaded into the MILP UC formulation of Chapter 2. By the end of this chapter, the reader will be familiar with the basic concept of complementarity and how it relates to optimization, will understand the entire transformation and be equipped for the presentation of results in the next chapter.

3.1

Mathematical Definition

Complementarity optimization arises as a solution [29] to a 1964 problem introduced by Cottle in his Ph.D thesis [30]. The goal is to solve for example variable x such that the example function F: · x0 · F (x)  0 · x, F (x) = 0 To present more plainly, consider an example problem (f ) to maximize over example variables x and y: f (x, y ) = (3x - 2)3 + (5y - 1)3 (3.1)

22

CHAPTER 3. COMPLEMENTARITY subject to x·y =0

3.2. SOLUTION SPACE

(3.2)

By inspection, it is determined only feasible when either x = 0 or y = 0, or, only along (0, 0  y  1) and (0  x  1, 0) and as such violates the Mangasarian-Fromowitz Constraint Qualification. Instead, the constraint is moved to the objective as an l1 -penalty function, f (x, y ) + M · x · y,

(3.3)

where M is a sufficiently large penalty coefficient [31] [32]. From optimization theory, the use of a constraint as a penalty function and its coefficient serve to make a violation of that constraint very "expensive" in terms of what it adds to the objective. In this presented example, if x · y = 0 then the whole term disappears from the objective. However, even a small non-zero result is magnified by the coefficient. The problem solution space is shown in Figure 3.1 (adapted from [33]) to clearly demonstrate the optimal solution is X = 0, Y = 1, which is also notably an integer result.

3.2

Solution Space

The complementarity based solution space shown in Figure 3.1 should be compared to the MILP based solution space shown earlier in Figure 2.3. It is immediately noted that the discontinuous nature of the MILP based solution space is completely absent, and that the complementarity based solution space is continuous.

3.3

Corollary into UC

Two related variables meeting the above criteria are required of the UC formulation to proceed. The variables Ptnm (output power) and Utnm (generator segment status) are chosen, as they are closely related as follows: Ptnm =    0   Ptnm if Utnm is 0 if Utnm is 1 t, n t, n

23

CHAPTER 3. COMPLEMENTARITY

3.3. COROLLARY INTO UC

A simple substitution can make the generator status and output power variables orthogonal:

Vtnm = 1 - Utnm where Vtnm is the dual of Utnm , and thus:    0   Ptnm if Vtnm is 1 if Vtnm is 0 t, n t, n

(3.4)

Ptnm =

It is shown that by complementing the definition of generator status as in (3.4), two variables in the optimization have an inner product of 0, and thus the basis of a complementarity optimization problem is formed. The complementarity constraint is then constructed such that when: · Utnm = 1, the segment is active with Ptnm > 0; Vtnm = 0 and the product Vtnm · Ptnm = 0 · Utnm = 0, the segment is inactive with Ptnm = 0; Vtnm = 1 and the product Vtnm · Ptnm = 0, which, on a per-generator basis can be expressed as:

Vtn ·
m

Ptnm = 0 t, n

(3.5)

24

CHAPTER 3. COMPLEMENTARITY

3.3. COROLLARY INTO UC

Figure 3.1: Complementarity Continuous Solution Space

25

CHAPTER 3. COMPLEMENTARITY

3.4. MAKING UC NONLINEAR

As discussed in Section 1.2, many of the other solution methods introduce complexities to the formulation or computation process. It should be noted that since equations (3.4) and (3.5) are the only requirements for reformulation, no complexity is added to the problem by complementarity. The variable Utn is replaced merely with its complement Vtn , and the complementarity constraint utilizes existing variables. Additionally, the constraint (2.4) is made redundant as the status limits are set by (3.5). The MILP formulation using Utn (2.1)­(2.9), can then be transformed to using Vtn by substituting (3.4).

3.4

Making UC Nonlinear

A full UC formulation in practice is very complex [1]. To demonstrate the introduction of the complementarity theory, a minimalistic formulation will be used going forward. Therefore, a substantial portion of variables and constraints will not be included in this new formulation. We still seek to determine an on/off schedule of generators on a per-hour basis, and will use only generator startup and ramp rate constraints. The bigger picture purpose of the UC problem is cost minimization. As the aim of this thesis is to prove the concept of complementarity, cost too will be simplified; only fixed unit costs, segment costs and start-up costs will be considered. Similar to the MILP formulation presented, no consideration is given to the effects of renewable energy sources. These would be added as an independent cost to the Total Cost if not used, or their delivered power subtracted from what conventional generators are required to supply. Consider a simplified MILP formulation, first transformed and restated below in terms of Vtnm = 1 - Utnm (3.4) or Vtn = 1 - Utn where appropriate. Thereafter, the complementarity theory is used.

Minimize:
NT NG NM NT NG

TC =
t n m

[anm - anm · Vtnm + bnm · Ptnm ] +
t n

dn · Stn

(3.6)

Subject to the constraints below, following only (2.2), (2.9) and (2.14) for simplicity:

26

CHAPTER 3. COMPLEMENTARITY a) Power balance (linear approximation):
NG NM NB

3.5. UC WITH COMPLEMENTARITY

Ptnm =
n m i

P Dti

t

(3.7)

b) Generator ramp rate:
NM NM

-R60n 
m

Ptnm -
m

Pt-1,nm  R60n

t, n

(3.8)

c) Generator start-up: Stn = max{Vt-1,n - Vtn , 0} d) Complementarity: Vtn ·
m

t, n

(3.9)

Ptnm = 0

(3.10)

3.5

UC with Complementarity

The solution space remains discontinuous and non-differentiable when Vtn · Ptn = 0. Instead of being a constraint, Vtn · Ptn must be moved to the objective as a penalty function and minimized in order to make the solution space continuous and differentiable. Using the substitution given in (3.4) and the complementarity constraint defined in (3.5) as a penalty, the formulation in (3.6)­(3.9) is transformed using complementarity. The penalty coefficient used in this formulation, 102 , was nondeterministically chosen. The coefficient was experimented with in the range of 100 ­106 , where the smallest coefficients produced poor results and the largest coefficients had detrimental effects on the run time with no measurable advantage.

Minimize total cost =
NT NG NM NT NG

anm - anm · Vtnm + bnm · Ptnm +
t n m t n

dn · Stn + 102 · Vtn ·

NM

Ptnm
m

t

(3.11)

27

CHAPTER 3. COMPLEMENTARITY Subject only to the constraints below, following (3.7)­(3.9): a) Power balance:
NG NM NB

3.6. CONCLUSION

Ptnm =
n m i

P Dti

t

(3.12)

b) Generator ramp rate:
NM NM

-R60n 
m

Ptnm -
m

Pt-1,nm  R60n

t, n

(3.13)

c) Generator start-up: Stn = max{Vt-1,n - Vtn , 0} t, n (3.14)

3.6

Conclusion

The UC formulation (3.11)­(3.14) featuring complementarity consists of a proof-of-concept model, and can be solved using any nonlinear solver. Equation (3.12) consists of a linear approximation of actual power balance equations in order to remain consistent with the MILP formulation. The MILP formulation is for a linear program and requires the approximation, however, the complementarity formulation does not require such an approximation. The following equations could be used instead, where both real and reactive power formulas are shown for completeness:
NG NM NB NB

Ptnm =
n m i

P Dti + Vi ·
k

Vk · Gik · cos (i - k ) + Bik · sin (i - k )

(3.15)

NG NM

NB

NB

Qtnm =
n m i

QDti + Vi ·
k

Vk · Gik · sin (i - k ) - Bik · cos (i - k )

(3.16)

Where the relevant quantities above are as follows: Qtnm - reactive power per segment, QDti reactive power demand, Gik , Bik , are the real and imaginary components of the admittance between buses i and k , and i and k are the phase angles at buses i and k . This data would be retrieved from the Y-Bus Matrix for the system. Vi and Vk are the voltages at buses i and k .

28

Chapter 4

Results and Evaluation
The formulation proposed in Chapter 3 was implemented for testing in MATLAB R2014a using the nonlinear solver "fmincon" from the Optimization Toolbox. It was tested accordingly on the same two test systems described in Section 2.3, and the same metrics are compared. The test simulations were run on a custom built desktop PC with an Intel Core i5 (2nd gen) quad-core processor (1600 MHz per core) and 16 GB of RAM running 64-bit Ubuntu Linux.

4.1

10-generator 24-hour System

This system features 14 buses and 10 generators, with input data listed in Tables 2.1­2.2. The metric comparison is shown in Table 4.1. Generator statuses are provided in Table 4.2. Less constraints were used in the proposed formulation for complementarity than were used in MILP, making a direct comparison of results invalid. Focusing, then, more on trends in the results, it follows that a less restrictive formulation produces a more minimized objective, since the selection of a cheap generator isn't prevented due to another constraint. Therefore, the resulting Total Cost of the complementarity formulation being significantly less than that observed of the MILP formulation indicates that the simulation followed the prediction. It can be seen that the optimization completes and results in generator statuses similar to the MILP case (given in Table 2.4) and a similar total cost. The proposed solution using complementarity based nonlinear optimization formulation took almost 6000 times as long as the solution time of the MILP 29

CHAPTER 4. RESULTS AND EVALUATION

4.2. 26-GENERATOR 24-HOUR SYSTEM

based formulation. Comparing the run times in [34] from MILP simulations run many years ago with those in [1], it can be seen that as solvers and computers improve, so does the run time. It follows that the same will happen for nonlinear solvers, and investigation of this scopes under future work described in the next chapter. The benefit of being able to use the more accurate power balance equations given in (3.15)­(3.16) applies. Figure 4.2 presents a comparison of the net system demand plotted alongside net system scheduled generation. Figure 4.1 presents the hourly marginal price of generation for the system, calculated using simulation results and (3.11) on an hourly basis, and then dividing by hourly demand.

4.2

26-generator 24-hour System

The system features 57 buses and 26 generators, with input data listed in Tables 2.5­2.7. The metric comparison is shown in Table 4.3. Generator statuses are provided in Table 4.4. As was the case with the 10-generator system simulation, less constraints were used in the proposed formulation for complementarity than were used in MILP, making a direct comparison of results invalid. The resulting Total Cost of the complementarity formulation being significantly less than that observed of the MILP formulation once again indicates that the simulation followed the prediction. It can be seen that the optimization completes, but with a less similar total cost to the MILP case. Unfortunately, generator status data for the non-complementarity case is not available. The proposed solution using complementarity based nonlinear optimization formulation took almost 7500 times as long as the solution time of the MILP based formulation. Comparing the run times in [34] from MILP simulations run many years ago with those in [1], it can be seen that as solvers and computers improve, so does the run time. It follows that the same will happen for nonlinear solvers, and investigation of this scopes under future work described in the next chapter. The benefit of being able to use the more accurate power balance equations given in (3.15)­(3.16) applies. Figure 4.4 presents a comparison of the net system demand plotted alongside net system scheduled generation. Figure 4.3 presents the hourly marginal price of generation for the system, calculated using simulation results and (3.11) on an hourly basis, and then dividing by hourly demand.

30

CHAPTER 4. RESULTS AND EVALUATION

4.2. 26-GENERATOR 24-HOUR SYSTEM

Table 4.1: Output Data Comparison For 10-Generator System Variable Total Cost Running Time UC - Complementarity $533 150 13 hrs UC - Full MILP $575 932 8 sec

Table 4.2: Complemented Status Values from 10-Generator System - Complementarity Hours 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 Generators 5 6 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

Table 4.3: Output Data Comparison For 26-Generator System Variable Total Cost Running Time UC - Complementarity $537 961 48 hrs UC - MILP $681 634 23 sec

31

CHAPTER 4. RESULTS AND EVALUATION

4.2. 26-GENERATOR 24-HOUR SYSTEM

Figure 4.1: 10 Generator System Marginal Hourly Prices

Figure 4.2: 10 Generator System Power Demand vs Supply

32

CHAPTER 4. RESULTS AND EVALUATION

4.2. 26-GENERATOR 24-HOUR SYSTEM

Table 4.4: Complemented Status Values from 26-Generator System - Complementarity Hours 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 1 0 1 0 1 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 11 1 0 0 1 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 1 12 1 0 1 0 1 0 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 13 1 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 Generators 14 15 16 17 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 18 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 22 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 23 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 24 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 25 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 26 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0

33

CHAPTER 4. RESULTS AND EVALUATION

4.2. 26-GENERATOR 24-HOUR SYSTEM

Figure 4.3: 26 Generator System Marginal Hourly Prices

Figure 4.4: 26 Generator System Power Demand vs Supply

34

CHAPTER 4. RESULTS AND EVALUATION

4.3. CONCLUSION

4.3

Conclusion

The success of the complementarity formulation is presented in this chapter. For the two test systems, the simulation results clearly show that the formulation is able to successfully dispatch power to meet the demands and furthermore, the associated costs are in line. It should be carefully noted that the resulting costs of the complementarity simulations are expected to be lower than the MILP simulations due to fewer constraints being used in the complementarity formulation. While the run-times of the MILP and complementarity formulation simulations may not seem desirable, the benefit of the continuous solution space and ability to use the accurate power balance equations must be considered, along with improvements in the chosen solver.

35

Chapter 5

Conclusion & Future Work
Optimized dispatch of generators minimizes the total cost of the energy to the consumer. Performing the optimization using MILP works well in practise, however the resulting discontinuous solution space limits solution methods and further analysis using classical methods only available for use on continuous spaces, i.e. differentiation or gradients. The objective of this work is to provide a basic proof-of-concept of incorporating complementarity into the UC optimization problem. The concept has been proven, and provides a foundation upon which to further research the problem and potential applications.

5.1

Contribution

In this thesis, the theory of complementarity was introduced as can be applied to the optimization of power system unit commitment. By complementing the generator status variable in the objective function and all constraints, and using the complementarity constraint itself, it was demonstrated that it works to produce similar output as current accepted methods. The resultant solution space of the proposed formulation, provided by complementarity, is continuous, and successfully allows for generator dispatch to be optimized. This proof of concept merits further exploration into the use of a continuous solution space, including but not limited to, use of non-approximated power balance equations.

36

CHAPTER 5. CONCLUSION & FUTURE WORK

5.2. FUTURE WORK

5.2

Future Work

Using the work of this thesis, future work on the UC problem using complementarity can be completed. A logical first step is experimentation with other solvers and/or parallel computing in hopes of finding substantially better performance. Following that, a detailed UC problem can be formulated using the proposed substitutions, to further prove the concept. The penalty function coefficient should also be deterministically chosen. Since the objective is now a continuous and differentiable function, one is not limited to using non-classical optimization techniques/algorithms to solve the UC problem as well as analyze the solution to observe the interaction of constraints. Once these basics are implemented, one may wish to explore the power balance equations in (3.15)­(3.16).

37

References
[1] B. Venkatesh, P. Yu, H. Gooi, and D. Choling, "Fuzzy MILP Unit Commitment Incorporating Wind Generators," Power Systems, IEEE Transactions on, vol. 23, pp. 1738­1746, Nov 2008. [2] Y.-Y. Hsu, C.-C. Su, C.-C. Liang, C.-J. Lin, and C.-T. Huang, "Dynamic security constrained multi-area unit commitment," Power Systems, IEEE Transactions on, vol. 6, pp. 1049­1055, Aug 1991. [3] N. Misra and Y. Baghzouz, "Implementation of the unit commitment problem on supercomputers," Power Systems, IEEE Transactions on, vol. 9, pp. 305­310, Feb 1994. [4] C. Christober and A. Rajan, "An evolutionary programming based simulated annealing method for unit commitment problem with cooling-banking constraints," in India Annual Conference, 2004. Proceedings of the IEEE INDICON 2004. First, pp. 435­440, Dec 2004. [5] F. Zhuang and F. Galiana, "Unit commitment by simulated annealing," Power Systems, IEEE Transactions on, vol. 5, pp. 311­318, Feb 1990. [6] K. Wong and Y. Wong, "Short-term hydrothermal scheduling part. i. simulated annealing approach," Generation, Transmission and Distribution, IEE Proceedings-, vol. 141, pp. 497­501, Sep 1994. [7] T. Dillon, K. Edwin, H.-D. Kochs, and R. Taud, "Integer programming approach to the problem of optimal unit commitment with probabilistic reserve determination," Power Apparatus and Systems, IEEE Transactions on, vol. PAS-97, pp. 2154­2166, Nov 1978.

38

REFERENCES

REFERENCES

[8] Z. Ouyang and S. Shahidehpour, "A hybrid artificial neural network-dynamic programming approach to unit commitment," Power Systems, IEEE Transactions on, vol. 7, pp. 236­242, Feb 1992. [9] Z. Ouyang and S. Shahidehpour, "A multi-stage intelligent system for unit commitment," Power Systems, IEEE Transactions on, vol. 7, pp. 639­646, May 1992. [10] H. Sasaki, M. Watanabe, J. Kubokawa, N. Yorino, and R. Yokoyama, "A solution method of unit commitment by artificial neural networks," Power Systems, IEEE Transactions on, vol. 7, pp. 974­ 981, Aug 1992. [11] W. Peterson and S. Brammer, "Crew constraints in lagrangian relaxation unit commitment," in Southeastcon '95. Visualize the Future., Proceedings., IEEE, pp. 381­384, Mar 1995. [12] U. Annakkage, T. Numnonda, and N. Pahalawaththa, "Unit commitment by parallel simulated annealing," Generation, Transmission and Distribution, IEE Proceedings-, vol. 142, pp. 595­600, Nov 1995. [13] J.-H. Park, S.-K. Kim, G.-P. Park, Y.-T. Yoon, and S.-S. Lee, "Modified dynamic programming based unit commitment technique," in Power and Energy Society General Meeting, 2010 IEEE, pp. 1­7, July 2010. [14] C. Zhao and Y. Guan, "Unified stochastic and robust unit commitment," Power Systems, IEEE Transactions on, vol. 28, pp. 3353­3361, Aug 2013. [15] G. Chang, Y. Tsai, C. Lai, and J. Chung, "A practical mixed integer linear programming based approach for unit commitment," in Power Engineering Society General Meeting, 2004. IEEE, pp. 221­ 225 Vol.1, June 2004. [16] D. Kadam, P. Sonwane, V. Dhote, and B. Kushare, "Fuzzy logic algorithm for unit commitment problem," in Control, Automation, Communication and Energy Conservation, 2009. INCACEC 2009. 2009 International Conference on, pp. 1­4, June 2009. [17] C.-C. Su and Y.-Y. Hsu, "Fuzzy dynamic programming: an application to unit commitment," Power Systems, IEEE Transactions on, vol. 6, pp. 1231­1237, Aug 1991.

39

REFERENCES

REFERENCES

[18] S. Chenthur pandian and K. Duraiswamy, "Fuzzy logic implementation for solving the unit commitment problem," in Power System Technology, 2004. PowerCon 2004. 2004 International Conference on, vol. 1, pp. 413­418 Vol.1, Nov 2004. [19] S. Wang, S. Shahidehpour, D. Kirschen, S. Mokhtari, and G. Irisarri, "Short-term generation scheduling with transmission and environmental constraints using an augmented lagrangian relaxation," Power Systems, IEEE Transactions on, vol. 10, pp. 1294­1301, Aug 1995. [20] T. Seki, N. Yamashita, and K. Kawamoto, "New local search methods for improving the lagrangianrelaxation-based unit commitment solution," Power Systems, IEEE Transactions on, vol. 25, pp. 272­283, Feb 2010. [21] D. Simopoulos, S. Kavatza, and C. Vournas, "Reliability constrained unit commitment using simulated annealing," Power Systems, IEEE Transactions on, vol. 21, pp. 1699­1706, Nov 2006. [22] A. Ademovic, S. Bisanovic, and M. Hajro, "A genetic algorithm solution to the unit commitment problem based on real-coded chromosomes and fuzzy optimization," in MELECON 2010 - 2010 15th IEEE Mediterranean Electrotechnical Conference, pp. 1476­1481, April 2010. [23] T. Senjyu, H. Yamashiro, K. Uezato, and T. Funabashi, "A unit commitment problem by using genetic algorithm based on unit characteristic classification," in Power Engineering Society Winter Meeting, 2002. IEEE, vol. 1, pp. 58­63 vol.1, 2002. [24] N. Laothumyingyong and P. Damrongkulkamjorn, "Security-constrained unit commitment using mixed-integer programming with benders decomposition," in Electrical Engineering/Electronics Computer Telecommunications and Information Technology (ECTI-CON), 2010 International Conference on, pp. 626­630, May 2010. [25] H. Ma, S. Shahidehpour, and M. Marwali, "Transmission constrained unit commitment based on benders decomposition," in American Control Conference, 1997. Proceedings of the 1997, vol. 4, pp. 2263­2267 vol.4, Jun 1997. [26] S. Cvijic and J. Xiong, "Security constrained unit commitment and economic dispatch through benders decomposition: A comparative study," in Power and Energy Society General Meeting, 2011 IEEE, pp. 1­8, July 2011. 40

REFERENCES

REFERENCES

[27] "Mosek modeling manual." http://docs.mosek.com/generic/modeling-letter.pdf, August 12, 2014. Accessed January 5, 2015. [28] B. Venkatesh and H. Gooi, "Unit commitment incorporating committed/ uncommitted reserve markets," Generation, Transmission and Distribution, IEE Proceedings, vol. 153, pp. 560­569, September 2006. [29] W. Heemels, J. Schumacher, and S. Weiland, "Complementarity problems in linear complementarity systems," in American Control Conference, 1998. Proceedings of the 1998, vol. 2, pp. 706­710 vol.2, Jun 1998. [30] R. Cottle, "Note on a fundamental theorem in quadratic programming," Journal of the Society for Industrial and Applied Mathematics, vol. 12, no. 3, pp. 663­665, 1964. [31] S. Leyffer, G. Lpez-calva, and J. Nocedal, "Interior methods for mathematical programs with complementarity constraints," SIAM J. Optim, vol. 17, pp. 52­77, 2004. [32] S. Leyffer, "Complementarity constraints as nonlinear equations: Theory and numerical experience," in Preprint ANL/MCS-P1054-0603, Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, pp. 169­208, Springer, 2003. [33] K. Masteri and B. Venkatesh, "A New Optimization Method for Distribution System Reconfiguration," in Electrical and Computer Engineering (CCECE), 2014 IEEE 27th Canadian Conference on, pp. 1­4, May 2014. [34] C. Wang and S. Shahidehpour, "Effects of Ramp-Rate Limits on Unit Commitment and Economic Dispatch," Power Systems, IEEE Transactions on, vol. 8, pp. 1341­1350, Aug 1993.

41

