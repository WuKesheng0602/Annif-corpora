Adaptive Time-stepping in the Numerical Solution of the Reaction-Diffusion Master Equation

by

Jill Marie Anderson Padgett Bachelor of Education, University of Toronto, 2012 Bachelor of Science, Computer Science, South Dakota School of Mines & Technology, 2007 Bachelor of Science, Applied and Computational Mathematics, South Dakota School of Mines & Technology, 2007

A thesis presented to Ryerson University

in partial fulfillment of the requirements for the degree of Master of Science in the Program of Applied Mathematics

Toronto, Ontario, Canada, 2015 c Jill Marie Anderson Padgett 2015

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A THESIS
I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research. I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand that my thesis may be made electronically available to the public.

iii

Abstract
Adaptive Time-stepping in the Numerical Solution of the Reaction-Diffusion Master Equation Master of Science 2015 Jill Marie Anderson Padgett Applied Mathematics Ryerson University

Stochastic modeling and simulation are essential tools for studying cellular processes. The dynamics of spatially heterogeneous biochemical systems with species in low amounts is governed by a discrete, stochastic model, the Reaction-Diffusion Master Equation (RDME). The Inhomogeneous Stochastic Simulation Algorithm (ISSA) is an exact numerical method for the RDME, but is prohibitively slow as it simulates every chemical reaction and diffusion event. To overcome this difficulty, an approximate strategy, the tau-leaping scheme, was developed that steps over multiple reactions and diffusion events. Mathematical models of biochemical systems are often prone to stiffness, thus computationally challenging. In this thesis, we propose an adaptive time-stepping scheme for the tau-leaping method for the RDME. This strategy is compared to the ISSA, for several models of interest. The numerical results show that the proposed adaptive technique significantly speeds-up the simulation, while maintaining excellent accuracy of the numerical solution.

v

Acknowledgements
I would like to express my sincerest thanks and gratitude to the individuals who assisted with this thesis. First of all, I would like to thank my supervisor Prof. Silvana Ilie; her ongoing support and guidance were integral to the completion of both the research and this document. Next, I would like recognize my family, in particular my husband Neil, for the constant encouragement and positive support provided to me. Afterwards, I would like to thank Steve Kanellis for all of his technical support. Finally, to my examining committee members, Dr. Jean-Paul Pascal, Dr. Katrin Rohlf, and Dr. Dejan Delic, I want to express my great appreciation for the time set aside to read the thesis and attend the thesis defense. Additionally, I would like to acknowledge the Ontario Graduate Scholarship program's financial support of this work.

vii

Contents
1 Introduction 2 Background 2.1 Chemical Master Equation and methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.1.1 2.1.2 2.1.3 2.1.4 2.1.5 2.2 2.2.1 2.2.2 2.2.3 3 Adaptivity 3.1 Accuracy criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.1.1 3.1.2 3.2 3.2.1 3.2.2 3.3 3.3.1 3.3.2 3.4 Theoretical foundation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Application to heterogenous systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . Theoretical foundation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Application to heterogeneous systems . . . . . . . . . . . . . . . . . . . . . . . . . . . Theoretical foundation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Application to heterogeneous systems . . . . . . . . . . . . . . . . . . . . . . . . . . . Derivation of the Chemical Master Equation . . . . . . . . . . . . . . . . . . . . . . . Relationship between the stochastic and deterministic biochemical kinetic models . . . Derivation of the Stochastic Simulation Algorithm . . . . . . . . . . . . . . . . . . . . Derivation of the Poisson tau-leaping algorithm . . . . . . . . . . . . . . . . . . . . . . Method for calculating a variable tau . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 5 5 6 9 11 13 14 16 17 18 20 21 21 21 24 25 25 28 30 31 33 34 37 37 41 45

RDME and methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Derivation of the Reaction-Diffusion Master Equation . . . . . . . . . . . . . . . . . . Derivation of the Inhomogeneous Stochastic Simulation Algorithm . . . . . . . . . . . Derivation of the spatial Poisson tau-leaping algorithm . . . . . . . . . . . . . . . . . .

Step rejection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

New stepping strategy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

New adaptive tau-leaping algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4 Numerical results 4.1 4.2 4.3 Turing patterns model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Production-annihilation model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Brusselator model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix

5 Conclusion References

49 58

x

List of Figures
2.1 3.1 3.2 4.1 4.2 4.3 4.4 4.5 Example of diffusion in the Reaction-Diffusion Master Equation . . . . . . . . . . . . . . . . . Leap before the restriction in place at t +  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Leap past the restriction in place at t +  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Turing patterns model: sample trajectories for species U . . . . . . . . . . . . . . . . . . . . . Turing patterns model: sample trajectories for species V . . . . . . . . . . . . . . . . . . . . . Turing patterns model: histograms for ISSA and adaptive tau algorithm at t = 3.5, tolerances = 0.2, 0.4, 0.8. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Production-annihilation model: histograms for ISSA and adaptive tau algorithm at t = 1, tolerances = 0.1, 0.2, 0.4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 47 Brusselator model: histograms for ISSA and adaptive tau algorithm at t = 1, tolerances = 0.1, 0.2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 27 27 39 40 42

xi

List of Appendices
Appendix A: Probability distributions Appendix B: Poisson Process 51 53

xiii

Chapter 1

Introduction
The area of Computational and Systems Biology has seen a rise in popularity in recent years because advancements in genetic and molecular biology have led to a rapid influx of genomic data [11]. Mathematical modeling and simulations provide an invaluable tool for analyzing these complex biological systems under a variety of experimental conditions [11, 52]. Among the approaches used to model biochemical systems are ordinary differential equations, partial differential equations, and stochastic master equations. Biochemical computer simulations test hypothesis with in silico experiments. The aim of such simulations is to test the validity of underlying model assumptions by predicting the biochemical system's dynamics. Biochemical modeling and simulation development is an iterative process. Starting with an existing biochemical system, scientists and mathematicians determine which mathematical model is most appropriate, then develop an associated computer model. The output of such a model is then compared to the existing experimental observations. If inconsistencies between the simulation and experimental data are observed, this may indicate incomplete knowledge of the biochemical system under consideration or a potential issue with the simulation. Thus, more accurate measurements or refinements to either the model or the simulation are required. Once the simulation passes validation, it can be used to test sensitivity to biological parameters, to provide predictions to be tested by in vitro and in vivo studies, or to infer relationships that may not be observable experimentally [36]. Cellular processes are typically modeled as systems of chemical reactions. The mathematical model that accurately represents the system under consideration depends on the molecular population size and the nature of the biochemical reactions in the system. When all molecular or species populations occur in large amounts, the deterministic biochemical model of the reaction-rate equations can effectively model the biochemical kinetics. The reaction-rate equations are based on the Law of Mass Action which gives a relationship between the reaction rates and the molecular concentration. On the level of a single cell, the assumption that all molecular species have large amounts is often unjustified. Certain key reactants like DNA or RNA occur in such low numbers that discrete models are required [52]. These small population numbers lead to random fluctuation within the cellular system which have been observed experimentally [13, 5]. Consequently, discrete, stochastic mathematical models are required to reproduce the dynamics of these cellular systems. 1

CHAPTER 1. INTRODUCTION A biological application that has greatly benefited from stochastic modeling is gene regulatory networks [29, 31]. Gene expression is defined as the "production of an observable molecular product (RNA or protein)" [35]. When considering the pathway from DNA to protein in a eukaroytic cell, gene expression can be regulated at six different stages including: transcriptional control, how often a gene is transcribed into RNA, RNA processing control, the splicing and processing of RNA transcripts into mRNA, and translational control, selecting which mRNA are translated into proteins. Transcriptional controls are paramount for most genes as they prevent the synthesis of unnecessary intermediates. However, transcriptional controls also aid in the transcription of genes. Transcriptional control is provided by gene regulatory proteins which bind to specific DNA sequences to influence the transcription of the gene. Gene regulatory proteins are often produced from separate genes, but can be produced by the gene they regulate. This network of gene regulatory proteins and the genes they govern form a gene regulatory network [35]. More complex gene regulatory networks describe the regulatory interactions between DNA, RNA, proteins, and small molecules [11]. Low molecular numbers are inherent to gene regulatory networks and certain cellular events, like the start and finish of transcription, may have timing fluctuation. Thus, discrete and stochastic mathematical models will generally provide the most accurate representation of the system's behaviour. Arkin et. al. [2] presented the first successful application of discrete, stochastic biochemical modeling to an in vivo experiment. The study focused on the phage  lysis-lysogeny genetic regulatory network. In their experiment, Escherichia coli cells were infected with -phage, a virus that induces either lysis1 or lysogeny
2

. They found that the fraction of cells selecting the lysogenic pathway predicted from the stochastic kinetic The discrete stochastic model that Arkin et. al. [2] used is known as the Chemical Master Equation

model was consistent with experimental observations. (CME) [41, 22]. The CME is the most refined mathematical model of homogeneous or well-stirred biochemical kinetics and is too complex to solve analytically for most biochemical systems of practical interest. Daniel Gillespie proposed the first exact numerical simulation algorithm for the CME [20, 21]. Known as the Stochastic Simulation Algorithm (SSA) or Gillespie's algorithm, this Monte Carlo method simulates individual realizations of the biochemical system's state which agree with the statistics of the CME. Other exact CME simulation algorithms include the First Reaction Method [20] and Gibson and Bruck's Next Reaction Method [19]. All of these exact simulation algorithms require the simulation of every chemical reaction, one at a time. When biochemical systems include many fast reactions or large population numbers in one or more species, the average time between reactions decreases to a point where it is no longer computationally feasible to simulate individual reactions [25]. To improve computation efficiency, Gillespie [23] proposed tau-leaping methods, approximate discrete stochastic strategies designed to improve simulation times by sacrificing a certain level of simulation detail. This technique uses a pre-determined step size  to leap over many reactions using Poisson random variables. A poor choice of  can lead to inaccuracy in the final solution or negative numbers in some molecular species. As such, a series of  selection procedures have been proposed [26, 8, 9] as well as replacing the Poisson random variables with binomial random variables [51, 10]. Gillespie [23] also proposed the Chemical Langevin Equation, a continuous stochastic method, as the bridge model between the
1 the 2 the

breakdown of the cell membrane integration of the virus's nucleic acid into the host's DNA

2

CHAPTER 1. INTRODUCTION CME and the deterministic reaction-rate equations. Additionally, hybrid methods, which combine two or more of discrete stochastic, continuous stochastic, and continuous deterministic models, have been proposed to improve simulation time for the CME [28, 43, 47, 46, 48, 54]. Moreover, many critical cellular processes such as chemotaxis [50], intracellular signal pathways [3], and cell division [30] rely on the heterogeneous distribution of the eukaryotic cell. Thus, mathematical models for these biochemical systems must include a spatial component to accurately replicate the underlying system's behaviour. Fange and Elf's [16] study of the Min system in Escherichia coli illustrates the requirement to include spatial characteristics. They found that experimental observations of two mutant strains only correlated with the results of the simulation model that incorporated randomness and discreteness along with the spatial characteristics of the process. By partitioning the biochemical system's volume into subvolumes or voxels and allowing diffusion to occur between the voxels, we can extend the Chemical Master Equation to the Reaction-Diffusion Master Equation (RDME) model [18]. This popular mesoscopic model accurately describes the kinetics of heterogeneous biochemical systems and is generally intractable for real-life applications. Similar to the CME, a number of exact numerical simulation algorithms have been developed to solve the RDME including: Stundzia and Lumsden's extension of the SSA [49], Elf and Ehrenberg's extension of the Next Reaction Method to the Next-Subvolume Method [12], MesoRD [16], and [34]. All of these methods are prohibitively slow in general [25], because they simulate every reaction and diffusion event. Furthermore, as spatial discretization becomes more refined, diffusive transport events can dominate the system dynamics [25]. To overcome these limitations, approximation techniques like tau-leaping have been extended to solve the RDME [40, 45, 37]. Hybrid methods have also been proposed to improve simulation time for the RDME [45, 38, 17]. A biochemical system is considered stiff if explicit numerical methods require very small step sizes to maintain solution stability. Mathematical models of heterogeneous biochemical systems are particularly prone to stiffness; as they generally contain a combination of fast and slow reactions leading to multiple time-scales. Additionally, as voxel size decreases, the number of diffusion events increases dramatically; thus drastically increasing the computational cost. Stiffness is computationally expensive--adaptive time-stepping and approximate techniques can significantly improve simulation efficiency for heterogeneous biochemical systems. The tau-leaping methods are the most accurate of the approximation techniques for both the CME and the RDME. Adaptivity plays a critical role for approximating the solution of the CME and RDME. Using the leaping strategies, adaptivity attempts to improve simulation time by picking the largest value of  that is compatible with the leap condition 3 . Gillespie [23] proposed the first adaptive  -selection procedure which imposed a uniform bound in the leap condition and only considers the mean of the propensity functions. Petzold and Gillespie [26] proposed an improvement to Gillespie's adaptive  -selection procedure by considering bounds on both the mean and the variance of the propensity functions. However, these methods fail to account for the potential order of magnitude differences in the propensity functions. Cao et. al. [9] provided the next incremental improvement to Petzold and Gillespie's  -selection method by bounding the
3 The

condition stating that the propensity functions remain relatively constant on the time interval  .

3

CHAPTER 1. INTRODUCTION relative changes in the propensity functions, thus accounting for propensity functions of differing magnitudes. Cao et. al. [9] then proposed a second, and now more widely used,  -selection scheme which bounds the relative changes in the molecular populations and considers the mean and variance of the molecular species. Nonetheless, Cao et. al.'s  -selection procedure still has the potential to violate the leap condition in a single species, over one step. As biochemical systems and models increase in size and complexity, it becomes computationally very expensive to complete biochemical simulation runs of even short time durations using exact methods [17]. Therefore, there exists a need for faster, but accurate approximation techniques. In this thesis, we are proposing a new adaptive  -stepping strategy for the tau-leaping method for numerically simulating the Reaction-Diffusion Master Equation [42]. We base our variable time-stepping technique on an integral controller from control theory [27]. This method has been shown to be very efficient for deterministic models, and has also been successfully applied to adapt the step size in the numerical solution of Stochastic Differential Equations [6, 33]. Our variable time-stepping scheme aims to minimize the computational cost while guaranteeing the desired accuracy. For the models tested we observed a two orders of magnitude speed-up over exact methods. To guarantee the solution accuracy, we employ post-leap checking. For each time-step, we verify that the numerical solution satisfies the leap condition with some pre-defined tolerance [23, 9], before attempting the next step. We may also reject occasionally, but store leap steps which fail the leap condition. To avoid biasing the solution statistics, we use the post-leaping checking technique described by Anderson [1] to condition the solution trajectory based on the rejected, but stored solution steps. This technique guarantees that the leap condition is always satisfied. As such, we see excellent agreement in the simulation results from our proposed numerical method when compared to the simulation results from an exact inhomogeneous stochastic simulation algorithm for the RDME, for models with molecular populations bounded away from zero. Our new and reliable adaptive tau-leaping strategy can be used as a standalone method to numerically solve the RDME. Our variable step size scheme can also be effectively integrated into hybrid methods which use tau-leaping schemes for numerically solving the RDME. Finally, we provide an overview of this thesis. In Chapter 2, we introduce the mathematical models and simulation methods for biochemical systems. We first consider homogeneous biochemical systems and discuss the mathematical theory associated with Chemical Master Equation, the Stochastic Simulation Algorithm, and the Poisson tau-leaping algorithm. We then extend the mathematical theory to heterogeneous biochemical systems and describe the Reaction-Diffusion Master Equation, the Inhomogeneous Stochastic Simulation Algorithm, and the spatial Poisson tau-leaping algorithm. In Chapter 3, we present our proposed adaptive spatial Poisson tau-leaping method. In this chapter, we outline the mechanics of accuracy estimation, time adaptivity, and step rejection; the three key features used to maintain solution accuracy. Next, in Chapter 4, we test the numerical simulation algorithm on three biochemical models to demonstrate the efficiency and accuracy of the new method. Lastly, in Chapter 5 we discuss the implications of our work and the future directions of research.

4

Chapter 2

Background
Continuous deterministic models of biochemical systems have been successfully used to model cellular processes [52]; however when these molecular systems include species in low numbers or are prone to noise amplification, deterministic models fail to accurately reproduce the system's dynamics [53], because stochasticity may dominate the system's behaviour. The Chemical Master Equation, a homogeneous discrete, stochastic model can successfully reproduce these types of system dynamics. Additionally, certain critical cellular processes like the cell cycle [30] or intra-cellular signaling [3] depend on the heterogeneous layout of the eukaryotic cell. The Reaction-Diffusion Master Equation, a heterogeneous, discrete stochastic model, incorporates spatial heterogenity by dividing the system's volume into voxels. Each voxel is treated as a homogeneous system and the species can freely diffuse between the voxels.

2.1

Chemical Master Equation and methods

Consider a biochemical system of constant volume  at thermodynamic equilibrium with N chemical species {S1 , S2 , . . . , SN } and M chemical reactions {R1 , R2 , . . . , RM }. We assume this system is well-stirred, i.e. the molecules of each chemical species are spread uniformly throughout the volume . These assumptions allow us to define the state vector, X(t) = [X1 (t), X2 (t), . . . , XN (t)] , where each Xi (t) is the number of molecules of species Si at time t. The state vector tracks the evolution of the species in the biochemical system through time. Each reaction Rj has an associated stochastic rate constant, kj , state-change vector,  j , and propensity function, aj (x), where X(t) = x is the current system state at time t. The state-change vector  j = (1j , . . . , N j )T , where each ij is the net change in species Si caused by reaction Rj . If the system is in state x and one reaction Rj occurs, then the new system state is x +  j . The set of state-change vectors { 1 ,  2 , . . . ,  M } can also be represented as a stoichiometric matrix  = [ 1 ,  2 , . . . ,  M ]. The physical meaning of the propensity function, aj (x), is that aj (x)dt gives the probability that one reaction Rj occurs in the next infinitesimal time interval [t, t + dt) given that the current system state is X(t) = x. Thus, aj (x) is the rate at which reaction Rj occurs in the system. 5
T

2.1. CHEMICAL MASTER EQUATION AND METHODS

CHAPTER 2. BACKGROUND

The form of the propensity function aj (x) follows mass-action kinetics, it is based on the order of the reaction Rj and the principles of the kinetic theory. Zeroth-order reactions have the form   Sn with aj (x) = kj . First-order reactions have the form Sn  "products" with aj (x) = kj xn . Second-order reactions have either the form Sn + Sm  "products" with aj (x) = kj xn xm or the form 2Sn  "products" with
n -1) aj (x) = kj xn (x2 . Third-orders reactions have 4 possible forms--one example is 2Sn + Sm  "products"

kj

kj

kj

kj

kj

-1)xm with aj (x) = kj xn (xn2 . For most biochemical system simulations, third- and higher-order reactions are

typically modeled as a series of first- and second-order reactions.

2.1.1

Derivation of the Chemical Master Equation

The well-stirred biochemical system described previously may be modeled by a finite state, continuous-time Markov process. A finite state, continuous-time Markov process [44] is a stochastic process with the property that the future states are independent of the past states given the present state. This can be represented formally as P (X (t + dt) = x|{X (t) = x(t)|t  [0, t]}) = P (X (t + dt) = x|X (t) = x(t)),  t  [0, ), x  S

where S is the state space of the stochastic process X . Below, we shall derive a set of differential equations whose solution gives the full transitional probability kernel for the biochemical system's dynamics. This set of differential equations is known as the Chemical Master Equation (CME). For any pair of states i and j , the transient probability, pij (t) = P {X (t + s) = j |X (s) = i}, denotes that the process is currently in state i and will be in state j at a time t later. Let vi be the rate at which the process makes a transition while in state i. Let pij be the probability that this transition brings the process to state j . Then, the instantaneous transition rate, qij = vi pij , is the rate at which the process when in state i moves to state j . Based on the definition of qij , we can derive the following relationships, vi =
j

vi pij =
j

qij

(2.1)

and pij = qij = vi qij . j qij (2.2)

Therefore, once the instantaneous transition rates are specified, the parameters of the continuous-time Markov process can be found using equations (2.1) and (2.2). Now, we will prove a series of lemmas prior to introducing the Kolmogorov's forward equations which are the basis for the CME. These results are attributed to Ross [44]. Lemma 2.1.1. The following property applies lim 1 - pii (h) = vi . h 6 (2.3)

h0

CHAPTER 2. BACKGROUND

2.1. CHEMICAL MASTER EQUATION AND METHODS

Proof. Since we assume the amount of time until the next transition is exponentially distributed, we know the probability of 1 event occurring in time h is vi h + o(h) and the probability of 2 or more events occurring in time h is o(h). We note that pii (h) is the probability that the process starts in state i at time zero and remains in state i at time h. Thus, 1 - pii (h), the probability that the process is in state i at time 0 and will not be in state i at time h is 1 - pii (h) = vi h + o(h). Dividing through by h, then taking the limit of both sides yields lim 1 - pii (h) = vi . h

h0

Lemma 2.1.2. The following holds pij (h) = qij h0 h lim when i = j. (2.4)

Proof. We note that pij (h), the probability that the process goes from state i to state j in time h, equals the probability that a transition occurs multiplied by the probability that the transition brings the process into state j . Thus, pij (h) = vi hpij + o(h), pij (h) = hqij + o(h). Dividing through by h, then taking the limit of both sides yields pij (h) = qij . h0 h lim

Lemma 2.1.3. Chapman-Kolmogorov equations For all s  0, t  0, the equation below is valid


pij (t + s) =
k=0

pik (t)pkj (s).

(2.5)

Proof. For the process to move from state i to state j in time t + s, the process must be somewhere at time 7

2.1. CHEMICAL MASTER EQUATION AND METHODS t, therefore pij (t + s) = P {X (t + s) = j |X (0) = i}


CHAPTER 2. BACKGROUND

=
k=0 

P {X (t + s) = j  X (t) = k |X (0) = i} P {X (t + s) = j |X (t) = k  X (0) = i}P {X (t) = k |X (0) = i}
k=0 

= =
k=0 

P {X (t + s) = j |X (t) = k }P {X (t) = k |X (0) = i} pjk (s)pki (t).
k=0

=

Theorem 2.1.4. Kolmogorov's forward equations For all states i, j , and times t  0, pij (t) =
k=j

qkj pik (t) - vj pij (t).

(2.6)

Proof. Starting from equation (2.5), we have


pij (t + h) - pij (t) =
k=0

pik (t)pkj (h) - pij (t) pik (t)pkj (h) + pij (t)pjj (h) - pij (t)
k=j

= =
k=j

pik (t)pkj (h) - pij (t)(1 - pjj (h)).

Dividing through by h, then taking the limit of both sides yields  pij (t + h) - pij (t) lim = lim  h0 h0 h  pkj (h) 1 - pjj (h)  pik (t) - pij (t) . h h

k=j

Since the process has a finite number of system states, we can exchange the limit and the summation, then apply Lemmas 2.1.1 and 2.1.2 to arrive at pij (t) =
k=j

qkj pik (t) - vj pij (t).

To derive the Chemical Master Equation (CME), we begin with Kolmogorov's forward equations (2.6) 8

CHAPTER 2. BACKGROUND

2.1. CHEMICAL MASTER EQUATION AND METHODS

and consider a biochemical system that goes from state i = x0 at t0 to state j = x at t. Thus, px0 x (t) =
k=x

qk x px0 k (t) - vx px0 x (t).

Given that the system is in state x, k = x -  j for j = 1, . . . , M are the only possible transitions that bring the system to this particular state. It follows that the instantaneous transition rate qk x becomes q(x- j ) x . Then, we can conclude based on the definition of the propensity function aj (x) that q(x- j ) x = aj (x -  j ). Furthermore, given that the system is in state x, x +  j for j = 1, . . . , M are the only possible transitions that bring the system from this particular state. We can conclude based on equation (2.1) and the definition
M M

of aj (x), that vx =
j =1

qx (x+ j ) =
j =1

aj (x).

Finally, letting P (x, t|x0 , t0 ) be the probability that X(t) is equal to x, given that X(t0 ) = x0 , we have P (x, t|x0 , t0 ) = px0 x (t). Therefore, by combining these results, we arrive at the following equation, P (x, t|x0 , t0 ) = MP (x, t|x0 , t0 ) t
M

(2.7) [aj (x -  j )P (x -  j , t|x0 , t0 ) - aj (x)P (x, t|x0 , t0 )] ,

=
j =1

which represents the Chemical Master Equation [41, 22]. It governs the dynamics of well-stirred biochemical kinetics. Model (2.7) is a system of linear ordinary differential equations (ODEs) with one equation for each possible system state. This model is homogeneous, discrete and stochastic and is intractable for most biochemical systems.

2.1.2

Relationship between the stochastic and deterministic biochemical kinetic models

The classical deterministic biochemical kinetic model of the reaction-rate equations (RRE) may be derived under certain assumptions from the stochastic biochemical kinetic model (see: Wilkinson [55] for more details). We start by deriving a set of differential equations by considering the expected value of   E (X(t)) = t t =
xS

xP (x, t|x0 , t0 ),
xS

x

 P (x, t|x0 , t0 ), t

9

2.1. CHEMICAL MASTER EQUATION AND METHODS where S is the state space of the process. Applying equation (2.7) yields  E (X(t)) = t =
xS M

CHAPTER 2. BACKGROUND

x
xS

 P (x, t|x0 , t0 ) t 
M j =1



x

[aj (x -  j )P (x -  j , t|x0 , t0 ) - aj (x)P (x, t|x0 , t0 )]

=
j =1 xS

xaj (x -  j )P (x -  j , t|x0 , t0 ) -
xS

xaj (x)P (x, t|x0 , t0 ) .

In the previous equation, we are summing over every possible system state x. Consequently, we can exchange x +  j for x because x +  j  S . Thus  E (X(t)) = t
M

(x +  j )aj (x)P (x, t|x0 , t0 ) -
j =1 xS xS

xaj (x)P (x, t|x0 , t0 ) .

From the definition of the expected value we can rewrite the equation as  E (X(t)) = t
M

[E ((X(t) +  j )aj (X(t))) - E (X(t)aj (X(t)))] .
j =1

Then, applying linearity of expectation yields  E (X(t)) = t =
j =1 M

E ( j aj (X(t)))
j =1 M

 j E (aj (X(t))).

Now, let E (X(t)) = y(t) be the expected value of the system state at time t. Then, d y(t) = dt If E (aj (X(t))) = aj E (X(t)), then d y(t) = dt
M M M M

 j E (aj (X(t))).
j =1

(2.8)

 j E (aj (X(t))) =
j =1 j =1

 j aj (E (X(t))) =
j =1

 j aj (y(t))

10

CHAPTER 2. BACKGROUND

2.1. CHEMICAL MASTER EQUATION AND METHODS

and the evolution of the expected value of the system state, which was modeled by the stochastic biochemical kinetic model satisfies the deterministic continuous model of the RRE. Equation (2.8) is valid for the following forms of the propensity function aj (X(t)): · aj (X(t)) = kj , since E (aj (X(t))) = E (kj ) = kj = aj (X(t)), · aj (X(t)) = kj xi , as E (aj (X(t))) = E (kj xi ) = kj E (xi ) = aj (E (X(t))). Therefore, if the biochemical system is only comprised of zero- or first-order reactions, the RRE may be derived by taking the expected value of the stochastic model of the CME. Equation (2.8) is not necessarily true for the propensity function aj (X(t)) = kj xi xl , because E (aj (X(t))) = E (kj xi xl ) = kj E (xi xl ) = kj E (xi )E (xl ), as the populations of species Si and Sl are not independent in general. In the thermodynamic limit, defined by Gillespie [24] as "the limit in which the species populations Xi and the system volume  all approach infinity, but in such a way that the species concentrations Xi / stay constant", the stochastic effects become negligible compared to the deterministic term. Thus, in biochemical stochastic models where the number of molecules of the species is generally greater than 1000, we are often able to reduce the stochastic model to that of the deterministic reaction-rate equations.

2.1.3

Derivation of the Stochastic Simulation Algorithm

Since the CME (2.7) is intractable for most biochemical systems, numerical simulation algorithms have been developed to compute its solution. One commonly used simulation approach is the Stochastic Simulation Algorithm (SSA) or Gillespie's algorithm [20, 21]. This exact algorithm simulates each reaction in the system and the time when it occurs. Each simulation generates a possible realization of the stochastic process X, not the entire probability distribution. Assuming that the system is in state X(t) = x at time t, we are interested in the probability that (a) the next reaction will take place in the infinitesimal time interval [t + , t +  + d ) and (b) will move the system to state x +  j because the j th reaction fired. Let p(x +  j , , |x, t)dt denote this probability. It follows that p(x +  j , , |x, t)dt = P (Next reaction in [t + , t +  + d )|x, t) × P (x +  j |Next reaction in [t + , t +  + d ), x, t). (2.9)

The following propositions, according to Wilkinson [55], will be used to justify our derivation of the SSA.

11

2.1. CHEMICAL MASTER EQUATION AND METHODS

CHAPTER 2. BACKGROUND

Proposition 2.1.5. If Xi  Exp(i ), i = 1, 2, . . . , n, are independent random variables, then
n

X0  min{Xi }  Exp(0 ), where 0 =
i i=1

i .

Proposition 2.1.6. If Xi  Exp(i ), i = 1, 2, . . . , n, are independent random variables, let j be the index of the smallest in value of the Xi . Then j is a discrete random variable with probability mass function (PMF) i = i , 0
n

i = 1, 2, . . . , n, where 0 =
i=1

i .

First, consider P (Next reaction in [t + , t +  + d )|x, t). For j = 1, 2, . . . , M , the time until reaction Rj occurs, assuming no other reactions have occurred in the interim, is an Exp(aj (x)) random variable. Therefore, we can apply the result from Proposition 2.1.5 to find the minimum time to the next reaction,  ,
M

as Exp(a0 (x)) where a0 (x) =
j =1

aj (x). Since an exponential random variable has the form Exp() = e-x ,

the probability that the next reaction will take place in [t + , t +  + d )1 is P (Next reaction in [t + , t +  + d )|x, t) = a0 (x)e-a0 (x) d. Next, consider P (x +  j |Next reaction in [t + , t +  + d ), x, t). This can be rewritten as P (X(t +  + d ) = x +  j |[X(t +  ) = x]  [X(t +  + d ) = x]) = P (X(t +  + d ) = x +  j |X(t +  ) = x) = P (X(t +  + d ) = x|X(t +  ) = x) aj (x)d
M

(2.10)

.

aj (x)d
j =1

Thus, P (x +  j |Next reaction in [t + , t +  + d ), x, t) = aj (x) . a0 (x) (2.11)

From Proposition 2.1.6, we recognize equation (2.11) as the probability mass function for the specific reaction Rj that has occurred during the time interval [t + , t +  + d ). Substituting equation (2.10) and equation (2.11) into equation (2.9) yields p(x +  j , , |x, t) = aj (x) a0 (x)e-a0 (x) . a0 (x) (2.12)

The function p(x +  j , , |x, t) is the joint density function for two independent random variables: the next reaction index, j , and the time to next reaction,  . Equation (2.12) provides the mathematical
 +d 1 P (

< T <  + d ) =


fT (y )dy

fT ( )d for small d .

12

CHAPTER 2. BACKGROUND

2.1. CHEMICAL MASTER EQUATION AND METHODS

basis for the Stochastic Simulation Algorithm (SSA) [20]. Because the next reaction index, j , and the time to next reaction,  , are independent random variables, these two values can be simulated separately. Stochastic Simulation Algorithm 1. Initialize the time t = t0 and system state X(t0 ) = x0 . 2. Generate two independent uniform U (0, 1) random numbers 1 and 2 .
M

3. Evaluate ai (X(t)) for i = 1, . . . , M and a0 =
i=1

ai (X(t)). 1 ln a0 1 . 1
j

4. Calculate the time to the next reaction  =

5. Calculate the next reaction index, j , as the smallest integer satisfying
i=1

ai (X(t)) > 2 a0 .

6. Set X(t +  ) = X(t) +  j and update t to t +  7. Return to step 2. The SSA provides an exact method for numerically solving the CME (2.7), but can be prohibitively slow in practice, as often some biochemical reactions occur on a very fast time-scale.

2.1.4

Derivation of the Poisson tau-leaping algorithm

Poisson tau-leaping is one approximate method for numerically solving the CME (2.7), that aims to reduce the computational cost of the stochastic simulation with an insufficient effect on the accuracy. Like the SSA, each simulation yields a single state vector, not the entire probability distribution. The SSA assumes that the time-step  is so small that only one reaction will occur during each time-step. If this requirement is relaxed, the exact state of the system at time t +  is found by the following equation, proven by Kurtz [15]:
M t+

X(t +  ) = X(t) +
j =1

 j Pj
t t+ t

aj (X(s))ds ,

(2.13)

where Pj (·) is a Poisson random variable with parameter

aj (X(s))ds. If we assume that  is small aj (X(t)).

enough such that all of the propensity functions aj (X(t)), for j = 1, . . . , M , remain relatively constant on the interval t  s  t +  , i.e. that relatively few chemical reactions fire, then aj (X(s)) Therefore,
t+ t+

aj (X(s))ds
t t

aj (X(t))ds
t+

= aj (X(t))
t

ds

= aj (X(t)). 13

2.1. CHEMICAL MASTER EQUATION AND METHODS Thus, we can approximate
t+

CHAPTER 2. BACKGROUND

Pj
t

aj (X(s))ds

Pj (aj (X(t)) ).

By substituting this equation into equation (2.13), we arrive at
M

X(t +  ) = X(t) +
j =1

 j Pj (aj (X(t)) ),

(2.14)

known as the tau-leaping method [23]. Equation (2.14) provided the mathematical basis for the Poisson tau-leaping algorithm. Tau-leaping Algorithm 1. Initialize the time t = t0 and system state X(t0 ) = x0 . 2. Evaluate aj (X(t)) for j = 1 . . . M . 3. Generate M independent Poisson random numbers pj , from Pj (aj (X(t)) ).
M

4. Set X(t +  ) = X(t) +
j =1

 j pj and update t to t +  using either a fixed or variable  .

5. Return to step 2. By allowing several chemical reactions to occur at each time-step, the Poisson tau-leaping algorithm can significantly reduce the time it takes to numerically solve the CME (2.7).

2.1.5

Method for calculating a variable tau

When implementing the Poisson tau-leaping strategy, we want to guarantee that  is chosen small enough so that the Leap Condition is satisfied: all propensity functions aj (X(t)) remain relatively constant on the time interval [t, t +  ). The Leap Condition is the name generally given to the assumption that reduces equation (2.13) to equation (2.14). One commonly used approach for selecting  employs a pre-leap check, meaning that for every leap step, we first apply a set of criteria designed to select the optimal  , then generate the new system state based on that  . The Poisson tau-leaping algorithm presented in the previous section uses this approach. The first method in the literature designed for generating a  that obeys the leap condition was proposed by Gillespie [23], which was then improved by Petzold [26]. For some small prescribed error tolerance > 0, we want to find a  prior to each leap step such that the following relationship is satisfied, |aj (X(t +  )) - aj (X(t))|  max { aj (X(t)), kj } for j = 1, . . . , M, (2.15)

where kj is the stochastic rate constant and is the smallest amount propensity function aj can change. Petzold [26] outlines a  selection procedure which guarantees that equation (2.15) is satisfied. This method 14

CHAPTER 2. BACKGROUND

2.1. CHEMICAL MASTER EQUATION AND METHODS

is not always accurate; moreover, the intermediate calculations required prior to each leap tend to be very time consuming. As such, Cao et. al. [9] developed a different  selection procedure which bounds the relative changes in the molecular populations, Xi (t), instead of the propensity functions, aj (X(t)). Thus, we now want to satisfy the following relationship |Xi (t +  ) - Xi (t)|  max { i Xi (t), 1} , (2.16)

where i  Irs and Irs denotes the set of indices of all reactant species. This condition requires that the relative change in Xi is bounded by reaction. The relationship between
i i,

such that Xi will never change by an amount less than 1. Even when

Xi (t) contains a few molecules, the relationship |Xi (t +  ) - Xi (t)|  1 permits Xi (t)'s participation in one and the user prescribed error tolerance
i

is (2.17)

=

gi

,

where gi = gi (Xi (t)) is defined as follows. Let HOR(i) denote the highest order of reaction in which species Si appears as a reactant. (i) If HOR(i) = 1, take gi = 1. (ii) If HOR(i) = 2, take gi = 2, except if any second-order reaction requires two Si molecules instead take gi = 2+ 1 Xi (t) - 1

(iii) If HOR(i) = 3, take gi = 3, except if any third-order reaction requires two Si molecules instead take gi = 3 2 2+ 1 Xi (t) - 1 ,

except if any third-order reaction requires three Si molecules instead take gi = 3+ 1 2 + Xi (t) - 1 Xi (t) - 2 .

It is important to note that gi will remain constant throughout the simulation, except where several molecules of species Si participate in a given reaction. The length of  is given by [9]  = min max{ Xi (t)/gi , 1} (max{ Xi (t)/gi , 1})2 , |µ ^i (X(t))| (^ i (X(t)))2 15 , (2.18)

iIrs

2.2. RDME AND METHODS where
M

CHAPTER 2. BACKGROUND

µ ^i (X(t)) =
j =1 M

ij aj (X(t)), (ij )2 aj (X(t)).
j =1

 ^i (X(t))2 =

The computation of  using equation (2.18) is relatively expensive. Furthermore, it does not guarantee that the leap condition is satisfied over the step  in general.

2.2

Reaction-Diffusion Master Equation and methods

The Reaction-Diffusion Master Equation (RDME) [18] is a very popular mesoscopic model that extends the CME and accounts for the spatially inhomogeneous layout of the eukaryotic cell. The biochemical system's volume is partitioned into K subvolumes or voxels {1 , . . . , K } of edge length h, where each voxel k is treated as a well-stirred system. When extending the CME to the RDME, the following changes occur within the system. First, the M chemical reactions Rj are replaced by KM reactions, Rjk , where Rjk is reaction Rj in voxel k . The N -dimensional state vector X(t) becomes a N ×K -dimensional state vector X(t) = [X1 (t), . . . , XK (t)], where for each voxel k , Xk (t) = [X1k (t), . . . , XN k (t)]
T

and each

Xik (t) is the number of molecules of species Si in voxel k at time t. The propensity function aj (x) for reaction Rj now becomes ajk (xk ) for reaction Rjk , where Xk (t) = xk is the current state of the system for voxel k at time t. The state-change vector  j for reaction Rj becomes  jk for reaction Rjk . Thus, if voxel k is in state xk and one reaction Rjk occurs, the new system state for voxel k is xk +  jk . For the RDME, chemical species Si is allowed to diffuse from voxel k to voxel l so long as voxel k and voxel l are in contact (see Figure 2.1). This diffusion is modeled as a uni-molecular diffusive transfer
d reaction, Rikl . If B is the total number of shared surfaces of adjacent voxels, then there will be 2BN possible d diffusive transfer reactions in the system. Similar to the CME, each diffusion Rikl has an associated stochastic d diffusion rate constant, di , a diffusion state-change vector,  d ikl , and a diffusion propensity function, aikl (x).

The diffusive transfer reaction has the form
i Xik  Xil ,

d

where the rate constant di = state-change vector d ikl

Di h2

with diffusion coefficient, Di , and length of the voxel, h. The diffusion

decreases Xik (t) by 1 and increases Xil (t) by 1. If the system is in state x and

d one diffusion Rikl occurs, then the new system state is x +  d ikl . As in the CME, the physical meaning of d the diffusion propensity function, ad ikl (x), is that aikl (x)dt gives the probability that one Si molecule diffuses

from voxel k to voxel l in the next infinitesimal time interval [t, t + dt) given that the current system state X(t) = x. The diffusion propensity function has the form ad ikl (x) = di xik , where the rate constant di = with diffusion coefficient, Di , and length of the voxel, h. 16
Di h2

CHAPTER 2. BACKGROUND

2.2. RDME AND METHODS

u k l

u k l Figure 2.1: Example of diffusion in the Reaction-Diffusion Master Equation

2.2.1

Derivation of the Reaction-Diffusion Master Equation

Like the CME, the system described above may be modeled by a finite state, continuous-time Markov process. The system of differential equations whose solution gives the full transitional probability kernel for the biochemical system's dynamics with diffusion is known as the Reaction-Diffusion Master Equation [18]. For a biochemical system which only includes reactions, the master equation is P (x, t|x0 , t0 ) = MP (x, t|x0 , t0 ) t
K M

=
k=1 j =1

[ajk (xk -  jk )P (xk -  jk , t|xk0 , t0 ) - ajk (xk )P (xk , t|xk0 , t0 )] .

Note that for K = 1 this equation reduces to the CME in equation (2.7). For a biochemical system which only includes diffusions, the master equation is P (x, t|x0 , t0 ) = DP (x, t|x0 , t0 ) t
K K N d d d ad ikl (x -  ikl )P (x -  ikl , t|x0 , t0 ) - aikl (x)P (x, t|x0 , t0 ) . k=1 l=1 i=1

=

In the limit the diffusion of species Si is governed by Einstein's diffusion equation, p(r, t) = Di t
2 r

p(r, t),

where r is the position, p is the position probability density function of the Si molecule and Di is its diffusion coefficient [25]. Thus, for a biochemical system which includes both reactions and diffusions, this system can be considered a much larger dimensional Chemical Master Equation. The full RDME [18] is the sum of all of the reactions 17

2.2. RDME AND METHODS and diffusions over the set of voxels {k }, P (x, t|x0 , t0 ) = t 
K

CHAPTER 2. BACKGROUND

M


k=1 j =1 K

[ajk (xk -  jk )P (xk -  jk , t|xk0 , t0 ) - ajk (xk )P (xk , t|xk0 , t0 )]
N d d d ad ikl (x -  ikl )P (x -  ikl , t|x0 , t0 ) - aikl (x)P (x, t|x0 , t0 )

+
l=1 i=1 K M

=
k=1 j =1 K

[ajk (xk -  jk )P (xk -  jk , t|xk0 , t0 ) - ajk (xk )P (xk , t|xk0 , t0 )]
K N d d d ad ikl (x -  ikl )P (x -  ikl , t|x0 , t0 ) - aikl (x)P (x, t|x0 , t0 ) k=1 l=1 i=1

+

=MP (x, t|x0 , t0 ) + DP (x, t|x0 , t0 ).

(2.19)

Model (2.19) governs the dynamics of heterogeneous biochemical kinetics. As with the CME, the RDME model (2.19) is a system of linear ODEs with one equation for each possible system state. It is discrete and stochastic and is also intractable for most biochemical systems. Moreover, the RDME is much more challenging to simulate numerically than the CME of a biochemical system without diffusion.

2.2.2

Derivation of the Inhomogeneous Stochastic Simulation Algorithm

Analogous to the CME, numerical simulation algorithms have been developed to solve the RDME. One common exact algorithm used is an extension of the SSA, and it is called the Inhomogeneous Stochastic Simulation Algorithm (ISSA). The ISSA simulates every reaction, diffusion, and the time at which it occurs. As before, each simulation yields a single state vector, not the full probability distribution. To implement the ISSA, we partition the system's volume  into K voxels using a uniform n-dimensional Cartesian mesh. For now, we assume that n = 3 when describing the partitioned system and associated ISSA, but n can easily be reduced to n = 1 or n = 2. To facilitate simulation, we will consider the voxel index k for k as a vector k  K = {[k1 , k2 , k3 ] | k1 = 1, . . . Kx , k2 = 1, . . . , Ky , k3 = 1, . . . , Kz }, where k1 corresponds to the x-axis, k2 corresponds to the y-axis, and k3 corresponds to the z-axis. When modeling diffusion, we treat all diffusions as unimolecular chemical reactions and scale the diffusion constant Di by di =
Di h2

where h is the length of the voxel. We allow the diffusive species Si to flow freely

throughout the volume  but treat the volume 's boundaries as reflective. By dividing the volume  into a uniform Cartesian mesh, we can easily determine all voxels l that are in contact with voxel k . Let E = {[1, 0, 0] , [-1, 0, 0] , [0, 1, 0] , [0, -1, 0] , [0, 0, 1] , [0, 0, -1]} be the set of possible diffusion directions. Then, any adjacent voxel l must have l = k + ,   E . By iterating over the set E , we can account for all directions of diffusion from any voxel k . If voxel k is located in the interior of the volume , any species Si in voxel k is allowed to diffuse in all 6 directions. If voxel k is located on the boundary of the volume , any species Si in voxel k is only allowed to diffuse in the directions that keep it within the volume . 18

CHAPTER 2. BACKGROUND

2.2. RDME AND METHODS

From this set of assumptions, we will now redefine our diffusion propensity function as ad ike (x), where e is the index that indicates the direction of diffusion from voxel k . The propensity function ad ike (x) = 0, if species Si does not diffuse or if e is a diffusion direction that takes species Si outside the volume . In the ISSA, the time to next reaction,  , is calculated similarly to the SSA, taking into account all the reaction and diffusive events. However, the next reaction index, j , in the SSA now becomes a next event index in the ISSA. This means that at every time-step in the ISSA, either a reaction has occurred with next reaction index, j k, where j indicates the reaction Rj and k indicates the voxel k or a diffusion has occurred with next diffusion index, ike, where i indicates the species Si , k indicates the voxel k , and e indicates the direction of diffusion. Inhomogeneous Stochastic Simulation Algorithm [49]

1. Initialize the time t = t0 and system state X(t0 ) = x0 . 2. Generate two independent uniform U (0, 1) random numbers 1 and 2 . 3. Evaluate aj
k

(Xk (t)) for all j = 1, . . . , M and k  K and evaluate ad i k e (X(t)) for all i = 1, . . . , N ,

k  K, and e = 1, .., |E|. 4. Evaluate
M

 

Kx

Ky

Kz

 aj
k1 k2 k3 (Xk

|E|

N

 

Kx

Ky

Kz

  ad i k1 k2 k3 e (X(t)) .

a0 =
j =1

(t)) +
e =1 i =1

k1 =1 k2 =1 k3 =1

k1 =1 k2 =1 k3 =1

5. Calculate the time to the next reaction  =

1 ln a0

1 . 1

6. Calculate next event index as either (a) or (b) where (a) the next reaction index, j k, is the smallest quadruple (j, k1 , k2 , k3 ) satisfying
j

 

k1

k2

k3

 aj
k1 k2 k3 (Xk

(t)) > 2 a0 .

j =1

k1 =1 k2 =1 k3 =1

(b) the next diffusion index, ike, is the smallest quintuple (i, k1 , k2 , k3 , e) satisfying
M

 

Kx

Ky

Kz

 aj
k1 k2 k3 (Xk

(t)) +
e i

j =1

k1 =1 k2 =1 k3 =1

 

k1

k2

k3

  ad i k1 k2 k3 e (X(t)) > 2 a0 .

e =1 i =1

k1 =1 k2 =1 k3 =1

7. If a reaction occurred, set Xk (t +  ) = Xk (t) +  j k or if a diffusion occurred, set X(t +  ) = X(t) +  d ike and update t to t +  . 19

2.2. RDME AND METHODS 8. Return to step 2.

CHAPTER 2. BACKGROUND

Given that the number of possible reactions and diffusions in the ISSA is now KM + 2BN , where B is the total number of shared surfaces of adjacent voxels, compared to the M reactions in the SSA, we can see that solving the RDME using this algorithm is even more prohibitively slow than solving the CME with the SSA.

2.2.3

Derivation of the spatial Poisson tau-leaping algorithm

One algorithm used to improve the simulation time for the RDME is to extend the Poisson tau-leaping algorithm, used to numerically solve the CME, to the spatial Poisson tau-leaping algorithm for the RDME. Like the well-stirred case, the spatial Poisson tau-leaping method is an approximate algorithm which allows several chemical reactions and diffusions to occur during a given time-step  . Again, assuming all of the reaction propensity functions ajk (xk (t)) and diffusion propensity functions ad ikl (x(t)) remain relatively constant during the interval t  s  t +  , the number of reactions and diffusions that occur is well approximated by Poisson random variables with parameters ajk (xk (t)) and ad ikl (x(t)) , respectively. Like for the ISSA, we partition the volume  into K voxels using a uniform n-dimensional mesh and follow the same indexing for voxel k . We treat all diffusions as a type of unimolecular chemical reaction with the same diffusion behaviour as outlined for the ISSA. We will retain the definition of the diffusion propensity function described in the ISSA as ad ike (x), where e is the index indicating the direction of diffusion from voxel k . Thus, the number of molecules of species Si that diffuse from voxel k in direction e is Pike ad ike (X(t)) . Spatial Poisson tau-leaping algorithm 1. Initialize the time t = t0 and system state X(t0 ) = x0 . 2. Evaluate aj k (Xk (t)) for all j = 1, . . . , M and k  K and evaluate ad ike (X(t)) for all i = 1, . . . , N , k  K, and e  E . 3. Generate KM independent Poisson random numbers pj k , from Pj k (aj k (Xk (t)) ), and K |E|N independent Poisson random numbers pike , from Pike ad ike (X(t)) . 4. Set
M N

X(t +  ) = X(t) +
kK j =1

 j k k pj k +
kK eE i=1

d ike pike

where k is a 1 × K vector with 1 in the kth position and 0's elsewhere. 5. Update t to t +  using either a fixed or variable  . 6. Return to step 2.

20

Chapter 3

Adaptivity
Most biochemical systems include a combination of slow and fast reactions leading to multiple time-scales. These multiple time-scales in conjugation with diffusive systems with short voxel lengths lead to very small step sizes. Small step sizes then generate mathematically stiff problems and long simulation run times. Adaptive methods are known to drastically improve simulation efficiency. We are proposing a new adaptive tau-leaping method with post-leap checking to improve the simulation time of the Reaction-Diffusion Master Equation (see also Padgett & Ilie [42]).

3.1

Accuracy criteria

Our proposed adaptive tau-leaping algorithm aims to satisfy the accuracy criteria while improving the computational cost of the simulation. As we shall see below the accuracy criteria is based on guaranteeing that the leap condition is obeyed.

3.1.1

Theoretical foundation

We first present the justification for partitioning the species into two distinct sets, then introduce the formulae used to ensure our accuracy criteria is satisfied. The following sections consider the homogeneous system.

Partition the molecular populations Xi (t) The Cao et. al. [9] leap condition (2.16) can be reposed as |Xi (t +  ) - Xi (t)|  max Xi (t)
i,

1 Xi (t)

,

(3.1) and the small parameter

for any 1  i  N so long as Xi (t) = 0. The relationship between the tolerance
i

is given in equation (2.17). Thus, there exists two potential bounds for the change in the molecular 21

3.1. ACCURACY CRITERIA population Xi : the local relative change |Xi (t +  ) - Xi (t)|  Xi (t) and the local absolute change |Xi (tn + n ) - Xi (tn )|  1.
i

CHAPTER 3. ADAPTIVITY

(3.2)

(3.3)

When the population of Xi (t) is sufficiently large, we find that equation (3.2) provides effective bounding for the local relative change of Xi (t). We denote the set of species with large population numbers, XL , where XL = {Xi (t) | i Xi (t) > 1, i = 1, . . . , N }. |Xi (t +  ) - Xi (t)|  i unless the number of Xi (t) does Xi (t) not change from time t to time t +  , effectively halting any reaction Rj with the net change of species Si , However, if the population of Xi (t) is too small, |ij |  1. We denote the set of species with small population numbers, XS , where XS = {Xi (t) | i Xi (t)  1, i = 1, . . . , N }. The set XS is bounded using equation (3.3) so Xi (t) may still participate in a reaction during  . The critical threshold where Xi (t) switches between XS and XL is determined by considering |Xi (t +  ) - Xi (t)| = Xi (t)
i.

If we assume the smallest possible net change of Xi (t) on the interval [t, t +  ) is 1 and apply equation (2.17), we arrive at the formula for the critical threshold, ci , 1 = , Xi (t) gi gi ci = Xi (t) = . Local change computations The previous analysis demonstrates the need for two distinct local change calculations to guarantee our leap condition is satisfied. Once each Xi (t) has been classified as having either a large or a small population, we can apply the following local change formulae. Large population species, XL as ei = |Xi (t +  ) - Xi (t)| . Xi (t) 22 (3.5) For each Xi (t)  XL , ei , the local relative change for Xi (t), is calculated

(3.4)

CHAPTER 3. ADAPTIVITY We also define eL , the global relative change for XL , as eL = max {ei }.

3.1. ACCURACY CRITERIA

Xi (t)XL

Small population species, XS as

For each Xi (t)  XS , Ei , the local absolute change for Xi (t), is calculated

Ei = |Xi (t +  ) - Xi (t)|. We also define ES , the global absolute change for XS , as ES = max {Ei }.

(3.6)

Xi (t)XS

Accuracy criteria and rejections The Cao et. al. [9] method for  -selection (also presented in Section 2.1.5) may still calculate  so big that it violates the leap condition for one or more species. To overcome this limitation, Anderson [1] outlines the post-leap checking Poisson tau-leaping strategy for well-stirred biochemical systems which guarantees that the leap condition is satisfied for all Xi (t). His method selects  , generates a new potential system state, and then verifies that the potential system state satisfies the leap condition. If the leap condition is satisfied, the leap is accepted, otherwise the leap is rejected. We consider the sets XL and XS separately when validating the leap condition.

Large population species

For all Xi (t)  XL , we use equation (3.5) to calculate the local relative change.

To satisfy the leap condition imposed on XL , every local relative change ei must satisfy ei = |Xi (t +  ) - Xi (t)|  Xi (t)
i.

(3.7)

Small population species For all Xi (t)  XS , equation (3.6) is used to determine the local absolute change. To satisfy the leap condition imposed on XS , every local absolute change Ei must obey Ei = |Xi (t +  ) - Xi (t)|  Zi , (3.8)

where Zi = max{|ij |} is the consumption rate of species Si . Typically, Zi = 1, as only one molecule of
j

species Si is produced or consumed by a given reaction. Should any of the elements in XL fail the leap condition (3.7) or any of the elements in XS fail the leap condition (3.8), we reject the entire leap step. 23

3.1. ACCURACY CRITERIA

CHAPTER 3. ADAPTIVITY

3.1.2

Application to heterogenous systems

When applying the previous analysis to our proposed spatial Poisson tau-leaping algorithm, we update the definitions and equations to reflect the discretization of the volume  into voxels k . These updated equations help maintain our solution accuracy and provide input to our stepping strategy. For every time-step tn , we divide the set {Xik } into two sets XL and XS . The set of species with large population numbers XL is now XL = {Xik (tn )|Xik (tn ) > ci , i = 1, . . . , N, k  K} and the set of species with small population numbers XS is now XS = {Xik (tn )|Xik (tn )  ci , i = 1, . . . , N, k  K}, (3.10) (3.9)

where the critical threshold ci comes from equation (3.4). Afterwards, we calculate the local changes and validate the leap condition as follows.

Large population species, XL To calculate the local relative change for all Xik (tn )  XL , we update equation (3.5) to e ik = |Xik (tn + n ) - Xik (tn )| . Xik (tn ) (3.11)

We also update eL , the global relative change for XL , as eL = max {eik }. (3.12)

Xik (tn )XL

Then, we use the local relative changes calculated with equation (3.11) to validate our updated leap condition. Every local relative change eik is required to satisfy e ik = |Xik (tn + n ) - Xik (tn )|  Xik (tn )
i,

(3.13)

otherwise, we reject the entire leap step n .

Small population species, Xs To calculate the local absolute change for all Xik (tn )  XS , we change equation (3.6) to Eik = |Xik (tn + n ) - Xik (tn )|. 24 (3.14)

CHAPTER 3. ADAPTIVITY and ES , the global absolute change for XS , becomes ES = max {Eik }.

3.2. STEP REJECTION

Xik (tn )XS

(3.15)

Afterwards, we use the local absolute changes calculated with equation (3.14) to validate our updated leap condition. Every local absolute change Eik must satisfy Eik = |Xik (tn + n ) - Xik (tn )|  Zi , (3.16)

where Zi = max{|ijk |} is the consumption rate of species Si . We reject the entire leap step n , if equation
j

(3.16) fails for any Xik (tn )  XS .

3.2

Step rejection

Step rejection in the post-leap checking tau-leaping scheme guarantees that the leap condition is always satisfied; however, na¨ ive step rejection may skew the statistics of the numerical solution [1]. To overcome this issue, we employ the post-leap check technique proposed by Anderson [1] to reduce bias in the sample trajectories. Anderson's tau-leap procedure for well-stirred biochemical systems stores every rejected step. Our new adaptive tau-leaping strategy relaxes this storage requirement, and we see excellent accuracy in our numerical results. We first outline the theoretical framework and then describe in mathematical detail the methods used to generate a sample trajectory for the heterogeneous biochemical system.

3.2.1

Theoretical foundation

Unlike pre-leap check tau-leaping strategies, the methods used to generate the sample trajectory for our proposed adaptive tau-leaping scheme vary according to the satisfaction of the leap condition and any restrictions placed on the system. We use a Poisson bridge to handle these restrictions, that is the rejected and stored leap steps.

Poisson bridge In [1], Anderson proposed the following theorem. We use its conclusions to generate reaction and diffusion events in the biochemical system after a step was rejected. Theorem 3.2.1. Let Y (t) be a Poisson process with intensity , and let 0  s < u < t. Then, conditioned (u - s) . on Y (s) and Y (t), Y (u) - Y (s) has a binomial (Y (t) - Y (s), r) distribution where r = (t - s) 25

3.2. STEP REJECTION

CHAPTER 3. ADAPTIVITY

Proof. Without loss of generality, we suppose that s = 0 and Y (0) = 0. Let Y (t) = N and 0 < u < t. Then P (Y (u) = j |Y (t) = N ) P (Y (u) = j  Y (t) = N ) P (Y (t) = N ) P (Y (t) - Y (u) = N - j )P (Y (u) = j ) = P (Y (t) = N ) = ((t - u))N -j e-(t-u) (u)j e-u N! (N - j )! j! (t)N e-t N u N -j u j = 1- . j t t =

For the simulated biochemical system, the total number of firings of any reaction or diffusion event in the time interval [t0 , t) is modeled as a Poisson process. We can denote this total number of firings as t . Assume the simulation is at time s and we know the total number of firings s in the time interval [t0 , s). Also, assume that for some future time t, where s < t, we know the number of firings t (i.e. the leap step was rejected, but stored). To leap to time u where s < u < t, we generate the number of events (reaction or (u - s) random variable. Thus, diffusion) that occurs in the time interval [s, u) as a binomial B t - s , (t - s) by conditioning on the rejected future trajectory, Theorem 3.2.1 provides the mechanism to guarantee that the correct solution path is followed. Trajectory generation Now, we present an overview of the process used to generate the sample trajectory in our adaptive tau-leaping algorithm. We have omitted the details of propensity function calculations, the next potential system state X (·) calculation, the time-step  adaptation, the leap step validation, and the restriction storage as the details for each of these topics are presented in other sections of the thesis. Finally, recall that the biochemical system under consideration is effectively modeled by a Markov process. As long we know the current state of the process, the future states do not depend on the past ones. This fact is used to justify why not all rejected leap steps are saved. Suppose that the simulation is in state X(t) at time t with a pre-determined time-step of length  , and that no restrictions have been placed on the sample trajectory. Also, suppose that we know the total number of firings of all reaction and diffusion events by time t. We attempt a leap using Poisson random variables to generate the number of reaction and diffusion events that occur in the system in the time interval [t, t +  ). After calculating the new system state, X (t +  ), we validate the leap condition. If the leap condition is satisfied, we accept the leap, set X(t +  ) = X (t +  ), and update the time t to t = t +  . Afterwards, we attempt another leap. If the leap condition is not satisfied, we reject the leap. Failure of the leap condition indicates that the pre-determined time-step  was too large. Thus, a new 1 is selected, such that 1 <  . A restriction is 26

CHAPTER 3. ADAPTIVITY

3.2. STEP REJECTION

^ t t + t+ Figure 3.1: Leap before the restriction in place at t +  .

j t t+ t + Figure 3.2: Leap past the restriction in place at t +  .

created on the sample trajectory at time t +  ; and we store the total number of firings for all reaction and diffusion events that have occurred by time t +  . Next, we attempt another leap using the time-step 1 . Since a restriction exists, we use binomial random variables, conditioned on the stored numbers for the reaction and diffusion events at time t and at time t +  , to generated the number of firings of reaction and diffusion events during the time interval [t, t + 1 ). We calculate the next potential system state X (t + 1 ), before validating the leap condition. If the leap condition fails again, we select a new 2 < 1 <  , but do not store the reaction and diffusion events that have taken place by time t + 1 . This simplification is justified by the Markov property of the biochemical system. We leap using binomial random variables with 2 and the stored events at time t and at time t +  . We may repeat the process of selecting i < i-1 < . . . <  and generating new leaps using binomial random variables until we find a potential system state X (t + i ) that satisfies leap condition. Once the leap condition has been satisfied and a restriction exists at time t +  , we must compare the final time of the current leap step, t +  to time of the restriction to determine the appropriate leap generation method. If the final time of the current leap step falls before the restriction, i.e. t +  < t +  (see Figure 3.1), we use binomial random variables as described in the previous paragraph to generate the leap for the time interval [t , t +  ). When t +  < t +  , we have leapt past the restriction (see Figure 3.2). We have already established the number of reaction and diffusion events that occurred in the time interval [t , t +  ), so we attempt a leap for the remaining time interval [t + , t +  ) using Poisson random variables. We add the number of events that happened in [t , t +  ) and [t + , t +  ) and use the total in the calculation of the next potential system state X (t +  ). Afterwards, we verify the leap condition. For t +  < t +  , the outcome of the leap check governs the restriction(s) on the sample trajectory. If the leap condition is met, we can eliminate the restriction in place at time t +  . If the leap condition was not met, we create another restriction on the sample trajectory at the future time t +  . Our proposed adaptive spatial tau-leaping strategy combines the mathematics presented in the next section with conceptual framework described above. Using this scheme, we see very good agreement of the results of the approximate algorithm when compared to the exact algorithm. 27

3.2. STEP REJECTION

CHAPTER 3. ADAPTIVITY

3.2.2

Application to heterogeneous systems

Our adaptive tau-leaping algorithm requires the following information: a series of times, t, and the total
d number of reactions Rj k and diffusions Ri ke that have occurred by each time t in the series. The stored

times vector, T, contains one or more times t sorted in ascending order. For each t  T, we have fixed the total number of firings for all reactions and diffusions in the time interval [0, t) in the sample trajectory.
t For a given time t, t j k is the total number of firings of reaction Rj k and ike is the total number of firings d of diffusion Ri ke that have occurred in the time interval [0, t). We define Rt as the collection of reactions j =1...M i=1...N {t and diffusions {t j k }k K ike }kK,eE that occurred during the time interval [0, t). Then, for all t  T,

the stored reaction-diffusion matrix, R = {Rt } tracks the total number of all reaction and diffusion events that occurred by those specific times in the sample trajectory. The size of R depends on the partitioning of the volume . For a 1-d mesh, R has size Kx |T|(M + i|E|). For a 2-d mesh, R has size Kx Ky |T|(M + i|E|). For a 3-d mesh, R has size Kx Ky Kz |T|(M + i|E|). Generation of the next potential system state For a system in state X(tn ) at time tn , the creation of the next potential system state X (tn + n ) depends on the current time, tn , the future time, tn + n , and the stored times vector, T. One of three methods may be used to generate the number of reaction and diffusion events in the time interval [tn , tn + n ). We decide among these methods based on the criteria below: · If T = tn , then apply Unrestricted path. · If T(I - 1) < tn + n < T(I ) with I an index into the vector T, then apply Poisson bridge path. · If tn < T(end) < tn + n , then apply Partial Poisson path. Afterwards, we calculate the next potential system state X (tn + n ) as
M N

X (tn + n ) = X(tn ) +
kK j =1

 j k k j k +
kK eE i=1

d ike ike ,

(3.17)

d where j k is the number of firings of reaction Rj k , ike is the number of firings of diffusion Ri ke in [tn , tn + n ),

and k is a 1 × K vector with 1 in the kth position and 0's elsewhere. Unrestricted path When T = tn , no restrictions exist on the sample trajectory. For all j = 1, . . . , M

and k  K, we generate the number of reactions that fired in the time interval [tn , tn + n ) as j k = Pj k (aj k (Xk (t)) ). (3.18)

For all i = 1, . . . , N , k  K, and e  E , we generate the number of diffusions that fired in the time interval [tn , tn + n ) as ike = Pike (ad ike (X(t)) ). 28 (3.19)

CHAPTER 3. ADAPTIVITY Poisson bridge path

3.2. STEP REJECTION

When tn + n < T(end), we have stored one or more rejected leap steps. Theorem

3.2.1 justifies the use of binomial random variables to generate the number of reaction and diffusion events that occur when restrictions exist on the sample trajectory. We find index I , such that T(I - 1) < tn + n < T(I ). To calculate r, we set u = tn + n , s = T(I - 1), (tn + n ) - T(I - 1) and t = T(I ). Thus, r = . For all j = 1, . . . , M and k  K, the number of reactions T(I ) - T(I - 1) that fired in the time interval [tn , tn + n ) is found as j k = Bj k j k
T( I )

- j k

T(I -1)

, r + j k

T(I -1)

n - t jk .

(3.20)

For all i = 1, . . . , N , k  K, and e  E , the number of diffusions that fired in the time interval [tn , tn + n ) is found as ike = Bike ike - ike
T(I ) T(I -1)

, r + ike

T(I -1)

n - t ike .

(3.21)

Note that B{·} (·, r) is the binomial distribution and {·}

T(I -1)

n - t {·} accounts for the reaction and diffusion

events that may have occurred in the time interval [tn , T(I - 1)).

Partial Poisson path

When tn < T(end) < tn + n , we require that the sample trajectory passes through

the state X(T(end)) before reaching the future state X(tn + n ). Therefore, we only need to generate reaction and diffusion events in the time interval [T(end), tn + n ). We calculate the change in time  = (tn + n ) - T(end). Then, for all j = 1, . . . , M and k  K, we create the number of reactions that fired in the time interval [tn , tn + n ) using j k = Pj k (aj k (Xk (t))  ) + j k
T(end)
n - t jk .

(3.22)

For all i = 1, . . . , N , k  K, and e  E , we create the number of diffusions that fired in the time interval [tn , tn + n ) using ike = Pike (aike (X(t))  ) + ike Note that {·} [tn , T(end)).
T(end) T(end)
n - t ike .

(3.23)

n - t {·} corresponds the reaction and diffusion events that occurred in the time interval

Acceptence of the leap step When the leap condition is satisfied, we update the time and the system state. We change the time tn to time tn + n and set the next system state X(tn + n ) = X (tn + n ). We must also update the stored times vector, T, and stored reaction-diffusion matrix, R. We start by saving the information for the sample trajectory at tn + n . We create a new collection 29

3.3. NEW STEPPING STRATEGY
n +n Rtn +n for time tn + n . For each reaction total t  Rtn +n , we set jk

CHAPTER 3. ADAPTIVITY

tn +n n j = t k j k + j k ,

(3.24)

n +n where j k is calculated using equation (3.18), (3.20), or (3.22), and for each diffusion total t  Rtn +n , ike

we have
tn +n n i = t ke ike + ike ,

(3.25)

where ike is calculated using equation (3.19), (3.21), or (3.23). When T(end) < tn + n , the Markov property of the biochemical system allows us to forget all sample trajectory information prior to tn + n . Thus, we assign T = tn + n and assign R = Rtn +n . If T(I - 1) < tn + n < T(I ), we remove all times t  T where t  T(I - 1). We also eliminate all corresponding collections Rt  R. Afterwards, we insert the time tn + n at the beginning of T and the new collection Rtn +n at the beginning of R.

Rejection of the leap step If the leap condition is not satisfied, we reject the updated system. We may also need to update the stored time vector, T, and the stored reaction-diffusion matrix, R. If tn + n  T(end), no new information is required to condition the sample trajectory. However, if T(end) < tn + n , an additional restriction has been
n +n set on the sample trajectory. We create a new collection Rtn +n . For every reaction total t  Rtn +n , jk

we have
tn +n n j = t k j k + j k ,
n +n where j k is found using equation (3.18) or (3.22), and for every diffusion total t  Rtn +n , we have ike

n +n n t = t ike ike + ike ,

where ike is determined using equation (3.19) or (3.23). Afterwards, we add the time tn + n to the end of T and its corresponding Rtn +n to the end of R.

3.3

New stepping strategy

The goal of our new stepping strategy is to minimize the number of rejected leap steps while selecting  large enough to see improvements in simulation time compared to the ISSA. When developing our new adaptive stepping strategy, we consider the sets XL and XS separately. We derive the method for selecting
2 an appropriate time-step h1 n+1 for the large population set XL and an appropriate time-step hn+1 for the 2 small population set XS , then select the new time-step hn+1 as the minimum of h1 n+1 and hn+1 .

30

CHAPTER 3. ADAPTIVITY

3.3. NEW STEPPING STRATEGY

3.3.1

Theoretical foundation

The method we use for adapting the length of the current time-step, hn , is based on an integral controller from control theory. This method is valid for deterministic models [27]; however, has shown excellent results when applied to our stochastic models. By attempting to maintain the local change below a threshold, , the method aims to minimize the computational cost, while satisfying the accuracy criteria.

Step selection for XL We use the following method to select a time-step for the large population set XL . Let Y(tn ) be the current solution of a system at time tn . At every time tn , we define the following system of equations  e  = n t
n+1 Y(tn +hn )-Y(tn ) Y(tn )



= tn + hn

where e n is the maximum relative local change corresponding to the next solution Y(tn + hn ) at time tn + hn . For every tn , we want to ensure that the relative local change e n is strictly less than a prescribed variation tolerance level , i.e., Y(tn + hn ) - Y(tn ) Y(tn ) < .


Assume that in the asymptotic regime, the following relationship exists between the relative local change e n and the current time-step hn
 e n = n hn ,

(3.26)

where  is a parameter and n is the principal error function. The function n may be derived from the It^ o-Taylor series expansion of the solution. As it is generally difficult to get an exact formulation of the principle error function n , we focus on adjusting the length of the time-step hn to control the relative local change e n. For the next step tn+1 , the largest relative local change e n+1 we are willing to introduce to the system is . Thus, from equation (3.26) we get
 e n+1 = n+1 hn+1 = .

(3.27)

We can combine equations (3.26) and (3.27) as e n = n h  n . n+1 h n+1 (3.28)

For deterministic problems, often n

n+1 . Thus, solving equation (3.28) for hn+1 , we have the 31

3.3. NEW STEPPING STRATEGY following stepping strategy [27],
1 

CHAPTER 3. ADAPTIVITY

hn+1 = hn

e n

.

(3.29)

If the current relative local change e n > , equation (3.29) decreases the length of hn+1 to reduce the variation accruing in the system. If the current relative local change e n < , equation (3.29) increases the length of hn+1 to help shorten the overall simulation duration. In practice equation (3.29) may cause numerical solution instability when rapid oscillations occur in consecutive time-steps. Thus, we can introduce both a minimal step decrease factor, fmin , and maximal step increase factor, fmax , to dampen these oscillations. To decrease the number of rejected steps, the prescribed variation tolerance level is often replaced by the safety factor 1 where 1  1. Combining these assumptions yields the stepping strategy for the set XL , h1 n+1 = hn min fmax , max fmin , 1 e n
1 

,

(3.30)

where 1 < fmax  2 and 0 < fmin < 1. This stepping strategy has been successfully applied to stochastic continuous models [6]. We apply this technique for the first time to stochastic discrete models; and we found it to be very efficient.

Step selection for XS We use an analogous derivation method to select a time-step for the small population set XS . At each time tn , we define the following system of equations  E  = Y(t + h ) - Y(t ) n n n n t =t +h
n+1 n n 

 where En is the absolute local change corresponding to the next solution Y(tn + hn ) at time tn + hn .  Now for time tn , we want the absolute local change En to be less than or equal to the minimum con-

sumption of a species Si , which we take as 1. Thus Y(tn + hn ) - Y(tn )


 1.

 Like equation (3.26), a similar relationship exists between the absolute local error En and the current

time-step hn ,
 En = n h n,

(3.31)

where n is the principle error function. Using equation (3.31) and following the same procedure used to 32

CHAPTER 3. ADAPTIVITY derive equation (3.28), we have the stepping strategy [27], 1  En
1 

3.3. NEW STEPPING STRATEGY

hn+1 = hn

.

(3.32)

This time, to reduce the number of rejected steps, we replace 1 with the safety factor 2 , where 2  1. Thus, the stepping strategy for the set XS is h2 n+1 = hn min fmax , max fmin , 2  En
1 

,

(3.33)

where 1 < fmax  2 and 0 < fmin < 1.

3.3.2

Application to heterogeneous systems

Calculation of the initial  In our adaptive tau-leaping algorithm, we determine the initial time-step  using the method presented in [45] which extends the Cao et. al. [9]  -selection process outlined in Section 2.1.5 to spatially heterogeneous systems. We calculate the time-step  according to  = min {k } .
kK

(3.34)

For each voxel k, we have k = min where
M |E|

iIrs

max{ Xik (t)/gi , 1} (max{ Xik (t)/gi , 1})2 , |µ ^ik (X(t))| (^ ik (X(t)))2

,

µ ^ik (X(t)) =
j =1 M

ij k aj k (Xk (t)) +
e=1

(-1)aike (X(t)),
|E|

 ^ik (X(t))2 =
j =1

(ij k )2 aj k (Xk (t)) +
e=1

aike (X(t)).

Calculation of the subsequent n We use the following parameters in equations (3.30) and (3.33) to adapt all subsequent time-steps n . We take  = 1. We let 1 = 0.8, 2 = 1, fmin = 0.5, fmax = 1.5, and found from extensive simulation testing.
1 Equation (3.30), used to adapt the time-step n +1 for the large population set XL , requires an estimate

= max{ i }. These specific values were
i

of relative local change. We get this value e n = en from equation (3.12). Thus, the equation used to adapt 33

3.4. NEW ADAPTIVE TAU-LEAPING ALGORITHM
1 the time-step n +1 is

CHAPTER 3. ADAPTIVITY

1 n +1 = n min 1.5, max 0.5,

0.8 i en

.

(3.35)

2 Likewise, equation (3.33), used to adapt the time-step n +1 for the small population set XS , needs an  estimate of absolute local change. The value En = En comes from equation (3.15). Thus, the equation used 2 to adapt the time-step n +1 is

2 n +1 = n min 1.5, max 0.5,

1 En

.

(3.36)

1 2 Once n +1 and n+1 have been calculated according to equations (3.35) and (3.36), we choose the next

step size n+1 as
1 2 n+1 = min n +1 , n+1 .

(3.37)

3.4

New adaptive tau-leaping algorithm

Below we propose a new variable time-stepping algorithm for the spatial Poisson tau-leaping scheme for the Reaction-Diffusion Master Equation [32]. Algorithm 0. (Parameters) Set tolerance , control factors 1 , 2 , and increase and decrease factors fmin , fmax . Calculate critical thresholds ci using equation (3.4). 1. (Initialize) Set X  x0 at t  0 and the initial step  using equation (3.34). 2. WHILE (t < T ) do 3­6. 3. (State Generation) 3.1. IF no future restriction exists: a. Generate Poisson distributions: Compute ik using equation (3.18). Compute ike using equation (3.19). b. Compute X using equation (3.17). 3.2. ELSE IF future restriction(s) exist AND step after restriction, T(end) < t +  : a. Generate partial Poisson distributions: Compute ik using equation (3.22). Compute ike using equation (3.23). b. Compute X using equation (3.17). 34

CHAPTER 3. ADAPTIVITY

3.4. NEW ADAPTIVE TAU-LEAPING ALGORITHM

3.3. ELSE (future restriction(s) exist AND step in between restrictions, T(I - 1) < t +  < T(I )): a. Generate binomial distributions: Compute ik using equation (3.20). Compute ike using equation (3.21). b. Compute X using equation (3.17). 4. (Leap Validation) a. Partition {Xik (t)} into XL and XS using equations (3.9) and (3.10). b. For XL , validate leap condition using equation (3.13). c. For XS , validate leap condition using equation (3.16). 5. (Leap Acceptance) IF accuracy criteria is met, accept step. a. Update t  t +  and set X  X . b. Create Rt+ using equations (3.24) and (3.25). c1. IF T(end) < t +  , clear future restriction(s). Set T  t +  and R  Rt+ . c2. ELSE, (T(I - 1) < t +  < T(I )). Remove all t  T(I - 1) and Rt  R. Add t +  to T and Rt+ to R. d. Update  using equation (3.37). 6. (Leap Rejection) IF accuracy criteria is not met, reject step. a. IF T(end) < t +  , create new future restriction. Create Rt+ using equations (3.24) and (3.25). Add t +  to T and Rt+ to R. b. Update  using equation (3.37). This  -selection procedure is shown to produce results in excellent agreement with those generated with the exact ISSA. The numerical experiments demonstrate the efficiency and the accuracy of the new method.

35

Chapter 4

Numerical results
We exhibit the advantages of the new variable time-stepping strategy for the spatial tau-leaping method on three models of heterogeneous biochemical systems of practical interest. Poisson tau-leaping approaches work best when the number of molecules in the model remains bounded away from zero throughout the simulation. Consequently, these models have been integrated over a time interval where the molecular populations obey this criteria. The model systems used to demonstrate the effectiveness of our proposed tau-leaping algorithm contain a few species each. Thus, the species names, e.g. U and V , have replaced the general Sn notation in chemical reaction and diffusion descriptions. The species names have also replaced the general xn notation in the propensity functions. Furthermore, this naming lets us drop the subscript indicating species type; Uk is the number of species U in voxel k . We have also removed the voxel k subscripts from the reaction propensity functions and both the voxel k and diffusion direction e subscripts from the diffusion propensity functions. For each model, we demonstrate the accuracy of the proposed method by comparing the numerical results of the exact ISSA to the numerical results of the approximate adaptive scheme, for a sequence of tolerances. We have also provided the mean number of attempted, accepted, and rejected steps, the ratio of the mean relative change to the tolerance, and the speed up over the ISSA using data collected from 10,000 simulations for each tolerance . The relative change values considered are the maximum relative change values on the individual trajectories. We have calculated the speed-up of the new variable tau-leaping scheme by taking the ratio of the time taken by the ISSA compared to the computational time required by the new method speed-up = time for ISSA . time for adaptive tau-leaping

4.1

Turing patterns model

The first model under consideration, the Turing patterns model, was studied in [7]. A unique feature of this model is the stable Turing patterns that appear in the steady-state of this reaction-diffusion system. This one-dimensional model contains two species U and V , where the volume  is divided into K = 40 voxels of edge length h =
1 40 .

37

4.1. TURING PATTERNS MODEL For the ith voxel, the reactions in this model are  and the diffusions are
k1 k2

CHAPTER 4. NUMERICAL RESULTS

Ui ,

3 Vi , 

k

4 2Ui + Vi  3Ui ,

k

U1

du du

U2

du du

...

du du

UK ,

V1

dv dv

V2

dv dv

...

dv dv

VK .

The propensity functions for this model are then a1 (t) = k1 h, a2 (t) = k2 Ui (t), a3 (t) = k3 h, a4 (t) = k4 Ui (t)(Ui (t) - 1)Vi (t), h2 a5 (t) = a6 (t) = du Ui (t),

a7 (t) = a8 (t) = dv Vi (t),

with rate constants k = [4 × 103 , 2, 1.2 × 104 , 6.25 × 10-8 ] and D = [10-3 , 10-1 ]. The standard form of the
4 propensity function for the third-order reaction 2Ui + Vi  3Ui includes the fraction

k

1 2.

This fraction has

been absorbed into the rate constant k4 . The initial conditions used are Ui0 = 25 and Vi0 = 75 per voxel. Finally, the stoichiometric matrix per voxel for this model is = 1 0 -1 0 0 1 .

1 -1

For the time interval t = [0, 3.5], we simulated the dynamics of this model on 10, 000 trajectories using the ISSA and on 10, 000 trajectories each using the proposed adaptive tau-leaping scheme with the following accuracy criteria, = [0.2, 0.4, 0.8]. Figure 4.1 shows two different sample trajectories of the Turing patterns model for species U in the time interval t = [0, 3.5]. Figure 4.1a was generated using the exact ISSA and Figure 4.1b was generated using the proposed adaptive spatial Poisson tau-leaping method with tolerance = 0.4. Figure 4.2 provides = 0.4. The the corresponding sample trajectories for species V . Figure 4.2a was created using the exact ISSA and Figure 4.2b was created using the adaptive spatial Poisson tau-leaping method with tolerance bar height in these figures indicates the number of molecules of a species in a particular voxel at a specific time with the final voxel distribution displayed at the front. The stable Turing patterns are visible in both the ISSA and adaptive tau figures for species U . We also observe similar system behaviour with the location of the peaks and the species distribution at the final time t = 3.5. In Table 4.1, we record the mean number of attempted steps for the new adaptive tau-leaping method and the relative local changes produced, along with the mean number of accepted and rejected steps, for the sequence of tolerances 0.2, 0.4, and 0.8. This table also shows the speed-up of the proposed variable time-stepping algorithm over the ISSA. Note that for these tolerances the new strategy is one to two orders of magnitude faster than the ISSA. Additionally, the ratio between the number of rejected steps and the 38

CHAPTER 4. NUMERICAL RESULTS

4.1. TURING PATTERNS MODEL

(a) ISSA

(b) Adaptive tau-leaping algorithm, tolerance

= 0 .4

Figure 4.1: Turing patterns model: sample trajectories for species U 39

4.1. TURING PATTERNS MODEL

CHAPTER 4. NUMERICAL RESULTS

(a) ISSA

(b) Adaptive tau-leaping algorithm, tolerance

= 0 .4

Figure 4.2: Turing patterns model: sample trajectories for species V 40

CHAPTER 4. NUMERICAL RESULTS Attempted steps 8 × 10-1 7203 Accepted steps 5835

4.2. PRODUCTION-ANNIHILATION MODEL Rejected steps 1368 Relative change 1.00 Speed-up over ISSA 97.79

4 × 10-1

25803

20705

5098

1.00

41.65

2 × 10-1

126785

96171

30614

1.00

10.63

Table 4.1: The Turing patterns model: the number of steps taken by the adaptive tau-leaping scheme and speed-up over the ISSA.

total number of attempted steps is between 19% and 24% for the tolerance tried. Figure 4.3 compares the histograms over 10,000 trajectories obtained using the variable tau-leaping algorithm with tolerances 0.2, 0.4, and 0.8 and the exact ISSA at time t = 3.5. The data for these figures was collected by calculating the total number of molecules of each species across all voxels k at the end of the simulation. The agreement is excellent, illustrating the accuracy of the proposed adaptive method.

4.2

Production-annihilation model

The second model analyzed, the production-annihilation model, is the extension of a one-dimensional system in [14] to a two-dimensional system. This two-dimensional system includes species A and B and the volume  is divided into K = 10 × 10 voxels of edge length h =
1 10 .

One aspect to note about the model is that the

production of both species is restricted to a subset of the system's volume. The reactions in the i, j th voxel are
1 Ai,j + Ai,j  , 2 Ai,j + Bi,j  ,

k

3  Ai,j 4  Bi,j

k

for i = 1, 2, ..., 9, j = 1, 2, ..., 9, for i = 4, 5, ..., 10, j = 4, 5, ..., 10

k

k

and the diffusions include Ai,j  Ai±1,j , Ai,j  Ai,j ±1 , 41
d d

Bi,j  Bi±1,j , Bi,j  Bi,j ±1 .
d

d

4.2. PRODUCTION-ANNIHILATION MODEL

CHAPTER 4. NUMERICAL RESULTS

(a) Species U

(b) Species V

Figure 4.3: Turing patterns model: histograms for ISSA and adaptive tau algorithm at t = 3.5, tolerances = 0.2, 0.4, 0.8. 42

CHAPTER 4. NUMERICAL RESULTS Attempted steps 4 × 10-1 5104 Accepted steps 4437

4.2. PRODUCTION-ANNIHILATION MODEL Rejected steps 667 Relative change 0.99998 Speed-up over ISSA 138.67

2 × 10-1

22234

18803

3431

1.00

38.45

10-1

149354

130503

18851

1.00

6.09

Table 4.2: The production-annihilation model: the number of steps taken by the adaptive tau-leaping scheme and speed-up over the ISSA.

Therefore, the propensity functions are a1 (t) = k1 Ai,j (t)(Ai,j (t) - 1), a2 (t) = k2 Ai,j (t)Bi,j (t), a3 (t) = k3 , a4 (t) = k4 , a5 (t) = a6 (t) = a7 (t) = a8 (t) = dAi,j (t), a9 (t) = a10 (t) = a11 (t) = a12 (t) = dBi,j (t),

with rate constants k = [0.2, 9 × 10-3 , 2000, 100] and D = 0.9. The standard form of the propensity function
1 1 . This fraction has been absorbed into for the second-order reaction Ai,j + Ai,j   includes the fraction 2

k

the rate constant k1 . The initial conditions per voxel are Ai,j 0 = 500 and Bi,j 0 = 100. The stoichiometric matrix per voxel is = -2 0 -1 -1 1 0 0 1 .

We have integrated the system in the time interval t = [0, 1] with the variable step tau-leaping algorithm for = [0.1, 0.2, 0.4] and the ISSA, each over 10, 000 trajectories. Table 4.2 presents the mean number of attempted steps along with the mean accepted and the mean rejected steps for the variable step size tau-leaping strategy. Additionally, it records the ratio of the relative local change to the given tolerance and the speed-up of the proposed algorithm over the ISSA for the following sequence of imposed tolerances = [0.1, 0.2, 0.4]. For this particular model, we see speed-ups of between 98 to 138 times. We also find that the ratio of the number of rejected steps to the total number of steps taken in the adaptive algorithm is quite low, ranging from 12% to 15%. Figure 4.4 plots the histograms for each of the species at time t = 1, for the adaptive tau-leaping algorithm with tolerances 0.1, 0.2, and 0.4 and for the exact ISSA. Again, the data for these figures was collected by adding the total number of molecules of each species across all voxels k at the end of the simulation. Again, these figures show that our adaptive strategy has exceptional accuracy. 43

4.2. PRODUCTION-ANNIHILATION MODEL

CHAPTER 4. NUMERICAL RESULTS

(a) Species A

(b) Species B

Figure 4.4: Production-annihilation model: histograms for ISSA and adaptive tau algorithm at t = 1, tolerances = 0.1, 0.2, 0.4. 44

CHAPTER 4. NUMERICAL RESULTS

4.3. BRUSSELATOR MODEL

4.3

Brusselator model

The final model tested, the Brusselator model, is found in [39]. This system is quite stiff, thus simulation efficiency depends on a variable time-step. The model has species U and V and divides the two-dimensional volume  into K = 8 × 8 voxels of edge length h = 1. Species U and V participate in the following reactions in the i, j th voxel
1 Ui,j ,  2 Vi,j , Ui,j 

k

3 3Ui,j , 2Ui,j + Vi,j  4 , Ui,j 

k

k

k

and the following diffusions
u Ui,j  Ui±1,j , u Ui,j  Ui,j ±1 ,

d d

v Vi,j  Vi±1,j , v Vi,j  Vi,j ±1 .

d d

The propensity functions are a1 (t) = k1 h2 , a2 (t) = k2 Ui,j (t), k3 a3 (t) = 4 Ui,j (t)(Ui,j (t) - 1)Vi,j (t), h
k

a4 (t) = k4 Ui,j (t), a5 (t) = a6 (t) = a7 (t) = a8 (t) = dUi,j (t), a9 (t) = a10 (t) = a11 (t) = a12 (t) = dVi,j (t),

with rate constants k = [7000, 40, 5.0 × 10-5 , 10] and D = [1, 1]. The standard form of the propensity
3 function for the third-order reaction 2Ui,j + Vi,j  3Ui,j includes the fraction

1 2.

This fraction has been

absorbed into the rate constant k3 . The initial conditions per voxel are Ui,j 0 = 100 and Vi,j 0 = 50. Lastly, the stoichiometric matrix per voxel is = 1 0 -1 1 1 -1 -1 0 .

We follow the same simulation process as the first two models, integrating over the time duration t = [0, 1] and with tolerances tolerances: = [0.1, 0.2, 0.4]. Table 4.3 characterizes the results of our simulation of the Brusselator model. For the sequence of = [0.1, 0.2, 0.4], we give the accuracy achieved by the variable step size tau-leaping scheme, the mean number of attempted, accepted, and rejected steps, and the speed-up over the ISSA. The ratio of steps rejected to total steps attempted is less than 16%, for the tolerances used. Moreover, the speed-up of our method over the ISSA is significant, from 78 to 387 times. We observe in Figure 4.5 the match of the results of our adaptive tau-leaping scheme for tolerance = 0.1 and = 0.2 with results of the ISSA. As before, the molecular number totals were found by adding the total number of molecules of each species across all voxels k , at the end of the simulation. This further confirms that our proposed method gives very accurate results for a much lower computational cost. 45

4.3. BRUSSELATOR MODEL

CHAPTER 4. NUMERICAL RESULTS

Attempted steps 4 × 10-1 626

Accepted steps 555

Rejected steps 70

Relative change 0.99687

Speed-up over ISSA 387.61

2 × 10-1

2099

1830

269

0.99948

211.74

10-1

8724

7291

1433

1.00

78.10

Table 4.3: The Brusselator model: the number of steps taken by the adaptive tau-leaping scheme and speed-up over the ISSA.

46

CHAPTER 4. NUMERICAL RESULTS

4.3. BRUSSELATOR MODEL

(a) Species U

(b) Species V

Figure 4.5: Brusselator model: histograms for ISSA and adaptive tau algorithm at t = 1, tolerances 0.1, 0.2. 47

=

Chapter 5

Conclusion
Mathematical modeling and simulation of biochemical systems provide unique insight into the system dynamics. As cellular biology experimental techniques become more refined at the level of the single cell, these mathematical models and simulation will play an ever increasing role in understanding and predicting system dynamics under a variety of conditions. Additionally, these models and systems will help clarify the complex dependencies that exist in the various pathways in the cell [4]. Thus, the need for more efficient, but still accurate mathematical simulation algorithms will continue to grow. This thesis analyzed an inhomogeneous, discrete stochastic model of biochemical kinetics, that of the Reaction-Diffusion Master Equation (RDME). This model accurately describes the dynamics of biochemical systems with some species in low numbers and whose system behaviour is dependent on spatial layout of the system. The study of biochemical systems with low numbers and spatial dependence is crucial for understanding cellular behaviour. We have proposed a new adaptive time-stepping scheme targeting the spatial Poisson tau-leaping strategy for the RDME. The adaptive time-stepping scheme is based on an integral controller and helps address stiffness that is inherit to biochemical systems which include diffusion. We have also incorporated postleap checking to address solution accuracy. Post-leap checking guarantees that the leap-condition is always satisfied. Combining time adaptivity with post-leap checking has allowed us to create an accurate and efficient simulation algorithm targeting the RDME. Our proposed algorithm achieves excellent accuracy while being orders of magnitude faster than the ISSA for the three tested models. Our future work will consider a number of improvements to the presented algorithm including developing an effective technique for negative numbers. We also plan to apply our variable time-stepping strategy to semi-implicit tau-leaping schemes to improve the simulation time for very stiff biochemical problems.

49

Appendix A

Probability distributions
Definition A.0.1. The random variable X has a uniform distribution over range [a, b], written X  U (a, b), if it has probability density function (PDF)  
1 b-a

fX (x) =

if a  x  b otherwise.

0

Definition A.0.2. The random variable X has an exponential distribution with parameter , written X  Exp(), if it has PDF  e-x fX ( x) = 0 if x  0, otherwise.

Definition A.0.3. The random variable X has a Poisson distribution with parameter , written X  P (), if it has probability mass function (PMF) P (X = k ) = k - e k! if k = 0, 1, 2, . . .

Definition A.0.4. The random variable X has a binomial distribution with parameters n and p, written X  B (n, p), if it has PMF P (X = k ) = n k p (1 - p)n-k k if k = 0, 1, 2, . . . , n

51

Appendix B

Poisson Process
Definition B.0.5. A stochastic process {N (t), t  0} is said to be a counting process if N (t) represents the total number of "events" that occur by time t. Definition B.0.6. The counting process {N (t), t  0} is said to be a Poisson process having rate ,  > 0, if 1. N (0) = 0. 2. The process has independent increments. 3. The number of events in any interval of length t is Poisson distributed with mean t. That is, for all s, t  0 P {N (t + s) - N (s) = n} = e-t (t)n , n! n = 0, 1, . . .

53

References
[1] D.F. Anderson. Incorporating postleap checks in tau-leaping. Journal of Chemical Physics, 128(5):054103, 2008. [2] A. Arkin, J. Ross, and H. McAdams. Stochastic kinetic analysis of development pathway bifurcation in phage -infected escherichia coli cells. Genetics, 149:1633­1648, 1998. [3] N.N. Batada, L.A. Shepp, and D.O. Siegmund. Stochastic model of protein-protein interaction: Why signaling proteins need to be colocalized. Proceedings of the National Academy of Sciences, 101(17):6445­ 6449, 2004. [4] M.R. Bennett and J. Hasty. Microfluidic devices for measuring gene network dynamics in single cells. Nature Reviews Genetics, 10:628­638, 2009. [5] W.J. Blake, M. Kærn, C.R. Cantor, and J.J. Collins. Noise in eukaryotic gene expression. Nature, 422:633­637, 2003. [6] P.M. Burrage, R. Herdiana, and K. Burrage. Adaptive stepsize based on control theory for stochastic differential equations. Journal of Computational and Applied Mathematics, 170, 2004:317­336. [7] Y. Cao and R. Erban. Stochastic Turing patterns: Analysis of compartment-based approaches. Bulletin of Mathematical Biology, 76(12):3051­3069, 2014. [8] Y. Cao, D.T. Gillespie, and L. Petzold. Avoiding negative populations in explicit poisson tau-leaping. Journal of Chemical Physics, 123(5):054104, 2005. [9] Y. Cao, D.T. Gillespie, and L. Petzold. Efficient step size selection for the tau-leaping simulation method. Journal of Chemical Physics, 124:044109, 2006. [10] A. Chatterjee, D.G. Vlachos, and M.A. Katsoulakis. Binomial distribution based  -leap accelerated stochastic simulation. Journal of Chemical Physics, 122(24):024112, 2005. [11] H. de Jong. Modeling and simulation of genetic regulatory systems: A literature review. Journal of Computational Biology, 9(1):67­103, 2002. [12] J. Elf and M. Ehrenberg. Spontaneous separation of bi-stable biochemical systems into spatial domains of opposite phases. Systems Biology, 1(2):230­236, 2004. 55

REFERENCES

REFERENCES

[13] M.B. Elowitz, A.J. Levine, E.D. Siggia, and P.S. Swain. Stochastic gene expression in a single cell. Science, 297(5584):1183­1186, 2002. [14] R. Erban, S.J. Chapman, and P.K. Maini. A practical guide to stochastic simulations of reactiondiffusion processes. arXiv:0704.1908v2, [q-bio.SC], 2007. [15] S.N. Ethier and T.G. Kurtz. Markov Processes: Characterization and Convergence. New York: Wiley, 1986. [16] D. Fange and J. Elf. Noise-induced min phenotypes in E. coli. PLoS Computational Biology, 2(6):0637­ 0648, 2006. [17] L. Ferm, A. Hellander, and P. L¨ otstedt. An adaptive algorithm for simulation of stochastic reactiondiffusion processes. Journal of Compuational Physics, 229:343­360, 2010. [18] C.W. Gardiner, K.J. McNeil, D.F. Walls, and I.S. Matheson. Correlations in stochastic theories of chemical reactions. Journal of Statistical Physics, 14(4):307­331, 1976. [19] M.A. Gibson and J. Bruck. Efficient exact stochastic simulation of chemical systems with many species and many channels. Journal of Physical Chemistry A, 104(9):1876­1889, 2000. [20] D.T. Gillespie. A general method for numerically simulating the stochastic time evolution of coupled chemical reactions. Journal of Computational Physics, 22(4):403­434, 1976. [21] D.T. Gillespie. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, 81(25):2340­2361, 1977. [22] D.T. Gillespie. A rigorous derivation of the chemical master equation. Physica A:404­425, 188, 1992. [23] D.T. Gillespie. Approximate accelerated stochastic simulation of chemically reacting systems. Journal of Chemical Physics, 115(4):1716­1733, 2001. [24] D.T. Gillespie. Stochastic simulation of chemical kinetics. Annual Review of Physical Chemistry, 58:35­ 55, 2007. [25] D.T. Gillespie, A. Hellander, and L.R. Petzold. Perspective: Stochastic algorithms for chemical kinetics. Journal of Chemical Physics, 138(17):170901, 2013. [26] D.T. Gillespie and L.R. Petzold. Improved leap-size selection for accelerated stochastic simulation. Journal of Chemical Physics, 119(16):8229­8234, 2003. [27] E. Hairer, S.P. Nørsett, and G. Wanner. Solving Ordinary Differential Equations I: Nonstiff Problems (2nd Revised Edition), volume 1. Springer, Berlin, 2009. [28] E.L. Haseltine and J.B. Rawlings. Approximate simulation of coupled fast and slow reactions for stochastic chemical kinetics. Journal of Chemical Physics, 117(15):6959­6969, 2002. 56

REFERENCES

REFERENCES

[29] J. Hasty, D. McMillen, F. Isaacs, and J.J. Collins. Computational studies of gene regulatory networks: in numero molecular biology. Nature Reviews Genetics, 2:268­279, 2001. [30] M. Howard and A.D. Rutenberg. Pattern formation inside bacteria: fluctuations due to the low copy number of proteins. Physical Review Letters, 90(12):128102, 2003. [31] T. Ideker, O. Ozier, B. Schwikowski, and A.F. Siegel. Discovering regulatory and signalling circuits in molecular interaction networks. Bioinformatics, 18(Suppl. 1):S233­S240, 2002. [32] S. Ilie and J.M.A. Padgett. Adaptive time-stepping in the numerical solution of the reaction-diffusion master equation. Book of Abstracts of the 2015 AMMCS-CAIMS Congress, 393, 2015. [33] S. Ilie and A. Teslya. An adaptive stepsize method for the chemical Langevin equation. Journal of Chemical Physics, 136(18):184101, 2012. [34] S.A. Isaacson and C.S. Peskin. Incorporating diffusion in complex geometries into stochastic chemical kinetic simulations. SIAM Journal of Scientific Computing, 28(1):47­74, 2006. [35] A. Johnson, B. Alberts, J. Lewis, K. Roberts, and P. Walter. Molecular Biology of the Cell, 5th edition. Garland Science, 2008. [36] H. Kitano. Computational systems biology. Nature, 420:206­210, 2002. [37] W. Koh and K.T. Blackwell. An accelerated algorithm for discrete stochastic simulation of reactiondiffusion systems using gradient-based diffusion and tau-leaping. 134(15):154103, 2011. [38] S. Lampoudi, D.T. Gillespie, and L.R. Petzold. The multinomial simulation algorithm for discrete stochastic simulation of reaction-diffusion systems. Journal of Chemical Physics, 130(09):094104, 2009. [39] F. Liu, M.A. Bl¨ atke, M. Heiner, and M. Yang. Modelling and simulating reaction-diffusion systems using coloured Petri nets. Computers in Biology and Medicine, 53:297­308, 2014. [40] T.T. Marquez-Lago and K. Burrage. Binomial tau-leap spatial stochastic simulation algorithm for applications in chemical kinetics. Journal of Chemical Physics, 127(10):104101, 2007. [41] D.A. McQuarrie. Stochastic approach to chemical kinetics. Journal of Applied Probability, 4(3):413­478, 1967. [42] J.M.A. Padgett and S. Ilie. An adaptive tau-leaping method for stochastic simulations of reactiondiffusion systems. submitted July 2015. [43] C.V. Rao and A.P. Arkin. Stochastic chemical kinetics and the quasi-steady-state assumption: Application to the Gillespie algorithm. Journal of Chemical Physics, 118(11):4999-5010, 2003. [44] S.M. Ross. Introduction to Probability Models, 10th Edition. Elsevier Inc., 2010. 57 Journal of Chemical Physics,

REFERENCES

REFERENCES

[45] D. Rossinelli, B. Bayati, and P. Koumoutsakos. Accelerated stochastic and hybrid methods for spatial simulations of reaction-diffusion systems. Chemical Physics Letters, 451:136­140, 2008. [46] H. Salis and Y.N. Kaznessis. Accurate hybrid stochastic simulation of a system of coupled chemical or biochemical reactions. Journal of Chemical Physics, 122(05):054103, 2005. [47] H. Salis and Y.N. Kaznessis. An equation-free probabilistic steady-state approximation: Dynamic application to the stochastic simulation of biochemical reaction networks. Journal of Chemical Physics, 123(21):214106, 2005. [48] A. Samant and D.G. Vlachos. Overcoming stiffness in stochastic simulation stemming from partial equilibrium: A multiscale Monte Carlo algorithm. Journal of Chemical Physics, 123(14):144114, 2005. [49] A.B. Stundzia and C.J. Lumsden. Stochastic simulation of coupled reaction-diffusion processes. Journal of Computational Physics, 127:196­207, 1996. [50] R. Thar and M. K¨ uhl. Bacteria are not too small for spatial sensing of chemical gradients: an experimental evidence. Proceedings of the National Academy of Sciences, 100(10):5748­5753, 2003. [51] T. Tian and K. Burrage. Binomial leap methods for simulating stochastic chemical kinetics. Journal of Chemical Physics, 121(21):10356­10364, 2004. [52] T.E. Turner, S. Schnell, and K. Burrage. Stochastic approaches for modeling in vivo reactions. Computational Biology and Chemistry, 28:165­178, 2004. [53] J. Vilar, H. Kueh, N. Barkai, and S. Leibler. Mechanisms of noise-resistance in genetic oscillators. Proceedings of the National Academy of Sciences, 99(9):5988­5991, 2002. [54] E. Weinan, D. Liu, and E. Vanden-Eijnden. Nested stochastic simulation algorithm for chemical kinetic systems with disparate rates. Journal of Chemical Physics, 123(19):194107, 2005. [55] D.J. Wilkinson. Stochastic Modeling for Systems Biology, Second Edition. CRC Press, 2012.

58

