machines
Article

A Method for Design of Modular Reconfigurable Machine Tools
Zhengyi Xu 1 , Fengfeng Xi 2, *, Lilan Liu 3 and Li Chen 2
1 2 3

*

RectorSeal Corporation, Houston, TX 77055, USA; zhengyi.xu@utoronto.ca Department of Aerospace Engineering, RyersonUniversity, Toronto, ON M5B2K3, Canada; chen.li@utoronto.ca RoboticResearch Center, Shanghai University, Shanghai 200444, China; lancy@shu.edu.cn Correspondence: fengxi@ryerson.ca; Tel.: +1-416-979-5000

Academic Editor: Dan Zhang Received: 10 November 2016; Accepted: 23 January 2017; Published: 4 February 2017

Abstract: Presented in this paper is a method for the design of modular reconfigurable machine tools (MRMTs). An MRMT is capable of using a minimal number of modules through reconfiguration to perform the required machining tasks for a family of parts. The proposed method consists of three steps: module identification, module determination, and layout synthesis. In the first step, the module components are collected from a family of general-purpose machines to establish a module library. In the second step, for a given family of parts to be machined, a set of needed modules are selected from the module library to construct a desired reconfigurable machine tool. In the third step, a final machine layout is decided though evaluation by considering a number of performance indices. Based on this method, a software package has been developed that can design an MRMT for a given part family. Keywords: modular design; reconfigurable machine tools; module identification; module determination; layout synthesis

1. Introduction Today's machines have come a long way evolving from the mechanization era to replace human labor, to the automation era to replace human operation, and now entering a new era called autonomization to replace human thinking. The trend is to autonomize machines by using advanced technologies such as embedded computers, smart sensors and intelligent controls, so that eventually machines will be able to operate on their own without human intervention. Modular Reconfigurable Machines (MRMs) represent the highest level of these intelligent machines because they are capable of changing their structures to adapt promptly to new circumstances, perform new tasks, and even recover from damage [1]. Apart from these functional advantages, MRMs are economically advantageous over conventional machines. Built based on modules that can be mass-produced, overall MRM cost is lower. In addition, the recurring cost and lead-time is minimized because the need for re-investment of completely new machines is eliminated [1]. Although a number of MRMs have been developed around the world, they are still mainly based on the methods for traditional machines, with some modifications to MRMs on a case-by-case basis. Therefore, a new theory must be developed in order to deal with the varying topological nature of MRMs. Research into MRMs is an emerging field with research activities taking place in two areas: robotics and manufacturing. In the robotics area, a number of interesting modular reconfigurable robots (MRRs) have been put forward. Though these MRRs were proposed on an ad hoc basis, they may be broadly classified into three categories: self-assembly, self-configuring and manual-configuring. Self-assembly robots have the highest level of reconfigurability because they can
Machines 2017, 5, 5; doi:10.3390/machines5010005 www.mdpi.com/journal/machines

Machines 2017, 5, 5

2 of 16

automatically assemble and disassemble from their own modules or even grow by themselves [2]. Self-configuring robots, though not self-assembly, can perform self-reconfiguration after a robot system is assembled with some form of manual assistance [3]. Manual-configuring robots are the lowest level of reconfigurable robots, and they can only be reconfigured with manual assistance [4]. In terms of industrial applications, however, the last type is the most economical and robust due to its structure simplicity. In the manufacturing area, primary efforts have been spent on the development of reconfigurable machine tools (RMTs) [5]. Kota [6] developed a methodology for synthesis of reconfigurable machine tools (RMT) using the screw theory for kinematics analysis and graph theory for machine structural synthesis. Tilbury and Kota [7] further developed a methodology for the systematic design of reconfigurable machine tools and the associated control systems. Moon and Kota [8] introduced a new screw representation for kinematic modeling of RMT. In their work, module selection was accomplished through decomposition of the required machining operations into a set of task matrices, which were then mapped to the machine modules. However, there is no clear guideline available for task matrix determination. As the number of machining operations increases, it becomes rather difficult, if not possible, to determine a minimum yet sufficient set of task matrices. Modular design of machine tools has been studied for several decades. Shinno and Ito [9] proposed a methodology for generating the structural configuration of machine tools. They decomposed machine tool structures into simple geometric forms, such as plates, beams, and boxes. Their research contributed to the design of machine tools for Flexible Manufacturing Systems (FMS). An overview of machine tool modular design was provided by Garro and Martin [10]. Later on, Ouyang et al. [11] adapted Ito's method for modular machine tool synthesis and developed a method for enumerating machine tool modules. Zatarain et al. [12] proposed a new method of modular machine tool synthesis using predetermined component information. Two major benefits of adopting modular structures are standardization of components and reconfigurability of devices. In particular, the advantages of modular design can be summarized as: (1) device reconfigurability; (2) speedy introduction of new devices; (3) maintainability and serviceability of devices; and (4) design information reuse [13]. Though the traditional machine tool design was documented in [14] and modular design was documented in [15], these methods were not discussed in the context of reconfigurable machine tools. To overcome these problems, a method is presented here for the systematic design of modular reconfigurable machine tools (MRMTs). This method consists of three steps: module identification, module determination, and layout synthesis. In the first step, the module components are collected from a family of general-purpose machines to establish a module library. In the second step, for a given family of parts to be machined, a set of the needed modules are selected from the module library to construct a desired reconfigurable machine tool. In the third step, a final machine layout is decided through evaluation by considering a number of performance indices. Based on this method, a software package has been developed that can design an MRMT for a given part family. 2. Problem Formulation and Methodology A modular reconfigurable machine tool (MRMT) is designed based on building blocks, called modules. In this design problem, the input is a set of parts to be machined, called part family, each part sharing some machining features but differing in others. The output is the final design of a reconfigurable machine tool that can use a minimal set of modules through reconfiguration to machine all the machining features within the part family. Figure 1 provides a block diagram of the proposed design system. As shown in Figure 1, when a given family of parts is input into the design system, a set of machining features will be extracted and related to machine modules based on tool motion requirement. This is the first step, called module identification. Then, a set of machine modules will be selected and evaluated to form a minimum set of modules. This is the second step, called module

Machines 2017, 5, 5
Machines 2017, 5, 5

3 of 16
3 of 16

selection. Finally, a final design will be determined based on a number of performance indices. This is Machines 2017 , 5,indices. 5 layout 3 of 16 the third step, called what follows, detailsIn of this follows, design system are provided. performance Thissynthesis. is the thirdIn step, called layoutthe synthesis. what the details of this
design system are provided. performance indices. This is the third step, called layout synthesis. In what follows, the details of this design system are provided.

Figure 1. Design system for modular reconfigurable machine tools. Figure 1. Design system for modular reconfigurable machine tools.

3. Module Identification and Selection

Figureand 1. Design system for modular reconfigurable machine tools. 3. Module Identification Selection

The theory for module identification and selectionand was reported previous paper [16]. the completeness of the paper, a brief review is provided then appliedin to our MRMTs. The purpose The theory for module identification and selection was reported in our previous paper [16]. For For the completeness of the paper, a brieftwo review is provided and then applied to MRMTs. Thefirst purpose of module identification is to establish libraries and create a mapping between the two. The the completeness of the paper, a brief review is provided and then applied to MRMTs. The purpose library is called module component and theand second one called machining feature library. of module identification is to establishlibrary, two libraries create aismapping between the two. The first of module identification is to establish two libraries and create a mapping between the two. The first A mapping created between the two libraries based on tool motion requirement. library is calledis module component library, and the second one is called machining feature library. library is called module component library, and the second one is called machining feature library. A mapping is created between the two libraries toolmotion motion requirement. A mapping is created between the two librariesbased based on on tool requirement.
3.1. Module Component Library

The theory for module identification 3. Module Identification and Selection and selection was reported in our previous paper [16]. For

3.1. Module Component Library This library serves as a machine module database. It is established by considering all of the 3.1. Module Component Library This This library serves as as a machine module established considering all of the library serves a machine module database. database. ItItisis established by by considering all of the horizontal milling machines as shown in the first block of Figure 2. This consideration provides general-purpose machine tools including vertical and horizontal horizontal lathes as well as vertical general-purpose machine tools including vertical and lathes asdesign. well as and and comprehensive module coverage for modular reconfigurable machine tool Invertical our design horizontal milling machines as shown in the first block of Figure 2. This consideration provides horizontal milling machines as shown in the first block of Figure 2. This consideration provides system, function taxonomy is created for each machine in terms of two core functions: motion and comprehensive module coverage for modular reconfigurable reconfigurable machine tool design. In our design comprehensive module coverage for modular machine tool design. Ininclude our design support. Motion modules include rotary and linear motion systems; support modules system, function taxonomy is created for each machine in terms of two core functions: motion and system, function taxonomy for each machine in terms of core functions: machine bed and column.is Increated Figure 2, these modules are illustrated in two the second block, theirmotion design and support. Motion modules include rotary and linear motion systems; support modules include attributes in the third block androtary motion requirement in thesystems; last block. A similar taxonomy structure support. Motion modules include and linear motion support modules include machine machine bed and column. In Figure 2, these modules are illustrated in the second block, their design can be created for actuators and controller based on machine tool control systems summarized bed and column. In Figure 2, these modules are illustrated in the second block, their design attributes attributes in the third block and motion requirement in the last block. A similar taxonomy structure inthird [17]. block and motion requirement in the last block. A similar taxonomy structure can be in the can be created for actuators and controller based on machine tool control systems summarized created for actuators and controller based on machine tool control systems summarized in [17]. in [17].
Step 1: Machine Tool Decomposition Step 1: Machine Tool Decomposition Step 2: Module Component Attribute Identification Step 2: Module Component Attribute Identification Step 3: Module Component Library Creation Step 3: Module Component Library Creation

general-purpose machine tools including vertical and horizontal lathes as well as vertical and

Module Component 1 Name : Function: Dimension: ...... Module Component 1 Name : Module Function: Component 2 Dimension: ...... : Name Function: Dimension: ...... Module Component 2 Name : Module Function: Component 3 Dimension: ...... : Name Function: Dimension: ...... Module Component 3 Name : Function: Dimension: ......

:

: Figure 2. Module identification method.
Figure Module identification identification method. Figure 2.2. Module method.

Machines Machines 2017 2017,, 5 5,, 5 5

4 of of 16 16

3.2. Machining Feature Library 3.2. Machining Feature Library This library serves as a machining feature library. A machining feature identifies a volume of This library serves as a machining feature library. A machining identifies a well volume of material that must be removed to obtain the final part geometry fromfeature the initial stock as as the material that must be removed to obtain the final part geometry from the initial stock as well as motion required to drive a tool to perform machining, commonly called tool approach direction the motion to process drive a tool performpart machining, commonly by called tool approach direction (TAD). Therequired machining of a to machined can be represented a set of machining features. (TAD). The machining process of a machined part can be represented by a set of machining features. The international standard STEP (Exchange of Product Model Data) [18] is used for this purpose. The international standard STEP (Exchange of Product Model Data) [18] is used for this purpose. STEP STEP AP 224 "Mechanical Product Definition for Process Planning Using Machining Features" AP 224 "Mechanical Product Definition for Process Using Machining Features" defines a list defines a list of common machining features. Our Planning machining feature library is built based on STEP. of common machining features. Our machining feature library is built based on STEP. For machining For machining features not included in STEP, feature recognition methods [19­22] can be applied to features not library. included in STEP, feature recognition methods [19­22] can be applied to update our library. update our
3.3. Module Selection 3.3. Module Selection For a given family of parts as shown in the first block of Figure 3, the associated machining For a given family of parts as shown in the first block of Figure 3, the associated machining features for each part will be extracted as shown in the second block and compared with the machining features for each part will be extracted as shown in the second block and compared with the feature library shown in the third block to find the desired motion modules shown in the fourth block machining feature library shown in the third block to find the desired motion modules shown in the through motion matching, i.e., between TAD and machine motion module. Different parts will lead to fourth block through motion matching, i.e., between TAD and machine motion module. Different different sets of modules shown in the fifth block. parts will lead to different sets of modules shown in the fifth block.
Step 1: Functional Requirement Determination Step 2: Module Component Selection Step 3: Machine Module Formation

Part Family

Machining Functions

Machining Functions

Module Components

Machine Modules Module 1

Module 2

Feature Library

Module Component Library

Figure 3. 3. Flowchart of the module selection method. method.

As an industrial application of of mold making, Table 1 enlists the As an illustrative illustrative example examplefor foran an industrial application mold making, Table 1 enlists machining features that are extracted according to STEP to for STEP a family given 1 the machining features that are extracted according for of a four family of parts. four Part given includes five machining features: (i) two general pockets; (ii) 10 bosses within a pocket -- cylindrical; parts. Part 1 includes five machining features: (i) two general pockets; (ii) 10 bosses within (iii) two slots--rectangular profile;(iv) two blind profile;(iv) holes--counter-bored; and (v) seven blind a pocket--cylindrical; (iii) two slots--rectangular two blind holes--counter-bored; holes(v) --cylindrical. Both parts 2 and 3 contain six parts machining features, respectively, and part 4 four and seven blind holes--cylindrical. Both 2 and 3 contain six machining features, machining features. All of these features can be lumped into seven machining features (MF) as respectively, and part 4 four machining features. All of these features can be lumpednoted into in Table 2: features MF1--"General Pocket"; MF2--"Boss withinPocket"; a Pocket --Cylindrical"; seven machining (MF) as noted in Table 2: MF1--"General MF2--"Boss within MF3 --"Slot--Rectangular Profile"; MF4--"Blind Hole-- Counter-Bored"; MF5--"Blind a Pocket--Cylindrical"; MF3--"Slot--Rectangular Profile"; MF4--"Blind Hole--Counter-Bored"; Hole --Cylindrical"; MF6--"Boss--General Profile"; MF7--"Step"; MF8--"Revolved MF5--"Blind Hole--Cylindrical"; MF6--"Boss--General Profile"; MF7--"Step"; MF8--"Revolved Feature--Volume Removal". Removal". Table Table 2 2 demonstrates demonstrates how how these these machining machining features features are are related related to to the the Feature--Volume corresponding motion requirements, i.e., TAD. For example, MF1 (general pocket) is machined by corresponding motion requirements, i.e., TAD. For example, MF1 (general pocket) is machined by mounting the spindle in z -axis and moving it in x, yand z -axis. For MF2 to MF8, their motion mounting the spindle in z-axis and moving it in x-, y- and z-axis. For MF2 to MF8, their motion requirements are are detailed detailed in in Table Table2. 2. requirements

Machines 2017, 5, 5
Machines 2017, 5, 5 Machines Machines 2017 2017,, 5 5,, 5 5

5 of 16
5 of 16 5 5 of of 16 16

Table 1. Machining features extraction.
Table 1. Machining features extraction. Table 1. Table 1. Machining features features extraction. extraction. Part 2Machining Part 3
Part 2 Part Part 2 2 Part 3 Part Part 3 3

Part Part 11 Part Part 1 1

Part Part 44 Part Part 4 4

z z xz x x

y y y
Machining Features: Machining Features: (1) General Pocket (1) Machining Features: Machining Features: (1) General Pocket (1) (2) --General (1) General Pocket (1)Boss General Pocket (1) (1) (2) Boss--General Profile (3) (2) Boss -- General (2) Boss -- General Profile (3) (3) Boss within Pocket-- Profile (3) Profile (3) a (3) Boss within a -- Cylindrical (3) (3) Boss within a (3) Boss within a Pocket Pocket -- Pocket-- (4) Slot -- Rectangular Cylindrical (3) Cylindrical (3) Cylindrical (3) (2) (4) Slot -- Rectangular (4)Profile Slot -- Rectangular (5) Blind Hole -- (4) Slot--Rectangular Profile (2) Profile (2) Profile (5) Blind Hole -- (5)Counter-Bored Blind Hole(2) -- (2) (6) Blind Hole-- Counter-Bored (2) Counter-Bored (2) (5) Blind (7) (6) Blind Hole -- (6)Cylindrical Blind Hole -- Hole--CounterCylindrical (7) Cylindrical (7) Bored (2) Machining Features: Machining Features: (1) General Pocket (1) Machining Features: Machining Features: (1) General Pocket (1) (2) --General (1) General Pocket (1)Boss General Pocket (1) (1) (2) Boss--General Profile (1) (2) Boss -- General (2) Boss -- General Profile (3) Boss within a Pocket-- Profile (1) Profile (1) (1) (3) Boss within a -- Cylindrical (5) (3) Boss within a (3) Boss within a Pocket Pocket -- Pocket-- (4) Step (1) Cylindrical (5) Cylindrical (5) Cylindrical (5) (5) Hole (4) Step (1) (4)Blind Step (1) -- Counter-Bored (4) Step (1)-- (5) Blind Hole (5) Blind Hole -- (2) (6) Blind Hole-- Counter-Bored (2) Counter-Bored (2) (5) Blind (7) (6) Blind Hole -- (6)Cylindrical Blind Hole -- Hole--CounterCylindrical (7) Cylindrical (7) Bored (2) Machining Features: Machining Features: (1) General Pocket (1) Machining Features: Machining Features: (1) General Pocket (1) (2) --General (1) General Pocket (1)Boss General Pocket (1) (1) (2) Boss--General Profile (1) (2) Boss -- General (2) Boss -- General Profile (3) Revolved Profile (1) Profile (1) (1) (3) Revolved Feature --Volume (3) Revolved (3) Revolved Feature--Volume Removal (1) Feature -- Volume Feature -- Volume Removal (4) Blind Hole-- Removal (1) Removal (1) (1) Cylindrical (14) (4) Blind Hole-- (4) Blind Hole -- (4) Blind Hole -- Cylindrical Cylindrical (14) Cylindrical (14) (14)

Machining Features: Machining Features: (1) General Pocket (2) Machining Features: Machining Features: (1) General (2) (2) within a Pocket Pocket (1) General Pocket (2) (1)Boss General Pocket (2) -- (2) Boss within a -- Cylindrical (10) (2) Boss within a (2) Boss within a Pocket Pocket -- Pocket-- (3) Slot -- Rectangular Cylindrical (10) Cylindrical (10) Cylindrical (10) (2) (3) Slot -- Rectangular (3)Profile Slot -- Rectangular (3) Slot--Rectangular (4) Blind Hole -- Profile (2) Profile (2) Profile (4) Blind Hole -- (4)Counter-Bored Blind Hole(2) -- (2) (5) Blind Hole-- (4) Blind Counter-Bored (2) Counter-Bored (2) (7) Hole--Counter(5) Blind Hole -- (5)Cylindrical Blind Hole -- Bored (2) Cylindrical (7) Cylindrical (7)

(5)

Blind Hole-- Cylindrical (7)

After analyzing the motion requirements, these machining features can be clustered into Profile"; three Profile"; MF4--"Blind Hole--Counter-Bored"; MF5--"Blind Hole--Cylindrical"; MF6--"Boss--General After analyzing theas motion requirements, these machining can be clustered into three MF7--"Step"; MF8--"Revolved Feature--Volume Removal". machine configurations, summarized in Table 3. Here, letter features A represents an x-axis slide, B a machine configurations, as summarized Table table, 3. Here, A represents an -axis B a y-axis slide, C a z-axis slide, D an x-axis in rotation E zletter -axis spindle, and F ax y -axis slide, spindle. y-axis slide, C a composed z-axis slide, D an translations x-axis rotation table, E z-axis spindle, and F a y-axis spindle. Configuration 1 is of three with the spindle along Z direction, i.e., (A, B, C, E). After analyzing the motion requirements, these machining features can be clustered into three Configuration 1 isvertical composed of three translations with the spindle along Z direction, (A, This is a three axis milling machine configuration can be used to machinei.e., MF1, 2,B, 3,C, 4, E). 6 machine configurations, as summarized in Table 3. Here,that letter A represents an x-axis slide, Ba y-axis This is a the three axis vertical milling machine configuration thattranslation can be used to machine MF1, 2, 3,the 4, 6 and 7 for case under study. Configuration 2 consists of one with the spindle along slide,and C a7zfor -axis slide, D an x -axis Configuration rotation table, E z-axis of spindle, and F a y -axis spindle. Configuration the case study. consistsconfiguration one translation theused spindle along the y-direction, i.e., (C,under F), i.e., a one-axis turning 2 machine that with can be to machine 1 is MF8. composed of three translations with the spindle along Z direction, i.e., (A, B, C, E). is a three y-direction, i.e., (C, 3 F),isi.e., a one-axis turning machine and configuration thatwith can be used toThis machine Configuration made up of two translations one rotation the spindle along axiszvertical milling machine configuration that can be used to machine MF1, 2, 3, 4, 6 and 7 for the MF8. Configuration isE). made two translations and one rotation with the spindle table along -direction, i.e., (A, C, 3 D, This up is aof two axis milling machine configuration with a turning casethat under Configuration 2 consists of axis one milling translation withconfiguration the spindle along the y-direction, z-direction, i.e., (A, C, D, E). This is a two machine with a turning table i.e., can study. be used to machine MF5. that can be used to machine MF5. configuration that can be used to machine MF8. Configuration 3 (C, F), i.e., a one-axis turning machine

Note: MF1 Pocket"; MF2--"Boss within a Pocket Note: MF1--"General --"General Profile"; Pocket"; MF2--"Boss x within a Pocket--Cylindrical"; --Cylindrical"; MF3 --"Slot--Rectangular Hole-- CounterMF5--"Blind MF6 z MF4--"Blind -Translation, yBored"; -Translation, z-Translation MF3 --"Slot--Rectangular Profile"; MF4--"Blind Hole-- CounterBored"; MF5--"Blind MF3 --"Slot--Rectangular Profile"; MF4--"Blind Hole-- CounterBored"; MF5--"Blind Hole --Cylindrical"; MF6--"Boss--General Profile"; MF7--"Step"; MF8--"Revolved MF7 z x-Translation, y-Translation Hole MF6--"Boss--General Profile"; MF7--"Step"; MF8--"Revolved Hole--Cylindrical"; --Cylindrical"; MF6--"Boss--General Profile"; MF7--"Step"; MF8--"Revolved Feature --Volume Removal". MF8 y z-Translation Feature --Volume Removal". Feature --Volume Removal". Note: MF1--"General Pocket"; MF2--"Boss within a Pocket--Cylindrical"; MF3--"Slot--Rectangular

Machining Feature Spindle Axis Motion Requirement Machining Motion Requirement MF1 Feature Spindle z Axis x-Translation, y-Translation, z-Translation MF1 z x-Translation, y-Translation, z-Translation MF2 z x -Translation, y -Translation, Table 2. Corresponding motion requirements. z-Translation MF2 x-Translation, y-Translation, z-Translation MF3 zz x-Translation, y-Translation, z-Translation MF3 z x-Translation, y-Translation, z-Translation MF4 z z -Translation Machining Feature Spindle Axis Motion Requirement MF4 z-Translation MF5 zz z-Translation MF1 MF5 z x-Translation, y-Translation, z-Translation z-Translation MF6 zz x-Translation, y-Translation, z-Translation MF2 MF6 z x -Translation, y-Translation, z-Translation x-Translation, y-Translation, z-Translation MF7 zz x-Translation, y-Translation MF3 z x-Translation, y-Translation, z-Translation MF7 x-Translation, y-Translation yz z-Translation MF4 MF8 z z-Translation MF8 y z -Translation Note: MF5 MF1--"General Pocket";z MF2--"Boss within a z-Translation Pocket--Cylindrical";

(6) Blind Hole-- (7) (6) Blind Hole-- Table 2. Corresponding motion Cylindrical requirements. Cylindrical (7) Table 2. motion Table 2. Corresponding Corresponding motion requirements. requirements.

is made up of two translations and one rotation with the spindle along z-direction, i.e., (A, C, D, E). This is a two axis milling machine configuration with a turning table that can be used to machine MF5.

Machines 2017, 5, 5
Machines 2017, 5, 5

6 of 16

Table 3.Clustered machine configurations.

6 of 16

Part 1 Part 2 Part 3 2 MF1 Table 3. Clustered 1 MF1 machine 1 MF1 configurations. 10 MF2 3 MF6 1 MF6 1 Part 2 2 Part MF3 3 MF2 5 MF2 Part 3 2 MF4 MF3 11 MF7 2 MF1 12 MF1 MF1 10 MF2 32 MF6 MF6 MF4 21 MF4 Configuration 1: 2 MF3 MF2 5 MF2 x-Translation 3 x -Translation x-Translation 2 MF4 2 MF3 1 MF7 y-Translation 2 y -Translation y-Translation MF4 2 MF4 Configuration 1: z-Translation z-Translation z-Translation x-Translation x-Translation x-Translation Spindle Z Spindle Z Spindle Z y-Translation y-Translation y-Translation Configuration 2:
Configuration 2: z-Translation Spindle Z z-Translation Spindle Z z-Translation Spindle Z

Part 4 1 MF1 1 MF6
Part 4 1 MF1 1 MF6

7 MF5 7 MF5 z-Translation z-Translation Configuration 3: x-Translation 7 x -Translation 7 MF5 MF5 y-Rotation y-Rotation z-Translation z-Translation Spindle Z Spindle Z x-Translation x-Translation Configuration 3:

7 MF5 z-Translation x-Translation 7 MF5 y-Rotation z-Translation Spindle Z x-Translation

x-Translation y-Translation z-Translation x-Translation Spindle Z y-Translation 1 MF8 z-Translation Spindle Z Spindle Y z-Translation, 7 MF5 1 MF8 z-Translation z-Translation, Spindle Y x-Translation 7 MF5 y-Rotation z-Translation Spindle Z x-Translation

where a numeral indicates the number of motions, for example, 2 MF1, indicates that there are two motions of MF1.

y-Rotation y-Rotation y-Rotation y-Rotation where a numeral indicates the number of motions, for example, 2 MF1, indicates that there are two Spindle Z Spindle Z Spindle Z Spindle Z motions of MF1.

In our previous paper [16], the theory for module classification was provided to include In our previous paper [16], module the theory for moduleThe classification was provided to include common, common, similar, and singular components. common module components appear in all similar, and singular module components. The common module components appear in all machine configurations. The similar module components appear only in some machine machine configurations. Thesingular similar module module components components appear appear in only in one some machine configurations. configurations. The only machine configuration. As The singular module components appear in only one machine configuration. As shown in Figure 4, shown in Figure 4, based on this theory, (C) is deemed a common module because it appears in all based on this theory, (C) isE) deemed a common module because it appears inappear all three configurations; three configurations; (A, were deemed similar modules because they in configuration (A, E) were deemed similar modules because they appear in configuration 1 and 3; (B, F) were 1 and 3; (B, D, F) were deemed singular modules because each of them only appears in theD, respective deemed singular modules because each of them only appears in the respective configuration. configuration.

Figure 4. Determination of minimal set modules; where A--x axis slide, B--y axis slide, C--z axis Figure 4. Determination of minimal set modules; where A--x axis slide, B--y axis slide, C--z axis slide, slide, D--x axis rotation table, E--z axis spindle, F--y axis spindle. D--x axis rotation table, E--z axis spindle, F--y axis spindle.

The basic idea of a reconfigurable machine tool design is to retain all of the common modules as The basictrying idea of a reduce reconfigurable machine tool design is to retain modules all of the that common modules as a base, while to the number of singular and/or similar will be required a base, whiletasks. trying to reduce the number singular and/or all similar modulesthe that will be required for different One may argue that by of simply combining six modules, resulting machine for different tasks. One may argue that by simply combining all six modules, the resulting machine tool will be able to machine all the features without reconfiguration. However, this is the tool will be able to machine all the features without reconfiguration. However, is thetool conventional conventional design approach of multifunction machines at the cost of extra this machine axes that design approach of multifunction machines at the cost of extra machine tool axes that may not may not be needed when machining each part within the part family. The essence of be a needed when machining each part within the part family. The essence of a reconfigurable machine reconfigurable machine tool design is to find a minimum number of machine tool axes that can tool design to features find a minimum of machine toolunder axes that canif machine all the features of machine all is the of a part number family. Back to the case study, by reconfiguring singular a part family. Back to the to case study, if by singular module E reduced (z-axis spindle) module E (z-axis spindle) F (under y-axis spindle), thereconfiguring total number of modules will be to five. to F ( y -axis spindle), the total number of modules will be reduced to five. However, the other two However, the other two singular modules (B, D) cannot be simply replaced through reconfiguration. singular modules (B, D) cannot be simply replaced through reconfiguration. Hence, (A, B, C, D, E)

Machines Machines 2017 2017, ,5 5,, 5 5 Machines Machines 2017, 5, 2017 5 , 5, 5

7 7 of of 16 16 7 of 16 7 of 16

Hence, Hence, (A, (A, B, B, C, C, D, D, E) E) represents represents a a minimal minimal set set of of modules modules for for designing designing this this MRMT. MRMT. To To summarize, summarize, Hence, (A, B, C, D, E) represents a minimal set of modules for designing this MRMT. To summarize, common modules serve as a base, similar modules are used for reconfiguration design, and singular common modules serve as a base, similar modules are used for reconfiguration design, and singular common modules serve as a base, similar modules are used for reconfiguration and singular represents a minimal set of modules for designing this MRMT. To summarize, common design, modules serve modules generally cannot be designed for reconfiguration due to their single usages. modules generally cannot be designed for reconfiguration due to their single usages. modules generally befor designed for reconfiguration due to their single usages. as a base, similar modulescannot are used reconfiguration design, and singular modules generally cannot be designed for reconfiguration due to their single usages. 4. 4. Layout Layout Synthesis Synthesis 4. Layout Synthesis 4. Layout Synthesis 4.1. 4.1. Layout Layout Generation Generation 4.1. Layout Generation 4.1. Layout After Generation After modules modules are are selected, selected, layout layout will will be be generated generated to to form form a a desired desired reconfigurable reconfigurable machine machine After modules are selected, layout will be generated to form a desired reconfigurable machine tool. For this purpose, tree graph enumeration algorithms are adopted and the interested reader can After modules are selected, layout will be generated to form a desired reconfigurable machine tool. For this purpose, tree graph enumeration algorithms are adopted and the interested reader can tool. For this purpose, tree graph enumeration algorithms are adopted and the interested reader can refer to [23 ­ 28] for details. Steps are provided here: the first step is to enumerate all the generalized tool. For this tree graph Steps enumeration algorithms are the interested reader can refer topurpose, [23­ ­28] 28] for for details. Steps are provided provided here: the the adopted first step stepand is to to enumerate all the generalized generalized refer to [23 details. are here: first is enumerate all the layouts by defining enumeration constraints, performing enumeration, and checking isomorphism. refer to [23­28] for details. Steps are provided here: the first step is to enumerate all the generalized layouts by defining enumeration constraints, performing enumeration, and checking isomorphism. layouts by defining enumeration constraints, performing enumeration, and checking isomorphism. The constraints for layout generation are: (1) of layouts by enumeration defining enumeration constraints, performing enumeration, isomorphism. The enumeration constraints for generalized generalized layout generationand are:checking (1) number number of vertices; vertices; (2) (2) The enumeration constraints for generalized layout generation are: (1) number of vertices; (2) number of pendant vertices; and (3) maximum number of solutions. The number of vertices is set The enumeration for generalized layout generation are: (1) number of vertices; number of of constraints pendant vertices; vertices; and (3) (3) maximum maximum number of solutions. solutions. The number(2) of number vertices is is set set number pendant and number of The number of vertices equal to the number of selected module components. The number of pendant vertices is set of pendant vertices; and (3) maximum number of solutions. The number of vertices is set equal to equal to the number of selected module components. The number of pendant vertices is set equal to the number of selected module components. The number of pendant vertices is set according to machining requirements. the number of selected module components. The number of pendant vertices is set according to according to to machining machining requirements. requirements. according layout enumeration algorithm machining The requirements. The layout enumeration algorithm adopted adopted is is a a growing growing algorithm algorithm for for generating generating rooted-tree rooted-tree The layout enumeration algorithm adopted is a growing algorithm for generating rooted-tree type layouts [28]. The algorithm is initialized by assigning vertex numbers, initial values The layout enumeration algorithm adopted is a growing algorithm for generating rooted-tree type type layouts [28]. The algorithm is initialized by assigning vertex numbers, initial values for for type layouts [28]. The algorithm is initialized by assigning vertex numbers, initial values for variables, and constraint constants, such as number of vertices, number of pendant vertices, and layouts [28]. The and algorithm is initialized by assigning vertex numbers, initial values variables, and and variables, and constraint constants, such as as number number of vertices, vertices, number offor pendant vertices, and variables, constraint constants, such of number of pendant vertices, maximum number of solutions. At this point, there is only one vertex (the root vertex) in the tree constraint constants, such as number of vertices, number of pendant vertices, and maximum number maximum number of solutions. At this point, there is only one vertex (the root vertex) in the tree maximum number of solutions. At this point, there is only one vertex (the root vertex) in the tree graph. Then, a new vertex is loaded into the tree graph and solutions are generated by connecting of solutions. At this point, there is only one vertex (the root vertex) in the tree graph. Then, a new graph. Then, a new vertex is loaded into the tree graph and solutions are generated by connecting graph. Then, a new vertex is loaded into the tree graph and solutions are generated by connecting new with the existing For when the vertex loaded into the vertex the is loaded into the tree graph andvertices. solutions areexample, generated by connecting the new is vertex with the the new vertex vertex with the existing vertices. For example, when the second second vertex is loaded into the tree tree the new vertex with the existing vertices. For example, when the second vertex is loaded into the tree graph, one solution can be created by connecting the second vertex with the root vertex. Loading existing vertices. For example, when the second vertex is loaded into the tree graph, one solution can graph, one solution can be created by connecting the second vertex with the root vertex. Loading graph, one solution can be created by connecting the second vertex with the root vertex. Loading vertices continue all solutions are generated or number of exceeds be created by connecting the second vertex with the root vertex. Loading vertices continue until all the the vertices continue until until all the the possible possible solutions are generated or the the number of solutions solutions exceeds the vertices continue until all the possible solutions are generated or the number of solutions exceeds the maximum value. possible solutions are generated or the number of solutions exceeds the maximum value. maximum value. maximum value. new is it that the is When When a new a layout is generated, it is possible that the layout is isomorphic to oneto ofone the of existing When a new layout layout is generated, generated, it is is possible possible that the layout layout is isomorphic isomorphic to one of the the existing existing When a new layout is generated, it is possible that the layout is isomorphic to one of the existing layouts. Therefore, isomorphism detection is performed during solution generation. There layouts. Therefore, isomorphism detection is performed during solution generation. are several layouts. Therefore, isomorphism detection is performed performed during solution There generation. There are are layouts. Therefore, isomorphism detection is during solution generation. There are several methods proposed in the literature for isomorphism detection [23 ­ 28]. The isomorphism methods proposed in the literature for isomorphism detection [23­28]. The isomorphism detection several methods proposed in the literature for isomorphism detection [23 ­ 28]. The isomorphism several methods proposed in the literature for isomorphism detection [23­28]. The isomorphism detection algorithm in paper based on tree method [23], requires algorithm presented in this presented paper is based on the treeis method which requires examining if the detection algorithm presented in this this paper is based [23], on the the tree method [23], which which requires detection algorithm presented in this paper is based on the tree method [23], which requires examining if the tree is rooted or not first. If the tree is not rooted, the center of the tree is determined tree is examining rooted or not first. If is the tree is not rooted, the tree is determined and is taken as examining if the the tree is rooted or not first. If Ifthe thecenter tree is is of not rooted, the center of of the the tree is determined determined if tree rooted or not first. the tree not rooted, the center tree is and is taken as rooted. One way to find the center of a tree is to repeatedly remove all the vertices rooted. One way to find the center of a tree is to repeatedly remove all the vertices with connectivity 1 and is taken as rooted. One way to find the center of a tree is to repeatedly remove all the vertices and is taken as rooted. One way to find the center of a tree is to repeatedly remove all the vertices with connectivity 1 until either a single vertex or two vertices connected by an edge are left. A until either a single vertex or two vertices connected by an edge are left. A vertex is the center of the with connectivity connectivity 1 1 until until either either a a single single vertex vertex or or two two vertices vertices connected connected by by an an edge edge are are left. left. A A vertex vertex with vertex is the center of the tree if it is the only one left. If there are two vertices left, there will be two separate tree if is it is the only one left. If there are two vertices left, there will be two separate centers. Once the is the center of the tree if it is the only one left. If there are two vertices left, there will be two separate the center of the tree if it is the only one left. If there are two vertices left, there will be two separate centers. Once the rooted, the detection algorithm is trees are rooted, the isomorphism detection algorithm is applied. Either Breadth-First Search (BFS) or Either centers. Once the trees trees are are rooted, the isomorphism isomorphism detection algorithm is applied. applied. Either centers. Once the trees are rooted, the isomorphism detection algorithm is applied. Either Breadth-First Search (BFS) or Depth-First Search (DFS) methods can be used for this purpose [26]. Depth-First Search (DFS) methods can be used for this purpose [26]. can Breadth-First Search (BFS) or or Depth-First Search (DFS) methods methods can be be used used for for this this purpose purpose [26]. [26]. Breadth-First Search (BFS) Depth-First Search (DFS) For the given example, there are five selected module components; hence, the number of For the given example, there are five selected module components; hence, the number of vertices For the given example, there are five selected module components; hence, the number of For the given example, there are five selected module components; hence, the number of vertices is 5, and two pendant module components are required, i.e., one for the spindle (E) and the is 5, and two pendant module components are required, i.e., one for the spindle (E) and the other for vertices is 5, and two pendant module components are required, i.e., one for the spindle (E) and the vertices is 5, and two pendant module components are required, i.e., one for the spindle (E) and the other for component that holds the to machined, which can be one the module that holds the part to be machined, which be any one of (A, B, C,any D). Hence, other component for the the module module component that holds the part part to be be can machined, which can be any one of of (A, (A, B, B, other for the module component that holds the part to be machined, which can be any one of (A, B, C, D). Hence, the number of pendant vertices is 2. The result of enumeration is shown in Table 4. the number of pendant vertices is 2. The result of enumeration is shown in Table 4. C, D). Hence, the number of pendant vertices is 2. The result of enumeration is shown in Table 4. C, D). Hence, the number of pendant vertices is 2. The result of enumeration is shown in Table 4.
Table 4. of layout Table 4. Results of generalized layout generation. Table 4. Results Results of generalized generalized layout generation. generation. Table 4. Results of generalized layout generation.
Solution 1 2 3

Solution Solution Solution 1 1 1 2 2 2 3 3 3

Tree Graph Tree Graph Tree Graph Tree Graph

Enumeration Constraints Enumeration Constraints Enumeration Constraints Enumeration Constraints Number of = Number of vertices vertices =5 5 =5 Number of vertices Number of vertices = 5 Number of vertices = Number of Pendent vertices Number of Pendent Pendent vertices =2 2= 2 Number of Pendent vertices = 2
Maximum number of solutions = 50 Maximum number of = Maximum number of solutions solutions = 50 50 Maximum number of solutions = 50

4.2. Module Assignment 4.2. Assignment 4.2. Module Module Assignment 4.2. Module Assignment After the generalized layouts are created, the next isstep to convert generalized layouts into into After the layouts are the next is generalized layouts After the generalized generalized layouts are created, created, thestep next step is to to convert convert generalized layouts into After the generalized layouts are created, the next step is to convert generalized layouts into specialized layouts by replacing the vertices in the generalized layouts with the module components. specialized layouts by replacing the vertices in the generalized layouts with the module specialized layouts layouts by by replacing replacing the the vertices vertices in in the the generalized generalized layouts layouts with with the the module module specialized components. First, the module components are simplified for the purpose of illustration. As shown components. First, the module components are simplified for the purpose of illustration. As shown components. First, the module components are simplified for the purpose of illustration. As shown

Specify the should bewhose assigned to the pendant vertices; There may be some layout solutions that are not feasible according to the machining functional Prismatic port refers to athat connecting port coordinate system is able to move along its own  There Specify the modules that should be assigned to the pendant vertices; Prismatic port refers to a connecting port whose coordinate system is able to move along its own in Table 5modules , for example, the module component " x slide" can be simplified into a box. The function of may be some layout solutions that are not feasible according to the machining functional system is able to rotate aboutsolutions its own z-axis for annot angle with a specific range. Fixed port refers to a There may be some layout that are feasible according to the machining functional this module component isshould "x-Translation". There are two connecting ports port on this module z-axis for a distance with aa specific range. Revolute port refers to avertex; connecting whose coordinate zSpecify -axis for a distance with specific range. Revolute port refers to a connecting port whose coordinate Specify a module that should be assigned to the root requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or  a module that be assigned to the root vertex; connecting port whose coordinate system isand fixed. requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or component. One of them is a prismatic port the other iswith awith fixed port. In this work, there are three system isis able to rotate about its own z-axis for an angle aa specific range. Fixed port refers to aa system able to rotate about its own z -axis for an angle specific range. Fixed port refers to Specify some module components that should be connected with each other directly; eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: After the module components of the new machine tool are idealized and the key attributes of  Specify some module components that should be connected with each other directly; eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: different types of connecting ports considered: prismatic port, revolute port, and for fixed port. assignment: eliminate the infeasible solutions. Listed below are some typical constraints module connecting port whose coordinate system is fixed. connecting port whose coordinate system is fixed. Machines 2017 , 5, 5 8 of 16 the module components are collected, the next step is to define module assignment constraints. As Prismatic port refers to a connecting port whose coordinate system is able to move along its own allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F),  Specify Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), After the module components of the new machine tool are idealized and the key attributes of After the module components of the new machine tool are idealized and the key attributes of  mentioned Specify the modules should be assigned to the pendant vertices; Specify the that should be assigned to the pendant vertices; Specify the modules that should be assigned to the pendant vertices; z-axis a distance with athat specific range. Revolute port refers to a connecting port whoseof coordinate early, the module generation method proposed in this is function based on enumeration. infor Table 5modules , for example, the module component "x slide" can be simplified intopaper a box. The and Fixed-Fixed (F-F); the module components are collected, the next step is to define module assignment constraints. As and Fixed-Fixed (F-F); the module components are collected, the next step is to define module assignment constraints. As this module is "x-own Translation". There are two connecting ports on Fixed this machining module system is able to component rotate about its z -axis for an angle with aaccording specific range. port refers to a Specify a module that should be assigned to the root vertex; There may be some layout solutions that are not feasible to the functional  mentioned Specify module that should be assigned to the root vertex; Specify aa module that should be assigned to the root vertex; the module generation proposed in this paper isis based on enumeration. mentioned early, the module generation method proposed in this paper based on enumeration. component. One of them is a prismatic portmethod and the other is a fixed port. In this work, there are three Machines 2017 , 5, 5 early, 8 of 16   Specify mobility requirements; connecting port whose coordinate system is fixed. Specify mobility requirements; requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or Specify some module components that should be connected with each other directly;  Specify some module components that should be connected with each other directly;  There Specify some module components that should be connected with eachfunctional other directly; different types of connecting ports prismatic port, revolute port, and fixed port. may be some layout solutions that are not feasible according to the machining There may be some layout solutions that are not feasible according to the machining functional After the module components ofconsidered: the new machine tool are idealized and the key attributes of   Specify maximum number of module assignment solutions. eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: Specify maximum number of module assignment solutions. Prismatic port refers to a connecting port whose coordinate system is able to move along(P-F), its own Revolute-Fixed Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), (R-F), Specify allowed port connecting patterns, such as Prismatic-Fixed the module components are collected, the next step is to such define module assignment constraints. As or computational efforts. Therefore, proper constraints need to be set so as to reduce or  requirements Specify allowed port connecting patterns, as Prismatic-Fixed (P-F), Revolute-Fixed requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or (R-F), z-axis for a distance with a specific range. Revolute port refers to a connecting port whose coordinate and Fixed-Fixed (F-F); mentioned early, the module generation method proposed in thisrange. paper is based on enumeration.  Specify the modules that should be assigned to the pendant vertices; and Fixed-Fixed (F-F); eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: system is able to rotate about its own z -axis for an angle with a specific Fixed port refers to a For the given example, the module assignment constraints are set as as follows. The spindle and Fixed-Fixed (F-F); For the given example, the module assignment constraints are set follows. The spindle There may be port some layout solutions that are not feasible according to the machining functional First, module components are simplified for vertex; the purpose of illustration. As shown in Table 5, for connecting whose coordinate system is fixed.  Specify Specify a module that should be assigned to the root Specify mobility requirements; the mobility requirements;  Specify Specify the modules that should be assigned to the pendant vertices; Specify the modules that should be assigned to the pendant vertices; module "spindle" is assigned to a pendant vertex. The module component " y slide" is assigned to to  mobility requirements; module "spindle" is assigned to a pendant vertex. The module component " y slide" is assigned After the module components of the new machine tool are idealized and the attributes ofreduce requirements or computational efforts. Therefore, proper constraints need to key be set so as to or  Specify Specify some module components that should be connected with each into other directly; Specify maximum number of module assignment solutions. example, the module component " x slide" can be simplified a box. The function of this module   maximum number of module assignment solutions. the module components are collected, the next step is to define module assignment constraints. As Specify aThe module that should be assigned to the root vertex; eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: Specify Specify a module that should be assigned to the root vertex; the root vertex. module components "spindle" and " z slide" are connected together directly.  maximum number of module assignment solutions. the vertex. The module components "spindle" and " z slide" are connected together directly. root Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), mentioned early, the module generation method proposed in this paper is based on enumeration.  Specify some module components that should be connected with each other directly; For some module components that should be connected with each other directly; component is "given x -Translation". There are two connecting ports on this module component. One of For the given example, the module assignment constraints are set as follows. Thespindle spindle Specify Specify the modules that should be assigned to the pendant vertices; There may be some layout solutions that are not feasible according to R-F, the and machining functional the example, the module assignment constraints are set as follows. The and Fixed-Fixed (F-F); Only three port connecting patterns are allowed: P-F, R-F, F-F. Other connecting patterns like Only three port connecting patterns are allowed: P-F, and F-F. Other connecting patterns like  For Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), requirements orexample, computational efforts. Therefore, proper constraints need to be set so as to reduce or" y the given the module assignment constraints are set asare follows. The Specify Specify a module that should bependant assigned to the root vertex; module "spindle" is assigned to a vertex. The module component -slide" is assigned to spindle  Specify mobility requirements; module "spindle" is assigned to a pendant vertex. The module component " y slide" is assigned to them is a prismatic port and the other is a fixed port. In this work, there three different types of P-P and R-R are not considered as they will result in mobility loss. The degree of of freedom between P-P and R-R are not considered as they will in mobility loss. The degree freedom between eliminate the infeasible solutions. Listed below are some typical constraints for module assignment: and Fixed-Fixed (F-F); Fixed-Fixed (F-F); and Specify some module components should beresult connected with each other directly; module "spindle" is assigned a that pendant vertex. The component "y-slide" is assigned to root Specify maximum number of to module assignment solutions. the root vertex. The module components "spindle" and " zslide" -module slide" are connected together directly. the vertex. The module components "spindle" and " z are connected together directly.  Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), connecting ports considered: prismatic port, revolute port, and fixed port. Prismatic port refers to  mobility Specify the requirements; modules that should be maximum assigned to the pendant vertices; two Specify  pendant Specify mobility requirements; the two vertices is four. The number of of module assignment solutions is 100. the pendant vertices is four. The maximum number module assignment solutions is 100. Only three port connecting patterns are allowed: P-F, R-F, and F-F. Other connecting patterns like directly. the root vertex. The module components "spindle" and "F-F. z -set slide" are connected together port Specify a module that should be assigned to the root vertex; Only three connecting patterns are allowed: P-F, R-F, and Other connecting patterns like and Fixed-Fixed (F-F); For the given example, the assignment constraints are as follows. The spindle  Specify maximum number of module assignment solutions.  Specify maximum number of module assignment solutions. a connecting port whose coordinate is in able to other move along its own z-axis for a distance with  Specify some module components thatsystem should be connected with each directly;  R-R Specify mobility requirements; P-P and R-R are not considered they will result mobility loss. The of freedom between Only three port connecting patterns are allowed: P-F, R-F, and F-F. Other connecting patterns like P-P and are not considered as they will result inmodule mobility loss. The degree of freedom module "spindle" is assigned to aas pendant vertex. The component "y -degree slide" is assigned tobetween  the Specify allowed portTable connecting patterns, such as Prismatic-Fixed (P-F),are Revolute-Fixed (R-F), Table 5. Results of module component simplification. For the given example, the module assignment constraints set The 5.Results of connecting module component simplification. given example, the module assignment constraints are setas asfollows. follows. Thespindle spindle For Specify maximum number of module assignment solutions. a specific range. Revolute port refers to a port whose coordinate system able to rotate the two pendant vertices is four. The maximum number of module assignment solutions is 100. isbetween the root vertex. The module components "spindle" and "zin slide" are connected together directly. andvertices Fixed-Fixed (F-F); the two pendant is four. The maximum number of module assignment solutions is 100. P-P and R-R are not considered as they will result mobility loss. The degree of freedom module "spindle" is assigned to aa pendant vertex. The module component "y slide" isis assigned to module "spindle" is assigned to pendant vertex. The module component "-y -slide" assigned to  Specify mobility requirements; For the given example, the module assignment constraints are set as follows. The spindle Only three port connecting patterns are allowed: P-F, R-F, and F-F. Other connecting patterns like about own z-axis for an angle with a specific range. Fixed port refers to a Ports connecting port whose Connecting Ports Connecting theits two pendant vertices is four. The maximum number of module assignment solutions is 100. the root vertex. The module components "spindle" and " z slide" are connected directly. vertex. Specify maximum number of module assignment solutions. Original CAD Simplified CAD the root The module components "spindle" and "-z -component slide" are connected together directly. Original CAD Simplified CAD module is assigned to athey pendant vertex. The module y-slide"of is together assigned to P-P and R-R"spindle" are not considered as will result in component mobility loss. The " degree freedom between Table 5. Results of module component simplification. Name Function Name Function Table 5. Results of module simplification. ( x,( y ,,z  ,  ) Only three port connecting patterns are allowed: P-F, and F-F. Other connecting like xpatterns y,, zx,, ,  ,  ) coordinate system is fixed. Model Model Only three port connecting patterns are allowed: P-F, R-F, and F-F. Other connecting patterns like Location Type Parameters Model Location Type Parameters For the given example, theModel module assignment constraints are set as connected follows. The spindle the root vertex. The module components "spindle" andR-F, " z-slide" are together directly. xy yz z
the two pendant vertices is four. The maximum number of module assignment solutions is 100. module "spindle" is assigned toas athey pendant vertex. Thein module component "The y-slide" is assigned to Only three port connecting patterns are allowed: R-F, and F-F. Other connecting patterns like P-P and R-R are not considered as will result mobility loss. degree of freedom between Connecting Ports P-P and R-R are not considered they will result in mobility loss. The degree of freedom between Connecting Ports Table 5. Results of P-F, module component simplification. Original CAD Simplified CAD Original CAD Simplified CAD the root The module components "spindle" and "z-slide" are connected together directly. between Name Function P-Ppendant and R-Rvertex. are not considered as they will result in mobility loss. The degree of [1000, freedom the two vertices isTable four. The maximum number of module assignment solutions is 100. Name Function P 250, 0, 0, 90, 0] Parameters [-550, 550] P [1000, 250, 0, 0, )90, 0] [-550, 550] the two pendant vertices is four. The maximum number of module assignment solutions is 100. ( x , y , z ,  ,  ,  Model Model Location Type 5.Results of module simplification. Only three port connecting patterns allowed: P-F, R-F, and F-F. component Other connecting patterns ( x, ylike ,z , x , Model Location Type x y , y z ) z Parameters 5. are Results of component module simplification. the two Model pendant vertices Table is four. The maximum number of module assignment solutions is 100. xslide_ -Translation xslide_ x-Translation P-P and R-RCAD are not considered as they will result inx mobility loss. The degree of freedom between Connecting Ports Original Simplified CAD Connecting Ports Name Function Table 5.5. Results ofof module component simplification. the two pendant is four. The maximum number of module assignment solutions is 100. Table Results module component simplification. Original CADvertices Simplified CAD [1000, 250, 0, 90, [ - 550, 550] [100, 250, 90, 0, -0, 90] N/A F [1000, [100, 250, 300, - 90] N/A PP FType 250, 0,0, 0, 90, - 550, 550] (300, x , y0] ,0] z ,90, x ,[ , z ) Model Model Location Parameters Table 5. Results of module component simplification. Name Function y ( x, y , z,  ,  ,  )

   

Name Name Name
xslide_ x yslide_ yslide_ slide_

xslide_ xslide_

Name

Model Model Type Location Parameters x Ports y Connecting z Ports x-Translation Original Simplified x-Translation Connecting Connecting Ports Table 5.Results of module component simplification. Original CAD Simplified CAD Connecting Ports Original CAD Simplified CAD Function Original CAD Simplified CAD Function F [100, 250, 300, 90, 0, -90] N/A Function FLocation [100, 250, 300, 90, 0, - 90] N/A CAD Model CAD Model Function ( x , y , z ,  ,  ,  ) Connecting Ports P [1000, 250, 0, 0, 90, [-550, 550] ( x , y , z ,  ,  ,  ) Model Model Location Type Parameters P [250, 1500, 500 , - 90, 0 , - 90] -300, 300] Model Model P [1000, 250, 0, 0, 90, 0] [ - 550, 550] Type Parameters [250, 1500, 500 , - 90, 0 ,0] - 90] 300, 300] ( x, y , z ,  ,  Location , Type (x,y,z, , , [) Parameters x ) yParameters z Original CAD Simplified CAD Model Model Type Location
Name Model Model Type Location ( x , y , z , x , y , z ) Parameters x-Translation x y-Translation y-Translation -Translation [1000, 250, 0, 0, 0, 90, 0] [ - 550, P P [1000, 250, 0, 0, 90, 0] [0] - 550] [1000, 250, 0, 90, -N/A 550, 550] P [1000, 250, 0,550] 0, 90, 0]300] [-550, 550] P[100, [250, 1500, 500 ,550, -90, 0 ,[ 90] [300, -300, 300] FP P 250, 300, 90, 0, - 90] [250, 1500, 500 - 90, 0 , - 90] [ - P [1000, 250, 0, 0, 90, 0] [-550, 550] , 250, [100, 300, N/A x -Translation x -Translation F F [250, 250, 500, 0, 90, 90, 0]-90] N/A x -Translation F [250, 250, 500, 0, 0, 90, 0] N/A x -Translation x-Translation y-Translation y-Translation F [100, [100, 250, 300, 90, 0, - 90] N/A 300, F [100, 250, 90, 0, -90] N/A F 250, 300, 90, 0, -250, 90] N/A F [100, 250, 300, 0,0 - N/A [100, 300, 90, 0, - 90] N/A PF [250, 1500, 500 , 90, -90, , 90] - 90] [-300, 300] Function
x y zx

y

z

x

y

z

xslide_ xslide_ xslide_ xslide_
yslide_ yslide_

xslide_

yslide_ yslide_ yslide_ yslide_ zslide_ zslide_ yslide_

yslide_

yslide_

y-Translation P P y-Translation F y-Translation
P z-Translation

[-300, 300] [-300, 300] [250, 1500, 500 , -,90, 0, 0 -,90] 300, 300] [250, 1500, 500 -90, -90] [-[ -300, 300] N/A y-Translation [250, 250, 500, 0, 90, 0] [250, 500, 1200, 0, 90] 0,[- [300, -300, 300] y-Translation F [250, 250, 500, 0, 90, 0] N/A z-Translation F 250, 500, 90, 0] N/A z-Translation y-Translation PP [250, 500, 1200, 0, 0,0, 90] 300] F [250, 250, 500, 0, 90, 0] [250, N/A
FF [250, 250, 500, 0, 0, 90, 0]0] 0, 90, N/A [250, 250, 500, 90, N/A z-Translation z-Translation F [250, 0, 90] F [250, 250,[1200, 0, 90, 0, P 500, 1200, [250, 0,300] 0, 250, 90]500, - 300, 300] P [250, 0, 0,500, 90] 1200, [- 300, P [250, 0,90] 0, 90] [250, 0, 0, 90] [-90, 300, 0, [250, 250, 90] N/A F F 500, 1200, [250, 250, 0,0, 90, 0,300] 90] N/A

y-Translation P

FF

500 ,- 90,500 0, -, [- 300] P[250, 1500, [250, 1500, -90, [250, 0 , 300, -90] [-500, 300, 300] P 500, 1200, 0, 0, P90] [250, 1200, 0,90] 0, 90]

P P
F

[250, 250, 500, 90, 0] [250, 250, 500, 0,0, 90, 0]

[250, 1500, 1500, 500 ,- 90, 0, 0, -90] [250, 500, - 90, -90] [-300, [-300] 300, 300] [250, 250, 500, 0, 90, 0] N/A N/A N/A [-300, 300]

N/A N/A

zslide_ zslide_

zslide_ zslide_
zslide_ rtable1_ rtable1_

zslide_

zslide_

z-Translation z-Translation

zslide_ zslide_
rtable1_

rtable1_ rtable1_ rtable1_
rtable1_ rtable1_ spindle_

rtable1_ rtable1_
spindle_

P [250, 1200, 0, 0, 0, 0, 90] [-[ 300, 300] [250, 90, 0, 500, 90] N/A P 250, 0, [250, 500, 1200, 90] -300, 300] F [250, 250, 0, 90, 0,90] 90] N/A P250, 500, 1200, 0, 0, [-300, 300] F [250, 0, 90,[250, 0, 90] N/A 0, 0, [-180, 180] [0,200, 0, 200, 0,0] 0, 0] [-180, 180] [250, R 250, R 0, 90, 0, 90] [0, 0, N/A RR [0, 0, 200, 0, 0, 0] [ - 180, 180] R [0, 0,R 200, 0, 0, 0] [-0, 180, 180] [0, 200, 0, 0, 0] [ - 180, 180] z -Translation [0, 0, 200, 0, 0, 0] [-180, 180] y-Rotation y-Rotation FF [250, 250, 0, 0, 90, 0, 0, 90] N/A [250, 250, 90, 90] N/A y-Rotation y-Rotation 0, [-180, 180] y-Rotation R R [0, 0, [0, 200, 0,200, 0, 0] 0, 0, 0] [-180, 180] y-Rotation F [0, 0, 0, 90, F 0, 90]F N/A [250, 250, 90, 0, 90] N/AN/A [0, 0, 0, 90, 0, 90] N/A [0, 0, 0, 90, 0,0, 90] F [0, 0, 0,0, 90, 90]
z-Translation F

z-Translation z-Translation F -Rotation yy -Rotation

F R FR

FF

0, 200, 0,0, 0,90] 0]0] 0, 0, [0, 0,[0, 0,[0, 90, 0, 90] [0, 0,0, 0,200, 90,

[0, 90, 90] [0, 0,0, 0,0, 90, 0,0, 90]

180, 180] -N/A 180, 180] N/A [-[

N/A N/A

rtable1_ spindle_ spindle_ spindle_ spindle_ spindle_ spindle_

[250, 0, 250, 180, 0, -90] N/A R [0, 0, 200, 0, 0, 0] FF [0, 0, 0, 0, 0, 90, 0, 0, 90] N/A [0, 90, 90] N/A y -Rotation Spindle F [250, 0, 250, 180, 0, -0 90] Spindle F [250, 250, 180, ,0, -90] Spindle F 250, [250, 0, 250, 180, - 90] Spindle F [250, 0, 180, 0, 0, -90] N/A Spindle F [250, 0, 250, 180, 0 , -90] N/A Spindle F [250, 250, 180, N/A P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. Spindle F [250, 0, 250, 180, 0, -90] 0, -90]N/A F [0, 0, 0, 90, 0, 90]

y-Rotation y-Rotation Spindle F

[-180, 180] N/A N/AN/A N/A

--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. --"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. PP --"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree.
spindle_ Spindle F [250, 0, 250, 180, 0, -90] P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. N/A

spindle_ Spindle F FUnit: [250, 0, 250, 180, 0, 0 -,degree. 90] spindle_ P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Spindle [250, 0, 250, 180, -90] Port"; Linear mm; Angular Unit:

N/A N/A

After the module components of the new machine tool are idealized and the key attributes P--"Prismatic Port"; R--"Revolute Port"; F--"Fixed Port"; Linear Unit: mm; Angular Unit: degree. of the module components are collected, the next step is to define module assignment constraints. As mentioned early, the module generation method proposed in this paper is based on enumeration. There may be some layout solutions that are not feasible according to the machining functional requirements or computational efforts. Therefore, proper constraints need to be set so as to reduce or eliminate the infeasible solutions. Listed below are some typical constraints for module assignment:

· · · · · ·

Specify the modules that should be assigned to the pendant vertices; Specify a module that should be assigned to the root vertex; Specify some module components that should be connected with each other directly; Specify allowed port connecting patterns, such as Prismatic-Fixed (P-F), Revolute-Fixed (R-F), and Fixed-Fixed (F-F); Specify mobility requirements; Specify maximum number of module assignment solutions.

For the given example, the module assignment constraints are set as follows. The spindle module "spindle" is assigned to a pendant vertex. The module component "y-slide" is assigned to the root vertex. The module components "spindle" and "z-slide" are connected together directly. Only three port connecting patterns are allowed: P-F, R-F, and F-F. Other connecting patterns like P-P and R-R are not considered as they will result in mobility loss. The degree of freedom between the two pendant vertices is four. The maximum number of module assignment solutions is 100. To generate specialized layouts, a module assignment procedure is developed that consists of two steps: (1) enumerate sequences of the module components (Module Component Sequences

Machines , 5, 5 Machines 2017 5 5 2017 Machines 2017 , Machines 2017 5, 5 Machines 2017 ,, 5 ,, 5 Machines 2017 ,, 5 5 ,, 5 5 Machines 2017 , 5, 5

9 of 16 9 of of 16 16 9 16 9 of of9 16 9 9 of 16 of 16

To generate specialized layouts, a module module assignment procedure is developed developed that consists of To generate generate specialized layouts, a module module assignment procedure is developed developed that consists consists of of To generate specialized layouts, a assignment procedure is that consists generate specialized layouts, a assignment procedure is that consists To specialized layouts, a assignment procedure is that of To To generate specialized layouts, a module module assignment procedure is developed developed that consists of of two steps: (1) enumerate sequences of the module components (Module Component Sequences two steps: (1) enumerate sequences of the module components (Module Component Sequences two steps: (1) enumerate sequences of the module components (Module Component Sequences Machines 2017 , 5 , 5 9 of 16 two two steps: (1) enumerate sequences of the components (Module Component Sequences steps: (1) (1) enumerate sequences of module thethe module components (Module Component Sequences two steps: enumerate sequences of module components (Module Component Sequences Machines 2017, 5, 5 9 of 16 Enumeration); and (2) enumerate port combinations between each pair of module module components (Port Enumeration); and (2) (2) enumerate port port combinations between eacheach pair of module components (Port(Port Enumeration); and (2) enumerate combinations between pair of components Enumeration); and enumerate port combinations between each pair of module components (Port Enumeration); and (2) (2) enumerate port combinations between each pair of module module components (Port Enumeration); and enumerate port combinations between each pair of components (Port To generate specialized layouts, a module assignment procedure is developed that consists of Combinations Enumeration), as shown in 5. Figure 5. The The first step is enumerate to enumerate enumerate the connecting Combinations Enumeration), as shown shown in Figure Figure 5. The first step is to to enumerate the connecting connecting Combinations Enumeration), as in 5. The first step is to the connecting Combinations Enumeration), as shown in Figure 5. first step is to connecting Combinations Enumeration), as in The step is enumerate the Combinations Enumeration), as shown shown in Figure Figure 5. first The first step is to enumerate thethe connecting two steps: (1) enumerate sequences of the module components (Module Component Sequences sequences of the target module components. The module components can be classified into groups sequences of the target module components. The module components can be classified into groups sequences of the target module components. The module components can be classified into groups sequences of the module components. The module components can be classified into groups Enumeration); and (2) enumerate port combinations between each pair module components (Port sequences oftarget the target module components. The module components can be classified into groups sequences of the target module components. The module components can be classified into groups Enumeration); and (2) enumerate port combinations between each pair of of module components (Port according to some of the constraints to reduce the complexity of the problem. In this case, the according to some of the constraints to reduce the complexity of the problem. In this case, the according to some of the constraints to reduce the complexity of the problem. In this case, the according to some of the toin reduce the complexity of the problem. In this case, the Combinations Enumeration), as shown Figure 5. The first step to enumerate the connecting according to Enumeration), some of constraints the constraints to reduce the complexity of thethe problem. In this case, thethe according to some of the constraints to reduce the complexity of problem. In this case, Combinations as shown in Figure 5. The first step is is to enumerate the connecting module components are classified into: pendant module components, module components within module components are classified into:into: pendant module components, module components within module components are classified pendant module components, module components within module classified into: pendant module components, module components within module components are classified into: pendant module components, module components within sequences of the target module components. The components can classified into groups module components areare classified into: pendant module components, module components within sequences ofcomponents the target module components. The module components can be be classified into groups the same module, and other module components. After module component classification, module the same module, and other module components. After module component classification, module the same module, and other module components. After module component classification, module the same module, and other module components. After module component classification, according to some of the constraints to components. reduce the complexity of the component problem. In this case, according to some of the constraints to reduce the complexity ofmodule the problem. In this case, the the module the same module, and other module After classification, module the same module, and other module components. After module component classification, module module sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms module components are classified into: pendant module components, module components within sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms components are classified into: pendant module components, module components within the same sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms available. In this paper, we use the sorting function provided in MATLAB. MATLAB. The second step is to to available. In other this paper, we use the sorting function provided in MATLAB. MATLAB. Themodule second step step is to to available. In this paper, we use the sorting function provided in The second is theavailable. same module, and other module components. After module component classification, module available. In this we use the sorting function provided in The second step is module, and module components. After module component classification, sequence available. In paper, this paper, we use the sorting function provided in MATLAB. MATLAB. The second step is to to In this paper, we use the sorting function provided in The second step is sequence solutions are generated by applying sorting algorithms. There are many sorting algorithms enumerate the port combinations between each pair of the neighboring module components. enumerate the port combinations between each pair of the neighboring module components. enumerate the port combinations between each pair of the neighboring module components. enumerate the port combinations between each each pair of pair the neighboring module components. solutions are generated by applying sorting algorithms. There are many sorting algorithms available. enumerate thethe port combinations between pair of of the neighboring module components. enumerate port combinations between each the neighboring module components. available. In this paper, we use themay sorting function provided in MATLAB. The second step is to Changing the port combination may result in mobility loss. Therefore, mobility check is performed Changing the port combination may result in mobility loss. Therefore, mobility check is performed Changing the port combination result in mobility loss. Therefore, mobility check is performed Changing the port combination may result in mobility loss. Therefore, mobility check is performed Changing the port combination may result in mobility loss. Therefore, mobility check is performed In this paper, we use the sorting function provided in MATLAB. The second step ischeck to enumerate Changing the port combination may result in mobility loss. Therefore, mobility is performed enumerate the port combinations between each pair ofassignment the neighboring module components. to screen out those infeasible solutions. The module assignment produces a total of 15 solutions as to screen out those infeasible solutions. The module assignment produces a total of 15 solutions as as to screen out those infeasible solutions. The module produces a total of 15 solutions to screen out those infeasible solutions. The module assignment produces a total of total 15of solutions as the port combinations between each pair of the neighboring module components. port to screen outport those infeasible solutions. The module assignment produces a Changing total 15 solutions as as to screen those infeasible solutions. The module assignment produces ofthe 15 solutions Changing the out combination may result in mobility loss. Therefore, mobility check a is performed listed in Table 6. listed in Table 6. listed in Table 6. listed in Table 6.Table combination result listed in may Table 6. 6. in mobility loss. Therefore, mobility check is performed to screen out those listed in
to screen out those infeasible solutions. The module assignment produces a total of 15 solutions as

infeasible listedsolutions. in Table 6. The module assignment produces a total of 15 solutions as listed in Table 6.

Module Component Module Component Module Component Module Component Module Component Module Component Sequences Enumeration Sequences Enumeration Sequences Enumeration Sequences Enumeration Sequences Enumeration Sequences Enumeration Module Component
Sequences Enumeration

Port Combinations PortPort Combinations Combinations Port Combinations Port Combinations Port Combinations Enumeration Enumeration Enumeration Enumeration Enumeration PortEnumeration Combinations
Enumeration

Generalized Module Generalized Module Generalized Module Generalized Module Generalized Module Generalized Module Generalized Module Generalized Module Layouts Layouts Layouts Layouts Layouts Layouts Layouts
Layouts

Intermediate Module Intermediate Module Intermediate Module Intermediate Module Intermediate Module Intermediate Module Intermediate Module Intermediate Module Layouts Layouts Layouts Layouts Layouts Layouts Layouts
Layouts

Layouts Specialized Module Layouts Layouts Layouts Layouts Layouts Layouts Layouts

Specialized Module Specialized Module Specialized Module Specialized Module Specialized Module Specialized Module Specialized Module

Generalized Layouts Intermediate Layouts Generalized Layouts Intermediate Layouts Generalized Layouts Intermediate Layouts
(1)

Figure Flowchartsof ofthe the module module assignment approach. Figure 5. 5. Flowcharts assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Figure 5. Flowcharts of the module assignment approach. Table 6. Results of module assignment. Table 6. Results of module assignment. Table 6.of Results of assignment. module assignment. Table 6.Table Results of module assignment. Table 6. of assignment. Table 6. Results Results of module module assignment. 6. Results module Table 6. Results of module assignment. 6. Results of module assignment. Generalized Layouts Table Intermediate Layouts Specialized Layouts Generalized Layouts Intermediate Layouts Specialized Layouts Generalized Layouts Intermediate Layouts Specialized Layouts Generalized Layouts Intermediate Layouts Specialized Layouts Generalized Layouts Intermediate Layouts Specialized Layouts

Specialized Layouts Specialized Layouts Specialized Layouts
(2)

(1) (2) (2) (1) (1) (2) (2) (1) (1) (1) (2) (2)
(3) (4) (5)

(3) (4) (4) (5) (5) (3) (3) (4) (4) (5) (5) (3) (3) (3) (4) (4) (5) (5)
(6) (7)

(6) (6) (7) (7) (6) (7) (7) (6) (6) (6) (7) (7)

Machines 2017, 5, 5

10 of 16

Table 6. Cont.
Machines 2017 ,5 5, , 55, 5 Machines 2017 Machines 2017,2017 5, 5 5 Machines , Machines 2017 5 Machines 2017 Machines , 5, , ,5 55, 5 Machines 2017, , 2017 5, ,5

Generalized Layouts

Intermediate Layouts

Specialized Layouts

10 16 1016 of 16 16 10 of 10 16 of 10 16 10 of of 16 10 of of 10 16 of

Machines 2017, 5, 5

(8) (9) (9) (8) (8) (9) (9) (8) (8)(8) (9)(9) (8) (8) (9) (9)

10 of 16

(8) (10) (10) (9) (10)(11) (11) (12) (12) (11) (11) (12) (12) (10) (10) (11) (12) (10) (11) (12) (10) (10) (11) (11) (12) (12)

(10)

(11)

(12)

(13) (14) (14) (15) (15) (13) (13) (14) (14) (15) (15) (13) (13) (14) (15) (13) (14) (15) (13) (13) (14) (14) (15) (15) 4.3. Layout Evaluation 4.3. Layout Evaluation 4.3. Layout Layout Evaluation 4.3. Layout Evaluation 4.3. Evaluation 4.3. Layout Evaluation 4.3. Layout Evaluation 4.3. Layout 4.3. Evaluation (13) (14) (15) Layout evaluation is to find a best solution from the aforementioned 15 15 solutions. Three indices Layout evaluation is to find a best solution from the aforementioned solutions. Three indices Layout evaluation is to find a best solution from the aforementioned 15 solutions. Three indices Layout evaluation to find a solution from the aforementioned 15 solutions. Three indices Layout evaluation is to find a best solution from the aforementioned 15 solutions. Three indices Layout evaluation is to find a best solution from the aforementioned solutions. Three indices Layout evaluation is to find a best best solution from the aforementioned 15 15 solutions. Three indices Layout evaluation is to tois find a best best solution from the aforementioned 15 solutions. solutions. Three indices Layout evaluation is find a solution from the aforementioned 15 Three indices are used for this purpose. are used for this purpose. are used for this purpose. are used for this purpose. 4.3. Layout Evaluation are used for this purpose. are used for this purpose. are used for this purpose. are used for this purpose. are used for this purpose. 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis Reconfigurability 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis 4.3.1. Reconfigurability Analysis are used for this purpose. First, reconfigurability analysis is to measure easily a machine machine layout can be be reconfigured. First, reconfigurability analysis is to to measure measure how easily a machine machine layout can reconfigured. First, reconfigurability analysis is tois measure howhow easily a machine layout can can be reconfigured. First, reconfigurability analysis to measure easily a layout be reconfigured. reconfigurability is measure how easily a machine layout can reconfigured. First, reconfigurability analysis is how easily a layout can reconfigured. First, reconfigurability analysis reconfigured. First, reconfigurability analysis to measure how easily a machine layout can be be reconfigured. First, reconfigurability analysis is to tois measure howhow easily a machine layout can be be reconfigured. 4.3.1. Reconfigurability Analysis The reconfigurability index is put forward as follows: The reconfigurability index is put forward as follows: The reconfigurability index is put forward as follows: The reconfigurability index is put forward as follows: The reconfigurability index is put forward as follows: The reconfigurability index is put forward follows: The index is put as The reconfigurability index isforward put forward as as follows: The reconfigurability reconfigurability index is put forward asfollows: follows: First, reconfigurability analysis is to measure how easily a machine layout can be reconfigured. 1 1 1 1 1 1 1 Rk R  1k  R  The reconfigurability index is put forward as follows: Rk  R d d R  d k R  d k k k RR = , (1) (1) d d k d d (1)(1) kk d (1) d (1) N bN (1)(1) Nb N  (1) N  N b 1 N b  N b b b  N b  b  1 b b R  b 1 b 1 b 1 ,
b  1to change where N b is the the number of steps required from configuration 1 to to configuration b;;is d the is the the where Nb b is the number of steps steps required to change change from configuration 1 to 1 configuration b; d d is the , where N b is the number of steps required to change from configuration to configuration b d where N the bnumber of required to from configuration 1 configuration b the where b is number steps required to change from configuration 1 configuration b d is where N bN is the number of of steps required to change from configuration to configuration b; ;d d is the where N is the number ofsteps steps required change from configuration 11 to configuration ; is where b is is the number of required toto change from configuration 1 to to configuration b; ; dbis is the b total number of configurations required; and k means the k th layout solution. We choose the first total number of configurations required; and k means the k th layout solution. We choose the first total number of configurations required; and k means the k th layout solution. We choose the first total number of configurations required; and k the k layout solution. We the first total number of configurations required; k the th layout solution. We the total number of configurations required; and kconfiguration means k1 th solution. choose the first total number of configurations configurations required; and k means means the kth th layout solution. We choose the first where N b is the of steps required to and change from tolayout configuration ;We d We ischoose the the total number of required; choose the total number of number configurations required; and k means means the k k ththe layout solution. Webchoose choose the first first layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index layout solution as an example. Figure 6 demonstrates the calculation of the reconfigurability index total number of configurations required; means thethe kth calculation layout solution. We choose the first index layout solution as an Figure 6k demonstrates the calculation ofof the reconfigurability index first layout solution as an example. example. Figure 6 demonstrates the calculation the reconfigurability layout solution as an example. Figure 6and demonstrates of the reconfigurability forfor the first layout solution. A total total of of five adding/removing steps are required to index change from the for the first layout solution. A total of five adding/removing steps are required to change from the for the first layout solution. A total total of five adding/removing steps are required to change from the for the first layout solution. A of adding/removing steps are required to change from the layout solution as an example. 6total demonstrates the calculation of the reconfigurability for the first layout solution. A of five adding/removing steps are required to from the the first layout solution. five adding/removing steps are required to change from the for the first layout solution. A total of five adding/removing steps are required change from the index for the first layout solution. AA total of five five adding/removing steps are to change from for the first layout solution. A Figure total of five adding/removing steps are required to change change from the initial configuration to the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The initial configuration to the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The initial configuration to the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The for the first layout solution. A the total of five adding/removing steps are required to change from the initial configuration to the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The initial configuration to last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. initial configuration to last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The initial configuration tothe the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The the initial configuration to last configuration. Therefore, the reconfigurability index is 1/5 =The 0.2. initial configuration to the the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The complete result of reconfigurability analysis is listed in Table 7 for all 15 solutions. initial configuration to the last configuration. Therefore, the reconfigurability index is 1/5 = 0.2. The complete result of reconfigurability analysis is listed in Table 7 for all 15 solutions. complete result of reconfigurability analysis is listed in Table 7 for all 15 solutions. complete result of reconfigurability analysis is listed in Table 7 for all 15 solutions. complete result of reconfigurability analysis is Table 7 for solutions. complete result of reconfigurability analysis isin listed in Table 7 15 for all 15 solutions. result of reconfigurability reconfigurability analysis is listed listed in Table Table for all 15solutions. solutions. The complete result of analysis is in 77all for all 15 complete result of reconfigurability analysis is listed listed in Table 7 for all 15 solutions.

Layout evaluation is to find a best solution from the aforementioned 15 solutions. Three indices

, (1) N where Nb is the number of steps required to change from configuration 1 to configuration b; d is the
b

k

d

1 bb = 1

b 1

b 1 1 b 1 b

,,

, ,,

complete result of reconfigurability analysis is listed in Table 7 for all 15 solutions.
Initial Configuration Configuration 1 Configuration 2

Initial Configuration Configuration 1 Configuration Configuration 2 2 Initial Configuration Configuration 1 Configuration Configuration Initial Configuration Configuration 1 Configuration 2 Initial Configuration Configuration 1 2 Initial Configuration Configuration 1 2 Initial Configuration Configuration 1 Configuration Initial Configuration Configuration 1 Configuration Configuration 2 2 Initial Configuration Configuration 1 2

Configuration 3

Configuration 3 3 Configuration Configuration 3 Configuration 3 Configuration 3 Configuration Configuration 3 3 Configuration 3

=1 N1=1 =1 N =1 N 1=1 N1 N 1=1 N N N1 =1 1 N1 1=1 1 1

N2=1 =1 N2=1 =1 N2=1 =1 N N2N =1 N N2 =1 2 2 2 N2=1
2

N3=3

N3=3 =3 N3=3 =3 N3=3 =3 N N N N3 =3 3 N3 3=3 3 3

Reconfigurability Index: Reconfigurability Index: Reconfigurability Index: Reconfigurability Index: Reconfigurability Index: Reconfigurability Index: R1=1/(N Reconfigurability Index: 1+N2+N3)=0.2 Reconfigurability Index: R =1/(N +N +N )=0.2 R =1/(N +N +N )=0.2 R =1/(N +N +N )=0.2 1 1 2 3 1=1/(N 1 2 3)=0.2 R =1/(N +N +N )=0.2 1=1/(N 1+N 2+N 31 R )=0.2 R +N +N 1 1 2 3 R =1/(N +N +N )=0.2 1 1 1 2 3 1 2 3 1 2 3 R =1/(N 1 +N +N 1 )=0.2 2 3
1 1 2 3

Reconfigurability Index:

Figure 6. An example of the reconfigurability analysis of a layout.
Figure 6. An example of the reconfigurability analysis of a layout.

Figure 6.example An example ofreconfigurability the reconfigurability analysis of a a layout. Figure 6. An An example of the the reconfigurability analysis of a layout. layout. Figure 6. An example of the reconfigurability analysis of a layout. layout. Figure 6. An example of the reconfigurability analysis of layout. Figure 6. An of analysis of Figure 6. example of reconfigurability analysis of a Figure 6.example An example ofreconfigurability the reconfigurability analysis of a layout. Figure 6. An of the the analysis of a a layout.

Machines 2017, 5, 5
Machines 2017, 5, 5 Machines , Machines 2017 2017, ,5 5 ,5 5 Machines 2017, ,5 5, ,5 5 Machines 2017 Machines , Machines 2017 2017, ,5 5 ,5 5 Machines 2017, ,5 5, ,5 5 Machines 2017 Machines 2017 , 5 , 5 Machines 2017 ,5 ,5 Machines 2017, 5 ,5 11 11 of of 16 16 11 11 of of 16 16 11 of 11 of 16 16

11 of 16
11 of 16 11 of of 16 16 11 11 of of 16 16 11 11 of 16

S/N S/N S/N

CAD Model N Model R S/N CAD CAD Model S/N S/N CAD N R S/N CAD Model Model S/N CAD CAD N Model R S/N S/N N R S/N CAD CAD Model Model N Model R 1 1 5 5 0.2000 0.2000 11 5 1 1 1 5 1 5 0.2000 0.2000 1 1 5 0.2000 1 1 5 0.2000 2 2 22 2 2 2 3 3 3 3 4 4 4 4 5 5 5 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 5 5 5 5 5 6 6 6 6 6 7 7 7 7 7 8 8 8 8 8

Table 7. analysis. Table 7. 7. Results Results of reconfigurability reconfigurability analysis. Table of analysis. Table 7. Results Results of of reconfigurability reconfigurability analysis. Table 7. Results of reconfigurability analysis. Table of reconfigurability analysis. Table 7. 7. Results Results of reconfigurability analysis. Table 7. Results of reconfigurability analysis. Table 7. Results of reconfigurability analysis. Table 7. Results of reconfigurability analysis. Table 7. Results of reconfigurability analysis. Table CAD 7. Results analysis. CAD S/N Model N of R S/N CAD Model N R S/N CAD CAD Model N Model R reconfigurability S/N CAD Model N Model R

Table 7. Results of reconfigurability analysis.

S/N R CAD Model N Model R N R S/N CAD CAD Model N S/N S/N CAD Model N R N S/N R CAD Model S/N CAD CAD N Model R N S/N CAD S/N N R S/N R CAD Model Model N Model R 5 0.2000 9 9 0.2000 9 9 7 0.1429 0.1429 0.2000 9 7 59 5 9 7 7 0.1429 0.1429 5 9 0.2000 0.2000 9 7 0.1429 59 0.2000 9 9 7 0.1429 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1111 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429 0.1429

N N N R R N R N R N R

R

7 7 70.1429 0.1429 0.1429 7 7 0.1429 0.1429 7 0.1429 9 9 90.1111 0.1111 0.1111 9 9 0.1111 0.1111 9 0.1111 9 9 90.1111 0.1111 0.1111 9 0.1111 9 0.1111 9 0.1111 9 9 0.1111 0.1111 9 9 90.1111 0.1111 0.1111 9 0.1111 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 70.1429 0.1429 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 70.1429 0.1429 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 7 0.1429 0.1429

5 10 5 10 5 5 0.2000 0.2000 0.2000 10 0.2000 510 0.2000 10 10 5 0.2000 5 0.2000 5 0.2000 510 0.2000 10 10 5 0.2000 5 10 0.2000 10 5 0.2000 10 11 7 11 7 0.1429 0.1429 7 11 0.1429 711 0.1429 11 11 7 11 7 7 70.1429 0.1429 0.1429 11 0.1429 7 0.1429 11 7 7 0.1429 0.1429 711 11 0.1429 11 7 12 7 0.1429 0.1429 7 12 0.1429 712 0.1429 12 12 7 0.1429 7 7 70.1429 0.1429 0.1429 712 0.1429 1212 12 7 7 0.1429 12 7 0.1429 12 0.1429 12 7 7 0.1429 0.1429 7 7 70.1429 0.1429 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 7 70.1429 0.1429 7 0.1429 7 0.1429 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 7 70.1429 0.1429 7 0.1429 0.1429 7 7 7 0.1429 0.1429 7 0.1429 7 7 0.1429 7 13 0.1429 713 0.1429 7 0.1429 13 13 13 13

33 3

44 4

5 55 5

13 0.1429 13 713 0.1429 713 0.1429 13 13 7 14 14 0.1429 714 0.1429 14 14 7 0.1429 14 7 0.1429 1414 14 0.1429 714 0.1429 14 14 7 15 15 0.1429 715 0.1429 15 15 7 0.1429 715 0.1429 15 15 7 15 0.1429 15 0.1429 1515 7 7 0.1429 0.1429 7 7 0.1429 0.1429 7 0.1429 0.1429

6 6 6 6 66 6 7 7 7 7 7 77 8 8 8 8 8 88

4.3.2. Structural Stiffness 4.3.2. Structural Structural Stiffness Analysis 4.3.2. Stiffness Analysis 4.3.2. Structural Stiffness Analysis Analysis 4.3.2. Structural Stiffness 4.3.2. Stiffness Analysis 4.3.2. Structural Structural Stiffness Analysis 4.3.2. Structural Stiffness Analysis Analysis 4.3.2. Structural Stiffness Analysis 4.3.2. Structural Stiffness Analysis 4.3.2.Second, Structural Stiffness Analysis Second, structural stiffness analysis is to how strong layout can be Second, structural stiffness analysis is to to measure how strong a a layout cana be for the the generated structural stiffness analysis is measure how strong layout can be for generated Second, structural stiffness analysis ishow to measure measure how strong a layout can be for for the the generated generated 4.3.2. Structural Stiffness Analysis Second, structural stiffness is to how strong layout can be Second, structural stiffness analysis is to measure strong layout can be for generated Second, structural stiffness analysis is toanalysis measure strong a a layout can a be for the the generated Second, structural stiffness analysis ishow to measure measure how strong a layout can be for for the the generated generated MRMT. The stiffness matrix is expressed as MRMT. The stiffness matrix is expressed as Second, structural stiffness analysis is to measure how strong a layout can be for the generated Second, structural stiffness analysis is to measure how strong a layout can be for the generated MRMT. The MRMT. stiffness matrix is expressed asexpressed MRMT. The stiffness matrix expressed as Second, structural stiffness analysis is to measure how strong a layout can be for the generated The stiffness matrix is as MRMT. stiffness matrix is expressed as MRMT. The The stiffness matrix is expressed as MRMT. The stiffness matrix is expressed as Second, structural stiffness analysis is to measure how strong a layout can be for the generated stiffness matrix is expressed MRMT. stiffness matrix is as 1 jT 1 jT j 1 1 as  1 MRMT. The The MRMT. stiffnessThe matrix is expressed expressed as j1 1J jT ) 1 K  ( J jjK  Kjjjj  ( (J Jjjjj K K J jT ) (2) j 1  ( J j K 1 J jT )1 (2) K ) K 1 JjT (2) (2)  MRMT. The stiffness matrix is expressed as j1 j jT  1  1, , j  (J jK  jT K  ( J K J ) 1 1J jT  1 K ) , ( Jjj K (2) j 1 jT ) 1 1 JjT 1 1, (2) K jj  ( J jjK  J jTK ) j (2) (2) ,, 1 1 J jT 1 , K  ( J K ) , K  ( J K J ) (2) (2) K  (J K J ) , (2) , , K where is the local stiffness matrix of the module, and J is Jacobian. Since there are translational K is where K is the the local stiffness matrix of the the module, and J- is Jacobian. Since there are are translational - 1 J Since where local stiffness matrix of module, and J is Jacobian. there translational Kstiffness where is the the local local stiffness matrix of the the module, and is Jacobian. Jacobian. Since there are are translational translational 1 Jacobian. K jT and jof where is stiffness matrix module, J is Since there K where local matrix of the module, and J there are translational K is where is the the local matrix of a the module, and J is is J Jacobian. Since there are translational Kstiffness where iseach the local stiffness matrix of the module, and J Since is Jacobian. Since there are of translational K )measure ,order (2) K = ( J jorder and revolute modules, each layout has a workspace. In to measure the stiffness the and revolute modules, layout has workspace. In order to measure the stiffness of the layout K where is the local stiffness matrix of the module, and J is Jacobian. Since there are translational and revolute modules, each layout has a workspace. In to the stiffness of the layout K where is the local stiffness matrix of the module, and J is Jacobian. Since there are translational and revolute modules, each layout has a workspace. In order to measure the stiffness of the layout layout K is the where local stiffness matrix ofathe module, and J is Jacobian. Since there arethe translational and revolute modules, each layout has a workspace. In order to measure stiffness of the layout and revolute modules, each layout has workspace. In order to measure the stiffness of the layout and revolute modules, each layout has a workspace. In order to measure the stiffness of the layout and revolute modules, each layout has a workspace. In order to measure the stiffness of the layout over the workspace, the following stiffness index is introduced over the workspace, workspace, the following stiffness index is introduced introduced and modules, each layout has a workspace. order to measure stiffness of layout over the the following stiffness index is and revolute modules, each has a In workspace. In order the to measure stiffness of the layout over thethe workspace, the following stiffness index is introduced and revolute revolute modules, each layout has alayout workspace. In orderis to measure the stiffness the of the the layout over the workspace, the following stiffness index introduced over the following stiffness index is over the workspace, workspace, the following stiffness index is introduced introduced over the workspace, the following stiffness index is J introduced where K over is the local stiffness matrix of the module, and is Jacobian. Since there are translational and over the workspace, the following stiffness index is introduced N the workspace, the following stiffness index is introduced N over the workspace, the following stiffness index is introduced 1 N N 1 j 1 N 1 N (tr( K jj )) j   1 (tr tr( ( K ))order N revolute modules, each layout has a  workspace. to measure the stiffness of the layout over the 1 N (tr N ( (3) j ))  K )) In  (K j (3) 1  N ( 1  N ( jj (3) (3) N N  N   tr ( K )) j  1 tr( K j ))  1 jN 1 1 (tr( K  N )) N  1 (3) N  jj (3) j  1 is j 1 (tr( Kjj )) ,  (3) , (3)   ( tr ( K )) N workspace, the following stiffness index introduced j  1 ,   ( tr ( K )) ,   j  1 N (3) jj (3) 1  ,, 1 1 (tr( K )) N , (3) N , jjj 1 N 1 N jj 1 ,, 1 and points, , indicates where N represents the total number of sampling and tr () indicates the matrix trace where N represents the total number of sampling points, tr () the matrix trace where N represents the total number of number samplingof points, and points, tr() indicates the matrix trace where N N the represents the total total number of sampling points, and tr tr() () indicates the matrix matrix trace trace N where represents the sampling and indicates the where N represents total number of sampling points, and tr () indicates the matrix trace where N represents where N the represents total number the total of sampling number of points, sampling and points, tr () indicates and tr() () the indicates matrix trace the By matrix trace 1 opreation. The index measures the average stiffness of a layout over the workspace. assuming  j over opreation. The index measures the average stiffness of a layout the workspace. By assuming  where N represents where N the represents total number the total of sampling number of points, sampling and points, tr () indicates and tr the indicates matrix trace the matrix trace opreation. The index measures the average stiffness of a layout over the workspace. By assuming  opreation. The index measures the average stiffness of a layout over the workspace. By assuming  where N represents the total number of sampling points, and tr () indicates the matrix trace ( tr ( K )) , (3) µ = opreation. The index measures the average stiffness of a layout over the workspace. By assuming   opreation. The index measures the average stiffness of a layout over the workspace. By assuming  opreation. The opreation. index The measures index the measures average stiffness the average of a stiffness layout over of a the layout workspace. over the By workspace. assuming By assuming   5 N of 5 that all the local compliance are equal to 10 ,, and picking sampling points in the opreation. The opreation. index The measures index the measures average stiffness theto average a stiffness layout over of afive the layout workspace. overfive the By workspace. assuming By assuming   that all all the the local compliance indices are indices equal to 10 ,=and and picking five sampling points in the 5 5 j 1 that local compliance indices are equal 10 , picking sampling points in the opreation. The index measures the average stiffness of a layout over the workspace. By assuming  that all the local compliance indices are equal to 10 and picking five sampling points in the 5, and picking five sampling points in the 5 that all the local compliance indices to 10 5 that all local compliance indices are to 10 , and picking five sampling points in 5 and 5equal that all the the the local compliance indices are equal equal toare 10 , and picking five sampling points in the the that all the local compliance indices are equal to 10 picking five sampling points in the 5, 8 workspace, result of structural stiffness analysis is listed in Table 8 all 15 A 5 workspace, result of the structural stiffness analysis is listed into Table for all 15 solutions. solutions. Asolutions. similar 5 that local compliance indices are equal to 10 ,analysis picking five sampling in 5 workspace, the result of structural stiffness analysis is listed in Table for all 15 A similar that all the local compliance are equal 10 ,8 and picking five sampling points in the workspace, the result of structural stiffness is listed in Table 8 for forpoints all 15 solutions. A similar similar that all all the thethe local compliance indices are indices equal to 10 , and and picking five sampling points in the the workspace, the result of structural stiffness analysis is listed in Table 8 for all 15 solutions. A similar workspace, result of structural stiffness analysis is listed in Table 8 for all 15 solutions. A similar workspace, the result of structural stiffness analysis is listed in Table 8 for all 15 solutions. A similar workspace, the result of structural stiffness analysis is listed in Table 8 for all 15 solutions. A similar idea was presented in [29] for multitasking machines. Generally, the system stiffness should fall where Nthe represents theresult total number of sampling points, and tr () indicates the matrix trace opreation. idea was presented presented in [29] for multitasking machines. Generally, the system stiffness should fall workspace, result of structural stiffness is in 8 15 solutions. A similar idea was in [29] for multitasking machines. Generally, the system stiffness fall workspace, the of structural stiffness analysis is listed inall Table 8 for allshould 15 solutions. A similar idea was presented in [29] foranalysis multitasking machines. Generally, the system stiffness should fall workspace, the result of structural stiffness analysis is listed listed in Table Table 8 for for all 15stiffness solutions. Astiffness similar idea was presented in [29] for multitasking machines. Generally, the system should fall idea was presented in [29] for multitasking machines. Generally, the system should fall idea was presented in [29] for multitasking machines. Generally, the system stiffness should fall idea was presented in [29] for multitasking machines. Generally, the system stiffness should fall under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It The index µ measures the average stiffness of a layout over the workspace. By assuming that all the idea was presented in [29] for multitasking machines. Generally, the system stiffness should fall under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It idea was presented in [29] for multitasking machines. Generally, the system stiffness should fall under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It idea was presented in standard [29] for multitasking machines. Generally, the on system stiffness should fall under the value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It under the standard value of machine tools, i.e., >0.1N/nm, depending the required accuracy. It under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It 5 can be seen from Table 8 that solution 5 has the highest stiffness. can be seen from Table 8 that solution 5 has the highest stiffness. under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It local compliance indices are equal to 10 , and picking five sampling points in the workspace, the result can be seen from Table 8 that solution 5 has the highest stiffness. under the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It can be seen from Table 8 that solution 5 has the highest stiffness. under seen the standard value of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It can be seen Table 8 that solution 5 has the highest stiffness. can Table 8 that 5 the stiffness. can be be seen from from Table 8from that solution solution 5 has has the highest highest stiffness. can be seen from Table 8 that solution 5 has the highest stiffness. can be seen Table that solution 5 has the highest can be seen8 from Table 8 is that solution 5 hasstiffness. the highest of structural stiffness analysis in Table 8 for all 15stiffness. solutions. A similar idea was presented can be seen from from Table 8 that solution 5 listed has the highest stiffness.

in [29] for multitasking machines. Generally, the system stiffness should fall under the standard value

Machines 2017, 5, 5

12 of 16

of machine tools, i.e., >0.1N/nm, depending on the required accuracy. It can be seen from Table 8 that solution 5 has the highest stiffness.
Machines 2017, 5, 5 2017, 5, 5 Machines 2017, 5, 5 Machines Machines 2017 2017, 5 5, 5 5 Machines 2017, 5, 5 Machines Machines 2017, , 5, ,5 Machines 2017 2017, ,5 5, ,5 5 Machines Machines 2017 2017,, 5 5,, 5 5 Machines Machines 2017, 5, 5

S/N

1

S/N S/N S/N S/N S/N S/N 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7 8 8 8 8 8 8

Table 8. 8. Results Results of ofTable structural stiffness analysis. stiffness analysis. 8. Results of structural Table structural stiffness analysis. Table 8. Results of structural stiffness analysis. Table 8. of stiffness Table 8. Results of structural stiffness analysis. Table 8. Results Results of structural structural stiffness analysis. analysis. Table 8. Results of structural stiffness analysis. Table 8. Results of structural stiffness Table 8. Results of structural stiffness analysis. Table 8. Results of structural stiffness analysis. CAD Model µ (N/nm) S/N CAD analysis. Model µ (N/nm) Table 8. Results of structural analysis. CAD Model  CAD (N/nm) S/N stiffness CAD Model  CAD (N/nm) S/N Model  CAD (N/nm) S/N  Model  (N/nm) CAD Model  (N/nm) S/N Model (N/nm) S/N CAD Model  (N/nm) S/N CAD Model  (N/nm) CAD Model  (N/nm) S/N CAD Model  (N/nm)

Table 8. Results of structural stiffness analysis.

12 of 16 12 of 16 12 of 16 12 of of 16 12 12 of 16 16

12 of 16 12 of of 16 12 12 of 16 16 12 of of 16 16 12

S/N Model (N/nm) S/N Model CAD Model Model  CAD (N/nm) S/N  CAD Model  CAD (N/nm) S/N  Model (N/nm) S/N  Model   (N/nm) (N/nm) CAD (N/nm) S/N Model (N/nm) CAD Model  CAD (N/nm) S/N  CAD CAD Model  CAD (N/nm) 0.0710 9 1.5642 1 0.0710 9 1.5642 0.0710 9 9 1.5642 0.0710 1.5642 1 0.0710 9 1.5642 0.0710 9 1.5642 1 0.0710 9 1.5642 0.0710 9 1.5642 0.0710 9 1.5642 1 0.0710 9 1.5642 0.0710 9 1.5642 2 2 2 2 3 3 3 3 0.5593 0.5593 0.5593 0.5593 0.5593 0.5593 0.5593 0.0765 0.0765 0.0765 0.0765 0.0765 0.0765 0.0765 0.0671 0.0671 0.0671 0.0671 0.0671 0.0671 0.0671 2.4138 2.4138 2.4138 2.4138 2.4138 2.4138 2.4138 0.0458 0.0458 0.0458 0.0458 0.0458 0.0458 0.0458 0.0265 0.0265 0.0265 0.0265 0.0265 0.0265 0.0265 0.0521 0.0521 0.0521 0.0521 0.0521 0.0521 0.0521 10 10 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 12 13 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 0.5593 0.5593 10 0.5593 0.5593 0.0765 0.0765 11 0.0765 0.0765 10 10 10 10 11 11 11 11 0.0216 0.0216 0.0216 0.0216 0.0216 0.0216 0.0413 0.0413 0.0413 0.0413 0.0413 0.0413 0.0611 0.0611 0.0611 0.0611 0.0611 0.0611 0.0201 0.0201 0.0201 0.0201 0.0201 0.0201 0.0349 0.0349 0.0349 0.0349 0.0349 0.0349 0.4845 0.4845 0.4845 0.4845 0.4845 0.4845 0.0216 0.0216 0.0216 0.0216 0.0216 0.0413 0.0413 0.0413 0.0413 0.0413

2

3

4

4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 8 8

0.0671 0.0671 12 0.0671 0.0671 2.4138 2.4138 2.4138 13 2.4138 0.0458 0.0458 0.0458 14 0.0458 0.0265 0.0265 0.0265 0.0265 15 0.0521 0.0521 0.0521 0.0521

12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15

0.0611 0.0611 0.0611 0.0611 0.0611 0.0201 0.0201 0.0201 0.0201 0.0201 0.0349 0.0349 0.0349 0.0349 0.0349 0.4845 0.4845 0.4845 0.4845 0.4845

5

6

7

8

4.3.3. Error Error Sensitivity Sensitivity Analysis 4.3.3. Error Sensitivity 4.3.3. Analysis 4.3.3. Analysis Error Sensitivity Analysis Analysis 4.3.3. Error Sensitivity 4.3.3. Error Sensitivity Analysis 4.3.3. Error Sensitivity Analysis 4.3.3. Error Sensitivity Analysis 4.3.3. Error Sensitivity Analysis 4.3.3.The Error Sensitivity Analysis The purpose of error error sensitivity analysis is to to assess assess the effect effect of the module module error to the the tool tip tip The purpose of analysis error sensitivity analysis is to of assess the effect of the module error to the tool tip purpose of sensitivity is the the error to tool 4.3.3. Error Sensitivity Analysis The purpose of error sensitivity analysis is assess the of module error The purpose of sensitivity analysis is assess the effect the error to tool The purpose oferrors error sensitivity analysis is to toof assess the effect effect of the the module error to to the the tool tool tip tip The purpose of error error sensitivity analysis is to to assess theis effect of the module module error to the the tool tip tip error. The relationship between two is given as error. The relationship between two errors given as The purpose of error sensitivity analysis is to assess the effect of the module error to the tool tip The purpose of error sensitivity analysis is to assess the effect of the module error to the tool tip error. The relationship between two errors errors is given given aserrors The purpose of error sensitivity analysis is to assess the effect of the module error to the tool tip error. The relationship between two is given as error. The relationship between two is as error. The relationship between two errors is given as error. The relationship between two errors is given as The purpose of The error sensitivity analysis is to assess the effect of the module error to the tool tip error. between two is given aserrors error. relationship between two is given as j j error. The The relationship relationship between two errors errors   j  is given as   j j  jx     q q1  x      j j  j error. The relationship between two errors is given as x   j  x   q q1    x   j   jjx  j 1 x 1 j  q      1  x    q 1 x     x   1 j    j 1  x    q   1 jjx  x j    1    q y   y x   q 1    1 2 2 j 1   q q2 x  1  1 y  j y j  y  q    j 1   2 1 j y   j     2 j    q y 2 j   j j y j j     1    q 2 1 1 y j y 2          2  y   j 2  1 j  0   j  q   0 j y      q 2  1 j y j  j q2 2 3 B  q2  3 q   jjB  B z 1 1 j     1 x  1 0 jjy 0 y  j     1 j jz 3 j J 2 j  1 11J j j  3 j   z j    B z     q    j   3  0 j (4)    q j B (4)   z 3  0 j  j  B     Jjjjjz z j  jj 3 jB j j B  q      z 3 q  1  q J j  0 (4)     3  (4) : J  B  3 j  : z 0 I B  q 0 I z  0 j  3  x    0 j B    x     J j z     3      j B 3       3 z 3 j   j : (4)   q  J B 3   0 I  0 jz B   (4) 2 zj   x y  j  :   j 0 I 3    : 3   B    J     0 I z 3   (4)  x j  J     j  - 1    : 3 0 I (4) j  x   3 (4)  J    :  x  j     0 I 3     j j     j :   (4) 3 x x  0   y 3  0 j   I xj0   q3  I 33 3   ::   jj       y j  3 :  3  0 I j   j   x           y jz 3   B   ::     j   J  .: (4)      j    y yjjjj  j  = :n q q y y :       n    :    jjj    y z :n 0 I j z y q q          x j 3   j      y   n      z j   z  q   n j      q .  z jj qn n  .  n .   j  j       n .   n j qn  zj           z z n qn .        ..  :    yjj       qn n  z z   .   . .
j j j j j ,  j j j , and  j represent j represent  In the the above above equation, equation, the angular displacements ofdisplacements the tool tool tip tip in in of   In above equation, , and the j j j , jx , jz x jy , and  z  j j In represent the angular displacements of the    j In the the above equation, ,  the angular angular displacements of the the tool tool tip tip in in y j j j jrepresent j represent j , and j ,  j x x z y j , and  x z y j j j In the above equation, the angular displacements of the tool tip in z j j represent y   In the above equation, , , and the angular displacements of the tool tip in  j x z j j y j , and z jx represent jz jy x y  In the above equation, , the angular displacements of the tool tip in  j j x z j y   j j In the above equation, , , and represent the angular displacements of the tool tip in x z  y , and   In the above equation, represent the angular displacements of the tool tip in  j j j x, z x y x z y j x z y   In the above equation, , , and represent the angular displacements of the tool tip in j  z  y termsIn ofthe Bryan angle; is xthe the transformation matrix between the angular displacements in the  terms of angle; the transformation matrix between the angular displacements in the j is jBBryan above equation,  ,  , and  represent the angular displacements of the tool tip in z y B  j terms of Bryan angle; is transformation matrix between the angular displacements in the x y B zmatrix j j is the terms of angle; transformation matrix between the angular displacements in the j Bryan B  terms of Bryan angle; is the transformation between the angular displacements in the j B j is thematrix jB terms of angle; transformation matrix between the angular displacements in the B j Bryan B terms of of Bryan Bryan angle; angle; is the the transformation between matrix the angular displacements in the j and jBryan B is the matrix B  terms is transformation between the angular displacements in the B terms of angle; transformation between the angular displacements in the B I global coordinate system the Bryan displacements; represents a 3 by 3 identity identity I global coordinate system and Bryan angular displacements; represents a 3 by 3 identity Bangular B  terms Bryan is the transformation matrix between the displacements in the terms of of Bryanangle; angle;  the transformation matrix between the angular displacements in the global 3 angular I global coordinate system and the Bryan angular displacements; represents a 3 by 3 I3 global coordinate system and the the Bryan angular displacements; represents a 3 by 3 identity B B 3 represents a 3 3 I global coordinate system and the Bryan angular displacements; by 3 identity 3 represents a 3 by 3 identity I3 global coordinate system and thedisplacements; Bryan angular Idisplacements; 3 3 global coordinate system and the Bryan angular represents a 3 by 3 identity identity 3 3 represents I global system and the Bryan angular displacements; a 3 by 3 I coordinate system and the Bryan angular displacements; represents a 3 by tip 3 identity 3 q qi global matrix; and  represents the ith module error. The linear and angular angular errors of the tip can be be  matrix; and represents the module error. The linear and angular errors of 3 I global coordinate coordinate system and Bryan angular displacements; represents a 333 by 3 identity i ith matrix; and represents the module error. The linear and errors of the tip can q qthe and represents the i ith th module error. The linear and angular errors of the the tip can can be be 3 i matrix; i  q matrix; and represents the i th module error. The linear and angular errors of the tip can be i  q and represents the i th module error. The linear and angular errors of the tip can be i matrix; i i  q matrix; and represents the i th module error. The linear and angular errors of the tip can be iith i matrix;  q matrix; and represents the module error. The linear and angular errors of the tip can be  q and represents the i th module error. The linear and angular errors of the tip can be calculated by i calculated by i matrix; and representsby the i ith module error. The linear and angular errors of the tip can be calculated by qii calculated calculated calculated calculated by by calculated by by calculated calculated by by j j

z j

q n

Machines 2017, 5, 5

13 of 16

coordinate system and the Bryan angular displacements; I3 represents a 3 by 3 identity matrix; and qi represents the ith module error. The linear and angular errors of the tip can be calculated by h j =
Machines 2017 , , Machines 2017 2017 5, 5 Machines 2017 ,, 5 5 ,, 5 5 Machines 2017 ,, 5 5 ,5 5 Machines 2017 5 5 Machines , Machines 2017 2017 ,5 5,, ,5 5 Machines 2017 5,, ,5 5 Machines 2017 5 Machines Machines ,, j ,,, 5 Machines 2017 2017 ,5 5, ,5 5  Machines 2017 ,5 Machines 2017 , 5 5 cos-1

( x j ) + (y j ) + (z j ) ,
j j j
13 of of 16 16 13 of 16 13 of of 16 16 j j 13 13 13 of of 16 16 13 of 16 cos  cos  13

2

2

2

(5a)
z x
13 of 16 13 of 16 13 of 16 13 of of 16 16 13 13 of 16

and orientation error sensitivity, respectively, as follows: and orientation orientation error sensitivity, sensitivity, respectively, as follows: follows:as follows: and orientation orientation error sensitivity, sensitivity, respectively, and error respectively, as and error respectively, as follows: and error respectively, as follows: and orientation orientation error sensitivity, sensitivity, respectively, j N as follows: n N n j N n n jj N h jjjj N 1 n  1 N h 1 N 1 n n  1 1 N n h j jj j ), q  c , q N n  h N n N n N n S  (  0,nt  1, 2,..., n 1 1 j 1 1 j N n  h N nc ,t N n j S  ( ),  q  c ,  q  0,  1, 2,...,   S  (  q    (6a)  h (6a) i p t t 1 1 1 t i  h N (1  iq (6a) p ii  1 1 h p ii  1 1  Sp N ),  q  c ,  qtt),  0, t  2,..., nt   (6a) pn t1, t  i Sp  (q  q c, ,  qtt1,  0, 0, t  1, 1,2,..., 2,...,n n 1 1  i  ii  N n  q n qij  h  t  1 1 (6a) p  i t), j  1 i 1 S  c ,  0,  2,..., n j 1 1( i 1  p i  t tt S  ( ),  q c  q 0, t  1, 2,..., n N n  qq i t iiq (6a) S N ( q ,  q  0, t  2,..., n t  i  0, j i 1 n q p i t j),  i  S  ( ), c ,t  q t  1, 2,..., n (6a) t ii t i p i  t 1, j), 1 1 i 1 1c i t i jj  1 ii  1 , n  q (6a)  tt  ii  i p N i t t  i i (6a) Spp ( ),  q  c ,  q  0, t  1, 2,..., n p i t S = ( ) , (6b)  1  1 , t  i , j  1 i  1 N n  q t  i i   o N n  q i t t i (6a) p j  1  1  1 i  1 jj  1 i  1 N n  q j 1 1 ni ii i 1 1 q i N , i i , i j  1 i  1 j N j 1 n i 1 qii ,, N j=i1 n q i j , , i = 1 jN n N n j j j N n 1 jj N n N 1 n  N 1 1 N 1 n n  N 1 n n  jj j N  N n N n jN 1 1o N n jj S  ) Soo   1 )( 1 j 1 N (1 n n S   (1 ) (6b)  j 1 1 S )  (6b) N ( n  1 1 (6b) o 1  Soo  given (n ) o N n  q    1 1 S  ( ) (6b) j  1 i  1 (6b) j  1 i  1 S ( ) o N  q N n  q where c represents module error. For the example, c is set of(6b) sampling i   1 1 (S i  1 qii jj Soo  jjj ) o ii   (6b) (6b) o 1 1( n 1 1 qii ) , 0.1 and the total number i 1 n (6b)  o  N N i S ( ) o  1 i  1 , j 1 1 n ii 1 1 q i , ij   N n  q N (6b) o  1 i  1 jj  1 i  1 N n  q j  1 i  1 i N n  q , i i , i j  1 i  1 i 1 ij 1, N i j 1 n i 1 qi , , points as 5. The result of error sensitivity analysis is ,listed in Table 9 the fortotal all 15 solutions. It can be where c represents module error. For the given example, c is set 0.1 and number of sampling where c represents module error. For the given example, c is set 0.1 and the total number of sampling where c module error. For the c set and the of where c represents represents module error. Forposition the given example, c example, is set set 0.1 0.1 and and the0.1 total number of number sampling where5 c represents represents module error. For the given given example, c is is set 0.1 and the total total number of sampling samplingof the c module error. For the given example, c is the total number of sampling where c represents module error. For the given example, c is set 0.1 and the total number of sampling seen where that solution has the least error sensitivity, and is in the 2nd least category where c represents module error. For the given example, c is set 0.1 and the total number of sampling where c represents module error. For the given example, c is set 0.1 and the total number of sampling points as 5. result of sensitivity is listed Table for 15 solutions. points as 5. The result result of error error sensitivity analysis is analysis listed in Table 9 in for all 159 solutions. It can be be It where c represents module error. For the given example, c is in set 0.1 and the total number points as 5. The The result of error error sensitivity analysis is listed in Table 9 for all all of 15sampling solutions. It can can be be points as 5. The of sensitivity analysis is listed Table 9 for all 15 solutions. It can points as 5. The result result of error error sensitivity analysis is analysis listed in Table 9 in for all 159 solutions. It can be be It points as 5. 5. The The result ofthe error sensitivity is listed Table for all all 15 15 solutions. can be points as 5. The of sensitivity analysis is listed in Table 9 for all 15 It can points as 5. The result of error sensitivity analysis is listed in Table 9 for all 15 solutions. It can be points as result of error sensitivity analysis is listed in Table 9solutions. for solutions. It can be seen that 5 has least position error sensitivity, and is in the 2nd least category of the seen that solution 5 solution has the least position error sensitivity, and is in in the 2nd least category of the orientation error. points as 5. The result of error sensitivity analysis is listed in Table 9 for all 15 solutions. It can be seen that solution 5 has the least position error sensitivity, and is in the 2nd least category of the seen that solution 5 has the least position error sensitivity, and is the 2nd least category of the seen that that solution solution 5 solution has the the least least position error sensitivity, and is is in in the the 2nd least category of the seen that that 5 has has the least least position error sensitivity, sensitivity, and is in in thecategory 2nd least least category of the the seen 5 has position error sensitivity, and 2nd least of the seen that that solution solution 5 solution has the least least position error sensitivity, and is is in in the the 2nd least category of the seen 5 the position error and is the 2nd category of orientation error. seen the position error sensitivity, and 2nd least category of the orientation error. orientation error. orientation error. 5 has orientation error. orientation error. orientation error. orientation error. orientation error. orientation error. Table 9. Results of error sensitivity analysis.

h h jj   ( ( x x jj )h ( y y(jj )x (  z( )2 ,) 2 j 2 j 2 2 , )(   yj, )2  ( ( z zj ) )2 ,  ) ( ) z ) 2 2 h h   ( ( x x )h  ( y y( )x  (  z(jj )y )   )  ( )  ( z ) ,, ,, for position error sensitivity and , In this context, two evaluation indices, S and S , are introduced p o j j j j j 1 j j  j j j j j j j 1 1 j j j j j j j jj  cos jj cos  jj  cos jj cos  jj  cos jj  1 1((cos j  cos  jj cos jj  jj cos jj  jj cos jj  jj    1 1((cos j j j j  j cos  j    cos   cos  1 1  jy  cos   cos  cos z x y y z x y j j j j j j  j j j j j j j j jz jz jx  1  1 jx cos jy  jy cos jz  jz cos jx x y y z z x 1 1 ((cos x y y z z x jjjjj   cos cos   cos   cos   j cos j  j cos j  j cos j j jjjj   cos ((cos  cos   cos  cos   cos cos x  1 ((cos x y y z z x orientation error sensitivity, respectively, as follows: j j j j j  x y y z z x     cos  cos  cos  cos   cos ((cos  cos   cos  cos   cos  cos  x cos y y cos z z cos x j cos j  j j j j 1((cos   cos ((cos  cos   cos  cos   cos  cos  (5b) x y y z z x (5b)   cos ((cos  cos   cos   x y y z z x x y y z z x x y y z z x j j j j j j (5b) x y y cos z  cos z cos x   cos ((cos cos  cos     x y y z z x j j j (5b) j j j j j j j j j (5b) x y z x  sin  sin  sin  sin sin  jx sin  sin   1) 2)  j sin j sin j  j j/ j y1) / 2) z (5b)  sin jx sin  sin z y (5b) x y j j j   1) 2) j j j j jz (5b) jx jy / jz  1) / 2) y z x y z (5b) sin sin x   1) / 2) j sin j sin j  y z . j j (5b)  sin  sin  sin   1) / 2) x y z . .  sin  sin   1) / 2) x y sin z  1) / 2) j sin j sin j   sin    1) / 2) x y z  sin  sin  x y z x y z x y z . . x y z  sin x sin y sin 2) z x  z  1) .. . 1 n h j yp/indices, 1 N . for position In this two S and S o , are introduced sensitivity (6a) o, are In this context, two evaluation indices, S p and o introduced for position error sensitivity In this context, two evaluation indices, S p and S o are introduced for position error ( evaluation S = ) , qiS = cp ,  q = 0, t = 1, 2, . . . , n , error | p o, i p o pcontext, t   In this context, two evaluation indices, S p and S o, are introduced for position error sensitivity t = In this context, two evaluation indices, S p and S o , are introduced for position error sensitivity sensitivity p o p o,, are In this context, two evaluation indices, p and S o introduced for position error sensitivity In this this context, two evaluation indices, S p and and So o, , are are introduced introduced for position error sensitivity N j= n respectively, qiS In context, evaluation indices, S pindices, and S are introduced for error sensitivity In context, two evaluation S p S for position error sensitivity and orientation error sensitivity, as follows: In this this context, two evaluation indices, S p and So o, are introduced for position position error sensitivity and orientation error two sensitivity, respectively, as follows: and orientation error sensitivity, as follows: 1 i =1 respectively,

= ((cos x cos y + cos y cos z + j j j j j 2j j 2 2 2 2 j 2 j j   jj jj  2 2 2 j j 2 j  j)2 2 2  (z jj ) 2 2 j j j 2 2 2 - sin x sin y sin /2 )  h x y h h (z xjjj- )2  (  y( )  ( z( )2 j j) j) 2 1 2 j 2 j ) j 2 j 2 2 2 h ( x  ( y jjjjj ) )2 j  ) ( y z jj  (x jj  jj  jj  2 2 2 2 j  j )( j )2 2 2  (z j 2

j

.

(5b)
(5a) (5a) (5a) (5a)

(5a) (5a) (5a) (5a) (5a) (5a)





S/N S/N 11

S/N CAD Model S/N CAD Model S p S/N CAD CAD Model Sp p S/N CAD Model Model p S/N Model S S/N CAD S/N Model S S/N CAD Model S/N CAD CAD Model Sp p 1 1 1 1 1 1 1 1 1

Table Results of error sensitivity analysis. Table 9. 9. Results Results of9. error sensitivity analysis. Table of error sensitivity analysis. Table 9. Results of error sensitivity analysis. Table 9. Results of error sensitivity analysis. Table 9. Results of error sensitivity analysis. Table 9. Results of error sensitivity analysis. Table 9. Results of error error sensitivity analysis. analysis. Table 9. Results of sensitivity Table 9. Results of error sensitivity analysis. Table 9. Results of error sensitivity Table 9. Results of error sensitivity analysis. Table 9. Results of erroranalysis. sensitivity analysis. Table 9. Results of error sensitivity analysis. CAD Model S S S/N CAD Model p o S/N CAD Model S/N CAD S p S o CAD Model S/N CAD Model S p S o Sp p p op S/N CAD Model S/N CAD Model Model S So

S p S o SS op S p o S o p S op S S o

S/N CAD Model S oCAD S/N Model S p S/N S Model Sp p S/N CAD Model Model So o CAD p S/N Model S S/N CAD o CAD S/N CAD Model S S/N CAD Model S/NSo CAD Model Sp p 42.1667 42.1667 42.1667 42.1667 42.1667

S p S S op o p p S o SS op S p o S o S p S op S S o

So S o S o o So o S o S o

0.6667 250.3333 250.3333 0.6667 9 9 9 250.3333 0.6667 0.6667 9 250.3333 250.3333 0.6667 9 250.3333 0.6667 9 250.3333 0.6667 9 250.3333 0.6667 9 250.3333 0.6667 9 0.6667 9 250.3333 250.3333 0.6667 9

42.1667 42.1667 0.5000 42.1667 0.5000 42.1667 0.5000 42.1667 0.5000 42.1667 0.5000

0.5000 0.5000 0.5000 0.5000 0.5000 0.5000

2 22 2

2 2 2

2 2 2 2

79.3979 79.3979 79.3979 79.3979 79.3979 79.3979 79.3979

79.3979 0.5000 0.5000 10 79.3979 0.5000 10 10 10 0.5000 10 0.5000 0.5000 10 79.3979 10 0.5000 10 10 0.5000 0.5000 10 79.3979 0.5000 0.5000 10

476.2317 476.2317 476.2317 476.2317 476.2317 476.2317

476.2317 0.5714 476.2317 476.2317 0.5714 0.5714 476.2317 0.5714 0.5714 476.2317 0.5714

0.5714 0.5714 0.5714 0.5714 0.5714

3 33 3

3 3 3

3 3 3 3

0.5000 200.5000 0.5000 11 200.5000 0.5000 11 11 200.5000 0.5000 200.5000 200.5000 0.5000 11 200.5000 0.5000 11 200.5000 0.5000 11 11 11 200.5000 0.5000 11 200.5000 0.5000 0.5000 200.5000 200.5000 0.5000 11 11

280.7751 280.7751 0.4286 280.7751 0.4286 280.7751 0.4286 280.7751 0.4286 0.4286 280.7751 280.7751 0.4286 0.4286 280.7751 0.4286 280.7751 0.4286 0.4286 280.7751 280.7751 0.4286

4 4 44

4 4 4

4 4 4 4 4

255.3333 0.6667 12 255.3333 0.6667 12 0.6667 255.3333 0.6667 12 255.3333 255.3333 0.6667 12 255.3333 0.6667 12 12 12 255.3333 0.6667 255.3333 0.6667 12 255.3333 0.6667 0.6667 12 255.3333 255.3333 0.6667 12 12

226.2857 0.4286 226.2857 0.4286 226.2857 226.2857 0.4286 226.2857 0.4286 0.4286 226.2857 0.4286 226.2857 0.4286 226.2857 0.4286 226.2857 0.4286 0.4286 226.2857 226.2857 0.4286

5 55 5

5 5 5

5 5 5 5

33.8333 33.8333 33.8333 33.8333 33.8333 33.8333 33.8333

33.8333 0.5000 0.5000 13 33.8333 13 0.5000 13 13 0.5000 0.5000 13 33.8333 0.5000 13 13 13 0.5000 13 0.5000 0.5000 13 33.8333 0.5000 0.5000 13 254.0173 0.5000 0.5000 14 14 254.0173 0.5000 14 14 0.5000 0.5000 14 254.0173 0.5000 14 14 14 0.5000 0.5000 14 0.5000 14 254.0173 0.5000 0.5000 14

488.7837 488.7837 488.7837 488.7837 488.7837 488.7837

488.7837 0.5714 488.7837 0.5714 0.5714 488.7837 488.7837 0.5714 0.5714 488.7837 0.5714 280.7427 0.4286 280.7427 0.4286 0.4286 280.7427 0.4286 280.7427 0.4286 280.7427 0.4286

0.5714 0.5714 0.5714 0.5714 0.5714

66 6 6

6 6 6

6 6 6 6

254.0173 254.0173 254.0173 254.0173 254.0173 254.0173 254.0173

280.7427 280.7427 280.7427 280.7427 280.7427 280.7427

0.4286 0.4286 0.4286 0.4286 0.4286

7 77 7 8 8 8

7 7 7

7 7 7 7

463.2140 463.2140 463.2140 463.2140 463.2140 463.2140 463.2140 276.8262 276.8262 276.8262 276.8262 276.8262 276.8262 276.8262

463.2140 0.6667 0.6667 15 15 463.2140 0.6667 15 15 0.6667 0.6667 15 15 463.2140 0.6667 15 15 15 0.6667 0.6667 15 463.2140 0.6667 0.6667 15 0.6667 276.8262 0.6667 276.8262 0.6667 0.6667 276.8262 0.6667 0.6667 276.8262 0.6667 0.6667 0.6667 0.6667 0.6667 0.6667

119.3801 119.3801 119.3801 119.3801 119.3801 119.3801

119.3801 0.4286 119.3801 0.4286 0.4286 119.3801 0.4286 0.4286 119.3801 119.3801 0.4286

0.4286 0.4286 0.4286 0.4286 0.4286

8 88 8

8 8 8 8

Machines 2017, 5, 5

14 of 16

4.4. Layout Selection A final layout is decided by considering all the afore-mentioned four indices, based on which a combined index is proposed
s s e p e o e L k = µr µr k + µ µk - µ (µ µk , p + µ µk ,o ).

(7)

In the above equation, r, s, and e represent reconfigurability, structural stiffness, and error sensitivity, respectively; k refers to the kth layout solution; µr , µs , and µe are the importance weights of the three criteria; µ p and µo are the importance weights of position error sensitivity and orientation error s e e sensitivity, respectively; and µr k , µk , µk, p and µk,o are the normalized reconfigurability index, structural stiffness index, position error sensitivity index, and orientation error sensitivity index, respectively. In this example, we assume that the three criteria are of equal importance and thus their importance weights can be assigned as: [µr , µs , µe ] = [0.3333, 0.3333, 0.3333]. We also assume that the position error sensitivity and the orientation error sensitivity are of equal importance: [µ p , µo ] = [0.5, 0.5]. The overall indices of all the layout solutions are listed in Table 10. The layout solutions with a higher index value are considered as more suitable for the target machine tool design. In view of Table 10, layout #5 is selected as the final design because this layout has the highest combined index value, with a very high structural stiffness, low error sensitivity and average reconfigurability.
Table 10. Overall indices of the layout solutions. Normalized Indices S/N 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 µr 0.0925 0.0925 0.0661 0.0661 0.0661 0.0661 0.0661 0.0661 0.0661 0.0514 0.0514 0.0514 0.0661 0.0661 0.0661 µs 0.0128 0.1010 0.0138 0.0121 0.4357 0.0083 0.0048 0.0094 0.2824 0.0039 0.0075 0.0110 0.0036 0.0063 0.0875 µe p 0.0672 0.0213 0.0538 0.0685 0.0091 0.0681 0.1243 0.0743 0.0113 0.1278 0.0753 0.0607 0.1311 0.0753 0.0320 µe o 0.0831 0.0623 0.0623 0.0831 0.0623 0.0623 0.0831 0.0831 0.0623 0.0712 0.0534 0.0534 0.0712 0.0534 0.0534 L 0.0100 0.0506 0.0073 0.0008 0.1554 0.0031 -0.0109 -0.0011 0.1039 -0.0147 -0.0018 0.0018 -0.0105 0.0027 0.0370

5. Conclusions It is demonstrated through this paper that the proposed method can effectively design a modular reconfigurable machine tool. The following conclusions can be drawn:

·

·

For a given family of parts, by extracting their machining features, the corresponding module sets can be properly selected, from which a number of machine configurations can be grouped. By combining singular and/or similar modules through reconfiguration, a minimal set of modules can be determined. A layout synthesis process can then be carried out to produce generalized layouts based on a tree-graph algorithm and reduce them to create specific layouts by examining the selected modules.

Machines 2017, 5, 5

15 of 16

·

·

Finally, a layout evaluation process is conducted to find a final design based on a combined index considering three important issues for design of modular machine tool, i.e., reconfigurability, stiffness and error sensitivity. The proposed design system has been developed into a design software using MATLAB. The method presented can be extended to micro-machine design as described in [30].

Author Contributions: All authors contributed equally to this paper. Conflicts of Interest: The authors declare no conflict of interest.

References and Note
1. Yim, M.; Shen, W.; Salemi, B.; Rus, D.; Moll, M.; Lipson, H.; Klavins, E.; Chirikjian, G. Modular Self-Reconfigurable Robot Systems--Challenges and Opportunities for the Future. IEEE Robot. Autom. Mag. 2007, 14, 43­52. [CrossRef] Arbuckle, D.; Requicha, A.A.G. Active Self-Assembly. In Proceedings of the 2004 IEEE International Conference on Robotics and Automation, Barcelona, Spain, 18­22 April 2005; pp. 896­901. Yoshida, E.; Matura, S.; Kamimura, A.; Tomita, K.; Kurokawa, H.; Kokaji, S. A Self-Reconfigurable Modular Robot: Reconfiguration Planning and Experiments. Int. J. Robot. Res. 2002, 21, 903­915. [CrossRef] Chen, I.-M. Rapid Response Manufacturing through Reconfigurable Robotic Workcells. J. Robot. Comput. Integr. Manuf. 2001, 17, 199­213. [CrossRef] Moon, Y.; Kota, S. Design of Reconfigurable Machine Tools. ASME J. Manuf. Sci. Eng. 2002, 124, 480­483. [CrossRef] Kota, S. A Methodology for Automated Design of Reconfigurable Machine Tools. ERC/RMS Annu. Rep. 1999, 35­40. Tilbury, D.M.; Kota, S. Integrated Machine and Control Design for Reconfigurable Machine Tools. In Proceedings of the 1999 IEEE/ASME, International Conference on Advanced Intelligent Mechatronics, Atlanta, GA, USA, 19­23 September 1999. Moon, Y.M.; Kota, S. Generalized Kinematic Modeling of Reconfigurable Machine Tools. J. Mech. Des. 2002, 124, 47­51. [CrossRef] Shinno, H.; Ito, Y. A Proposed Generating Method for the Structural Configuration of Machine Tools. ASME Pap. 1984, 84, 1­8. Garro, O.; Martin, P. Towards New Architectures of Machine Tools. Int. J. Prod. Res. 1993, 31, 2403­2414. [CrossRef] Ouyang, M.-A.; Yi, C.; Li, C.; Zhou, J. Intelligent Layout for Modular Design of Machine Tools. In Proceedings of the International Conference on Intelligent Manufacturing, Wuhan, China, 14­17 June 1995; Volume 2620, pp. 547­552. Zatarain, M.; Lejardi, E.; Egana, F. Modular Synthesis of Machine Tools. CIRP Ann. Manuf. Technol. 1998, 47, 333­336. [CrossRef] Otto, K.N.; Wood, K.L. Product Design--Techniquies in Reverse Engineering and New Product Development; Prentice Hall: Upper Saddle River, NJ, USA, 2001. Slocum, A. Precision Machine Design; Society of Manufacturing Engineer: Dearborn, MI, USA, 1998. Ito, Y. Modular Design for Machine Tools; McGraw Hill: New York, NY, USA, 2008. Chen, L.; Xi, F.; Macwan, A. Optimal Module Selection for Preliminary Design of Reconfigurable Machine Tools. J. Manuf. Sci. Eng. 2005, 127, 104­115. [CrossRef] De Lacalle, L.N.L.; Lamikiz, A.; Sanchez, J.A.; de Bustos, I.F. Simultaneous Measurement of Forces and Machine Tool Position for Diagnostic of Machining Tests. IEEE Trans. Instrum. Meas. 2005, 54, 2329­2335. ISO Technical Committee 184, Sub-Committee 4, STEP-ISO 10303, 1998. Satty, T.L. The Analytic Hierarchy Process; McGraw-Hill: New York, NY, USA, 1980. Regli, W.C.; Gupta, S.K.; Nau, D.S. Extracting Alternative Machining Features: An Algorithmic Approach. Res. Eng. Des. 1995, 7, 173­192. [CrossRef] Gao, S.; Shah, J. Automatic Recognition of Interacting Machining Features Based on Minimal Condition Subgraph. Comput. Aided Des. 1998, 30, 727­739. [CrossRef]

2. 3. 4. 5. 6. 7.

8. 9. 10. 11.

12. 13. 14. 15. 16. 17. 18. 19. 20. 21.

Machines 2017, 5, 5

16 of 16

22. 23. 24. 25. 26. 27. 28. 29. 30.

Han, J. Manufacturing Feature Recognition from Solid Models: A Status Report. IEEE Trans. Robot. Autom. 2000, 16, 782­796. Tsai, L. Mechanism Design--Enumeration of Kinematic Structures According to Function; CRC Press: Boca Raton, FL, USA, 2001. Schmidt, L.C.; Shetty, H.; Chase, S.C. A Graph Grammar Approach for Structure Synthesis of Mechanisms. ASME J. Mech. Des. 2000, 122, 371­376. [CrossRef] Yan, H.-S.; Chen, F.-C. Configuration Synthesis of Machining Centers without Tool Change Arms. Mech. Mach. Theory 1998, 33, 197­212. [CrossRef] Chen, I.-M.; Burdick, J.W. Enumerating the Non-Isomorphic Assembly Configurations of Modular Robotic Systems. Int. J. Robot. Res. 1998, 17, 702­719. [CrossRef] Rao, A.C. A Genetic Algorithm for Topological Characteristics of Kinematic Chains. J. Mech. Des. 2000, 122, 228­231. [CrossRef] Valiente, G. Algorithms on Trees and Graphs; Springer: Heidelberg, Germany, 2002. Diaz-Tena, E.; Ugalde, U. Propagation of Assembly Errors in Multitasking Machines by the Homogenous Matrix Method. Int. J. Adv. Manuf. Technol. 2013, 68, 149­164. [CrossRef] Huo, D.; Cheng, K.; Wardle, F. A Holistic Integrated Dynamic Design and Modeling Approach Applied to the Development of Ultra-Precision Micro-Milling Machines. Int. J. Mach. Tools Manuf. 2010, 50, 335­343. [CrossRef] © 2017 by the authors; licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).


