Advanced Pickup.& Delivery of Parcels Using
GPS/GIS Technologies

By

Arfan Muhammad A project report presented to Ryerson University in partiat fulfillment of the requirements for the degree of Master of Engineering Graduate Program in Electrical and Computer Engineering Toronto, Ontario, Canada, 2010 ©Arfan Muhammad, 2010

--

PROPERlY OF RYERSON UNIVERSITY UBRARY

Author's Declaration

I hereby declare that I am the sole author of this report. I authorize Ryerson University to lend this report to other institutions or individuals for the purpose of scholarly research.

Arfan Muhammad

I further authorize Ryerson University to reproduce this report by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

Arfan Muhammad

II

Borrower's Information

Ryerson University requires the signatures of all persons using or photocopying this report. Please sign below, and give address and date. Name Address Date'

III

Abstract
The main focus of this project addresses some of the key problems in the postal industry which are adhoc pickups, efficient and quick delivery, increase in vehicle maintenance, overtime and fuel cost. Companies involved in postal industry are spending millions of extra dollars to fulfill customer's need. There is a need of some reliable solution which can help improving the existing processes which are still using old technologies. This project uses advanced and reliable state of the art technologies like Global Positioning System (GPS) and Geographical Information System (GIS) to improve the existing process of Pickup and Delivery (P&D) of parcels which are the two fundamental services provided by the postal industry. Today, there is a huge competition and the companies involved in postal industry are allocating a lot of budget to provide better, improved, reliable and satisfactory service to the customers. This project presents an integrated approach to combine GPS and GIS to help improving the existing pickup/delivery process. A GPS enabled mobile device capable of wireless connectivity can be mounted in the courier's vehicle. The existing shipment and tracking application can be modified to communicate to GPS and transmit GPS data to the server wirelessly. GIS functionality can be embedded in the server side to calculate the shortest route between the courier's current position and the customer address. Similarly, digital maps can be used for visual display of the couriers and their online activities.

IV

Acknowledgement
During my graduate studies at Ryerson University, there are a number of people whom I would like to say my heartiest thanks because of 'their help, guideline, support and friendship due to which this project came to light. I would like to thank the members of my project committee, Dr. Truman Yang and Dr. Yifeng He for their insights and guidance. In particular, Dr. Lian Zhao for her support, encouragement and guidance throughout the project. She has the greatest impact on my academic development during the project. I finished this project only because of her indepth knowledge and research in this field. She continuously gave very valuable suggestions, advice and recommendations. The completion of this project is credited to her. It has truly been an honor to be her student. lowe a great many heartfelt thanks to Innovapost management, especially David Rea, Alnoor Ladak, Mike Liang, Radek Zelechowski and Gene Stec. Their continuous support, help and encouragement made it possible to finish this project on time. I would also like to thank my classmate and good friend Bassim Ibrahim for his help and support. We studied and developed this project together and it was very good and pleasant experience. My heartiest thanks to my best friend Azher Malik who helped me a lot in designing graphics for the website and who took care of me throughout M.Eng. Program. My deepest gratitude and appreciation are reserved for my mother whose prayers and support helped throughout my life, my brother, sisters and niece. Without their constant love, support and encouragement, I would not have gone so far as to produce this report.

v

TABLE of Contents
Abstract ............................................................................................................................. IV Acknowledgement ..............................................................................................................V List of TABLES ................................................................................................................ IX List of FIGURES ................................................................................................................X

1

Introduction ................................................................................................................. 1

1.1 · · ·

Motivations ......................................................................................................... 1 Fuel Consumption ............................................................................................... 2 Vehicle Maintenance .......................................................................................... 2 Courier Overtime ................................................................................................ 2

1.2 Current Technology ............................................................................................ 2 1.2.1 Job Status ........................................................................................................ 3
1.3 · · · 1.4 LimitationslFlaws ............................................................................................... 4 Static Routing ...................................................................................................... 5 Courier Location ................................................................................................. 5 Courier Guidance ................................................................................................ 5 Project Objectives ............................................................................................... 5

1.5 Project Modules & Contributions and Outline ................................................... 6 1.5.1 Project Modules & Contributions ................................................................... 6 1.5.2 Report Outline ................................................................................................. 7
2 Background *'" ·················· , ···························································································· 8

2.1 Automatic Vehicle Location (AVL) Systems ..................................................... 8 2.1.1 Benefits of AVL systems ................................................................................ 9 2.1.2 Vehicle Location Technologies ...................................................................... 9 2.1.2.1 Global Positioning System .................................................................... 10 2.1.2.2 Dead-Reckoning .................: .................. :............................................... 12 2.1.2.3 Signpost IOdometer Systems ................................................................ 12 2.1.2.4 Radio Navigation ILocation ............................. ;......................... :.......... 12 2.2 Data Transmission ............................................................................................ 13 2.2.1 Global System for Mobile Communication (GSM) ...................................... 13
2.3 Geographical Information System (GIS) .......................................................... 2.3.1 Philosophy of GIS ......................................................................................... 2.3.2 Advantages and Applications of GIS ............................................................ 2.3.3 GIS Location and Coordinates ...................................................................... 2.3.3.1 Geo-coding and Reverse Geo-coding ................................................... · Geo-coding .................................................................................................... VI 14 15 15 17 18 18

·

Reverse Geo-coding ...................................................................................... 19

2.4 Dijkstra .............................................................................................................. 20 . 2.4.1 Basic Flowchart ............................................................................................ 20 2.4.2 Routing Techniques ...................................................................................... 21 2.4.2.1 Fixed lDeterministic .............................................................................. 21 2.4.2.2 Adaptive ................................................................................................ 21 2.4.2.3 Flooding ................................................................................................ 22 2.4.2.4 Multicasting .......................................................................................... 22 2.4.2.5 Hierarchical ........................................................................................... 22 2.4.2.6 Random ................................................................................................. 22 2.4.3 Algorithm ...................................................................................................... 22 2.4.3.1 Problem Analysis .................................................................................. 23 2.4.3.2 Detailed Flowchart ................................................................................ 24 3 System Design .......................................................................................................... 25 3.1 Architecture ....................................................................................................... 25 3.1.1 Modules I Development Technologies ......................................................... 26 3.2 Components I Modules ..................................................................................... 27 3.2.1 Server .....................................................................................................: ...... 27 3.2.1.1 TCP Connection Establishment Process ............................................... 28 3.2.1.2 Connection Establishment Functions .................................................... 28 3.2.1.3 Control Messages .................................................................................. 28 3.2.1.4 Pickup Job Assignment ......................................................................... 29 3.2.1.5 Package Delivery .................................................................................. 30 3.2.1.6 Startup Flow .......................................................................................... 31 3.2.1.7 Processing Jobs/Messages Flow ........................................................... 32 3.2.2 Client ............................................................................................................. 32 3.2.2.1 Mobile Device .................................................... ~ .................................. 34 3.2.2.2 Login Flow ............................................................................................ 35 3.2.2.3 Data Protocol ........................................................................................ 36 3.2.3 Web Service .................................................................................................. 36 3.2.3.1 Process Flow ......................................................................................... 38 3.2.4 Web Site .......................................·................................................................... 39 3.2.4.1 User Role Authentication ... :................... :.............................................. 39 3.2.5 Database ........................................................................................................ 40 4 Development ISimulation ......................................................................................... 43 4.1 4.2 4.3 Client I Server ................................................................................................... 43 Web Site (User + Dispatch Application) .......................................................... 45 Database ................. :.......................................................................................... 52

4.4 Dijkstra Algorithm ............................................................................................ 53 4.4.1 Functionality I Example ................................................................................ 53 5 Conclusions and Future Directions ........................................................................... 58

VII

6 7

Bibliography ............................................................................................................. 60 Appendix .................... ~ .............................................................................................. 63 7.1 7.2 Abbreviation List .............................................................................................. 63 Database Tables Scripts .. :................................................................................. 64

VIn

List of TABLES
TABLE 1-1: Limitations in the existing system ................................................................. 4 TABLE 2-1: RMC data format ......................................................................................... 11 TABLE 2-2: Advantages and disadvantages of different location technologies .............. 13 TABLE 3-1: APDIS Models ............................................................................................. 26 TABLE 3-2: Client / Server data protocol ........................................................................ 36 TABLE 3-3: Client / Server data protocol examples ........................................................ 36 TABLE 3-4: Database Objects (Tables) ........................................................................... 40 TABLE 3-5: Database Objects (Stored Procedures) ........................................................ 42 TABLE 4-1: Distance between the nodes ......................................................................... 53

IX

List of FIGURES
FIGURE 1-1: Current Architecture / Technology ............................................................. 3 FIGURE 2-1: Basic AVL System ....................................................................................... 8 FIGURE 2-2: GPS Satellites [3] ....................................................................................... 10 FIGURE 2-3: Four satellites are needed to calculate the position [3] .............................. 10 FIGURE 2-4: Latitude / Longitude Concepts [36] ........................................................... 17 FIGURE 2-5: Northern /Southern hemisphere with LongitudelLatitude ........................ 18 FIGURE 2-6: Dijkstra Algorithm Flowchart .................................................................... 20 FIGURE 2-7: Detailed Flowchart ..................................................................................... 24 FIGURE 3-1: System Architecture ................................................................................... 25 FIGURE 3-2: Client / Server communication via wireless .............................................. 27 FIGURE 3-3: Client/Server communications ................................................................... 30 FIGURE 3-4: Server Start-up Process .............................................................................. 31 FIGURE 3-5: Processing Job/Message Flow Diagram .................................................... 32 FIGURE 3-6: Wireless communication ............................................................................ 33 FIGURE 3-7: Mobile Device used by a Courier .............................................................. 34 FIGURE 3-8: Login Flow Diagram .................................................................................. 35 FIGURE 3-9: Data Exchange between tiers and database ................................................ 37 FIGURE 3-10: Process Flow Diagram ............................................................................. 38 FIGURE 3-11: User Authentication ................................................................................. 39 FIGlTRE 4-1: Server Start-up ........................................................................................... 43 FIGURE 4-2: Client ~ Server Connection ...................................................................... 44 FIGURE 4-3: Server Real-time Status .............................................................................. 44 FIGURE 4-4: Client / Server Data Communications ....................................................... 45 FIGURE 4-5: Welcome to APDIS .................................................................................... 46 FIGURE 4-6: APDIS (Sign On) ....................................................................................... 46 FIGURE 4-7: APDIS (Administrator Login) ................................................................... 47 FIGURE 4-8: APDIS (Administrator ~ Add User) ......................................................... 47 FIGURE 4-9: APDIS (Administrator ~ Modify/Update User) ....................................... 48 FIGURE 4-10: APDIS (Administrator ~ Delete User) ................................................... 48 FIGURE 4-11: APDIS (Administrator ~ View Online User with GIS) ......................... 49 FIGURE 4-12: APDIS (Administrator ~ View Pickup Jobs) ......................................... 49 FIGURE 4-13: APDIS (Administrator ~ Client Communication via Messaging) ......... 50 FIGURE 4-14: APDIS (Administrator ~ Create Pickup)................................................ 50 FIGURE 4-15: APDIS (Customer ~ Check Pickup Status) ............................................ 51 FIGURE 4-16: APDIS (Customer ~ Trace Courier/Customer Location via GIS) ......... 51 FIGURE 4-17: Database Objects (tables) ................................... :..................................... 52 FIGURE 4-18 Database Objects (Stored Procedures) ...................................................... 52 FIGURE 4-J9A: Dijkstra Execution (Step - 1) ................................................................. 54 FIGURE 4-20B: Dijkstra Execution (Step - 2) ................................................................. 54 FIGURE 4-21C: Dijkstra Execution (Step - 3) ................................................................. 55 FIGURE 4-22D: Dijkstra Execution (Step - 4) ................................................................. 55 FIGURE 4-23E: Dijkstra Execution (Step - 5) ................................................................. 56 FIGURE 4-24F: Dijkstra Execution (Step - 6) ................................................................. 56 FIGURE 4-25G: Dijkstra Execution (Step - 7) ................................................................. 56 FIGURE 4-26H: Dijkstra Execution (Step - 8) ................................................................. 57

X

1 Introduction
Package pickup and delivery are the most important services offered by the postal industry. A customer wants hislher package to be picked up and/or delivered in quick time. Because of this reason, companies involved in postal industry are focusing on improving the exiting process to fulfill customer's need by providing more reliable and satisfactory service. Currently, a customer can visit any post office to send hislher package. Other way to send the package is either by calling a customer service or visiting the website to create a pickup. The first method is very straightforward. In the second method, the customer requests post office to have someone visit himlher and pickup the package. Such kind of pickup is called On Demand pickup because while creating pickup request (via phone or web), the customer mentions the scheduled time for a courier to come and pickup the package. Customer support staff asks various questions like name, address, time to pickup, payment mode, package dimensions (height/width/length and weight) etc. Call Center Department (CCD) representative enters all this information into the system using OUI based Dispatch application to create pickup request. Currently, second half of the day is reserved for the PICKUPS. ' Package Delivery is always done by the courier. A courier serving the area goes to customer's address to deliver the package. Under special circumstances, customer is requested to go to a nearby post office to collect the package. Currently, first half of the day is reserved for DELIVERIES. There are 3 categories of the deliveries: 9:00 AM, 10:30 AM and regular. Packages under first two types must be delivered on or before this time otherwise company will have to pay to the customer a fixed amount as penalty. Regular delivery times are 10:30 AM onwards.

1.1 Motivations
Current system allows couriers to serve in a specific region. Each courier is assigned a geographical area based on the postal code. He/she is responsible for pickup and delivery of all packages in this area. Recently, 50% of the pickups are on demand pickups in which case customer contacts the call center or browse website and requests someone to visit hislher place to pick up the package. Customer mentioned the pickup time and the courier reaches within the scheduled pickup time window· to collect the package. A courier carries a mobile device capable of wireless communication. The centralized system automatically sends the pickup requests to the courier through wireless network and the courier goes to the destination address to pick up the package. It happens most of the time that a courier serving in the area is on one end of the region and the destination address is on the other end. He would go all the way down to pickup this package although another courier serving in next area may have been very close to the destination
I

address. It happens because the current system does not allow this job to send to the nearest courier allowing to pickup package in shortest possible time. A bigger challenge in today's postal industry is how to improve the existing process which caters for customer's need and at the same. time, how company itself can get maximum benefits.

e

Fuel Consumption

With the existing technology and pickup process, companies involved in postal industry are spending huge amount on fuel every year. Major portion of this loss is from the special pickup process because the system sends pickup requests continuously to the couriers and they have to plan their trip accordingly.

e

Vehicle Maintenance

Current system is based on postal codes. A courier login the system using route id (post code) and the system sends all pickup jobs for this route to the courier and he/she has to go to destination based on the pickUp scheduled time. A courier has to drive from one end to another a number of times in a day which increases mileage on the vehicle.

e

Courier Overtime

Service providers believe in "Customer satisfaction is guaranteed". Imagine, a courier is just ending hislher day and a pickup job is delivered by the system. The courier has to entertain this otherwise the company can lose the customer. To entertain such variances, courier would need to work extra hours and the company will have to pay overtime.

1.2 Current Technology
Current technology uses GPRS as wireless communication media to communicate to the couriers. The system uses static method of assigning new jobs to the couriers because each courier serves a specific area (based on postal codes). When a customer requests a call center, or goes to website to create a pickup request, he/she gives detailed information -like full name, address, postal code, number of packages, package(s) dimension, payment mode etc. The system creates the pickup job and saves into the database. There are few services that are scheduled to continuously monitor the system database for any new PICKUP job. As soon as a new record is created in these tables, one service gets this information, process it and the wireless service sends it to the courier who is serving that area. The wireless service sends this job wirelessly using wireless network (GPRS in current scenario). The wireless service knows which courier is serving
2

thi s spec iti c route so the right courier gets the job request. The courier receives thi s job, vi ews it and then accepts or declines. Re ceived, viewed, accepted. rejected status are sent back to the system wirelessly and the system updates the job status accordingl y. T he bas ic system arc hitecture is shown in FIGURE I-I.

Scanner is cradled and communicating to Afaria (Click Afa na from the scanner)

FIGt RE I- I: Current Arch itect ure I Technology

FIG URE 1-1 shows 3 scenarios of data exchange between mobile device and the backend servers. The scanner or mobile device resides inside courier' s vehicle and is capable of making wireless connection using GSM/GPRS. A courier needs to sign on before using this device. Upon successful sign on , the device is registered with the system . Courier keeps this device with him/her throughout the day. All scanned pins and customer' s signatures arc continuously stored in the local database. On returning back to the office, this scanner IS handover to the supervisor who makes sure to connect it to the backend servers to Juwnload all information from the local database. The device is then kept on /\C source to start charging. The remote management server is responsible to retrieve scanner's imentory and send any updated version of software application or windows patch.

1.2.1 Job Status
The courier receives all kind of pickups/messages wirelessly from the server. Various changes happen in the job status.

3

a
a

Sending/Pending Server received a job from the central database and is ready to send to the courier. Wireless Sending Server has made decision to send this job to a particular courier and is trying to send wirelessly.

;3 Sent Server has successfully sent the job to the specific courier.

\3 Viewed
As soon as the courier receives this job in the form of message, he is alerted through a new incoming message. The courier views it and the status of the job changes to VIEWED.

e

Rejected If the job is not relevant to the courier, he may reject it. Accepted This indicates that the courier has accepted the job. Completed The courier has successfully completed the job. Failure The courier is unable to complete the job because of various reasons (customer not available, office closed etc).

e
"

e

1.3 Limitations/Flaws
There are some limitations and flaws in the existing system. These issues need to be fixed to offer a more reliable, flexible and emcient system. TABLE 1-1 provides a list of issues in the current system.

TABLE 1-1: Limitations in the existing system Issue ID 1 i2 3 4 i5
i

6

Issue Static Routing of the calls No Courier Information Available No Guidance available to the Courier Increase in Vehicle Maintenance Increase in Courier Overtime Increase in Fuel Consumption

..

-

4

a

Static Routing

System uses static method to send pickup request to the couriers. The job is sent to the courier even ifhe is far away from the destination. The job remains in pending queue if a courier is not logged in to the route that means the system will not entertain this job and the dispatcher has to call the courier and verbally give information about the customer address and other details.

8 Courier Location
The system is not capable of detecting the courier's location.

a Courier Guidance
Most of the couriers are very experienced and they are very much familiar with the routes in their areas. Backup or new couriers do face some problem because they need assistance to reach the destination address to pickup or deliver a package. The system does not provide such assistance to the courier.

1.4 Project Objectives
Given the problem description from the previous section, the objective of this research is to show how GPS and GIS provide a way to

e e
"

a

18

e

Dynamically allocate the pickups to the couriers. Trace a courier's current position based on geo-coordinates. Assist the courier in finding the customer address. Reduce vehicle maintenance cost annually. Reduce vehicle fuel charges annually. Reduce courier's overtime.

5

1.5 Project Modules & Contributions and Outline
1.5.1 Project Modules & Contributions
Following is the list of system modules and the brief introduction of their contribution to the system.

e

Automatic Vehicle Location (AVL)

AVL is an important part of this project. This module consists of Client /Server application with database as storage media. Clients send geo-Iocation to the server and the server continuously stores this data into the database. The main contribution of this module in the system is to store GPS data to trace the courier's truck. This module is a TCP/IP based multithreaded client/server application developed using Microsoft .Net (C#). Client side application continuously communicates to GPS on COM port to receive geo-Iocation (Latitude, Longitude, Speed and Direction) and sends to the server side application. A GPS enabled mobile device capable of wireless connectivity was used to develop a standard AVL system (refer to Chapter 2).

e

\Veb Service

Like website, this module also hosts on web server. This service acts as the gateway between server and the database. It provides a communication channel between server and database as well as website and database. The main contribution of this module in the system is to provide a data layer for an application with n-tier architecture. It is behind the firewall to avoid any SQL injection from the hackers (refer to Chapter 3). The development was done using Microsoft .Net framework (C#, ADO.Net).

e

Website (Central Application)

There is always a need to have some centralized application which can provide functionality to the users based on users group and role assigned. Users like to see the status of their pickup/delivery; administrators want to perform administrations and the dispatchers like to do dispatch and view real-time activities. The main contribution of this module in the system is to provide a centralized platform to be used by the administrators, dispatchers and the customers to retrieve the desired information. Microsoft .Net was used to develop various parts of this application. ASP.Net and Java Script were used on client side while all objects, controllers and the models were developed in C#. This website communicates to the web service which in tum communicates to the database via ADO.Net. Communication between website and database happens through the web service (refer to Chapter 3).
6

a

Database

A storage media is required in any application to store and retrieve the data. The main contribution of this module is to provide a data storage and retrieval media. Geo-data, pickup jobs, messages and alerts are stored in the database. Microsoft SQL Server 2005 was used to create the database and Microsoft T-SQL language was used to create various tables and stored procedures. The web service which is a data layer calls stored procedures to send/receive data from/to the database (refer to Chapter 3).

1.5.2 Report Outline
The remaining of the report is organized as following:

o

Chapter 2 covers background information on Automatic Vehicle Location Systems. The information involves a discussion of various techniques used in a standard AVL system, their pros and cons and the preferred technique that suits our requirement. This chapter also describes the communication media (wireless network), NMEA (National Marine Electronics Association) protocol, client/server TCP/IP communication protocol. It also covers Dijkstra (a shortest path algorithm). GIS has big contribution in this project so it is also covered in this chapter. Chapter 3 presents system design. It highlights system architecture. All objects including client/server application, web service, website, database and stored procedures are discussed here in details. It covers each and every object individually and how it is dependent on other objects. It also discusses the Google map and JavaScript APIs for GIS and Dijkstra algorithnl to find the shortest route. Chapter 4 provides the simulation result with step by step processing and execution. It also shows how client application connects to the server and how TCPIIP handshake works. It shows how GIS can be used to display data on the digital maps. Chapter 5 concludes recent work and summarizes future directions and endeavors of this project. Chapter 6 focuses on the references used.

e

.a

e
e

7

2
2.1

Background
Automatic Vehicle Location (AV L) Systems

A V L are computer-based vehicle trackin g systems. They are used in tracking fl eet, po li ce, transit ambulance, and mi litary purposes. FIGURE 2- \ sho ws a schematic diagram of an A VL system used in transit agenc ies. It shows the standard A VL system with GPS si gnal arriving from the satellites to the truck. T he cl ient communicates to the server and sends vehicle location to the dispatch soft ware.

FIGURE 2-1: Basic AVL System

AVL is an advanced method to track and monitor a vehicle remotely. Hardware based AVL system is installed in vehicle and this GPS enabled system receives signals from the communication satellites. The client software communicates to GPS receiver and determines its current location, speed and heading. This data can be stored locally or directly transmitted to the server. Currently, the server side application uses digital maps integrated with GIS (Geographical Information System) to display the current position of the vehicle. Most popular Automatic Vehicle Location is based on GPS, GIS and GSM (Global standard of mobile communication). AVL system provides up-to-date location information for emergency vehicles, delivery trucks, freight trucks, service vehicles (bus, cab, train) etc. The AVL system consists of a GPS enabled hardware installed on the truck or vehicle, a wireless communications network (GPRS or GSM) link between the vehicle and the dispatch center, and a web based tracking application for dispatch.

2.1.1 Benefits of AVL systems
The benefits of AVL systems are as follows:

e o e a e e

Provide real-time information to the public. Improve schedule reliability. Improve service efficiency. Reduce operating and maintenance costs. Enhance safety and security Transit agencies can respond more quickly to emergency situations

With advantages gained by using AVL systems, many transit agencies are planning to install AVL systems as the cost of AVL systems has dropped significantly.

2.1.2 Vehicle Location Technologies
AVL systems use one of the four types of nav'igation technology, or may combine two of these technologies to compensate for inevitable shortcomings of anyone technology. The four principal technologies employed for AVL systems are: 1. 2. 3. 4. Global Positioning System Signpost and Odometer Radio Navigation/Location Dead-Reckoning

9

2.1.2.1 Global Positioning System
G PS is the most reliable and accurate choice to detect locati on for Intelligent Transportation System (ITS ) as it prov ides the location of a vehicle wi th ac curacies of about 25-3 0 feet [3 ]. More than 90% A V L systems are being im plemented using thi s technology. GPS is a satellite-based navigation system which is funded and controlled by the US . G PS empl oys the signals transmitted fro m a network of sate llites orbiting the earth. These signals are picked up by a receiver on board the bus . The accuracy and reasonabl e cost of GPS makes it the most attractive and appeal ing option. Foliage, tall buildings, and tunne ls can bloc k the satellite signal, and at times satellite signals do not reach specific locations. Some systems use dead reckoning in combination with GPS to overcome such issues. The G PS consists of 24 satellites as shown in FIGUR E 2-2 [3]. To compute current position, speed and direction , signals from at least four satell ites are used as shown in FIGURE 2-3 [3].

GPS Nominal Constellatio n

20,200 kIn Altitudes. 55 Degree Inclination

FIGURE 2-2: GPS Satellites 131

FIGURE 2-3: Four satellites are needed to calculate the position 131

The GPS receiver measures the signal travel time from the GPS satellite, then it multiplies this time by the velocity of light to obtain the range between the satellite and the receiver[5]. Vehicle position can be calculated using four satellites. Once the position is calculated, the software in the GPS hardware transforms the geocentric into geographic co-ordinates using World Geodetic System 84 format (WGS84), (Latitude, Longitude, height), calculates the direction and velocity of the vehicle, then saves this information using the NMEA -0183. NMEA-0183 Standard input/output messages protocol could be in different types:
~ GGA Global positioning system fixed data.

G GLL Geographic position latitude/longitude
.. GSA GNSS DOP and active satellites GSV GNSS satellites in view RMC Recommended minimum specific GNSS data VTG Course over ground and ground speed

e a e

The Recommended Minimum Specific (RMC) GNSS data format is shown in TABLE 2-1 [6]: TABLE 2-1: JL\1C data format Name Message 10 UTC (time) Example $GPRMC 101841 A 43.680148 N -79.345025 E 1.2 15.7 100810 ddmm.mmmm N S ddmm.mmmm i
!

Units hhmmss.ss

I

i

!Description RMC protocol header . Universal Time Coordinates A = data valid or V data not valid North or = South

I Status
Latitude N/S Indicator Longitude E/W Indicator
I

E - East or W=West True E - East or W West

i

Speed Over Ground · Course Over Ground Date Magnetic Variation
i

Knots. Degrees ddmmyy Degrees

. Mode indicator Checksum <CR> <LF>

I

I
End of message termination

11

2.1.2.2 Dead-Reckoning
Dead reckoning systems use odometer and compass to determine the vehicle position by measuring distance traveled from a known location and direction of travel. Dead reckoning sensors can measure distance and direction from a fixed point. Typically, these systems act as a backup to another AVL system. Such systems are relatively inexpensive and self-contained on the bus. Dead reckoning, however, has a number of drawbacks. For example, uneven surfaces and hills can compromise the positioning information. Should the vehicle leave a fixed route, its location will no longer be known since there will be no waypoints off the fixed route. Also, accuracy degrades with distance traveled, and regular recalibration is required (tire circumference changes with wear).

2.1.2.3 Signpost IOdonleter Systems
Before GPS, the signpost lodometer system was the most common and popular navigation system. System comprises of a receiver mounted on the bus, while transmitters are placed along the route. Utility poles and signposts are most commonly used as mounting locations for these transmitters. The bus picks up a low-powered signal from these transmitters as it passes by and the mileage is noted from odometer. When the bus reports its location, the distance from the last pole is used to locate the vehicle's position on a route. The system can be run in reverse, with the transmitter on the bus and multiple receivers mounted along the route. There are some drawbacks of such systems. For example, if the bus needs to leave the route then there will be no information about the bus, so most agencies prefer to have a receiver on the bus. Similarly, creation of new routes requires the placement of new transmitters, and the system needs intensive maintenance due to the relatively high number of transmitters and receivers involved. This approach is very costly as it requires installation of infrastructure.

2.1.2.4 Radio Navigatioll ILocation
These systems also work in combination with other systems. Radio location systems use a low-frequency signal to cover the system, and the buses are located as they receive the signal. LORAN-C (Long Range Aid to Navigation) is the most common type of landbased radio location. A LORAN receiver on a vehicle makes time measurement of signals transmitted from at least three locations. These measurements determine how far away the vehicle is from the fixed locations transmitting the signals. Applying the fixed location of the transmitters from which the signals were received, the receiver uses triangulation to calculate the vehicle's latitude and longitude. Although such systems are very simple but they are subject to some major drawbacks. For example, overhead power lines or power substations can cause signal interference, and signal reception is typically very poor in canyons. TABLE 2-2 shows advantages and disadvantages of each technology.

12

TABLE 2-2: Advantages and disadvantages of different location technologies. Type GPS Advantages 1 - Accurate 2 - Global coverage 3 - Moderate cost per vehicle 1 - Inexpensive 2 - Self-contained on vehicle (no infrastructure costs) 3 - Only odometer needed (if onroute is assumed) Disadvanta!!es 1 - Signal attenuation by foliage and tunnels. 2 - Subject to multi-path errors 1 - Accuracy degrades with distance traveled. 2 - Requires direction indicator and maybe map matching for off-route use. 3 - Corrupted by uneven road surfaces, steee hills, or magnetic interference. 1 - Requires well-equipped infrastructure 2 - No data outside of deployed infrastructure. 3 - Frequency of updates depends on densitJ:: of signQost 1 - Signals are susceptible to electromagnetic distortion by power lines, neon signs, railroad tracks, etc.

i

Dead Reckoning

Signpost and Odometer

Low in-vehicle cost No blind spots or interference Repeatable accuracy

Radio Navigation! Location

Moderately accurate Costly

2.2 Data Transmission
Position information, regardless of which location technology is adopted, needs to be transmitted to the dispatch center. Polling and Reporting are the two most common data transmission technologies [1, 7]. With polling technology, the server requests each bus for its location at regular intervals. With the reporting method, each bus reports its location after fixed interval of time.

2.2.1 Global System for Mobile Communication (GSM)
GSM is the most popular second generation (2g) digital cellular communication system in the world. In general, there are four main versions of GSM system, depending on the operating frequency. These are: (a) GSM 900, (b) GSM 1800, (c) GSM 1900 and GSM 450. One of the popular GSM services is the Short Message Service (SMS) that allows users to send and receive point-to-point text messages llP to a few tens of bytes. The SMS service provides a basic tool to transfer data used to estimate position or co-ordinates of the mobile station [8, 9]. Because of the limited data transfer in the GSM, new technologies have been developed on top of GSM sllch as 2.5g General Packet Radio Service (GPRS), and the third generation (3g) cellular system Universal Mobile Telecommunications System (UMTS).
13

GPRS, which is often referred to as 2.5g, is emerged to optimize the Internet/Intranet access capabilities. GPRS is a new IP-based technology of packet data transmission in a mobile communications network [8]. The main features of GPRS technology [8]:

e e
.a

GPRS is a packet-based network of data transmission. GPRS mobile devices are always connected to the network which gives the possibility of bidirectional communications between the client and server on the Internet instantaneously . The subscriber will be able to pay only for the data transmission and not for the time period of subscription to the network. This advantage decreases the cost of AVL system dramatically instead of using SMS whose charging algorithm is based on connection time rather than amount of traffic (Packets) transferred.

2.3 Geographical Information System (GIS)
Geographic Information System (GIS) is mainly a computer based information system used to represent /analyse the geographic features digitally [31]. A Geographic Information System (GIS) captures, stores, analyzes, manages, and presents data that is linked to location. Technically, GIS is defined as information systems which includes mapping software and its appiication with remote sensing, land surveying, aerial photography, mathematics, photogrammetry, geography, and tools that can be implemented with GIS software [31]. The power of a GIS comes from the ability to relate different information in a spatial context and to reach a conclusion about this relationship. Most of the information we have about our world contains a location reference, placing that information at some point on the globe. For example, when rainfall information is collected, it is important to know where the rainfall is located. This is done by using a location reference system, such as longitude and latitude, and perhaps elevation. Comparing the rainfall information with other information, such as the location of marshes across the landscape, may show that certain marshes receive little rainfall. This fact may indicate that these marshes are likely to dry up, and this inference can help us making the most appropriate decisions about how humans should interact with the marsh. A GIS, therefore, can reveal important new information that leads to better decision making. "Every object present on the Earth can be geo-referenced" [31], is the fundamental key of associating any database to GIS. Here, the term "database" is a collection of information about things and their relationship to each other and "geo-referencing" refers to the location of a layer or coverage in space defined by the co-ordinate referencing system (X, Y and Z co-ordinates),

14

Work on GIS began in late 1950s, but the first GIS software came only in late 1970s from the lab of the ESRI. Canada was the pioneer in the development of GIS as a result of innovations dating back to early 1960s. Much of the credit for the early development of GIS goes to Roger Tomilson. Evolution of GIS has transformed and revolutionized the ways in which planners, engineers, managers etc. conduct the database management and analysis.

2.3.1 Philosophy of GIS
The proliferation of GIS is explained by its unique ability to assimilate data from widely divergent sources, to analyze trends over time, and to spatially evaluate impacts caused by development [31]. For an experienced analyst, GIS is an extension of a person's own analytical thinking. The system has no in-built solutions for any spatial problems; it depends upon the analyst. The importance of different factors of GIS in decreasing order is as below:
Itt Spatial Analysis

·

Database a Software 18 Hardware

GIS involves complete understanding about patterns, space, and processes or methodology needed to approach a problem. It is a tool acting as a means to attain certain objective quickly and efficiently. Its applicability is realized when the user fully understands the overall spatial concept under which a particular GIS is established and analyses his specific application in the light of those established parameters. Before the GIS implementation is considered the objectives, both short term and long term, have to be considered. Since the effectiveness and efficiency (i.e. benefit against cost) of the GIS will depend largely on the quality of initial field data captured, organizational design has to be decided upon to maintain this data continuously.

2.3.2 Advantages and Applications of GIS
The Geographic Information System has been an effective tool for implementation and monitoring of municipal infrastructure. GIS is being used in various fields [32]. The use of GIS has been in vogue primarily due to the advantages mentioned below:
t8 Planning of project

·

Make better decisions

<it Visual Analysis iii Improve Organizational Integration

15

Following is the few example application of GIS [32]. GIS is used in a variety of agricultural applications such as managing crop yields, monitoring crop rotation techniques, and projecting soil loss for individual farms or entire agricultural regions. A GIS is a software tool for managing business information of any kind according to where it is located. It can help in tracking of customers, site businesses, target marketing campaigns, optimize sales territories, and model retail spending patterns. It helps understanding and evaluating the data by creating graphic displays using information stored in the database. Cities and utilities use GIS every day to help them map and inventory systems, track maintenance, monitor regulatory compliance, or model distribution analysis, transformer analysis, and load analysis. GIS is used every day to help protect the environment. As an environmental professional, one can use GIS to produce maps, inventory species, measure environmental impact, or trace pollutants. The environmental applications for GIS are almost endless. Geologists use GIS every day in a wide variety of applications. GIS can be used to study geological features, analyze soils and strata, assess seismic information, or create 3dimensional displays of geographic features. Mapping is an essential function of a GIS. Professionals from variety of fields are using GIS to help others understand geographic data. A person doesn't have to be a skilled cartographer to make maps with a GIS.
It can help with risk management and analysis by showing which areas will be prone to

natural or man-made disasters. Once identified, preventive measures can be developed that deal with the different scenarios.
It is being used to manage transportation infrastructure or logistical problems. GIS can be used in monitoring rail systems and road conditions or finding the best way to deliver goods or services, AVL (Vehicle Tracking System, Intelligent Transportation Systems) and transport arrival/departure schedules

16

2.3.3 GIS Location and Coordinates
Each location has some input information and GIS processes that infonnation of the object. This is commonly done by identifying the X-Y earth coordinates of an object at a time and place [36]. The most common coordinate system is Longitude and Latitude as shown in the FIGURE 2-4.

Greenwich

Meridiart

-90'
- - - Longitude - - -...

FIGURE 2-4: Latitude I Longitude Concepts (36]
Longitude (abbreviation: Long. or (l) pronounced lambda) is the angle east or west of a reference meridian between the two geographical poles to another meridian that passes through an arbitrary point. A meridian is a line on the surface of the earth extending from the North Pole to the South Pole, always at the same longitude. For instance, any point lying on north-south meridian that is at a 22.5° angle to the West of Greenwich, England, lies on the meridian of - 22.5 degrees longitude. All meridians are halves of great circles, and are not parallel and they converge at the north and south poles. Latitude (abbreviation: Lat. or ((j)) pronounced phi) is the angle from a point on the Earth's surface and the equatorial plane, measured from the centre of the sphere [33]. Lines joining points of the same latitude are called parallels, which trace concentric circles on the surface of the Earth, parallel to the equator. The North Pole is 90° N; the South Pole is 90° S. The 0° parallel of latitude is designated the equator. The equator is the fundamental plane of all geographic coordinate systems. The equator divides the globe into Northern and Southern Hemispheres. FIGURE 2-5 shows the east and west angles for longitude and north and south angles for the latitude.

17

FIGURE 2-5: Northern /Southern hemisphere with Longitude/Latitude

A line passing to the rear of the Royal Observatory, Greenwich (near London in the UK) has been chosen as the international zero-longitude reference line, the Prime Meridian. Places to the east are in the eastern hemisphere, and places to the west are in the western hemisphere. The antipodal meridian of Greenwich is both 180 0 W and 1800 E.

2.3.3.1 Geo-coding and Reverse Geo-coding · Geo-coding
Geo-coding is the process of finding geographic coordinates (often expressed as Latitude and Longitude) from physical address, such as house number, street address, or zip code (postal codes). With geographic coordinates the features can be mapped and entered into Geographic Information Systems, or the coordinates can be embedded into media such as digital photographs via geo-tagging. A Geo-code representation format is a combination of some or all of the following geospatial attributes [34]: .. Geo-code Format Registry Number, · Latitude (it Longitude II Altitude iii Date lit Local time · Global time in Universal Time Coordinates (UTC) format

18

·

Coordinate Reference System - (Coordinate Reference System Type Registry Number - ISO 19115, a Geodetic Reference Ellipsoid, Registry Number, Geodetic Reference Datum Registry Number, Coordinate Format Registration Number - ISO 19145) e Coordinate Sensor Accuracy for Latitude, Longitude and/or Altitude 41 Internet Protocol version 4 (IPv4) address or Internet Protocol, version 6 (IPv6) address in Compressed, Uncompressed or Fully Uncompressed decimal format · Other geospatial attributes

Mandatory attributes included in the Geo-code representation format are Geo-code Format Registry, Latitude, and Longitude. All other attributes are voluntary. When customer calls CCD and requests to create a pickup, the system performs geo-coding to convert customer's physical address to geo-Iocation since digital maps can understand only geo-Iocations.

· Reverse Geo-coding
Reverse geo-coding is the process of back (reverse) coding in which a point location (Latitude, Longitude) is converted to a readable address or place name [35]. This permits the identification of nearby street addresses, places, andlor aerial subdivisions such as neighborhoods, county, state, or country. Combined with geo-coding and routing services, reverse geo-coding is a critical component of mobile location-based services and Enhanced 911 to convert a coordinate obtained by GPS to a readable street address which is easier to understand by the end user. Reverse geo-coding can be carried out systematically by services which process a coordinate similarly to the geo-coding process. For example, when a GPS coordinate is entered, the street address is interpolated from a range assigned to the road segment in a reference dataset that the point is nearest to. If the user provides a coordinate near the midpoint of a segment that starts with address 1 and ends with 100, the returned street address can be somewhere near 50. This approach to reverse geo-coding does not return actual addresses, only estimates of what should be there based on the predetermined range. Alternatively, coordinates for reverse geo-coding can also be selected on an interactive map, or extracted from static maps by geo-referencing them in a GIS with predefined spatial layers to determine the coordinates of a displayed point. Many of the same limitations of geo-coding are similar with reverse geo-coding. When customer browse website and wishes to see the status of his pickup request, the system performs reverse geo-coding to convert geo-Iocation of the courier's truck to physical address since customers are interested in physical address only.

19

2.4 Dijkstra
In order to move from one location to another, the system must determine the path or the route links between source and destination. This can be achieved by using some algorithm which takes the dynamic decisions and directs the datagram from source to the destination. This is better known as Routing Algorithm. Routing Algorithms are classified depending upon the technique they employ to calculate the shortest path. Dijkstra Routing Algorithm is one of them. Dijkstra's Algorithm is one ofthe most popular algorithms in computer science. It is also popular in operations research. It was conceived by Edsger Dijkstra, a Dutch scientist in 1956 [11]. The algorithm is generally used in routing and it solves the single source shortest path for a graph with non-negative edge costs and it produces a shortest path tree.

2.4.1 Basic Flowchart
FIGURE 2-6 shows basic flowchart of Dijkstra's Algorithm. It describes how a shortest path establishes between source and destination.

Identify source node and destination node as V1 and V2

Set T-node's label to "permanent" i and update neighbour's status e..----~ record set

-------'

Identify the tentative node linked to V1 that has the lowest weight and set it as T-node

No

Based on information in status record,l set, do these until u reach V1. The string of link represents the best route

FIGllRE 2-6: Dijkstra Algorithm Flowchart

20

In route optimization, shortest path is the cost and this algorithm finds the path with
lowest cost between a given source node and all other adjacent nodes till destination. It can also be used to find the costs of shortest paths from a single node to a single destination node by stopping the algorithm once the shortest path to the destination node has been determined. Routing can be compared to the process of building graphs and directing the datagram from source to destination [30]. In order to make such dynamic routing decisions, router exchange information using a special algorithm knmvn as Routing Algorithm [28].

2.4.2 Routing Techniques
The Routing Techniques can be sub-divided into following categories:

e a o \& e e

Fixed / Deterministic Adaptive Flooding Multicasting Hierarchical Random

2.4.2.1 Fixed !Deterministic
Practical multi-computers use Deterministic Routing [20]. Fixed Routing has been widely used in practice due to its simplicity. However, message cannot take advantage of alternative paths to avoid congested network regions. Dimension-Ordered Routing [21], [22] is a typical example of deterministic routing where messages visit network dimensions in a predefined order.

2.4.2.2 Adaptive
Many fully Adaptive Algorithms, which overcome the performance limitations of deterministic routing, have been proposed in the past few years [23], [24], [25]. For instance, the concept of virtual channels has been generalized in [26] to develop deadlock-free fully adaptive routing algorithms.

21

2.4.2.3 Flooding
A static type of routing in which every incoming packet is sent out on every outgoing line except the one it arrived on [28]. Flooding is not practical in most applications, but it does have some uses. For example, in military applications, where large number of routers may be blown to bits at any instant, the tremendous robustness of flooding is highly desirable.

2.4.2.4 Multicasting
For some applications, widely-separated processes work together in groups. Sending a message to such a group is called Multicasting, and its routing algorithm is called Multicast Routing. To do multicast routing, each router computes a spanning tree covering all other routers in the subnet.

2.4.2.5 Hierarchical
As Networks grow in size, the router's routing tables grow proportionally. Not only router memory is consumed, but more CPU time is needed to scan them and more bandwidth is needed to send status reports. Such problems are solved by using Hierarchical Routing [28], where the routers are divided into regions, with each router knowing all the details about how to route packets to destinations within its own region, but knowing nothing about the other region.

2.4.2.6 Random
In case of Random Routing, a node selects only one outgoing path for retransmission of an incoming packet. The outgoing link is chosen at random, excluding the link on which the packet arrived [30]. It is further sub-divided into two categories: Distance Vector Routing Algorithm and Link State Routing Algorithm [28], [30]. Bellman-Ford Routing Algorithm [28], [30] is an example of the former while Dijkstra Routing Algorithm [28], [30], [31] belongs to the latter.

2.4.3 Algorithm
Dijkstra Algorithm is one of the most common shortest path algorithms and can be applied to network routing. This network routing can either be a LAN/WAN etc. routing or geo-routing (roads network). The Algorithm is an iterative process that works through a graph or a set of vertices & paths to calculate the shortest path from anyone source node to every other node in the set.

22

2.4.3.1 Problem Analysis
1. 2. 3. 4. 5. 6. 7. Read the number of nodes present in the network. Read the activities between all the nodes. Identify Source and Destination. Find the distance of all the nodes from the source. Select the node whose distance from the source is the least. Lock the node that has passed i.e. source node in this case. Find the distance of remaining nodes from the selected node and repeat steps 5 & 6 till the destination node is reached. 8. List all the selected nodes from source to destination in the sequence in which they are generated above to give the Optimum Path.

23

2.4.3.2 Detailed Flowchart
FIGURE 2-7 shows the detailed flowchart of Dijkstra's Algorithm. It describes step by step calculation of the shortest path between source and destination.

Read the following 1 - Number of Nodes 2- Activities between Nodes 3 - Source and Destination

Construct the Network 1 Draw the Nodes 2 - Connect the Nodes the activities between which is less than infinity

~________-=- . -...IT_-:-_ _ _ _ _ _ __ IGenerate Structure for each Node

I

1 - Form an array of all the connected Nodes 2 - Form a corresponding array of Activities

Arrange the array for each Node using Insertion Sort.

Calculate the Optimum Path Starting from the Destination Node move to the Node which is 'at the shortest distance at each successive Node till the Source Node and add up the activities through that path.

I

iArrange all the route arrays 'depending upon the total activities i using Insertion Sort

1 - Write the Optimum Path between Source and Destination 2 - Show the total number of Activities along the Path.

Display the Shortest path 1 - Draw the Nodes 2 - Connect the Intermediate Nodes between Source and Destination

FIGURE 2-7: Detailed f'lowchart

24

3 System Design
Thi s chapter cover the design of the project in detail s. It provides detai led information about the architecture, various modules and how these modul es are integrated to become a complete system.

3.1

A rchitectu re

The system was des igned on MVC architecture. This is n-tier architecture comprises of Presentation, Business and Data layers. Presentation layer is an interface to the user/customer and provides all GU rs and user control validations. Busi ness layer as all business rules objects. Data layer is an interface to the database. Business layer validat s/appl y business rules and pass the request to data layer which ir turns communicates to the database to send/receive information. FIGURE 3-\ shows the system architecture. It describes various modules of the system and how they interact with each other.

~ I

Application Server

W eb Server

FIGURE 3-1: System Architecture

3.1.1 Modules I Development Technologies
TABLE 3-1 shows various modules of the standard APDIS system and the technologies used to develop these modules. TABLE 3-1: APDIS Models Module Client Role Technology An application which Microsoft .Net (C#, WinForms), communicates to the server and TCP/IP Sockets, resides in a GPS enabled device GPS communication with wireless connection capability. The device resides in the courier's truck Accepts connection requests from . Microsoft .Net (C#, WinForms), the clients, start threads. · TCP/IP Sockets, Communicate to the web service to Multithreading send/receive data to/from the database Data layer which communicates to Microsoft .Net (C#), the database via ADO.Net, calls ADO.Net stored procedure from the database to send/receive data Microsoft .Net (ASP.Net, C#), A centralized application that Google Map, administrator, dispatcher and Google Programming APls, users/customers need to use to JavaScript perform tasks and view real-time activities Centralized data storage media use Microsoft SQL Server 2005 (T -SQL, Stored Procedures) to store data for the whole system

Server

i
!

Web Service

Website

Database

26

3.2 Components /l\1odules 3.2.1 Server
Server communicates to the clients on port number 8001. It controls handshake, broadcast and send/receive messages (tokens) to/from the clients. Server has the following two communication interfaces:

1. Client
Client side application resides in the mobile device. Communication happens through TCP/IP protocol via wireless network. All clients connect to the server through the same port (8001) and IP (IP address of the server, local-host in current scenario). 2. Database Server communicates to the database through a web service. The web service is data layer and is hosted on the web server. It communicates to the database by calling stored procedures which avoids any chance of SQL injection. All read/write functionalities to/from the database are performed through the web service. This web service is behind the firewall and is in DMZ (demilitarized zone). It is necessary to secure the system so that database server is not exposed to the outer world. FIGURE 3-2 shows the client Iserver communication through wireless network.

Centralized Database Server

App Server

FI(;URE 3-2: Client I Sen:er communication yia wireless

27

Server continuously polls the port 8001 for any new connection. Whenever a client connects to the server through this port, server calls web service to authenticate the user credentials and write this logging information to the database table(s).

3.2.1.1 TCP Connection Establishment Process
Before client sends geo-Iocation data to the server, a TCP connection must be set up between them. This process is also called connection establishment and it involves an exchange of messages that transitions both devices from their initial connection state (CLOSED) to the normal operating state (ESTABLISHED).

3.2.1.2 Connection Establishment Functions
The client Iserver connection establishment process accomplishes several things as it creates a connection suitable for data exchange:

e

Contact and Communication: The client and server make contact with each other and establish communication by sending messages to each other. The server usually doesn't even know what client it will be talking to before this point, so it discovers this during connection establishment. Vehicle Number: Each client (courier in this case) has own credentials which are sent upon connection request. Courier sends vehicle number plus user ID and password to the server and the server authenticates these credentials before accepting this connection. Parameter Exchange: Certain parameters may exchange that control the operation of the TCP.

o

·

3.2.1.3 Control Messages
Control messages controls the transmission. TCP uses these messages to manage the process of contact and communication. A set of control flags in the TCP header indicates whether a segment is being used for control purposes or just carrying data. The first byte was introduced as data type to indicate the type of data contains in the packet. First byte in the data transmission has the following values: 0: It indicates that the client is requesting for login. 1: It indicates that the client is requesting to logout.

28

2: It indicates that the client is sending data. 3: It indicates that the system is sending the message. Second byte indicates the number of records contains in the packet while third byte contains the actual data delimited by semicolon.

3.2.1.4 Pickup Job Assignment
As soon as the server application starts, it starts an event handler which continuously polls the web service to check for the database jobs table for any new job. It performs the following actions upon receiving a new job (dispatcher creates a new job from the Dispatch application and this record is saved into the jobs table) from the database.

e

Broadcast a message "SEND ME YOUR LOCATION" to all of the connected clients in that region. The clients in turns send their location (LONGITUDE, LATITUDE).
In

a
e e
a

the form of 2 co-ordinates

Performs reverse geo-coding to resolve customer's address to geo-Iocation. Calls the web service to mark the status of this job as "SENDING". Calls the web service to update the geo-Iocation of all of the connected clients . Executes Dijkstra's Algorithm to calculate the nearest client to the customer's location.

.a

13 Sends the job to the nearest client in the form of free test message.

e

Calls the web service to mark the status of this job as "SENT".

\& Receives the acknowledgement from the client.

o e

Calls the web service to mark the status of this job as "VIE\VED". Client sends the "COMPLETE" status once the courier pickups the package.

\t Calls the web service to mark the status of this job as "COMPLETED".

29

3.2.1.5 Package Delivery
Delivering a package to a customer starts after the pickup process. During pickup, a package gets picked up and delivery process helps delivering it to the destination. The process undergoes a series of actions before delivering the package to the customer.

e

In Terminal o The package is in the terminal and ready to be sorted for specific region (postal code). The status of the package in this phase is called "IN TERMINAL".

18 Out For Delivery (OFD)
o

The package is ready to go out for the delivery. In this phase, all the packages in the terminal are scanned and sorted based on postal addresses. The status of the package in this phase is "OUT FOR DELIVERY".

e

In Transit o The package is in transit (moving from one terminal to another). The status of the package in this phase is changed to "IN TRANSIT". Delivery Failure o The courier is unable to deliver the package because of various reasons. It can be wrong address, office closed, locked etc. Delivered o The courier has successfully delivered the package to the customer. This is the last phase of the life cycle of a package. The status of the package in this phase becomes "DELIVERED".

e
e

FIGURE 3-3 shows how client and server communicate to each other via wireless network.
Database

\Veb Service

Server

FIGURE 3-3: Clicnt/Scn'cr communications

30

3.2.1.6 Startllp Flow
FIGURE 3-4 shows the flowchart of the server startup process.

Open Server Socket on IP 127.0.0.1 and port 8001

Server Socket Opened

No

?
Yes Start Listening the Port 8001

Show "Unable to open server socket at 127.0.0.1 and Port 8001" message and exit

Client Connected OK?

No

Connect to Web service to Authenticate the user

Yes Update Connected Client list, create Thread and pass control to it

'---------I

FIGlJRE 3--1:

Sl'rHr

Start-up

PrOCl'SS

31

3.2.1.7 Processing Jobs/Messages Flow
FIGURE 3-5 shows the flowchart of processing a job or a message
Start Timer to execute every 10 seconds

A
Execute GetJobsO method to get pickups and I messages from the database

I Send message text to
the user
fool,

~==-<

Job

Convert customer's address to for all users in this area

~-----.... geo-Iocation. Get geo-Iocation

I
i
I

No
L . - . . - - . - - - - - - -_ _.t

r-:::C:-al:-cu~late Dist~~a~nc~e-:b~e:-tw-e-en-

._~r

user current position and customer's address

A

Put the status in Pending for later processing

No

.Send the Pickup job to ! the user (courier)
I

FIGURE 3-5: Processing Job/~]cssage Flow Diagram

3.2.2 Client
Each courier carries a mobile device (also called as scanner). Client side application resides in it. This application communicates to the server through TCP/IP communication protocol. The main functionality of this application is to communicate to GPS through COM port at regular interval of time and sends this information to the server. To avoid wireless network traffic, it is very easy to change the existing application so that the client may send geo-Iocation only when requested by the server. The application also called as P&D (Pickup & Delivery) takes care of all the activities performed by the couriers. A courier starts his day by Signing-On the application, which means the client side application makes connection to the server through TCP/IP.

32

FIGURE 3-6 shows high level communication between clients and server. It shows the on road courier trucks are connected to the server wirelessly.

FIGURE 3-6: \Vireless communication

33

3.2.2.1 Mobile Device
Motorola MC -70 is designed and manufactu red by Motoro la (formerl y Symbol) . This device is capabl e of GPS and wireless communication. It communicates to the GPS vi a COM port and NMEA protocol and connects to the wireless world using GSM/GPRS network. The client side app licatio n resides in thi s device, continuo usl y reads COM port to read geo-information (geo- Iocation, speed and direction) from the GPS and sends to the server in the predefined data format. CanadaPost and Puro lator are currently using these devices. FIG RE 3-7 shows Motorola .\IlC-70 scanner which operates on windows mobile platform .

FIGURE 3-7: Mobile Device used by a Courier
34

3.2.2.2 Login Flow
FIGURE 3-8 shows the flowchart of a client's login process. The process explains all the steps required for a client to login ~end geo-data to the server.

Server Status Started

No Show "Server Not Started" >---=-:":::'---11001 message and exit

?
Yes

Open Client Socket on port 8001

No

. Show "Unable to Connect to ·Port 8001" message and exit

Yes

Send user's credentials to the server

No

Show "Unable to Connect to

"'>----iOo1 Port 8001" message and exit

Start timer event to invoke every 10 seconds

Receive data from the server 1 4 - - _ in OnRecieveO method

Execute GetGPSDataO method every 10 seconds

Process the data received from the server

'------j

Send Data to the server on port 8001

FIGLRE 3-8: Login Flo·w Diagram

35

3.2.2.3 Data Protocol
T ~BLE 3-2 shows how the data transmission is controlled using control bytes. Both chent. and server must agree on some common protocol otherwise the incoming and outgomg data can not be correctly interpreted. Client and server both follow the same protocol while sending /receiving data.

TABLE 3-2: Client / Server data protocol CharacterlByte Position 1 Data T]'pe Description Possible Values 0= LOGIN, 1 = LOGOUT, 2=DATA, 3 = MESSAGE 1 -- 5

It indicates data type
Integer

2

Integer String

3

It indicates the total number of records contained in the packet Data records separated by comma. Entities within the records are separated by semicolons

Clients can send login, logout, data or message to the server. Similarly, server can send jobs and messages to the clients. TABLE 3-3 shows some examples of the data transmission. Client and server must strictly follow this data protocol. TABLE 3-3: Client / Server data protocol examples Type Example LOGIN O,l,AYA Y285;***** 1,1, AYAY285 LOGOUT 2,2,56.33 :34.22;60;N,57 .29;34.11 :60;N DATA MESSAGE 3,2, HI THIS IS TEST MESSAGE, CAN YOU PLEASE SEND SOME WITH A SCANNER AS I AM HA VING PROBLEM WITH THIS DEVICE. I AM AT BRITANIA/HURONTARlO INTERSECTION

3.2.3 Web Service
The most important part of the APDIS system which establis~es a. se~ured communication channel between the server/website and the database. ThIS servIce IS the data layer of the system and is deployed on the web server and it avoids any SQL injection from the hackers. It receives requests from the server, passes to database 36

through stored procedures, retrieves the result and sends back to the server. It also receives requests from the web based APDIS application and sends updated status back. The application in turn updates various status windows. According to the World Wide Web Consortium (W3C), a Web service is a software system designed to support interoperable machine-to-machine interaction over a network. It has an interface that is described in a machine process-able format such as Web Service Description Language (WSDL). Other systems interact with the web service in a manner prescribed by its interface using messages, which may be enclosed in a Simple Object Access Protocol (SOAP) envelope, or follow a Representational State Transfer (REST) approach. These messages are typically conveyed using Hyper Text Transfer Protocol (HTTP), and are normally comprised of Extensible Markup Language (XML) in conjunction with other web-related standards. Software applications written in various programming languages and running on various platforms can use web services to exchange data over computer networks in a manner similar to inter-process communication on a single computer. Web services describes a standardized way of integrating web-based applications using the XML, SOAP, WSDL and Universal Description, Discovery and Integration (UDDI) open standards over an internet protocol backbone. XML is used to tag the data, SOAP is used to transfer the data, WSDL is used for describing the services available and UDDI is used for listing what services are available. Used primarily as a means for businesses to communicate with each other and with clients, web services allow various organizations to communicate data without intimate knowledge of each other's IT systems behind the firewall. Unlike traditional client/server models, such as a web server/web page system, web services do not provide the user with a Graphical User Interface (GUI). Web services instead share business logic, data and processes through a programmatic interface across a network. Developers can then add the web service to a GUI (such as a web page or an executable program) to offer specific functionality to users. FIGURE 3-9 shows how the data exchange happens among various tiers and web service.

D
Server Website Web Service Database

FIGURE 3-9: Data Exchange between tiers and database

37

3.2.3.1 Process Flow
FIGURE 3-10 shows the flowchart of the web service functionality. It describes how this module communicates to the database to insert/retrieve the data and returns to the server or website.

No

· Connect to Database Server

I
No

Connected

'>----

j
!

?
Yes

Return "Unable to Connect to SQl Server 2005" message to the caller

I
r-----,

Call relevant Stored Procedure in the database.

Expected Return Data

No

Return true/false status to the caller

?
Yes

Return data to the caller

End

FIGURE 3-10: Process Flow Diagram

38

3.2.4 Web Site
The main function of this application is to provide a central mechanism for the users/customers, administrators and dispatchers to perform their tasks. This is a real time monitoring as well as administration tool. The administrators use this application to administrate the system, dispatchers use it to insert new job whenever any user calls the call center or sending messages to the online users, and customers use it to track their pickup requests. It continuously communicates to the web service for any new or updated status. As soon as the user log-in, the administration shows this user as logged-in and ready to accept any call. It continuously updates the status of the logged-in clients, jobs status, maps, and vehicle locations etc.

3.2.4.1 User Role Authentication
FIGURE 3-11 shows flowchart of the user roles authentication.

Hyperlink Clicked

Trace Package I
.. 'I

TracePackage.aspx r~l pa e ' ,

ShOW-----"l

User Clicked Track Pickup Butto

No

I

?
No User Clicked Submit Button ? Yes Check the status of the pickup

*

[I'

,.
i

Get UserlD and Password from the text boxes and call Webservice to authenticate user group and role

No

j

I ~
Yes Load digital map and show courier's I current position and the estimated I time taken to reach customer's address

Show information I message to the user .

I

r-ShOW information ~sage to the user I

I

No

Authenticated

?

Show the screen based on role. (Dispatch.aspx for dispatcher, Admin,aspx for administrator

e
I

FIGURE 3-11: User Authentication

39

3.2.5 Database
Oracle and SQL Server 2005 are the most popular Relational Database Management Systems (RDBMS) these days. Currently, most of the windows and web based applications are being developed using Microsoft technologies such as .Net (ASP.Net, C#, ADO.Net) so SQL Server is an ultimate choice for most of the companies. The web service communicates to SQL Server through stored procedure to avoid any SQL injection. All jobs, vehicle locations, client messages and clients logged-in status are continuously updated in the database. Database is the most important entity of the AVL system. It stores all the information coming from the vehicles for real-time and historical purposes. The dispatch application uses this data and displays the vehicles location in real-time mode while administrators and dispatchers can generate various history reports using archived data. TABLE 3-4 shows a list of database tables created for data storage and retrieval.

TABLE 3-4: Database Objects (Tables) Table Name
dbo.AlertHistory

Columns
(group_id] [create_date] [DATETIME] [user_id] [alert_idJ [update date] [alert_id] [alert_name] [ConfirmationNo [FirstName] [LastName] [Address] [City] [State] [Zip] [HomePhonej [CellPhonej [DeviceId] [DeviceNamej [GroupId] [RoleId] [Details] [JobId] [WirelessStatusldj [UserId] [Dispatcherld] [JobStatusld] [JobDate] [CreateDate] [AcceptedBy] [Instructions] [ConfirmationNo]

Brief Description The table is used to store history of the alerts generated by the system. These alerts are mostly variances which can happen

dbo.Alerts dbo.ClientDetails

The table is used to store summary of the alerts generated by the system. The table is used to store detailed information about the customer upon creating a pickUp request

" .. "

,

dbo.DeviceInfo dbo.Groups

dbo.Jobs

Static table that shows various type of supported devices (GPS, Scanner, PC) The table is used to store various groups that a newly created user can belong to. User is belong to a group and group is assigned role The table is used to store job information. A newly created pickUp job goes under various steps before completion

i
4\

I

40

dbo.JobStatus

[ScheduleTime] [JobStatusld]
]

dbo.Messages

dbo.Roles dbo.Routes dbo.SendEmail dbo.Users

[FromUser] [ToUser] [MessageRead] [CreateDate] [ReadDateJ [ProcessedDatel [MessageDetails [MessageType] [Roleld] [Details] [Routeld] [group_idJ [send email id [email address] [UserldJ [Password] [Home_Phone] [MobilePhone] [Addressl] [Address2] [City]
[

The table is used to store the current status of the job (Not Assigned, Assigned, Sending, Pending, Sent, Viewed, Rejected, Completed) The table is used to store the messages send to/from the users (couriers or bus drivers)

Group table is linked with this table as Role is assigned to the group rather than user itself The table is used to store the route information The table is used to store the emails sending to the administrators, dispatchers (for future use) The table is used to store the users profiles.

dbo.UsersOnline dbo.VehicleData

[ZipCode] [Groupld] [Userld] [Vehicleld] [Longitude] [Latitude] [Speed] [Direction] [CurrentAddress] [CreateTime] [Deviceld] [Routeld] [CurrentStopld] [CurrentSegmentld] [TripStatus] [WirelessStatusldj [Description]

The table is used to store the online users that are currently connected to the system via wireless The table is used to store the GPS data coming for the Client application.

· ~. 1

dbo.WirelessStatusType

The table is used to store wireless status type (Not Assigned, Assigned, Wireless Sent, Completed)

41

Table 3-5 shows a list of stored procedures. These procedures are invoked by the web service to communicate to the database.

TABLE 3-5: Database Objects (Stored Procedures) Id
1 3

Stored Procedure Name
dbo. [APDIS AddUser] dbo. [APDIS_CreatePickup]

Brief Description
Called from data layer to add a new user Called from data layer to create a pickup as requested by the customer. Administrator or dispatcher can perform this activity Called from data layer to delete an existing user from the system. Administrator or dispatcher can perform this activity Called from data layer to get geo-coordinate of the segments within each bus stop Called from data layer to get pickup details (address, scheduled pickup time etc.). Called from data layer to get the pickup details. I t can be in any status. Administrator or dispatcher can perform this activity Called from data layer to get the wireless status Id of the pickup (Delivered to the courier or still within the system) Called from data layer to get the role of the user. This is called from website. Called from data layer to insert GPS data coming from the client Called from data layer to insert message details. Administrator or dispatcher can perform this activity Called from data layer to get a list of users that exist in the system. Administrator or dispatcher can perform this activity Called from data layer to get a list of online users. Administrator or dispatcher can perform this activity Called from data layer to get the details of the user. Administrator or dispatcher can perform this activity Called from data layer to get Vehicle information based on user Id Called from data layer to insert message details for the server application to send to the online user Called from data layer to modify details of an existing user from the system. Administrator or dispatcher can perform this activity Called from data layer to validate user's credentials. I t is called by the server upon receiving wireless connection from the user

4

dbo. [APDIS _DeleteUserInfo]

5

dbo. [APDIS_GetCoordinates] dbo. [APDIS_GetPickupDetails] dbo. [APDIS_GetPickups]

6
7

8

dbo. [APDIS_GetPickupStatus]

9 12
13

dbo. [APDIS_GetRole] dbo. [APDIS - InsertData] dbo. [APDIS - InsertMessageDetail s] dbo. [APDIS_RetrieveAIIUsers]

14

'.,

16

dbo. [APDIS_RetrieveOnlineUsers
]

17

dbo. [APDIS_RetrieveUserInfol

19

dbo. [APDIS_RetrieveVehiclelnfo ByUser] dbo. [APDIS - SendMessage] dbo. [APDIS_UpdateUserInfo]

20

22

23

dbo. [APDIS_ValidateUser]

42

4

Development ISimulation

4. 1 C lient / Server
Client IServer are TCP/IP based applications with extensive use of multithreading. Serve r side application com municates to the clients on port 8001. It conti nuously monitors the input connectio n requests from the clients. As soon as a client connects, it starts a thread and passes control to it and entertains other req uest from new clients. Client side application is TC P/IP based application with two types of communication interfaces: GPS interface continuously reads the COM for geo-location and TC P/IP interface to the server to send this data on certain period of time. C# (Microsoft . et) was used to develop this client Iserver application. In this application, .Net Windows Forms were used for GUI, TCP/IP sockets for communication between client and server and multithreading to control and entertain multiple clients connection. In any client Iserver application, clients need to make connection to the server, so tirst step is to start the server side application FI GUR E 4-1 refers to the server start-up process with local ho t and on the port 800l. Server is ready to entertain the connection from the pOli 8001 and accepts client requests
!ill Advanced Information System (Server)
Connection Information Connect ed Clien ts IP Addzess: 127 .0. 0.1 Port No: 8001
St.,liSl0p $oMr:

GJ[Q]~

II Advanced Information System (Server!
Connection Information Connec ted Clients

L;J[Q]

Port No.
StortiStop Serm
~

0

Eliit
Server Applcat.,n Started ... Server Started, Port
=

80Cll

FIGURE "'-1: Sen'cr Start-up

4~

C lient can be started to establis h a TC P/I P conn ction with the server. Each user has own credenti als whic h he/she needs to pass before requesting for a connection. T he applicat ion connects to the server on the port 8001 and sends logi n request as shown in FIGURE 4-2 .

Advanced Information System (Client)

Advanced Information System (Client)

User ID
Password:

AVAY285

User ID:
Password:

xxx1

konnect

1[

El!it Connected to the Server ...

FIGl'RE -'-2: Client 7 Server Connection
Server authenticates the clie nt credentials. It allows the connection only after verifying user id and password of the client. If everything goes well , it shows the client under the connected clients li st as shown in FIGURE 4-3.

III Advanced Information System (Server)
Connection Information Connected Clients

GJ(g)~

IP Address: Port No:

AVAV·28.5

Eliit
Server Started, Port = 8001

FIGURE -'-3: Server Real-time Status
44

C li ent is read y to co mmuni cHI ' III (iPS an [ ' 0 [[ cIs gl!o-mi'o I H l l i)11 . It S ' I Li s [ is information to the se rver un' r lix int erval or tim e (ClIl'f>l1tl y J () S'willi s) as SI1O\I\ I1 if f IGU RE 4-4 .

f;I Connected to 127.0.0.10n port number 4242
Client Server Data Communication:

r;]~1J

20100907121319 0,1AVAY 285 t~ t 201 00907121329 2,1,79 34502500 43 f;8U148Uu P,O N 201009071 213392,1,·7934541610.43 f;8041 570,bO N 201009071213492.1,·79 34605660.43 68~' 5';UO,bU II 201 009071213592.1 ,7934689760.4368439280 t-J) II 201009071214092.1,·7934742980.43 &8576W) 60 II 201 (XffJ7121419 2.1.·79 34808890.43 &8749700 6011 201 (XffJ7121429 2.1,7934880960.43 &89M30 60 II 201 (XffJ7121439 2.1,·79 34954320.43 &9133720.51)'11 201(XffJ7121449 2.1,·79 35025840.43 f;93<!02BO W II 201(J"..ffl7121459 21 .. 79 35096330,43 695354oo.w II 201(XffJ7121509 2,1.·79 34951070.43 6%E.Ef..80,bO II

FIGl RE -t--t: ( Iicnt I

~cntr

Data ( ommuni(:atlon

4.2

Web Site (User + Dispatch Application)

Website is Microsoft .'let based application that hosts on the \\eb server. '1his is entralized application used by the customers. users. administrators and the dispatchers. Each user has o\l\n credentials and the application \alidates and authenticatcs the user credentials. group it belong to and the roles assigned to the group. 'I he application oHcrs a main \l\e1come page to everyone and routes the traHic to the specific pages bascd on roles. This is the most important and complicated part of the architecture as it uscs state of the art technologies likes Google map and Goog[e API . 'Jhi n-ti r application is based on the most popular MVC architecture and \l\a d \eloped by using \arious tools ASP. , ct. C#. Ja\ a Script. Google map. Google APIs. \l\cb sen ic and the databc sc. I he presentation la) er that pro\ ides GC I to the u er \l\as dc\ cloped in A P. et. Googlc map. Google APIs. Ja\aScript \l\hile business la)er \l\as dc\clopcd in el1 and the v,eb servicc (C#) was used in data layer.

45

The application starts with the welcome page as shown in FI GURE 4-5. User is onl y interested in track ing his/her package whil e admini strators and di spatchers can log in with their credentials to perform their own tasks.
,. UlitlUfld

p.

~'ll"dr!!n Inl ..",,,,1 hplnrrr
... -t ,,,

f~f.!!I"El

".

FIGURE

~-5:

Welcome to APDIS

Admi nistrators and dispatchers are asked to enter their credentials as shown ill FIGURE 4-6. Each di spatcher and administrator has own credentials.
r
Unllllr.d p~ Wln~ Intflrnrl h:piolf!r

. ., ,. .

... .

r.J!!J_ 1

".

FIGURE ~-6: APDIS (Sign On)

User credenti als are verified against groups and roles. f he system shows the options based on the group the use r belongs to and the rol es dedicated to the group. Adm inistrators can perform various tasks like add/re move/update users, vi w onli ne users, vi ew pickups and comm unicate to the client by messaging or creat ing pickups as shown in FIGURE 4-7
r
Uo"'-.dP,. \'JlndlY.ftllll,.,,,,,tl-r Io,...,

. .,

9 ~fX
."

""

,.

~

,.

.

,..\dd t ~n f'ldl'\I'uor
J)...ktr"yr

."".,..,"'"

· (lame- l')('l'
· <ln1Il·~("~....

FIGlIRE "'-7: APDIS (Administrator Login) .\dmini strator tasks give an option to add a new user as shown in FIGURE 4-8 . This user can be a com in, dispatcher or any other administrator.
r
Unlilllld PIIF \'Jlncklwlln!(', ... t hplnrltr _

..· o . . ~ "

Cour1tr lofornt9fJoo

A ddCwr

f...Jil- L"wr

Dd.<c l",

.""bp- _ _
, c

· (~l","

FIGURE "'-8: APDIS (Administrator -7 Add User)

Administrator can mod ify an ex isting user in case there is some change in address, phone, password etc. as shown in FIGURE 4-9.
f' Untl,"d P"f7" \'1ln~ Internr. h:plPrrr
··· A

!:

~~

let!
f..-orl(,s

"'""

f,..otoe<

... ,.

g~~

p .

...

,.l.ntW P.-o-

----------=-----------

l oUtil III ::u .-' dall.-dln,or
· Ta.L
~\1dl'VT \t..w.W~

,
l
W"I

~,

Co url tr (nform :Hlon

~L.oocf",f'f . ~l\oot"f,

. p".-l....

l~

960 AIRPOR T ROAD

· ('\mil',"" l

,_abort
.....

ORLANDO 8UIlDtttG
WISSISSAUGA

.'. ON
Z'fC"" lSR 2Uf1

FIGURE -'-9: APDIS (Administrator 7 Modify/Lpdate User)

Administrator can delete a user in case the user left the company or because of some other reasons as shown in FIGURE 4-10.
r
Unlilpd PIIfr \'/in~ In'rrorl hpmrf!r

... ,.

~I

p.

"'..

lilt
F_tes:

't)rw

".-o(es

lDOb_

..- ....

....

.,-

Cou rl r l ofomlaflon

....""""""

L"wr \bif\ l\" [)dnc L'KI · om." L~n
~dd

.1620, 7!:1 Thomcfifl. P,v;' Qrivoe

· n.t-r.l·W'fr~ ...

------,

c....
z~c

Toronto

"" ....
)

H L<lt

0-,:."

Cconr.. to OEUn dw! 111ft

FIGURE -'-10: APDIS (Administrator 7 Delete User)

48

Under Onl ine Users. ad ministrator can view all users currently logged in . The system al lows the administrator to view the current address, geo -l ocation and speed of the courier. The system uses GIS maps to display thi s data as shown in FIGURE 4-11.

- .. ,.

p .

- T
.\ .~

AII,'anted Pickup & Delinry Inforlll;lIion System (A PDI S)
( o ud~r

Jnfol malion

\ \ .\)

~~(

HB P \~ ' 6{>

· PI! !.,;up

.!(~a

. C'lnIlt'tC\'

(\lIIImIUD.ooJl

FIGl'RE -&-11 : APDlS (Administrator -7 View Online User with GIS)

Pickup Jobs help the admil1lstrator to view the current pic kups and their status etc. as shown in FIGURE 4-12.

.. .., .... ,
'_ r..s

~

p ·

............

,.

-,

. .... ~u...-r,

....... lobo AI

o

'" 'VJ C~.-. snn..

""-

FIG URE -&-12: APDlS (Administrator -7 Vie", Pickup Job)

49

PROPERTVOF

RVER 0 Ut IVER

U

Client Communication helps the adm in istrator to send message to the courier. Adm inistrator can selec t the message from th message type drop down list or can type in the message by selecting free form message as shown in FIGURE 4-13 .
r
lInlftlfl'dP,.,. \,lIn~lnlr.rAf!1 hptorrr

·

+, ....

~.

. .. ,.

~

p .

I OliN ,. H -\dnUDI1 1r:llor

,

. ,· (lrJI.n,.-l"""

..

Clientll"ser Co mmun ica tiolls (;\I .. saging)

l ""-!

...., l o.JamUIk MIIJQ \nk1 \1~UI~

(· ' I"1'!t'P",lo.~

s.ct,.....

r PI'

[ ~ ~:: :~(h~k
eM GIl Spe.~

Cllo..,.... F... Form,-,"Uf9t

FIGURE 4-13: APDIS (Administrator ~ Client Communication via Messaging)

Administrator /Dispatcher can also create a pickup request in case a customer calIs and requests to send courier to his/her address to pickup a package as shown in FIGU RE 4-14 .
r
Untitled P<lge
WlOdwn Inlernel Lxplorer
A

g~~

.. + ,

e

IIX~

· -+ ,.

p .

l OIle-d ia :li S Adwiaislnlo",
- r~,

· Adam · Olllint' l 'V'1\ · PICkup Jobs - ClinIt t °\ft (on:mu.caDoo Smd\\. . . . C,~.I/k P1cl-up

Clie ntll'se r

Comm uni catio D~

(Create Pickup Jo b)

c..

, Poe>

][

C...

1

FIGURE 4-14: APDlS (Administrator ~ Create Pickup)
~O

The system helps/guides the customer to track hi s/her pickup as shown in FIGURE 4- 15. Customer is asked to enter confi rmation numoer. Customer must note do wn thi s confirmation number while calling the customer center or browsing the web to create a pickup request.
".

FIGURE -'-15: APDIS (Customer 7 Check Pickup Status)
System verifi es the confirmation number and checks which courier has been assigned this job. It then displays the current location of the courier and the customer address on the map. The distance, current speed, estimated time taken by the couri r to reach the customer and the directi ons are also displayed on the Google map a shown in FI GURE 4- 16.
· .,
~

",
",...ortH

b:4'cR

· .. to

J)-

fit

(eM

look

I;loItI

r_les

............

...

. ·

ADVANCED PICKUP & DELIVERY INFORMATION SYSTEM
rn.ck \ on Pkkllp
R~"'\ I

Ad\"anced Pickup & Delh-ery Informalion Sy'lem (A PDI )

,

Ce~Dr

1

H~ad IHI1I1USI . .
C~IM.~I

Or

.d

: T\I1I ne", . Rarwlluio. S' O~ lOS

· Twn Ill" .
,

n. Or \\

:A\\

FIGURE -'-16: APDIS (Customer 7 Trace Courier/Customer Location yia GIS)
51

4.3 Database
Database is the source of data storage and retrieval. It consists of va rious obj ects li ke tab les whic h are used to store the data. FIGU RE 4- 17 shows the li st of tabl es created for the entire system.
~ ~cIt ~ ~o)Kt

Loot<
..:,

~
4

Co-s.tv
,.

~

.I t:fiI'oo ...... ,
eg,.d ·

~,I

~

..J 'J.

~

~ ~

JI 1.:> t'

.... .

6'J...· ·'"N.'?·'1IV";<01I'lor""r··I~~_OOI". ...

... c .. ~
~)- ....'_Lo.ollt>eoon

Tables

.. 'I)

~ iii"P"~·r<' ....

T..........
~o;V'tI'

·
·

"'~~~or . ., IIioloorb

'tt.l

"I'<IDI..'OIO
1'HO!'~'O]1l

· ...
' ·

':~lW"'M''''''~
~~.", ~

.l ...... 1'tf,tory
~1,Ie. ··

..

::SIo'~.
~r-v..~l"'o
~~

· ...

· ....
'

,=SIo~

...

1 ....... , .... !;(.... -u.
")~.~

- ~'"

.:I .J

01,.,.'010 071Ott1O IO
a...cJII6JIO
ItmI~'OIO

... :tlOkltSUttI..J
-~I"'n~

1~t )~

.:1_

....

~~:

I'"

1:>010

- ...........
- 'i'o:>P .. ,,,,,
"'n'l~

... 1>oP....,

llatl','I!U

.-11""10 .,...... lllJI

"':tlOSt~·l"Pt

),-

... .,""'~

0'111»1:'010 *11..'01"
~120l0

~"'·.oal1W'

..J tOo.t .. ~
J_
'!Io:'~T!1M
kP«UeTypon J. __

... 1IoWd...... ... 1'<)9:or,

011081:01)10
/W.JlfX)10

...;,,,w...

... s,o'--I

.... · ............. . ..
·

-

...........
·

·

,.i,« ... !10_

~~-"'Y

-

"'::tIo,--~

":!Jo&f:~T"""

-"""""""-

J."",

).-,

:J!II~~1

:- ,,1'010

1 .. thOIIC":t :J ... ,tlfts~ ..... ·rOoI

-""'''''*''

""

..

01.1a1t.llOIO !flOIO
lIliIIlI1flOIO
OlfOf,l'lJLQ

O'.lOf..'OIU

~l4'l

· ,JW-P-.

FIGl ' RE "-17: Database Ob,jccts (tables)

Database contains another set of objects that are called stored procedures. These are TSQL scripts which web service calls to communicate to the database. FI G RE 4- 18 shows a list of stored procedures created for the web service.

Stored Procedures

s.....Slo;nC~"

'!:l~"T:)_~

...

~-~..,~

· ... 4ItI .. 'tklMte/llnf<,#IIrl~
<kArn_::.~

"'D~ -''' ' I).~~
Q"n1()"'~

..

'" CdlCA

5*-'-'WQ

....... .... <tc ..

':il4c"'lS_~ ·g*4T:!_~
T""~

.... I~_.... ...:;o~

""ns~w.,

"""-

'Q_41'l!_~

CAllS'

."'A'IS.1_

.115_~_

... ....

':Ja"fti_~

· g*'..... TD_~
A ·.· ~.
g...&1'"'~~_

.. mr.......
Arn;<AI1I:_

"'Il.~'"

g

Qa.fl).........a:...
. . . .1"'1" t:

..rru..............'
--'"'

"''''.)I~ .. t"j~_
"",,'~t

wok"fD~"""'
.~-

. g .. .&~

g ....,_ .. ~

.. .

·

C"''''"~.

.............,.~..,..

I--~~""""

.....

g ..

"m.-._ 'n.___....

........
~~

..

..... -

~

*''' ........... ......,.,

ecA

.I/IIJII_;WW

..

A'rJ,J _ _ · ·
~

, ......

.. ",1- · ."......
AilS...... .....

CA ' I....... Irf.

FIGl fRE "-18 Ilataha,,,' Ohjl·C t... (Stun·t! ProcNlu,'cs)

4.4 Dijkstra Algorithm
Dijkstra Algorithm was developed in Microsoft .Net (C#). It starts form the source node and checks the adjacent nodes attach to it having least distance between them. It keeps on cheeking adjacent nodes and eventually reaches the destination node. This way, it ensures to calculate the most optimum path.

4.4.1 Functionality I Example
Suppose courier is at position '0' and the customer location is at 'T'. Google APIs give intermediate nodes A, B, C, D, E and F. The APDIS system performs the following steps to calculate the shortest route between source (courier's truck) and destination (customer' s location).

1. Calls web service to read pickup job from the database. 2. Knows the destination address since pickup job has customer's address and other details. 3. Performs reverse geo-coding to convert customer's physical address to geo-Iocation. This is important because digital maps can display a point only based on geo-Iocation. 4. Calls web service to get a list of all couriers logged in this region. 5. By now, it has geo-Iocation of both source and destination. Calls GIS APIs to get all the nodes between source and destination. Source(s) are the couriers currently logged in the system and serving in this region. 6. Calls geocoder web service to get the distance between each node. TABLE 4-1 shows the nodes and their distance from the adjacent nodes. TABLE 4-1: Distance between the nodes Nodes 07A 07B 07C A7B A7D Distance in Kl\1 2 Nodes A7F B7C B7D B7E C7E Distance in Nodes D7E D7T E7T F7T

KM
12

~ncein
1
5 7

5
4 2 7

1 4 3 4

3

53

7. Dijkstra' s Algori thm executes to calculate the closest courier to the custo mer's location. It then calc ulates th shortest route between the courier and the customer. FIGURES 4- 19A - 4- 19H show the step by step func tionality of the algori thm . Nodes in blue co lor indicates the unprocessed nodes, green color nodes indicate the processed nodes while red nodes indi cate the adjacent nodes to the current source node. Highlight all the nodes. Start from source node (0). Adjacent nodes to the source (0) are now (A). (8), and (C) and highlighted in red color. Check the distance between source and adjacent nodes (A, 8 , C).

12

·
Un""lvt-d Node · Solved Node · Unsolved SoMd

~ ·
ode ·

FIGl IRE "'-19A: Dijkstra Exccution (Stcp - I)
Selects the closest node (A) based on the distance. The closest node (A) becomes source node now. Adj acent nodes to the original source (0) and the current source (A) are now (8), (C ), (D), (F) and th y are highl ighted in red co lor. Check the distance bet een the current source node (A) and adj ace nt nodes (8, 0 , and F). Check the di stance between previous source node (0) and the current node (8 ) (0 -7 C -7 8 or 0 -7 8). Selects the closest node to the current source A, rify the distance is less than the distance fro m previous source (0 ) to the node (8).

· 4. _ 4
1,

·
I

12

9

I

3~

Unsolved Node ·

-e

·
Un""lv'" ~odc · Solved Nod< ·

SoMd~odc ·

FIGl RE "'-20B: Dijkstra Execution (Stcp - 2)

54

Closest node (B) becomes the current ource now while nodes (0 and A) a r previous source nodes. Adjacent nodes to the previou source (A) and the current source (B) are no w (C), (D), ( ), and (F) and they are hi ghlighted in red color Check the distance between the current so urce node (8) and adjacent nodes (C , D, E and F). C heck the distance between prev ious source node (0 and A) and the CUlTent node.

·
UnSOlved Node · Solved ode ·

·
U"",'.
So ,

Nod<: .
Nod· ·

FIGl RE "'-21(': Dijkstnl Execution (Step - 3)

Check the distance between the latest sources to the adj acent nodes. C hec k the distance between the previous source (0, A) to current adj ace nt nodes. Compare and verify the closest di stance. Select the distance hic h is closest to the CUlT nt source (B) or the previo us sources (0, A). Green n des indicate the locked nodes and the system wi ll not consider th m agam. dj acent nodes no are (0, E, and F) and are hi ghlighted in red color.

12

·
~ 7

'\
Unso"ed

·
~ode ·
Unsolved 'ode ·

So ed Node ·

SoI\-edNode ·

FIGlRE "'-22D: Dijk.. tra

E :\(~cuti()n

(Step - ... )

55

Check the distance between the current sources to the unsolved nodes. Check the distance between the prev ious source (0. A. B) to the unsol ved nodes. Compare and veri fy the closest di tance. Select the distance hic h is closest to the current ource (E) or the previous sources (0. A. B).

.
Un",lvedNodt: ·
SoI',,<1~

Unsolved Nod" · Solved Node ·

·

FIGl RE -'-23E: l}ijkstra Eucution (Step - 5)
Se lect the node w hich is closest to the current s urce (E) or the previo u sources (0, A, B). Since node (D) is closest so it w ill be the next source. ow there are only two unsolved nodes (F, T).

u"""l.ed Node ·

Unsolved ~ ode · Soved Node ·

Solved ~odt: ·

FIGl lRE -'-24F: Dijkstra Execution (Step - 6)
Sel ct the node which is closest to the current s urce (D) or the pre (0, A, R ' ). Si nce node (T) is closest s it w ill be the ne,' t source. sources

1'_.

IO US

Unsolvt<! Nod Solved

·

Un><> ·

ode .

ode ·

SoIvul Node ·

FIGl'RE -'-25G: I)jjkstra E\ecution (Step - 7)
ystem finds two opti mal paths ha ing th same distance of 13 . First optimal path ~ A ~ B ~ D ~ T. is shown in th F IGURE 4-1 9G and it folio s th nodes

°

56

Second optimal path fo llows 0 ~ A ~ B ~ E ~ 0 ~ T and is shown in the FIGURE 4-191-1. The system now has two options to accept an optimal path between the cou rier and the customer. It wilI accept the first optimal path (0 ~ A ~ B ~ 0 ~ T) since it has less number of nodes and obvi usly will be quicker because 0 f fewer intersections .
·
, 2

n_

~
\

~ ~
~

~
4

l
1

J
3

'L_
Un<Olv<!d ad< ·
Sol-.«I ~ad< ·

FIGl RE "'-2611: Dijkstra Execution (Step - 8)

57

5 Conclusions and Future Directions
Integration of GPS and GIS technologies in the existing system can solve the current problems of adhoc pickups. Instead of static routing, the new process performs these steps to dynamically route a call to the courier.

e

Server broadcasts message to all the connected clients (couriers) serving the customer region and requests for geo-Iocation.

~ Client application sends current geo-Iocation of the courier.

a

Server performs reverse geo-coding on the customer's address and converts to geo-coordinates. Server executes the algorithm to calculate the current distance between customer and courier.

o

<& Server selects the nearest courier and sends pickup job to himlher.
Overall advantages of the system are: 1. It provides improved, fast and reliable service to the customers. 2. It reduces the average mileage per courier which in turns reduces the fuel cost as well as vehicle maintenance.
"

3. The user can know the estimated time a couner comes to pickup/deliver a package. 4. It resolves the customer disputes related to arrival time, service duration and service location. 5. By knowing the exact location of a vehicle, pinpointed on a map, remote staff that is lost can be better helped. This helps the employee stay on schedule and not have to over speed or work over time to recover lost time.

" '\

58

Future work includes ...

There is always a room to improve each and every process. This project IS Just a prototype which needs a lot of customization and enhancements. Some enhancements and/or modifications in the near future are:

1. Courier's delivery Planner (Organizer) A courier goes to deliver the package in the morning. A packages delivery organizer needs to be implemented to show the shortest routes among the addresses (normally 50 - 200). 2. Text Messaging Sometimes, a customer doesn't have internet access and he/she needs to know the time a courier will be at his/her doorstep. Text messaging service is required to send a text message to the customer as soon as the courier started driving to hislher address. 3. Adaptive /Real-time Algorithm Sometimes, the streetslhighways are closed or blocked because of maintenance/construction or traffic congestion. In this scenario, the algorithm should be smart enough to provide alternate route. 4. Data Security Microsoft .Net contains rich functionality of implementing security. Data encryption /decryption will be embedded using Cryptography classes.

59

6 Bibliography
L R. F. Casey, L. N. Labell, L. Moniz, J. W. Royal, M. Sheehan, et al. "Advanced Public Transportation Systems: The State of the Art Update 2000". Publication FTA-MA-26-7007-00-1, Federal Transit Administration, U.S. Department of Transportation, December 2000. 2. "What is GPS and how does it work" http://\\'Vvw.vehic1e1ocationsystem.com/AVL%20Explained.htm. Accessed August 25,2010.

3. "What is GPS and how does it work" http://gis.ednet.ns.calGPS/howdoesgpswork.htm. Accessed August 10,2010.
4. B. Hofmann-Wellenhof, H. Lichtenegger, J. Collins, et al. "Global Positioning System: Theory and Practice". Springer: New York, NY, U.S.A., 1997.

5. "Glenn Baddeley - GPS - NMEA sentence infonnation" http://home.pacific.net.au/-gnb/gps/nmea.html. Accessed August 15, 2010.
6. C. M. Johnson and E. L. Thomas, "Automatic Vehicle Location Successful Transit Applications: A Cross-Cutting Study", Federal Transit Administration, Us. Department of Transportation, August 2000 7. O. A. Bayari and B. Sadoun, "New centralized automatic vehicle location communications software system under GIS environment", International Journal of Communication Systems, Vol 18, Issue 9, April 2005, pp. 833-846 8. K. S. Hasan, M. Rahman, A. L. Haque, et aI, "Cost Effective GPS-GPRS Based Object Tracking System", Proceedings of the International Multi Conference of Engineers and Computer Scientists 2009 Vol I IMECS 2009, March 18 - 20, 2009, Hong Kong 9. J. S. Greenfeld, "Automatic vehicle location (AVL) for transit operation" 10th Mediterranean Electrotechnical Conference, May 29-31,2000, Cyprus (Peer) 10. O. Aloquili 1, A. Elbanna, A. AI-Azizi 1, "Automatic vehicle location tracking system based on GIS environment" lET SoftlV, 2009, Vol. 3, Issue. 4, pp. 255263. 11. M. A. Elahi, Y. A. Malkani, and M. Fraz, "Design and implementation of real time vehicle tracking system", 2nd International conference on Computer, Control and Communication, Karachi, Feb. 17-18,2009, pp. 1-5.

60

12. A. Karbassi and M. Barth, "Vehicle Route Prediction and Time of Arrival Estimation Techniques for Improved Transportation System Management", IEEE Proceeding, Intelligent Vehicles Symposium, July 28, 2003, pp.511-516.
13. J. Zheng, Y. Wang, and N. L. Nihan, "Tracking Vehicles with GPS', http://WVvw.uwstarlab.org/STARLab Papers/20m OPSError-itsa.pdf. Accessed August 10,2010. 14. S. Christian Jensen and T. Dalia. "OPS data management with applications in collective transport". The lEE Proceedings of the 5th Annual International Conference on Mobile and Ubiquitous Systems: Computing, Networking, and Services, Dublin, Ireland 2008. 15. Vehicle Tracking Systems - Overview (2008)
http://www.roseindia.net/technologv/vehicietrackinglVehicle trackingSystems.shtml. Accessed

August 22,2010 16. Geographic Information System, http://egsc.usgs.gov/isb/pubs/gis poster/. Accessed August 30, 2010 17. http://en.wikipedia.org ,
http://en.wikipedia.orglwiki/Automatic vehicle location#Application with vehicles.

Accessed August 30, 2010 18. B. M. Waxman, "Routing of Multipoint Connections", IEEE Journal on Select. Areas Communication, vol. 6, pp. 1617-1622, Dec.1988. 19. W. J. Dally, "Virtual Channel Flow Control''' IEEE Transcription on Parallel and Distributed Systems, vol. 3, no. 2, pp. 194-205, 1992. 20. J. Duato, S. Yalamanchili, and L. Ni, "Interconnection Network: An Engineering Approach" IEEE Computer Society Press, 1997. 21. C. L. Seitz, "The Hypercube Communication Chip", Display File 5182: OF: 85, Department of Computer Science, California Institute o.f Technology, Mar. 1985, pp. 119-140. 22. Y. Boura, C. R. Das, and T. M. Jacob, "A Performance Model For Adaptive Routing in Hypercubes", Proc. from Intel Workshop on Parallel Processing, Dec. 1994, pp. 11-16. 23. J. Duato, "A New Theory of Deadlock-Free Adaptive Routing in Wormhole Routing Networks", IEEE Transactions on Parallel and Distributed Systems, voL 4, no.12, Dec. 1993, pp. 1320-1331.
'1

:~

61

24. X. Lin, P. K. Mckinley, and L. M. Lin, "The Message Flow Model for Routing in \Vormhole-Routed Networks", Proc. from Intel Conference on Parallel Processing, 1993, pp. 294-297. 25. D. H. Linder and J. C. Harden, "An Adaptive and Fault Tolerant Wormhole Routing Strategy for K-ary n-cubes", IEEE Transactions on Computers, vol. 40, no. 1, Jan. 1991, pp. 2-12. 26. C. Y. Chou, D. J. Guan, and K. L. Wang, "A Dynamic Fault-Tolerant Message Routing Algorithm for Double-Loop Networks", Information Processing Letters, vol. 70, 1999, pp. 259-264. 27. S. Tanenbaum, "Computer Networking", Prentice Hall, 2002. 28. W. Stallings, "Data & Computer Communication", Prentice Hall, 2007 29. J. F. Kurose, and Keith W. Ross, "Computer Networking", Addison Wesley, 2 nd Edition, 2002 30. R. T. Stevens, "Graphics Programming in C", BPB Publications, 1st Edition 31. Overview of GIS, http://W\Vw.gisdevelopment.net/tutorials/tuman006.htm. Accessed August 30, 2010 32. GIS Applications, http://centrin.net.id/-agullgis apl.htmL Accessed August 30, 2010 33. Geographical Coordinates System, http://en.wikipedia.org/wiki/Geographic coordinate system. Accessed August 30,2010 34. Geocode, http://en.wikipedia.orglwiki/Geocode. Accessed August 30, 2010 35. Reverse Geocoding, http://en.wikipedia.org/wiki/Reverse geocoding. Accessed September 01, 2010 36. J. B. Pick, "Geo-business GIS in the digital organization", John Wiley and Sons, 2008,pp.46

62

7 Appendix
7.1
ACK APDIS API i AVl !CCD DMZ GIS GPRS GPS GSM GUI HTTP ITS .-hORAN MVC NMEA P&D RDBMS SMS SOAP Sal SYN TCPIIP T-SOl UDDI UMTS VTS ,WSDl ·. XMl

Abbreviation List
ACKNOWLEDGEMENT r AUTOMATIC PICKUP & DELIVERY INFORMATION SYSTEM ] APPLICATION PROGRAMMING INTERFACE AUTOMATIC VEHICLE lOCATION CAll CENTER DEPARTMENT DEMILITARIZED ZONE GEOGRAPHICAL INFORMATION SYSTEM GENERAL PACKET RADIO SERVICE GLOBAL POSITIONING SYSTEM GLOBAL SYSTEM FOR MOBilE COMMUNICATION GRAPHICAL USER INTERFACE I HYPER TEXT TRANSFER PROTOCOL INTELLIGENT TRANSPORTATION SYSTEM i lONG RANGE AID TO NAVIGATION MODEL VIEW CONTROllER NATIONAL MARINE ELECTRONICS ASSOCIATION PICKUP & DELIVERY RELATIONAL DATABASE MANAGEMENT SYSTEM i SHORT MESSAGING SERVICE SIMPLE OBJECT ACCESS PROTOCOL STANDARD QUERY LANGUAGE SYNCHRONIZATION I TRANSMISSION CONTROL PROTOCOL TRANSACT-SQl UNIVERSAL DESCRIPTION, DISCOVERY AND INTEGRATION UNIVERSAL MOBilE TELECOMMUNICATIONS SYSTEM VEHICLE TRACKING SYSTEM WEB SERVICE DESCRIPTION LANGUAGE EXTENSIBLE MARKUP LANGUAGE

.\

" .

~

i

63

7.2

Database Tables Scripts
NOT NULL, NOT NULL DEFAULT (getdate()), NOT NULL, NOT NULL, NOT NULL, CLUSTERED

CREATE TABLE [dbo]. [AlertHistory] ( [group_id] [INT] [create_date] [DATETIME] [user_id] [INT] [alert_id] [INT] [update_date] [DATETIME] CONSTRAINT [PK_avl_alert_history] PRIMARY KEY

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Alerts] ( [alert_id] [INT] NOT NULL, [alert_name] [VARCHAR] (100) COLLATE SQL_Latin1 General CP1 CI AS NOT NULL, CONSTRAINT [PK avl alerts] PRIMARY KEY CLUSTERED
(

-

-

[alert_id] ASC

CREATE TABLE [dbo]. [arrival time schedule] ( [ScheduleType] [VARCHAR] (50) COLLATE Latin1 General CI AS NULL, [PeriodType] [VARCHAR] (50) COLLATE Latin1 General CI AS NULL, [StopId] [VARCHAR] (50) COLLATE Latin1-General-CI-AS NULL, [StopName] [VARCHAR] (50) COLLATE Latin1-General-CI-AS NULL, [ArrivalTime] [VARCHAR] (50) COLLATE Latin1-General-CI-AS NULL, [StartingTime] [VARCHAR] (50) COLLATE LatinI General CI AS NULL ) ON [ P R I M A R Y ] ' --

------------------------------------------------------------------------------CREATE TABLE [dbo]. [BusSchedules] ( NULL, [ScheduleType] [FLOAT] NULL, [PeriodType] [FLOAT] NULL, [StopId] [FLOAT] [StopName] [VARCHAR] (255) COLLATE Latin1 General CI AS NULL, NULL, [ArrivalTime] [DATETIME) NULL [StartingTime] [DATETIME) ) ON [PRIMARY]
------------------------------------------------------ ------~------------------

CREATE TABLE [dbo]. [ClientDetails] ( [ConfirmationNo] [VARCHAR] (50) [FirstName] [VARCHAR) [LastName] [VARCHAR) [Address] [VARCHAR] [City] [VARCHAR] [State] [VARCHAR) [Zip) [VARCHAR) [HomePhone) [VARCHAR] [CellPhone) [VARCHAR] ) ON [PRIMARY)

COLLATE Latin1 General CI AS NOT NULL, (50) COLLATE Latin1-General-CI-AS NOT NULL, (50) COLLATE Latin1_General_CI_AS NULL, (500) COLLATE Latin1_General_CI_AS NOT NULL, (50) COLLATE Latin1 General CI AS NOT NULL, (2) COLLATE Latin1-General-CI-AS NOT NULL, (50) COLLATE Latin1 General CI AS NOT NULL, (15) COLLATE Latin1-General-CI-AS NOT NULL, (15) COLLATE Latin1 General CI AS NULL

------------------------------------------------------------------------------CREATE TABLE [dbo]. [DeviceInfo) ( [DeviceId] [INT] NOT NULL, [DeviceName) [VARCHAR] (10) COLLATE Latin1_General_CI_AS NOT NULL,

64

(

CONSTRAINT [PK DeviceInfo) PRIMARY KEY CLUSTERED

-

[DeviceId) ASC )WITH (IGNORE DUP KEY ) ON [PRIMARY] -

OFF) ON [PRIMARY)

------------------------------------------------------------------------------CREATE TABLE [dbo). [GeoData) ( [Geocode_date) [DATETIME) NOT NULL, [DeviceID) [VARCHAR) (20) COLLATE SQL_Latinl_General CPl CI AS NOT NULL, [Route) [VARCHAR) (10) COLLATE SQL_Latinl_General_CPl_CI_AS NOT NULL, [MessageID) [VARCHAR) (10) COLLATE SQL LatinI General CPl CI AS NOT NULL, [RSSI) -[SMALLINT) NULL, [TowerID) [VARCHAR) (10) COLLATE SQL LatinI General CPl CI AS NULL, [ChannelID) -[VARCHAR) (10) COLLATE SQL_Latinl_General_CPl_CI_AS NULL, [Coverage) [TINYINT) NULL CONSTRAINT [DF_GeoData_Coverage) DEFAULT ((0)), , [GPSStatus) [VARCHAR) (1) COLLATE SQL LatinI General CPl CI AS NULL, [GPSTime) -[DATETIME) NULL, [Longitude) [FLOAT) NULL, [Latitude) [FLOAT) NULL, [GPSModeIndicator) [VARCHAR) (1) COLLATE SQL_Latinl_General_CPl CI AS NULL, [create_date) [DATETIME) NULL DEFAULT (getdate()) ) ON [PRIMARY)

------------------------------------------------------------------------------CREATE TABLE [dbo). [Groups) ( [GroupId) [INT) NOT NULL, [RoleId) [INT) NOT NULL, [Details) [VARCHAR) (50) COLLATE LatinI General CI AS NULL, CONSTRAINT [PK_UserGrCiup) PRIMARY KEY CLUSTERED
(

[GroupId) ASC, [RoleId) ASC )WITH (IGNORE_DUP_KEY ) ON [PRIMARY)

OFF) ON [PRIMARY)

------------------------------------------------------------------------------CREATE TABLE [dbo). [Jobs) ( [JobId) [INT) IDENTITY (1, 1) NOT NULL, [WirelessStatusId) [TINYINT) NOT NULL CONSTRAINT [DF jobs wireless s 060DEAE8) DEFAULT ((0)), -- [UserId) - -[VARCHAR) (50) COLLATE Latinl_General_CI_AS NULL CONSTRAINT [DF jobs user id 08EA5793) DEFAULT ((0)), [DispatcherId] -- [VARCHAR) (25) COLLATE Latinl_General_CI_AS NOT NULL CONSTRAINT [DF jobs__dispatcher__ 09DE7BCC) DEFAULT ((0)), [JobStatusIdr[TINYINT) NOT NULL CONSTRAINT [DF jobs __ job_status__ OAD2A005) DEFAULT ((0)), -- [JobDate) [DATETIME) NOT NULL CONSTRAINT [DF jobs job date OBC6C43E) DEFAULT (getdate()), -- [CreateDate)-[DATETIME) NOT NULL CONSTRAINT [DF__ jobs__ create_dat __ OCBAE877) DEFAULT (getdate()),

65

[StatusChangeDate] [DATETIME] NOT NULL CONSTRAINT [DF__ jobs__ status_cha __ ODAFOCBO] DEFAULT (getdate()), [AcceptedBy] [VARCHAR] (50) COLLATE SQL Latin1 General CP1 CI AS NOT NULL CONSTRAINT [DF__ jobs accepted b OF975522]- DEFAULT (") ,[Instructions] -- [VARCHAR](500) COLLATE SQL Latin1 General CPI CI AS NOT NULL CONSTRAINT [DF=-jobs-=instructio-=117F9D94] DEFAULT ("), [ConfirmationNo] [VARCHAR] (50) COLLATE Latin1 General CI AS NOT NULL CONSTRAINT [OF jobs confirm nu 1367E606] DEFAULT ("), [ScheduleTime~ - -rVARCHAR] (20) COLLATE Latin1 General CI AS NOT NULL ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [JobStatus] ( [JobStatusId] [TINYINT] NOT NULL, [Details] [VARCHAR] (50) COLLATE Latin1 General CI AS NOT NULL ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Messages] ( [FromUser] [VARCHAR] (25) COLLATE Latin1 General CI AS NOT NULL, [ToUser] [VARCHAR] (25) COLLATE Latin1 General CI AS NOT NULL, [MessageRead] [TINYINT] NULL, [CreateDate] [smaIIDATETIME] NOT NULL CONSTRAINT [OF Messages CreateDate] DEFAULT (getdate()), [ReadDate] [smallDATETIME] NULL, [ProcessedDate] [sma1IDATETIME] NULL, [MessageDetails] [VARCHAR] (1000) COLLATE SQL_Latin1 General CP1 CI AS NOT NULL, [MessageType] [TINYINT] NOT NULL ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Roles] ( [RoleId] [INT] NOT NULL, [Details] [VARCHAR] (50) COLLATE Latin1_General_CI_AS NOT NULL, CONSTRAINT [PK_Roles] PRIMARY KEY CLUSTERED
(

[RoleId] ASC )WITH (IGNORE_DUP_KEY ) ON [PRIMARY]

OFF) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Routes] ( [RouteId] [VARCHAR] (20) COLLATE Latin1 General CI AS NOT NULL, CONSTRAINT [PK_Routes] PRIMARY KEY CLUSTERED
(

[RouteId] ASC )WITH (IGNORE_DUP_KEY ) ON [PRIMARY]

OFF) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Schedules] ( [VARCHAR] (20) COLLATE Latin1_General_CI_AS NOT [RouteId] NULL CONSTRAINT [OF Schedules RouteId] DEFAULT ('SIN'), [VARCHAR] (20) COLLATE Latin1 General_CI_AS NOT [StopId] NULL,

66

[ScheduleType] [SchedulySubType] [ArrivalTime] [StartTime] NULL ) ON [PRIMARY]

[INT] NOT NULL, [INT] NOT NULL, [VARCHAR] (50) COLLATE Latin1_General_CI_AS NOT NULL, [VARCHAR] (50) COLLATE LatinI General CI AS NOT

------------------------------------------------------------------------------CREATE TABLE [dbo]. [ScheduleSubType] ( [Schedu1eSubType] [INT] NOT NULL, [Description] [VARCHAR] (50) COLLATE LatinI General CI AS NOT NULL ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [ScheduleTypes] ( [ScheduleType] [INT] NOT NULL, [Description] [VARCHAR] (50) COLLATE LatinI General CI AS NOT NULL, CONSTRAINT [PK_ScheduleTypes] PRIMARY KEY CLUSTERED
(

[ScheduleType] ASC )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [SendEmail] ( [group_id] [INT] NOT NULL, [send_email_id] [INT] IDENTITY (1, 1) NOT NULL, [email address] [VARCHAR] (100) COLLATE LatinI General CI AS NOT NULL, CONSTRAINT [PK_avl_send_email] PRIMARY KEY CLUSTERED
(

[group_id] ASC, [email_address] ASC )WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE [dbo]. [Stops] ( [RouteId] [VARCHAR] (20) [StopId] [VARCHAR] (20) [Details] [VARCHAR] (50) [Latitude] [DECIMAL] (18, 10) [Longitude] [DECIMAL] (18, 10) [Distance] [DECIMAL] (18, 0) ) ON [PRIMARYI COLLATE LatinI General CI AS NOT NULL, COLLATE LatinI General CI AS NOT NULL, COLLATE LatinI General CI AS NOT NULL, NOT NULL, NOT NULL, NULL

------------------------------------------------------------------------------CREATE TABLE [dbo].[StopsSegments] ( . [RouteId] [VARCHAR] (20) COLLATE LatinI_General CI AS NOT NULL, [StopId] [INT] NOT NULL, [SegmentId] [INT] NOT NULL, [Location] [VARCHAR] (200) COLLATE LatinI General CI AS NOT NULL, [Latitude] [DECIMAL] (18, 8) NOT NULL, [Longitude] [DECIMAL] (18, 8) NOT NULL, [Distance] [INT] NOT NULL ) ON [PRIMARY]

------------------------------------------------------------------------------67

CREATE TABLE [dbo). [Users] ( [UserId] [VARCHAR] (25) COLLATE Latinl=G{lMul=Clj\1[! lill'l' tJlII.L, [Password] [VARCHAR] (10) COLLATE Latinl_G{lMrd_CCAI[! Iji/]' Will., [Home_Phone] [VARCHAR] (15) COLLATE SQL LatinI G@n{lrd cp1 c1 A~ flUI' lillLt" [MobilePhone] [VARCHAR] (15) COLLATE SQL-LaHnCG(m@uCCPI=CI=M tJu(' IlIl!.l., [Addressl] [CHAR) (50) - COLLATE = = = SQL_Latinl_General_CPI_CI_AS NOT NlILL, [Address2] [CHAR] (50) COLLATE SQL LatinI General CPI CI AS NULL, [City] - [CHAR] (20) COLLATE SQL_Latinl_General_CPI_CI_AS W),]' IIULL, [State] [CHAR] (2) COLLATE SQL LatinI General CPI CI AS NOT !lULL, [ZipCode] - [VARCHAR] (7) COLLATE SQL_L4tinl=G@n@r41=CP1=CI=A~ [GroupId]
) ON [PRIMARY)

NOT NULL,

[INT]

lifJLL

------------------------------------------------------------------------------CREATE TABLE [dbo). [UsersOnline] ( [UserId) [VARCHAR) (25) COLLATE Latinl_Genenl_Cl_AS ) ON [PRIMARY)
fj(;'!'

IJlJI,L

------------------------------------------------------------------------------CREATE TABLE [dbo]. [VehicleData] ( [VehicleId] (VARCHAR] (SO) COLLATE L4tinl=a§n§r~1=CI=~ NULL, [Longitude) (DECIMAL] !l8, 8) W/i' t:ur,L, [Latitude] (DECIMAL] \18, 8) NQT N\;~.L, [Speed] [INT] t}(y), mill., [Direction] (CHAR] (1) COLLATE Latin! General CI AS !lOT NULL, -[CurrentAddress]
lmLL,

[CreateTime] lJULL,

(DATETIME]

W/l li'JU,

am~fAAm'f

[DF VehicleData CurrentTime]

[DeviceId] [RouteId] [CurrentStopId] (CurrentSegmentId] [TripStatus]

[DF VehicleData Deviceld]

(INT] NVJ' tJiJ~,:r, ~.~'fAA.n~f DEFAULTl 11) J, (VARCHAA] (20) COLLATE wHn.l_~@n.§.rd=~lj~§

DEFAULT(G~tD&te(J!,

[IN?) [INT] (TINYINT]

NULt,
5~f)~Lt,

) ON [PRIMARY]

------------------------------------------------------------------------------CREATE TABLE
[dboJ.(Wirele~5Ztato~Typ~1

(
.l~;UJ,J·'1

[WirelessStatus!dl [[)escriptionl ) ON [PRIMARY]

(TINYINTji(')';'
(VARC~] (~~)

Wl,.M'n

wHn.l=~M.r~1!.=~=M> :;//~.

)vn.J"


