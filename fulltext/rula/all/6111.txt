HEDGING AND PRICING IN NON-PROBABILISTIC MODELS WITH TRANSACTION COSTS.

by

Massoome Rahsepar Th.faster of Science, Isfahan University of Technology, 2004

A thesis presented to Ryerson University

in partial fulfillment of the requirements for the degree of Master of Science in the Program of Applied Mathematics

Toronto, Ontario, Canada, 2011 @Massoome Rahsepar 2011

I hereby declare that I am the sole author of this thesis. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purp0<'le of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

iii

Hedging and Pricing in Non-probabilistic Models with Transaction Costs. Master of Science 2011 Ma..')soome Rahsepar Applied Mathematics Ryerson University The thesis extends a non probabilistic market model proposed by Britten-Jones and Neuberger by incorporating transaction costs into their model. The original model is of rather general applicability as
it incorporates the discrete nature of the market by allowing only a finite number of t.ransactions and

discrete jumps and requires few observable parameters to be deployed. Our addition of transaction costs gives the model an even more realistic character and, in this way, allows to use the model a..') an instrument to look for arbitrage opportunities in the market. The main output of the resulting model is a pair of numbers acting as lower and upper bounds to prices of financial instruments. The thesis does perform a limited search for arbitrage opportunities in market data and finds several interesting phenomena. A detailed analysis of several analytical properties, optimization and computational issues, along with a software implementation, are also fully developed in the thesis.

Keywords: Incomplete market, No-arbitrage bounds, Proportional transaction costs, Fixed transaction costs.

v

Dedication
This thesis is dedicated to my wonderful husband Ali who has been a great source of motivation and inspiration. And to my parents Farkhonde and Ha.'>san and my sister Bahar who have supported me all the way since the beginning of my studies.

"To us, family means putting your arms around each other and being there. "
-Barbara Bush

ix

4.1.2 4.1.3 4.1.4 4.1.5

J-N Discretization for a Special Case . . . . . J-N Discretization for the General Case .. . Option Price at Each Stage in J-N Algorithm Optimal Hedging and Convex Hull

40 40
42

44
49
49

5 N mnerical Analysis 5.1 Artificial Paths and General Results 5.1.1 Comparison to Black-Scholes 5.1.2 Arbitrage Bounds: Basic Model. 5.1.3 Arbitrage Bounds: Transaction Costs Model 5.2 Market Data and No-Arbitrage Bounds .. 5.2.1 Forecasting the Quadratic Variation 5.2.2 Investment Strategy . . . . 5.2.3 Smile Quadratic Variation . . . . . . Conclusions
Bibliography

50 51 55 59 61

65 70

73
100

xii

List of Tables
5.1 5.2 5.3 5.4
5.5 5.6

No arbitrage bounds with different the jump units. . . . . . . . . . . . . . . . . . . . . . . No arbitrage bounds with different the jump units for a derivative with a butterfly payoff. No arbitrage bounds with different the jump units for a derivative with a strangle payoff. The convergence behavior of the proportional transaction cost model as the number of trades N2 increases and also the relation between 8 and round-trip a . This table shows the option price with different strike prices. profits/losses for price path of Yahoo inc! . . . . . . . . . . .

53
54 54

59 62 70

xiii

List of Figures
1.1 2.1 2.2 4.1 4.2 The boundary region for a call option's prices Case A: A lazy permissible path ..

3 8
8 39
41

Case B: A possible permissible path The sample grid with N = 11 steps tree construction. All destination points when n 3....... All destination points for the la..'!t two stages. Multiple destination points from fourth to la..'!t step and beyond . Convex Hull optimization and the Hull Line . . . . . . . The minimum upper bound Vasa function N2 when ~ 1

4.3
4.4
4.5 5.1 5.2 5.3
5,4

42 43
45

50 51

Convergence of Vasa function N2 for different values of ~. The minimum upper bound and the maximum lower bound for the basic model with different jump units

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52

A Butterfly and Long Strangle payoffS. . . . . . . . . . . . . . . . . . . . . . . . . . . .. 53 The upper and lower bounds for a derivative with a Butterfly and Long Strangle payoffS with different jump units . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 Upper and lower bounds for the fixpd transaction costs}C · ·· · · · · · · · · · · · · · ·· 55 Upper and lower bounds become wider by increa..'!ing the rate}C with the fixed jump units

5.5 5.6

5.7
5.8 5.9

1= 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
This plot shows the option bounds when the fixed transaction cost is $10 by assuming

56

1000 call options. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. 57 The minimum upper bound Vasa fUllction of the quadratic variation in both case, with and without transaction costs.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. 58

5.10 The minimum upper and the maximum lower bounds for the proportional transactioll costs. 60

5.11 Time Series: The sequence of closing price between May 2009-May 2011 for the chosen stock is shown in this figure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. 60
5.12 This figure shows the quauratic variation for different windows 1, ",16 which start at times

ts such that So = S(ts)

~

16.69 and all window's sizes are N2 xv

= 43

· · . · . . . . · · . .· 61

5.13 The minimum upper bound for the maximum quadratic variation 0.0326, in the case of no jUlnp occurs. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. 63 5.14 The minimum upper bound with no jumps and maximum jump units equal to 6 compared with the real option value show in this figure. . . . . . . . . . . . . . . . . . . . . . . . .. 63 5.15 This plot shows the upper bound with the minimum fixed transaction K = 0.045 which can remove the arbitrage in this market for all strike price. . . . . . . . . . . . . . . . . . 64 5.16 In the case of proportional transaction costs, we are not able to remove the gap, because of limitation on a < 0.027. . . . . . . . . . . . . 5.17 Yahoo! Inc.path price and The J-N price path. 5.18 Yahoo! Inc.path price and The J-N price path. 5.19 Yahoo! Inc.path price and The J-N price path when N2 = 80 and Vo = Qvmax · 5.20 Yahoo! Inc.path price and The J-N price path. . . . . . . . . . . . . . . . . . . 65 67 68 69 69

5.21 The behavior of the quadratic variation as the strike price increases with fixed transaction costs... _ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. 71 5.22 The behavior of the quadratic variation as the strike price increases with proportional transaction cost. . . . . . . . . . . . . . . . . . . . . . . . . . . _ . . . . . . . . . . . . .. 72

xvi

List of Appendices
A Some Basic Concepts in Finance B Binomial Tree Model C Dynamic Programming C.l What Is Dynamic Progranuning? C.2 Analytical Concepts in DP ... C.2.l Utility or payoff Function C.2.2 Control and State Variable C.2.3 Policy .... C.2.4 Basic Model. D The Optimal Hedging D.l Basic Model . . . . . . . . . . D.2 Proportional Transaction Costs
~

75 77
81 81 81 82 82 83 83 87 87 89 91

E MATLAB Code

xvii

Chapter 1

Introduction
1.1 Background Material

A fundamental question in finance is to determine the value of a financial option todayl Black and Scholes [Black and Scholes, 1973] studied this question in a path breaking paper which showed how one can replicate the payoff of an option using a dynamic trading strategy. Based Oil this results they provided a unique value of the option. Their approach uses a no arbitrage condition and is based on the a..<;sl1mption that the logarithm of the stock price follows a certain continuous time version of a random walk. They also a..<;sume that the stock and the risk free bond can be traded continuously. The Black-Scholes model provides the unique price of a contingent claim in an ideal, complete and unconstrained market based on the fundamental principle of absence of arbitrage opportunities. In other words, this price is the unique one for which there are no arbitrage opportunities by taking either a short or long position in the claim and investing wisely in.the market. The Black-Scholes model also provides a single hedging portfolio which one can use to exactly duplicate the claim. However, the assumptions of the model may not be closely met in practice. This could be because markets are incomplete. Market incompleteness generally comes from two main resources [llao, 2008]:
1. There are not enough assets in the market to span the uncertainty.

2. Trading strategies are limited or not ideal because of discrete trading, jumps or transaction costs, short selling constraints, etc. In incomplete markets, instead of a single arbitrage-free price there appears an arbitrage-free interval [JL, V1 which contains a spectrum of market prices. Here, V is the greatest price the buyer can afford to pay without risk and V represents the lea..<;t price the seller can accept without risk. This interval ha..<; the following properties:
1 For the reader's convenience, Appendix A provides a brid introduction to the basic finance cOllcepts which arc used in this thesis.

1

1.1. BACKGROUND :AIATER1AL

CHAPTER 1. INTRODUCTION

· Every price level outside the interval leads to an arbitrage opportunity. · There are
110

arbitrage opportunities for price level in the interior of the interval.

There is no single widely accepted method to calculate bounds prices in an incomplete market. One approach is to find a super-replicating strategy which is a portfolio whose payoifs are always at least as big as the payoff of the option being hedged. The value of the option is then bounded by the value of the super-replicating portfolio. The super-replication price is the minimal initial wealth needed to hedge without risk the contingent claim. A second approach is the utility-ba..<;ed valuation; in this ca..'le the investor of the contingent claim assumes unhedgable risk, which will affect the probability distribution of his/her consumption and final wealth level, and his/her utility function. Pricing bounds are useful ill many situations ill which a relative pricing approach is appropriate but perfect replication is not po.,"lsible. A few examples follow [Hao, 2008]: 1. A trader can use the bounds a..'l buy and sell points in the search for good deals ill asset markets. 2. A bank or other institution that markets or synthesizes non traded securities can use bounds a..'l bid and a..'lk prices. 3. Bounds can be usen as economic measure of the accuracy of an option pricing formula. 4. Option pricing formulas are often u.-sed in risk a..'lsessments to quantify the exposure of a position to various risk factors. It is useful to assess such risks when perfect replication is impossible and to quantify the importance of the market price of risk a.."lsUmptiolls. Obtaining bounds for option prices can be traced all the way back to 1Ierton's paper [Merton, 1973] on option pricing in 1973. The reference addresses this question by a..'lking what can be said about the value of a call option without making any additional a..'lsumptions about the price path. The answer is that a European call option on a risky a..'lset with zero interest rate, the price

Yo of this option must satisfy:
(1.1)

max [8 - 1<,0] :5 Vo :5 8,
where 8 is the spot price of the underlying.

Figure 1.1 shows the boundary as the 45 degree line from the origin. Along this line, the call option is worth the same as the stock. The lower bound is the value of the call option at expiration by using a European call option. Recall that the above bound is ba..'led on an arbitrage condition; if the price of the call option is outside this range then one can construct an arbitrage strategy that is guaranteed to make money without risk.

2

CHAPTER 1. INTRODUCTION

1.1. BACKGROUND A1ATERlAL

(JJ

";:
0-

v

.2

s::

0..
o

Stock price

Figure 1.1: The boundary region for a call option's prices

On the mathematics and financial assumptions on the standard Merton bounds, there are two things one can cOlJ...'>ider. First, the Merton bounds (1.1) requires no knowledge of the underlying asset's terminal price distribution or investor's behavior that will produce increasingly tighter bounds on option prices if additional assumptions are placed on investor preferences. Second, a crucial simplification in Merton's work is the absence of transaction costs. In such idealized model the investor would optimally maintain a proportion of wealth in the stock by trading continuously. Such continuous strategies are no longer admissible once the transaction costs are introduced. The investor must then determine when the stock position is sufficiently out of line to make the trading worthwhile. The present thesis builds on the approach from model from [Britten and Neuberger, 1996]. The approach in [Britten and Neuberger, 1996] manages to obtain tighter bounds in an incomplete market model by introducing realistic restrictions on the set of values taken by the underlying process. That reference develop this approach in a non probabilistic setting. The most important constraint of this model is that the (sampled) quadratic log variation of the prices of the underlying is known. They also assume that trading will take place at a finite number of occasions but it is not necessary to occur in equally spaced time intervals. An upper bound restriction on jumps size is also imposed. As indicated, as a main goal of our thesis, we introduce transaction costs in the framework from [Britten and Neuberger, 1996]. As a ra'lult, we propose an approach to the pricing and hedging of contingent claims in the presence of transaction costs, under a general incomplete market in discrete time with special reference to the models introduced in [Bellsaid and Scheillkman, 1992] and
[Bri~ten

and Neuberger, 1996] (and expanded in

[Rcbonato, 2004]). An flpecific objective of the study is t.o add two types of transaction costs to the basic

3

1.2. OVERVIEW OF THE THESIS

CHAPTER 1. INTRODUCTION

[Avellaneda and Paras, 1995], ba..'\ed on the framework described in [llrit.t.en and Neuberger, 1996].

1.2

Overview of the thesis

This work is structured as follows. Chapter 2 introduces some of the notation to be used in the remailldiug of the thesis. \Ve assume that there is a forward market in the asset S where the forward price for delivery of stock at time tn will be denoted by Sn 2 · No probability structure is imposed at the outset. We also introduce the ba..'Iic model from [Britten and Neuberger, 1996], the lower and upper bounds for the derivative's prices are a1'\0 introduced. Section 2.3 uses the dynamic programming optimization methodology to make the problem computationally tractable. Chapter 3 formulates two models for transaction costs in the ba..'Iic franlework of [Britten and Neuberger, 1996]. The investor's portfolio model in this chapter consists of one risky and one risk-free asset. Whenever the investor re-balances his/her portfolio in favor for one or the other asset class, he/she faces transaction cost.s. Transaction cost.s are either assumed to be of a fixed value or proport.ional to the volume of the risk")' a..'\set traded. Section 3.1 provides a review of the transaction costs models. Fixed costs are described in Section 3.2, there it is shO\vn how to compute the minimum upper bound. The dynamic programming formulation of the problem is also introduced. Section 3.3 develops the proportional transaction cost model, this means that transaction costs are proportional to the wealth transferred. This extends the basic framework from [Britten and Neuberger, 1996]. We also encode the optimization problem in terms of dynamic programming. Chapter 4 describes the construction of the pricing algorithm, which is referred as the J-N algorithm and presents the mathematical setup of this algorithm. Chapter 5 discusses numerical tests of the methods which were introduced in Chapter 2 and Chapter 3. We also study the approach in real market data, one interesting a..'Ipect of this investigation is to analyze the effects of the transaction costs on removing any available arbitrage opportunities. Appendix A presents a very short introduction to financial concepts, Appendices Band C contain an introduction to the Binomial Model and the dynamic programming respectively. Appendix D contains analytical derivations of the opt.imal hedging ratios for the different models, these are not needed in the rest of the thesis. Finally all Matlab code is available in Appendix E.

2We will assume zero interest rates, this implies that we will end up dealing directly with the stock value Sn.

4

Chapter 2

Basic Model
A central question in finance consists in finding the price of an option given information on the underlying asset. The approach which is taken here is not a traditional approach as it does not rely on a probability model. We also allow for some market imperfections. :More precisely, we are interested in determining the price of an option using a non probabilistic approach with a no-arbitrage condition. Since our model is incomplete because jumps are allowed, one cannot use an exact pricing rule. Independently of this state of affairs, one can always scarch for a Lounding principle for the price of an option. BrittenJones and Neuberger [Britten and Neuberger, 1996] (in some instances, during the following pages, these reference/authors are abbreviated by J-N) introduced an interesting way of looking at option pricing by assuming that the (sampled) log quadratic variation of price changes over the option's life is known. This chapter contains a review of this arbitrage-free approach to the pricing of derivatives.

2.1

Framework

The objective of this section is to model an incomplete financial market with a non probabilistic approach in a market containing one risk-free (bank account) and a risky assets (stock). In order to simplify our formulas and developments, we assume:
1. There are no ta.xes and transactions costs.

2. The riskless borrowing and lending rats are zero. We discuss a more general framework in Chapter 3. According to Merton's bound,l discussed in the previous chapter, the option is not more valuable than the underlying asset. This is a very weak bound but it is tight in the case that no extra restrictions are placed on the price path of the risky asset. In this work, we show through computer experimentation,
1 Merton's bound is based on an arbitrage condition; if the price of the call option is outside this range then one can construct an arbitrage strategy that is guaranteed to make money without risk.

5

2.1. FRAMEWORK

CHAPTER 2. BASIC MODEL

that practical bounds are obtained by assuming a known (log) quadratic variation and a bound on the jump size a..'1 constraints on allowed paths for the risky a..'1set.

2.1.1

Non-probabilistic Asset Price Models

Assume a finit.e discrete model such that trading will t.ake place at a finite number of occasions which is not fixed in number or necessarily equally spaced in time. There is a risky asset (e.g. stock) with S(O) being today's price, and its value at tn ~ T is denoted by Sn. 1loreover, at any trading po..'!ition tn ~ T, we have an amount of ca..'!h Bn in a bank account with zero interest rate.

Definition 1. Assume Si is the price of the underlying at trading position i, an asset price path 7f is any finite sequence of positive numbers {Si}f:,O' where N is not set a priori but may equal to any finite positive integer and at maturity SN is eqttal to ST (ST == SeT)).
In addition, we consider a European contingent claim, V, a security whose payoff at time T is only dependent on ST. It means that the forward price path {Si}f:,O has a payoff at T which depends only on ST, written a..'l V(ST)' For exanlple, a European call option payoff is given by:
VeST) = max(ST - ](,0),

where

J{

is the strike price.

Now, we provide constraints on path's prices {Si}f:,O which will allow us to calculate no arbitrage price bounds which will be tighter that the 11erton's bounds in the ca..'1e of an incomplete market. In order to reach our goal, we make two a..'lsumptions regarding the price path. We a..'lsume that the (sampled log) quadratic variation of the risky asset is constant (Le. it docs not depend OIl the specific path) and we have a jump restriction between tradings.

Definition 2. For a given constant v> 0, d> 0, and S(O), a price sequence 7f {So, Sll ... SN}, where So S(O), belongs to the set of permissible price sequences peSo, v, d) if and only if
1. So S(O),

°
N-l

~

i..:;, N

1,

3.

E

(luSH1

lnSi )2

v.

i=O

The first condition simply requires that, for a price sequence to be permissible, its first value should be equal to the price of the underlying a..'!set today. The second condition implies that the jump in the log of the prices between any two steps should not be larger than the given value d.
N-l

As far as the last condition is concerned, it is easy to recognize that

E (In SHl -In Si)2 is the sampled

i=O

(log) quadratic variation generated by the price sequence. This sampled quadratic variation should be known and be exactly equal to v. 6

CHAPTER 2. BASIC MODEL Definition 3. For a given price sequence 1. vo = v,
O~i~N-1.

2.1. FRAMEWORK
E peSo, v, d) at step i, define:

7r

{vd!o is called a sequence of remaining (sampled) quadratic variations.
The second condition shows that every price move uses up the fraction (In Si+l - In Si)2 of the total quadratic variation, until finally at option expiry T, the given value v is all exactly depleted. Note that by using items 1. and 2. from Definition 3, we have i-l Vo - 2:(lnSkH -lnSk)2. k=O

Vi

(2.1)

Hence, the

Vi

gives information about how much of the quadratic variation is available to consume in

each trading occasion i. In Figures 2.1 and 2.2, one can see a time series path of prices for two different trading strategies. In both ca..<;es, the trader will trade to re-balance her/his hedging portfolio; note that there is no presumption that trading takes place at constant time intervals and the number of trades can be as small or large as the trader requires. Example A: In the case A, assume that maximum jump size is d, the quadratic variation is equal to result he/she trades whenever:
11

and in addition a..<;sume the trader is very lazy to trade more often or he/she expects larger gains. As a

As displayed in Figure (2.1), the trader has traded N variation v.

= 24 times

and has used up all of the quadratic

Example B: In this ca..<;e, Figure 2.2, for the same fixed maximum jump size d, the quadratic variation

v, the trader re-balances his/her portfolio more often and at any time he/she wishes as far as the log of price changes is less or equal max jump d. Therefore at expiration T, he ends up with a permissible
path {Si}t~O'

7

2.1. FRAMEWORK

CHAPTER 2. BASIC MODEL

Figure 2.1: Case A: A lazy permissible path for the given maximum jump size d and the quadratic variation v.

,--.--.-~.- --~- . ..--.r.-~~-"-,,.-------~". Jump .... Llump.~.-<-.Ju"",~",.--<-Jwnp!.d...-~~.----

_. _ _ ___.._______________ .. ________ .lnS
~

Figure 2.2: Ca.<;e B: A possible permissible path which trader can trade any time less or equal maximum jump size d

&'l

far as log return is

8

CHAPTER 2. BASIC MODEL

2.1. FRAMEWORK

2.1.2

Trading Strategy

The most important tool that a trader uses to make money is undoubtedly her Ihis trading strategies. A trading strategy, may mean different things to different people. At any given point in time, for any given security, a trading strategy should first tell a trader whether to buy, sell or hold; it then should provide the optimal trading size under the given market price. In finance, a trading strategy is a predefined set of nIles for making trading decisions. An investment strategy on the stock is given by a function H(.,.) that depends on the spot Si and the remaining volatility Vi and it represents the number of shares in the holding portfolio when S(ti) and the the remaining quadratic variation is equal to Vi. We will restrict the investment strategies H(.,.) to belong to a given set
!HI will satisfy t.he following definition.

= Si

whenever required this set

Definition 4. !HI is called an admissible class if it satisfies

(2.2)
The holdings in the bank account will be denoted by BS,.fJi' hence, a portfolio can be define as a vector valued function r(Si, vd

= (H(Si' vd, Bs"v.)'

Sometimes for simplicity we set hi == H(Si,Vi) and

Bi =

BSi,fJ.'

2.1.3

Profits/Losses of Investor

\Ve assume that, at time zero, the investor has Vo dollars and invests this money in a portfolio containing

H(So, vo) shares and deposits Bo

= Va
Vo

H(So, vo)So in a bank account with zero interest rate. The

initial value Vo of this portfolio is given by:

H(So, vo)So + Bo·

(2.3)

In general, the value of the portfolio Vn at n-th trade, after adjustment, Illay be written 8.<;;

(2.4)
where H(Sn. vn ) is the number of shares of the underlying asset and Bn is the amount of c8.<;h in the account. The investor holds this portfolio until 11 + 1. To proceed further, we need an equation governing the dynamics of the self-financing hedging portfolio. At stage n + 1 and before ailjusting the portfolio under the self-financing constraint, the portfolio's value

9

2.2. STRUCTURE OF AN OPTIMAL STRATEGY equals (recall that we 8.'>sume interest rates r
0):

CHAPTER 2. BASIC MODEL

Then, using the self-financing trading strategy condition, the portfolio becomes

(2.5)
So at (n +

l/ h trading position after re-balancing, the value of the investor's portfolio h<;:
(2.6)

By using (2.4) and (2.6) and then applying the self-fina.ncing equation (2.5) we can find the varia.tion of the portfolio at two successive moments of trading in the form;
(2.7)

By applying (2.7) recursively; at maturity T, we have

Hence; by the self financing property of the constructed portfolio:
N-l

H(SN-b VN-I)ST+8T

Vr(So,vo)

+

L

H(Si,Vi)(SHl- S j),

i=O

where the initial value Vr{So, vol = H(So, vo)So + 8 0 will also be denoted Vo. An important remark, to be used below, is that once H(.,.) is fixed, the self financing constraint on the portfolio r determines 8 k for k 1, ... , N - 1 and only, either Vo or 80, can be set arbitrarily. Definition 5. Assume a derivative with payojJ V(ST), for a given hedging strategy lI(.,.) and price path 7r E peSo, vo, d), we denote the total balance of hedging (profit or loss) as follows:

lIH{7r) = Vo - V(ST)

+L

N-l

HeSi, Vi)(SHl - Sd·

(2.8)

i=O

2.2

Structure of an Optimal Strategy

We show next how the above introduced framework can be used to provide the upper and the lower bounds for the value of an option.

10

CHAPTER 2. BASIC MODEL

2.2. STRUCTURE OF AN OPTL\1AL STRATEGY

2.2.1

Why Minimax Approach?

Mathematical finance theory is devoted to the modeling of stock prices and devising investment strategies that maximize wealth gain, minimize risk while doing so, and so on. Typically, this is done by estimating the parameters in a probabilistic model of stock prices returns. One of the most popular probabilistic models is known &'1 the Geometric Brownian Motion. Even though, empirically the Geometric Brownian Motion [Osborne, 1959] has enjoyed great predictive success and every year trillions of dollars are traded &'lsuming this model 2 j in reality, several decisions fall into the non-probabilistic category. "While there maybe insufficient quantitative information to establish probabilistic criteria, the decision-maker can still apply qualitative judgment and experience to the situation. It would he a very unusual problem indeed that would leave a decision-maker bereft of ideas! For cases where probabilities cannot be specified, the main decision criteria are maximin, maximax, and minimax. · The maximax rule, A risk-seeking decision-maker will choose the adventurous maximax decision rule. He takes an optimistic view that everything will turn out right regardless of what decision is taken. It looks only at the highest possible gain and ignores the opportunities that other alternatives might present. In monetary terms, a maximax decision looks for the best of the best by evaluating the largest possible profit that each alternative can produce and then choosing the alternative with the highest profit. An organization that adopts a maximax approacili perceives a business opportunity and takes a gamble in trying to achieve its goal. It may become very profitable or it may go broke. · The maximin rule, A risk-averse decision-maker will use the conservative maximin criterion which often leads to a decision to do nothing. An organization that adopts a ma..ximin attitude is noncompetitive and will soon be overtaken by more innovative risk-taking competitors. The maximin criterion essentially takes a pessimistic view and cOllsiders the results of taking the wrong alternative. It evaluates the worst outcome for each alternative and then chooses the alternative which leads to the best of these worst outcomes. In monetary terms, a maximin decision looks for the best of the worst by choosing the alternative that yields the maximum profit from all minimum po.'lsible returns hence the name maximin. · The minimax rule can be considered as another conservative or pessimistic decision rule. In this C&'le, a minimax decision looks for the minimum of the maximums by evaluating the largest possible opportunity loss that each alternative would produce and then choosing the alternative v.dth the smallest loss. Thus, the minimax rule chooses the alternative with the smallest (or minimum) maximum regret hence the name minimax.
2Black-Scholes used this same model in their work on pricing options on stocks.

11

2.2. STRUCTURE OF AN OPTIMAL STRATEGY

CHAPTER 2. BASIC MODEL

2.2.2

Optimal Strategy
3

Consider an investor who sold a derivative

with payoff V (Sr) and option's price of

Vo,

and also who

uses the trading strategy H(.,.) to hedge the derivative.

Remark 1. Note that we use the amount Vo to set up the portfolio as an initial value in order to find a suitable upper bound for this amount. Let us to fix a hedging strategy H(.,.) and according to (2.8), the investor's profit which depends on permissible path 7r is
N-l

TIjf(7r) = Vo - V(Sr)

+

L

H(Si,Vi)(Si+l - Si).

i=O

The second term (appearing with a minus sign) represents the payoff of the derivative at time of expiry T and the last term represents the gains/losses from trading. Definition 6. A strategy H(.,.) is an arbitrage strategy if · V7r E p(So, Vo, d), TIH(7r)? 0 (1 Vo

= H(So, vo)So + Bo = 0,

Therefore a given trading strategy H(.,.) is not an arbitrage if there exists 7r E P(So, Vo, d)

/
I]jf(7r) = Vo - V(Sr) or

+L
N-l

N-l

H(Si,Vi)(Si+1 - Si) <

o.

i=O

Vo < V(Sr) Therefore,

L H(Si, Vi)(Si+l - Si).
i=O

The trading strategy H(.,.) being arbitrary, we obtain:

(2.9)
3The derivative here is an European path-independent derivative.

12

CHAPTER 2. BASIC MODEL

2.2. STRUCTURE OF AN OPTIMAL STRATEGY

Let us denote the minimum upper bound (2.9) as V(So,vo)

V(So, vo) == inf {
H

1rEP(So.vQ.d)

sup..

{V(ST)

(2.10)

In Proposition 3, we show that V(So, vo) can be interpreted as the maximum price a trader can charge by selling the derivative a.sset: nobody (who acknowledges only future paths with the quadratic variation v and maximum jumps d) will buy the option for more than V(So, vo). According to Proposition 7, the maximum lower bound can be calculated as the negative value of the minimum upper bound V{So, vo) with the negative payoff (short position). So from a financial point of view, in the short position, the upper bound on this position can be interpreted as the lower bound on the long position.
(2.11)

V{So, vo) can be interpreted as the minimum price a trader will have to pay for the derivative. Nobody

will sell it for less than V(So, vo). Before proceeding any further, let us introdnce some basic properties of the minimum upper bound
V(So,vo).

Remark 2. For given a contingent claim with payojJV(ST), the minimum upper bound
V(So,VO)=iIlf{
H

sup
1rEP(So,vQ,d)
\

{V(ST)

from a mathematical point of mew, means that for all E:
N-l

> 0, there exist a trading strategy He such that
Si) - V(So, vo) :5
.

0:5 V(ST) -

I: Hf(Si, ~i) (Si+l
;=0

(2.12)

The following propositions show that by means of V(So, vo) and V(So, vo) one has an upper-hedging and under-hedging portfolio for a derivative with payoff V(ST)'

Proposition 1. Fix a payojJV(ST), then for all  > 0 there exists a portfolio r(.,.) = (H(.,.),B.,.), depending on f, with VdSo, vo) !:: V(So, vo) such that the following bound holds for all permissible paths 13

2.2. STRUCTURE OF AN OPTIMAL STRATEGY
{So, ... , SN}: V(ST) ~ Vr(SO, VO) Proof For an arbitrary
f

CHAPTER 2. BASIC MODEL

+L

N-l H(Si, Vi) (Si+l Si)

+ E.

(2.13)

;=0

> 0 select H,(.,.) satisfying:
N-l

o ~ VeST) -

L

lIe (Si, Vi) (Si+l

Si) - V(SO,VO) ~

E,

(2.14)

;=0

for all permissible paths {So"",SN}' Then, by defining 8 0 == V(So,vo) - H«So,vo)So, the portfolio defined by r(.,.) (H({.,), B.,.} satisfies Vr(So, vo) V(So, vo). A re-writing of (2.14) gives then (2.13)
VeST) ~ Vr(So,Vo)

+L

N-l lI(Si,vi) (S;+1 - Si)

+ E.

;=0

o
Proposition 2. Fix a payoj] V (ST), assume IHl is closed under multiplication by -1, then for all f > 0, there exists a portfolio r(.,.) (H(., .), 8.,.), depending on E, with Vr(So. vol ::; V(So, vo) such that the following bound holds for all permissible paths {So, ... , S N }:
V(ST) ;:::.: Vr(So, vo) Proof. For an arbitrary

+L

N-l H(S;, Vi) (Si+l - S;)
.

(2.15)

i="O
f

> 0 select

H~(.,.)

satisfying:

(2.16)

for all permissible paths {So, ... , SN}. Then, by defining 8 0 defined by r(.,.) obtain:
(lI~(., .), B.,.) satisfies Vr(So,17o)

==

V(So, vo)

lI:(So,17o)So, the portfolio

= V(So,17o).

So by taking lIt (.,.)

==

-H~(.,.) we

VeST) ;:::.: Vr(So,vo)

+L

N-l H,(Sj,Vi) (Si+1 - Si) - c.
i=O

o
The following shows that superhedge for the minimum upper bound and underhedge for the maximum lower bound are tight.

Proposition 3. Consider contingent claim with a payojJV(ST) and an arbitrary H(.,.) E 1Hl ·
· /fVo

= H(So,vo)So + Bo < V(So,vo)
Vo

then,

+L

N-l H(Si, 17i)(S;+1 - Si)

< VeST) for some permissible price sequence {Sd.
14

(2.17)

i=O

CHAPTER 2. BASIC AI0DEL
· If Vo

2.2. STRUCTURE OF AN OPTIMAL STRATEGY
then,

= H(So, vo)So + Bo > V(So, vo)
N-I

Vo +

L

,

H(S., Vi)(Si+1 - Si) > V(ST) for some permissible price sequence {Silo

(2.18)

i=O Proof. We prove only (2.17); a.'isume there exists H(.,.) E IHl satisfying Vo V(So, vo), also assume that (2.17) does not hold. Therefore,
N-I

=

H(So, vo)So

+ Bo <

Vo ~

sup
7rEP(So,1JQ,d)

[V(ST) -

i=O

L H(Si,vi)(Si+1 -

Si)]'

This implies Vo than sup.

~

V(So, vo). For the lower bound, the process is the same just one can use inf rather

0

Proposition 4. Consider a contingent claim with payoff V3(ST) that is a convex combination of the A\Il (ST) + (1 - A)V2(ST), where 0 ~ A ~ 1. Also assume IHl payoffs on two other claims, i.e. V3(ST) is closed under convex combinations. Then the minimnm upper bound V 3(SO, vo) satisfies

Proof. For any ,\ E (0,1), the payoff V3(ST) is defined by:

(2.19)
Assume V I (So, vo) be the minimum upper bound which has the payoff VI (ST)' Then for any arbitrary .e

> 0 and all1r E

peSo, Vo, d), there is a H(.,.) E H such that

(2.20)
Similarly there exist L(.,.) E H

By adding (2.20) and (2.21), we obtain

AV I{SO, vo)

+ (1 -

A)V2(SO, vo)

~ s~p { AV1(ST) - A~ H(Si, Vi)(Si+1 + s~p { (1 -

Si)}

~
~

A)V2(ST) - (1 - A) } ; L(Si, Vi)(Si+l - Si) } -

15

2.2. STRUCTURE OF AN OPTIAIAL STRATEGY

CHAPTER 2. BASIC AI0DEL

So, by using (2.19)

Set Y(Si, Vi)

AII{Si. Vi)

(1

A)L(Sh Vi)

4,

so the trading strategy Y(.,.) E lHI. Hence;

Since (; > 0 is arbitrary, we can choose it small enough such that

o
Proposition 5. Given two contingent claims with payoff VI (ST) and V2 (ST) such that

where a, b are arbitrary real numbers, and also assume lHI is close under multiplication, then

Proof. as.<;ume a

> 0 (when a = 0 the result holds trivially) by definition:

Now, it is enough to pull out a as common factor so,

So let us call ~II(Si,vi) as a new strategy II'(Si,vi)' Hence (2.22) When a < 0, then -a> O. To use the same argument, equation (2.22) can be written as

4Recall H(.,.),L(.,.) E 1Hl, and IHl is assumed to be closed under convex combinations

16

CHAPTER 2. BASIC MODEL
Therefore

2.2. STRUCTURE OF AN OPTIMAL STRATEGY

o
Proposition 6. Assume a derivative with payoff V(ST), and also minimum upper bound
V(So, vo) = inf {
H

JH[

is an admissible class, then the

sup
7rEP(SQ,vo,d)

{V(ST)

(2.23)

satisfies the following properties: 1. IjV(ST)
2. IjV(ST)

= a then V(So,vo) = O.
k then V(So,vo)

= k.

3. If VeST)

kST and JH[ is closed under multiplication by (-1) and shifts by a constant k then V(So, vo) = kS(O).

Proof. 1. Suppose that V(ST)

0 because

JH[

is an admissible class, then according to equation (2.2),

Therefore, V(So, vol

= o.
V(ST)-k

2. Assume that VeST) = k, alldlet VeST) on the other hand

= 0, so from Property 1 we obtain V(So,vo)

0,

= inf {
H

7rEP(So,vQ,d)

sup

{veST)

V(So, Vo) - k

= O.

Hence, V(So, vol

= k. = kST
where k is a fixed real number, recall that ST

3. Consider the payoff V(ST)

=

SN and

1r

E

17

2.2. STRUCTURE OF AN OPTIMAL STRATEGY
peSo, vo, d) then:

CHAPTER 2. BASIC MODEL

V(So,VO)

i}}f i}}f

{s~p {kST {s~p { k SN' -

%:

H(Si,Vi)(SHl - Si)} }

H(SN-l, VN-l)SN

+ H(SN-b vN-dSN-l

= i}}f {s~p { (k -

H(SN-l> vN-dSN

+ (H(SN-b VN-I) + k SN-I)+kSN- 1

k)SN-l -

~ H(Si, Vi)(SHl -

Si) } }

~ H(Si,Vi)(SHl-Si)}} = ...
t=O

Si)} },

since kSo is constant and IHl is an admissible cla.<;s, so by equation (2.2) we obtain:
0
, Jt.

V(So, vol =

i'lf

N-2

1
1t

sup {-

L (k i=O

H(Si, Vd)(SHI

So) }')

+ kSo

~

kSo.

o
The following proposition gives the relationship between the bound on the long position and the bound on a short position on the same claim. Proposition 7. Given two contingent claims with payoff VI(ST) and V2(ST) such that V2(ST) - VI (ST ), assume IHI is closed under convex combination, then
1. VI (So, va) + V2(SO, vo) ::::: 2 V3(0), where, allOwing for some ab7lse of notation, V 3(0) denotes the minimum upper bound for a continent claim with payoff V3(ST) = o.

2. IflHI is an admissible class, then V 1 (S'0,vo)

+ V 2 (So,vo)::::: O.

Proof. 1. By assumption, we have two contingent claims with payoff V1 (ST), and 'V2(ST) such that

or equally
1 2Vi(ST)

+ 2V2(ST) = V3(ST) = O.
18

1

CHAPTER 2. BASIC MODEL Then from Proposition 4

2.3. DYNAMIC PROGRAMA1JNG FORl\lULATION

2.If lHl is an admis..'iible cla.<;s, then by Proposition 6, since V 3(Sr)

= 0 when V 3(SO, vo) =

O. Hence

o
As a result of Proposition 7, since

If lHl is an admissible cla.'is, it follows from Proposition 7, item 2, that:
V(So, vo)

2 V(So, vo).

(2.24)

The..'ie arbitrage bounds mean that investors would not pay more than V(So, vo) and would not sell it for less than V{So,vo).

2.3

Dynamic Programming Formulation

The solution to the problem (2.10) is a strategy H(.,.) such that minimizes total payout in the worst-ca.se scenario. Therefore, potentially, this is a hard problem because involves a search over all permissible paths and over all hedging strategies. The beauty of dynamic programming (see Appendix C for more detaiL'! about dynamic progranllning) is to convert problems which is easy to solve.
th~

sequential problem into a collection of two-period

2.3.1

The General Problem

Let us clarify up the a.'!sumptions which are necessary to convert the sequential problem (2.10) into a dynamic programming problem, first we need to detect state variables and control variables (Appendix

C).
As..'iume
Si

and

Vi,

where 0 s:; i s:; N, he two of state variables of the system which summarize the pa.st

information that is relevant for future optimization and Ci is a control variables which can be chosen in every period of trading by the decision-maker. We define Ci as control variable which is equal the continuously compounded growth (rate of return) between the adjusted prices:

19

2.3. DYNAMIC PROGRAMMLVG FORMULATION
So

CHAPTER 2. BASIC MODEL

The other state variable is the volatility

Vi

which evolves as;

Now, we have following optimization problem:
(2.25)

where hi ll(Si,Vi). Subject to

· Ci

E II< &

c; ~ d?

where i

= 0, ... , N

- 1.

· So

= S(O) and vo = v are given.

v (ST) is called a "scrap" value function at the end of the program where no further decisions are made.
N-I

L:

hi (Si+1- Si) is separable after the start trading and Si+1

= SieCi is separable by following structure:

i=O

Sl = Soe co ,
S2

Sleel,

These equations are called transition equations. This problem can be solved by using the standard constrained optimization technique of Lagrange multipliers. This is a perfectly good approach, but dynamic programming is an alternative that is sometimes more convenient. As we consider in Appendix C, as more convenient method to use is Bellman's Principle of Optimality which guarantees that if we convert the original sequential problem into a collection of small problems, the optimal choice in each of the two-period problem must be globally optimal to justify the transformation.

20

CHAPTER 2. BASIC MODEL

2.3. DYNAMIC PROGRAMMING FORMULATION

Bellman's Method: Consider the problem at time zero: Problem I:

Subject to

· Ci

E lR &

c;:::;

d2

where i

0, ... , N - 1.

· 8 0 = 8(0) and

Vo

v are given.

Now consider the same problem, starting at some no Problem II

> 0:

Subject to

·

Ci

E lR &

c; ~ d2 where i

no, ... , N - 1.

· 8 no is given.
According to Bellman's Principle of Optimahty asserts [Bellman, 1957J, any solution to Problem I (Le. on the range i = 0, ... , T) which yields to 80 = 8(0) and an optimal strategy also must solve Problem II (i.e.: on the range i = no, ... , T). Remark 3. This result depends on
addi~ive

time separability, since otherwise we could not "break" the

solution at no. Additive separability is sufficient for Bellman's principle of optimality.

Bellman's principle of optimality allows us to use the trick of solving large Problem I by solving the smaller Problem II, sequentially. Also, sinct( no is arbitrary, we can choose to solve the problem no N -1 first, which is a simple 2-period problem, and then work backwards as follows. Step 1: Set no N

.r

1, so that ProbIelp II is simply:

21

2.3. DYNAMIC PROGRAMMING FORMULATION

CHAPTER 2. BASIC MODEL

Subject to

· SN-l is given.

Step 2: Set no

N - 2, so that Problem II is:

V(SN_2,VN_2) =

h

{.L=N-2

i~~l

{

{e;}.=N-2

S~~,

{-hN-2(SN-l - SN-2) - hN-l(SN - SN-d

+ VeST)}}
(2.26)

Subject to

· SN-2 , SN-l are given. According to [Bertseka.'l, 1976], we can rewrite this a.'l : hN-2(SN-l-SN-2)+ sup {-hN-1(SN-SN-d+V(STH} =
{CN-t}

inf
{hN-2,hN-t}

{sup
{eN -t}

inf
{hN-2}

{sup - hN-2(SN-l - SN-Z) +
{CN-2}

inf

SUp {-hN-1(SN

SN-d

{hN-d{CN_d

+ veST)}}

(2.26) has already given us the solution to the inside ma..ximization problem, so that we can re-write Step 2 as:

Subject to · SN-l = SN_2 eCN - 2 , VN-l
· SN-2

= VN-2 - cJ.,-2 ~ 0
d
2 ·

is given and C~_2

:::;

Step 3: Using an argument analogous Step 2, in general, the problem in period i can be written as:

Subject to:

22

CHAPTER 2. BASIC MODEL

2.3. DYNAMIC PROGRAMMING FORMULATION

· Si is given.

Step 4:
After going through the successive rounds of single period optimization problems, eventually one reaches the problem in time zero:

Vo(S, v)

{h o}

inf {sup {V(St. vd
{co}

ho(So - Sd}} .

· S1 = Soe Co and c~ :'5 Jl.
· So = S, Vo

= v is given.

2.3.2

Bellman Equation

Therefore, the Bellman Equation can be written as

(2.27)

Subject to the conditions

The initial boundary conditions are given by the initial values of the state variables, So, Vo. Obviously, at the boundary v = 0, we have V(ST, O) number of price moves N. In chapter 4 we will developed a numerical solution for above optimization based Neuberger model.
011

V(ST)' Note that the terminal price ST is free, as is the

the Britten-

23

2.3. DYNAMIC PROGRAMMING FOR.MULATION

CHAPTER 2. BASIC MODEL

24

Chapter 3

Transaction Costs Models
In the analysis ofthe Britten and Neuberger's model, described in the previous chapter, we have assumed that trading, by buying and selling the underlying, is costless in the sense that we can buy or sell any amount at the given market price withont paying an intermediary or affecting the price. In order to have a more realist model, we extend the previotL.'l setup to include modeL'l with transaction costs. This will allow us to study how several of the model's features are affected by the introduction of transaction costs. One way of introducing transaction costs in the basic model is to interpret the sequence of prices in a permissible price path as bid or ask pricesj this point of view is suggested in [Britten and Neuberger, 1996] anq [Rebonato, 2004]. In this work, we propose more direct ways to approach the pricing and hedging of contingent claims under transaction costs with the same general assumptions on price paths and the quadratic variation as in the previous chapter. After a short review of how transaction costs appear in financial practice, we proceed to describe two reasonable models of them which fit with our basic model. More precisely, we present an original extension of the basic framework for pricing derivatives in [Britten and Neuberger, 1996] by introducung two models of transaction costs and we show how we can find the option's price bounds in these cases.

3.1

What are Transaction Costs?

Over the past decades, trading has increasingly been regarded as an area for cutting costs. Several alternatives have evolved for placing orders, and models for transaction costs have become increasingly important as a means for evaluating them. Also, the option pricing in the presence of transaction costs has recently become a very popular subject for research; in particular, it represents one way of removing arbitrages in real markets as well as in some models. In financial economics, transaction costs are generally underst.ood as all costs associated wit.h trading
25

3.1, \VHAT ARE TRANSACTION COSTS?

CHAPTER 3. TRANSACTION COSTS MODELS

and are categorized according to three groups [Harris, 2003]; explicit costs, implicit costs, and missed tl'ade opportunity costs. · Explicit transaction costs: are costs that are observable and known upfront and directly related to trading such as conunissions paid to brokers, fees paid to exchanges, and other transaction based taxes, and also, as in the ca.qe of larger trading organizations, the internal costs snch as salaries of traders, software, and accoullting. · Implicit transaction costs: are also referred to a.'l unobservable transaction costs and include such elements as price impact 1 and the bid/a.<;k spread 2 · · Missed trade opportunity costs: are costs that arise when a trader acts in a suboptimal mallner and as a consequence forgoes an opportunity to execute a trade, for example by waiting for the market to move in a favorable direction before sending an order to the market, only to see the market to move in the opposite direction.

3.1.1

More Realistic Investment Trading Model

To render our model more realistic let us a.'lsume that moving our wealth from one position to another incurs into some cost, The problem can be formulated in terms of an agent that buys and sells options on the stock of a company. At some point in time, he/she decides to hedge the book or options portfolio against future price fluctuations. The agent would like to determine the least costly strategy taking into account the projected transaction costs due to dynamic hedging. The initial cost of such strategy can be interpreted as the minimal capital reserve needed to protect the portfolio against future market moves, For the sake of simplicity, we will a.<;sume that the investor pays the same transaction costs either if he/she buys or sells a given volume of the risky asset. As we have assumed in the previous chapter, we consider a market in which there are two a.<;sets available for investment: one risky asset S which pays no dividends and one risk-free asset (bank account) B with zero interest rate. We consider hedging a simple portfolio composed of a path independent European option with maturity T. In addition, we assume the same model as in Chapter 2 which, in particular, allows for a finite, but arbitrarily large, number of trades to occur which are not necessarily equally spaced in time. vVe then use a no-arbitrage argument to establish an upper and lower bound by means of approximate dynamic hedging strategies in the presence of transaction costs. Two types of transaction costs are considered: · Fixed cost per-trading.
1 Price impact is the effect the execution of a sizable order has on the market. While a trader may be able to transact a small order without materially affecting the market price, the larger the order the greater the impact is on the market. This effect is variable in terms of the liquidity conditions of the specific market and depends on factors such as the time-of-day. 2The bid/ask spread is the difference betwoon the bid price, the prke where market participants are willing to buy a financial instrument, and the ask price, the price where market participants are willing to sell a financial instrulllent.

26

CHAPTER 3. TRANSACTION COSTS MODELS
· Proportional to the volume of the trading.

3.2. FIXED TRANSACTION COSTS

Both types of tran..'lactions costs are very common in markets and, hence, the results we report will be directly applicable to conunon investors.

3.2

Fixed Transaction Costs

To motivate the subsequent definition of the cost of a strategy under transaction costs, it is helpful to first explain how it is implemented in our model.

3.2.1

The Portfolio of the Hedger

In this section, we are going to find the optimal investment strategy when only fixed transaction costs are present. The main method is similar as the one we introduced in Chapter 2.

Remark 4. The positive fixed transaction cost paid if trading has occurred in the risky security. We assume that re-balancing of the bank account is costless (besides assuming r 0). If agents do not trade, then we assume that they do not incur in any transaction cost. First, in order to construct. the portfolio, assume that at time t = 0, the investor starts his busina'ls by having H(So, vo) units of stock and 130 in the bank account, so the value portfolio including the effect of the transaction cost K can be 'written as

Vo = 130 + 11($0, vo)So + K,
where K is the transaction cost and is a fixed positive number and the initial wealth. At time n, the agent's portfolio value is:

(3.1)

Yo is a given constant, representing

0< n:5 N.
where 13n 1

is the dollar amounts in the bank account and 11(Sn_ll vn-d is the number of shares held

in the portfolio at time n before trading. Then the investor needs to balance his portfolio by using a self-financing strategy, so

0< n:5 N.
27

(3.2)

3.2. FIXED TRANSACTION COSTS

CHAPTER 3. TRANSACTION COSTS MODELS

By using (3.1) and applying (3.2), recursively, we obtain the total cost of a strategy.

Vo = Bo + H(So, vo)So + K
= Bl

+ H(Sh Vt}Sl

H(So, VO)(Sl - So)

+ 2K
Si)

= B2 + H(S2, V2)S2
BN-l

L lI(Si, Vi){SHl i=O
N-l

2

+

K= ...
N-l

+ lI(SN-l, VN-l)SN-l

-

L lI(Si, Vd{SHl - Si) + L K,
i=O i=O

For simplicity assume the investor's payoff at. Tis VeST) liquidation costs (see Section 3.2.2 for more dissuasion).

= lI(SN-I,VN-l)SN + BN.

This assumes no

Then the investor's profit/loss for a fixed trading strategy lI(.,.) becomes:

I1H(7r,K)

= Vo =

VeST)

+L
+L

N-l lI(S., Vi) (Si+l - Si) i=O

N-l

L

K

i=O

N-l H(Si,Vi)(Si+l - Si) - NK.
(3.3)

Vo -

VeST)

,,=0

Remark 5. For simplicity, in this thesis, we assume for all 0 < n:5 N, lI(Sn,vn ) =J:.lI{Sn-l1Vn-t}. In the general case, one should work with K IH(Sn,vn)#H(Sn_l,Vn_t). This could substantially change later optimization developments.

Equation (3.3 helps us to build all inequality which by solving it, one can obtain the optimal strategy. In order to find the no arbitrage interval, we use Definition 6 and apply the same approach as in the previous chapter.

Therefore, in the model with fixed trading costs if there is no arbitrage, we have;

Vo :5

iW{

N-l

sup
1rEP(So,vo,d)

{V(ST) -

L H{Si, Vi) (Si+l i=O

St) + NK}}.

Definition 7. For a given fixed transaction K, then
N-l

V{So, vo,K)

== inf{
H

sup
1rEP(So,vo.d)

{V(ST) -

L

H(Si, Vi)(SHl - Si)

+ NK}}.

(3.4)

i=O

is mUed the minimum upper bound for the fixed tranMction C08t K.

28

CHAPTER 3. TRANSACTION COSTS MODELS 3.3. PROPORTIONAL TRANSACTION COSTS
Similarly,

V(So,vo,K)

SUp{
H

inf
'JrEP(So,vQ,d)

{VeST)

+L

N-l

H(Si,Vi)(Si+1 - Si)

i=O

+ NK}}.

(3.5)

is called the maximum lower bound for the fixed transaction cost.

Remark 6. The minimum upper bound has the following simple property, which is straightforward to
prove .

· It is clear that by increasing transaction cost, the upper bound V(So, Vo, K) is increasing i.e. if
K1 :::; K2 then
3

3.2.2

Bellman Equation and Optimal Hedging

Even though, the minimum upper bound V(So, tlo, K) could be found by a search over paths and strategies, the formulation in equation (3.4) is impracticable. By means of similar arguments as in Chapter 2, the portfolio optimization problem (3.4) can be solved by applying a dynamic programming technique. Towards this end, we define the value function in a recursive way, i.e we can write the problcm as the following Bellman equation:
(3.6)

where hi = H(S;, tli). \Vith two state variables Si+1 = fJiec;,
Vi+l

= Vi

C;2,

where

C;

is the control variable, and we set V(SN,O,K)

VeST).

How the computation of V(So, tlO, K) is accomplished in practice is shown in the next chapter.

3.3

Proportional Transaction Costs

In this section, we study optimal hedging strategies and bounds on option prices when there are proportional transactions costs on the stock. Namely, if we want to invc,.'lt 1 dollar, we will have to pay a x 1 dollars as transaction costs. That is, when at the end of the day we want to re-balance our portfolio,
3Note that everything changes when fixed transaction costs enter the scene. Paying the same fixed amount of money for every transaction, the investor clearly goes to bankruptcy if he/she chooses a continuum of trades. Now he/she has to trade at a carefully chosen discrete sequence of instances.

29

3.3. PROPORTIONAL TRANSACTION COSTS CHAPTER 3. TRANSACTION COSTS MODELS
the amount of money obtained from liquidating one position (in order to enter into a new position) from the stock can not all be invested again but part of it has to be used to cover the transaction costs. We look at the re-balancing process in detail in the following.

3.3.1

Hedging Strategies

In this section, we &'lsume that the proportional transaction costs are incurred when shares of the risky asset are traded and on the other hand, it is admitted that trading in the riskless &<;set is cost-free. Also for simplicity &<;snme that no transaction costs are incurred when a portfolio is established at time O. But the liquidation costs 4 are incurred when a portfolio is liquidated at the terminal date T.

Remark 7. A trading strategy is defined, as in the previous chapter, as a function H(.,.) that determines the number of shares that are held as a function of the price 8 i and the remaining volatility Vi during each position i 0, ... , N - 1 and in addition to our portfolio, we have 13i = Bs;,v; as a balance of a money market in order to have a self-financing strategy.
First, assume Vo is a given constant, representing the initial value of the portfolio which is the investor's initial capital spent at time 0 to have H(80 , vo) units of stock and 130 in the bank account, so that the amount of money spent for this portfolio including the effect of the transaction costs can be written as
Vo 130 + H(80 , 1:0)80

+ a/H(So, vo)180
(3.7)

= 130 + H(80 ,vo)So,

o ~ a < 1 is called a

where aIH(80 , vo)ISo is the transaction CORt ifl at time 0 which is zero hy our first aflsnmption, and round-trip transaction. At nth trading position, but before readjusting, the portfolio is composed of H(8n 13n- 1 in c&<;h. We denote the value of the portfolio before revision at n by
ll V n -1)

shares and

(3.8)
For re-balancing purposes, the investor requires H(8n , v n ) number of shares; therefore, a number of H(8n .vn ) - H(8n - 1 ,vn -d shares need to be traded. In the presence of the proportional transaction costs, the net total dollars exchanged of this operation (the volume of transactions plus the cost of that transaction) is:
C(II(8n, Vn)
-

H(8n -l> vn-d) Sn

== (II(Sn, V n ) - H(8n-l> vn-d)8n + a jH(8n , vn ) - 1I(8n-l> vn-dl 8 n .
(3.9)

An additional term ajlI(8n, vn ) -11(8n- 1, v n -1)18n where 0 ~ a

< 1, on the right-hand side represents

4Liquidation is the process of taking a business' real assets and turning them into cash.

30

CHAPTER 3. TRANSACTION COSTS MODELS 3.3. PROPORTIONAL TRANSACTION COSTS
the cost incurred when H(Sn, vn ) - H(Sn-l> vn-d shares are transacted at n by the purchase (or sell)5 of the a.<;set 8 n · Clearly, it reduces the amount of money intended for the riskless position. The ca.<;e without transaction co.'lts is recovered by letting a = O.

Remark 8. For a given trading strategy 11(., .), the total cost of the investor for one success trading at stage n, using equation (3.9), is given by:
if 1::.1I(8n , vn ) 2:: 0, if 1::.1I(8n ,vn ) <0. where I::.H(8n , vn ) is the number of shares bought/sold, with 0 ::; a < 1. The above expression satisfies the following properties:

· C(1::.1I(8n , vn ) + I::.L(Sn, vn )8n ::; C(l::.ll(8n, vn»)8n + C(I::.L(8n , vn »8n , where I::.ll(8n, vn ) and I::.L(8n , vn ) are the number of shares bought/sold. · C(1::.1I(8n , vn»8n is non-decreasing as a function of I::.H(8n , vn ).

Then, right after the nth trading occasion, the investor balances the portfolio by using a self~financing strategy, and the balance of the operation including transaction costs is added to tbe money~market account and according to the preceding notation for total cost (3.9). The bank account investment at stage n can be written as

0< n::; N.
or

0< n ::; N. (3.10)
By using (3.8) and (3.10), we have

- = 6 n- 1 + 1l(8n- b Vn-l)Sn Vn = 6 n + H(Sn, vn)Sn + allI(Sn, vn) -1I{8n- 1 , vn-dl8n

=Vn + + o:!1l(8m
=

vn ) - 1l(8n_ b vn-l)!8n .

5H(Sn,Vn) - H(Sn-l,Vn-t) is the number of shares bought when H(Sn,vn ) H(Sn-1,Vn -d > 0 or sold when H(S", vn) - H(Sn-b V,,-1) < O. 60 S C(O) C(~H(S", Vn) - ~H(Sn, Vn))Sn S C(~H(Sn, Vn))S" - C(~H(Sn, Vn))Sn 0 so C(O) = O.

=

31

3.3. PROPORTIONAL TRANSACTION COSTS CHAPTER 3. TRANSACTION COSTS MODELS
Note that, Vn + is the value of the portfolio after rebalancing. Clearly if II(Sn,vn ) = II(Sn-l,Vn-d, then Vn+

= ~;:.

By applying (3.10) recursively, we obtain the total cost of a strategy.

Vo = Bo + II(So. vo)So

= Bl + H(St. Vl)SI
= B2

ll(So, VO)(SI - So)

+ alll(SlI vd S;)

H(So. Vo)ISI

+ H(S2. V2)S2 -

L II(Si, Vi) (Si+1 ';=0

1

+L
;=0

1

allI(Si. Vi) - H(SHt. VHdISi+1 N-2

= ...

N-2
= BN-l

+ ll(SN_l, vN-dSN-l -

L

ll(S;, Vi)(SHl - Si) +

L

o:llI(S;, Vi) - H(SHh VHdISHl.

i=O

i=O

Now assume a European path independent option with ca.<;h settlement (liquidation). so the writer who delivers the payoff with liquidation receives V(ST) including liquidation costs in ca.<;h at maturity T = N
(3.11)

So
N-2

Vo = BN-l

+ H(SN-b VN-t)SN-l N-2

L

II(S", Vi)(SHI - Si)

+L

N-2

alll(Si, Vi) - II(Si+1. vi+dlSHl

;=0

;=0

N-2

L

H{Si, Vi)(SHl
N-l

Si)

+L

o:III(Si,vi) - H(SHlI VH1)I Si+1

i=O V(ST) -

i=O

L

ll(Si. V,,)(Si+l - Si)
VJ

+L

N-l

o:iH(Si, Vi) - H(SHl> Vi+1)I S i+1'

;=0

i=O

Note that at maturity V;

VeST) and II(SN,vN)

= o.

Definition 8. For a given trading strategy H(., .), the profit/loss oj trading in the presence of the proportional transaction costs is

IIH(1l', a)

= Vo

VeST)

+L

N-l H(Si,Vi)(SHI - Si) 0:

N-l

L

IH(Si+1,VHd - H(Si,Vi)ISHl.

(3.12)

i=O

;=0

3.3.2

No Arbitrage Condition

In this section, again we consider an investor who US{'''S a trading strategy 1I(.,.) to hedge the derivative. Assume that some strategy H(.,.) has been fixed, according to (3.12), the inv>Btor's profit/loss which 32

CHAPTER 3. TRANSACTION COSTS MODELS 3.3. PROPORTIONAL TRANSACTION COSTS
depends
011

permissible path r. is
N-l

Va -

V(ST)

+

L: H(Si, Vi) (Si+l
i=O

N-l

Si) -

L: aIH(Si+l, Vi+d
;=0

H(Si, vi)ISi+l,

where Vo is the price received for issuing the contingent claim (a positive number) and V(ST) is the payout of the derivative which appears with a minus sign as the above expression reflects the balances of the seller of the option. The third term is the hedging profit/loss and it could be negative or positive and the last term is the cost of transactions. As we defined (Definition 6), if there is an arbitrage then

IlH(r., a) = Vo - VeST)

+ L: H(Si, Vi)(Si+l · =0

N-l

N-l

Si) -

L: aIH(Si+1,
;=0

1Ji+l)

- H(S;, vi)I Si+l ~ O .

(3.13) where the inequality is strict for at least one permissible path.

Remark 9. If the condition in equation (3.13) is satisfied, the seller of the option would certainly receit'e
at least as much, and sometimes more than what he has to pay at the end, V(ST)+
H(Si,Vi)l·

Now we set up the arbitrage bound by assuming a fixed trading strategy, say ll*(., .). This trading will be a deterministic function of all the possible values of the remaining volatility and stock price. Since we do not want to allow arbitrage strategies, it follows that the price that we obtain today, Vo, cannot be larger than the maximum cost incuned in paying the final payoff of the claim, and accumulating the hedging profits/losses for the chosen strategy over all the permissible paths, r.:
N-l

Va <

sup
'lfEP(So,vo,d)

{VeST) -

L: 1l*(S;,vi)(Si+l
;=0

N-l

Si) +

L: alll*(Si+l' Vi+1) i=O

H*(Si' vi)ISi+t}.

(3.14) For the next step, we want equation (3.14) to hold for all trading strategies. Therefore, the price we receive from the sale of the option today must be no greater than even the lowest possible value of the quantity over all the possible trading strategies:
N-l

Vo:5 inf{
H

sup
1rEP(So,.,o,d)

{VeST) -

L: H(Si,Vi)(Si+l i=O

N-l

Si) +

L: aIH(Si+l,Vi+1) i=O.

H(Si,Vi)I Si+1}},

where the right hand side of the equation is the minimum upper bound for the option price Vo and we 33

3.3. PROPORTIONAL TRANSACTION COSTS CHAPTER 3. TRANSACTION COSTS MODELS
denote it as V{So, vo, a).

N-l

V(So, vo, a)

== inf{
H

sup
1rEP(So,vQ,d)

{V(ST)-

L: H{St, Vi) (Si+ -Si)+ L: (l:IH(Si+1! Vi+d-H(Si, vi)ISi+!}}'
1
i=O i=O .

N-l

(3.15)

3.3.3

Dynamic Programming and Bellman Equation

The minimum upper bound in Equation (3.15) could in principle be found by a search over paths and strategies. While conceptually correct, this approach is computationally expensive and impracticable, because it requires a search over all possible paths and hedging strategies. In order to make the problem more tractable, as we mentioned in Chapter 2, we can apply dynamic programming. Note that, since the current price of the asset, S(O). and the quadratic variation Vo, detennine both the permissible price sequence..'l, peSo, Vo, d), and the trading strategies, H(., .), the function V{SOI VO, 0:) defined in (3.15) provides the lnininlUm upper bound as a function So and Vo. 110re precisely, V(SOI Vo, 0:) is a function with domain given by all the possible values of S(O) and Vo. By following the same proce..')ses 3.'l in the previous chapter, we can transform equation (3.15) into: (3.16)

Remark 10. To move from Equation (3.15) to the Bellman Equation (3.16) several small but important changes have taken place.

a) The sup is no longer taken over paths, it is over at the next step, i.e. Si+l and Vi+! .
b) For a given (ShVi) we have a finite number of possible terminal destinations (Si+llvi+d to keep track oj, instead of a mll.ltitude of connecting paths.

c) The sum over time-steps of the transaction costs terms and the cost of the hedging have disappeared,
since we are now dealing with a single time-step.

d) The term V(Si+hVi+l,O:) no longer indicates the terminal pay-out, but simply the value of the minimum upper bound itself at the next time-step.
Let us now implicitly define a variable c; by the relationship:
Si+l
Si eCi ,

Vi+l = Vi
34

cr.

CHAPTER 3. TRANSACTION COSTS MODELS 3.3. PROPORTIONAL TRANSACTION COSTS
Therefore Equation (3.16) can be rewritten as

Subject to the conditions:

The initial boundary condition are given by the initial values of the state variable, So and Vo. The terminal boundary condition is V(Si. 0, a) = V{ST) without including the liquidations costs. Note that the terminal price ST is free, as is the number of price moves N. The above implementation can be developed as a numerical approach for valuing European options, in the following chapter we will describe an interesting algorithm for this purpose introduced by Britten-Neuberger.

35

3.3. PROPORTIONAL TRANSACTION COSTS CHAPTER 3. TRANSACTION COSTS MODELS

36

Chapter 4

Numerical Implementation
In Chapter 2, we described how the price of the option can be found by solving recursively the following dynamic optimization problem:

As we mentioned, even though we cannot solve for V(Si, Vi) analytically, we can compute this quantity numerically. In this chapter, we describe a numerical implementation to evaluate the bound.'! described in previous chapters. The numerical approach is based on the method described in [Britten and Neuberger, 1996]. We investigate the upper bound and the lower bound by using a kind of multinomial tree that allows us to introduce the necessary constraints of the price path. We also briefly describe the optimization methods that we use in this thesis.

4.1

Jones-Neuberger Algorithlll

We will refer to the numerical algorithm to compute the minimum upper bound V(So, vO)l, which is proposed by Britten-Jones and Neuberger, as the J-N Algorithm (Jones-Neuberger Algorithm). In the present chapter, we provide implementation details as well as a conceptual analysis of the computations being performed. The J-N algorithm that computes V(So, vo) in both instances, with and without transaction costs, makes use of the Bellman's equation. Let us first consider the problem in the case of no transaction costs. In the general case, namely the ca.'!e with transaction costs, the algorithm remains the same with only small
1 In the case of 1::(So, vo), the algorithm remains the same, we can evaluate the maximum lower bound by using l::(Z) = -V(-Z) where Z is the given payoff.

37

4.1. JONES-NEUBERGER ALGORlTHM
changes in the optimization constraint.

CHAPTER 4. NUMERICAL IMPLEMENTATION

To see how we can implement the bound V(Si, Vi), we need to recall Bellman's equation,

We use backward induction as one method of solving the above dynamic optimization (Appendix D). If we are working from i = T to today's i 0, V(Si, Vi) is the new value of the option that we have to determine. V(SieC;, Vi cr) are option's values that have been already calculated, note that we use the fact that V(ST) at T is knowu2 · Since at each stage, we are holding a position hi; therefore, the change in the value of the portfolio, (4.1) is a linear combination of the stock price Si and V(S;e C" linear optimization where decision variable is hi.
Vj -

cr). So it seem.'> . that we have a piecewise

What we do not know is the value of hi in (4.1), Le. the amount of stock to be held at i. But we do know that V(S;, Vi) must be an upper bound. So, an opt.imization possibility is to find the slope of the line which is hi> such that V(S;, Vi) attains a maximum. Before providing the method of optimization, we have to construct the discretization of the permissible path {S;}~o and the remaining quadratic variation {Vi}~O' In sections (4.1.1)-(4.1.4), we provide the necessary details to build the multinomial tree which is going to be used for our optimization problem.

4.1.1

The l\1esh of the J-N Algorithm

As a first introduction to the methodology, we will build a tree which is slightly different than the traditional binomial tree. Recall that in the traditional binomial tree (Appendix B), one normally builds t.he tree by speeifying a time-step, ilt, and volatility (J" for a given So. There are two possibilities for the next stock price,
Sup

So exp a..;t;i,
So exp - (J"..;t;i.

and
SdDwn =

According to the J-N algorithm, the remaining quadratic variation Vj, where j is a positive integer, is mapped onto the x-axis. This should be contrasted with the usual approach where the time variable is the one mapped onto the x-axis. Then, we set up the grid similarly to the traditional binomial in the following way.

set up is quite similar to the usual Block-Scholes framework where the initial and boundary conditions allow to solve the second order partial differential eqnation, the J-N numerical method is very similar to a binomial tree.

38

CHAPTER 4. NUMERJCAL IMPLEMENTATION

4.1. JONES-NEUBERGER ALGORITHM

We consider a grid of points of the form (i, j), j represents the label of the remaining volatility 1Jj and is non-negative and i is the label of the price path Si and can be positive or negative. If we use N steps in the tree, the domain of j is [0, N] while the domain of i is [-N, N]. In figure (4.1), a ll-step tree is displayed.
11 10 9 8 7 6 5 4 3 2 1
0 -1 -2 -3

...
-8

-5 -6 ·7 -9 ·10 -11

" · · · · · · · .. · · " · · · · · .. .. · · · · · ··· ·
0

· · · · · · · · · . .. · · · · · · · .. · · · · " · · · · · · · · · · .. · · · " · · " · · · · · ·
" ·
10

j
I

1

2

3

4

5

6

7

8

9

11

Figure 4.1: The sample grid with N

i E [-11,11] and j E [0,11]. Starting from (0,0) and end up to (i, 11) where i

= 11 steps in the tree construction, in this case for any pair (i,j), = -11, ... ,11.
3.

The following shows a Matlab function to create the grid The Matlab Code to Create the Grid

function [i] = matrixI(N) i = (2*N+l)ones(N+1.N+l); i(:,l) = (-N:2:N)'; for c = 2:N+l a = 1; I(e) = (N-(e-l»; for e = -I(e):2:I(e) i(a,e)= e; a = a+l; end end
3In this thesis, we make use of Matlab for the computer implementation.

39

4.1. JONES-NEUBERGER ALGORlTHM

CHAPTER 4. NUMERlCAL IMPLEMENTATION

4.1.2

J-N Discretization for a Special Case

After building the grid, we construct the basic building block for our tree. Assume we are working in the (i - l)th step where the price stock is denoted by 8£-1; what are the possible successors of 8 i ? In Chapter 2, we introduced the control variable Ci such that

To discretize {8i }f:,o, we assume all control variables {Ci}~(/ are equal to some arbitrary step size The dL'>crete grid of stock values is given by: 8i where i can be positive or negative. 8 0 exp (io),

o.

(4.2)

In order to define the discrete set of values for the variables Vj , we use the definition of the remaining quadratic variat.ion (Definition 3). First, we set VN2 0 and u..<;e backward induction, the discretization for the quadratic variation is given by
(4.3)

where j

~

0 and at maturity T, j = N 2 ·

4.1.3

J-N Discretization for the General Case

In a binomial tree, starting from any point (i,j), the next point reached must be (i + l,j - 1) or (i - l,j - I). The value of the claim at (i,j) is then computed from the value at (.,j I). In the J-N tree, the same procedure applies but with one difference that is related to the following question: how far the investor can wait until the next trading? To answer this question, recall that from Chapter 2, the investor can trade whenever the following condition is satisfied;

If the trader is in the lattice point (i,j), i' is the next point for the price path

11'

such that

lIn 8 i , -

In 8 i l =

lIn 8 oe(i' 0)

In 8 oeio

I

= I(i'
It then follows that -d :::; n8 :::; d where i'

i)ol:::; d.

i = nand n =

±1, OJ, ±i. Therefore we have the first

40

CHAPTER 4. NUMERICAL I1'\fPLEAJENTATION

4.1. JONES-NEUBERGER ALGORITH.M

constraint given by;

n ~ 82 '
In addition to the condition (4.4), by making use of Si' = 8 i en .5 and
Vj'
11j

2

d

2

(4.4)
= (N

j)8 2 we have

=

Vj -

(In Si'

In 8 i )2

vj'

(N2

/)8

2

= Vj - (n8)2 = (N2 - j - n 2)8 2
~O.

So, we arrive at a second constraint, which is imposed to maintain the non-negative character of the remaining quadratic variation, (4.5) The above results (4.5) and (4.4) correspond to (4.6) where n is a non-zero integer. The length N of t.he discrctized trajectories satisfies Nl that
N 1d 2 ~
Vo.
~

N

~

N2, where Nl is the largest integer such

Therefore, in order to account for the possibility of jumps d, from a given parent node (i,j), we modify the possible children nodes as (i + n,j + n 2 ), with n a positive or negative (but not zero) integer which satisfies (4.6). Figure 4.2 illustrates all possible children nodes for parent node (8;, Vj) when n

= 3.

----_. .,

(Si+3.Vj+9)

--~=~~(~~. 2~,:,!~)~__:Sl,-~,VJ+ 1-,j+4 .. ... '"}

..

Figure 4.2: This figure displays a very simple example for all destination points form node (i,j) when n=3.

41

4.1. JONES-NEUBERGER ALGORlTHM

CHAPTER 4. NUAfERICAL IMPLEMENTATION

4.1.4

Option Price at Each Stage in J-N Algorithm

In this section, we explain how one can obtain the option price at each stage j.

Option Price At Maturity j = N2:
According to Definition 3, at expiration, there is no quadratic variation left. Therefore, because of the construction of the price path, we will not be able to move up any more. So, we must simply have the terminal payoff condition and it is not dependent on which node we might have arrived from;
V(ST, O)

= VeST) =

max(ST - ](,0).

(4.7)

Option Price At j = N2 - 1:
In the second to last step which is labeled by j N2 - 1 in the grid, everything must also look exactly the same as in the simple binomial tree; because on any node (.,N2 - 1), we only have one unit of quadratic variation 82 left to play before consuming the total quadratic variation v (Figure 4.3). This allows us to only move either to node (i + 1, N2) or (i -1, N 2). In this stage, the option price of the node (.,N2 - 1) can be found as a linear combination of its value (the same as in the usual binomial tree) at nodes V(Si+l) and V(Si-d.

r

I til: J ~ ...~T
11 10 !

1'il'iGl ::1 ~ I
~V(SII'O) !
" V(St.O)

,1- I

a
7

..s
4

s

2 1 0 -1 ·2

-a
-4

...... · · · · · · ..... · · · · · · · ';.;.J. · I · · · · ,:: .... · · · · · ·· · f: II · · · · · · . · · BY«".
·

· 'I
~··
;

V(SlI).VU

j

·
·

.,

·5
·7

·s .,
-10 ·11 0
1

· · · · · · · ·
III!I

.V{S.P·II

· .V(S".Vll · 1..

I

V(S.].O)

v(S.,.O)

·
·

,. i
..

; ··1....

· ~v(S.t.O) v(S.\O.Vll. !. ) .. \(S.n.O

!

2

a

4

s

,

~
I

j

7

8

9

10

U

Figure 4.3: In stage 1, we can find the value of payoff V(ST, 0) simply as max(ST -](,0), then, ill stage 2, we can find the value by using the information from stage 1.
42

CHAPTER 4. NUMERICAL IMPLEMENTATION

4.1. JONES-NEUBERGER ALGORITHM

Remark 11. Note that, we might have arrived at a node (i,N2 1) directly either from the root (i n, (N2 - 1) n 2 ), if such big jumps had been allowed by the d constraint, or from third stage to the last (i -1,N2 - 2).

Option Price At j

> N2

3:

In the last three steps, the possible values of the option are acting exactly the same as in the simple binomial case because the unit of quadratic variation that is left does not allow jumps. According to (4.5), we need at least n 2 = 4 to have a big jump (i + 4,0) (Figure 4.3).

The procedure of the optimization truly becomes different when we move to the fourth to last step and beyond until we reach the root. Because for any given node (i,j), there are a multiplicity of possible arrival points (i + n,j + n 2 ) (Figure 4.4).

11 10 I 8 7

,
5 4 IS :I

o

1

.z
-3

·1

....

-5 .fi -7

-9 -10 -11

...

o

1

:2

is

451ii7891011

Figure 4.4: This figure shows, when j ;;::: (N2 - 4), there are multiple destination points.

In general, one can use the following Matlab code in order to find all destination nodes from a certain node (i,j).

43

4.1. JONES-NEUBERGER ALGORITHM

CHAPTER 4. NUMER1CAL IMPLEMENTATION

The r..fatlab Function to Find all Destination Nodes

function [Value 1 , Stock1] = destpoint(n1,time,h,StockO,Value,delta,i) for n=-n1:n1 i f nrv=O if time-1>=n 2 [tf, index] = ismember(i(h,time)+n,i(:,time-nA 2)); Value1(p) = Value(index,time-n A 2); Stock1(p) = StockO*exp«i(h,time)+n)delta); p = p+1; end end end

4.1.5

Optimal Hedging and Convex Hull

With a multiplicity of possible destination nodes, we can not value V(S;, Vj,.) as a linear combination of its values at the destination nodes. We need to find a hedge ratio which minimizes the maximum possible loss. At this point we need to perform a minimax optimization.

hSi(e no - 1)}}, n =
where h

±1, .. ,±8"

d

= hi.

V(8-eno v- (n6)2) are known option values (that have already been calculated), so the optimization is a linear optimization. \Ve use two methods of optimization in this thesis, Convex Hull and Piecewise linear optimization.

. ,.

Convex Hull In order to solve the above optimization numerically, Britten-Neuberger used a method which they called Convex Hull:

If h is the optimal hedge, then
(4.8)

We do know V(S;. Vi) must be the upper bound,

80

there is a k' snch that

44

CHAPTER 4. NUMERJCAL IMPLEMENTATION This implies that
h

4.1. JONES-NEUBERGER ALGORJTIIM

~

V(S;ek'O,vi - (kd)2) - V(S;ekO,vi Sie k'6 Siek'li V(Si+k"Vi_k I2 ) Si+k f
-

(kO)2)

V(Si+k,Vi_P) Si+k

If we draw all the destination a..'lset prices Si+k with respect to their values V (Si+k , .) and find a line which passes through two distinct (destination) points such that all (de..<;tination) points lie at this line or below of this line (this line is called the Hull line in [Britten and Neuberger, 1996]), then the slope .6. of the Hull line is the desired optimal hedge (see the dash line in Figure 4.5). Assume that this line is the line that pa.<;ses through the points (V m, Sm) and (V m', Sm / ), (Figure 4.5). So,
(4.9)

v

s
Figure 4.5: The slope of the dashed line is the optimal hedge hi and V*(Si) is the optimal value of the option at Si at node (i,.). The following lemma guarantees that the optimal value of the function V(i,j) is the value of V* (Figure 4.5), where the Hull line crosses the vertical line through the current price Si. Then as indicated above, the hedging ration .6., which is the value of the slope of the hull line at that point, is the optimal hedging strategy according to (4.9). So in order to find the optimal hedging, it is enough to find the hull line, the slope of the line at that point (S;, V(Si, Vi) is the hedging hi. This method is called convex hull optimization
4.

4The computer code is provided in an Appendix.

45

4.1. JONES-NEUBERGER ALGORITH.M

CHAPTER 4. NUMERICAL IMPLEMENTATION

Lemma 1. Let g(.) be a convex function then

g(x) = min {max{g(y) - h (y - x))},
h EIR
y

(4.10)

Proof. We obviously have
h ElRxe-d:$;y:$;xe d

min

max

{g(y)

h (y - x)} :5: g(x).

(4.11)
x. So to complete

for all h, since the value at the right hand side is achieved at the left hand side for y the proof it suffices to show that there exists h such that

g(y) - hey - x)
for all y. Clearly, any sub gradient
"'-=!.......-"'-"-'-

~

g(x),

( 4.12)

of 9 at x can serve a.'I such.

o

Piecewise Linear

Although the convex hull method is a very fast and efficient way to solve the previous optimization we have not lL."led it for the ca."le when we include transaction costs. The rea.'Ion for this is mainly due that some of the numerical results were not quite as good as we expected; moreover, we were not able to extend the technique to the case of transaction costs in a nice and convenient way. All in all, we ended up using the piecewise linear optimization method. In general we have the following problem to be optimized [Tsitsiklis, 1997]:

±1,±2, ... ±n
Note that max{V(Siek8,Vi - (kO)2)
k

(4.13)

hSi (e k15 -I)} is equal to the smallest number z that satisfies:

For this rea."lon, the optimization problem is equivalent to the linear programming problem

minimize z
Subject to
(4.14)

where the decision variables are z and h. The following Matlab function shows the code of above constraint.

46

CHAPTER 4. NUMERICAL IMPLEMENTATION
The Matlab function for optimization Equation 4.13

4.1. JONES-NEUBERGER ALGORITHi\l

function [V,Vb] = opthedge(Value1,Stockl,Stockhtime) f1 = [1; 0]; %f1 isz b=cat(2,-Value1); % response for Ax<b as the constraint coIl =cat(2,-ones(1,I(Value1»); col2 = cat (2,-(Stockl-Stockhtime»; A=cat(2,coll',coI2'); % response for Ax<b as the constraint A A lb = [-10 4;-10 4]; % Ib and ub are upper and lower for outputs ub =[10 A 4;10 A 4]; [x,fval] = linprog(f1,A,b,[],[],lb,ub); % optimization Vb = x(2); % optimal hedging
V .. x(1);

% optimal value

In the presence of transaction costs the approach is the same as above (4.13) (4.15)
9k is known (it is calculated in the previous stage, i-I). Let

Ih - 9k! =

Uk, our first reformulation yields

Subject to

h - gk S Uk.
-h+gk

S Uk·

And, by the same process we applied in (4.13),

minimum z
Subject to

47

4.1. JONES-NEUBERGER ALGORITHM

CHAPTER 4. NUMERICAL IMPLEAIENTATION

The l\1atlab Codes to Create Necessary Condition for Optimization function[V,Vb] = opthedgetrans(Value1,Stock1,xil,alpha,Stockhtime) K1 = length(Valuel)j f1 = cat(2,l ,O,zeros(l,Kl»j %f1 is z % b for Ax<b, included the absolute condition b = cat(2,-Value1,xil,-xil)j Ai cat(2,-ones(K1,1),(-(Stock1-Stockhtime»',alpha.*diag(Stocki»j A2 = cat(2,zeros(Kl,l),ones(Kl,l),-eye(Kl»j A3 = cat(2,zeros(Kl,l),-ones(Kl,l),-eye(Kl»j A = cat(l,Al,A2,A3); Ib = cat(2,-10A4,-10A4,zeros(l,Kl»j ub = cat(2,10 A4,10 A4.10A4ones(l,Kl»; [x.fvalJ = Hnprog(fl,A,b, [], [] ,lb,ub)j Vb = x(2); V = fval;

% A for Ax<b, included the absolute condition

% optimization % optimal hedging % optimal value

\Ve used a Matlab optimization from the optimization toolbox by the name of linprog. There are three types of algorithms that are being implemented in the linprog.mj a simplex algorithm, an active-set algorithm, a primal-dual interior point method [Geletu, 2007J. We make use of linprog along the destination points V(i + n,j + n 2 ), we can then move backwards the same procedure all the way to the root. In the next chapter, we present some numerical results obtained by using the algorithms described in the present chapter.

48

Chapter 5

Numerical Analysis
In this chapter, we implement two numerical tests of the J-N algorithm to show some practical a..'lpects of it. First, we compute the arbitrage bounds of the option price on the stock in some artificial permissible paths with the J-N algorithm and then we study the effects of transaction costs in both cases with fixed and proportional transaction costs. In the second part, by means of the J-N algorithm, we find the option's price for a real data set by somehow forecasting the quadratic variation from historical data and then comparing the results with actual market prices.

5.1

Artificial Paths and General Results

As a first step, we compute numerical arbitrage bounds for a two-month European call option with strike of $1 on a stock that pays no dividends, with current price $1 and the volatility of the stock is taken to be equal to (J = 20% per year, so the quadratic variation is
Vo

=

(J

2T

. = 0.04 * 2/ 12.

We apply the numerical algorithm described in the previous chapter to our ba..'le ca..'le model when no transaction costs exist. Recall that for a given N2 which is the maximum number of steps taken in the J-N tree, the minimum return 8 = min Iln(Si+l) -In(Si)1 can be obtained by 1
OSiSN

!3!i. = JO.0067 VN~ N2 '
Remark 12. The values, which are taken in this section, such as the current price and the strike price,
are for illusirat.i7le purposes only and they do not reflect actual1Jalues in the real markets.

Remark 13. Option value in figur'es means the min'imum upper bound price V or the maximum lower
bound price V of an option.
1 According

to Section 4.1.2 Chapter 4, vo

= N2(,2 where (, is the minimum step size that one can take.
49

5.1. ARTIFICIAL PATIIS AND GENERAL RESULTS

CHAPTER 5. NUMERICAL ANALYSIS

5.1.1

Comparison to Black-Scholes

If no jumps are allowed, i.e. ~ 1 (we call this ratio: the jump units) then the Black-Scholes price 2 is $0.033 when So = K = 1 with Ci = 0.2. Figure 5.1 displays the minimum upper bound price of the option as a function of N2. As we see, the option price converges to the Black-Scholes price a..<; N2 increa..<;es. According to equation (4.3), by increa..<;ing N2, we are reducing o. So as a clear result, when 8 decreases, the value of the option increa..<;es and tends to the Black-Scholes price.

0.033

0.032
0.0315

--~N

_. - .· Back·Scholes option price option price with no jump

... £t
a.>

0.031

o

'a 0.03J5·
o. 03 l
0.0295 0.029
0.0285 '--_........_ - - 1 ._ _- ' - - _ - ' -_ _..._ _........_ - - 1 ._ _- ' - - _ - ' - _ - - ' , o 20 -40 60 60 100 120 140 160 100 200
Number of Steps

g

Figure 5.1: The figure shows the model's price, when the jump unit (1) Scholes price a.."1 the number of steps N2 increa..'!es. One may wonder what happens if when

=

1, approaches to the Black-

1 > 1. Figure 5.2 shows the convergence behavior of the option price 1= 3,5 with N2 ranging from 10 to 200. When the jump units is greater than one, it seems that

we have convergence if N2 increa..'!es but the value of the option does not converge to Black-Scholes price due to jumps. Also, for a given Vo and a fixed number of steps N2 in the J-N tree, by increasing the option increa..'!es (Figure 5.2). As we can see, when N2 = 10, in the ca..'!e of the jump units are 3 and 5, the minimum upper bounds are equal, because according to equation (4.5), the maximum jump that the algorithm can take is ..j"N2 Rj 3. Therefore, although we can run the program for the jump unit 5, this jump does not really take into
2PormaJly the Black·Scholes model is not nested in our model. This is due to the fact that Black and Scholes is a continuous time model while we com;ider a dis('rete time model. Neverthelp-tiS one can overcome this technical differene.e using the fact the Black-Scholes model is a limit of discrete time models,

1, due

to the fact that 0 is fixed, we are increasing the maximum jump size d, and we can see that the value of

50

CHAPTER 5. NUMERICAL ANALYSIS

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

account and thus docs not afff1ct. the price of the option in the J-K algorithm.

0.04 0.039 0.038
-+"Nojump - ..... Unit-Jump=3 - -eo- ·· Unit-Jump=5

0037

. g Q..
c:
o

CD

0036 .

'-'.

........ ........

's.. 0.035 o
0.034

....

t",,,,,~,,,,,

.... ' ........... .....-._*
,

..

0,033

..... _...... -._-t-._.i-._ ...... -.-i-.-i-._.+._ . ...,.
i""

0.032

"
Number of Steps

0.0310~~~~--~~~OO~--OO~--100~--1~~---1~~---'~OO---'~OO--~~

Figure 5.2: Convergence of Vasa function N2 for different values of ~.

5.1.2

Arbitrage Bounds: Basic l\Iodel

In our empirical work, we shall use the J-N algorithm to find numerically the arbitrage bounds of the option price. First., we derive arbitrage bounds in the basic model (Chapter 2) for different. jump units with the same set up a.. <; above i.e. K = 1, (J' 20% per year. We calculate the option values for different starting levels of the stock price So, with N2 100 steps in the tree (trading around twice a day).

Figure 5.3 displays the arbitrage bounds for different jump units 3 ~ ::::: 3, 7 and apparently a.. <; the maximum jump is decrea...<;ing, we can see that the upper and lower bounds are shrinking to the ca...<;e without jumps. Also we notice that the arbitrage bounds are very narrow for the higher starting level So. Therefore it seems that the jumps have less of an effect on the bound of the option's prices for the highcr stock valucs. Again, for a fixed So, V(So, vo) increa...<;es as ~ increases (Figure 5.3). Table 5.1 illustrates no arbitrage interval with different jump units as the level of starting So changes.

3Recall that (1) is representing the jump units.

51

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

CHAPTER 5. NUMERiCAL ANALYSIS

0.18 0.16 0.14 0.12

'" if
c

0.1

.{ 0.08

o

0.00

0.Q.4
0.02

_. _ .· Back-Scholes ......... Unit-Jump=3 ~ Unit-Jump=7

8,85

1.(15 1.1 Stock price

1.15

1.2

1.25

Figure 5.3: The upper and lower bounds for the basic model: the plot shows that by reducing the jump units, for example, from 7 to 1, the option price bounds are shrinking to the Black-Schoes price.

Although, most of the analysis in this thesis was dOlle for a European payoff max(ST - K, 0), the general approach dearly applies to derivatives with different payoffs, Figure 5.5 shows the results for some known comhinations of call'! and puts. First, we use a call Butterfly payoff [Hull, 1997J, which is a combination of long call with strike Kl 0.958 and one long put with K2 = 1.066. Its payoff is: if S
T -

<

K2+ K I 2 '
K2tK1.

if ST >

(5.1)

Also we consider a Long Strangle [Hull, 1997J, which is long one put option with a lower strike Kl 0.958 price and long one call option at a higher strike price K2 = 1.066 to calculate the minimum upper bound.
max(Kl

Vi= { max(ST

if ST

< -

K2+KJ
2

,

if ST >

(5.2)

K,!KJ.

As it can be observed in Figure 5.5, the shape of bounds are very similar to their payoff at maturity T (Figure 5.4) in both cases. The area between two strikes KI = 0.958 and K2 = 1.066 becomes bigger for an option wit,h payoff Vi and Vb. And again by increasing the jump units, the arbitrage bounds of

52

CHAPTER 5. NUMERICAL ANALYSIS
1

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS
5 .0002,0. [0.0110,0.0199] [0.0272,0.0376] [0.0554,0.0647] [0.0723,0.0811] [0.1620,0.1654] 7
9

3

So
0.879 0.958 1 1.044 1.066 1.162

[.E:, V]
0.0019 0.0151 0.0327 0.0598 0.0764 0.1631

[V, V]
[0.0008,0.003 [0.0129,0.0178] [0.0305,0.0354] [0.0574,0.0683] [0.0492,0.0790] [0.1623,0.1642]

[V, V]
[0,0.0055 [0.0100,0.0215] [0.0277,0.0392] [0.0544,0.0664] [0.0713,0.0827J [0.1619,0.1666J

[V, V]
[0,0.0067] [0.0082,0.0232] [0.0268,0.0407J [0.0525,0.0681 J [0.0690,0.0844] [0.1618,0.1677]

Table 5.1: This table shows no arbitrage intervals for different jump units when the staring level So increa..'les.

the option price become wider (Figure 5.5)).

0,05 j

it ii

0.(11

i \

004

;

i

1-'-"P.yofACailBultol1ly

I

\

0.07

\

l.

~

I 003 !002

; i
;

i i i i

i i \

, \

i \ \ i i i

i

i

i

i

i

0,01

i

i

;
i
885 0.9 0.85

i i i. i i i i i

\

\

0.03
0.02

\

\ \

0,01

\ \

i

i

i i

i

i

i

~
1,1 1.15 12 1,25

105

o~~~~~'_'-_'-~-_'-_-~'~~~~~
0.85 0.9 0,85 I 1.05 U
Stock Pnc.

\.

i

115

__

~
1.2

Stock Pnc.

Figure 5.4: Left-hand side figure shows the payoff for a call butterfly and right-hand side figure shows the payoff for a long strangle with a lower strike [(1. 0.958 and a higher strike price [(2 1.066. Table 5.2 and 5.3 show no arbitrage intervals (upper and lower bounds) with jump units 1,3,5 and 7 for a derivative with payoff 5.1 and 5.2 respectively.

53

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

CHAPTER 5. NU.MER1CAL ANALYSIS

0.11 0.1 0.09
D.a2

"l

009
· 0.07

~h)
'(\

i 1
~

0015

l

J

0.05 0.05
O.Ool

~~Iil

\,~

0.005

0.03
O.a2

8.05

0.9

0.95

1

1.05
Stock Pru:.

1.1

115

1.2

1.25

1.05
Stocll: Price

1.1

1.15

1.2

1.25

Figure 5.5: Left-hand side graph shows the arbitrage bounds for the basic model with a call butterfly payoff (equation (5.1» with a lower strike](1 0.958 and higher strike](2 = 1.066. Right-hand side plot shows the arbitrage bounds for a long strangle (equation (5.2» with a long position in strike K1 = 0.958 and one long put at strike K2 = 1.066.

1 I
So
0.879 0.958 1 1.044 1.066 1.162

1

[V, V] 0.0848 0.0348 0.0257 0.0306 0.0383 · 0.1030

3 [V, V] [0.0829,0.0870J [0.0320,0.0378] [0.0233,0. 1677J [0.0278,0.0336] [0.0354,0.0414J [0.1007,0.1056]

5

[y-, VI
[0.0815,0.0889J [0.0295,0.0400J [0.0209,0.0307J [0.0254,0.0365J [0.0327,0.0441] [0.0991,0. 1285J

7 [V, V] [0.0805,0.0961] [0.0273,0.0416] [0.0196,0.0314J [0.0157,0.0370J [0.0304,0.0452] [0.0978,0.1092]

9

[V, V] [0.0462,0.0998] [0.0264,0.0424] [0.0192,0.0315] [0.0227,0.0373J [0.0293,0.0459] [0.0969,0.1114]

Table 5.2: This table shows no arbitrage interval for different jump units when the staring level So increases in the case of a butterfly payoff (5.1)

1 II
So
0.879 0.958 1 1.044 1.066 1.162

1

3

5

7

9

[V,Vj 0.0032 0.0107 0.0134 0.0128 0.0115 0.0038

[V, V] [0.0015,0.0054] [0.0059,0.0296] [0.0079,0.0189] [0.0072,0.0185] [O.0062,0.0173J [0.0017,0.0065J

[V, V] [0,0.0076] [0.0024,0.0203] [0.0033,0.0235] [0.0030,0.0233] [0.0026,0.0221J [0.0006,0.0149]

[V, V] [0,0.0098] [0,0.0235] [0,0.0267] [0,0.0262J [0,0.0258J [0,0.0119J

[V, V] [0,00.0115J [0,0.0271J [0,0.0280] [O,0.0288J [0,0.0297] [0,0.0139]

Table 5.3: This table shows no arbitrage interval for different jump units when the staring level So increases in the case of of a strangle payoff (5.2).

54

CHAPTER 5. NUMERlCAL ANALYSIS

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

5.1.3

Arbitrage Bounds: Transaction Costs Model

In the transaction costs framework, we study the effect of a fixed transaction cost rate and a proportional transaction costs on the arbitrage bound." and compare the results with the ones without transaction costs.

Part I: Fixed Transaction Costs
In the simple case, fixed transaction costs, we test the effect of this transaction cost in the arbitrage bounds of the option price. As we expected (see equation (3.4) compared with (2.27», the minimum upper bound in the case of fixed transaction costs is much higher than t.he minimum upper bound in the J-N framework without transaction costs. In Figure 5.6, we implement the bounds for a fixed unit ~ = 3 and with fixed transaction costs K = 0.0001, 0.001 (as we mentioned in Remark 12, we are just working with some artificial paths, so the fixed transaction costs K are not realist values) with different starting level So and N2 = 70. So we allow to have a maximum of 70 hedging times, as a result one could pay a maximum N2 * K = 0.07 more in the case of K = 0.001.
0.18
0.16

......... Arbitl'lge Bound: K=O - -a-. -Arbitrage Bound: K=O.OO:J1

0.1.4

.. .g a.
c

0.12
01 .

o

:[ 0.00
0.06

0.04
0.02

B.B5

0.9

0.95

1.05 1.1 Stock Price

1.15

1.2

1.25

Figure 5.6: Upper and lower bounds for the fixed transaction costs K: the lllinilnum upper bound for the option value is increasing for a fixed So and fixed unit-jump=3 when K takes the values a and 0.0001. With respect to the arbitrage bounds in the basic model, the lower bound decreases while the upper bounds increases due to the effect of the fix transaction costs. Also, as we increase the rate K, the region between the lower and upper curves becomes large (Figure 5.7).

55

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

CHAPTER 5. NUMERICAL ANALYSIS

0.25

-·-··K=O
0.2
... 'tc ... K=O.OO1
- -G- .· K=O.OCXJl

:'111

.o .,
Q.

· 0.15

8-

.~

0.1

.11'

0.05

8.65
4-3 6- .

.. t<
0.9

0.95

1.05 1.1 Stock Price

1.15

1.2

1.25

Figure 5.7: Upper and lower bounds become wider by increasing the rate JC with the fixed jump units

Kote that in our implementation, we use a single call option to find the arbitrage interval, therefore; the bounds that obtained are very small. Then, we could not set more realistic fixed transaction costs for the model. Just assume that fixed transaction costs JC $10 per transaction, so at the end of the day, thn invest.or may have t.o pay a maximum of $700 for t.he option that has t.he payoff max(ST - 1,0). In order to have a realistic framework, assume one can buy a package of 1000 call options, then the bounds for the fixed transaction JC = $10 can be obtained as in Figure 5.8.

Remark 14. If one buys a contract (package) which includes c of call options so the payoff of this contract at maturity T will be c VeST), so the minimum upper bound is

V(So, vo, JCR) = inf {
He

sup
'JrEP(SQ,'VQ,d)

{c

V(ST) -

C

inf {
He

SUp
'JrEP(So,'Vo,d)

{V(ST) -

'I: 'I: ~Hc(Sit
i=O

H,;{Si, Vi)(SHl - Si) + NJCR}} Vi)(Si+l - Si) + N JCR
C

i=O

}}

C

N-l

cinf{
H

SUp {V(ST)- 2:H(Si,Vi)(Si+l 'JrEP(So.'Vo,d) 1.=0

Si)+NJCRn c

1 c V(SO,VO, -JCR) = cV(SO,VO,JC) c

56

CHAPTER 5. NUMERICAL ANALYSIS

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

1360

.· g 1m
a.

-t700 o
760

7040

720

~.B5L~~CO~.95--.L-~,:::i.05====,.i:,==,:::i:.1=5==~1.C2==:::""25
Siock Pric.

- - N o jump . ··0· .. Un~·JumP'"3. Milrage bound

Figure 5.8: This plot shows the option bounds when the fixed transaction cost is $lO by assuming 1000 call options. where KR is the 1!alue of a reali,~tic fixed transaction cost (per stock transaction) and K == represents the fixed cost per stock transaction used in the thesis. This computation justifies our use of small values of K when performing numerical experiments corresponding to bounds for a single call option. As a example let assume that KR 10$ per transaction for a package with c 100, this can be transfered to K = 0.1$ in the case of one call option.

&:-

Part II: Proportional Thansaction Costs
Let us start the analysis of this part with a question. What if we had followed the basic framework with the same assumptions, but paid the proportional transaction costs? Of course, one would expect the higher minimum upper bound as a results of the transaction costs according to equation (3.16).

A. Convegence of the Model:
First of all, we verify numerically our results by examining the behavior of the minimum upper bound as a function of the quadratic variation in the basic model and then with the proportional transaction costs. The results indicate that the minimum upper bound for the option price increases as the quadratic varication growths in both cases, with and without transaction (Figure 5.9). Then, we test the convergence of the proportional transaction cost model as the number of trades increases. Table 5.4 illustrates the relation between the maximum number of steps N2 and the minimum upper bound V{So, vo, n) (see equation (3.16)), where n is the round-trip and 0 $; n < 1 , for different 57

5.1. ARTIFICIAL PATHS AND GENERAL RESULTS

CHAPTER 5. NUMERiCAL ANALYSIS

0.2 0.18 0.16
O.U
~

0.12 ., ..... -+ .......... ....

~ c: 0.1

!

.9

0.00

0.00
o.~

0* ........

.... ..............

,.. ......

~ .......... r-----------~~------, _. +. - V(OV) without T.C - ,eo ' - V(OV) with proportional T. C.

0.02

¥.

oIf'.""

°0~~-0~.OO-----O.~~--~O~.00--~~O~.OO----~0.~'--~0~.12~--~0.1·. Ouadratic variation

Figure 5.9: In this figure, we plot Vasa function of the quadratic variation in both cases, without tran.<;action costs and with proportional transaction costs with a = 0.01 with N2 = 70. values
0,2%,3%,4% with So

0'=

= 1 and Vo

:=

0.0067.

As it can be observed from Table 5.4, the value., of the minimum upper bound V(l, 0.0067, a) where a = 3%,4% are increasing very fa..'lt at some value of N 2 · For example, when the round trip a 0.04 (see the third column in the table), after N2 = 4 (compare it with the ca..'le of no transaction costs V (1,0.0067), which is located in the last column of the table), the option values are extremely larger. These points become less surprising when our result is compared against the analysis of Leland 4. From Table 5.4 and Figure 5.9, we notice that the steps N 2 , consequently the quadratic variation has a big impact on the minimum upper bound prices for a European option and specially when the proportional transaction costs exist in the J-N algorithm. We strongly believe that there should be a relationship between the quadratic variation more precisely (, (see the second colullm) and the round-trip a. Although we can not prove this claim theoretically, our numerical result shows apparently j should be less than 15 in the J-N algorithm when the proportional transaction costs exit.

.;-i

B. Arbitrage Bounds:
Additionally, we also implement arbitrage bounds for the proportional transactions cost. Recall that we
4Under the proportional transaction costs with hedging portfolios rebalanced only at discrete time instances, with a fixed finite time interval h between them. Leland type approaches are limited by the condition fI. ~ < 1 the expression V;r uvh on the left known as the Leland number, where 0: is the round-trip transaction cost rate (expressed as a percentage of the stock price) and (T is the volatility of the underlying asset 5See the second column of Table 5.4 and compare the dramatic value V(l, 0.0067, 0:) where 0: = 4%,3%,2%, O.

58

CHAPTER 5. NUMERICAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS

I N2 I
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

J=

/N; I V(l,O.0067,O.04)
0.0625 0.0709 0.0774 0.0793 0.2003 0.2214 0.2411 0.2598 0.2776 0.2946 0.3110 0.3269 0.3423 0.3573 0.3719

V(1, 0.0067, 0.03)
0.0569 0.0601 0.0666 0.0681 0.0738 0.0749 0.0763 0.2598 0.2776 0.2946 0.3110 0.3269 0.3423 0.3573 0.3719

V(l,O.0067,0.02)
0.0514 0.0495 0.0560 0.0569 0.0616 0.0618 0.0634 0.0637 0.0649 0.0653 0.0666 0.0675 0.0682 0.0687 0.0693

V(1,0.0067)
0.0408 0.0289 0.0353 0.0408 0.0365 0.0389 0.0360 0.0377 0.0408 0.0387 0.0400 0.0383 0.0393 0.0382 0.0389

I

0.0816 0.0577 0.0471 0.0408 0.0365 0.0333 0.0309 0.0289 0.0272 0.0258 0.0246 0.0236 0.0226 0.0218 0.0211

Table 5.4: Relation between /j and round-trip a: This table shows for fixed quadratic variation Vo = 0.0067, how J and V(So, vo, a) (see equation (3.16)) can change. Also tlris table shows that if N2 incre&<;es, as a result 8 decre&<;es, and we have to reduce round-trip (}; in order to be satisfied in inequality a < 8.

are not able to check the bounds for any round-trip a &<; we wish. \Ve set our program for N2

=

70,

So

1 and ]{

1 and the annual volatility is

(j

= 0.2, so

~ ~0.009. VN;
it means, we have to run the program for a

< 0.009 6.

Figure 5.10 displays the minimum upper and the maximum lower pricing bounds for an option in the proportional transaction costs model for the fix jump size

1

3, with different round trips a = 0, 0.1%, 0.4%, (Figure 5.10). Note

0,0.001,0.004. Clearly by increasing the level of 0:, the nilnimum upp~r bound price increases and the shape has less curvature by changing of the amount ofroulld-trip a costs (o: that for the round-trip, for example 0.1 %, the upper bound is very close to the c&<;e of no transaction

= 0) while the lower bound is not as tight.
Market Data and No-Arbitrage Bounds

5.2

From the point of view of the J-N algorithm, it is clear that a key issue is to forecast the future quadratic variation Vo over the life of the option. To reach this goal, we attempt to calculate the historical quadratic variation from the market data. To this end, we use daily closing prices of Yahoo! Inc. 7 for the period May 2009 - May 2011(closing prices are shown in Figure 5.11).
6 Admittedly

this a is too small for practical matters but as we mention in Remark 12, we use this number for the

59

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS

0.18 0.16

0.14
0.12

.g a..

·

01 .

o

f5 'il 0.08
0.00 0.04
0.02

-'-"a,=O ·········a,=O.OO1 - -e- .· w=O.OO4

8.85

0.9

0.95

1

1.05 1.1 Stock Price

1.15

1.2

1.25

Figure 5.10: Upper and lower bounds for the proportional transaction costs: the plot shows that by reducing a, the bounds become smaller when the jump units is fixed.

19
18

6-May-2011

Figure 5.11: Time Series: The sequence of dosing price between May 2009-May 2011 for the chosen stock is shown in this figure

60

CHAPTER 5. NUMERICAL ANALYSIS 5.2. MARXET DATA AND NO-ARBITRAGE BOUNDS

5.2.1

Forecasting the Quadratic Variation

We set the initial stock price on April 14, 2011. At that moment, Yahoo! Inc. closing price was at $16.69. In order to find the (sampled) quadratic variations from historical data, we followed the following process. Let [To, Ttl be closing daily business days where To = May 6,2009 and Tl = May 6,2011. We consider llt = 43 which are (almost) two-months of bnsiness days. Then we look for ts E [To, Tl - llt] such that S(ts) = S(O) = 16.69 (See Figure 5.11). For any ts, the quadratic variation Qvs can be found by applying
42

Qvs
where Si E [S(ts), S(ts

2:)ln (Si+t) -In (Si))2,
i=O

(5.3)

+ llt)].

By applying (5.3) for all ts E [To, Tl - At], we found Qv = {QVl' ... , QV16} (Figure 5.12).

0.03

0.025

'i 0.02
.!:!
co

~ ~

>

~ 0.015
001

6

0.005
2 3 4 5 6
1 a 9 10 Sample Window

11

12

13

1.4

15

16

11

ts such that So

Figure 5.12: This figure shows the quadratic variation for different windows 1,0.,16 which start at times S(ts) ::::; 16.69 and all window's sizes are N2 = 43

Let us assume that the future quadratic variation is neither higher than the maximum value of the set of the quadratic variation Qvs nor less that the minimum of the set Qvs. So we find the minimum and the maximum of the set Qv

QVma;r; = max Qvs
s

= 0.0326

QVmin = min QVa = 0.0073
s

(5.4)

illustration propose only. 7This Data can be obtained from http://ca..finance.yahoo.cam/q?s = Y HOO&ql

=0

61

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS

where s

1, ... 16.

A. Bounds with No Jumps vs. Option Price of the Market:
We are interested in finding a no arbitrage interval which denoted now as [L(QVmin), V(Qvmax)J. Let a..'lsume the future quadratic variation QVf E [0.0073,0.0326], then we consider call options that expire within two months with strike prices ranging from $13 - $28. Table illustrates 5.5 the a..'lk price of the option with different strike prices.

Strike price Option price (Ask price)

13 5.7

14 4.75

15

16

3.75

2.81

17 1.97

18 1.28

19

0.77

20 0.45

21 0.26

22 0.15

Table 5.5: This table shows the option price with different strike prices.

First of all, we find the minimum upper bound 8 of the option values with no jumps and then we compare the results with the actual option prices (a..'lk price is used for the minimum upper bOllld and bid price is used for the maximum lower bound) for each available strike price. Note that for each strike price, the initial value is 8(0)

= 16.69 and N2 = 43; therefore,

{) = )0.0326 43
We notice that Oempirical this model in practice.

~ 0.027.

= O<i<43 min Iln(8H d
- -

In(8i )1

= 0, which can be an issue when one wants to use

By an inspection of the minimum upper bound in Figure 5.13, it seems that there is an arbitrage opportunity if the future quadratic varication be at most 0.0326 because V(Qvmax ) < Vask .

Remark 15. Recall that our model is an incomplete model, so if the option value Va E [V, l::] , then there is no arbitrage. But in this example Vask, which is the option price, is out of the interval, so we have an arbitrage opportunity. B. Bounds with Jumps vs. Market's Option Prices:
Will the above arbitrage disappear by including jumps? We test the algorithm with max jump-unit 6 (.JN2 ~ 6). Figure 5.14 illustrates the effect of jumps to remove the arbitrage. It seems that by increasing the jump size, the arbitrage for the strike price $2()...$22 can be made to disappear. But still there is an arbitrage opportunity when the strike price is less than $20.
SIn this thesis, we consider to find the minimum upper bound. For the maximum lower bound, the analysis is done similarly by using minimum quadratic variation 0.0073 and comparing the result with the bid price.

62

CHAPTER 5. NUMERICAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS

2

15

16

17 18 SInh Prie.

19

20

21

Figure 5.13: This figure shows the ask option price and the minimum upper bound with the maximum quadratic variation 0.0326, in the case of no jump occurs

6

- 'r -. Option Value: The real market
- -Ill- -· Option Value: No Jump

- .. _. Option Value: Max Jump

2

14

'5

16

17 18 Strike Price

'9

20

Figure 5.14: The minimum upper bound with no jumps and maximum jump units equal to 6 compared with the real option value show in t.his figure.

63

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS

C. Bounds with Fixed Transaction Costs vs. Market's Option Prices:
For the next step, we wish to'consider whether transaction costs can reduce/remove the chance of having an arbitrage opportunity. To reach this goal, first we add fixed transaction costs, without jumps, to our model in order to make it more realist-ie. We expected that any arbit.rage profits should disappear. In the case of fixed transaction costs, we found out by adding at least JC = 0.045 as a cost of trading 9{according to Remark 14, if we buy have a contract with c = 222, we will have JCR == 10$ which is more realistic) to the previous set up, i.e So = $16.69 and N2 43 with Vo = 0.0326, the arbitrage is vanished for all strike price. Note that the minimum upper bound of the option becomes very expensive by enlarging of the strike price form $13 - $22 (Figure 5.15).

_. _ ·· Option price: The Nal mlrket _. _ .· Option price:No jump ... + ... Option priCt: fixed T.C.=O.045

2

Strike Price

Figure 5.15: This plot shows the upper bound with the minimum fixed transaction JC == 0.045 which can remove the arbitrage in this market for all strike price.

D. Bounds with Proportional Transaction costs va. Market's Option Prices:
Finally, we cileck if we can remove the arbitrage by adding the proportional transaction costs. Recall that, 0 0.027; Therefore, the maximum value of the round-trip a that we can run our program with

a = 0.026 < O.
9 As we mention b(lfore, in this thesis, we work with a. single option. To have more rea.listic fixed tran~action costs, we need to consider trading a large number of options (as is the case in actual markets)

64

CHAPTER 5. NUMERJCAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS

We plot the minimum upper bound with So $16.69 for a maximum round-trip a: 0.026, fhst with no jumps and then for a maximum jump units 6. So, as it can be observed in Figure 5.16, in the case of proportional transaction costs, we are not able to remove the profit for ]( $13 $17, because of restriction that we have on the round-trip (but it is already realistically high).

'.
5

,
".

,
"

"

. ",
.4

's;?,
'!!!,

"
"

'::iI!, "

-= »

82

.~

"-

"-

_. - ·· Option Valu.: -. -. - Option V.lu.: ... () , .. Option Value: ,. '\t'"" Option Valu.:

Th. real mark .. No Jump Max.Jump & Ma){-a: Nt>-Jump & Max·a:

"
"
"

1.4

15

16

17

16

19

20

21

22

Strike Price

Figure 5.16: In the ca.<;e of proportional transaction costs, we are not able to remove the gap, because of limitation on a: < 0.027.

5.2.2

Investment Strategy

In the previous section, we found an example that the call is overpriced, so there is an arbitrage opportunely in this ca.<;e. In this section, we implement the actual hedging by using the J-N algorithm to see whether we are really superhedging according to proposition 1 or not. As we know a most important parameter needs as input in the J-N algorithm is Vo. To reconstruct the hedging approximation, first we use Vo = Qvmax and then the actual quadratic variation of a 'window Qvw , this will allow us to see what is the effect of using a larger quadratic variation which is Qvmax than the actual realized quadratic variation Qvw · To reach this goal, we run the J-N algorithm when Qvmax 0.0326 and use the results such as price and hedging amounts at each node to actually hedge and then we replace Qvmax by Qvw to compare the results.

65

5.2. MAR.KET DATA AND NO-ARBITRAGE BOUNDS CHAPTER. 5. NUAIER1CAL ANALYSIS
Let us use S(tk) to denote the market data (daily closing prices for Yahoo! Inc.) in one of the windows where k = 0,1,2, ... , R. (R = 43 is length of data window) clearly lIn S(tk) -In S(tk-dl will take a variety of values which are not necessary equal 8, where 8 is the minimum log return from the algorithm. In order to implement the hedging investment, let Si. :::::l S(tk) where Si. denotes the stock discretization value on the grid of the J-N algorithm closer to S(tk), therefore;
(5.5)

k

V(tk)

[QVmax - 2)lnS(tp) -lnS(ip_ 1»2].
p=O

(5.6)

So now we have a sequence (Si.,Vjk) in the grid. By knowing Sik = Soe ik /) and Vi. = {N2 jk)8 2 , we will need to decide how much to invest in the stock. Thus we modify the J-N program and create a matrix H[i,j] such that ll[i,i] and jk as follows: hi,j and choose the necessary number of shares by using indexes ik

(5.7)
And
(5.8)

Now, a problem is that the node (ik,ik) may not have been visited by the J-N algorithm i.e. there

i~

no hk value available at this node. Then one needs to look for the closest node that actually has hk available. A problem we have found dealing with the current data is that the J-N grid does not capture well the small changes, we solved this problem by using the following process:

· It seems the problem should disappear if N2 is large enough .
· The problem can be fixed if we can stay in node (Si, Vj), namely doing nothing. The hedging differenee should then be:
N

- V(Stll)

+ V(QVmax,d) + :Lhi(S(ti+l)
i=O

SCt,»

The final balance (which will be an actual profit if the above hedging difference is nonnegative and there is an arbitrage, i.e. [Price of option - V(QVmax , d)] > 0) will actually be:
N

Price of option- V{QVmax , d) - V(Stll)

+ V(QVmax ,d) + '2:::>i(S{ii+l) i=O

S(ti»

where N is the number trading and hk is the amount of shares that the J-N algorithm gives at node
66

CHAPTER 5. NUMERICAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS

In following we implement the hedging strategy with the different approaches.

I

Investment Strategy with Qvmax when N2

= 43.

First of all, we find the closest path, to the actual empirical path, among all passible paths that the J-N algorithm creates when N2 43 with Vo = Qvmax in the ca..<;e that no transaction costs occur. \Ve do this by staying in some nodes whenever the movement of stock price is very small, namely the log return is not greater than 8 which is 8 = min Iln(SH1) -In(Si)l.
OSoiSoN

Figure 5.17 displays the price path of Yahoo! Inc. for one of the windows and the simulated price path from the J-N algorithm, as it can be seen, because some of the movements of the market prices are small, we have to stay in a node and wait for another day in several instances. As a result, the chosen price path from the J-N algorithm is not very close to the market movements.

19.5

Figure 5.17: The figure shows the Yahoo! Inc. price path and the closest J-N price path for one of the windows but using the future quadratic variation QVmax when N2 = 43.

II

Investment Strategy with Qvw when N2

= 43.

As a second step, we implemented the hedging strategy and obtained the closer price path from the J-N algorithm by using the same number N2 but now we took Vo = Qvw · Figure 5.18 shows the Yal100! Inc. price path and the J-N price path closer to the data for the same window but using the exact quadratic
67

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS

variation, namely Qvw · Apparently, the artificial price pat.h form t.he J-N algorithm is now much closer to the actual price path for this window, this can be explained given that Vo = Qvw < QVmax implies that we decrease 0 so we will have a better approximation to Sk.

19

~

'.'

......... Yahoo Pric. path --The J-N price path

15.5 0

5

10

1S

20

25

l)

35

.co

<45

Figure 5.18: The figure shows the Yahoo! Inc. price path and the closest J-N price path for one of the windows with the actual quadratic variation of the window QVw when N2 = 43. The next solution to the problem that we have tried increa..ses the value of N2 in the J-N algorithm, this provides a better approximation by decreasing 0, we run the program when N2 = 80 and followed the same process a..'l before,

III

Investment Strategy with Qvmax when N2

80.

In this case, we use Qvmax with larger N2 = 80, clearly we decrea..se 0, so we have a better approximation of Stk and there is no need to stay in the same node many times. Figure 5.19 shows the result in this ca..'le.

IV

Investment Strategy with Qvw when N2

80.

Finally, if the exact quadratic variation of the window is used for the implementation, the result is very close to the aCtual path for this window( Figure 5.20). So it seems that if we want to have a very good approximation of a given price path we need to have 0 as close as possible as to the minimum return of the window price path. Now we would like to investigat.e the profits/losses described above. In particular we are int.erested in

68

CHAPTER 5. NUMERICAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS

1B.5

1B

16.5 16

Figure 5.19: The figure shows the Yahoo! Inc. price path and the closest J-N price path for one of the windows with the future quadratic variation QVmax when N2 = 80.

19

45

Figure 5.20: The figure shows the Yahoo! Inc. price path and the closest J-N price path for one of the windows with the actual quadratic variation of the window QVw when N2 = 80.

69

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS
observing if whether we have superhedged or not, especially in the case when we use Va = QV max as the superhedge is only guaranteed theoretically for the case Va = QVw · Moreover, we are interested in seeing the effect of transaction costs in the profit/loss as well. Table 5.6 illustrates the profits/losses for all cases.

Model" Model ",1th no Transactio Costs .Model with no Transactio Costs Fixed Transaction cost Ie 0.045 Fixed Transaction cost Ie = 0.097 Proportional Transaction Costs with C\; = 0.02 Model with no Transactio Costs Model with no Transactio Costs Fixed Transaction cost Ie = 0.045 Fixed Transaction cost Ie = 0.071 Proportional Transaction Costs with C\; = 0.02

43 43 43 43 43 80 80 80 80 80

29 21 21 21 21 34 28 28 28 28

Qv 0.0163 0.0326 0.0326 0.0326 0.0326 0.0163 0.0326 0.0326 0.0326 0.0326

delta 0.0195 0.0202 0.0202 0.0202 0.0202 0.0143 0.0202 0.0202 0.0202 0.0202

profit.s/losses 2.2666 1.9229 1.0230 -0.018 1.0271 2.7220 1.8888 0.6839 -0.0181 -0.0692

Table 5.6: This table shows the profits/losses of Yahoo! inc. price pat.h and also required number of Qvw · Note that N is the actual number of tradings, N2 is the trading when Va = Qvmax and Vo number that we run the J-N algorithm with and Qv is the quadratic variation that could be the future quadratic variation or the actual quadratic variation.

As it can be seen in Table 5.6, we have profits almost in all ca<;cs except in the ca<;c of a large fixed transaction cost. Also when we hedge along the path with its actual quadratic variation, the profit seems that is higher than when we use the Qvmax because we use the smaller 0 so we trade more. As we mentioned in figure 5.20, the J-N price path is very close to the actual price path and this result can be see in Table 5.6 as well, we trade around 34 times and we have higher profits there.

5.2.3

Smile Quadratic Variation

For our last empirical work, it is interesting to see that the minimum upper bound on the option value that we derived has a smile feature in the quadratic variation. We have seen that for the future quadratic variation of Qvmax = 0.0326, the option price that we can obtain from the J-N algorithm is lower than the actual market price if no transaction costs are used in the J-N algorithm. So, one can ask, what is the real sampled quadratic variation to be used as input to the J-N algorithm in order to have the actual market's price? To test the results, we set up the program with So = 16.69 and N2 43. Then for each K = 13,14, ... ,22, we change the quadratic variation until we find the (implied) quadratic variation that gives us the option market's value 10.
lO\Ve use the fact that the minimum upper bound as a function of the quadratic variation is a monotonic function.

70

CHAPTER 5. NUMERiCAL ANALYSIS 5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS
After thiR, we attempt to find the implied quadratic variat.ion's market. in the presence of fixed and proportional transaction costs to see how transaction costs can affect the implied quadratic variation.

0.4
0.35

..

0.3

.1 0.25
·c

.~ 0.2

.

~ 0.15
0.1
0.05

~

... + ... No transaction
-·-··K=O.Ol ........ K=O.lXJl

Strike Price

Figure 5.21: This figure displays the behavior of the quadratic variation as the strike price increases with fixed transaction costs. We assume the option price is the option market and we find the quadratic variation such that gives us the option price market. Figures 5.21 and 5.22 display the behavior of the implied quadratic variation as a function of the strike price. The smile (i.e. non fiat) feature of the graphs displayed does not disappear with the inclusion of fixed or proportional transaction costs. So, as a result of the above findingR, it seems that the basic model (Chapter 2) should be extended to consider the case of Vo to be path dependent, i.e. the quadratic variation should not be constant across the modeling paths. This extension is known to capture the smile phenomena in probabilistic modeL'l.

71

5.2. MARKET DATA AND NO-ARBITRAGE BOUNDS CHAPTER 5. NUMERICAL ANALYSIS

0.4

15 ·c

.~ 0.25
.~

..

- - N o transaction ·G-·-w=O.01

·········0.=0.001
0.2
0.15 0.1

'i d

15

0.05

Strike Price

Figure 5.22: In this figure, we show if the proportional transaction costs exist, the actual quadratic variation should be I(:,Bs than in the ca..<;e of no transaction costs.

72

Conclusions
The Black-Scholes assumptions on the stock price process is an important limitation of the Black-Scholes model, because in practice trading is discrete and the price paths are discontinuous and include price jumps and portfolio re-arrangements are subject to transaction costs. Britten-Jones and Neuberger [Britten and Neuberger, 1996] show how one can relax the assumptions of continuity and infinite trading possibilities by adding some restrictions to the possible price paths in order to have a more realist framework. The most important assumption in their approach is that the model requires a known (sampled log) quadratic variation of price changes over a finite time interval and also they assume price jumps not to be greater that some specified jump size. By making use of those assumptions, they provide an interesting financial description of no arbitrage bounds of an option price by using a non probabilistic approach. This thesis develops further the Britten-Jones and Neuberger framework, by introducing two kinds of transactions costs, fixed and proportional transaction costs, and analyzing the impact that adding these transaction costs have on the pricing interval (no arbitrage bounds). The extension has some important practical implications; in particular, allowed us to conduct a preliminary analysis in order to assess the empirical relevance of the extended framework in real market data. The preliminary conclusions drawn from our studies are that the realistic features of the framework, in the sense that it requires few assumptions and observable inputs, make it a useful instrument that can be used to look for miss-pricing opportunities in option's prices. In particular, we provide some preliminary evidence that arbitrage opportunities, once present, may remain after transactions costs are taken into account.

73

Appendix A

Some Basic Concepts in Finance
In this appendix, we briefly introduce some fundamental concepts in finance. A derivative (also referred to as contingent claims) is a general term for any financial contract whose value depends on underlying asset. An option is a derivative security that gives the right to buy or sell the underlying a..sset. Options can be European style, which can only be exercised at the expiry date, or American style, where exercise is at the discretion of the holder, at any time before or at the expire date. The underlying variable can be a traded asset, such as a stock; an index portfolio; a futures price; a currency; or some mea..<;urable state variable, such as the temperature at some location or the volatility of an index. The payoff can involve various patterns of cash flows. Payments can he spread evenly through time, occur at specific dates, or a combination of the two. Our work on derivative pricing will focus on two specific types of contracts, a forward contract and call option.

Definition 9. A call option is a contract that gives the holder the right, but nOl the obligation, to purchase the underlying for a pre-specijiefJ price J(, called the strike price at the expiry date T with the exercise payoff max(S J(,O) where S denotes the price of the underlying asset. Definition 10. A forward contract is an agreement between two parties to exchange an amount of the underlying commodity, currency or financial asset for cash at some specific date (the expiry date) in the future. The amount of cash to be'paid (called the forward price) at expiry is determined when the contract is formed and is set so that there is no cost to either party to enter into the agreement.
The Forward Price can be determined by the following formula:

where r is interest rate.
75

APPENDIX A. SOME BASIC CONCEPTS IN FINANCE

In general, forward price is Ft,T Ster(T-t) for 0 ::; t ::; T. Because in this thesis, we assume that the interest rate is zero i.e Ft,T = St. therefore instead of forward price, we work with the stock price .

76

Appendix B

Binomial Tree Model
Binomial models were first suggested by [Cox and Rubinstein, 1979], CRR, and then became widely used because of its intuition and ea..<;y implementation. Binomial trees are constructed on a discrete-time lattice. With the time between two trading events shrinking to zero, the evolution of the price converges weakly to a lognormal diffusion. \Vithin this mode the European options value converges to the value given by the Black-Scholes fonnula. STEP 1: Create the binomial price tree Suppose that we have an underlying instrument (a stock price) at time t = 0 with initial value So. At .any node on time layer ti, the asset price S, can branch up to the value Sup S.u at time ti+1' or down to the value Sdown = S.d, where, by definition, u ~ 1 and 0 < d :::;; 1 are called up and down factor respeetively. The probability of an "up move" is p and that of a "down move" is I-p. Over one time period, £:"t, the up and down factors are calculated using the underlying volatility, 0' and the time duration of a step, £:"t, mea..<;ured in years. From the condition tha:t the variance of the log of the price is 0'2 £:"t, we have:

d=

=-.

1

u

The CRR method ensures that the tree is recombinant, Le. if the underlying a.."lSet moves up and then down (u,d), the price will be the same as if it had moved down and then up (d,u) here the two paths merge or recombine. This property reduces the number of tree nodes, and thus accelerates the computation of the option price. This property also allows that the value of the underlying asset at each node can be calculated directly via formula, and dops not require that the tree be built first. STEP 2: Computed the a..'l..<;et prices at all the nodes Th~ asset price tree is built by setting the value of the asset on the (i + I)th layer (that is at time since we start at to

til

= 0):
S(j, i)
S~
:1

j

O, ... ,N,

77

APPENDIX B. BINOMIAL TREE MODEL
where j corresponds to the (j

+ 1)th node up the layer (Le.

j increases upwards) and,

STEP 3: Find Option value at each final node (Terminal)
At each final node of the tree Le. at expiration of the option T, the option value is simply its intrinsic, or exercise, value .

· A call option: · A put option:

max (ST - K,O), max (J( - ST,O),

where J( is the Strike price and ST is the price of the underlying a.c;set.

STEP 4: Find the option value at earlier nodes
Once the above step is complete, the option value is then found for each node, starting at matutity time, and working back to the first node of the tree where the calculated result is the value of the option. The binomial value is found at each node, using the risk neutrality assumption, is: vt-At,i e-rAt(Pvt,Hl

+ (1 -

p)vt,i-d

(B.l)

Where vt,i is the option's value for tth node at time t and r is the risk free rate corresponding to the life of the option with probability pis:
p=

erAt _ d u-d .

Implementing the Tree:
We start with computing the current price Vo of a European call; following algorithm gives the procedure for given values of the a.'lset price S, the strike K, the volatility a, the risk free rate r and time to maturity

T.
Algorithem European Call Option:

1. Input Strik J( , So, r, a, T and Time Steps M.
2. Compute tJ.t = 3. Compute ud 4. Compute p 5. Evaluate Si

'E where n is steps on tree.
1 where u = a.jKi .

e",.6.t_d

--u=;rj.

6. Calculate Price for Calls at T.

78

APPENDIX B. BINOMIAL TREE MODEL
7. Binomial Value
[px Option up

+ (1 -

p)x Option down] exp( -r x

Dot),

The above is the original Cox, Ross, Rubinstein (CRR) method; there are other techniques for generating the lattice, such as "the equal probabilities" tree. The Trinomial tree is a similar model, allo\\ing for an up, down or stable path. The CRR method ensures that the tree is recombinant, i.e. if the underlying asset moves up and then down (n,d), the price will be the same as if it had moved down and then up (d,u) here the two paths merge or recombine. This property reduces the number of tree nodes, and thus accelerates the computation of the option price. This property also allows that the value of the underlying asset at each node can be calculated directly via formula, and does not require that the tree be huilt first.

79

APPENDIX B. BINOMIAL TREE MODEL

80

Appendix C

Dynamic Programming
C.I What Is Dynamic Programming?

The optimization of problems over time arises in many settings, from the control of heating systems to managing entire economies and finances. In between are examples including landing aircraft, managing blood inventories, selling assets, investing money in portfolios, or just playing a game of tic-tac-toe or backgammon. These problems involve making decisions, then observing information, after which we make more decisions, and then more information, and so on. Dynamic programming is an optimization procedure that is particularly applicable to problems requiring a sequence of hiterrelated decisions. Each decision transforms the current situation into a new situation. A sequence of decisions, which in turn yields a sequence of situations. The value of a sequence of decisions is generally equal to the sum of the values of the individual decisions and situations in the sequence. The main concept of dynanlic programmingis that choosing the best state in each step leads to the optimum final state. The field of Dynamic programming is young, the original developments of the material are still accessible and relevant. Richard Bellman first introduced the title of dynamic programming to the study of these methods in his 1957 monograph [Bellman, 1957].

C.2

Analytical Concepts in DP

In this section, we briefly present the fundamental concept of Dynamic Programming[Bertsekas, 1976], [King, 2002}. For our approach, we fucus on a finit.e horizon discrete time dynamic programming model. 81

C.2. ANALYTICAL CONCEPTS IN DP

APPENDIX C. DYNAAJIC PROGRAMMING

Suppose we wish to optimize a separable cost function of the form
N-l

V

L
;=0

Ui(Si,Ci)

+ VT(ST).

(C.1)

Note that the initial and terminal condition on the function are necessarily. Even though we can use the Lagrange multiplier method for solving simple dynamic optimization problems, we are simply looking for a more tractable, and more powerful way. All dynamic programs can be written in terms of a recursion that relates the value of being in a particular state at one point in time to the value of the states that we are carried into at the next point in time is known as Bellmans equation, or the Hamilton-Jacobi equation, or increasingly, the Hamilton-Jacobi-Bellman equation (usually, in continuous-time optimization problems. Some textbooks refer to them &'l the functional equation of dynamic progranIllling. We use the term Bellman Equation in our work, which is so widely used in the dynamic programming community.

C.2.1

Utility or payoff Function

To understand the Bellman equation, several concepts must be understood and it will be useful to review the elements of a dynamic program. First, any optimization problem has some objective such as minimizing travel time, minimizing cost, maximizing profits, maximizing utility, et cetera. The mathematical function that describes this objective is called the objective function. It means the agent has a utility or payoff (Cost) function U(s}, Cll ... , ST, CT) that depends on the realized states and decisions from period tOto the horizon T 1 · U has the form
Tl

U(BI,C}"",ST,CT) = LUi(Si,Ci).
i=O

(C.2)

where Ui(Si,Ci) is the agent's period i utility (payoff) function.

C.2.2

Control and State Variable

There are two key variables in any dynamic programming problem: a state variable 8t, and a decision variable Ct (the deciilion is often called a control variable in the engineering literature). These variables can be vectors in ]Rn, hut in some cases they might he infinite dimensional objects.

Definition 11. The state variable: this captures all the information of the current situation which is needed to make a correct decision, as well as the information that we need to describe how the system evolves over time.
For example, to decide how much to consume and spend at each point in time, people would need to know (among other things) their initial wealth. Therefore, wealth would be one of their state variables, but there would probably be others.
82

APPENDIX C. DYNAMIC PROGRAMMING

C.2. ANALYTICAL CONCEPTS IN DP

Definition 12. The decision (control) variable: Decisions represent how we control the process and chosen at any given point in time. For example, given their current wealth, people might decide how much to consume now. Choosing the control variables now may be equivalent to choosing the next state; more generally, the next state is affected by other factors in addition to the currflnt controL Therfore, in the simplest case, today's wflalth (the state) and consumption (the control) might exactly determine tomorrow's wealth (the llew state), though typically other factors will affect tomorrow's wealth too.

C.2.3

policy

The dynamic programming approach describes the optimal plan by finding a rule that tells what the controls should be, given any possible value of the state. For example, if consumption (c) depends only on wealth (lV), we would seek a rule c(W) that gives consumption as a function of wealth. Such a rule, determining the controls as a function of the states, is called apolicy function Definition 13. Assume that the state 8i is the state variables at the end of time interval i (an element of a space <Pi), the control variable Ci is the control variables applied during time interval i (is an element of the a space IRm). A policy function or control law is a sequence of N functions (J.lo, ... , J.lN-l):
J.li : <Pi
-7

R

ln ,

(C.3)

where J.li maps states Si into control Ci

J.li(Si)

C.2.4

Basic Model

A dynamic optimization problem (payoff function) in discrete time is given by the form
N-l
opt

L

Ui(Si, Ci) + VN(SN).

(CA)

i=O

subject to:

(C.5)
with the initial condition So given and the terminal value is given.

G i is a function that describes the system and in particular the mechanism by which the state is updated. And express the evolution of the system of the state under the influence of the control variable.
\Ve now formulate a general problem of decision over a finite number of stage. This basic problem is very general. We start by considering problems that have the following representation:

83

C.2. ANALYTICAL CONCEPTS IN DP

APPE!'.TDIX C. DYNAMIC PROGRAMAlING

Stat

Different values which can be taken by variable s;

·

Consider a discrete-time dynamic system modeled by the state equation (C.6) where the state s£ is the state variables at the end of time interval, the control variable vector of the control variables applied during time interval i.
Ci

E IRm is the

The initial state So is given; the final state ST may be constrained or not. No uncertainty is considered here: given the current value of the state variable Si, after selecting the control variable Ci we know exactly what the future state will be, according to the time-varying dynamics described by the Gi functions. Given an initial state So and a fixed admissible policy function J1. = (J1.O, ... ,J1.N-d, we start with observations which are already exist and dynamic system C.6 becomes

O, ... ,N
Thu.."l, for given function Ui , i = 0, ... ,N
1,
N-l

1

(C.7)

VJL(so) =

L

Ui(Si, J1.i(Si»

+ VN(SN)

(C.8)

i=O

Optimal policy J1.* is one that optimize the function C.8,
N-l

VJL'(so)

= OptJLElRm

L

Ui (Si,J1.(Bi»

+ VN(SN)

(C.9)

i=O

84

APPENDIX C. DYNAMIC PROGRAA1MING

C.2. ANALYTICAL CONCEPTS IN DP

State

At each point of the grid we associateacontrol c:
(represented here by a vector)

·

:-. :.............. :-+ :..............
I

~~

·

I

:--;--. ·

--~~~--~~------~----~----------'Tmoo t=O
State

·

·

~~~~

____-&____________________ ' ________

· ·

-'TUne

t=O

t=N

where lR is the set of all admissible policies.

The Principle of Optimality Richard Bellman showed that a dynamic optimization problem in discrete time can be stated in a recursive, step-by-step form by writing down the relatiollship between the value function in one period and the value function in the next period. The relationship between these two value functions is called the Bellman equation. In general there are following method to solve this equatioll: 85

C.2. ANALYTICAL CONCEPTS IN DP

APPENDIX C. DYNAMIC PROGRAMMING

1. The method of undetermined coefficients, also known as 'guess and verify', can be used to solve some infinite-horizon. 2. The Bellman equation can be solved by backwards induction. 3. By calculating the first-order conditions associated with the Bellman equation
1.

We use the second method, which is backward induction, to solve the Bellman equation. The key idea underlying why backward induction produces an optimal decision rule is called The Principle of Optimality. Roughly, the principle of optimality states the following:

Claim 1. Let tt* {tlO' ... , ttiY -1} be an optimal policy for basic problem and assume that using tt*, a given state Si occurs at time i. Consider the subproblem whereby we are at Si at time i and wish to minimize the cost-to-go from time i to time N Then the truncated policy {tt:, H., ttiY -I} is optimal for this subproblem.
Proof: [Bertsekas, 1976] So an optimal policy has the property that whatever the initial state and initial decision are, the remaining decisions must constitute an optimal policy with regard to the state resulting from the first decision.

1 It is poosible to obtain a system of difference equation~ or differential equa.tions called the 'Euler equations'. Standard techniquc.s for the solution of difference or differential equations can then be us~>d to calculate the dynamics of the state variables and the control variables of the optimization problem.

86

Appendix D

The Optimal Hedging
D.l
Basic Model

As we mention in Chapter 2, the Bellman Equation can be \\ITitten as

(D.I)
Subject to the conditions

Note that, the Bellman equation (3.6) is a non st~dard dynamic programming problem due to being a minimax optimization problem. However, the optimal hedging strategy can be ea.'iily found and with this out of the way the problem becomes a standard dynamic programming problem. The infimum over the trading strategies that makes the prohlem non-standard dynamic programming. \Ve are going to use some really neat tricks. Suppose that we have found optimal hedging, problem (2.27), therefore we have

h,

for the

Since we have defined V(Si, Vi) as an upper bound, one can rest assured that

87

D.l. BASIO MODEL

APPENDIX D. THE OPTIMAL HEDGING

The amount by ,vhich the upper bound V(Si, Vi) is greater than the right-hand-side is a function, P, of the permi&<;ible value for
Ci.

We can therefore write as (D.2)

Obviously from the equation (D.2), F(Ci) ;::: 0 and by substitution have F(D)

C--j

= 0 in definition of fUllction

F, we

= O.

Remark 16. If the function F is equal to zero at the origin, and greater or equal to zero for positive or negative values of c, as long as arbitrarily small in magnitude, then the derivative of F with respect to Ci in the neighborhood of Ci 0 must be equal to O.
Above grantee that

PI(O)
Now by applying the derivative in (D.2),

= o.

Evaluating this quantity at Ci = 0, and equating it to zero, gives (D.3) Therefore follows that the optimal hedge ratio is given by aS = h,
i

av

-

Ci

:5 min(ci,d ).

2

(D.4)

Equation (D.4) determines the optimal strategy. Note that, if all the Black-Scholes conditions are met, the usual expression for the Black delta holding of shares is recovered. The optimal strategy, however, holds aL<;o in all the more general cases where the J-N method is applicable. As a last step we can substitute the optimal strategy we have just determined in the expression for the minimum upper bound. \Vhen we do so we obtain: (D.5) Subject to the inequality constraint:

88

APPENDIX D. THE OPTIMAL HEDGING
and the terminal condition

D.2. PROPORTIONAL TRANSACTION COSTS

D.2

Proportional Transaction Costs
h, has somehow been found, so
c;,a) hSi(eCj -1)

Let us assume that the optimal hedge, V(Si'Vi,a) where 9

= SUp{V(Sie Ci , Vi {cd

+ alh -

gISie""}.

(D.6)

= H(Si+l,vi+d

and is known.

Therefore we can define the difference between the left-hand side and the right.-hand side as a function

By using induction, we can show Fo:(O)

O.

Assume i

=N

- 1, so

According to our set up

So Fo:(CN-d When i

= 0 when CN-l = O.

n

where V(Sno vn,a) = V(Sn+l,V"+l,a) By doing the same process we can show Fo:(O)

+ aIH(S", Vn)

H(Sn+l, V,,+l)ISn+l' O. Therefore

= 0, hence according to remark 16, F~(O)
89

D.2. PROPORTIONAL TRANSACTION COSTS
follows that the optimal hedge ratio is given by

APPENDIX D. THE OPTIMAL HEDGING

Evaluating this quantity at Ci = 0, and equating it to zero, gives
(D.lO)

Finally

h the optimal hedge ratio is given by
oVa OSi = h - alh - gl,
where
Ci:5 min(ciJ d ).
2

(D.ll)

Hence, we look for the optimal trading strategies such that

oVa =
OSi Therefore
· If h ~ g, then · If h < g, then

{(I

a)~+(19' ifh~g,
if h < g.

(1 + a)h - (lg,

h= h

l~'"

-ag) .

1;", (~~~. + ng).

90

Appendix E

MATLAB Code
Optimization without Transaction costs o/JJy this program, we find the minimum upper bound without transaction cost. %We set the program for S_0=1 and K=I, annual volatiIity=0.2 for 2-month %observation %%% Inputs N=100j volannual = 0.2;

%number of setps in the tree %annuaI volatility %(number of month)/12 T = 2/12; T*(volannual "2); %remainding volatility v_O remainvol delta = sqrt (remainvol/N); 9'iN*\ delta o/ed/ delta ddelta = 3 % Strike Price Strike = 1; i = matrixI (N); % is a function C length (i (: ,1»; % length of i in maturity Value (-lOO)*ones (N+l,N+ 1); Stock (lOO)*ones{N+l,N+l); %matrix of number of shares hstar = zeros (N,N);

o/.Wt% Payoff at T
time = 1; StockO 1; Stock(:,time) for A

= StockO*exp(i{:,time)*delta);
91

=

I:C

APPENDIX E. MATLAB CODE
Value(A, time) end for time = 2:N+I Stock(I:C-(time-I),time) = StockO*exp(i (I:C-(time 1),time)*delta); nl = fix(sqrt(min«ddelta)'2,time-l»)j %condintion n<=min(ddelta,N-j) for h=I:C-(time -1) [Valuel I Stockl] destpoint (nI, time,h I StockO, Value I delta, i) i %function %%% optimization o/JYo% [V,Vhj = opthedge(Valuei ,Stocki ,Stock(h,time»; %function hstar(h,time) = Vh; %optimal hedge Value (11 I time) Vi %optimal value clear Valuel Stock 1 end end VlO Value (1, time); %the minimum upper bound function [i] = matrixI (N) %To make matrix i which create the gide for index i, where N is steps in %the tree (2*N+I)*ones (N+l,N+l); i (: ,1) (-N:2:N) '; for c = 2:N+l I-I a I(c) = (N-(c 1»; for e = -I(c):2:I(c) i (a, c)= e; a = a+l; end end function [Valuel, Stockl] dest pain t (ni , time, h, StockO I Value I del ta Ii) % With this function I we find the all destination points from a certain % node. Re'call that (i ,j) goes to (i+n,j+n'2) where n<= min(j Id'2/delta '2). p = 1; for n=-nl: ni if n-=O if time-l>=n '2
92

max( Stock (A, time)- Strike, 0) j

APPENDIX E. MATLAB CODE
ismember ( i (h, time )+n, i (: , time-n ' 2»; rtf, index] Value1(p) Value(index ,time-n '2); Stock1(p) 8tockO*exp « i (h, time )+n) * delta); p = p+!; end end end Value!; Stock!; function [V,Vh] opthedge(Valuel ,Stockl ,Stockhtime) %With this function, we can find the optimal value (V*) and the optimal %hedge (h*). fl [1; 0]; b=cat (2, - Value 1 ); colI =cat(2,-ones(1 ,length(Valuel »); co12 = cat(2,-(Stockl-Stockhtime»; A=cat(2,coll' ,co12 '); Ib = [-10'4;-10'4]; ub =[10'4;10'4]; [x,fval] = linprog(fl ,A,b,[] ,[] ,lb ,ub) Vh = x(2); V = x(I); Optimization without Transaction costs %In this code, we find the minimum upper bound with proportional %transaction cost.
~Ve

set the program for 8_0=1 and K=1 annual volatility =0.2 for 2-month %observation and alpha =0.001.

<.Voo/d7o% I n put s N=100; 0.2; volannual T = 2/12; remain vol = T* (volann ual '2); delta = sqrt (remainvol/N) j ddelta = 3 1, Strike

o/onumber of setps in the tree %annual volatility %(number of month)/12 %remainding <7cN'*\ delta %1/ delta % Strike Price

93

APPENDIX E. MATLAB CODE

i = matrixl (N); % is a function C = length (i (: ,1»; % length of i in maturity Value (100)*ones(N+1,N+l); Stock (-100)*ones (N+l,N+l); %matrix of number of shares hstar zeros (N,N); xi = zeros (N+1,N+1); alpha =0.001 %transaction cost rate Payoff at T time = 1; StockO 1; Stock(: ,time) = StockO*exp(i(: ,time)*delta)j for A= l:C Value(A,time) = max(Stock(A,time)-Strike ,0); end ~oo/oDestination nodes for time 2:N+l Stock (1 :C-(time -1), time) = StockO*exp (i (1 :C-(time -1), time)* delta) j nl =fix(sqrt(min«ddelta)A2,time-1»); %condintion n<=min(ddelta ,N-j) for h=l:C-(time-l) [Value1 , Stockl , xiI dest poi nt trans (nl , time, h, StockO , Value, xi , del ta , i ) j ~cFind optimal value and share [V, Vh] = opthedgetrans (Value1 ,Stock1 , xiI ,alpha I Stock (h I time»; %function hstar (h, time-l)=Vh; %optimal hedge Value (h, time)=Vj %optimal value clear Value1 Stock 1 xii V Vh xi(h,time) = hstar(h,time-1); % make it as a number of shares for future end end VIO = Value(1 ,time); %the minimum upper bound
~d70

function [Valuel I Stock 1 ,xil]= des t poin t trans (n1 I time, h, StockO , Value, xi , delta, i ) o/oFrom given node( i ,j ), the children nodes are (i+n, j+n' 2), also in this case we need %numbers of shares for the children nodes as well. p = 1; for n=-n1: nl if n-=O if time-1>=n'2

94

APPENDIX E. MATLAB CODE
[ tf I index] ismember (i (h I time )+n, i (: , time-n ~ 2) ); Valuel(p) = Value(indexltime-n~2); %j+n~2 Stockl(p) = StockO*exp{(i(h,time)+n)*delta); %i+n xi1{p) = xi(index,time-nA2)j %number of shares at p := p+I; end end end function [ V, Vh] = opthedgetrans (Valuel ,Stock! , xii I alpha I Stockhtime) %This function find the optimal value with transaction cost Kl = length(ValueI); f1 = cat(2,1 ,0,zeros(I,KI»; b=cat (2,- Valuel , xil,- xiI); o/otnake A and b, Al = cat(2,-ones(Kl,1),( (Stockl-Stockhtime»',alpha.*diag(Stockl»i A2 ca t (2, zeros (Kl, 1) ,ones (Kl, I) , - eye (Kl» j A3 cat (2 , zeros (Kl, 1) , - ones (Kl, 1) , - eye (Kl»; A = cat (1 , Al , A2 ,A3 ) ; %upper and lower bounded Ib cat (2 , - 10 ~ 4 , - 10 · 4 , z e r 0 s (1 , Kl ) ) ; ub = cat(2,10"4,10"4,IO"4*ones(I,Kl»i [x,fval] = linprog(fl,A,b,[] ,[] ,lb,ub); Vh = x(2); %optimal hediging V = fval; %optimal value Convex Hull Optimization-Without Transaction Costs %This code represent the same optimization hut with Convex Hull method <JWJYWo Inputs N=100j %number of setps in the tree %annual volatility volannual 0.2; %(numher of month)/12 T = 2/12; remainvol = T*(volannual ·2); %remainding volatility v_O delta = sqrt (remainvol/N); <JiN'*\ delta = v_O %d/ delta ddelta = 3 % Strike Price Strike = 1;
i = matrixI (N); C = length(i (: ,1»;

(i+n,j+n~2)

% is a function
% length of i in maturity
95

APPENDIX E. 1\:1ATLAB CODE

Value = (-lOO)*ones(N+l,N+I)j Stock (-100)*ones (N+l ,N+l); hstar = zeros (N,N) j %matrix of number of shares time = 1 j StockO = 1 j Stock (: , time) = StockO *exp (i (: , time) * delta); %l7IDWo Payoff at T for A=I:C Value(A,time) = max(Stock(A,time)-Strike ,0); end for time = 2:N+I Stock(I:C-(time I),time) = StockO*exp(i(I:C-(time-l),time)*delta); nl fix ( sqrt (min ddelta) 2, time -1»); %condin tion n<=min ( ddelta ,N-j ) for h=I:C-(time-l} [Valuel , Stockl] dest point (nl , time, h, StockO , Value, delta, i ); %fu net ion o/oConvex Hull Method i f fi n d ( Val u e 1 %If all points are in the same line

«

A

X =[Stoekl (:) Valuel (:)];

dt DelaunayTri (X); seopedWarnOff = warning (' off', '~fA1LAB: TriRep : EmptyTri2DWarnld '); restoreWarnOff onCleanup (@() warning (scopedWarnOff»; tri = dt. Triangulation; if isempty(tri) maxxl Stock! (1); maxx2 Stockl (2); maxyl = Value 1 (1); maxy2 Valuel(2); else %otherwise, find the hull line k = convhull (Stock! , Value 1 ) j maxa = find (k==max(k»; mina fi n d (k min ( k ) ) ; k (1 :maxa-l) = []; localx = Stockl(k(:»; localy = Valuel(k(:»; v = [localy(I)-loealy(length(k»; -(localx(I)-localx(length(k»)]i r = [localx (length (k))-loealx; loealy (length (k»-localy 1; d []; for ii =l:length (k) d ( i i) = abs ( dot {v, r (: , i i ») / norm (v) ; end

96

APPENDIX E. MATLAB CODE
dsort = sort (d, 'descend'); if isempty(find(d)) maxy2 = loealy (1); maxyl loealy (length (k»; maxx2 = loe alx ( 1) i maxxl = loealx (length (k); else [sl,indexl] = ismember(dsort(l),d); maxx2 = loealx (indexl ); maxy2 = localy (indexl ); if length(find(dsort»==l if Stock (h, time)<=maxx2 maxxl = localx(length(k»; maxyl localy (length (k»; else maxxl localx (length ( 1 »; maxyl = localy (length (1»; end else [82 , index2] = i8member ( dsort (2) ,d); maxxl = localx (index2) i maxyl = localy (index2) i end end end

%V* and h*
hstar(h,time) = (maxyl-maxy2)/(maxxl-maxx2); % find h star Value (h, time) = hstar (h, time) * (Stock (h, time)-maxxl)+maxyl; else Value(h,time) end clear end end VlO=Value (l ,time); %the minimum upper bound Valuel Stockl
0;

97

Bibliography
[Avellaneda and Paras, 1995] Avellaneda, ~L and Paras, A. (1995). Dynamic hedging with transaction costs: From lattice models to nonlinear volatility and free boundary problem.". It is available at www.math.nyu.edu/facultyJavellane/gordo.ps. [Bellman, 1957] Bellman, R. (1957). Dynamic Programming. Princeton, NJ: Princeton University Press,. [Bensaid and Scheinkman, 1992] Bensaid, B., J. L. H. P. and Scheinkman, J. (1992). Derivative asset pricing with transaction costs. Mathematical Finance, 2(2):63-86. [Bertsekas, 1976] Bertsekas, D. P. (1976). Dynamic Programming and Stochastic Control. New York, NY: Academic Press,. [Black and Scholes, 1973] Black, F. and Scholes, 11. (1973). The pricing of options and corporate liabilities. Journal of Political Economy, 81(3):637-654. [Boyle and Lin, 1997] Boyle, P. and Lin, X. (1997). Optimal portfolio selection with transaction costs. North American Actuarial Journal, 1:27-39. [Britten and Neuberger, 1996] Britten, J. M. and Neuberger, A. (1996). Arbitrage pricing with incomplete markets. Applied Mathematical Finance, 3:347-363. [Britten and Neuberger, 1995] Britten, J. M. and Neuberger, A. (1998). Welcome to the real world. Risk, Black-Scholes-Merton Supplement" 11(9):11-13. [Cox and Rubinstein, 1979] Cox, J., R. S. and Rubinstein, M. (1979). Option pricing: A simplified approach. Journal of Financial Economics, 7:229-263. [DeMarzo and Mansour, 2005a] DeMarzo, P.M., K. I. and Mansour, Y. (2005a). On regret and options: A game theoretic approach for option pricing. It is available at levine.sscnet.ucla.eduJarchive/refs4782713000000000012.pdf. [DeMarzo and Mansour, 2005b] DeMarzo, P.M., K. I. and Mansour, Y. (2005b). Online trading algorithms and robust option pricing. In Proceedings of the thirty-eighth annual AMC Symposium on Theory of Computing, pages 477486, New York, NY, USA, 2006. ACM.

99

BIBLIOGRAPIIY

BIBLIOGRAPIIY

[Fedotov and Mikhailov, 2001J Fedotov, S. and Mikhailov, S. (2001). Option pricing for incomplete markets via stochastic optimization: Transaction costs, adaptive control, and forecast. Int. J. of Theoretical and Applied Finance, 4(1):179-195. [Geletu, 2007] Geletu, A. (2007). Solving optimization problems using the matlab optimization toolbox. A Tutorial, available at www.faculty.jacobs-university.de/poswald/teaching/Optim.Matlab.pdf. [Hao,2008] Hao, T. (2008). Option pricing and hedging bounds in incomplete markets. Journal of Derivatives f<1 Hedge Funds, 14(2):78-89. [Harris, 2003] Harris, L. (2003). Trading and exchanges: market microstruct'ure for practitioners the main book rebonato idea. Oxford University Press US. [Hull, 1997] Hull, J. (1997). Option, Futures and Other Derivatives. Prentic Hall. [King, 2002] King, L (2002). A simple introduction to dynamic programming in macroeconomic models. It is available at researchspace.auckland.ac.nz/bitstream/handle/2292/190/23O.pdf. [Leland, 1985] Leland, H. (1985). Option pricing and replication with tralL.'laction costs. Journal of Finance, 40: 1283-1301. [1Ierton, 1973] Merton, R. (1973). Theory of rational option pricing. Bell Journal of Economics and Management Science, 4(1):141-183. [Osborne, 1959] Osborne, M. F. M. (1959). Bro\\<"'nian motion in the stock market. Operations Research, 2:145-173. [Rebonato,2004] Rebonato, R. (2004). Volatility and Correlation: The Perfect Hedger and the Fox. Wiley Finance. [Roorda and Schumacher, 2005] Roorda, B., E. J. and Schumacher, J. (2005). Performance of hedging strategies in interval models. North American Actuarial Journal, 41:575-592. [Sargent, 1987] Sargent, T. J. (1987). Dynamic Macroeconomic Theory. Harvard University Press. [Stokey and Prescott, 1989] Stokey, N., L. R. and Prescott, E. (1989). Recursive Methods in Economic Dynamics. Cambridge, MA: Harvard University Press. [Tsitsiklis, 1997] Tsitsiklis, N., B. D. (1997). Introduction to Linear Optimization. Athena Scientific.

100

