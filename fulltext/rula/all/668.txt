,

..

'

CONTINUOUS TIME DOMAIN CHARACTERIZATION OF MIXING IN AGITATED PULP STOCK CHESTS

\ i'

BY
HARESHKUMARM. PATEL

B.E., D.D. INSTITUTE OF TECHNOLOGY, INDIA, 1992

A thesis Presented to Ryerson University

in partial fulfillment of the Requirement for the degree of

Master of Applied Science in the program of

Chemical Engineering

Toronto, Ontario, Canada, 2007
Â© Hareshkurnar M. Patel, 2007

RYERSON l~ UBR'AlW

~ROPERTV

Of --.. ".

Author's Declaration

I hereby declare that I am the sole author of this thesis.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

11

Borrower's Page
Ryerson University requires the signatures of all persons using or photocopying this thesis. Please sign below, and give address and date. Name Signature Address Date

III

Continuous Time Domain Characterization of Mixing in Agitated Pulp Stock Chests

Hareshkumar M. Patel
Master of Applied Science, 2007 Department of Chemical Engineering Ryerson University

ABSTRACT

Characterization of continuous-flow mixing processes, which is extensively employed by chemical process industry is challenging. Agitated pulp chests behave as low-pass filters to reduce high frequency variability in pulp properties ahead of many pulping and papermaking operation. The complex Rheology displayed by the pulp suspension can create considerable deviation from ideal mixing. The non-ideal flows identified were short-circuiting, recirculation and dead volume. Until now, the identification of non-ideal flows has been carried out in a discrete-time domain with some approximations. In the present study, we characterize the agitated pulp chests in the continuous time domain, which obviates the restrictions imposed by the discrete time approaches. For this purpose, a robust and efficient hybrid genetic algorithm is utilized along with a differentialalgebraic model of mixing. Both the algorithm and the model are successfully validated using experimental and simulated data. Superior characterizations at a higher sampling time are obtained compared to those yielded by the discrete-time domain methods. This outcome highlights the benefit of the continuous time domain approach developed in this work.

IV

Acknowledgements

First of all I wish to place on record my deep sense of gratitude to Dr. F. Ein-Mozaffari and Dr. Simant R. Upreti for providing valuable knowledge about their past research work and data required for completion of present research work. They motivated me to work hard and learn many new types of software. Also, they helped me in verifying all the model equations that are presented in this thesis, and spent their valuable time in developing program. Whenever I faced problem on my computer programming, they sat with me and cleared all my queries, which is really great. Under their excellent guidance, helpful feedback and continuous support throughout my research, this work was successfully completed.

I also would like to thank the Department of Chemical Engineering and the School of Graduate Studies of Ryerson University for their support in terms of department facilities and research stipend.

Also, I would like to thank our technologist Mr. Tondar Tajrobebkar for his timely help in allowing using Itanium Server and many computers in our lab to run my optimal control program. Finally, I would like to thank my friends and my family members for their great moral support and their timely help.

v

Dedication

I am dedicating this thesis to my guardian angel, who brought me into this world, taught me good culture, gave me good education i.e. my mother Hiraben.

I am dedicating this thesis to my father. .. he is not in this world to see my every success, but he lives in my memory. I believe his soul is watching me every movement, and he is with me on my every successes i.e. Mafatbhai.

I am dedicating this thesis to my wife Ramila and my kids Parav and Vatsal for their love and support.

VI

Table of Contents
1 Introduction 1.1 1.2 1.3 2 Thesis Overview Literature Survey Discrete time domain approach I 3
5

15 18 18 18

Continuous time domain approach 2.1 2.2 2.3 2.4 Research Objective Continuous time domain characterization of mixing Optimization problem Augmented function Gradient search Integration of equations

20
21 22 23 24 26

2.5
2.6 3

Solution approach 3.1 3.2 3.3 Mapping The Algorithm Inputs

27
30
32

4

Results and Discussion 4.1 Simulation Results in continuous time domain without nOIse. 4.2 Simulation Results in continuous time domain after addition of noise 4.2.1 4.3 4.4 Addition of noise

33

37 37 41 45 45

Model Validation Experimental Results 4.4.1 4.4.2 Experimental set-up and experimental details Simulation Results in continuous time domain for experimental data

48 , 54

4.5

Comparison of results of different methods

Vll

4.5.1 4.5.2 4.5.3 4.6
5

Simulated results comparison with and without noise Experimental results comparison

54 71

Calculation of mixed volume in the chest from parameters 92 93
95

Computer usage and time of computation

Conclusion Future Work References

6

96
97

Vlll

List of Tables
Table 3.1 Table 4.1

Limits of the optimization variables Inputs to the Algorithm. The real and estimated parameters for the simulated data sets 1-5 without noise in continuous time domain.

31

34

Table 4.2

The real and estimated parameters for the simulated data sets 1-5 with noise in continuous time domain. 38

Table 4.3

Characterized parameters of experimental validation data set 1 for model validation. 43

Table 4.4

Details of the different experimental parameters used for generating data sets 1 to 9. 48

Table 4.5

The estimated mixing parameters for the experimental data sets 1-6 in continuous time domain. 49

Table 4.6

The estimated mixing parameters for the experimental data sets 7-9.in continuous time domain. 49

Table 4.7

The real and estimated parameters for the simulated data sets 1-5 without noise in discrete time domain. 55

Table 4.8

The real and estimated parameters for the simulated data sets 1-5 with noise in discrete time domain. 55

Table 4.9

Comparison of the real and estimated parameters for the simulated data sets 1-5 without noise in continuous time domain and discrete time domain with smaller sampling time .( Values in brackets are of discrete time domain) 56

Table 4.10

Comparison of the real and estimated parameters for the simulated data sets 1-5 with noise in continuous time domain and discrete time domain with smaller sampling time. (Values in brackets are of discrete time domain) 57

Table 4.11

The estimated mixing parameters for the simulated data sets 1-3 using Kammer's method with noise.

62

Table 4.12

Comparison of the real and estimated parameters for
IX

the simulated data set-l with noise in continuous time domain, discrete time domain and Kammer's method with sampling time of 1 sec. Table 4.13 Comparison ofthe real and estimated parameters for the simulated data set-2 with noise in continuous time domain, Discrete time domain and Kammer's method with sampling time of 1 sec. Table 4.14 Comparison of the real and estimated parameters for the simulated data set-3 with noise in continuous time domain, Discrete time domain and Kammer's method with sampling time of 1 sec. Table 4.15 Comparison of the real and estimated parameters for the simulated data sets 1-5 without noise in continuous time domain and discrete time domain with higher sampling time of 50 sec.(values in brackets are of discrete time domain) Table 4.16 The estimated mixing parameters for the experimental data sets 1-6 in discrete time domain. Table 4.17 The estimated mixing parameters for the experimental data sets 7-9, in discrete time domain. Table 4.18 Comparison of the estimated mixing parameters for the experimental data sets 1-6 in continuous time domain and discrete time domain. (values in bracket are of discrete time domain) Table 4.19 Comparison of the estimated mixing parameters for the experimental data sets 7-9 in continuous time domain and discrete time domain. (values in bracket are of discrete time domain) Table 4.20 Comparison of Inns values of continuous time domain and discrete time domain for experimental data sets 1-9. 75 74 73 72 72 65 64 63 63

x

Table 4.21

Comparison of the estimated mixing parameters for the experimental data sets 1-6 in continuous time domain and discrete time domain at sampling time of 50 seconds. (Values in brackets are of discrete time domain) 79

Table 4.22

Comparison of the estimated mixing parameters for the experimental data sets 7-9 in continuous time domain and discrete time domain at sampling time of 50 seconds. (Values in brackets are of discrete time domain)

80

Table 4.23

The mixed and dead volumes fractions in the laboratory -scale pu1p chests based on their characterization parameters obtained using Data sets 1-9.

92

Table 4.24

Comparison of time taken for simulation by computer in continuous and discrete time domain using computer generated data sets.

93

Table 4.25

Comparison of time taken for simulation by computer in continuous and discrete time domain using experimental data sets.
94

Xl

Figure Captions
Figure 1.1
Response of the 119 m3 industrial stock chest to a step input in suspension mass concentration [data provided by Bill Bialkowski, EnTech Control Engineering Inc. (Ein-Mozaffari 2002, 2003)] 7

Figure. 1.2 Frequency response of the industrial chest to its ideal response.
(Ein-Mozaffari 2002, 2003)

8
9 16

Figure 1.3 Schematic of the mixing process. (Ein-Mozaffari 2002, 2003) Figure 1.4 Figure 4.1
Block diagram of the mixing process. (Ein-Mozaffari 2002, 2003) Comparison of the input (thin black line), estimated algorithm predicted output (Yalgorithrn - yellow line) with the model output (Yrnod - thick pink line) for each of the simulated data sets 1-5 without noise in continuous time domain. The outputs overlap in each case.

35-36

Figure 4.2 Comparison of the input (thin black line), estimated algorithm predicted
output (Yalgorithrn - yellow line) with the model output (Yrnod - thick pink line)for each of the simulated data sets 1-5 with noise in continuous time domain. The outputs overlap in each case. 39-40 42

Figure 4.3 Model validation procedure. (Ein-Mozaffari 2002, 2003) Figure 4.4 Results of the characterization of a laboratory-scale pulp chest using
its experimental validation data set 1, with input (thin black line), estimated algorithm predicted output (Yalgorithrn - thick pink line) and the experimental output (yexp - yellow line).

43

Figure 4.5 The validation of the mixing model in presence of a different
experimental input to the chest, where input (thin black line), estimated algorithm predicted output (Yalgorithrn - yellow line) and the experimental output.
(yexp -

thick pink line)

44 46 47

Figure 4.6 Schematic of experimental set-up, (Ein-Mozaffari 2002, 2003) Figure 4.7 Input-output configuration 1. (Ein-Mozaffari 2002, 2003) Figure 4.8 Comparison of the input (thin black line), estimated algorithm predicted
output (Yalgorithrn - yellow line) with the experimental output

xu

(yexp - thick pink line) for each of the experimental Data sets 1-3 in continuous time domain.

51

Figure 4.9 Comparison of the input (thin black line), estimated algorithm predicted
output (Yalgorithm - yellow line) with the experimental output (yexp - thick pink line) for each of the experimental Data sets 4-6 in continuous time domain. 52

Figure 4.10 Comparison of the input (thin black line), estimated algorithm predicted
output (Yalgorithm - yellow line) with the experimental output (Yexp-thick pink line)for each of the experimental Data sets 7-9 in continuous time domain.

53

Figure 4.11 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm - yellow line) with the model output (Ymod - thick pink line) for each of the simulated data sets 1-5 without noise in discrete time domain. The outputs overlap in each case.

58-59

Figure 4.12 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm - yellow line) with the model output (Ymod - thick pink line) for each of the simulated data sets 1-5 with noise in discrete time domain. The outputs overlap in each case.

60-61

Figure 4.13 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm - yellow line) with the model output (Ymod - thick pink line) for each of the simulated Data sets 1-5 without noise in continuous time domain - Sampling time 50 sec The outputs overlap in each case.

66-67

Figure 4.14 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm - yellow line) with the model output (Ymod - thick pink line) for each of the simulated Data sets 1-5 without noise in discrete time domain - Sampling time 50 sec The outputs overlap in each case. 68-69

Figure 4.15 Comparison of the input (thin black line), estimated algorithm predicted
output in continuous time domain (dark yellow line), estimated algorithm predicted output in discrete time domain( light yellow line), with the model output( hairline pink line), for the simulated Data sets 1-3
Xlll

without noise in continuous time domain - Sampling time 50 sec. The continuous time domain output overlaps model output whereas discrete time domain does not overlap. 70-71

Figure 4.16 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the experimental output (ycxp - thick pink line) 76

for each of the experimental Data sets 1-3 in discrete time domain.

Figure 4.17 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the experimental output (ycxp - thick pink line) 77

for each of the experimental Data sets 4-6 in discrete time domain.

Figure 4.18 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the experimental output (ycxp - thick pink line) 78

for each of the experimental Data sets 7-9 in discrete time domain.

Figure 4.19 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the experimental output (ycxp - thick pink line)

for each of the experimental Data sets 1-3 in continuous time domain for sampling time of 50 seconds. Figure 4.20 Comparison of the input (thin black line), estimated algorithm predicted output (Yalgorithm - yellow line) with the experimental output (yexp - thick pink line) for each of the experimental Data sets 4-6 in continuous time domain for sampling time of 50 seconds. Figure 4.21 Comparison of the input (thin black line), estimated algorithm predicted output (Yalgorithm - yellow line) with the experimental output (yexp - thick pink line) for each of the experimental Data sets 7-9 in continuous time domain for sampling time of 50 seconds. Figure 4.22 Comparison of the input (thin black line), estimated algorithm predicted output (Yalgorithm - yellow line) with the experimental output (yexp - thick pink line) for each of the experimental Data sets 1-3 in discrete time domain for sampling time of 50 seconds. Figure 4.23 Comparison of the input (thin black line), estimated algorithm predicted
XIV

81

82

83

84

output (Yalgorithm - yellow line) with the experimental output
(yexp -

thick pink line) for each of the experimental Data sets 4-6 85

in discrete time domain for sampling time of 50 seconds.
Figure 4.24

Comparison of the input (thin black line), estimated algorithm predicted output (Yalgorithm - yellow line) with the experimental output (yexp - thick pink line) for each of the experimental Data sets 7-9 in discrete time domain for sampling time of 50 seconds. 86

Figure 4.25 Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the experimental output( pink line), for the experimental Data sets 1-2 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output. 87

Figure 4.26 Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the experimental output (pink line), for the experimental Data sets 3-4 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output. 88

Figure 4.27 Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the experimental output (pink line), for the experimental Data sets 5-6 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output. 89

Figure 4.28 Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the experimental output (pink line), for the experimental Data sets 7-8 in continuous time domain - Sampling time 50 sec. The
xv

continuous time domain output is close to experimental output.

90

Figure 4.29 Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the experimental output (pink line), for the experimental Data set 9 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output. 91

XVI

NOMENCLATURE
a\

model parameter for the short-circuiting zone model parameter for the recirculation zone positive size-variation factor for DiS positive fraction to reduce r in Equation the i-th discrete-time model parameter domain of the ith-parameter minimum value of any Di fraction of short-circuiting

a2
CD

Cr
di

Di

Dmin

f
G

F,F2 volumetric flow rates

transfer function objective function estimated It interior penalty function vector of partial derivatives of h with respect to x root mean square fractional error given by Equation 4.1 objective function given by Equation 2.14 scaling index for J number of bits for the i-th parameter number of crossover sites for each optimization parameter number of genetic generations size of population of x number of experimental samples number of optimization parameters probability of crossover probability of mutation pulp flow rate through the chest in Itrs/sec penalty variable fraction of recirculation
XVll

1\
A

1\ 12 12'

Inns
J

N
Nbit,i

Ncr
Ngen
NPOp

Ns
Nx

Pc

pm
Q
r

R

pseudo-random number

s
T

Laplace transform variable time, s sample time, s time delay for the short-circuiting zone, s time delay for the recirculation zone, s

u

input signal volume in the short-circuiting zone volume in the recirculation zone

Vf.m.
Xi

volume of the chest in liters The value of any i-th parameter vector of optimization parameters estimated X vector of mean values of X vector of deviations of X from X AX in binary coding

x

Y

output concentration intermediate concentrations

Y\, Y2
Yexp

intermediate concentrations experimental Y
Ymod

Ymod,i
Yexp,k
Ymod

at i-th sampling instant

Y exp at the k-th sampling instant
model-predicted y

Y mod,k Y mod at the k-th sampling instant
Yalgorithm algorithm-predicted Y

XVlll

Greek letters

a

positive fraction time constant of the short-circuiting zone, s time constant of the recirculation zone, s a small positive number, 10-6

"I
"2

&

Abbreviations

GA HPCVL
CFD

Genetic Algorithm High Performance Computing Virtual Laboratory Computational fluid dynamics

XIX

1

INTRODUCTION
wet~nd

Mixing plays an important role in stock blending, consistency control, bleaching, chemical generation and de-inking in pulp and paper industry. In agitated pulp chests, mixing is usually carried out to blend different pulp streams, often with

chemicals, dyes, fillers, or additives as well as to provide a uniform feed of process streams. The chests in pulping processes are used to ensure uniform flow upstream of many operations including chemical addition in bleaching stages, washers, screens and cleaners. Furthermore, pulp chests act as low-pass filters attenuating high-frequency variability of pulp concentration, and thus compliment the control loops of paper machine, which only attenuate slow process disturbances (Bialkowski, 1990).

Ideal mixing is often assumed during the design of pulp chests. The mixing dynamics is represented by a first order transfer function and the chest volume is based on the total residence time required (Brown, 1968; Reynolds et aI., 1964; Walker and Cholette, 1958). However, the rheology of a pulp suspension is complex, and exhibits significant yield stress (Bennington et al., 1990; Gullichsen and Harkonen. 1981; Wikstrom and Rasmussen, 1998). These phenomena create significant departures from ideal mixing as shown by dynamic tests made on both industrial and scale-model chests (Ein-Mozaffari et aI., 2003; 2004a,b; 2005; Ford et aI., 2006; Saeed et aI., 2007).

The identified non-ideal flows during mixing are recirculation (where a portion of the stock recirculates within the mixing zone), short-circuiting (where a portion of the feed directly flows to the exit without entering the mixing zone), and dead zones (where pulp is stagnant or flows significantly slower than the bulk of the suspension). Non-ideal flows mitigate the extent of upset attenuation produced by the chest (Ein-Mozaffari et aI., 2003; 2004b; 2005). Typical disturbances occur at frequencies higher than the cut-off frequencies of paper machine control loops. Consequently, the disturbances are not attenuated by control loops, thereby affecting paper quality and machine runnability.

1

These effects can be dealt by examining the dynamic behavior of pulp mixing under practical conditions, and improving the process design accordingly. As a result, the identification of mixing has received extensive attention in the past. Although important studies in the continuous-time domain have been carried out (Johansson, 1994; Johansson et at., 1999; Soderstrom et aI., 1997; Whitfield and Messali, 1987), the integer time delays in the pulp chest model make mixing identification very challenging. The schemes for the identification of systems with time delays (Sung and Lee, 2001; Wang et at., 2001) are not generic enough to handle dynamic model of pulp chests. A recently proposed linear filter method (Salim et aI., 2006) addresses the simultaneous estimation model parameters and the delay for such problems.

Kammer et ai. (2005) developed a numerical method to determine mixing parameters based on the discrete-time model developed by Ein-Mozaffari et ai. (2003). Authors used two distinct stages for the identification: an efficient but less accurate least squares minimization for the optimal delays followed by an accurate gradient search for all parameters. Although this mechanism is not guaranteed to converge to the global minimum, a Monte Carlo simulation showed very encouraging results. Later on, Upreti and Ein-Mozaffari (2006) determined the mixing parameters based on the same model using a hybrid multi-parameter optimization algorithm, which uniquely integrates genetic algorithms (Holland, 1975) with gradient search. The algorithm identified the optimization parameters with high accuracies that are essential for adequate characterization of agitated pulp chests. Note that small changes in the characterization parameters significantly affect the degree of disturbance attenuation, especially at frequencies higher than the cutoff frequencies of paper machine control loops (EinMozaffari, 2002).

The objective of the present study is to carry out mixing identification in the continuous time domain. It is desired to determine the mixing parameters of agitated pulp chests based on the differential-algebraic model of the mixing process, and to avoid the model approximations that are typical of discrete-time system identification.

2

In prevIOUS studies (Kammer et aI., 2005; Upreti and Ein-Mozaffari, 2006), the continuous dynamic model of the mixing pulp chest was discretized using a zero order hold (ZOH) assuming that ZOH[ G2 ] is approximately equal to G2 (z) (refer l-RG2 l-RG2 (z)

Figure 1). This approximation is only valid for small sampling time ts and small R. The resulting discrete transfer function was used to obtain the dynamic model parameters. However, in this study, directly used the continuous dynamic model for the estimation of the model parameters without applying the above approximation.

1.1

THESIS OVERVIEW
and solution implemented, along with detailed literature survey of past research showing importance of the study of characterization parameters like shortcircuiting, recirculation and dead zones in mixing of agitated pulp chests and different methods of optimization employed to find optimized parameters. This chapter also gives the overview of the mathematical model of previous research based on discretization technique using zero order hold.

CHAPTER 1 This chapter gives introductory information about the problem in industry

CHAPTER 2 explains the details of the research objective and problem formulation. Also gives details of objective function of the problem along with genetic operations. Details are given about the model developed in this study in continuous time domain based on carrying out mass balance in short circuiting and mixing zones.

Procedure for solution is provided with development of interior penalty function for constraints are described.

At last derivation of partial derivatives required for gradient search in continuous time domain using model and interior penalty function and details of integration

3

of derivatives using Runge-Kutta Fehlberg method with Cash-Karp parameters, adaptive step size control and cubic spline are explained.

CHAPTER 3 explains the details of the algorithm usmg genetic operations like selection, crossover and mutation for optimal vector determination in conjunction with objective functions. Also contains procedure of mapping for finding out optimal vector. The values of various parameters used in model, genetic operations and gradient search are given.

CHAPTER 4 summarizes the identification results of five simulated data sets without noise, with addition of noise and 9 experimental data sets in continuous time domain. It discusses the details of the model validation procedure, validation results and comparison of results with results reported in literature. Also gives the comparison of the results of the same simulated data sets without and with noise and experimental data sets, simulated using discrete time domain algorithm and three data sets simulated using Kammer's method. Details of experimental setup, experimental data sets and addition of noise are provided in this chapter. The mixed and unmixed volume of chest and the computation time for both algorithms with type of computer used is given in this chapter. Comparison of the results of continuous and discrete time domain for higher sampling time of 50 seconds is also part of this chapter.

CHAPTER 5 Concludes.

CHAPTER 6 Bring up the future work that can be done using developed algorithm.

4

1.2

LITERATURE SURVEY

Mixing and agitation are important in all chemical process industries and the pulp and paper industry is no exception. Effective mixing is vital to successful process results throughout the pulp and paper manufacturing process, including stock blending, consistency control, bleaching, chemical generation and deinking, among others. Agitated pulp stock chests act as buffers between processes, and reduce variability in fiber mass concentration, freeness and other quality factors. From the standpoint of variability reduction in paper quality, stock chests provide a means for reducing highfrequency variability of pulp to paper machine. In essence, those chests behave as lowpass filters to complement the action of control loops, which can only control lowfrequency variability below the loop cut-off frequency (Bialkowski, 1992).
It is important to ensure that such chests are properly designed in order to achieve the

desired degree of upset attenuation that paper machine control loop can handle. Although mixing has been extensively studied for many systems, information available on mixing pulp suspension is limited. This is due, in part, to the complex rheology of pulp fiber suspensions. Pulp suspensions form a continuous fiber network that possesses structure and strength resulting from interactions between neighboring fibers. As the mass concentration of the suspension increases, the number of fiber/fiber interactions increases, and so does the network strength (Bennington, 1996). As a result of this rheological behavior, fiber suspensions are extremely difficult to agitate, and non-ideal phenomena exist in stock chests.

Brown (1968) studied the dynamic behavior of a paper mill stock chest, assuming ideal mixing, and described the dynamic response with a first order transfer function. Walker and Cholette (1958) calculated the damping factors (the ratio of the amplitudes of the output to the input waves) for an ideal stock chest with a single feed for various disturbances including continuous sine, square, and single square wave inputs. They made no comparison between numerical results and experimental data. Reynolds et al.

5

(1964) studied the degree of upset attenuation for a stock chest. They suggested that additional smoothing of pulp concentration could be achieved by either externally recirculating part of output or by splitting the feed to the top and bottom of the chest. However, the effects of non-ideal flow on the dynamic response of stock chests were not considered. Since ignoring non-ideal flows can lead to errors in system design (Levenspiel, 1998) it is necessary to study the dynamic behavior of stock mixing under realistic (less-than-ideal) mixing conditions.

Ein-Mozaffari et al. (2003, 2004b, 2005) found that the identified non-ideal flows during mixing are recirculation (where a portion of the stock recirculates within the mixing zone), short-drcuiting (where a portion of the feed directly flows to the exit without entering the mixing zone), and dead zones (where pulp is stagnant or flows significantly slower than the bulk of the suspension). Non-ideal flows mitigate the extent of upset attenuation produced by the chest. These types of non-ideal flows should be avoided since they always reduce the performance of the unit.

An example of step response for an industrial stock chest is presented in Figure 1.1, the top curve is the input signal and the bottom curve is the output of pulp concentration. The effect of channeling starts being seen at around t
=

300 s, then the first cycle of proper

mixing occurs approximately between 450 and 700 s. This cycle is followed by subsequent ones that are generated by the recirculation of the pulp suspension inside the chest. Ein- Mozaffari et al. (2002, 2003) calculated the frequency responses for this industrial stock chest, and a perfectly mixed chest having the same volume and flow rate (Figure 1.2).

6

4.6~--~--~--~--~--~--~----~--~--~--~
I I I I I I I

- Steady State in 1400 sec, Appr. Time Constant-350 sec=5.8 min
Blend Chest Mbdn Test - Residence Tlme=14 mlnutesmln

Â· Â·

4.2

4.4 ------ ~ -- Bld)d_ Cbe~tlnJeti(HW) ~9nst$rnCJ -1- -----1- -----1- ----i -BJend C~est Ot#let Cqnsist~cy ' i : ,

4.0 ------

I I

I

I I

I I

I I - . -,~

I

------r------r------T------T------T------~

3.8 ------ ------ r----

, , ,
I

--- T ------T- ----- T -- ----y------y------y --- -- I I I I

I I I

I I I
I

I I I
I

I I

I

3.6

----r------T ------T------T------T ------T------T-----,
I I I I I I I I

, ,

, ,
I

I I I

, , , , , , 3.4~--~--~--~--~--~--~--~'--~ ' --~--~

o

200 400 600 800 1000 1200 1400 1600 1800 200
Time (sec)

Figure. 1.1

Response of the 119 m3 industrial stock chest to a step input in suspension

mass concentration [(data provided by Bialkowski, EnTech Control Engineering Inc.; Ein- Mozaffari et al., (2002,2003)]

7

1.0 0.8

-----

,

" ,,
\
\

- - IdealSystem - - - -. Real System
\
\

.,
0

\ \

t;.
~

0.6

\

\ \ \ \ \
\

Q)

'"0

lO.4
:t::

,
\ \
\ \ \

'/

I

\
\

\,

-

\
\
\

0.2 0.0
10~

\ \

, .... ,
\ I

.
/

\
\ \ \

-,
\

//

"

10-3

10.2
Frequency (radls)

10.1

10Â°

Figure. 1.2 Frequency response of the industrial chest to its ideal response, (EinMozaffari et aI., 2002, 2003) As seen the degree of upset attenuation for the industrial stock chest is considerably worse than that of the equivalent perfectly mixed chest, especially for frequencies from 0.01 to 0.1 rad/s. These frequencies are higher than the cut-Qff frequencies of paper machine control loops, which are from 0.002 to 0.005 rad/s. Therefore, disturbances at these frequencies would not be attenuated and would affect paper quality and machine run- ability .

Since ignoring non- ideal flows can lead to errors in system design (Levenspiel 1998), it is necessary to investigate the dynamic behavior of stock mixing under realistic (less than- ideal) mixing conditions. As a result, the identification of mixing has received extensive attention in the past. Although important studies in the continuous- time domain have been carried out (Johansson, 1994; Johansson et al., 1999; Soderstrom et aI. , 1997;

8

Whitfield and Messali, 1987), the integer time delays in the pulp chest model made mixing identification very challenging. The schemes for the identification of systems with time delays were not generic enough to handle the dynamic model of pulp chests (Sung and Lee, 2001; Wang et aI., 2001). A recently proposed linear filter method addresses the simultaneous estimation model parameters and the delay for such problems (Salim et aI., 2006). To study the mixing process, Ein-Mozaffari et ai. (2002) designed and built a laboratory scale model of an industrial chest, implemented at the Pulp and Paper Centre, University of British Columbia. The main purpose of the authors' project was to analyze the effect of several different variables in the dynamic behavior of the chest. Some examples of variables being studied were: chest dimensions, propeller speed and diameter, pulp feed and exit locations, fiber mass concentration and pulp flow rate through the chest.

Ein-Mozaffari et al. (2003) developed the simplest dynamic model that represents the observed behavior of the industrial plant as seen in Fig. 1.3.

jF,u

Short-drcuiting zone of volume ~

jF'YI

Input
F,u
(1- f)F,
U

Output
F2, Yj

Mixing zone of volume V7
RF2, Y2

F2'Y2

(1- R)F2' Y2

F,y

Figure 1.3

Schematic of the mixing process, (Ein-Mozaffari et aI., 2002, 2003)
Ii

9

l
r
"

~

'I

Â·;Â·I , Â·.. .

,"1

jl

.

The input and output signals (u and y, respectively) are either the pulp fiber mass concentration, in industrial settings, or the suspension conductivity, in the scale model. The parameter

f

represents the channeling fraction of pulp fiber or suspension

conductivity, while R represents the recirculation fraction of pulp fiber or suspension conductivity. Since all parameters in the model have physical meanings, their values must be determined on the basis of experimental data.

The existing chest design criteria do not account for non-ideal flow in the chests. EinMozaffari et al. (2003) measured the power input needed to create complete motion in a chest versus suspension mass concentration, impeller diameter and chest dimensions. Author's found that evaluation of surface motion alone may not be sufficient to eliminate stagnant zones in remote regions of the chest; the power calculated from existing design criteria did not completely eliminate stagnant regions below the chest surface. Therefore, a chest that shows very good surface motion may produce a process result that is not ideal. Then they found that at suspension mass concentrations >2%, the mixing response of solid and liquid phases is very similar. Therefore, a liquid phase tracer was used to study the mixing time and dynamic response of stock chests. Finally, they found that mixing time for the laboratory stock chest was both a function of impeller momentum flux and suspension mass concentration. Ein-Mozaffari et al. (2004) found that stock chests designed for complete surface motion can still have dead zones. To eliminate these poorly mixed regions the installed power
t

must be at least equal to the power required for the onset of complete motion, which was greater than that specified by current design practices. They found that if the stock chest must be ideally mixed to act as a low-pass filter and attenuate high frequency variations in stock properties (fiber mass concentration etc.), the required installed power must be considerably greater than power recommended by Yackel (1990) or required for complete motion in the vessel.

Ein-Mozaffari et al. (2004) carried out dynamic tests on a scale-model chest and industrial chests. Results confirmed the existence and extent of non-ideal flows within

10

the chest. These included channeling, recirculation and stagnant zones. Since these flows decrease the extent of disturbance attenuation of the chest, they can reduce paper quality and machine run-ability. The tests made on the scale-model chest showed that pulp feed and exit locations, the ratio of the impeller flow rate to pulp flow rate through the chest, and the suspension mass concentration have a significant effect on channeling and the effective mixing volume. The extent of non-idealities progressively decreased as the impeller speed was increased. At suspension concentrations above 3% the system was prone to a significant extent of channeling and stagnant volume. The degree of upset attenuation was a function of the impeller momentum flux, rather than the power input. Both the industrial and scale-model chest tests demonstrated that power requirements calculated based on achieving either smooth surface motion or complete stock motion did not eliminate the stagnation zones and channeling completely. Additional power was required to have an ideal dynamic response from the chest. Ein-Mozaffari et al. (2005) quantified the effect of fiber type and fiber mass concentration on mixing dynamics in a rectangular pulp stock chest as a function of the suspension yield stress. It was found that as suspension yield stress decreased (by reducing the fiber mass concentration and/or the fiber length) the extent of upset attenuation significantly improved and the degree of short-circuiting and dead volume was reduced. However, dynamic tests showed that while the yield stress plays a significant role determining mixing quality, the dynamic behavior was not fully described by the suspension yield stress alone. Measurements showed that the power required to achieve an ideal dynamic response (the complete elimination of non-ideal flow) for softwood pulp suspensions was two times greater than power required for hardwood pulp suspensions at the same operating conditions. One existing design method (Yackel 1990) predicts only a 15% increase in the power required. Test results of Ein-Mozaffari et al. (2005), showed that to avoid short-circuiting under flow configurations prone to high degree of short-circuiting the pulp outlet should be located within the cavern created by the impeller. By applying these criteria to existing mixer configurations is possible to improve the dynamic response of pulp mixing chests.

11

Ein-Mozaffari et al. (2007) found that the pulp feed and exit locations have a significant effect on the degree of upset attenuation, although the exit must be located in a zone of sufficient agitation to prevent dewatering of pulp mixed slurry. For suspension mass concentrations greater than 3%, the system was prone to a high percentage of channeling and a low degree of attenuation. Under these circumstances, the degree of attenuation could be improved by either reducing the pulp flow rate through the chest or increasing the impeller speed. In industrial situations, a decrease in pulp flow rate is not possible and changes in impeller speed must be considered. They found that chests designed using the criterion of the onset of complete motion does not necessarily lead to a fully mixed system, especially at fiber mass concentration greater than 3%.

Kammer et al. (2005) developed a tailor-made mechanism for the identification of discrete-time mixing parameters based on the continuous-time model developed by EinMozaffari et al. (2003). Authors used two distinct stages for the identification: an efficient but less accurate least squares minimization for the optimal delays followed by sequential quadratic programming for all parameters, models. The structure of the model used in the paper represents non- ideal flows in industrial stock chests, but the techniques introduced can potentially be adapted to the identification of other processes with internal recirculation like physiological systems, neuromuscular model and recycle internal variables in the loop.

The identification results obtained through simulation were considered very satisfactory, given that the "true" parameters were available for comparison. The analysis of experimental data led to simplifications in the original model, and consequently in the identification mechanism. Ultimately, the study provided means for better design of agitated stock chests, as well as to the design of optimized control techniques for this type of process. Ein-Mozaffari et al. (2007) studied the flow velocity in pulp suspension using Ultrasonic Doppler velocimetry used for opaque fluids. Using velocity profiles across the impeller,

12

the effect of fiber type and fiber mass concentration on the impeller pumping rate and flow number was quantified as a function of the suspension yield stress. As suspension yield stress was increased, the impeller flow number was decreased. Velocity measurements showed the existence of dead zones in the comers of the chest. The size of the dead zones increased with increasing suspension yield stress for a fixed impeller speed.

Upreti (2004) presented a new optimal control technique to provide robust, good quality solutions independent of starting points, and auxiliary conditions. The technique is based on Genetic Algorithm (Holland, 1975), which simulate the evolution of living beings. These algorithms generate robust optimal solutions (Goldberg, 1989a) by stochastically emphasizing (selecting) optimally better variable-values, recombining (crossing over) them, and changing them slightly (mutating) in a randomly generated collection (population). Previous applications of Genetic Algorithms on optimal control problems include the works of Michalewicz, Janikow, and Krawczyk (1992), Seywald, Kumar, and Deshpande (1995), and Lee et al. (1997). In particular, Lee et al. (1997) applied Genetic Algorithm for the optimal control of continuous polymerization reactors. They obtained better results in comparison to iterative dynamic programming as well as sequential quadratic programming.

Upreti (2004) presented optimal control technique applies genetic operations on a population of random, binary---coded deviation vectors. An element of a deviation vector carries the value of deviation of control from its "mean" value. A control vector is mapped to each deviation vector, and a vector of landomly initialized mean control values. Each element of these vectors corresponds to a control stage. After a few repetitions of genetic operations, a newly generated optimal control vector is used to update the vector of mean control values, and the size of control domain was varied within its limits. The genetic operations are applied again. For the size-variation of control domain, its successive contraction was alternated with successive expansion. The mapping of control vectors was kept logarithmic in the beginning, but later on alternated with a linear one.

13

Upreti and Ein-Mozaffari (2006) determined the optimal parameters of the pulp chest model using a hybrid multi-parameter optimization algorithm that was developed by uniquely integrating genetic algorithms (Holland, 1975) with gradient search. The optimization algorithm carried out gradient search as well as the genetic operations of selection, crossover and mutation on binary--coded optimization parameters within their size varying domains using alternating linear and logarithmic mappings. The interaction between genetic operations and gradient search was unique, and led to efficient search and refmement of optimization parameters. To test and use the algorithm, simulated as well as experimental plant data were employed in conjunction with the dynamic model, which is non-linear as well as discontinuous. The hybrid algorithm identified the optimization parameters with high accuracies, and can be used to identify non-ideal flows in reactors, packed columns, and heat exchangers; and other processes with internal recirculation such as the physiological system of neuromuscular reflex (Khoo, 2000). The characterization parameters for the non-ideal flow in agitated pulp chests were determined. The algorithm was a multi-parameter optimization algorithm, which uniquely fuses the robustness of genetic operations with the refinement of gradient search. The algorithm was validated by applying it to three different sets of simulated data for agitated pulp chests with a priori knowledge of characterization parameters. The values of these parameters matched very well with those optimally determined by the algorithm. In presence of noise in the simulated data, the average and maximum values of absolute fractional deviation in optimal parameters were respectively 0.0084 and 3.3%.

The outcome was significant given the random initiation of the algorithm in the sparse domains of the parameters non-linearly and discontinuously related to the objective function. The sensitivity analysis with respect to the genetic parameters indicated slightly better performance with higher population size and mutation probability. Comparisons with the optimal results obtained without using gradient search affirmed its benefit of inclusion within the developed hybrid algorithm. After successful validation, the algorithm was applied to three different sets of experimental plant data on agitated pulp chests, and the optimal values of these parameters were determined. Not withstanding the noise in the experimental data, which was not considered in the mathematical model used

14

for optimization, the experimental and optimal outputs agreed well. The corresponding root-mean-squared fractional errors from experimental output data were of the order of

10-2 Â· The results indicated that the developed hybrid algorithm could be very promising
for more accurate solutions of non-linear and discontinuous process optimization problems. Furthermore, Barnitharan (2004) used successfully genetic algorithm-based optimal control method for different polymerization processes for different objectives. Hanna (2006) used hybrid genetic algorithm, which provided a global solution that had better minimum variance characteristics in controllers than the enumerative search technique and Lambda tuning. Salwan et. al. (2007) developed a computer fluid dynamics (CFD) model for agitated pulp chests using multiple reference frame. Rheology of pulp suspension was approximated using Herschel -Bulkley model

1.3 DISCRETE TIME DOMAIN APPROACH
Dynamic tests carried out on industrial and scale-model chests have shown that nonideal flows including short-circuiting, recirculation, and dead zones are common; and significantly reduce the ability of the chest to attenuate fluctuations (Ein-Mozaffari, 2002; Ein-Mozaffari et aI., 2004a, 2005). The model developed by Ein-Mozaffari et al. (2003b) describes the dynamic non- ideal flow behavior observed in the industrial and scale-model agitated pulp chests allowing for two parallel suspension flow paths through the mixing chest: (i) a mixing zone consisting of a first order transfer function with delay and feedback for recirculation, and (ii) a short-circuiting zone consisting of a first order transfer function plus delay as shown in Figure 1.4.

15

r

1-------+1

'--_......

G1 = __ l+tl s

e-1)s

u

+
e-T2S

y

1----IIIG2

=-1+t2 s

Figure 1.4

Block diagram of the mixing process, (Ein-Mozaffari 2002, 2003)

The combined transfer function for the chest in the continuous-time domain is as follows:

(1.1)

In Equation (1.1), Tl and T2 are the time delays, and

1"1

and

1"2

are the time constants for

the short-circuiting and mixing zones, respectively. Further details of discrete model are provided in Ein-Mozaffari et al. (2002), and Ein-Mozaffari et aI. (2003b, 2004b). Since the experimental data to be simulated were measured at fixed and small time intervals, the zerQ--{)rder hold was applied to the output signal to transform the above transfer function into the discrete-time equivalent. (Kammer et aI., 2005):

Kammer et al. (2005) developed a tailor-made mechanism for the identification of continuous-time mixing parameters based on the discrete-time model. In this method, the authors used two distinct stages for the identification: an efficient but less accurate least squares minimization for the optimal delays followed by sequential quadratic

16

programming for all parameters models. Method is not guaranteed to converge to the global minimum and depends on initial guess.

Discretized model developed was further augmented for constraints and augmented penalty function was derived. Related derivatives were derived and solved using genetic algorithm and gradient search. (Upreti and Ein-Mozaffari, 2006)

17

2
2.1

CONTINUOUS TIME DOMAIN APPROACH

RESEARCH OBJECTIVE

In prevIous studies (Kammer et aI., 2005; Upreti and Ein-Mozaffari, 2006), the continuous dynamic model of the mixing pulp chest was discretized using a zero order hold (ZOH) assuming that ZOH[ G2 ] is approximately equal to G2 (z) . This 1- RG2 1- RG2 (z)

approximation is only valid for a small sampling time ts and small R. The resulting discrete transfer function was used to obtain the dynamic model parameters. However, in this study the continuous dynamic model is used for the estimation of the model parameters without applying the above approximation, which can give better results for higher sampling time and higher R. Higher sampling time can help industry for lower frequency of sampling instances and lower amount of data collection.

2.2

CONTINUOUS TIME DOMAIN CHARACTERIZATION OF MIXING

A process flow diagram of mixing in an agitated pulp chest is shown in Figure 1.3. The output concentration (y) [conductivity of salt solution or pulp fiber concentration, EinMozaffari et ai. (2002)] is dependent on the intermediate concentrations, Yl and Y2' respectively in: (i) the short-drcuiting zone comprising the first order transfer function,

18

and a delay; and (ii) the mixing zone comprising the first order transfer function with a delay, and feedback for recirculation (Figure 1.4).

With time (t) as the independent variable, the mass balance for the two zones yields the following differential equations:
dYI

dt
dY2 dt

= .IF [u - YI ] = ~ [u - YI ]
~
TI

(2.1)

= F2

V IYJ
2

L _ Y2]=_1 L - Y2] T IYJ 2

(2.2)
F and F2 are the volumetric flow rates, u and Yj

where

f is a short-circuiting factor,

are the concentrations, and VI and V2 are the volumes as shown in Figure 1.3. Furthennore, with R as the fraction of pulp recirculated within the mixing zone,
F2 =[!.=.LJF 1-R Yj

(2.3) (2.4)

=[1- R]u + RY2
=f
X

The system output is as follows:
y(t)

YI (t - 1;) + [1- f] x Y2 (t - T2)

(2.5)

Where YI and Y2 are both zero for negative times.

The initial conditions for Equations (2.1) and (2.2) are
YI (0) = Y2 (0) = Yexp (0)

(2.6)

Where Yexp (0) is the experimental output specified at the initial steady state.

Based on the mathematical model glven by Equations (2.1 )--(2.6), the optimization problem for the identification of the mixing parameters is developed.

It may be noted that the effect of recirculation was not observed in a lab-scale chest

(Kammer et aI, 2005). Therefore, the simplified mathematical model with R = 0 was used in this case.

19

r

2.3

OPTIMIZATION PROBLEM
(Yalgorithm)

The goal is to determine the mixing parameters that minimize the error between the experimental output (y exp) or algorithm predicted output and that predicted by

Equation (2.1}-{2.6), (Yrnod). Because this work involves lab-scale agitated chests, where recirculation R is insignificant. (Kammer et aI., 2005), the characterization parameters are T, , T2 , 'f"
'f 2

and f. They need to be optimally determined by minimizing the

following objective function:

I, =

L [y
k=O

N-'

mod,k - Yexp,k

f

(2.7)

Yalgorithm is

used in above equation when simulated data sets are used.

In the above equation, the index k is the k-th experimental sampling instant, and N is the total number of the samples. The optimization problem is constrained by the following inequalities:
0::;;/::;;1

(2.8)

(2.9)
0::;; R::;; 1

(2.10)

and (2.11) where

a,

=exp[ -:,' J. I =1,2

(2.12)

and Is is sampling instant in sec. Tl <T2 (2.13)

Also the objective function for genetic operations, which gives globality of optimal results with very high probability in conjuction with gradient search, is given below. Since genetic algorithms inherently maximize an objective function, the following objective function
J=_I_

1+1,

(2.14)

20

is considered for maximization when genetic operations are applied in the algorithm.

2.4

AUGMENTED FUNCTION
Yexp

To minimize difference between

or (Yalgorithm) and

Ymod

by searching optimal values of

parameters, procedure of a robust hybrid optimization algorithm developed by Upreti and Ein-Mozaffari (2006), with modification for continuous time domain was applied. The hybrid algorithm is generic in nature and applies both gradient search; and the genetic operations of selection, crossover and mutation on binary~oded optimization parameters within their size varying domains using alternating linear and logarithmic mappings. The interaction between genetic operations and gradient search is unique, and leads to efficient search and refinement of optimization parameters. The algorithm has been found to yield robust solutions with high accuracies. (Upreti and Ein-Mozaffari, 2006; Hanna et aI., 2006).

The hybrid algorithm is fairly generic in that it needs only the limits of the optimization parameters, an objective function for the genetic operations, and a penalty function for the gradient search. The optimal results were periodically used by the gradient search for further improvement by minimizing the following interior penalty function. (Rao, 1996):

12

= I)

-r[

1
~-T2

+

1
a)-a 2

_~ __1 __ ~ __ 1 +_1_+_1_

- j+& + /-&-1

1

1]

d)

d2

a)

a2

a)-1

a 2 -1

(2.15)

with r being number and
T

the penalty variable tending iteratively to zero and & is small positive

d; = 1+ --...!..., i = 1,2, d) :5: d 2 ts

21

r
2.5
GRADIENT SEARCH
~

The partial derivatives of 12 from Equation (2.15), with respect to evaluated using the backward difference

and T2 were

(2.16) The remaining partial derivatives were analytically calculated as follows:
aI2 aal

= aal -r

all

[-1 )2 a~ 1 (a 1] -1)2
(a l -a 2

+

-

(2.17)

l

(2.18)

(2.19)

In Equations (2.17) and (2.18), the partial derivatives of II are given by
aI = 2L N-I ~ {Ymod,k ual
k=O

Yexp,J{ f [fJy] -8 I

a l k _ T.

+ (1- f) [fJy ~_2 ]
UUI

}
k- T
2

(2.20)

I

aII = 2(1- f) N-I {Ymod.k -8 a2 k=O

L

] - Yexp,k}{[fJy -8 2

}

(2.21)

a 2 k-T2

where

[Byl]
and

Bal k-~

-0

for(k-~)~O

(2.22)

[By2]
Ba
j

=0 for

(k-li)~O;

1=1,2

(2.23)

k-li

due to the initial steady state condition.

22

It may be noted that Equations (2.20) and (2.21) depend on 0'1
aa l

,

aY2 and aY2 ,all of aa l aa 2

which are functions of time. These functions were determined by integrating the following three differential equations:

~(Oyl ) __ Yi
dt 00 1

- YI

_~ Oyl
fl

alts

00 1

(2.24)

(2.25)

(2.26) Simultaneously with Equations (2.1) and (2.2). The initial conditions for equations (2.24}-{2.26) are as follows: (2.27) Finally, the partial derivative of II in Equation (2.19) is given by (2.28) where (2.29)

2.6

INTEGRATION OF EQUATIONS

Equations (2.1), (2.2), (2.24), (2.25) and (2.26) were simultaneously integrated using the fifth-{)rder Runge-Kutta Fehlberg method with Cash-Karp parameters, and adaptive step-size control (Press et aI., 2002) in conjunction with the genetic operations. It may be noted that the values of the state variables are needed at the experimental sampling instants to calculate the objective function as well as it derivatives in the gradient search. Those values were obtained using cubic spline. For this purpose, cubic spline objects were tied to the arrays of the state variables generated by the Runge-Kutta method.

23

f
,

3
following respects:

SOLUTION APPROACH

Genetic algorithms are based on Darwin's theory of survival of the fittest, based on the principles of natural genetics and natural selection (Goldberg, 1989, Holland, 1975). The basic elements of natural genetics-reproduction, crossover, and mutation-are used in the genetic search procedure. It differs from the traditional methods of optimization in the

1 A population of points is used for starting the procedure instead of a single design point, so less likely to get trapped at a local optimum. 2 Algorithm uses only the values of the objective function. The derivatives are not used in the search procedure. 3 The design variables are represented as strings of binary variables that correspond to the chromosomes in natural genetics. 4 The objective function value corresponding to a design vector plays the role of fitness in the natural genetics. 5 In every new generation, a new set of strings is produced by using randomized parents, selection and crossover from the old generation with a better fitness or objective function value 6 A simple example of genetic operation is given for better understanding:

24

X 01 101 11000 01000 1 001 1 = 13 24+23+~~{)J =24 ZJ+ 23+~{)J+{)J = 8 24+{)J~21+ZJ =19
~ 23+ 22+{)J+ ZJ

f(x)=x 2
169 576

64
361

Reproduction and crossover Reproduction crossover new population site
01 1 01 1 1 1 0010 111000 101011 4 4 2 2 01 100 1 1001 1 1 01 1 10000 ()O+ 23+ 22+()O+{)J = 12 24+23+~{)J+ZJ =25 24+23+~21+ZJ =27 24+()3+()2+~{)J 16 144 625 729 256

=

Mutation
1 0011

site
3,4

better string
1 01 01
2~()3+22+~ZJ=21

441

The way of applying genetic algorithm in this research is as below:-

Following the approach of Upreti (2004, 2006), the hybrid optimization algorithm is incorporated with continuous time domain model equations developed in previous section. Given Nx number of optimization parameters, the presented multi-parameter optimization algorithm randomly initializes a mean value Xi for each optimization parameter between the limits parameter,
Xi,

Xi min

and

Xi max,

i = 0, 1. .. Nx -1. The value of any i-th

is calculable fromxi' and a binary-coded deviation Llxi ,2 based on some and Llxi,2 form vectors, X, X and
~2

mapping. The N x values of each of Xi, Xi

~X2'

respectively. In addition toX , a population of mappings to calculate X from X and any 3.1.
~2

is also randomly generated. The

in its population are described in section

To generate an optimal vector X , the genetic operations of selection, cross- over, and mutation are successively applied to the population of binary- coded deviation vector
~2'

A value of objective function is associated with each

~2

by using the X (as

25

I
calculated from the mapping) to solve the mathematical model of a problem. These objective function evaluations are done before selection. The value of each objective function is scaled up by raising it to a specified power, n > 1, to favor the optimally better members of the population during selection (Coley, 1999a; Goldberg, 1989). Ifany constraint is violated for any infeasible
~2 ~2'

its objective function is set to zero so that the

is eliminated in the next round of selection after participating in

crossover and mutation. After the specified Ngen generations of genetic operations, the optimal vector so obtained is improved by gradient search. Next, the domain of each Xi is contracted, and X is replaced by X. This completes one iteration of the algorithm. In successive iterations, the logarithmic mapping is alternated with a linear mapping. Each of the domains is contracted until it reaches its minimum size, when it is expanded successively. This expansion helps in searching a better optimum in bigger domains. When the maximum size of a domain is reached, its successive contraction is resumed to let the refinement of a hopefully new, optimal vector. By alternating the mappings, the diversity of the population under genetic operations gets prolonged, thereby avoiding its premature stagnation. Without this measure, the population is very likely to undergo a "geneticdrift" so that most of its member becomes similar leading to premature convergence.

3.1

MAPPING
binary~oded

For any optimization parameter, a mapping relates the

deviation (Ax i ,2)

and the mean parameter value (Xi) to the parameter value (Xi). Thus, a mapping provides a vector (X) corresponding to each
binary~oded

deviation vector

(~2)

in its

population. The presented optimization algorithm (Upreti 2006) uses the following logarithmic and linear mappings:

26

Logarithmic Mapping
The purpose of logarithmic mapping is to emphasize relative precision (Coley, 1999b) within the elements of X. For any optimization parameter, the logarithmic mapping provides the value, Xi

=b

Z,
I

where,

b = {(~~,max-Xi,min)if(Xi,max-Xi,min~
2,lf( Xi ,max-Xi ,min)<2

(3.1)

Z.
I

_ = 10gb X.I

+ 2Nb'

10gb D; 1 L\x.I, 2
11,1 _

(3.2)
xi,max

In Equation (3.1), b is the logarithmic base and minimum values of the parameter,
Xi.

and

xi,min

are the maximum and

In Equation (3.2), Di is the value of the domain

between the limits of Dmin > 0 and b, and Nbibi is the number of representative bits for any i-th element of
~2
,

i. e.

~;,2'

Linear mapping
The linear mapping is straightforward, and is given by
Xi

=Xi +2

D;
N.
hu.,

-1 l..U i '2

A~

(3.3)
(3.4)

3.2

THE ALGORITHM

Following is the hybrid optimization algorithm (Upreti, 2006): 1. Initialize, (a). X, the vector of mean values of optimization parameters using,

i

=

0, 1. .. N x - 1

(3.5)

27

where Ri in Equation (3.4) is the i-th pseudo-random number obtained from a pseudo-random number generator (Knuth, 1973); (b). a population of Npop binary-coded deviation vectors number generator; and (c). the parameter domain, Di
= (xi,max -xi,min )/2

~2

using the pseudo-random

for each optimization parameter

2. Set logarithmic mapping for the genetic operations of selection, crossover, and mutation. 3. Generate an optimal vector by repeating the following consecutive operations on the population of ~2 for Ngen generations: (a). objective function (.1) evaluation for each
~2 ,

(b). selection based on the scaled objective function (f), (c). crossover with probability Pc, and (d). mutation with probability Pm 4. Obtain the vector, X, and corresponding jl generated so far using genetic operators. Set the counter, i = O. SetX(i)

= X, and

j(i)1

= jl

5. For gradient search, the augmented objective function based on the interior penalty function method (Rao, 1996) is given by
12

= II

-r[ I;. 1
-f
+&

+

1 + f 1]
-&-1

-T2

1 a l -a 2

_~ __1 __ ~ __ 1 +_1_+_1_
dl d2 al

a2

a l -1
limr~O

a 2 -1

Where

&

is a small positive number. h incorporates the inequality constraints, i. e.

Equations (2.11)-{2.13). The derivatives required for the gradient search are provided in other section. Set r
=

1 in this step.

6. Set the gradient search counter,j = O. SetX(j)

=X(i) , and

j(J)1

= j(i)1

Â·

Calculate the corresponding augmented objective function (jU)2) for the gradient search.

28

7. Calculate the vector of the partial derivatives ofi2 (J), i. e. (2.9)-{2.15). If Ili~ll=o then setX(i+l) = 8. Calculate
X(J+I) X(J),

i;

(J),

using Equations

and go to Step 12.

along the steepest descent direction as follows: -aIIX(J)llx

X(J+I)=X(J)

II/~(J)II
12 (J+I)

r(J)

Wherea is some positive fraction. Calculate the corresponding 9. If l/i+l) >

I/ i ) then setX(i+I) = X(J), and 12 (J+I) = I/ i ) ; and go to Step 12.

10. If11- 12 (J) /1 2(J+I) 1< & then setX(i+I) = X(J+I) , and 12 (i+l) = 12 (J+I); and go to Step 12. 11. Setj = j + 1, and go to Step 7. 12. Calculate I (i+l)
1

corresponding

to X (i+I) .

If

II (i+I) > II (i)

then

setll = II ,

,.

(i)

and X = X(i); and go to Step 15. 13. Set i l = 11(i+I) ,andX =
X(i+I).

If11- II(i) /11(i+I)1 < &, or r <

&

then go to Step 15.

14. Reduce the penalty term of Equation (2.15) by setting r =Crr, where Cr is some positive fraction. Set i = i + 1, and go to Step 6. 15. Store the resulting optimal value of objective function i l ,and the corresponding optimal vector ( X ). 16. Replace X by X . 17. Repeat Steps 3-16 once with linear mapping. 18. For each optimization parameter, (a). if Di is equal to either Dmin or Dj,max, set the size-variation factor for control domain, Co=Co- 1 Â· (This step allows the alternation of the successive contraction of a D; with its successive expansion.)

(b). set Di =Co Di. If Di < Dmio, set Di = Dmio. If Di > Dj, max,
set Di = Di,max. (This step allows the variation of Di within its limits.) 19. Go to Step 2 until the iterative change in i l is negligible.

29

r
The above development is general, and the hybrid algorithm is applicable to a multivariable optimization problem subject to a mathematical model, and accompanying constraints.

3.3

INPUTS

The presented optimization algorithm needs the following inputs: (1) the mathematical model and its parameters for the calculation of objective function; (2) the number of optimization parameters (Nx ), and constraints; (3) the minimum value (Dmin) of control domain, its maximum value
(D i , max. i
=

0, 1 ... Nx - 1), and a factor (CD) to vary the size of control domain;

(4) a seed number to generate pseudo-random numbers; (5) the following parameters for the genetic operations of selection, crossover, and mutation: a) the number of bits (Nbit,i) for each optimization parameter b) the number of cross-{)ver sites (Ncr) for each Ax i,2, i. e. each optimization parameter c) the probability of cross-{)ver (Pc) d) the probability of mutation (Pm) e) the power index (n) to scale objective function
f) the number of genetic generations (Ngen) every iteration.

The hybrid optimization algorithm developed in the last section was applied to the optimization problem. A multi-parameter mapped coding (Goldberg, 1989) was employed for the binary representation of the optimization parameters. The values of various parameters used in the application are listed in Table 3.1.

30

Table 3.1

Limits of the optimization variables inputs to the algorithm

Parameter di,miD,i =1,2
d 2,max G i max i

Value 1 lOj (l-lO---{)) 1 lO--4 7 lO 0.2 lO--()
Li=Nx-t i=O

Parameter
dt,max
Gi,min,i fmiD,

=1,2

Value 5xl0 2 lO--() 0 0.75 10 7 0.98 2 2 10--4

=1,2

f max,
Dmin

Co,C r

N bitd i =1,2 , " N bil .!
Pc
Nxsites

N bi1a i =1,2 , " N gen
Pm e Npop

n N ..
bll,l

a

The algorithm was first tested by applying it to the five different sets of simulated data, data sets 1-5. This was followed by the application of the algorithm to nine different sets of experimental laboratory scale plant data, Data sets 1-9 gathered by Ein-Mozaffari, (2002).

31

4
parameters f,

RESULTS AND DISCUSSION

The hybrid genetic algorithm with the continuous time model

was first tested by

applying it to the five different sets of simulated data, data sets 1 to 5 for which the real

h

T2 , T I and

T 2 time

constants were known and input data were generated

as per research work and method developed by Ein Mozaffari, (2002). Simulation was carried out for input data of 5424 sampling instants (representing conductivity value of salt solution, imaginary addition to chest) and 10000 iterations. Output of conductivity from model was generated using these parameters and input. Using hybrid genetic algorithm parameters were estimated. Using these estimated parameters and input concentration output was obtained from model and root mean squared errors were compared. Same input data was used for all 5 sets of data. Measurement inaccuracies of instruments known as noise were not incorporated in the model.

The algorithm was first tested without addition of noise to input data and then with addition of noise to check compatibility with experimental input output data which always has noise. The algorithm was validated using 2 sets of past researcher validation data (Ein Mozaffari, 2002). This was followed by the application of the algorithm to

nine different sets of real lab scale experimental plant input and output data collected from past research, Data sets 1-9 (Ein Mozaffari, 2002). The results of the application of the algorithm are provided below. Finally, the data with a large sampling time were processed with the discrete as well the continuous time approach to assess benefit of continuous time domain algorithm.

32

4.1

SIMULATION

RESULTS

IN

CONTINUOUS

TIME DOMAIN WITHOUT NOISE.
Simulated Data

Five simulated data sets were generated using the mathematical model developed in this work. The real model parameters were carefully varied for effective testing of the optimization algorithm. Data set 1 is the base case. Data set 2 is the second case with a lower value of
T2

than in the base case. Data set 3 is the second case with higher f
Is

. The

data sets 1-3 have the sampling time,
Is

=1s. The remaining two data sets have a higher
Is and T 2 ,

of 5 s. Data set 4 is the second case with higher

while data set 5 is data set 4

with higher f additionally.

The results obtained for these data sets are provided in Table 4.1, which compares the estimated parameters generated by the algorithm to the real parameters. It is observed that the real and the estimated values of all parameters agree very well. These agreements indicate that the optimization algorithm is well suited to yield results that are very close to the global optimum. This outcome is very desirable given the random initialization of the algorithm in the sparse domains of the parameters, which are non-linearly and discontinuously related to the objective function. Moreover, the absolute relative error

I rms

=

if' ~[1- ]2
Y mod
Yexp
i=O

(4.1)

N

Yalgorithm is

used in above equation when simulated data sets are used.

between the estimated and real parameters averages to a low value of 0.00122 showing close output values.

33

Table 4.1

The real and estimated parameters for the simulated data sets 1-5 without noise in continuous time domain.

Data set~
Is (s)
~

1
1 0.000829

2
1 0.001048

3
1 0.002656

4
5 0.000278

5
5 0.001299

Inns

Parameter Real Estimated Real Estimated Real Estimated Real Estimated Real Estimated

I;
T2
:",
:"2

40 110 10 50 0.2

40.273 109.959 9.440 49.940 0.199

40 110 10 20 0.2

40.392 109.971 9.206 19.980 0.198

40 110 10 20 0.7

39.900 110.018 10.211 20.149 0.701

40 110 10 500 0.2

40.052 109.896 9.905 500.061 0.199

40 110 10 500 0.7

39.935 111.186 10.138 504.020 0.700

f

The algorithm predicted estimated output (Yalgorithm), the model output (Ymod), and the input (u) for these data sets are plotted in Figure 4.1. The estimated output overlaps the model simulated output for each data set. Also the dynamic binary step input representing conductivity or pulp concentration to the chest and its output from chest corresponding to real parameters is reflected in Figure 4.1. Data set 1-3 has lower time constant, reflects fast steady state in Figure 4.1.Data set 1 and 2 has 0.2 short circuiting which can be seen at 2.4 value on y axis and data set 3 shows 0.7 short circuiting at nearly 3.3 value on y axis. Data sets 4 and 5 has higher values of :" 2 which is reflected in Figure 4.1 along with different short circuiting parameter value of 0.2 and 0.7.

34

4.0
.s::. :c 3.5 o 0)

Data set 1 without noise (continuous model)

E

7~ 7~ p~ ~I
o

-...-

...-

~ ~

~ ~ 7~ ~

-

- - ~ 17\
~

~3.0 ~2.5

"8

2.0

L1i
1000

~~ \. ~
2000

"-~ -~
3000 4000

~I ~
5000 6000

Data set 2 without noise (continuous model)

4.0

~ 3.5
0)

E
(U

-r'\ '7F
FI J~
o

;-

-,

-~

I~

...-"....

r- ~

~~

. .-r-,

~

3.0

~

~ 2.5
2.0

---l..:

.....11
2000

l

I ~~
3000

_00 ~
4000
r-

c...l".

1000

5000

6000

Data set 3 without noise (continuous model)

4.0
.c ~ 3.5
.Q>

E

r-r=

-r=

[g ~

7

-

-r=

-

r--y=

~

(U

3.0

"8
~

E 2.5

2.0

F=

....l.

....l.

'-

j

....l.

-!::..

o

1000

2000

3000

4000

5000

6000

Figure 4.1 Continued ...

35

Data set 4 without noise (continuous model)

4.0
E .s::.
~
(ij

~--------------------------------------------------~

~3 . 5
C)

3.0

"0

~2. 5
2.0 ..t=...~~--=::::::'~~-===~=-==-----=~::"::'-==--~=----1 1000 o 2000 3000 4000 5000 6000

o

4.0
.s::. :C3.5

Data set 5 without noise (continuous model)
r-,--

E

r-

r-

,--

-

r---

r-

,.--

r--

o C) o

~ - 3.0
"0

/
~

~

-t?

~

l'

~

~2.5
::J

,
1000

I!::t,."
'-

2.0

= o

'-

'=.

~
'--

~
'--

~
'--

--5000 6000

2000

3000
time (s)

4000

Figure 4.1 Comparison of the input (thin black line), estimated algorithm predicted
output
(Yalgorithm -

yellow line) with the model output

(Ymod -

thick pink line) for each of

the simulated data sets 1- 5 without noise in continuous time domain. The outputs overlap in each case.

36

4.2

SIMULATION RESULTS IN CONTINUOUS TIME DOMAIN AFTER ADDITION OF NOISE

4.2.1

Addition of noise

To examine the confidence on the estimated parameter values, the optimization algorithm was applied to the simulated data sets after the introduction of filtered white noise to input. This is required because the model itself does not incorporate noise and all experimental data are with noise due to measuring inaccuracies of instruments known as noise. White Noise is the signal that covers the whole range of frequency . For example white light has full range of frequency but if we select intermediate frequency we get different colors. White noise is filtered using band pass filter with cut-off frequency of 0.05 rad/sec (Ein- Mozaffari et aI., 2003). Noise in the form of random numbers having zero mean value was added to the binary input data with variance of 0.0625, known as the Discrete White Noise.

The Discrete White Noise term is a sequence of independent, normally distributed random variables with a mean of zero. Noise was added to the input data using Simul inkTM program. They were then used to generate five sets of simulated data using the mathematical model [Equations (2.1)-(2.6)] and the real parameters used earlier (Table 4.1).

37

I I

RESULTS WITH NOISE The real model parameters were same as without noise. The results obtained for these data sets are provided in Table 4.2, which compares the estimated parameters generated by the algorithm to the real parameters.

Table 4.2

The real and estimated parameters for the simulated data sets 1-5 with

noise in continuous time domain.
Dataset.
Is (s) Â·

I
1 0.01340

2 1 0.01312

3
1 0.01425

4

5 5 0.01413

5 0.01342

Inn.
Parameter

Real
40 110 10 50 0.2

~stimated

Real Estimated Real Estimated Real Estimated Real Estimated
40 110 10 20 0.2 39.516 109.718 10.165 20.068 0.199 40 110 10 20 0.7 39.474 109.845 10.695 19.468 0.702 40 110 10 500 0.2 39.613 109.625 9.471 490.069 0.202 40 110 10 500 0.7 39.556 112.938 10.499 502.352 0.702

1; T2

39.936 109.146 9.161 50.881 0.197

'1
'2
f

It is observed that the estimated parameters agree very well with the real parameters. Moreover, the absolute relative error of output concentrations as per Equation (4.1), between the estimated and real parameters averages to a low value of 0.01098. The algorithm predicted estimated output (Yalgorithrn), the model output (Ymod), and the input ( u ) for these data sets are plotted in Figure 4.2. The estimated output overlaps the model simulated output for each data set. All the plots are not smooth lines showing the effects of noise added to the input data. The quality of the results thus obtained in absence as well as presence of noise substantiates the efficacy of the optimization algorithm.

38

Data set 1 with noise (continuous model)

4.0 - , . - - - - - - - - - - - - - - - - - - - - - - - - - - - - ,
.s:;

E
C7)

:g3.5
~3 .0
(i

E ::...2.5
~

"8

:::3

2.0 ___

"=";"---.-L:"':"';:'::""'-"'~~-=L=: .---l..&,..~"------.:.=-:....~..L..:._....L:.1.:..._.....__:~--~

o

1000

2000

3000

4000

5000

6000

Data set 2 with noise (continuous)

4.0 - , . - - - - - - - - - - - - - - - - - - - - - - - - - - - ,

~

'83.5
~3 . 0

~ :; 2.5

2.0 __~~~RlUtIJ-=_JU~~~~~L...ML__l

o
E

1000

2000

3000

4000

5000

6000

4 . 0 -,.--------------------------~

Data set 3 with noise (continuous model)

.s:;

~ 3.5
C7)

~

(i

3.0

E ::... 2.5
~

"8

:::3

2.0 . . .~~~;;JLW~.UU

o

1000

2000

3000

4000

5000

6000

Figure 4.2 Continued ...

39

4.0
.c:
(ij

.,.....--------------------------~

Data set 4 with noise (continuous model)

E
Cl

~3.S
o

~3. 0
"0

~2.S
2.0
I----..!~_~~~~~~~.JY:.~~~~__Y!!L~!!::.__

_.J

o

1000

2000

3000

4000

SOOO

6000

4.0
.c:

~--------------------------------------------------~

Data set S with noise (continuous model)

E
Cl

:t:3.S o
"0

~3 .0
o E ;:...2.S
~

~

2.0

~-~~~~~-~~~~-~~-~-~~=---~--~

o

1000

2000

3000
time (s)

4000

SOOO

6000

Figure 4.2 Comparison of the input (thin black line), estimated algorithm predicted

output

(Yalgorithm -

yellow line) with the model output

(Ymod -

thick pink line) for each of

the simulated data sets 1- 5 with noise in continuous time domain. The outputs overlap in each case.

40

In the Figure 1.1, we can see the phenomenon of recirculation in the response of collected data from industrial chest. But in Figure 4.1 and Figure 4.2 the recirculation phenomenon is not visible. This is likely due to the fact that not all process variables can be scaled down in the laboratory apparatus, like the pulp-fiber dimensions (Kammer et aI., 2005).
It is known that the uncontrolled factor in scale-up and scale-down is often the

magnitude of the non-ideality of flow, and unfortunately this often differs widely between large and small units (Levenspiel 1998). The scale model does not behave as a recirculation process. So whole identification process was simplified by taking recirculation nil.

4.3

MODEL VALIDATION

Validity of the model is an important factor and algorithm has to be tested. To validate model, if we simulate it with fresh experimental input data and compare the results with output of the experimental data and should match with less root mean squared error. Figure 4.3 shows the procedure for model validation. The experimental data sets used in this work were generated by Ein-Mozaffari (2002).

In the first step, the algorithm was employed to characterize a laboratory-scale agitated chest by exploiting its experimental data. Table 4.3 shows the characterization parameters along with the values of Irrns.

41

1
I

...... .....

Input

.... ...

u

u

Simulation

Model

System

Experiment

Model Output
~,

... ,....

Comparison

.... .....

Measu red Output
~r

Figure 4.3 Model validation procedures, (Ein-Mozaffari 2002, 2003)

I

I
42

l

I

The corresponding outputs Yalgorithm and Yexp' and the input u are plotted in Figure 4.4

Simulation results for data set validation 1
10.-------------------------------------------------~

9

'8 8 ~
~
:::;,
~

~7

6
5
4~----~------~------~------~--------------~------~

o

1000

2000

3000
time (s)

4000

5000

6000

Figure 4.4

Results of the characterization of a laboratory-scale pulp chest using its

experimental validation data set 1, where input (thin black line), estimated algorithm predicted output (Yalgorithm - yellow line) and the experimental output (yexp - thick pink line)

Table 4.3
validation

Characterized parameters of experimental validation data set 1 for model

Data set ~

Validation 1
5 0.04587 47.590 96.350 9.299 878.876 0.241

tisec}
[rms ~

1;
T2

T.
T2

f

43

In the second step, the characterization parameters of Table 4.3 were used in the mixing model to predict the output in presence of a different input to the agitated chest. The outputs and the new input are plotted in Figure 4.5. In this figure the experimental output is in thick pink line and simulated output from the model, estimated using the first set of data is in yellow line. It can be seen that the simulated output and experimental output are very close to each other. The Inns of 0.0538 was obtained, which agrees well with that obtained during the characterization (see Table 4.3).

Validated result

o

1000

2000

3000
time (s)

4000

5000

6000

Figure 4.5 The validation of the mixing model in presence of a different experimental
input to the chest, where input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) and the experimental output (yexp - thick pink line)

44

4.4 4.4.1

EXPERIMENTAIJ

RESULTS

IN

CONTINUOUS TIME DOMAIN

Experimental Set-up and Experimental details

Nine experimental data sets (Data sets 1- 9) used in this work were gathered by EinMozaffari (2002). To study the macro scale mixing and dynamic behavior of agitated pulp stock ches4 a scale model chest was designed and built. (Ein- Mozaffari, 2002). A schematic diagram of the experimental setup is shown in Figure 4.6

Pulp suspension was pumped from the feed tank (1 m3) to the Plexiglas stock chest (0.2 m3) and back to the discharge tank (1 m3). Both the feed and discharge pumps were progressive cavity pumps (Monyo Industrial Products, Springfield, OH) equipped with variable frequency drives. Pulp suspension inside the feed tank was agitated using a 63.5 cm top entering Chemineer (Dayton, OH) A310 impeller driven with a 5- hp variable speed drive. The stock chest was rectangular in dimensions: width, W=40 cm, height, Z=70 cm, and length, L=70 cm. A 3- hp variable speed motor was used to drive three test impellers. These were scaled versions of Maxflow impellers (Chemineer Inc.) having diameters of 10.2 cm, 14.0 cm and 16.5 cm. Impeller torque and speed were measured using an inductive- rotary torque transducer with an encoder disk (model 0411IE50, Staiger Mohilo, Germany).

The input and output flow rates were measured using two magnetic flow meters (Rosemount Analytical, Irvine, CA). The pulp was pumped from the feed tank through the agitated pulp chest and into the discharge tank. The input and output configuration is shown in Figure 4.7.

45

/

Uqukl
T~

g _ '~' ~
Feed Tank
3
!

~ ---r===--=------r~-~ 0 rl ~

1

1~
Stock

,r

Â·
Discharge Tank
(V=1 m~

Â·
Â·

(V=o.2m~

Chest

Â·
7
1 ; Transmitter 2 ; Indlellor S: TachomttÂ«

Â§

, : torque Trwclucet
5 : Magnetk: FIowmoltt , : ConduetiYity Stneor 7 : P!np e :Solenoid VIIvt Â· : Pulsatlofl DaI'npentfs

, Figure 4.6

Schematic of experimental set- up. (Ein- Mozaffari 2002, 2003).

46

.

....... ....

.... .........

.Â·Â· t.

......

.... .> .,

F l o w 'Â·

-....

Direction

..........

Figure 4.7

Input-output configuration 1 (Ein-Mozaffari 2002, 2003)

The chest was equipped with a side-entering impeller. Dynamic tests were performed by injecting a saline solution via a computer-controlled solenoid valve into the pulp feed. The conductivities of the input and output streams were measured with flow-through conductivity sensors and analyzed. The identification experiment was performed by exciting the system and observing the input and output conductivities over a time period. These signals were recorded in a computer for the estimation of dynamic model parameters. The excitation provided in the dynamic experiments was limited to binary sequences as the input signal was controlled by an on-off solenoid valve. The whole process of model identification comprised two experiments. In the first experiment, the input signal was a rectangular pulse, which allowed the estimation of an approximate model to design the excitation for the second experiment (Kammer et aI., 2005). The excitation energy for the second experiment was concentrated at frequencies where the

47

I

Bode plot is sensitive to parameter variations (Ljung, 1999). Therefore, the frequencymodulated random binary input signal was designed for this purpose. Further details are provided in Ein-Mozaffari et al. (2003b). Table 4.4 shows the details of different experiments using different impeller rpm and different pulp concentration to generate experimental input and output data

Table 4.4

Details of the different experimental parameters used for generating data

sets 1 to 9 PULP EXPERIMENT NO CONCENTRATION
%

PUMP FLOW RATE STIRRER RPM Llmin

1 2 3
4

2.1 2.7 2.7 2.7
/

600 700 800 1000 800 1000 900 900 1000

5 5 5 5 25 25 25 5 5

5 6 7 8 9

3.3 3.3 3.3 3.3 3.3

4.4.2

Simulation results in continuous time domain

for experimental data
The motivation for applying the developed algorithm to these diverse experimental data sets was to check its global convergence as well as to examine the quality of estimated

{

results. The values of I rms are of the order 10-2, which is higher than that obtained earlier with the simulated sets of data without noise. The reason is that the experimental output

I

48

,..

data are real plant data, and carry noticeable noise including measurement errors in contrast to the smoother, algorithm - generated output data of the simulated data sets. It may be noted that the root mean squared error values obtained with the experimental data are similar in magnitude to those obtained with simulated data with noise. This similarity suggests that the average absolute fractional error in experimental parameter estimation might thus be around 6.8%. Table 4.5 and 4.6 provides the results obtained for the nine experimental data sets.

Table 4.5

The estimated mixing parameters for the experimental data sets 1--6 in

continuous time domain.
Data
set~

1
5 0.1086 71.165 80.668 9.201 854.l56 0.281

2

3
5 0.1141 65.083 230.675 24.394 706.l33 0.372

4

5

6

tJsec)
Irms
~

5 0.0566 71.871 272.962 11.614 743.544 0.753

5 0.0839 1.000 112.291 0.395 570.373 0.086

1 0.0504 18.223 18.223 2.249 373.418 0.685

1 0.0694 16.294 42.610 3.165 224.253 0.536

T, T2
1", 1"2

f
Table 4.6

The estimated mixing parameters for the experimental data sets 7-9 in

continuous time domain.

Data set~

7 5 0.0440 16.219 20.512 1.l38

8 1 0.0488 1.000 82.493 0.479

9

f.s{sec)

1 0.0427 1.000 83.918 0.421

Irms ~
T, T2
1", 1"2

205.692 734.478 719.744 0.548 0.119 0.0l3

f

49

The corresponding outputs

Ymod

andYexp, and the input u are plotted in Figure 4.8--4.10.

It is observed that the signal-to-noise ratio in Yexp is higher than that in the simulated data

sets. Nonetheless, the estimated output follows the experimental counterpart very closely except for the noise component, which is not taken into account by the process model. However, the root-mean-squared relative error (ignoring the first time instant) between the estimated and experimental outputs is a low value of order 10-2 as listed in Table 4.5 and 4.6. The results are of similar quality as obtained in the model validation exercise except for data sets 1,3 and 4 for which Irms is in a slightly higher range, 0.0839-O.l141. Effect of short circuiting and time constant is seen same as simulation data in the Figure 4.8-4.10.

50

2

~~------~~--~~------------------------~--~--~

o

2000

4000
Exp 2 (contiinuous model)

6000

8000

~

::3

4

o

2000

4000
Exp 3 (contiinuous model)

6000

8000

14----------------------------------------~-----------,

E12 "Â§10
.J:

....

C)

~8

~ ~ 4
::3

~6

2

o
output
(Yalgorithm -

2000

4000

6000

8000

10000

Figure 4.8 Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

thick pink line) for

each of the experimental Data sets 1- 3 in continuous time domain.

51

Exp 4 (contiinuous model)
16.-------------------------------------------,,------~

E .c
.~

- 14 12
0)

~

:::s

~ ~ 6

10 ~ 8
4

o
E

2000

4000

6000

8000

10000

Exp 5 (contiinuous model)

6 ,----------------------------------------------------.
.c ~5 o
0)

~4
x ~3
:::s
0-

2

o
5

500

1000
time (s) Exp 6 (contiinuous model)

1500

2000

,---------------------------------------~----------~

o

200

400

600

800

1000

1200

1400

1600

1800

2000

Figure 4.9 Comparison of the input (thin black line), estimated algorithm predicted
output
(Yalgorithm -

yellow line) with the experimental output

(yexp -

thick pink line) for

each of the experimental Data sets 4-6 in continuous time domain.

52

sm

~or UN\VEH611Y UBRAR'1

Exp 7 (contiinuous model)
6 ~--------------------------------------------------~

~5 o
0)

E

~

~ :, 3

0.4 x

-

o
~ 12
&10
Q.

500

1000

1500

2000

2500

Exp a (contiinuous model)
14 ~------------------------------------------------~

:c

~ a

~ 6
:,- 4

2

~------------~----~--~--~----~~--~~------~

o

2000

4000

6000

aooo

10000

16 .-------------------------------------~---------.

Exp 9 (contiinuous model)

E14 :; Â·g12
Cl

~10
~
:,

e-a
- 6
4

o

2000

4000
time (s)

6000

aooo
(yexp -

10000

Figure 4.10 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line)with the experimental output

thick pink line) for

each of the experimental Data sets 7- 9 in continuous time domain.

53

4.5 4.5.1

COMPARISON

OF

RESULTS

OF

DIFFERENT METHODS

Simulated results comparison with and without noise

Comparison of simulated results

To further appraise the developed continuous time domain approach, we compared its results with those yielded by two different discrete time domain characterizations, namely Kammer's method (Kammer et.al., 2004) and the discrete time approach using hybrid genetic algorithm (Upreti and Ein-Mozaffari 2006). To decide the accuracy of the

developed continuous time domain algorithm, we simulated 1-5 data sets with and without noise using discrete time domain algorithm and compared the results. The results obtained for these data sets in discrete time domain are provided in Table 4.7 (without noise) and Table 4.8 (with noise) which compares the estimated parameters generated by the algorithm to the real parameters. It is observed that the real and the estimated values of all parameters do not agree very well for all data sets and all parameters. Also time constant has been assigned integer value in multiplication with sampling time, it gives integer values in the result corresponding to sampling time of related data set and not decimal or intermediate values.

I ,

I

! I
i

54

-

..

Table 4.7

The real and estimated parameters for the simulated data sets 1-5 without

noise in discrete time domain.
Data set~
Is (s) ~

1

2
1 0.00251

3
1 0.00352

4 5 0.003636

5
5 0.008839

1 0.00157

Inns

Parameter

Real IEstimated Real IEstimated Real IEstimated Real IEstimated Real Estimated
40 110 10 50 0.2 40.000 90.000 9.162 50.399 0.197 40 110 10 20 0.2 40.000 109.000 9.042 20.427 0.196 40 110 10 20 0.7 39.000 110.000 10.705 19.697 0.704 40 110 10 500 0.2 40.000 105.000 7.240 503.087 0.195 40 110 10 500 0.7 35.000 125.000 13.022 492.019 0.713

1't
T2
1'1 1'2

f

Table 4.8

The real and estimated parameters for the simulated data sets 1-5 with

noise in discrete time domain.
Data set~
Is (s)
~

1
1 0.013455

2
1 0.013927

3
1 0.01496

4
5 0.01361

5
5 0.016172

Irms

Parameter

Real Estimated Real Estimated Real IEstimated Real Estimated Real IEstimated
40 110 10 50 0.2 39.000 109.000 10.225 50.688 0.199 40 110 10 20 0.2 39.000 109.000 10.142 20.295 0.199 40 110 10 20 0.7 39.000 109.000 10.496 19.999 0.700 40 110 10 500 0.2 35.000 110.000 12.328 487.506 0.207 40 110 10 500 0.7 35.000 130.000 12.951 478.758 0.715

TI

T2
1'1 1'2

f

55

Comparison of estimated parameters of both algorithms are given in Table 4.9 (without noise). Table 4.9 shows that the results obtained from continuous time domain are more accurate and consistent compared to real parameters. Root mean squared errors of continuous time domain are less than that of discrete time domain

Table 4.9 Comparison of the real and estimated parameters for the simulated data sets 15 without noise in continuous time domain and discrete time domain with smaller sampling time .( Values in brackets are of discrete time domain)

Dataset~

J
1 0.000829

2
1 0.001048 (0.0025l)

3 1 0.002656 (0.00352)

4
5 0.000278 (0.003636)

S 5 0.001299 (0.008839)

ts (s)

~

Inns

(0.00157)

Parameter Real Estimated Real Estimated Real Estimated Real Estimated Real Estimated
40 40.273 (40.000) llO 109.959 (90.000) 10
f,

40

40.392 (40.000)

40

39.900 (39.000)

40

40.052 (40.000)

40

39.935 (35.000)

r.
T2

llO

109.971 (l09.00)

llO

110.018 (l10.00)

llO

109.896 (l05.00)

110

1l1.l86 (125.00)

9.440 (9.162)

10

9.206 (9.042)

10

10.2ll (10.705)

10

9.905 (7.240)

10

10.138 (13.022)

50
f2

49.940 (50.399)

20

19.980 (20.427)

20

20.149 (19.697)

500

500.061 (503.087)

500

504.020 (492.019)

0.2

0.199 (0.197)

0.2

0.198 (0.196)

0.7

0.701 (0.704)

0.2

0.199 (0.195)

0.7

0.700 (0.713)

f

Comparison of estimated parameters of both algorithms with noise are given in Table 4.10. Table 4.10 shows that the results obtained from both algorithms matches well for cases 1-3 which is small sampling time of 1 sec. Results of continuous time domain are more accurate and consistent compared to real parameters particularly for case 4-5 which is higher sampling time of 5 sec. This is because in discrete time domain - continuous dynamic model of the mixing pulp chest was discretized using a zero order hold (ZOH)

56

assuming that ZOH [

1-RCT2

CT2 ] is approximately equal to

CT2 (z) (refer Figure 1.4). 1-RCT2 (z)

This approximation is only valid for small sampling time ts and small R. Root mean squared errors of continuous time domain matches with that of discrete time domain

Table 4.10 Comparison of the real and estimated parameters for the simulated data sets 1-5 with noise in continuous time domain and discrete time domain with smaller sampling time.( Values in brackets are of discrete time domain)

Data

set~

1
1 0.01340

2 1 0.01312 (0.013927)

3
1 0.01425 (0.01496)

4 5 0.01342 (0.0l361)

5
5 0.01413 (0.016172)

ts (s)

~

I rms Parameter

(0.013455)
Real Estimated

Real !Estimated Real Estimated

Real Estimated Real Estimated

40

39.936 (39.000)

40

39.516 (39.000)

40

39.474 (39.000)

40

39.6l3 (35.000)

40

39.556 (35.000)

~
110

109.146 (109.00)

110

109.718 (109.00)

110

109.845 (109.00)

110

109.625 (110.00)

110

112.938 (l30.00)

T2
10
1"1

9.161 (10.225)

10

10.1654 (10.142)

10

10.695 (10.496)

10

9.471 (12.328)

10

10.499 (12.951)

50
1"2

50.881 (50.688)

20

20.068 120.295}

20

19.468 il9.9991

500

490.069 _(487.5Q)

500

502.352
1(478.75~

0.2

0.197 (0.199)

0.2

0.199 (0.199)

0.7

0.702 (0.700)

0.2

0.202 (0.207)

0.7

0.702 (0.715)

f

The algorithm predicted estimated output

(Yalgorithm) ,

the model output

(Ymod) ,

and the

input (u) for these data sets in discrete time domain with and without noise are plotted in 4.11 and Figure 4.12. The estimated output overlaps the model simulated output for each case

57

Data set 1 without noise (discrete model)

4.0
E 3.8
~

3.6 o 3.4
~3.2

~~17

,--

r-

~ ~

~ ~

~
----

17 ~

r-

~ ~
r--

17 ~

~

2.4 ;:, 2.2

~
~

"8

3.0 2.6 2.0

2.8

F~ ~~ ~~ -~ ~ ~
o
1000 2000

j ~~
4000

~
5000 6000

3000

Data set 2 without noise (discrete model)

4.0
.s::. ~

E
o C)
o

3.5

r-r ~ ~ ~

r- -

\

-~

-

r- ~ r-r=~ ' ~ - ~

r-t=\
.....1,.

~ _ 3.0
"0

E 2.5 ::..,

2.0

F~ J~ ~~ ~i
o
1000 2000

! ~i -~
3000 4000

J~

5000

6000

Data set 3 without noise (discrete model)

4.0
.s::. ~

E
o C) o

'"IF

'7F

3.5 3.0

~ -

--rF

,

-

'7F

~

(ij

"0

~ 2.5
;:,

2.0

F

~

-....b

J.

'-

'--

o

1' ~

J.:.

1000

2000

3000

4000

5000

6000

Figure 4.11 Continued ...

58

Data set 4 without noise (discrete model)
4 .0~------------------------------------------------~

.s::.

E
0)

:c: 3.5 o
(ij

~

3.0

"& ~ 2.5
:;:,

2.0 .e~:::::"~==~-=~==~~~-:="~=---::=-~=---J 1000 4000 o 2000 3000 5000 6000

Data set5 without noise (discrete model)

4.0
E .s::.

.----

,..---

r-

r-

r--

r-

r-----

r-

r-"

~

:c: 3.5 o
0)

~ . 3.0
'0

(~

~

rt?

~

~

~2. 5
2.0
:=

o

~
'--

,
'---

,
'-

~

!!=:::

3000
time (s)

'--

"
4000

~,

~

-

5000 6000

o

1000

2000

Figure 4.11 output

Comparison of the il\Put (thin black line), estimated algorithm predicted yellow line) with the model output
(Ymod -

(Yalgorithm -

thick pink line) for each of

the simulated data sets 1- 5 without noise in discrete time domain. The outputs overlap in each case.

59

4 . 0~------------------------~----~--~------------~
.J:

Data set 1 with noise (discrete model)

E =E 3.S
0)

o

~3.0
~2.S

'8

-

:::J

2.0

o

1000

2000

3000

4000

SOOO

6000

Data set 2 with noise (discrete model)

4.0 .,.---------------------------------------------------,
.J:

E =E 3.S
o 0)

~3.0

'8

:>.. 2.S

E

2.0

~---=..::O:""-......_"'_.:...:::1111"-"----""":..orr_...:.:z..;:a::. . .:...-!..a,......:::~-~~:...!:.:..-L!~_._~::.....--__I

o

1000

2000

3000

4000

SOOO

6000

Data set 3 with noise (discrete model)
4 . 0~------------------------------------------------~
.J:

E

Â· c 3.S o
0)

~3.0

~2.S
2.0
~_""::"";:_......_"'_..:....:::IIII=-u..-L.:II~....l:Z::I

'8

o

1000

2000

3000

4000

SOOO

6000

Figure 4.12 Continued ...

60

Data set 4 with noise (discrete model)

4.0
E s:: 1: 3.5
o 0) ~ - 3.0

~---------------------------,

-g

~

E

2.5 2.0
~-.J~--J~~~~~L~~_~~U~~~_--I

o

1000

2000

3000

4000

5000

6000

Data set 5 with noise (discrete model)
4.0~-------------------------~

E 1: 3.5
s::

o 0)

~ _ 3.0

-g
~

E 2.5

2.0

0-------.------...------.--'------.-----......------...1

o

1000

2000

3000
time (s)

4000

5000

6000

Figure 4.12 output

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the model output
(Ymod -

(Yalgorithm -

thick pink line) for each of

the simulated data sets 1- 5 with noise in discrete time domain. The outputs overlap in each case.

61

Kammer's method

Data sets 1-3 were simulated using Kammer's method. (Kammer et aI., 2005). Results of simulation using Kammer's method are given in Table 4.11. Kammer et al. (2004) developed a tailor-made mechanism for the identification of continuous-time mixing parameters based on the discrete-time model. (Ein-Mozaffari et aI., 2003). In this method, the authors used two distinct stages for the identification: an efficient but less accurate least squares minimization for the estimated delays followed by sequential quadratic programming for all parameters models. This method is not guaranteed to converge to the global minimum and depends on initial guess. Details of Kammer's algorithm for higher sampling time were not available. Table 4.12-4.14 shows the comparison of parameters from all three algorithms which are almost same for data sets
1-3 for small sampling time.

Table 4.11 The estimated mixing parameters for the simulated data sets 1-3 usmg

Kammer's method with noise.
Data set~
Is (s) ~

1
1 Real 40 110 10 50 0.2 Estimated 39.000 109.000 10.26 50.7 0.199 Real 40 110 10 20 0.2

2 1 Estimated 39.000 109.000 10.176 20.301 0.199 Real 40 110 10 20 0.7

3
1 Estimated 39.000 109.000 10.500 20.015 0.700

Parameter
~

T2
1'1 1'2

f

62

Table 4.12 Comparison of the real and estimated parameters for the simulated data set-l

with noise in continuous time domain, discrete time domain and Kammer's method with sampling time of 1 sec.

Parameter Real Continuous

Discrete Kammer

r;
T2 TI T2

40 110 10 50 0.2

39.936 109.146 9.161 50.881 0.197

39.000 109.000 10.225 50.688 0.199

39.000 109.000 10.26 50.7 0.199

f

Table 4.13 Comparison of the real and estimated parameters for the simulated data set-2

with noise in continuous time domain, discrete time domain and Kammer's method with sampling time of 1 sec.

Parameter Real Continuous Discrete Kammer

r;
T2 TI T2

40 110 10 20 0.2

39.516 109.718 10.165 20.068 0.199

39.000 109.000 10.142 20.295 0.199

39.000 109.000 10.176 20.301 0.199

f

63

,

Table 4.14 Comparison of the real and estimated parameters for the simulated data set-3

with noise in continuous time domain, discrete time domain and Kammer's method with sampling time of 1 sec.

Parameter Real Continuous Discrete Kammer

Ii
T2
'l"J 'l"2

40 110 10 20 0.7

39.474 109.845 10.695 19.468 0.702

39.000 109.000 10.496 19.999 0.700

39.000 109.000 10.500 20.015 0.700

f

Higher sampling time results comparison

We simulated data sets 1-5 without noise using continuous and discrete time domain algorithm for higher sampling time of 50 seconds. Results are listed in Table 4.15, continuous time domain shows far better parameter approximation than the discrete time domain algorithm. The values of I rms with the continuous time domain approach are at least two orders of magnitude lower than that obtained using discrete time domain approach. This outcome was expected since the discretized model provides good results for small sampling times as discrete time domain algorithm was developed with approximation of small sampling instances. Also time delays are assigned integer values in multiplication with sampling time, dicrete algorithm does not give values below 50 sec, but gives in multiplication of 50 sec. That is the reason time delays have values 0 in some data sets of discrete time domain results. The algorithm predicted estimated output
(Yalgorithm), the model output (Ymod), and the input (u ) for these data sets in continuous and

discrete time domain with and without noise are plotted in Figure 4.13 and Figure 4.14 The estimated output overlaps the model simulated output for each case for continuous

j

64

time domain whereas in discrete time domain, there is deviation, shown in Figure 4. 15(enlarged view of data 1-3)

1

Table 4.15 Comparison of the real and estimated parameters for the simulated data sets

1-5 without noise in continuous time domain and discrete time domain with higher sampling time of 50 sec. (Values in brackets are of discrete time domain).
Data
set~

1
50 6.55e--004

2 50 9.26e--005 (0.043284)

3
50 3.83e--005 (0.015439)

4
50 1.75e--004 (0.002514)

5

Is (s)

~

50 6.72e--0O5 (0.008375)

Irms
Parameter

(0.028966)

Real Estimated Real Estimated Real Estimated Real !Estimated Real Estimated
40 34.638 (00) 110 113.642 (100) 10 28.460 (44.988) 50 49.378 (44.988) 0.2 0.251 (0.374) 0.2 20 10 110 40
~7.518

40

38.599 (00)

40

39.877 (00)

40

39.963 (00)

~

(50) 110.695 (100) 16.526 (13.925) 19.877 (19.881) 0.216 0.570) 0.7 20 10 110

113.642 (100) 13.322 (38.043) 19.221 (38.043) 0.726 (0.898)

110

110.352 (100)

110

111.119 (50)

T2
1")

10

10.243 (27.116)

10

10 .. 073 (10.659)

500

499.878 (505.59)

500

499.606 (534.92)

1"2

0.2

0.200 (0.224)

0.7

0.700 (0.673)

f

65

L

4 . 0 ~------------------------------------------------~

Data set 1 without noise (continuous model)

1000

2000

3000

4000

5000

6000

Data set 2 without noise (continuous model)

4.0
.c

E

r-;=;, r-;=;,
~

r-

~ ,..,

r-rr-I,

r

r- rr==;

:c: 3.5 o
~

en Â«i

3.0

"8
Â£2.5
;:)

2.0

F=~

'- ~

,-=A L- A
1000 2000

~

'-

'- ~
4000

'-

,-y

o

3000

5000

6000

Data set 3 without noise (continuous model)

4.0
.c

E

:c: 3.5 o
en

If If
II
l
1000

,...,

rlf

7r

rr
~

~3.0
E 2.5 ::...
2.0 F=

"8

II
2000

\

'-

~
5000

j
6000

o

3000

4000

Figure 4.13 Continued ...

66

4 . 0 ~------------------------------------------------~

Data set 4 without noise (continuous model)

:c: 3.5 o
0)

.s::

E

:!'! - 3.0 '8

~ 2.5
2 . 0 ~------------------------------------------------~

o

1000

2000

3000

4000

5000

6000

4 . 0~--------------------------------------------------~

Data set 5 without noise (continuous model)

:c: 3.5 o
0)

.s::

E

:!'! _ 3.0
'0

~

o E

2.5
Â· L...-J '---'

~~
'-'-'-'--

2 . 0 ~------------------------------------------------~

o

1000

2000

3000
time (s)

4000

5000

6000

Figure 4.13 Comparison of the input (thin black line), estimated algoritlun predicted
output
(Yalgorithm -

yellow line) with the model output (Ymod - thick pink line)for each of

the simulated Data sets 1- 5 without noise in continuous time domain - Sampling time 50 sec. The outputs overlap in each case.

67

Data set 1 without noise (discrete model)
4 . 0 ~------------------------------------------------~

1000

2000

3000

4000

5000

6000

4.0
~
C)

Data set 2 without noise (discrete model)
r- r=; r- P""i

J::.

E

r

,.....

,- ,

r- r=~

,.....

r-

r-r-i,

o

3.5

~ - 3.0

~

'8
~

E

2.5 2.0

J
o

'- ~

'- ~

'-

'- ~
3000

"- ~
4000

'- ~
5000

'-

1000

2000

6000

Data set 3 without noise (discrete model)

4.0
.c ~3 . 5

E

T T

o C)

7

rr
4000

r-

T

~

(ij

~ _ 2.5
;::,

'8

3.0

\
o
1000

\

\ \
2000 3000

\
5000

\
6000

Figure 4.14 Continued ...

68

4.0
E :C3.S o C)
..c.

~---------------------------,

Data set 4 without noise (discrete model)

_ 3.0 ~

"8

~2 . S

E

2.0

-+-------------~---~-------~

o

1000

2000

3000

4000

SOOO

6000

4.0.--------------------------------------------------.

Data set S without noise (discrete model)

:e 3.S o
~ 3.0 "8
~
Ol

.s:;

E

E

2.S
1= '--'---

2 . 0~------------------------------~-------------~

---

'"

~

............

"

'---

'--

o

1000

2000

3000
time (s)

4000

SOOO

6000

Figure 4.14 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the model output

(Ymod -

thick pink line) for each of

the simulated Data sets 1- 5 without noise in discrete time domain - Sampling time 50 sec The outputs overlap in each case.

69

Data set 1
4 . 0 .-------------------------------------------------~

o ~3.0

c:

~

"8
2.5

2 . 0+---------~--------~--------~--------~--------~

o

200

400
time (s)

600

800

1000

4.0 ,..---------------------------------------------------,

Data set 2

~3 . 0
"0

o o
c:

~
::l

2.5

2 . 0+---------~--------~--------~--------~--------~

o

200

400
time (s)

600

800

1000

Continued ...

70

4.0 . . , . . . . - - - - - - - - - - - - - - - - - - - - - -- ----,

Data set 3

(.)
CI)

3.5

~
::.;;

8
c:

3 .0

;:; 2.5

~

"8

2.0

o
Figure 4.15

200

400
time (s)

600

800

1000

Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (yellow line), estimated algorithm predicted output in discrete time domain (dark blue line), with the model output (Pink line), for the simulated Data sets 1- 3 without noise in continuous time domain - Sampling time 50 sec. The continuous time domain output overlaps experimental output whereas discrete time domain does not overlap.

4.5.2

Experimental results comparison

All experimental data sets were simulated using discrete time domain. Results are given in Table 4.16 and 4.17. Comparisons of the parameters generated by both algorithms are listed in Table 4.18 and 4.19. Values of the parameters match well for smaller sampling time. Comparison of the Inns values for experimental data sets for continuous and discrete time domain are given in Table 4.20 and matches very well showing successful development of algorithm. The algorithm predicted estimated output
(Yalgorithm),

the

experimental output (yexp) , and the input (u) for these data sets using discrete time

71

domain are plotted in Figure 4.16- 4.18 The estimated output overlaps the experimental output for each data set. Variation in plotted lines may be due to the experimental errors.

Table 4.16

The estimated mixing parameters for the experimental data sets 1--6 in

discrete time domain.

Data set~
Is (s)

1

2
5 0.07041 70.000 300.000 11.008 609.440 0.765

3
5 0.12217 65.000 225.000 21.294 702.593 0.370

4
5 0.78400 0.000 115.000 0.364 569.477 0.071

5
1 0.04654 17.000 56.000 3.340 346.391 0.718

6

5
~

1 0.06795 16.000 40.000 2.947 215.627 0.533

Inns

0.10786 70.000 90.000 8.233

1't
T2 i\ i2

857.021 0.291

f

Table 4.17

The estimated mixing parameters for the experimental data sets 7-9. in

discrete time domain.
Data set~
Is (s)

7

8
5

9 5

1
~

I rms

0.04428 0.04557 0.04535 15.000 42.000 2.631 0.000 85.000 0.412 0.000 80.000 0.362

1't
T2 i\ i2

215.627 742.588 721.893 0.586 0.166 0.011

f

72

Table 4.18 Comparison of the estimated mixing parameters for the experimental data sets

1--6 in continuous time domain and discrete time domain. (Values in bracket are of discrete time domain)
Data
set~

1

2 5 0.0566

3
5 0.1141

4
5 0.0839

5
1 0.0504

6
1 0.0694

ts<sec)
Irrns
~

5 0.1086

(0.10786) (0.07041) (0.12217) (0.78400) (0.04654) (0.06795) 71.165 71.871
(70.000)

65.083 (65.000) 230.675 24.394 (21.294) 706.133 0.372 (0.370)

1.000 (0.000) 112.291 0.395 (0.364) 570.373 0.086 _(0.071)

18.223 (17.000) 18.223 (56.000) 2.249 (3.340) 373.418
(346.391)

16.294 (16.000) 42.610 (40.000) 3.165 (2.947) 224.253 (215.627) 0.536 (0.533)

r.
T2

(70.000) 80.668 (90.000) 9.201 (8.233) 854.156

272.962 11.614 (11.008) 743.544

(300.000) 1225.0001 J115.000)

1')

1'2

(857.021) (609.440) (702.593) (569.477) 0.281 0.753 (0.765) (0.291)

0.685 (0.718)

f

73

Table 4.19 Comparison of the estimated mixing parameters for the experimental data sets

7-9 in continuous time domain and discrete time domain. (Values in bracket are of discrete time domain)

Data set~

7

8
1 0.0488

9
1 0.0427

t.y{sec)
Irms~

5 0.0440

(0.04428) (0.04557) (0.04535) 16.219 1.000 (0.000) 82.493 (85.000) 0.479 (0.412) 734.478
(742.588)

1.000 (0.000) 83.918 (80.000) 0.421 (0.362) 719.744 (721.893) 0.013 (0.011)

1;

(15.000) 20.512 (42.000) 1.138 (2.631) 205.692 (215.627) 0.548 (0.586)

T2

1'\

1'2

0.119 (0.166)

f

74

Table 4.20 Comparison of Irms values of continuous time domain and discrete time

domain for experimental data sets 1-9

Experiment No. Continuous Time Domain Discrete Time Domain

Irms
1 2 3 4 5 6 7 8 9 0.1086 0.0566 0.1141 0.0839 0.0504 0.0694 0.0440 0.0488 0.0427

Irms
0.1078 0.0704 0.1221 0.7840 0.0465 0.0679 0.04428 0.0455 0.0453

75

Exp 1 (discrete model)

2

~L-----_ _~~_ _~_ _~_ _ _ _ _ _- - - - - - - - - - - -_ _----~~_ _ _ _~

o

2000

4000

6000

8000

16.-------------------~~--------~------------------~

:e

~ 14

& 12
Q.

~ 10 ~ 8
6

4

~--------------------------------------------------~

o

2000

4000
Exp 3 (discrete model)

6000

8000

14.---------------------------------------~----------~

E .r:.

12

~ 10
C)

~ 8

~ 6
:;, ~

Q.

4

2

~------------------------------------~--------------~

o

2000

4000

6000

8000

10000

Figure 4.16 output

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

(Yalgprithm -

thick pink line) for

each of the experimental Data sets 1-3 in discrete time domain.

76

Exp 4 (discrete model)

' '::
Q.

14

~ 12
8,10

~ 8
~ 6 ~ 4 ;:,
2 4---------------------------------------------~----~

o

2000

4000

6000

8000

Exp 5 (discrete model) 6~--------------------------------------------------~

~

o ..Q)4
Q.

Â£is ''::

E

x3 ~

o

500

1000
time (s) Exp 6 (discrete model)

1500

2000

5~--------------------------------------~----------~
.r:: ~4
C)

E

o

~3
Q.

~2
;:,

x

o
Figure 4.17 output

200

400

600

800

1000

1200

1400

1600

1800

2000

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

(Yalgorithm -

thick pink line)for

each of the experimental Data sets 4--6 in discrete time domain.

77

Exp 7 (discrete model)

6
.Â§ 5
C)

.r::.

)(
~

E

~ ~
;::,

~4

3

0 14 E12 .r::. .... 010 C)
~

500

1000

1500

2000

2500

Exp 8 (discrete model)

~
0)(

a
6 4 2 0 2000 4000 6000

~
;::,

aooo

10000

16 E14 .r::. 'Â§12

~----------------------------------------~----------~

Exp 9 (discrete model)

-

C)

~10

~ ;::,

~

e-a
6
4

o
Figure 4.18 output

2000

4000
time (s)

6000

8000

10000

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

(Yalgorithm -

thick pink line) for

each of the experimental Data sets 7- 9 in discrete time domain.

78

---_._-----

-------------------------

Comparison of results of experimental data for sampling time of 50 seconds For checking the application at higher sampling time, input and output values at every 50 seconds were collected from experimental data sets 1-9 and simulated on continuous and discrete time domain. Comparisons of the parameters generated by both algorithms are listed in Table 4.21 and 4.22. Values of the parameters are better in continuous time domain. Also parameter/follows nearer to approx 5% variation than small sampling time results, given in Table 4.18 and 4.19. This shows far better trend of short -drcuiting in the chest at higher sampling time compared to discrete time domain. Also time constant has been assigned integer value in multiplication with sampling time in discrete time domain algorithm, it gives integer values of time constants T 1 and T2 in the result corresponding to sampling time of related data set and not decimal or intermediate values.

Table 4.21

Comparison of the estimated mixing parameters for the experimental data

sets 1-6 in continuous time domain and discrete time domain at sampling time of 50 seconds (Values in bracket are of discrete time domain) Data
set~

1
50 0.12005

2 50 0.07795

3
50 0.12103

4 50 0.10293

5
50 0.16919

6
50 0.20360

ts(sec)

Irms
1;

~

(0.13431) (0.09255) (0.12363) (0.44103) (0.27474) (0.38352) 66.210 (50) 218.062 64.610 (0) 460.909 (550) 25.022
(71.850)

59.520 (0) 250.397 (350) 39.215
_(112.614)

28.214 (0) 475.537 (100) 439.186
(3.621)

1.000 (0) 330.008 (150) 16.439
(3.684)

8.769 (0) 67.057 (150) 4.964
(23.515)

T2

(200) 30.088
(21.075)

i,

798.922
i2

589.494
(415.462)

702.937
(664.903)

439.190
(571.978)

74.982
(212.504)

173.449
(167.276)

(826.101)

0.387

0.784
(0.837)

0.395
(0.502)

0.087
(0.074)

0.695
(0.448)

0.549
(0.398) ,

f

(0.380)

79

Table 4.22 Comparison of the estimated mixing parameters for the experimental data sets

7-9 in continuous time domain and discrete time domain at higher sampling time of 50 seconds. (Values in bracket are of discrete time domain)

Data set~

7
50 0.01261

8
50 0.05812

9

(Jsec)

50 0.044107

Irms ~

(0.18789) (0.04914) (0.04935) 1.682 71.410 (0) 499.999 (50) 640.327
(736.970)

64.741 (0) 499.999 (100) 623.973
(40.722)

~

(0) 46.284

T2

(150) 10.363
(3.687)

'\ '2
f

165.265
(190.475)

648.128
(736.970)

625.863
(700.339)

0.618
(0.408)

0.011
(1e--08)

0.031
(0.063)

The model predicted estimated output (Yalgorithm), the experimental output (Yexp), and the input (u) for these higher sampling time experimental data sets using continuous time domain are plotted in Figure 4.19 - 4.21 and discrete time domain are plotted in Figure 4.22- 4.24. The estimated output is nearer to experimental output for each data set for full length of data in both the algorithms. The estimated output is nearer to experimental output for each data set for small length of data in continuous time domain than discrete time domain reflecting better Irms values of continuous time domain than discrete time domain as shown in Figures 4.25-4.29 showing successful development of algorithm. Variation in plotted lines may be due to the experimental errors. Obviously trend of experimental output as well as estimated output is not exactly same as that for small sampling time(Figure 4.8 -4.1 Oand 4.16-4.18) because input variations are more in 50 seconds duration.

80

Exp data set 1 (continuous model)

2 +-------------~----------~------------~------------~
o
2000 4000
6000

8000

Exp data set 2 (continuous model)
16~--------------------------------------------------~

.;:: (ij

~14 &12

~10 ~ ~8
~

;:) 6

o

2000

4000

6000

8000

Exp data set 3 (continuous model)

14
1: &10

~----------------------------------------------------~

~12

~ 8

~ 6
:; 4
2+---------~----------~--------~--------~--------~

Q.

o

2000

4000

6000

8000

10000

Figure 4.19 Comparison of the input (thin black line), estimated algorithm predicted

output

(Yalgorithm -

yellow line) with the experimental output

(yexp -

thick pink line) for

each of the experimental Data sets 1- 3 in continuous time domain for sampling time of 50 seconds.

81

Exp data set 4 (continuous model)
16.-------------------------------------------------~

~

.c :c o 12 ..2> 10

E 14

~ 8 ~ 6

:::3

4

2

~--------~----------~--------~--------~--------~

o

2000

4000

6000

8000

10000

Exp data set 5 (continuous model)
6.-----------------------------------------------------~

2

~~~----~--~~----~--~--~~--~~~--~--~----~

o

500

1000

1500

2000

Exp data set 6 (continuous model)

5
.c
";::
0

E
0)

4

~ 3
Q.

~ 2
~

><

:::3

1
0

500

1000

1500

2000

Figure 4.20 Comparison of the input (thin black line), estimated algorithm predicted output
(Yalgorithm -

yellow line) with the experimental output

(yexp -

thick pink line) for

each of the experimental Data sets 4-6 in continuous time domain for sampling time of 50 seconds.

82

Exp data set 7 (continuous model)
5 . 5~------------------------------------------------~

E 5.0 s:: Â·c
~4.0

cu

&4.5
~

~3.5
~~

3.0
2.5~--------~----------~--------~--------~--------~

o

500

1000

1500

2000

2500

Exp data set 8 (continuous model)

14
:t::

E12 s:: 010 0)

~ 8
Cl.
~
~

~

6 4 2 0 2000 4000 6000 8000 10000

~

Exp data set 9 (continuous model)
16~--------------------------------------------------~

E 14 s::

=g 12
0)

~ 10

~ 8 ~ ~ 6
~

4

o
Figure 4.21 output
(Yalgorithm -

2000

4000

6000

8000

10000

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

thick pink line) for

each of the experimental Data sets 7-9 in continuous time domain for sampling time of
50 seconds.

83

14.-----------------~------~--------~--------------,

Exp data set 1(discrete model)

~ 12
".:

-

&10

$6
2
~----------~~----------~------------~----------~

~ 8

o

2000

4000
Exp data set 2 (discrete model)

6000

8000

16.-----------------------------------------------------.
".:

~

~14
&12

~ 10 ~ ~ 8

(ij

::;, 6

o

2000

4000

6000

8000

Exp data set 3 (discrete model)

14 E12 .r:.

~----------------------------------------------------,

" g 10
0)

-

$6
::;, ~

~ 8

4
2
+---------~----------r_--------._--------_,--------~

o
output
(Yalgorithm -

2000

4000

6000

8000

10000

Figure 4.22 Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

thick pink line) for

each of the experimental Data sets 1-3 in discrete time domain for sampling time of 50 seconds.

84

Exp data set 4 (discrete model)

16 E 14 .r.::. 1: 12

~ 8
~ 6 ~ 4 , ;::, 2 0
0 2000 4000 6000 8000 10000

&10

Exp data set 5 (discrete model)

6
.r.::.
0;;::

E ...
0)

5

0

~ 4
~ ~ 3 ,
;::,

2 0 200 400 600 800 1000 1200 1400 1600 1800 2000

Exp data set 6 (discrete model)

5
.r.::. :e 4

~--------------------------------------------------~

E

o 0)

~ 3
~ 2
1
~~~~--~----~----~--~----~----~--~----~--~

~

o
output

200

400

600

800

1000

1200

1400

1600

1800

2000

Figure 4.23 Comparison of the input (thin black line), estimated algorithm predicted
(Yalgorithm -

yellow line) with the experimental output

(yexp -

thick pink line) for

each of the experimental Data sets 4-6 in discrete time domain for sampling time of 50 seconds.

85

Exp data set 7(discrete model)
S . S~--------------------------------------------------~

...;::

~ S.O

g,4.S
_ 4.0 ~
Q.

:::...;

~ 3.S

:;,- 3.0
2.S+---------~----------~--------~--------~--------~

o

SOO

1000

1S00

2000

2S00

Exp data set 8(discrete model)
14~--------------------------------------------------~

E12 .r;
.Â§ 10
0)

..-

Js
:;,- 4

~ 8

2

+---------~----------~--------~--------~--------~

o

2000

4000

SOOO

8000

10000

Exp data set 9 (discrete model)
1S~--------------------------------------------------~

.r;

E 14
0)

~ 12
10
~ 8

~

:;,

~

S
4

o
Figure 4.24 output

2000

4000

SOOO

8000

10000

Comparison of the input (thin black line), estimated algorithm predicted yellow line) with the experimental output
(yexp -

(Yalgorithm -

thick pink line) for

each of the experimental Data sets 7- 9 in discrete time domain for sampling time of 50 seconds.

86

12 10

Exp data set 1

~

&J

8 6 4 2 0 0 200 400 600 800 1000 1200 1400 1600

j

1
:::J

Exp data set 2 16 14
&J ~ 12

j
,

10 8 6 4 0 200 400 600 800 1000 1200 1400 1600

J
:::J

Figure 4.25

Comparison of the input (thin black line). estimated algorithm predicted

output in continuous time domain (dark blue line). estimated algorithm predicted output in discrete time domain (yellow line). with the experimental output (Pink line). for the experimental Data sets 1- 2 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output.

87

Exp data set 3 14 12
~ ~ 10

~

j i

8 6 4 2 0 200 400 600 800 1000 1200 1400 1600

:::J

Exp data set 4 16 14 12

Sf

.~

10 8 6 4 2 0

~

:;,

j i.

,
0 200 400 600 800 1000 1200 1400 1600

Figure 4.26

Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (dark blue line), estimated algorithm predicted output in discrete time domain (yellow line), with the experimental output (pink line), for the experimental Data sets 3-4 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output.

88

Exp data set 5 5.5 5.0

~4.0
J3.5 $3.0
;:,

&I

4.5

2.5 2.0 1.5 0 100 200 300 400 500 600

Exp data set 6 6 5

~

&I

4 3 2 1 0 0 100 200 300 400 500 600

J
::.;; ;:,

i.

Figure 4.27

Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (dark blue line), estimated algorithm predicted output in discrete time domain (yellow line), with the experimental output (Pink line), for the experimental Data sets 5-6 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output.

89

Exp data set 7 5.5 5.0

~

~

4.5 4.0

J
;:)

~ .

~ 3.5
3.0 2.5 2.0 0 100 200 300 400 500 600

Exp data set 8 14 12
~10

~

]
~ :>;
;:)

8 6 4
= -

.

2 0 0 200 400 600 800 1000 1200

Figure 4.28

Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (dark blue line), estimated algorithm predicted output in discrete time domain (yellow line), with the experimental output (Pink line), for the experimental Data sets 7- 8 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output.

90

Exp data set 9
16~--------------------------------------------------~

14
~12

~

~ 0: 8 )(

E 10 o

~

::) 6
4

2

~----~~----~~------~------~------~------~----~

o

200

400

600

800

1000

1200

Figure 4.29

Comparison of the input (thin black line), estimated algorithm predicted

output in continuous time domain (dark blue line), estimated algorithm predicted output in discrete time domain (yellow line), with the experimental output (Pink line), for the experimental Data set 9 in continuous time domain - Sampling time 50 sec. The continuous time domain output is close to experimental output.

91

4.5.3

Calculation of mixed volume in the chest from parameters

With the help , of the characterization parameters, we can determine the fully mixed and the dead volume fractions of the pulp in the pulp chests (Ein-Mozaffari et ai., 2004b). Listed in Table 4.23, these volume fractions provide a valuable insight into the degree of mixing affected by the pulp chests.
T
2

=

V

(1- fK2

f.m.

or

(4.2)

V r.m .

= T2 (1- fK2
Vf.m. in liters Total volume ofthe laboratory scale chest is 64 liter (40cm x 40cm x 40cm) Inlet-Outlet position is as per config.l, Figure 4.7 (Ein-Mozaffari, 2002, 2003)

Where Q is the pulp flow rate through the chest in liter/sec

Table 4.23

The mixed and dead volumes fractions in the laboratory-scale pulp chests

based on characterization parameters obtained using Data sets 1-9.

EXP. NO

CONTINUOUS TIME DOMAIN
V f.m.

DISCRETE TIME DOMAIN
Vf.m.

1 2 3 4 5 6 7 8 9

51.12 15.30 36.90 43.42 48.93 43.35 38.66 53.88 59.19

mixed volume total volume 0.80 0.24 0.58 0.68 0.76 0.68 0.60 0.84 0.92

dead volume total volume 0.20 0.76 0.42 0.32 0.24 0.32 0.40 0.16 0.08

50.63 11.89 36.88 44.06 40.66 41.92 37.15 51.55 59.47

mixed volume total volume 0.79 0.19 0.58 0.69 0.64 0.65 0.58 0.81 0.93

dead volume total volume 0.21 0.81 0.42 0.31 0.36 0.35 0.42 0.19 0.07

92

4.6

COMPUTER USAGE AND TIME OF COMPUTATION

Because of the differential-algebraic model, the algorithm is computationally more intensive than the earlier approach based on the discrete time model. It was programmed in C++ language on Dual-Core IntelÂ® ItaniumÂ® 2 processors 1.5 GHz processor and 15 giga bites RAM. Toe application of the algorithm on a single data set took up to 110 days to complete on 3 GHz processor and 1 giga bite RAM and has to run 40 data sets. It became possible on Dual-Core IntelÂ® ItaniumÂ® 2 processors, using Intel 9.1 software in C++ language. Comparison of time for both the algorithm is given in Table 4.24 for data sets 1-5 and Table 4.25 for experimental data sets 1-9.

Table 4.24

Comparison of time taken for simulation by computer in continuous and

discrete time domain using computer generated data sets

CASE NO

CONTINUOUS TIME DOMAIN SIMULATION TIME IN SEC
WIT NOISE

DISCRETE TIME DOMAIN SIMULATION TIME IN SEC

WITH NOISE 2017952 2018291 181536 1951638 169628

WIT NOISE 454.82 461.49 108.6 447.33 105.8

WITH NOISE 452.83 458.79 106.98 448.24 106.13

1

1281382 1006856 63825 1005480 62021

2 3 4 5

93

Table 4.25 Comparison of time taken for simulation by computer in continuous and
discrete time domain using experimental data sets.

EXPERIMENT NO.

CONTINUOUS TIME DOMAIN SIMULATION TIME IN SEC

DISCRETE TIME DOMAIN SIMULATION TIME IN SEC 136.22 132.9 147.04 140.01 161.24 161.03 177.33 122.97 127.96

1 2 3 4 5 6 7 8 9

437337 505073 531631 527068 1049567 822223 1091786 1015957 673951

94

5

CONCLUSION

The identification of mixing parameters was carried out for agitated pulp chests in the continuous time domain. A robust and effective hybrid optimization algorithm, which incorporates genetic operations and gradient search was developed. The differentialalgebraic model of mixing, and the derivatives of the objective function were derived. Three of the derivatives were the state variables of governing differential equations. The identification strategy was tested by applying it to five different sets of simulated data with known mixing parameters without and with noise. These parameters matched very well with the estimated parameters determined by the algorithm. Model was validated and compared with past researchers.

After this successful validation, the mixing parameters of nine experimental data sets were determined with the average root-mean-squared fractional errors of 0.0687. Five simulated data sets were simulated on discrete time domain algorithm. Continuous time domain algorithm gave better accuracy and consistency with lower root-mean-squared value than discrete. Results of continuous time domain were also compared by simulating data set 1-3 with noise using Kammer's method for sampling time of 1 sec. Continuous time domain gave matching results with better accuracy than other two methods for small sampling time. For a higher sampling time, the results were superior to those yielded by discrete time characterization, which is applicable to data with small sampling times. This outcome brings up the utility of developed approach for effective characterization of mixing with significantly less frequent sampling. With the help of the characterization parameters, the fully mixed and the dead volume fractions of the pulp in the pulp chests were calculated. These volume fractions provide a valuable insight into the degree of mixing affected by the pulp chests.

95

6

FUTURE WORK

For future work the results can be derived more precisely if amount of iterations are increased and genetic parameters are varied. Also by using other software or parallel computing system results can be more precise. The developed strategy is expected to be very useful for continuous time domain characterization of process systems with time delays for multi-parameter and non-linear applications.

Moreover the algorithm can be checked for higher R - the recirculation effect, if industrial data are available as laboratory data do not comprise recirculation effect.

Comparison of results using different splines can be studied.

96

References
Bennington, c.P.J., Kerekes, R.J., and Grace, J.R., "The yield stress of fiber suspensions," Can J Chern Eng, 68:748-757, (1990). Bialkowski, W.L, "Process control related variability and the link to end- use performance," In "Control System Conference", pages 220-248, Helsinki, Finland, (1990). Brown, J.R., "The dynamic behavior of paper mill stock chests," South Pulp and Paper Manufac, 31:103-112, (1968). Bruce Ekel, Chuck Allison, Thinking In C++, 2nd Volume, Pearson, Prentice Hall. Coley, D.A., 1999a, An Introduction to Genetic Algorithms/or Scientists and Engineers, 2nd edition, 78 (Word Scientific, New Jercy, USA). Coley, D.A., 1999b, An Introduction to Genetic Algorithms/or Scientists and Engineers, 2nd edition, 87 (Word Scientific, New Jercy, USA). Ein-Mozaffari, F., "Macro scale Mixing and Dynamic Behavior of Agitated Pulp Stock Chests," PhD thesis, Dept of Chern & Bio Eng, Uni. of British Columbia, Vancouver, (2002). Ein-Mozaffari, F., Kammer, L.C., Dumont, G.A., and Bennington, C.P.J., "Dynamic modeling of agitated pulp stock chest," TAPPI J., 2:13-17, (2003). Ein-Mozaffari, F., Bennington, C.P.J., and Dumont, G.A., "Dynamic mixing in industrial agitated stock chests". Pulp and Paper Can., 105:41- 45, (2004a). Ein-Mozaffari, F., Kammer, L.C., Dumont, G.A., and Bennington, C.PJ., "The effect of operating conditions and design parameters on the dynamic behavior of agitated pulp stock chests". Can J Chern Eng, 82:154-161, (2004b). Ein-Mozaffari, F., Bennington, c.P.J., and Dumont, G.A., "Suspension yield stress and the dynamic response of agitated pulp chests," Chern Eng Sci, 60:2399-2408, (2005). Ein-Mozaffari, F., Chad P. J. Bennington, and Guy A. Dumont, "Optimization of rectangular pulp stock mixing chest dimensions using dynamic tests, "PEER REVIEWED PULP MIXING, TAPPI J. February 2007

97

Ein-Mozaffari, F., Chad P. J. Bennington, and Guy A. Dumont and D. Buckingham, "Measuring flow velocity in pulp suspension mixing using ultrasonic Doppler velocimetry,"Chemical Engineering Research and Design, 85(A5): 1-7,2007. F. Sanjabi, S. R. Upreti, and R. Dhib, "Estimated Control of Continuous Infrared Dryers," Drying Technology, 24: 581-587, (2006) Goldberg David E., "Genetic Algorithms in Search, Optimization, and Machine Learning," (Addison-Wesley, New York, USA) (1989). Goldberg David E., "Genetic Algorithms in Search, Optimization, and Machine Learning," (Addison-Wesley, New York, USA) (1989a). Gullichsen, J. and Harkonen, Ex., "Medium consistency technology," TAPPI J, 64:6972, (2005). Hanna J., Upreti S.R., Lohi A., E.
~Minimum

Variance Tuning of PI Controllers Using

Hybrid Genetic Algorithms," in "Mineral Process Modelling, Simulation and

Control Conference Proceedings," T. Yalcin, and H. Shang (eds.), Laurentian
University, Sudbury, Canada, June 6--7, pages 97-110, (2006). Holland, J.H., "Adaptation in Natural and Artificial Systems," University of Michigan Press, Ann Arbor, (1975). Johansson, R.x, 'Identification of continuous-time models," IEEE Trans Signal Proc, 42:887-897, (1975). Johansson, R., Verhaegen, M., and Chou, C.T., "Stochastic theory of continuous-time state-space identification," IEEE Trans Signal Proc, 47:41-51, (1999). Kammer, L.C., Ein-Mozaffari, F., Dumont, G.A., and Bennington, C.P.J. "Identification of channeling and recirculation parameters of agitated pulp stock chests," J Proc Cont, 15:31-38, (2005). Ljung, L., "System Identification: Theory for the User," PTR Prentice Hall, Upper Saddle River, USA, 2nd ed., (1999). Press, W. H., Teukolsky, S. A., Vetterling, W. T., and Flannery, B. P., "Numerical

recipes in C++. The art of scientific computing", 2nd ed., pages 719-727.
Cambridge University Press, New York, (2002). Rao, S.S., "Engineering Optimization Theory and Practice", chapter 7, pages 489--493. John Wiley & Sons, Inc., Toronto, (1996).

98

Reynolds, E., Gibbon, J.D., and Attwood, D., "Smoothing quality variations in storage chests holding paper stock". Trans Inst Chern Eng, 42:TI3-T21, (1964). Salwan Saeed, Farhad Ein-Mozaffari, * and Sirnant R Upreti., "Using Computational Fluid Dynamics Modeling and Ultrasonic Doppler Velocitymetry To Study Pulp Suspension Mixing," Ind Eng. Chern. Res.,46:2172-2179,(2007). Soderstrom, T., Fan, H., Carlsson, B., and Bigi, S., "Least squares parameter estimation of continuous-time ARX models from discrete-time data". IEEE Trans Auto Cont, 42:659--673, (1997). Sung, S. W. and Lee, I.B., "Prediction error identification method for continuous-time processes with time delay". Ind Eng Chern Res, 40:5743- 5751, (2001). Upreti S. R , Baranitharan S. Sundaram, Ali Lohi, "Estimated control determination of MMA polymerization in non-isothermal batch reactor using bifunctional initiator" Euro Polym J. (2005).06.019 Upreti S. R, Ayodeji A. Jeje, A noninvasive technique to determine peripheral blood flow and heat generation in a human limb Chemical Engineering Science 59: 4415 - 4423, (2004). Upreti, S.R, "A nctW robust technique for estimated control of chemical engineering processes," Computers and Chemical Engineering 28: 1325-1336, (2004) Upreti, S.R and Ein-Mozaffari, F., "Identification of dynamic characterization parameters of agitated pulp chests using hybrid genetic algorithm. Chemical Engineering Research and Design", 84(A3): 221-230, (2006). Walker, O.J. and Cholette, A., "Determination of the optimum size and efficiency of stock chests". Part I: The Ideal Chest. Pulp and Paper of Canada, 59:113-117, (1958). Wang, Q.G., Guo, X., and Zhang, Y., "Direct identification of continuous time delay systems from step responses". J Proc Cont, 11:531-542, (2001). Whitfield, A.H. and Messali, N., "Integral-equation approach to system identification". Int J Cont, 45:1431-1445, (1987). Wikstrom, T. and Rasmussen, A., "Yield stress of pulp suspensions: The influence of fiber properties and processing conditions". Nordic Pulp and Paper Res. J., 13:243250, (1998).

99

Yackel, D.C., Pulp and Paper Agitation: The History Mechanics and Process, 63--89 TAPPI Press, Atlanta, USA, 1990.

100


