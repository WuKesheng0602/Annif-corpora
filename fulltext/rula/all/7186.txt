DEVELOPMENT OF A SOOT CONCENTRATION ESTIMATION LIBRARY FOR INDUSTRIAL COMBUSTION APPLICATIONS USING LAGRANGIAN PARCEL TRACKING

By Raymond Alexander Bachelor of Engineering in Mechanical Engineering, Ryerson University, 2015 A thesis presented to Ryerson University in partial fulfillment of the requirements for the degree of Master of Applied Science in the Program of Mechanical Engineering

Toronto, Ontario, Canada, 2017 © Raymond Alexander 2017

AUTHOR'S DECLARATION
I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis including any required final revisions, as accepted by my examiners. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research. I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research. I understand my thesis may be made electronically available to the public.

ii

ABSTRACT
Development of a Soot Concentration Estimation Library for Industrial Combustion Applications Using Lagrangian Parcel Tracking Master of Applied Science, 2017 Raymond Alexander Mechanical Engineering Ryerson University Soot emissions from combustion devices are known to have harmful effects on the environment and human health. This project leverages existing knowledge in soot modelling and soot formation fundamentals to develop a stand-alone, computationally inexpensive soot concentration estimator to be linked to CFD simulations as a post-processor. The estimator consists of a library generated using the hystereses of soot-containing fluid parcels, which relates soot concentration to the aggregated gas-phase environment histories to which a fluid parcel has been exposed. The estimator can be used to relate soot concentration to computed parcel hystereses through interpolation techniques. The estimator shows the potential ability to produce accurate predictions with very low computational cost in laminar coflow diffusion flames. Results also show that as flame data representing a broader set of conditions is added to the library, the estimator becomes applicable to a wider range of flames.

iii

ACKNOWLEDGEMENTS
I would like to acknowledge SciNet HPC Consortium. Computations were performed on the Ryerson University Sandy Bridge computing cluster and the GPC supercomputer. SciNet is funded by: the Canada Foundation for Innovation under the auspices of Compute Canada; the Government of Ontario; Ontario Research Fund ­ Research Excellence; and the University of Toronto. I also acknowledge the Natural Sciences and Engineering Research Council of Canada (NSERC), Province of Ontario, and Ryerson Faculty of Engineering and Architectural Science for financial support. I would like to express my deepest gratitude for my graduate supervisor, Dr. Seth B. Dworkin. He provided me with valuable advice throughout my academic career. He treated me as a friend during my Master's program, which made the journey enjoyable. I would like to thank my colleagues in the Dworkin group who have made my time at Ryerson University very entertaining. I will cherish the fun and exciting memories we have shared. I would like to convey my most heartfelt appreciation for my parents. They provided me with unwavering support throughout my academic career. I thank them for the way they have raised me and everything they sacrificed for me.

iv

TABLE OF CONTENTS
 AUTHOR'S DECLARATION ....................................................................................................... ii ABSTRACT................................................................................................................................... iii ACKNOWLEDGEMENTS ........................................................................................................... iv TABLE OF CONTENTS................................................................................................................ v LIST OF FIGURES ...................................................................................................................... vii LIST OF TABLES .......................................................................................................................... x LIST OF VARIABLES ................................................................................................................. xi LIST OF ABBREVIATIONS ....................................................................................................... xii CHAPTER 1 ­ INTRODUCTION ................................................................................................. 1 1.1. Motivation ........................................................................................................................ 1 1.2. Motivation and Objectives ............................................................................................... 3 1.3. Outline .............................................................................................................................. 4 CHAPTER 2 ­ BACKGROUND RESEARCH AND LITERATURE REVIEW ......................... 5 2.1. Soot Formation Theory .................................................................................................... 5 2.2. Soot Modelling Overview ................................................................................................ 5 2.3. Two-Equation Soot Model Overview .............................................................................. 9 2.4. Method of Moments Soot Model Overview .................................................................. 11 2.5. Soot Sectional Model Overview .................................................................................... 14

v

2.6. Stochastic Soot Model Overview ................................................................................... 16 2.7. Turbulent Combustion Soot Modelling Overview ......................................................... 19 CHAPTER 3 ­ METHODOLOGY .............................................................................................. 22 CHAPTER 4 ­ TESTING, VALIDATION, AND DISCUSSION............................................... 32 4.1. Computational Cost Analysis ......................................................................................... 32 4.2. Preliminary Testing of Soot Estimator ........................................................................... 35 4.3. Testing Prediction Capabilities of Broadening Libraries ............................................... 39 4.4. Libraries Generated Using Non-Equispaced Bins ......................................................... 55 CHAPTER 5 ­ CONCLUSIONS ................................................................................................. 63 5.1. Summary ........................................................................................................................ 63 5.2. Recommendations for Future Work ............................................................................... 64 Appendix A ­ LIBRARY GENERATION CODE USING EQUISPACED BINS ..................... 66 Appendix B ­ LIBRARY GENERATION CODE USING NEB................................................. 76 Appendix C ­ MINIMUM DISTANCE DATA LOOK-UP CODE............................................. 93 REFERENCES ............................................................................................................................. 98

vi

LIST OF FIGURES
Figure 1: Flow chart illustrating development of soot estimator library. ..................................... 23 Figure 2: Illustration of Lagrangian parcel-tracking post-processor calculating instantaneous temperature along the pathline of a soot-containing fluid parcel. Left side: temperature contours of a laminar ethylene coflow diffusion flame. Right side: Plot of local temperature the soot-containing fluid parcel is exposed to along its pathline. ................................................................................. 28 Figure 3: Flow chart illustrating utilization of soot estimator library. .......................................... 31 Figure 4: Time required to generate a library and the number of data entries in that library versus the number of bins used. ............................................................................................................... 33 Figure 5: Comparison of experimentally-validated CFD computed soot concentrations with those predicted by the estimator library for the Santoro flame along the pathline of maximum soot (left) and the flame centerline (right). .................................................................................................... 36 Figure 6: Comparison of CFD computed soot concentrations with those predicted by the estimator library for the Smyth48 flame along the pathline of maximum soot (left) and the flame centerline (right). ........................................................................................................................................... 37 Figure 7: Comparison of CFD computed soot concentrations with those predicted by the estimator library for the Smyth48 flame with no soot inception along the pathline of maximum soot (left) and the flame centerline (right). .................................................................................................... 39 Figure 8: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 40 bins) for the pathline of maximum soot for the Smyth48 flame with no soot inception. ........................................................................................ 42

vii

Figure 9: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 bins (four parameters) for the Smyth48 flame with no soot inception along the pathline of maximum soot. ......................................................................................................................... 44 Figure 10: Comparison of CFD computed soot concentrations with those predicted by library `14' (left) and library `1-5' (right) from Table 3 for the Smooke32 flame ...................................... 47 Figure 11: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 bins (four parameters) with those by library `1-11' of 100 bins (four parameters) for the pathline of maximum soot............................................................................................................................... 48 Figure 12: Differences (%) between predicted peak soot concentrations by libraries of 40 bins (four parameters) with those by libraries of 100 bins (four parameters) for the pathline of maximum soot for the Smyth48 flame with no soot inception. ............................................................................. 49 Figure 13: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 100 bins (four parameters) for the Smyth48 flame with no soot inception along the pathline of maximum soot. ........................................................................................................... 50 Figure 14: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 bins (four parameters) with those by library `1-11' of 40 bins (five parameters) for the pathline of maximum soot............................................................................................................................... 53 Figure 15: Differences (%) between predicted peak soot concentrations by libraries of 40 bins (four parameters) with those by libraries of 40 bins (five parameters) for the pathline of maximum soot for the Smyth48 flame with no soot inception. ............................................................................. 54 Figure 16: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 bins (five parameters) for the Smyth48 flame with no soot inception along the pathline of maximum soot. ......................................................................................................................... 55

viii

Figure 17: Comparison of the distribution of data entries within the bins dividing the range of C2H2_h between equispaced bins (left) and the NEB approach (right). ........................................ 56 Figure 18: Comparison of the distribution of data entries within the bins dividing the range of C6H6_h between equispaced bins (left) and the NEB approach (right). ........................................ 57 Figure 19: Comparison of the distribution of data entries within the bins dividing the range of Th between equispaced bins (left) and the NEB approach (right). .................................................... 57 Figure 20: Comparison of the distribution of data entries within the bins dividing the range of O2_h between equispaced bins (left) and the NEB approach (right). .................................................... 58 Figure 21: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 equispaced bins (five parameters) with those by library `1-11' of 40 NEB (five parameters) for the pathline of maximum soot. ........................................................................................................... 60 Figure 22: Differences (%) between predicted peak soot concentrations by libraries of 40 equispaced bins (five parameters) with those by libraries of 40 NEB (five parameters) for the pathline of maximum soot for the Smyth48 flame with no soot inception. .................................. 61 Figure 23: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 NEB (five parameters) and 40 equispaced bins (five parameters) for the Smyth48 flame with no soot inception along the pathline of maximum soot. ............................................. 62

ix

LIST OF TABLES
Table 1. Burner dimensions and flow conditions of fuel and air streams for experiments gathered ....................................................................................................................................................... 24 Table 2: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries. ................................................................. 41 Table 3: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 100 bins) for the pathline of maximum soot for various flame data tested among broadening libraries. ................................................................. 45 Table 4: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (five parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries. ............................................................................. 51 Table 5: Differences (%) between CFD computed peak soot concentrations with those predicted by a NEB post-processor library (five parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries. ................................................................. 59

x

LIST OF VARIABLES
 C2H2_h C6H6_h fv MFh O2_h OHh Th The fraction of soot surface sites available for chemical reaction Integrated local acetylene concentration along the pathline of a soot-containing fluid parcel with respect to time (g·s/cm3) Integrated local benzene concentration along the pathline of a soot-containing fluid parcel with respect to time (g·s/cm3) Soot volume fraction (ppm) Integrated local mixture fraction along the pathline of a soot-containing fluid parcel with respect to time (g·s/g) Integrated local oxygen concentration along the pathline of a soot-containing fluid parcel with respect to time (g·s/cm3) Integrated local OH concentration along the pathline of a soot-containing fluid parcel with respect to time (g·s/cm3) Integrated local temperature along the pathline of a soot-containing fluid parcel with respect to time (K·s)

xi

LIST OF ABBREVIATIONS
CPU CFD DNS GHG GPC HACA HP IPCC LES MOM MOMIC Mtce NEB PAH PSR RAM RANS Central Processing Unit Computational Fluid Dynamics Direct Numerical Simulation Green House Gas General Purpose Cluster Hydrogen Abstraction ­ C2H2 Addition High pressure Intergovernmental Panel on Climate Change Large-Eddy Simulation Method of Moments Method of Moments with Interpolative Closure Million tonnes of coal equivalent Non-Equispaced Bins Polycyclic Aromatic Hydrocarbons Perfectly Stirred Reactor Random Access Memory Reynolds Averaged Navier-Stokes

xii

CHAPTER 1 ­ INTRODUCTION
1.1. Motivation
Canada's total energy consumption in 2012 was 2.3 percent of the global amount. Furthermore, Canada ranks among the highest in energy consumption on a per capita basis [1]. This large energy demand can be partially attributed to Canada's cold climate for which more energy is needed to heat homes and businesses. Also, people are required to travel further distances due to Canada's large land mass and sparse population, which increases the energy demand of the transportation sector. Combustion processes have a key role in burners, power production devices, and the transportation industry. Although there has been a recent global trend to develop renewable clean energy sources such as hydro-electricity as well as wind and solar power, natural gas consumption is still projected to increase by 2040 [1]. While global coal consumption has steadily decreased in recent years, over 5000 Mtce is still being consumed [2]. Furthermore, energy consumption related to air transport is expected to double by 2040 [3]. The increasing rate of air transportation is alarming since there is currently no feasible energy substitute for the high energy content of jet fuel. Therefore, a heavy reliance on fossil fuels can be expected for the next few decades. In accordance with the Paris Agreement of 2016 [4], governments around the world have committed to mitigating their impact on climate change by reducing their harmful pollutant emissions that include Green House Gases (GHG). The majority of Canada's damaging emissions are the result of combustion of fossil fuels that include crude oil, natural gas, coal, gasoline, jet fuel and diesel. In 2013, it was estimated that 81 percent of Canadian GHG emissions were the result of combustion of fossil fuels [1]. The remaining emissions come from non-energy sources

1

such as agricultural and industrial processes, and waste handling. Although GHG emissions are the main focus of the Paris Agreement, black carbon particulate (soot) is another dangerous byproduct of combustion processes involving hydrocarbon fuels. The emission of combustion-generated soot is a serious threat to human health and a growing concern. Populations living in dense urban areas, especially near airports, are at a greater risk to suffer health defects. It has been shown that aircraft engines emit the highest amount of soot and the largest soot particles with the lowest oxidative reactivity during takeoff [5]. Populations exposed to higher concentrations of soot particulate show higher rates of lung and heart diseases because of high concentrations of pollutants that contain compounds such as nitrogen oxides, carbon monoxide, and soot particles in the atmosphere [6, 7]. Furthermore, both small and large soot particles can cause significant environmental problems. Small soot particles in the atmosphere absorb sunlight and warm the surrounding air, while larger and darker particles that fall to the ground accelerate the melting of snow and ice, since dark particles absorb sunlight [8, 9]. This acceleration increases the rate of which water levels rise. Radiative forcing is the difference between the energy from the sun that enters the Earth's atmosphere and the energy that is reflected back into space. Jacobson [10] estimated the direct radiative forcing caused by soot to be 0.55 W/m2. This forcing impact would rank soot as the second leading contributor to climate change behind CO2, which is estimated by the Intergovernmental Panel on Climate Change (IPCC) to have a radiative forcing impact of 1.56 W/m2 [11]. Although the level to which soot is contributing to climate change is disputed, it is acknowledged that soot emissions are a significant source of climate change [12, 13]. As a consequence, stricter soot emission regulations are being imposed and more are expected in the near future [14].

2

Industries and combustion device designers are being required to reduce soot particles emitted from combustion. Therefore, searching for and developing techniques to reduce soot formation and emissions has become an important concern for researchers and industry. Experimentally testing possible solutions for jet engines and gas turbines is extremely expensive so a modelling approach is preferred. However, the modelling of soot in industrial combustion devices can be quite challenging. Soot evolution is an exceedingly complex phenomena for which there are still many unknowns being currently researched. Soot emissions are measured in parts per million (ppm). The small values of soot emissions make it very difficult to generate predictions that are correct to the same order of magnitude. Lastly, the complex geometries of gas turbines or engines require a tremendously high mesh count to resolve turbulent mixing. Consequently, implementing a detailed soot model into the simulation to achieve accurate predictions will require immense computational resources.

1.2. Motivation and Objectives
In the design of industrial combustion devices, such as engines, detailed numerical modelling and Computational Fluid Dynamics (CFD) simulations have become commonplace. Current capabilities allow for simulation of the chemical reactions, ignition, and burning of fuels in turbulent flow inside realistic engine geometry at high, but tractable computational cost. Data from these simulations aid in the engine design, construction, and improvement processes. However, the inclusion of soot formation within these simulations is challenging, and if it is to be reliably accurate, it incurs an intractably high computational cost. Thus, it is a major objective of the combustion industry and research community to develop novel numerical techniques to model, predict, or estimate soot concentrations. The objective of this work is to develop a soot concentration (volume fraction) estimator to be used as a post-processor of CFD data, to aid 3

combustion device designers in reducing emissions. This thesis does not propose a new model for soot formation and oxidation, rather it seeks to develop a system of library generation that can be used to estimate soot properties using correlations and interpolation. The goal of this technique is to produce reasonably accurate predictions of soot concentration with low computational cost and without modelling the physical processes and phenomena. These objectives are in stark contrast to the prevailing literature which overwhelmingly emphasizes model development and striving for more computationally efficient modelling techniques. The main focus of the present study is to investigate the predictive capabilities of the estimation library for laminar coflow diffusion flames of varying dilution and pressures.

1.3. Outline
Chapter 2 of this thesis presents background information and literature review related to soot formation theory and current soot modelling techniques. Chapter 3 discusses the methodology used to develop and utilize the soot concentration library. Chapter 4 presents the results of testing the soot concentration estimation library for the various flames considered. Lastly, Chapter 5 discusses the conclusions of the thesis and presents recommendations for future work.

4

CHAPTER 2 ­ BACKGROUND RESEARCH AND LITERATURE REVIEW
2.1. Soot Formation Theory
Soot particle physics is considered to be extremely complex. Soot formation is viewed to proceed in a four-step sequence: formation of precursor species, particle inception, surface growth and particle agglomeration, and particle oxidation. In diffusion flames, soot has been observed to form in regions of temperature ranging between 1300 K and 1600 K [15]. In the first step, fuel is decomposed then grows into polycyclic aromatic hydrocarbons (PAH). Although specific soot precursors and detailed chemical mechanisms are still the subject of current research, it is acknowledged that the formation of ring structures and their growth through reactions with acetylene are important processes [16, 17]. The particle inception step involves the growth of the rings by both chemical means and coagulation. As small primary soot particles are exposed to many species in a flame, they experience surface growth and agglomeration. Lastly, the soot particle passes through an oxidizing region where it incurs destruction. If all the soot particles are oxidized, the flame is termed nonsooting, whereas incomplete oxidation yields a sooting flame. The amount of soot formed in a diffusion flame is highly dependent on the fuel type. A fuel with higher carbon content will generally produce more soot.

2.2. Soot Modelling Overview
Soot formation has been one of the most important issues related to combustion devices. Therefore, it has been widely studied for many years. Although studying soot formation always has been important, because of the complexity of its modelling, it is not understood well. Studies on soot formation processes are mostly focused on investigating the relationship of hydrocarbon

5

fuels to soot, the science behind this relationship, and how it effects soot production in different combustion process. The amount of soot particles formed depends on the combustion process, temperature, pressure and also the species which exist in the process. Furthermore, the final mass of particles emitted from the system could vary based on the particle after-burning process and oxidation, which depends on the combustion conditions [18]. One of the most common approaches to studying soot is the development of modelling capabilities of soot formation and oxidation. Fundamentally, modelling enables researchers to understand soot formation and oxidation mechanisms better. In industry, combustion device designers are looking for soot formation and oxidation models that enable them to improve the combustion devices' efficiency and reduce emissions. This process is achieved through developing an understanding of the conditions that lead to soot formation and then tuning engine or device conditions to avoid such situations. They try to enhance thermal device performance by improving radiative heat transfer, mixing, or by reducing the amount of soot emitting from their devices in order to meet more particular environmental standards. Furthermore, flame dynamics simulation programs can better predict fire propagation if they use soot formation and oxidation models [19, 20]. Soot formation is considered to be an extremely complex phenomenon that includes chemical kinetics, thermodynamics, particle dynamics, heat transfer, and multiphase flow. In order to understand this complexity, it is necessary to consider the progress of numerical modelling of combustion and soot formation that has been made previously. Early techniques used in the literature to model soot include the two-equation formulation [19, 21], the method of moments (MOM) [22, 23], and stochastic method [24, 25]. As the understanding of soot formation and

6

computational power have improved over the years, so has the complexity of soot models. Many of the works studied have implemented the sectional method to model soot formation and kinetics [26-35]. While these works have focused on atmospheric pressure flames, recently studies on modelling soot at elevated pressures [36, 37] and micro-gravity have been conducted as well [38]. Despite the variation in model types in the literature, there are some common steps of modelling soot formation and oxidation. The first component of an accurate model is the prediction of the flow field by solving the Navier-Stokes equations. Solving the gas-phase chemistry equations, soot-gas chemistry, and soot aerosol dynamics equations are necessary to model soot structure as well as nucleation and surface growth/oxidation reactions [36]. Modelling thermal radiation by solving radiative heat transfer is also normally needed for accurate temperature field prediction [39]. In recent years, many researchers have used these steps in order to model soot formation and oxidation [23-27, 29-33, 40]. According to Kennedy [20], soot models can be divided into three classifications: empirical soot models, semi-empirical soot models, and detailed soot models. Empirical soot models come from experimental phenomenological correlations of soot formation rates with combustion conditions such as pressure and temperature [41, 42]. These kinds of models are easily understandable, easy to implement, and they do not require significant computational cost. The low computational cost requirement is the main reason that this kind of modelling is so common in the literature related to gas turbines and diesel engines, as the geometrical complexity of these devices already pushes the limits of modern computational resources. Although the application of the aforementioned models is common, the loss of accuracy and comprehensive understanding

7

into the soot formation processes are its weakness. Empirical models will not be discussed in greater detail in this thesis. Semi-empirical soot models are purported to incorporate physical phenomena, chemical aspects, and also experimental data. Fairweather, Jones, and Lindstedt [43] proposed a twoequation soot model, which has been used widely. This model neglects the aggregate structure and polydispersity of soot particles; thus, although it can give some insight into soot formation mechanisms, it is not detailed enough to deliver soot properties such as aggregate structure and size distribution. Another weakness of this model type is that it does not involve the resolution of PAH chemistry in a detailed manner. Therefore, researchers cannot use this type of model to study the interactions of aromatic species and soot. Furthermore, these models require the use of empirically tuned parameters, and are not broadly applicable when applied to combustion conditions that differ from those for which the model was developed. These models often fail to predict trends or even order-of-magnitude values for soot concentrations. The estimator presented in this thesis seeks to address this issue by being developed to be applicable to a wide range of industrial combustion devices. As knowledge of soot formation processes advanced, the complexity of soot models increased. Various approaches have been developed for detailed modelling of soot formation under simultaneous nucleation, coagulation, oxidation and surface growth processes. Some of the methods in the literature that represent these approaches include the abovementioned method of moments, sectional method, and stochastic method. Investigating the mean properties and the size distribution of soot particles can be achieved using a sectional aerosol dynamics model. Park et al., [31] proposed an advanced sectional model that solves two equations (number densities of

8

both primary particles and aggregates) per section, in order to model the evolution and fractal-like structure of soot. Soot formation in plug flow reactors [31] and shock tubes [44] have been modeled with high accuracy using the aforementioned model in addition to laminar flames [2830]. However, it should be noted that the improvement in accuracy of detailed soot models comes at the expense of high computational cost. For designing industrial combustion devices, detailed CFD simulations are typically utilized. Commonly used models include the flamelet approach [45] and inter-layer diffusion model [46]. These models are capable of simulating chemical reactions, the burning of fuels, ignition and other flow/combustion processes in a real engine. Combustion device designers can use the data from simulations to evaluate potential design modifications and make product performance more efficient. As mentioned previously, studying and simulating soot formation has high computational cost, and is considered to be quite challenging; as a result, it is neglected in most industrial device simulations. This is the main issue the work in this thesis attempts to address. The next few sections will discuss semi-empirical and detailed soot models in greater detail.

2.3. Two-Equation Soot Model Overview
The two equations of the semi-empirical soot model consist of one equation for the soot volume fraction or soot density, and the other equation for the soot number density. This model has been used extensively in the literature to model soot formation in diesel flames [47-49]. The two equations take the general form as follows:

9

% = ( + * - , - 

Eq. (2.3.1)

 = ( - * 

Eq. (2.3.2)

where % is the soot species density and N is the soot number density. Inception, surface growth, oxidation via O2, and oxidation via OH are denoted as ( , * , , , and - , respectively in Equation 2.3.1. Inception and coagulation are denoted as ( and * , respectively in Equation 2.3.2. This model is able to reduce computational cost by using empirical models for the source terms of Equations 2.3.1 and 2.3.2. The work of Leung et al., [50] uses such an approach to predict soot formation in nonpremixed flames. They consider soot inception to be exponentially dependent on temperature and linearly dependent on acetylene concentration. Surface growth is also considered to be exponentially dependent on temperature and linearly dependent on acetylene concentration but also a function of surface area, which is based on the number density and density of soot. Their soot oxidation model is based on the work of Lee et al., [51] and is an exponential function of temperature, a function of surface area, and a linear function of oxygen concentration. As for the source terms in Equation 2.3.2, soot nucleation is used for ( and agglomeration is used for * . Agglomeration is modeled to have a square dependence on number density and a linear dependence on temperature. The results of the work showed qualitative and quantitative agreement for soot volume fraction, particle growth, and number density in ethylene diffusion flames at atmospheric conditions.

10

For a review of more recent applications of the two-equation soot model, the work of Cai et al., [52] should be considered. This work aims to predict soot in both hydrocarbon diesel and biodiesel engine combustion with the same model. The general theory of the model follows the same approach discussed previously. For further detail into which models were used for the source terms, refer to [52]. After reviewing the two-equation soot model of Cai et al., [52], the strengths and weaknesses of this soot model may be examined. A sensitivity analyses of the tuning parameters showed that soot volume fraction had the highest sensitivity when changes to the tuning parameters associated with surface growth were made. This result would indicate that surface growth is the more dominant mechanism for soot formation. This model was also able to predict soot fields within an order of magnitude of measured data for diesel and biodiesel jets. However, the accurate predictions were only possible once all the tuning parameters had been optimized for burner geometry and fuel type, which demonstrates the limitations of the two-equation soot model. It cannot be applied to a wide variety of applications without altering the tuning parameters. With advances in computing power, it would seem that the use of semi-empirical soot models will begin to decline. The advantage of the two-equation soot model is the reduction of computational cost but that comes at the expense of loss of predictive accuracy. As computers become more powerful, engineers are less likely to make that trade-off.

2.4. Method of Moments Soot Model Overview
To review how soot formation is modeled using the MOM, the work of Zhong et al., [23] is investigated. This study proposed a comprehensive and reduced chemical mechanism for a three-dimensional combustion simulation, describing the formation of PAHs in a direct-injection diesel engine. Zhong et al., [23] model soot formation by solving the Smoluchowski master

11

equation with the MOM. Using this approach, the dynamics of soot formation can be described by the following equations:

1 = 1 - 1 

Eq. (2.4.1)

( = ( + ( 

Eq. (2.4.2)

* = * + * + * 

Eq. (2.4.3)

5 = 5 + 5 +  5 

Eq. (2.4.4)

where , ,  are the nucleation, coagulation, and surface-growth terms, respectively,  is the reaction time, and  is the moment order (0 ­ 5). The source terms in Equations 2.4.1 to 2.4.4 are based on detailed physical and chemical submodels for the soot formation processes. Detailed information on which submodels were utilized can be found in [23]. A six-moment model was used in the study where 1 represents the soot number density, ( represents the soot mass density, and higher moments have no physical

12

significance. A six-step reaction mechanism for soot growth by surface reactions and soot oxidation was used, based on the work of [53]. The size moment of soot particles, average diameter, total surface area, and soot volume fraction are described by Equations 2.4.5 to 2.4.8, respectively:
%<<= %<<= %<<= 5 = 5 /1

Eq. (2.4.5)

 = 1 (

(/,

Eq. (2.4.6)

 = 1 * (

*/,

%<<= 1

Eq. (2.4.7)

B = 1 , ( 1 /6

Eq. (2.4.8)

where 1 is the diameter of the soot-initiation core. This soot model was coupled with a 3-D CFD code with a FLUENT solver to simulate characteristic soot parameters such as particle number density and average diameter. The results of the model yielded soot number density values that were approximately 103 times smaller than the experimental results. This discrepancy indicates that the model is not a good tool to predict soot number density quantitatively, although it is able to capture the trends seen in the experimental measurements reasonably well. It was made clear that the soot model presented in this study is sensitive to the assumptions made in the submodels. This soot model can capture the basic physics of diesel combustion but needs further development to improve its predictive capabilities. Overall,

13

the MOM soot model is straightforward and easy to implement into a simulation. It also has the benefit of computational efficiency by only solving for a finite number of lower order moments, but can be biased by the initial assumptions made, thus affecting the accuracy of the results.

2.5. Soot Sectional Model Overview
To review how the soot sectional model is developed, the implementation of a sectional soot model by Dworkin and coworkers will be discussed [25-27]. This soot model assumes soot particles may be approximated as aggregates of equisized carbon spheres, and that the mean free path of the gaseous mixture is much larger than the largest soot spheroid. First, the minimum and maximum particle mass must be determined to establish a range. This range is then divided logarithmically into a specified number of bins or `sections'. The consequence of having more sections is an increase in computational cost. Too few sections will degrade accuracy. The second assumption this soot model employs is that as long as the number of sections is sufficiently large, spheroids of differing diameter within a given section do not exhibit differing aerosol dynamical qualities. The soot sectional mass equation is given as:



F F F 1   = - 5 + H - F F,5 - F F,H + F      

Eq. (2.5.1)

where  is the density of the mixture, 5 and H represent the radial and axial components of velocity, respectively, F represents the sectional mass fraction within the lth soot section,

14

F,5 and F,H are the particle diffusion velocities in the radial and axial directions, respectively, and F is the rate of change of sectional mass due to inception, coalescence, surface growth, and oxidation. For a more detailed review of how the soot model treats inception, coalescence, surface growth, and oxidation, refer to [28]. To investigate the predictive capabilities of the soot sectional model, the results of Dworkin et al., [30] will be examined, in which an enhanced PAH growth model is applied to soot formation in a laminar, coflow, ethylene/air diffusion flame. Alpha () is an empirical constant for the fraction of soot surface sites available for chemical reaction in the soot formation rate equation that is tuned for each model. The results of simulations from the mechanism proposed in the paper at  = 0.078 and the mechanism of Appel et al., [53] at  = 1.0 are compared to experimental data. The temperature profiles predicted by both mechanisms are nearly identical and reproduce the experimental data very well. As for the acetylene profiles, the overall shape, trend, and magnitude are predicted quite well. Considering the OH mole fractions, both mechanisms can reproduce the measured data at z = 0.7 cm but overpredict at z = 7 cm by 30 ­ 44%. The numerically predicted profile of OH mole fraction is also shifted toward the centerline by approximately 0.8 cm. As for soot volume fraction, both mechanisms reproduce the shape and magnitude of the measured data with slight variations in peak value and location. Overall, this study showed that the soot sectional model has good predictive capabilities for laminar, coflow, ethylene/air diffusion flames. Eaves et al., [54] used an updated version of the same soot sectional model to study high pressure, laminar, ethane/air coflow diffusion flames at pressures of 2, 5, 10, and 15 atm. The main

15

trends observed in the measured data are reproduced well by the computed simulations. The soot volume fraction increases with pressure on both the wings and centerline of the flame. The model also captures the trend of the distribution of high volume fractions of soot on the centerline at 2 atm moving towards the wings at higher pressures. The model accurately predicts the thinning of the flame at higher pressures. The prediction of the peak soot volume fraction on the wings and centerline is at a greater height above the burner and greater radius than what is seen in the experimental data. These inaccuracies worsen with increasing pressure. Lastly, the flame height is overpredicted in the simulations and once again, this inaccuracy worsens at higher pressures. Overall, the soot sectional model does an adequate job of predicting soot volume fraction at elevated pressures for laminar, coflow, ethane/air diffusion flames. However, the soot sectional model is weakened by the assumptions made and its dependence on tuning the alpha parameter. Therefore, the soot model will struggle to be applicable to a distinct range of combustion systems highlighting the need for a soot estimator that can be used for any combustion device with no modifications needed.

2.6. Stochastic Soot Model Overview
A stochastic method in general terms refers to using probability theory to analyze a given system. The most common method is termed the Monte Carlo analysis. To investigate how this statistical method is applied to soot modelling, the work of Balthasar and Kraft [55] will be examined. Balthasar and Kraft [55] outline a direct simulation Monte Carlo algorithm to calculate the particle size distribution function of soot particles in laminar premixed flames. First, the rates of particle events such as inception, coagulation, condensation, surface growth, and oxidation by O2 and OH are calculated. The source terms are taken from the computed CFD profiles by transforming the spatial coordinate into a time coordinate using the known velocities. Depending 16

on these rates, the individual time steps are determined using an exponentially distributed random variable. One of the events is chosen probabilistically relative to their rates, then the appropriate number of particles required to perform this event is determined according to the particles' individual rates. Once the step is performed, the state of the particle system is updated and a new time step is determined. However, the system of stochastic particles in the algorithm does not represent the entire collection of soot particles. Therefore, one stochastic particle represents a certain number of soot particles depending on a parameter, N, which must be chosen for each calculation. The choice of N has a trade-off between accuracy and computational cost. To enhance the performance of the algorithm, researchers utilize the concept of majorant kernels and fictitious jumps. For further detail on this stochastic soot model, refer to [55]. Balthasar and Kraft [55] compare the effectiveness of a MOM model to their developed stochastic model for soot number density and soot volume fraction. One of the drawbacks of the MOM mentioned in their study is that the rates of the moments cannot be solved in a straightforward sense. Fractional moments appear in the rate terms which are calculated by interpolating between the moment orders. Furthermore, approximations have to be used because the number density of particles in the smallest size class is not explicitly known. The physics models describing formation and oxidation of soot particles can be implemented in the stochastic approach with ease and no assumptions have to be made. Also, the method allows for more complex treatment of burnout of particles. This burnout of the smallest particles produces a 10% reduction in number densities and soot volume fraction. The flame investigated is a fuel rich premixed flame where oxidation does not play a big role. The effect of burnout will be more prevalent in lean conditions as seen in diesel engine and gas turbines. Therefore, the stochastic method is expected to yield more accurate results in terms of burnout of soot particles in these 17

devices. However, if the mesh of the geometry is composed of too many cells, it may be computationally intractable to employ a stochastic model in such simulations. Thus, a soot estimator that is applicable to industrial combustion devices and maintains low computational cost would be a very useful asset for a combustion device designer. Another use of a stochastic soot model was employed by Patterson et al., [56] to higher pressure flames. A 10 bar laminar, premixed ethylene flame simulation was compared with a MOM simulation and experimental data from [53]. Results show that the stochastic algorithm employed by Patterson et al., [56] produced results within a factor of 2 to those generated by the established Method of Moments with Interpolative Closure (MOMIC) technique. Both simulations had a noticeable difference with the experimental data, which points to the limitations of current understanding of soot formation mechanisms. The differences between the stochastic and MOMIC models is attributed to the rates being expressed as functions of the properties of individual particles in the stochastic model while the MOMIC model, requires all rates to be expressed in terms of lower integer order moments of the particle mass distribution. The stochastic soot model cannot produce the full size distributions of particle populations, which are important to those looking to understand pollution from diesel engines. Some of the advantages of the stochastic model are that arbitrarily precise solutions of the model equations are possible, and one can estimate the numerical error and control it by varying the parameters of the numerical method. Also, simulations of processes at the individual particle level are possible because the particle distribution is represented by a sample of particles. Lastly, the stochastic soot model can include extremely complex descriptions of the internal particle structure, but a flame with many physical events involving soot particles will carry a very high computational cost. Reducing the

18

computational resources required to simulate soot in the complex geometries of gas turbine combustors is the motivation for the work in this thesis.

2.7. Turbulent Combustion Soot Modelling Overview
The primary focus of this thesis is the development of a soot concentration estimator for industrial combustion applications. Turbulent combustion is prevalent in industrial combustion devices; therefore, to better contextualize the present thesis it is important to consider the advancements in soot modelling with respect to turbulent combustion. Reduced-order modelling is one technique that has been used to simulate aircraft combustors. The methodology is to model a series of perfectly stirred reactors (PSR) that exchange mass and combine an empirical soot model with this PSR network [57]. This model is very computationally inexpensive. However, it is empirical in nature; thus requiring significant tuning of the PSR network and soot model parameters to achieve reasonable predictions. A reduced-order model based on a specific combustion geometry cannot be applied to another. Therefore, reducedorder modelling is not widely applicable to a distinct variety of industrial combustions devices. Other attempts to model soot fields in aircraft combustors have used Reynolds Averaged Navier-Stokes (RANS) CFD simulations coupled with the aforementioned semi-empirical or detailed soot models [58-60]. However, these models have not been able to predict soot emissions with any reliability and the predictions of soot volume fraction at the combustor exit seldom achieve accuracy in the same order of magnitude as experimental measurements. These inaccuracies can be attributed to the lack of dependability in predicting turbulent mixing using RANS. For this reason, there has been plenty of research in Large Eddy Simulation (LES), which can predict turbulent mixing much more accurately.

19

To understand the capabilities of LES, the work of Koo et al., [61] is reviewed. In this work, a LES framework was used to examine soot formation in a model aircraft combustor with swirl-based ethylene fuel and air injection. This model was able to capture the swirling flow in the combustor in addition to the strong shear layers associated with the swirl-based injection of fuel. Although the soot volume fraction was predicted reasonably well, the authors do note that quantitative differences are difficult to interpret given the complexities of the flow. Furthermore, it is important to consider the computational cost of this model. This model utilized a detailed chemical mechanism [62] and a hybrid MOM soot model [63]. However, the computational mesh comprised five to seven million cells, which is relatively small compared to simulations of industrial combustion devices. The computations were performed on 512 central processing units (CPU) with each simulation taking roughly 200 hours. The large amount of compute time demonstrates the extremely high computational cost associated with detailed modelling of soot in combustion devices. A method more accurate than LES is Direct Numerical Simulation (DNS). To assess the effectiveness of this method, the work of Attili et al., [64] is reviewed. In this work, a threedimensional DNS of planar n-heptane/air turbulent jets is constructed to investigate the effect of the gas-phase species diffusion model on flame dynamics and soot formation. The simulation uses a simplified approach where the Lewis number, the ratio between the diffusivity of heat and that of species mass, is assumed to be unity for all gas-phase species. A hybrid MOM [63] is used to describe soot formation wherein the effects of gas-phase and soot radiation are neglected in the model. The authors note uncertainties associated with the models for the chemistry of PAH and soot formation, which emphasizes the complexity of soot formation and the many unknowns combustion researchers are investigating. Combustion was modeled using a reduced mechanism 20

comprising 47 species and 290 reactions [62]. The computational domain was discretized into approximately 500 million points. Although the soot predictions are quite accurate, the computational resources needed for the simulation are immense. The simulation was performed on 65,536 CPUs and yielded a computational cost of roughly 18 million core hours. This extreme requirement of computational resources is not manageable for most applications for which soot emissions predictions of combustion devices are sought. The studies on soot formation processes considered here are mostly focused on investigating the relationship between hydrocarbon fuels and soot, and how it effects soot production in different combustion processes. A preponderance of these studies provides valuable understanding that can be applied to the development of an estimator. For example, the characteristic time of soot formation is long compared to that of combustion kinetics, and thus local conditions cannot be used to correlate soot properties within a library. Instead, fluid parcel histories throughout the entire combustion system need to be considered. Furthermore, the final mass of particles emitted from the system can vary based on the particle after-burning process and oxidation, which depend on the combustion configuration [18]. The current thesis work has leveraged this understanding to develop a computationally efficient stand-alone fluid parcel tracking post-processor, capable of predicting soot concentrations in industrially-relevant configurations.

21

CHAPTER 3 ­ METHODOLOGY
Since the main goals of this study are designing and generating a soot concentration estimator that does not rely on additional CFD modelling, choosing the appropriate strategy and methods which provide a tool of low computational cost, ease of use, and high accuracy are the primary objectives. This section describes the general theory and process behind the estimator's development and its associated implementation. Steady, axisymmetric, laminar coflow diffusion flames, among different combustion configurations [19, 30, 54, 65], have a reasonably simple flow field and hence are pertinent to study both numerically and experimentally. Moreover, a platform for analyzing the evolution of soot aggregates and the relationships between soot formation and gas-phase chemistry in multidimensional scales can be provided by investigating these flames. This kind of flame provides opportunities to investigate both soot formation and oxidation processes by encompassing regions of soot nucleation and also soot oxidation [66]. Furthermore, three-dimensional measurements of flame and soot quantities can be facilitated since both soot formation and oxidation in these flames cover a wide region [67]. The aforementioned reasons have motivated researchers to pay attention to this type of flame. Thus, laminar coflow diffusion flames are systems for which there is an abundance of experimental data that can be accurately modelled using CFD; therefore, they present an appropriate initial testing bed for new estimator development. Referring to Figure 1 below, the first step in the development of the estimator is to gather validated flame simulation and soot formation data, which can be used to populate the library. The flames used initially in this study are the laminar coflow ethylene diffusion flames studied originally by Santoro et al., [68], Smyth and Shaddix [69], and the diluted ethylene flames studied

22

by Smooke et al., [33], hereafter known as the Santoro, Smyth, and Smooke flames, respectively. The burner dimensions and flow conditions of the experiments are summarized in Table 1 below. The numerical values contained in the Smooke flame names represent the ethylene dilution ratio (for example, `Smooke32' refers to the Smooke flame with 32% ethylene in the fuel stream by mole). The numerical values contained in the Smyth flame name represent the fuel velocity in the burner.

1. Experiments and models of soot formation in flames

2. Build knowledge of soot formation

3. Retrieve or compute validated CFD data for multiple flames

4. Propose library variables and dimensionality

5. Compute variable histories using Lagrangian postprocessor

6. Populate library with correlations of variable history data Figure 1: Flow chart illustrating development of soot estimator library.

23

Table 1. Burner dimensions and flow conditions of fuel and air streams for experiments gathered [33, 68, 69].
Flame Santoro Smooke32 Smooke60 Smooke82 Smyth41 Smyth46 Smyth48 Inner Diameter (mm) 11.1 4.0 4.0 4.0 11.0 11.0 11.0 Outer Diameter (mm) 101.6 50.0 50.0 50.0 102.0 102.0 102.0 Air Velocity (cm/s) 13.3 35.0 35.0 35.0 8.7 8.7 8.7 Fuel Velocity (cm/s) 5.06 35.0 35.0 35.0 4.1 4.6 4.8 Fuel Stream Composition 100% C2H4 32% C2H4/68% N2 60% C2H4/40% N2 82% C2H4/18% N2 100% C2H4 100% C2H4 100% C2H4

The second step in the estimator development is to use the experimental and validated numerical data to build on the existing knowledge of soot formation. As new findings related to soot formation processes are made, they can be implemented into estimator development to improve performance. A careful review of classical works from Santoro et al., [68], Smyth and Shaddix [69], and Smooke et al., [33] informs the varying nature of soot formation in these flames, and the range of conditions that lead to their differing soot formation characteristics. Step three of estimator development is to generate or retrieve validated CFD data for multiple flames. The purpose of using multiple flames is to broaden the predictive applicability of the estimator for various systems. Coworkers have been using an Eularian CFD approach to predict important local variables such as soot properties, fluid velocities, temperature, and species concentrations in flames [54]. The various detailed CFD data sets generated over the past seven years by Dworkin and coworkers [26, 27, 30, 36, 54, 66, 70] are validated against experimental data, and the associated understanding of soot formation forms the basis of the estimator development. It should be noted that while these studies contain various levels of semi-empirical modelling, the computed soot volume fractions are well validated. Thus, these data sets can be used to relate local soot concentrations to flow hysteresis, and are therefore valuable for library generation.

24

Step four of the estimator development is to prescribe the library dimensionality and which variable hystereses to use in its generation. From a purely theoretical point of view, the local instantaneous formation and destruction rates of soot particles can be written as a deterministic function of local flow field characteristics as shown in Equation 3.1.

B () = (  , S  ,   , B  , %  , ... ) 

Eq. (3.1)

T is the temperature experienced by the fluid parcel that may contain soot, yi is the mole fraction of species i in the immediate vicinity of the soot particle, P is the local pressure of the gas, fv is soot volume fraction, and As is soot surface area at a given moment in time (t). The functional dependence is stronger on some variables (T,WX YX ,...) than on others (WZ , WZX ,...). The target quantity considered in this work is soot concentration, although soot properties such as particle size could be estimated as well. Mixture fraction, temperature, acetylene concentration, benzene concentration, and O2 concentration will be used as input variables to the estimator. It should be noted that this list was based in part from a trial-and-error process that has not yet been exhaustive. However, a strong correlation has been shown between mixture fraction and soot concentration [71]. Also, soot is known to form in flame regions with temperatures between 1300 K and 1600 K [15]. O2 concentration was chosen to capture soot oxidation effects. Lastly, acetylene concentration was chosen because it has been observed that the increase in soot formation at elevated pressures in laminar flames is primarily due to increased acetylene concentrations [36] and benzene concentration was chosen to represent PAH addition. Depending on how many independent variables are chosen to be included in the soot estimator will determine the library's

25

dimensionality. Also, as knowledge of soot formation advances, more appropriate variables can be included in the library. Step five of the estimator development uses a Lagrangian parcel-tracking CFD data processor [70]. Theoretically, the formation or destruction of a soot particle is determined by its entire history from inception to oxidation. Therefore, in the present work, it is proposed to integrate variable histories of a fluid parcel in order to generate soot volume fraction correlations. For example, integrated temperature history can be a gauge for relative heat transfer into the particles, which is a suitable indicator of soot processes. The aggregated history of each variable can be expressed by the integral of each local variable with respect to time along a pathline traversed by a fluid parcel that may contain soot. The mathematical definition used herein of integrated temperature, molecular species, and mixture fraction histories are expressed in the following equations:

[ =
\]=[FSa_

\]5^_F  

Eq. (3.2)

S_[ =
\]=[FSa_

S,\]5^_F  

Eq. (3.3)

[ =
\]=[FSa_

\]5^_F  

Eq. (3.4)

26

Where Th is the integrated temperature history, Yi_h is the integrated history of species i, and MFh is the integrated mixture fraction history. In the present work, these integrals will be numerically evaluated by a post-processor considering data from CFD simulations of laminar flames. As a fluid parcel traverses the fluid domain, the histories defined in Equations 3.2 to 3.4 continuously increase monotonically. Corresponding to step five in Figure 1, the Lagrangian parcel-tracking post-processor comprises an algorithm that reads the results of a CFD simulation with a detailed soot model and traces out the path of a soot-containing fluid parcel. The post-processor contains a soot concentration filter that will only begin to track the fluid parcel when the soot concentration value is above the filter value. For the current work, the filter value has been set to 0.1 ppm. This process is depicted graphically in Figure 2, wherein the pathline through the flame is outlined in black in the left side figure and the temperature history is calculated as the area under the curve in the right side figure. As the fluid parcel progresses upward through the flame, the graph on the right side of Figure 2 is traced out. Each progressive point along the fluid parcel pathline corresponds to an increasing time along the x-axis of the right side graph in the figure.

27

Figure 2: Illustration of Lagrangian parcel-tracking post-processor calculating instantaneous temperature along the pathline of a soot-containing fluid parcel. Left side: temperature contours of a laminar ethylene coflow diffusion flame. Right side: Plot of local temperature the sootcontaining fluid parcel is exposed to along its pathline.

It is important to emphasize here that the estimator does not attempt to relate soot concentration to local conditions, but rather it always considers the accumulated condition histories, and their effect on soot growth or destruction. This hysteresis based method is necessary as characteristic soot times are long compared to chemical times. For example, local temperature does not relate to soot concentration but rather the total history of temperature experienced by the soot-particle containing fluid parcel correlates to soot concentration. This post-processor is similar to those that predict NOx emissions [72, 73]. The post-processor has been used recently in studies of high pressure flames [36] and particle surface reactivity [70] for data analysis, and has been repurposed here to extract soot-flow field correlations for library generation. Step six of the estimator development is to tabulate the histories calculated by the postprocessor to generate a library of correlations, as was first done in [74]. In the present work,

28

the libraries consist of soot concentration values that are related to MFh, Th, and O2_h. MFh is chosen to account generally for gas phase conditions that may favour soot growth. For high pressure conditions, acetylene and benzene concentrations are substituted for MFh, which is discussed later. O2 is the only oxidative species used in the present library because the focus of the current work is on testing laminar diffusion flames. If a premixed or partially-premixed system were tested, or turbulence were present, evaluating OHh should be considered. The range of each variable history, from zero to the maximum value anywhere in the data sets considered, can be divided equally into a specified number of sections (or bins) in which the midpoints of those bins are used as data entries for the library. When multiple entries exist in a bin (for example from different pathlines in one flame dataset, or from separate data sets), those values are averaged when populating the bin. These data entries constitute the library. As the number of bins utilized increases, the resolution of the library becomes more precise. However, increasing the number of bins used to generate the library will increase the number of data entries in the library significantly due to the multi-dimensionality of the library. Another technique to populate the library is the use of non-equispaced bins. This technique consists of first populating a library with equally spaced bins as previously constructed but using a fraction of the bins allotted for the library. Then a frequency distribution is generated to determine the amount of data entries falling into each bin of each range of variable history. The bins with the most data entries will then be subdivided using the remaining bins allotted for the library. Therefore, each range of variable history will be sectioned into a specified number of non-equispaced bins. Then the data entries can be populated into the corresponding bins to generate a library. Once a library of correlated data has been generated, testing can then be conducted on the predictive capability of the library using validated flame data. 29

Referring to Figure 3, with a library having been generated as described above, the utilization of the soot estimator library can be described in three steps. Step one is to compute or otherwise retrieve the CFD data for a combustion system of interest, for which an estimate of soot concentration is desired. This CFD data does not need to include soot properties as they will be predicted using the library. It only needs to include temperature, a velocity field, and key chemical species concentrations. In theory, the combustion system can be a simple laminar flame or a more complex diesel engine or gas turbine, as long as flow field data is known. Step two consists of computing the hystereses fields of the CFD data using the Lagrangian parcel-tracking postprocessor described earlier, in the same manner as for library generation. The hystereses fields are based on the velocity fields throughout the domain of the CFD data. This step can vary greatly in complexity depending on the type of combustion system. For example, for steady laminar flames, the task is trivial, however, for turbulent combustion systems, especially those with swirling flows, the task is more complex and will require greater computational effort. Lastly, step three is to interpolate the hystereses fields in the soot estimator library to determine estimates of soot properties (concentration in the present thesis) at each point in the domain. While the current work focuses on soot concentration, soot morphology could also be estimated if sufficiently accurate size and shape data were available to generate the library.

30

1. Compute or retrieve CFD data for combustion system

2. Compute hystereses fields of CFD data

3. Determine library entries for soot properties at each point in domain Figure 3: Flow chart illustrating utilization of soot estimator library.

31

CHAPTER 4 ­ TESTING, VALIDATION, AND DISCUSSION
4.1. Computational Cost Analysis
Although the prediction accuracy of the estimator is essential, the computational cost associated with the estimator is an equally important aspect of its development. For practical application and utility, results must be generated in a reasonable amount of time. The majority of computational time required is during library generation. However, it should be noted that one library can be used for multiple soot concentration predictions. A comparison between the time required to generate a library and the number of data entries in that library based on the number of bins used, is displayed in Figure 4. The libraries comprised four parameters that include fv, MFh, Th, and O2_h. It should be noted that for these timings the libraries were generated using only Santoro flame data and the computations were performed on one CPU.

32

Figure 4: Time required to generate a library and the number of data entries in that library versus the number of bins used.

The 100-bin library required just over one hour of compute time to generate. It can be seen that the time needed to generate a library increases at a greater rate with increasing bin resolution. This behaviour is due to the dimensionality of the library causing the number of data entries in the library to grow as the number of bins used increases. By testing the predictive capabilities of the library with varying resolution, a plateau was observed above the 100-bin library, above which the change in prediction accuracy did not improve significantly with increasing resolution. The results of this test indicated that a 100-bin library gave a satisfactory compromise between computational cost and predictive capabilities. The same analysis was conducted for libraries that comprised five parameters that included fv, C2H2_h, C6H6_h, Th, and O2_h. Once again, only Santoro flame data was used in the generation of

33

the libraries. The computational cost associated with library generation followed the same trend observed in Figure 4. However, a 40-bin library required just over eight hours of compute time to generate using one CPU. The time needed to generate a 100-bin library of five parameters in serial is not tractable. Therefore, parallel computing was implemented in the library generation code, which can be found in Appendix A. Computations were performed on the general purpose cluster (GPC) of the SciNet HPC Consortium. Generating a 40-bin library of five parameters across 64 CPUs needed a compute time of approximately five minutes to complete. A 100-bin library of five parameters was not feasible to generate on the GPC due to memory restrictions. The individual RAM of each CPU was being exceeded, which caused the computation to terminate. Further refinement of the library generation code is required to reduce the amount of memory allocation needed. Once a library is generated, it can be used for soot concentration predictions of multiple combustion systems. For application purposes, the computational cost incurred on a combustion device designer looking to use this soot estimator as a post-processor to a CFD simulation comes from the Lagrangian parcel-tracker and interpolation of the library. The Lagrangian parceltracking post-processor takes under a minute to compute the variable histories from the CFD results for laminar flames. The interpolation of the library to yield a soot prediction requires a few seconds of compute time per pathline. It should be noted that these compute times are associated with simulations of laminar coflow diffusion flames that contain a relatively small amount of elements in the computational domain compared to industrial turbulent simulations. As previously mentioned, the computational domains of engines and gas turbines are extremely large and complex. Consequently, the computational cost of the soot estimator is expected to be greater.

34

4.2. Preliminary Testing of Soot Estimator
It is important to emphasize that the strategy of the estimator is to predict soot concentration, not on local conditions, as it is clear from residence time disparities that local conditions neither determine soot concentrations, nor correlate to them, but rather based on the cumulative soot-particle-containing fluid parcel history. The method used to test the predictive capabilities of the estimator is to compare the estimated values of soot concentration using the library to experimentally validated soot concentrations along two pathlines; the flame centerline and the pathline of maximum soot. The first test conducted is an attempt to predict soot concentration along Santoro flame pathlines using a library generated from Santoro and Smooke flame data. Once the library is generated, MFh, Th, and O2_h are calculated along the two pathlines using the Lagrangian parcel-tracking post-processor based on validated CFD data used to generate the library. It is important to note that for the tests in the current work, the pathline of maximum soot is known. However, if the soot estimator library is applied to an unknown combustion system, the hystereses fields spanning the combustion domain would need to be calculated to determine the point of maximum soot. These hystereses fields are then interpolated in the four dimensional library to yield a soot concentration estimate based on the correlations in the library, at discrete points along the pathline. The results of the first test are displayed in Figure 5, in which soot concentration is plotted against height above burner.

35

Figure 5: Comparison of experimentally-validated CFD computed soot concentrations with those predicted by the estimator library for the Santoro [68] flame along the pathline of maximum soot (left) and the flame centerline (right).

Observing Figure 5, the soot concentration values estimated follow the computed curve very well. One of the main objectives of the proposed estimator is to predict peak soot concentration. The peak concentrations for the pathline of maximum soot and flame centerline differ by only 0.3% and 3.1%, respectively. Although the results in Figure 5 are quite promising, there are some sharp deviations in soot concentration estimates that preclude a smooth curve. The non-monotonic behavior of the estimated data may be attributable to the nature of the procedure projecting values from a multi-dimensional library onto a two-dimensional plot. Another reason for this behavior is the averaging of soot concentration values conducted during library generation. As more flame data is added to the library, specific soot concentration values of the original library may be averaged up or down resulting in a jagged curve. This effect is more evident in further tests.

36

It should be noted that the comparison depicted in Figure 5 does not represent a rigorous test of the estimator as Santoro flame soot concentrations were incorporated into the library before then being estimated. Therefore, the applicability of the library is ensured artificially, and these data should be taken with cautious optimism. If this estimator were to be used for predictive purposes, it must be able to predict soot concentration values from flame conditions that may not necessarily be consistent with the flame data used to generate the library. A good strategy is to continually develop and enhance the library (or libraries) using newly available data, so as to broaden its applicability as much as possible. The next step in examining the predictive capabilities of the estimator is attempting to predict soot concentration for pathlines of a flame that is not used in library generation. Therefore, the pathlines of a Smyth48 flame are tested using the library generated from only Santoro and Smooke flame data. The results of the test are displayed in Figure 6.

Figure 6: Comparison of CFD computed soot concentrations with those predicted by the estimator library for the Smyth48 [69] flame along the pathline of maximum soot (left) and the flame centerline (right). 37

From a trend matching perspective, the accuracy of prediction in Figure 6 is not as good as in Figure 5 but still follows the computed soot concentrations relatively accurately. The formation and destruction of the soot particles are captured. The peak concentrations for the pathline of maximum soot and flame centerline are predicted within the correct order of magnitude, differing by 35.0% and 52.4%, respectively. The results displayed in Figure 6 demonstrate that it is feasible to predict soot concentration values for a flow configuration that is not included in the flame data used to generate the library. The main purpose of the soot estimator would be to be used as a post-processor with existing CFD data that does not include soot formation. However, the previous two tests were conducted with a CFD model that included soot formation. Therefore, the next test is to attempt to predict peak soot concentration of a flame using CFD data from a model that did not include soot formation. The results of the test are displayed in Figure 7. As expected, observing Figure 7, the prediction capability of the estimator library has lost accuracy compared to that of Figure 6. The peak concentrations for the pathline of maximum soot and flame centerline differ by 37.26% and 223.39%, respectively. Compared to Figure 6, the peak concentration accuracy along the pathline of maximum soot has only worsened by a few percent but the prediction along the flame centerline has worsened dramatically. Part of this discrepancy may be attributable to slight changes to the temperature profile of the flame associated with neglecting soot formation which may have a more significant impact along the flame centerline when calculating hysteresis fields. Although predictions along the centerline of the flame were not accurate, this test shows that it is possible to predict peak soot concentration within the correct order of magnitude from CFD results that did not include a soot model using the proposed soot estimator.

38

Figure 7: Comparison of CFD computed soot concentrations with those predicted by the estimator library for the Smyth48 flame [69] with no soot inception along the pathline of maximum soot (left) and the flame centerline (right).

4.3. Testing Prediction Capabilities of Broadening Libraries
The next step in testing the soot concentration estimator is to analyze changing prediction capabilities as more flame data is added to the library. The test consists of using eleven sets of experimentally validated CFD flame data from the Santoro [68], Smooke [33] and Smyth [69] flames, as well as high pressure (HP) flames studied by Mandotori and Gülder [75], to generate the library. Referring to Table 2, the initial step is to generate a library with Santoro [68] flame data only. The second library contains Santoro [68] data and data from one Smyth and Shaddix [69] flame, the third library contains Santoro [68] data and data from two Smyth and Shaddix [69] flames, and so on, until eleven libraries are generated each incorporating more data than the last. The accuracy of predicting peak soot concentration for each flame is tested using these libraries. It is to be expected that libraries based on more flame data would generally be better at predicting soot concentration in a broad range of flames.

39

The libraries presented in Table 2 were generated using 40 bins per variable to maintain low computational cost and to make a fair comparison with the second set of generated libraries. The libraries comprise three independent variables (MFh, Th, and O2_h) and one dependent variable (fv). The entries in the first column of Table 2 indicate which flame is being tested (i.e., in test 1, each of the eleven libraries are used to predict soot formation from the Santoro flame). The numbers to the left of the flame names are used to identify the flame data that was used to generate the libraries. Therefore, the first library in column 2 was generated with only Santoro flame data while the last library labelled `1-11' was generated using all the flame data. The last row of Table 2 shows the results of predicting soot concentration in the Smyth48 flame based on CFD data computed with no soot formation model, using all of the generated libraries. The table entries to the right of the dashed stepped diagonal line indicate tests in which the specific flame data for the flame being tested is incorporated into library generation. For example, the flame data for the Smooke60 flame was not used when generating library `1-5' but was then used for library `1-6' and the broader libraries thereafter. Test cases shaded in green indicate predictions within 50% difference. Test cases shaded yellow indicate predictions within the correct order of magnitude but greater than 50% difference. Lastly, test cases shaded red indicate predictions outside the correct order of magnitude. Note, some values may have less than 100% difference but not be within the correct order of magnitude because they are underpredicted.

40

Table 2: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries.
Flame Data 1. Santoro 2. Smyth41 3. Smyth46 4. Smyth48 5. Smooke32 6. Smooke60 7. Smooke82 8. HP ­ 2atm 9. HP ­ 5atm 10. HP ­ 10atm 11. HP ­ 15atm 12. Smyth48a
a

1 5.5 19.8 31.3 38.1 2295.1 71.3 59.6 181.6 75.4 96.1 98.4 34.4

1-2 6.7 9.4 22.4 30.1 2772.7 105.5 91.5 256.9 70.5 95.3 98.3 31.6

1-3 8.3 8.0 21.2 29.0 4623.9 238.0 214.8 310.8 51.4 92.2 98.6 24.4

1-4 15.3 2.2 16.1 24.5 7420.4 438.0 401.2 504.9 22.7 87.6 98.3 23.4

1-5 17.2 29.7 45.6 45.7 7.8 438.0 401.2 86.3 98.5 99.8 98.3 38.1

1-6 17.2 29.7 45.6 45.7 193.2 23.6 28.8 56.6 95.7 99.3 98.3 38.1

1-7 1-8 1-9 17.2 17.2 17.2 29.7 29.7 29.7 45.6 45.6 45.6 45.7 45.7 45.7 219.8 274.1 2921.2 24.8 24.8 59.6 29.9 29.9 48.7 52.6 44.6 34.9 95.5 95.5 68.9 99.3 99.3 95.0 98.3 98.3 98.3 38.1 38.1 38.1

1-10 17.2 7.5 20.7 28.6 7476.2 383.4 350.3 16.6 21.0 87.3 97.0 26.6

1-11 28.3 39.1 47.8 53.0 4155.7 270.5 245.1 409.8 46.8 91.5 5.3 51.7

Flame generated using CFD model not including soot formation.

Considering the second row in Table 2 (Santoro), all libraries are able to accurately predict peak soot concentration in the Santoro flame to within 29%. This result is encouraging but not surprising, as validated CFD data for the Santoro flame was used in the generation of each library. Considering the second column, moreover, the library generated from only the Santoro flame CFD data was able to predict peak soot concentrations in 9 out of 12 flames considered, to within the correct order of magnitude, which is often considered an adequate standard for basic predictive capability. This is a very promising result as it shows the potential to correlate a library generated from certain flame data to a different but similar combustion system. Considering the last row in the table, the flame being tested was generated using a validated CFD code described by Eaves et al., [76] with no soot formation included in the simulation. As soot was not included in the 41

simulation, soot radiation was not considered and the temperature field was overpredicted accordingly. The percent differences of this row are depicted visually in Figure 8. The values on the x-axis correspond to the eleven libraries generated in Table 2. The purpose of this test is to replicate the process of using CFD results from an industrial simulation that did not include soot modelling. All the libraries in Table 2 were able to predict peak soot concentration to within 52% for the aforementioned Smyth48 flame. This accuracy demonstrates the potential future viability to use an estimator library as a post-processor to existing CFD data, which does not include soot formation, to predict peak soot concentrations with an accuracy acceptable for industrial applications.

Figure 8: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 40 bins) for the pathline of maximum soot for the Smyth48 [69] flame with no soot inception.

42

Observing Figure 8, each additional flame data incorporated into library generation up to and including library `1-5' affects the prediction of peak soot concentration. After library `1-5', a plateau is observed where additional flame data does not impact the prediction for the specific flame tested. The plateau is present because the data from the additional flames does not fall into the bins that are being interpolated to yield a soot concentration value for the flame being tested. It is desirable to distinguish distinct flame data within the library so high sooting flame data does not overlap with low sooting flame data. To mitigate the chance of distinct flame data being averaged in the same bin, the range of each variable history can be divided into a greater number of bins. To analyze the estimator's ability to predict soot particle evolution, the soot concentration predictions along the pathline of maximum soot for the Smyth48 flame with no soot inception using the broadest library are displayed in Figure 9.

43

Figure 9: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 bins (four parameters) for the Smyth48 flame [69] with no soot inception along the pathline of maximum soot.

Looking at Figure 9, the soot estimator underpredicts peak soot concentration by 52%. Soot formation processes are not predicted well but soot oxidation is captured. Also, the height at which peak soot is observed is predicted quite well. Although the majority of predictions from Table 2 are within the correct order of magnitude, the bin resolution can be increased without incurring excessive additional computational cost. The tests from Table 2 were recreated using libraries of 100 bins. Those results are displayed in Table 3.

44

Table 3: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (four parameters ­ 100 bins) for the pathline of maximum soot for various flame data tested among broadening libraries.
Flame Data 1. Santoro 2. Smyth41 3. Smyth46 4. Smyth48 5. Smooke32 6. Smooke60 7. Smooke82 8. HP ­ 2atm 9. HP ­ 5atm 10. HP ­ 10atm 11. HP ­ 15atm 12. Smyth48a
a

1 0.3 15.7 27.8 35.0 2366.3 76.4 64.4 224.8 74.6 95.9 98.6 38.1

1-2 10.6 2.1 16.1 24.4 2887.4 113.7 99.1 270.9 69.3 95.1 98.8 28.1

1-3 17.5 9.6 6.0 15.4 4473.0 227.2 204.8 453.1 53.0 92.5 98.8 23.5

1-4 25.7 12.0 4.0 13.5 7783.9 464.0 425.4 548.7 18.9 87.0 98.9 19.4

1-5 25.7 9.3 6.4 15.7 5.5 464.0 425.4 86.2 98.6 99.7 98.7 19.4

1-6 25.7 9.3 6.4 15.7 39.6 8.1 14.3 85.0 95.6 99.3 98.7 19.4

1-7 1-8 1-9 25.7 25.7 25.7 9.3 9.3 9.3 6.4 6.4 6.4 15.7 15.7 15.7 43.4 296.7 4923.9 7.2 7.2 82.9 13.5 13.5 70.4 84.7 41.2 41.2 95.5 95.5 32.9 99.3 99.3 90.0 98.7 98.7 98.7 19.4 19.4 19.4

1-10 25.7 9.3 6.4 15.7 4923.9 412.7 377.6 41.2 220.4 48.7 96.3 70.8

1-11 13.0 4.1 32.1 18.9 6847.1 495.6 454.9 44.8 22.4 74.2 0.9 86.7

Flame generated using CFD model not including soot formation.

Overall, the estimator is able to predict 103 out of 132 test cases seen in Table 3 to the correct order of magnitude. Furthermore, the estimator is able to predict peak soot concentration in 71 out of 132 test cases to within 50%. These general statistics show good potential for the estimator to predict peak soot concentration in many cases. Looking to the right of the dashed stepped diagonal line in Table 3, 63 out of 66 tests predict peak soot concentration to the correct order of magnitude. A trend observed in the Smooke32 flame is that as soon as that flame is introduced into the library (which happens first in library `1-5'), the peak difference values decrease dramatically and the estimator is able to predict peak soot concentration to within 44%, until high pressure flame data is incorporated into library generation. This occurrence is displayed in Figure 10 where the soot concentration predictions using libraries `1-4' and `1-5' are shown for the Smooke32 flame. Smooke [33] has shown that the peak soot volume fraction of a heavily diluted ethylene flame,

45

such as the Smooke32 flame, is one order of magnitude lower than that of the less diluted flames. In the Smooke32 flame, the maximum inception and surface growth rates occur along the centerline near the tip of the flame. Therefore, peak soot concentration is observed at the flame centerline and at a reduced flame height, whereas less diluted flames exhibit peak soot concentration at the wings of the flame and at increased flame heights. Therefore, the peak soot concentration of the Smooke32 flame occurs at lower hysteresis values than those of less diluted flames. As a result, library `1-4' extremely overpredicts the Smooke32 flame because the library was generated using only pure ethylene flame data without having adequately populated the shortresidence time regions of the library. As soon as the Smooke32 flame data is introduced into library `1-5', there is sufficient data to populate the bins corresponding to short-residence times of the library. The addition of heavily diluted flame data results in a very accurate prediction of peak soot concentration by library `1-5' for the Smooke32 flame. Therefore, if the library contains flame data similar to, but distinct from the flame being tested, the estimator shows good potential to predict peak soot concentrations. For application purposes, this result indicates that a challenge will be the need for libraries that have been generated with data that is from flame conditions similar to the desired prediction case.

46

Figure 10: Comparison of CFD computed soot concentrations with those predicted by library `14' (left) and library `1-5' (right) from Table 3 for the Smooke32 flame [33].

To visually observe the impact that increasing bin resolution has on the predictive capabilities of the library, the predictions of library `1-11' for all flames tested from Table 3 are compared to that of Table 2. This comparison is shown in Figure 11 where the values on the x-axis correspond to the flame numbers indicated in Tables 2 and 3. The y-axis is limited to a difference of 100% to observe the effects of increasing bin resolution more clearly. Analyzing the effects of increasing bin resolution, separation of flame data within the libraries is observed. A library of 40 bins averages a wider range of flame data within each bin, whereas a library of 100 bins averages a smaller range of data within each bin. Thus, distinct flame data will occupy separate bins in the library rather than having bins that contain overlapping, averaged flame data and result in unwanted smoothing. Figure 11 shows that increasing bin resolution generally improves the predictive capabilities of the broadest library.

47

Figure 11: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 bins (four parameters) with those by library `1-11' of 100 bins (four parameters) for the pathline of maximum soot.

To further investigate the impact of increasing bin resolution, the predictions of the Smyth48 flame with no soot inception for all eleven libraries seen in Table 3 are compared to those of Table 2. This comparison is observed in Figure 12. Once again, it can be seen that increasing bin resolution generally improves the predictive capabilities of the library until the 10 atm HP flame data is incorporated into library generation illustrated by the jump from library `1-9' to library `1-10'. Also, the addition of the Smooke32 flame data into library `1-5' affects the soot concentration prediction for the 40 bin libraries. The 100 bin libraries do not exhibit this effect which further illustrates the separation of flame data within the library. Therefore, the ideal soot estimator library would have distinct flame data separated into different regions of the library as much as possible while maintaining low computational cost.

48

Figure 12: Differences (%) between predicted peak soot concentrations by libraries of 40 bins (four parameters) with those by libraries of 100 bins (four parameters) for the pathline of maximum soot for the Smyth48 [69] flame with no soot inception.

The soot concentration predictions along the pathline of maximum soot for the Smyth48 flame with no soot inception using the broadest library are displayed in Figure 13. The predicted peak soot concentration is nearly double the CFD computed value. The predicted height at which peak soot concentration occurs is much lower than the computed value shows. The inaccuracy of the prediction is caused by overlapping of flame data. The bin that is predicting the peak soot concentration in this case is dominated by HP flame data, which is highly sooting; thus, yielding a high soot concentration value. Furthermore, the soot formation and destruction processes are not captured.

49

Figure 13: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 100 bins (four parameters) for the Smyth48 flame [69] with no soot inception along the pathline of maximum soot.

Although increasing bin resolution has generally improved predictive capabilities of the libraries, looking at the last four columns of Table 3, where high pressure flame data is incorporated into library generation, the libraries are only able to predict the Smooke flames to within 50% difference in 2 out of 12 cases. It is clear that a different strategy needs to be utilized for high pressure conditions. It is known that the increase in soot formation at elevated pressures along the wings of laminar flames is primarily due to increased surface growth rates [54]. Increases in surface growth rates are related to increases in soot area density and acetylene concentrations. Furthermore, the increases in acetylene concentrations are attributable to increases in gas phase density. Therefore, the proposed strategy is to replace MFh, which does not separate the effects of HACA growth from PAH addition, with two parameters, benzene history (C6H6_h) and acetylene

50

history (C2H2_h), thereby separating out the quantification of surface growth and inception/condensation effects. C2H2_h is chosen to represent soot formation via surface growth as mentioned earlier. Although benzene is not a PAH, C6H6_h is chosen because benzene is the most common ring observed in PAH structures; thus giving the library a representative variable for PAH formation. The resulting libraries will now consist of five parameters comprising C6H6_h, C2H2_h, Th, O2_h, and fv. Not surprisingly, the computational cost of generating libraries increased dramatically with the addition of one parameter (one more dimension) as mentioned previously. The tests results using the updated 40 bin libraries are displayed in Table 4.

Table 4: Differences (%) between CFD computed peak soot concentrations with those predicted by a post-processor library (five parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries.
Flame Data 1. Santoro 2. Smyth41 3. Smyth46 4. Smyth48 5. Smooke32 6. Smooke60 7. Smooke82 8. HP ­ 2atm 9. HP ­ 5atm 10. HP ­ 10atm 11. HP ­ 15atm 12. Smyth48a
a

1 1.7 16.6 53.9 35.6 384.1 65.4 67.7 28.3 95.0 99.2 99.6 62.3

1-2 5.1 1.2 15.4 23.8 379.0 15.7 68.1 29.0 95.1 99.2 99.6 64.0

1-3 2.1 1.2 1.9 11.6 777.9 18.2 23.8 30.1 89.9 98.1 99.3 24.6

1-4 2.1 12.9 1.9 12.9 661.1 37.3 21.2 12.8 92.2 98.8 99.4 46.4

1-5 2.1 12.9 1.9 12.9 11.6 10.3 2.7 86.9 98.9 99.3 99.9 46.4

1-6 2.1 12.9 1.9 12.9 4.3 14.9 20.7 85.8 95.8 99.3 99.7 46.4

1-7 2.1 12.9 1.9 12.9 1.9 11.7 17.7 85.5 95.6 99.3 99.7 46.4

1-8 2.1 12.9 1.9 12.9 278.6 11.7 17.7 43.9 95.6 99.3 99.7 46.4

1-9 2.1 12.9 1.9 12.9 662.5 11.7 17.7 13.0 11.8 85.9 97.8 46.4

1-10 2.1 12.9 1.9 12.9 9993.4 11.7 17.7 1106.6 158.6 62.6 99.7 46.4

1-11 2.1 12.9 1.9 12.9 9993.4 11.7 17.7 2094.7 158.6 62.6 2.8 46.4

Flame generated using CFD model not including soot formation.

51

Comparing Table 4 to Table 2, it is clear that the updated libraries have provided improved prediction results for the Smooke flames compared to the previous library, for which MFh was used with the same bin resolution. The libraries are able to predict the Smooke60 and Smooke82 flames to within 50% difference when HP flame data is incorporated into library generation. Furthermore, many of the predictions to the right of the diagonal stepped line have improved significantly, most noticeably in the Santoro, Smyth, and Smooke flames. This improvement indicates that the strategy of replacing MFh with C6H6_h and C2H2_h is effective for improving the library's predictive capability in estimating soot concentration in high pressure flames by separating out the quantification of surface growth. However, the predictions for the Smooke32 flame continue to have high error values when high pressure flames are included in library generation. Increasing bin resolution may improve the accuracy of these predictions but techniques to reduce computational cost must be utilized. Although the new strategy caused some error values to increase slightly, such as the 2 and 5 atmosphere high pressure flame tests, 56 out of 66 test cases to the right of the dashed diagonal line are predicted within 50% difference compared to 50 out of 66 in Table 2 when MFh was used. Considering library `1-11' in Table 4, the broadest library generated, it predicts peak soot concentrations for all flames to within the correct order of magnitude for 10 out of 12 flames tested. These predictions are compared to those of Table 2, for which the bin resolution is the same, in Figure 14. The new library generally improves the predictive capabilities of the soot estimator library as 9 out of 12 flames tested have shown improvement in prediction accuracy.

52

Figure 14: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 bins (four parameters) with those by library `1-11' of 40 bins (five parameters) for the pathline of maximum soot.

A comparison of the predictions for the Smyth48 flame with no soot model is made using the 40 bin libraries using four and five parameters (data in Table 2 and Table 4, respectively). This comparison is shown in Figure 15. While the predictions of the five parameter libraries are generally less accurate than the four parameter libraries, the Smyth48 flame with no soot formation in the CFD model is still predicted well by all the libraries. An interesting observation seen in Figure 15 is that the predictions made by the five parameter libraries plateau after library `1-4'. Library `1-4' is the first library generated that includes all Smyth [69] flame data. The predictions from libraries `1' to `1-4' change as more Smyth flame data is incorporated into library generation. The libraries generated afterwards incorporate the Smooke [33] and HP [75] flame data that are distinct from the Smyth48 flame with no soot model. This observation highlights the impact that

53

the updated strategy has on separating distinct flame data within the library. This data shows potential in producing a very broad library that can be applicable to many flames.

Figure 15: Differences (%) between predicted peak soot concentrations by libraries of 40 bins (four parameters) with those by libraries of 40 bins (five parameters) for the pathline of maximum soot for the Smyth48 [69] flame with no soot inception.

Once again, the soot concentration predictions along the pathline of maximum soot for the Smyth48 flame with no soot inception using the broadest library are displayed in Figure 16, to show the effectiveness of the updated strategy for predicting soot evolution. The predicted peak soot concentration is nearly half the CFD computed value. The predicted height at which peak soot concentration occurs is once again lower than the computed value shows by 0.9 cm. Although, soot formation is initially captured quite well until 3 cm above the burner, the soot estimator seems

54

to be calling upon bins that have very low soot concentration values. The values within these bins are driven down by large amounts of low sooting flame data. These values distort the curve; thus restricting the soot estimator from capturing the soot evolution process. A new strategy needs to be developed to improve the distribution of flame data within the bins.

Figure 16: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 bins (five parameters) for the Smyth48 flame [69] with no soot inception along the pathline of maximum soot.

4.4. Libraries Generated Using Non-Equispaced Bins
An investigation into the amount of data within each bin for a 40 bin library comprising five parameters revealed that only 6,432 bins out of a possible 2.56 million were populated with data entries. 58 of the populated bins yielded soot concentration values of zero. Although the

55

hysteresis fields for many of the bins are not conducive to soot formation, a different approach of populating the bins should be evaluated. The previous tests were conducted using libraries that were generated by dividing the range of each variable history into an equispaced number of bins. The proposed approach will be to divide each variable history range into a small amount of equispaced bins. Then, the amount of data that populates the bins of each variable history are evaluated. Additional sub-bins are then proportionally distributed to the equispaced bins based on the amount of populated data entries. The range of each bin is then subsequently divided by the amount of sub-bins allocated to the bin. Finally, a library is generated using this non-equispaced bins (NEB) approach. The NEB library generation code can be found in Appendix B. The distribution of data within the bins of each variable history using the NEB approach is compared to the previous approach of using equispaced bins in the figures below. The total amount of data entries is 86,912.

Figure 17: Comparison of the distribution of data entries within the bins dividing the range of C2H2_h between equispaced bins (left) and the NEB approach (right).

56

Figure 18: Comparison of the distribution of data entries within the bins dividing the range of C6H6_h between equispaced bins (left) and the NEB approach (right).

Figure 19: Comparison of the distribution of data entries within the bins dividing the range of Th between equispaced bins (left) and the NEB approach (right).

57

Figure 20: Comparison of the distribution of data entries within the bins dividing the range of O2_h between equispaced bins (left) and the NEB approach (right).

In Figures 17 to 20, it is observed that the previous approach of using equispaced bins concentrated the data towards the low value bins. This observation is most prevalent for C2H2_h, C6H6_h, and O2_h. As seen in Figure 20, over 90% of the data entries populate the first bin which deters the separation of distinct flame data. As discussed earlier, separation of distinct flame data within the library will produce a soot estimator that is more applicable to a wider range of flames. The NEB approach has helped to distribute the data more evenly over the entire range of the variable history. The most populated bins from the previous method of library generation have all seen a reduction in data entries using the NEB method. Out of the possible 2.56 million bins, the number of populated bins has nearly doubled to 12,256 of which 69 are populated with soot concentration values of zero. Ideally, the distribution of data across the bins would be uniformly distributed. Therefore, further refinement of NEB should be investigated. Methods to reduce computational cost are required so more sub-bins can be utilized. Also, multiple iterations can be made when distributing the sub-bins within the range of the variable history. 58

The previous tests of analyzing predictive capabilities of broadening libraries were conducted once again for NEB libraries comprising five parameters and 40 bins. It should be noted that generating a library using the NEB approach added an insignificant amount of compute time. The results are displayed in Table 5.

Table 5: Differences (%) between CFD computed peak soot concentrations with those predicted by a NEB post-processor library (five parameters ­ 40 bins) for the pathline of maximum soot for various flame data tested among broadening libraries.
Flame Data 1. Santoro 2. Smyth41 3. Smyth46 4. Smyth48 5. Smooke32 6. Smooke60 7. Smooke82 8. HP ­ 2atm 9. HP ­ 5atm 10. HP ­ 10atm 11. HP ­ 15atm 12. Smyth48a
a

1 0.8 15.8 45.8 35.0 318.0 32.5 37.1 38.1 92.3 99.3 99.7 46.3

1-2 6.9 0.4 16.0 24.4 268.7 9.4 1.5 45.4 93.5 99.7 99.9 31.9

1-3 17.1 0.6 0.6 20.2 455.3 34.0 9.0 17.7 92.2 99.3 99.6 20.7

1-4 0.7 16.4 0.6 1.2 550.8 12.1 4.4 3.6 92.9 98.9 99.5 16.5

1-5 0.8 1.3 1.7 1.4 13.0 53.1 42.4 83.3 98.8 99.8 99.9 24.3

1-6 1.2 1.2 1.6 4.0 7.5 0.7 7.5 86.3 95.6 99.3 99.9 20.8

1-7 1.2 1.2 1.6 4.0 8.5 0.7 2.5 86.4 95.6 99.3 99.9 20.8

1-8 16.3 1.2 1.6 4.0 259.0 0.2 0.7 46.8 95.3 99.3 99.9 21.5

1-9 4.9 1.2 1.6 4.0 1305.3 0.2 0.7 58.9 7.0 88.9 99.5 21.5

1-10 4.9 1.2 1.6 4.0 12409.6 0.3 1.1 1241.4 2.1 1.7 99.9 24.2

1-11 4.9 1.2 1.9 3.4 12409.6 0.8 1.1 1241.4 2.1 1.7 2.6 24.6

Flame generated using CFD model not including soot formation.

Overall, the estimator is able to predict peak soot concentration within the correct order of magnitude for 101 out of 132 test cases. Looking to the right of the dashed diagonal line, the estimator is able to predict peak soot concentration in 61 out of 66 test cases within the correct order of magnitude and 58 out of 66 test cases within 20% as compared to 62 out of 66 and 55 out of 66 cases, respectively with equispaced bins. Considering library `1-11' in Table 5, the broadest library generated, it predicts peak soot concentrations for all flames to within the correct order of

59

magnitude for 10 out of 12 flames tested. These predictions are graphically compared to those of Table 4 (equispaced bins) in Figure 21.

Figure 21: Differences (%) between predicted peak soot concentrations by library `1-11' of 40 equispaced bins (five parameters) with those by library `1-11' of 40 NEB (five parameters) for the pathline of maximum soot.

Figure 21 shows that generating libraries using the NEB approach generally improves the predictive capabilities of the soot estimator. 8 out of 12 flames tested showed improved predictions of peak soot concentration and one flame prediction remained the same. A comparison of the predictions made for the Smyth48 flame with no soot inception by the NEB libraries in Table 5 is made with the predictions by the previously generated libraries from Table 4. This comparison is shown in Figure 22.

60

Figure 22: Differences (%) between predicted peak soot concentrations by libraries of 40 equispaced bins (five parameters) with those by libraries of 40 NEB (five parameters) for the pathline of maximum soot for the Smyth48 [69] flame with no soot inception.

As shown in Figure 22, the NEB method has improved the peak soot concentration prediction of the Smyth48 flame with no soot formation in the CFD model for every library generated. Although, the addition of the Smooke and HP flames after library `1-4' affect the predictions of the NEB libraries, whereas the equispaced libraries are not affected, the impact is slight and is outweighed by the significant improvements. Lastly, the soot concentration predictions along the pathline of maximum soot for the Smyth48 flame with no soot inception using the broadest NEB library are displayed in Figure 23. The predicted peak soot concentration is underpredicted but is still within 25%. The predicted height at which peak soot concentration occurs is similar to the computed value. The soot formation process is captured quite well. Even though soot oxidation occurs more rapidly than 61

with the validated curve, it is still captured. Although the predicted curve has small regions of horizontal soot concentration values, further increasing bin resolution may smooth the curve. Overall, this test shows potential that a five parameter soot estimator library generated using NEB can predict soot particle evolution in a flame.

Figure 23: Comparison of CFD computed soot concentrations with those predicted by the estimator library of 40 NEB (five parameters) and 40 equispaced bins (five parameters) for the Smyth48 flame [69] with no soot inception along the pathline of maximum soot.

62

CHAPTER 5 ­ CONCLUSIONS
5.1. Summary
The work presented in this thesis outlines the development of a computationally efficient stand-alone fluid parcel tracking post-processor that shows promising potential of predicting soot concentrations in industrial combustion devices. This thesis focuses on developing a system of library generation that can be used to estimate soot concentration using correlations and interpolation. The strategy of the estimator is to predict soot concentration, not on local conditions, as it is clear from residence time disparities that local conditions neither determine soot concentrations, nor correlate to them, but rather based on the cumulative hystereses of sootparticle-containing fluid parcels. The current work focuses on soot concentration, but soot morphology could also be estimated if sufficiently accurate size and shape data were available to generate the library. The soot concentration estimator proposed in this thesis shows good potential for predicting soot concentrations in practical combustion systems. The computational cost associated with the soot estimator was dramatically reduced by implementing parallel computing into library generation. It was shown that as more flame data is incorporated into library generation, the estimator is applicable to a wider range of distinct flames. Furthermore, increasing the bin resolution separates distinct flame data within the library and improves prediction capability. A library consisting of variable hystereses for C6H6, C2H2, T, O2, and fv was shown to be effective for atmospheric and high pressure flames. Also, the libraries generated using NEB were shown to 63

improve the prediction capabilities as well. The broadest library generated was able to predict peak soot concentrations for 10 out of 12 flames to within 25% of the CFD computed value. Also, all the libraries generated were able to predict the correct order of magnitude for peak soot concentration for the Smyth48 flame, which did not include soot formation in the CFD model. Lastly, the soot estimator showed promising potential in predicting the evolution of a soot particle along the pathline of maximum soot through a flame.

5.2. Recommendations for Future Work
The algorithm development and testing conducted in this thesis provided a proof of concept, but additional testing must be conducted to further validate the predictive capabilities of the estimator. Recommendations for future work include: · The analyses of additional fuels. Methane should be investigated as a representative for natural gas, which is the primary fuel source for power generating gas turbines. · · Considering the ability to similarly predict soot emissions and particle size. Investigating transient laminar systems as a step toward application to turbulent combustion systems is a priority. · · Adding newly available flame data to the library to broaden its applicability. Troubleshooting parallel implementation in generating 100 bin libraries that comprise five parameters. This may improve the predictive capabilities of the estimator with respect to the Smooke32 flame. · Implementing an iterative scheme for the redistribution of bins for the generations of NEB libraries. · Conducting a perturbation analyses to quantify the most significant variables that should comprise the library. 64

The estimator currently shows the ability to potentially produce reasonably accurate results with relatively low computational cost. With further development, combustion device designers can greatly benefit from the estimator to make product performance more efficient and less harmful to the environment.

65

Appendix A ­ LIBRARY GENERATION CODE USING EQUISPACED BINS
!***************************************************************** ! Estimator Code: Version 5, November 9th, 2017 ! A library generating code for estimating soot concentration along a streamline !of a flame ! This parallel code was developed by R. Alexander, S. Bozorgzadeh, !A. Khosousi, and S.B. Dworkin at ! Ryerson University. !***************************************************************** PROGRAM lib_gen IMPLICIT NONE INCLUDE 'mpif.h' ! ****************************************************************************** !This program uses post-processed, validated CFD data of a flame or flames to generate a !library of 5 parameters (C2H2_h,C6H6_h,T_h,O2_h,fv) for the use of estimating soot concentration of a flame. !***************************************************************************** !Global variable declarations DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ppdata DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:,:,:,:) :: bmatrix DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: outlib DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: final_lib DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: sootpart, soot CHARACTER(len=30) :: infile CHARACTER(len=30) :: outfile INTEGER :: nrows = 0, loopmin, loopmax INTEGER :: i, j, k, w, l, nbins, status, dim DOUBLE PRECISION :: soot_h, C2H2_h, A1_h, T_h, O2_h, OH_h, temp, height, count DOUBLE PRECISION :: C2H2max = 0.0d0, A1max = 0.0d0, Tmax = 0.0d0, O2max = 0.0d0 DOUBLE PRECISION :: start,start1,start2 DOUBLE PRECISION :: finish,finish1,finish2 INTEGER :: IERR, MYID, NUMP, worker !Initialize MPI-------------------------------CALL MPI_INIT(IERR) 66

!Call the rank subroutine---------------------CALL MPI_COMM_RANK(MPI_COMM_WORLD,MYID,IERR) !Call the size subroutine---------------------CALL MPI_COMM_SIZE(MPI_COMM_WORLD,NUMP,IERR) !----------------------------IF (MYID == 0) THEN CALL cpu_time(start) END IF !Open input card and read input data OPEN (UNIT=3, FILE='inputcard1.dat', STATUS='OLD', ACTION='READ', IOSTAT=status) READ (3,*) nbins, infile, outfile !Open the input file and check for errors on open OPEN (UNIT=25, FILE=infile, STATUS='OLD', ACTION='READ', IOSTAT=status) !OPEN was OK. Read values !Determine number of rows in input file DO READ (25,*,IOSTAT=status) temp IF (status /= 0) EXIT nrows = nrows + 1 END DO ALLOCATE (ppdata(nrows,7), STAT=status) REWIND (UNIT=25) !Read input file data and store in array DO i = 1, nrows READ (25,*,IOSTAT=status) soot_h, C2H2_h, A1_h, T_h, O2_h, OH_h, height ppdata(i,1) = soot_h ppdata(i,2) = C2H2_h ppdata(i,3) = A1_h ppdata(i,4) = T_h ppdata(i,5) = O2_h ppdata(i,6) = OH_h ppdata(i,7) = height maxC2H2: IF (ppdata(i,2) > C2H2max) THEN C2H2max = ppdata(i,2) END IF maxC2H2 maxA1: IF (ppdata(i,3) > A1max) THEN 67

A1max = ppdata(i,3) END IF maxA1 maxT: IF (ppdata(i,4) > Tmax) THEN Tmax = ppdata(i,4) END IF maxT maxO2: IF (ppdata(i,5) > O2max) THEN O2max = ppdata(i,5) END IF maxO2 END DO !Create matrix and array based on number of bins specified ALLOCATE (bmatrix(nbins, nbins, nbins, nbins, 1), STAT=status) ALLOCATE (outlib(nbins**4, 5), STAT=status) !----------------------------IF (MYID == 0) THEN CALL cpu_time(start1) END IF !----average post-processed data within each bin-------DO i = 0, nbins - 1 DO j = 0, nbins - 1 DO k = 0, nbins - 1 DO w = 0, nbins - 1 count = 0.0d0 DO l = 1, nrows

IF (ppdata(l,2) >= (C2H2max/nbins)*i .AND. ppdata(l,2) < (C2H2max/nbins)*(i+1)) THEN IF (ppdata(l,3) >= (A1max/nbins)*j .AND. ppdata(l,3) < (A1max/nbins)*(j+1)) THEN IF (ppdata(l,4) >= (Tmax/nbins)*k .AND. ppdata(l,4) < (Tmax/nbins)*(k+1)) THEN IF (ppdata(l,5) >= (O2max/nbins)*w .AND. ppdata(l,5) < (O2max/nbins)*(w+1)) THEN count = count + 1.0d0 bmatrix(i+1, j+1, k+1, w+1, 1) = bmatrix(i+1, j+1, k+1, w+1, 1)& &+ ppdata(l,1) END IF END IF END IF END IF outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 1) =((C2H2max/nbins)/2+(C2H2max/nbins)*i) outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 2) = ((A1max/nbins)/2+(A1max/nbins)*j) 68

outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 3) = ((Tmax/nbins)/2+(Tmax/nbins)*k) outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 4) = ((O2max/nbins)/2+(O2max/nbins)*w) IF (count == 0) THEN outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 5) = 0.0d0 ELSE outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 5) =& &bmatrix(i+1, j+1, k+1, w+1, 1)/count END IF END DO END DO END DO END DO END DO DEALLOCATE (ppdata, STAT=status) DEALLOCATE (bmatrix, STAT=status) !----------------------------IF (MYID == 0) THEN CALL cpu_time(finish1) END IF !Create temporary library array ALLOCATE (final_lib((nbins+1)**4, 5), STAT=status) dim = (nbins+1)**4 !Calculate C2H2_h column of final array DO i = 1, nbins+1 DO j = 1, nbins+1 DO k = 1, nbins+1 DO w = 1, nbins IF (i == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-2)+w,1) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,1) END IF END DO END DO END DO 69

END DO

!Calculate C6H6_h(A1) column of final array DO i = 1, nbins+1 DO j = 1, nbins+1 DO k = 1, nbins DO w = 1, nbins+1 IF (i == (nbins+1)) THEN IF (j == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-1)+w,2) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w,2) END IF END IF ELSE IF (j == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w,2) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,2) END IF END IF 70

END IF END DO END DO END DO END DO

!Calculate T_h column of final array DO i = 1, nbins+1 DO j = 1, nbins DO k = 1, nbins+1 DO w = 1, nbins+1 IF (i == (nbins+1)) THEN IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-2)+w,3) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w,3) END IF END IF ELSE IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w,3) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,3) 71

ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,3) END IF END IF END IF END DO END DO END DO END DO

!Calculate O2_h column of final array DO i = 1, nbins DO j = 1, nbins+1 DO k = 1, nbins+1 DO w = 1, nbins+1 IF (j == (nbins+1)) THEN IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-2)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-2)+w,4) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w,4) END IF END IF ELSE IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w,4) 72

END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,4) END IF END IF END IF END DO END DO END DO END DO !Create soot vectors for soot column of library ALLOCATE (sootpart((nbins+1)**4), STAT=status) ALLOCATE (soot((nbins+1)**4), STAT=status) sootpart = 0.0d0 soot = 0.0d0 !----------------------------IF (MYID == 0) THEN CALL cpu_time(start2) END IF CALL MPI_BARRIER(MPI_COMM_WORLD,IERR) !determine which CPU will handle which values of j IF (MYID == (NUMP-1)) THEN loopmax = (nbins+1)**4 loopmin = (NUMP-1)*(((nbins+1)**4)/NUMP)+1 ELSE IF (MYID == 0) THEN loopmin = 1 loopmax = (((nbins+1)**4)/NUMP) ELSE loopmin = MYID*(((nbins+1)**4)/NUMP)+1 loopmax = (MYID+1)*(((nbins+1)**4)/NUMP) END IF !Calculate fv column of final array DO i = 1, nbins**4 73

DO j = loopmin, loopmax IF (final_lib(j,1) == outlib(i,1) .AND. final_lib(j,2) == outlib(i,2) .AND.& &final_lib(j,3) == outlib(i,3) .AND. final_lib(j,4) == outlib(i,4)) THEN sootpart(j) = outlib(i,5) END IF END DO END DO WRITE (*,*) 'RANK ',MYID,': LOOPMIN IS ',loopmin,' AND LOOPMAX IS ',loopmax !Take the values calculated by each CPU and populate the final library CALLMPI_REDUCE(sootpart,soot,dim,MPI_DOUBLE_PRECISION,MPI_SUM,0,MPI_COM M_WORLD,IERR) IF (MYID == 0) THEN !----------------------------------------CALL cpu_time(finish2) !Write final array to output file OPEN (UNIT=9, FILE=outfile, STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, (nbins+1)**4 final_lib(i,5) = soot(i) WRITE (9,1030) final_lib(i,1), final_lib(i,2), final_lib(i,3), final_lib(i,4), final_lib(i,5) 1030 FORMAT (1X,1P75E15.6) END DO CALL cpu_time(finish) !writing computational cost OPEN (UNIT=15, FILE='time_cost.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) WRITE (15,*) '("Time = ",f10.2," seconds.")',finish-start,finish1-start1,finish2-start2 !Close file CLOSE (UNIT=9) CLOSE (UNIT=15) END IF DEALLOCATE (sootpart, STAT=status) DEALLOCATE (soot, STAT=status) DEALLOCATE (outlib, STAT=status) 74

DEALLOCATE (final_lib, STAT=status) CLOSE (UNIT=3) CLOSE (UNIT=25) !Finalize MPI-------------------------------CALL MPI_FINALIZE(IERR) ! -------------------END PROGRAM lib_gen

75

Appendix B ­ LIBRARY GENERATION CODE USING NEB
!***************************************************************** ! Estimator Code: Version 6, July 25th, 2017 ! A library generating code for estimating soot concentration along !a streamline of a flame ! This parallel code was developed by R. Alexander, S. Bozorgzadeh, !A. Khosousi, and S.B. Dworkin at ! Ryerson University. !***************************************************************** PROGRAM lib_gen IMPLICIT NONE INCLUDE 'mpif.h' ! ***************************************************************** !This program uses post-processed, validated CFD data of a flame or !flames to generate a !library of 5 parameters (C2H2_h,C6H6_h,T_h,O2_h,fv) for the use of !estimating soot concentration of a flame. !***************************************************************** !Global variable declarations DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ppdata DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:,:,:,:) :: bmatrix DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: outlib DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: final_lib DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: sootpart, soot DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: C2H2e DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: A1e DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: Te DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: O2e DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: C2H2 DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: A1 DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: T DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: O2 INTEGER, ALLOCATABLE, DIMENSION(:,:) :: C2H2rank INTEGER, ALLOCATABLE, DIMENSION(:,:) :: A1rank INTEGER, ALLOCATABLE, DIMENSION(:,:) :: Trank INTEGER, ALLOCATABLE, DIMENSION(:,:) :: O2rank CHARACTER(len=30) :: infile CHARACTER(len=30) :: outfile 76

INTEGER :: nrows = 0, loopmin, loopmax, diff1, diff2, dummy1=0, dummy2=0, dummy3=0, dummy4=0, ebins, val INTEGER :: i, j, k, w, l, nbinse, nbins, status, dim, num1, num2, num3, num4 DOUBLE PRECISION :: soot_h, C2H2_h, A1_h, T_h, O2_h, OH_h, temp, height, count, dummy DOUBLE PRECISION :: C2H2max = 0.0d0, A1max = 0.0d0, Tmax = 0.0d0, O2max = 0.0d0 INTEGER :: IERR, MYID, NUMP, worker !Initialize MPI-------------------------------CALL MPI_INIT(IERR) !Call the rank subroutine---------------------CALL MPI_COMM_RANK(MPI_COMM_WORLD,MYID,IERR) !Call the size subroutine---------------------CALL MPI_COMM_SIZE(MPI_COMM_WORLD,NUMP,IERR) !Open input card and read input data OPEN (UNIT=3, FILE='inputcardtest.dat', STATUS='OLD', ACTION='READ', IOSTAT=status) READ (3,*) nbinse, nbins, infile, outfile !Open the input file and check for errors on open OPEN (UNIT=25, FILE=infile, STATUS='OLD', ACTION='READ', IOSTAT=status) !OPEN was OK. Read values !Determine number of rows in input file DO READ (25,*,IOSTAT=status) temp IF (status /= 0) EXIT nrows = nrows + 1 END DO ALLOCATE (ppdata(nrows,7), STAT=status) REWIND (UNIT=25) !Read input file data and store in array DO i = 1, nrows READ (25,*,IOSTAT=status) soot_h, C2H2_h, A1_h, T_h, O2_h, OH_h, height ppdata(i,1) = soot_h ppdata(i,2) = C2H2_h ppdata(i,3) = A1_h ppdata(i,4) = T_h ppdata(i,5) = O2_h 77

ppdata(i,6) = OH_h ppdata(i,7) = height maxC2H2: IF (ppdata(i,2) > C2H2max) THEN C2H2max = ppdata(i,2) END IF maxC2H2 maxA1: IF (ppdata(i,3) > A1max) THEN A1max = ppdata(i,3) END IF maxA1 maxT: IF (ppdata(i,4) > Tmax) THEN Tmax = ppdata(i,4) END IF maxT maxO2: IF (ppdata(i,5) > O2max) THEN O2max = ppdata(i,5) END IF maxO2 END DO WRITE(*,*) 'Acetylene max is ', C2H2max WRITE(*,*) 'Benzene max is ', A1max WRITE(*,*) 'Temperature max is ', Tmax WRITE(*,*) 'Oxygen max is ', O2max !Create matrix and array based on number of bins specified ALLOCATE (C2H2e(nbinse,2), STAT=status) ALLOCATE (A1e(nbinse,2), STAT=status) ALLOCATE (Te(nbinse,2), STAT=status) ALLOCATE (O2e(nbinse,2), STAT=status) DO i = 1, nbinse C2H2e(i,1) = (C2H2max/nbinse)*i A1e(i,1) = (A1max/nbinse)*i Te(i,1) = (Tmax/nbinse)*i O2e(i,1) = (O2max/nbinse)*i END DO DO i = 1, nbinse num1 = 0 num2 = 0 num3 = 0 num4 = 0 DO j = 1, nrows IF (ppdata(j,2) > C2H2e(1,1)*(i-1) .AND. ppdata(j,2) <= C2H2e(1,1)*i) THEN num1 = num1 + 1 END IF

78

IF (ppdata(j,3) > A1e(1,1)*(i-1) .AND. ppdata(j,3) <= A1e(1,1)*i) THEN num2 = num2 + 1 END IF IF (ppdata(j,4) > Te(1,1)*(i-1) .AND. ppdata(j,4) <= Te(1,1)*i) THEN num3 = num3 + 1 END IF IF (ppdata(j,5) > O2e(1,1)*(i-1) .AND. ppdata(j,5) <= O2e(1,1)*i) THEN num4 = num4 + 1 END IF END DO C2H2e(i,2) = num1 A1e(i,2) = num2 Te(i,2) = num3 O2e(i,2) = num4 END DO WRITE(*,*) 'nrows is ', nrows OPEN (UNIT=19, FILE='C2H2e.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (19,*) C2H2e(i,1), C2H2e(i,2) END DO OPEN (UNIT=29, FILE='A1e.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (29,*) A1e(i,1), A1e(i,2) END DO OPEN (UNIT=39, FILE='Te.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (39,*) Te(i,1), Te(i,2) END DO OPEN (UNIT=49, FILE='O2e.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (49,*) O2e(i,1), O2e(i,2) END DO 79

ALLOCATE (C2H2rank(nbinse,2), STAT=status) ALLOCATE (A1rank(nbinse,2), STAT=status) ALLOCATE (Trank(nbinse,2), STAT=status) ALLOCATE (O2rank(nbinse,2), STAT=status) DO i = 1, nbinse IF (C2H2e(i,2) > dummy1) THEN dummy1 = C2H2e(i,2) END IF IF (A1e(i,2) > dummy2) THEN dummy2 = A1e(i,2) END IF IF (Te(i,2) > dummy3) THEN dummy3 = Te(i,2) END IF IF (O2e(i,2) > dummy4) THEN dummy4 = O2e(i,2) END IF C2H2rank(1,1) = dummy1 A1rank(1,1) = dummy2 Trank(1,1) = dummy3 O2rank(1,1) = dummy4 END DO DO i = 1, nbinse-1 dummy1 = 0 dummy2 = 0 dummy3 = 0 dummy4 = 0 DO j = 1, nbinse IF (C2H2e(j,2) > dummy1 .AND. C2H2e(j,2) < C2H2rank(i,1)) THEN dummy1 = C2H2e(j,2) END IF IF (A1e(j,2) > dummy2 .AND. A1e(j,2) < A1rank(i,1)) THEN dummy2 = A1e(j,2) END IF IF (Te(j,2) > dummy3 .AND. Te(j,2) < Trank(i,1)) THEN dummy3 = Te(j,2) END IF IF (O2e(j,2) > dummy4 .AND. O2e(j,2) < O2rank(i,1)) THEN dummy4 = O2e(j,2) END IF END DO C2H2rank(i+1,1) = dummy1 A1rank(i+1,1) = dummy2 80

Trank(i+1,1) = dummy3 O2rank(i+1,1) = dummy4 END DO DO i = 1, nbinse jloop: DO j = 1, nbinse IF (C2H2e(j,2) == C2H2rank(i,1)) THEN C2H2rank(i,2) = j EXIT jloop END IF END DO jloop END DO DO i = 1, nbinse jloop: DO j = 1, nbinse IF (A1e(j,2) == A1rank(i,1)) THEN A1rank(i,2) = j EXIT jloop END IF END DO jloop END DO DO i = 1, nbinse jloop: DO j = 1, nbinse IF (Te(j,2) == Trank(i,1)) THEN Trank(i,2) = j EXIT jloop END IF END DO jloop END DO DO i = 1, nbinse jloop: DO j = 1, nbinse IF (O2e(j,2) == O2rank(i,1)) THEN O2rank(i,2) = j EXIT jloop END IF END DO jloop END DO OPEN (UNIT=59, FILE='C2H2rank.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (59,*) C2H2rank(i,1), C2H2rank(i,2) END DO 81

OPEN (UNIT=69, FILE='A1rank.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (69,*) A1rank(i,1), A1rank(i,2) END DO OPEN (UNIT=79, FILE='Trank.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (79,*) Trank(i,1), Trank(i,2) END DO OPEN (UNIT=89, FILE='O2rank.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbinse WRITE (89,*) O2rank(i,1), O2rank(i,2) END DO !Create matrix and array based on number of bins specified ALLOCATE (C2H2(nbins,2), STAT=status) ALLOCATE (A1(nbins,2), STAT=status) ALLOCATE (T(nbins,2), STAT=status) ALLOCATE (O2(nbins,2), STAT=status) DO i = 1, nbinse C2H2(i,1) = C2H2e(i,1) A1(i,1) = A1e(i,1) T(i,1) = Te(i,1) O2(i,1) = O2e(i,1) END DO val = nbinse + 1 diff1 = nbins - nbinse diff2 = diff1 iloop: DO i = 1, nbinse ebins = ((C2H2rank(i,1)*1.0/nrows)*diff1)+1 IF (ebins > diff2) THEN ebins = diff2 END IF diff2 = diff2 - ebins DO j = val, (val+ebins-1) C2H2(j,1) = C2H2e(C2H2rank(i,2),1)-((C2H2max/nbinse)/(ebins+1))*(j-val+1) END DO val = val + ebins IF (diff2 == 0) THEN 82

EXIT iloop END IF END DO iloop DO i = 1, nbins-1 DO j = 1, nbins-1 IF (C2H2(j,1) > C2H2(j+1,1)) THEN dummy = C2H2(j,1) C2H2(j,1) = C2H2(j+1,1) C2H2(j+1,1) = dummy END IF END DO END DO val = nbinse + 1 diff1 = nbins - nbinse diff2 = diff1 iloop: DO i = 1, nbinse ebins = ((A1rank(i,1)*1.0/nrows)*diff1)+1 IF (ebins > diff2) THEN ebins = diff2 END IF diff2 = diff2 - ebins DO j = val, (val+ebins-1) A1(j,1) = A1e(A1rank(i,2),1)-((A1max/nbinse)/(ebins+1))*(j-val+1) END DO val = val + ebins IF (diff2 == 0) THEN EXIT iloop END IF END DO iloop DO i = 1, nbins-1 DO j = 1, nbins-1 IF (A1(j,1) > A1(j+1,1)) THEN dummy = A1(j,1) A1(j,1) = A1(j+1,1) A1(j+1,1) = dummy END IF END DO END DO val = nbinse + 1 diff1 = nbins - nbinse diff2 = diff1 iloop: DO i = 1, nbinse 83

ebins = ((Trank(i,1)*1.0/nrows)*diff1)+1 IF (ebins > diff2) THEN ebins = diff2 END IF diff2 = diff2 - ebins DO j = val, (val+ebins-1) T(j,1) = Te(Trank(i,2),1)-((Tmax/nbinse)/(ebins+1))*(j-val+1) END DO val = val + ebins IF (diff2 == 0) THEN EXIT iloop END IF END DO iloop DO i = 1, nbins-1 DO j = 1, nbins-1 IF (T(j,1) > T(j+1,1)) THEN dummy = T(j,1) T(j,1) = T(j+1,1) T(j+1,1) = dummy END IF END DO END DO val = nbinse + 1 diff1 = nbins - nbinse diff2 = diff1 iloop: DO i = 1, nbinse ebins = ((O2rank(i,1)*1.0/nrows)*diff1)+1 IF (ebins > diff2) THEN ebins = diff2 END IF diff2 = diff2 - ebins DO j = val, (val+ebins-1) O2(j,1) = O2e(O2rank(i,2),1)-((O2max/nbinse)/(ebins+1))*(j-val+1) END DO val = val + ebins IF (diff2 == 0) THEN EXIT iloop END IF END DO iloop DO i = 1, nbins-1 DO j = 1, nbins-1 IF (O2(j,1) > O2(j+1,1)) THEN dummy = O2(j,1) 84

O2(j,1) = O2(j+1,1) O2(j+1,1) = dummy END IF END DO END DO DO i = 1, nbins num1 = 0 num2 = 0 num3 = 0 num4 = 0 DO j = 1, nrows IF (i == 1) THEN IF (ppdata(j,2) <= C2H2(i,1)) THEN num1 = num1 + 1 END IF IF (ppdata(j,3) <= A1(i,1)) THEN num2 = num2 + 1 END IF IF (ppdata(j,4) <= T(i,1)) THEN num3 = num3 + 1 END IF IF (ppdata(j,5) <= O2(i,1)) THEN num4 = num4 + 1 END IF ELSE IF (ppdata(j,2) > C2H2(i-1,1) .AND. ppdata(j,2) <= C2H2(i,1)) THEN num1 = num1 + 1 END IF IF (ppdata(j,3) > A1(i-1,1) .AND. ppdata(j,3) <= A1(i,1)) THEN num2 = num2 + 1 END IF IF (ppdata(j,4) > T(i-1,1) .AND. ppdata(j,4) <= T(i,1)) THEN num3 = num3 + 1 END IF IF (ppdata(j,5) > O2(i-1,1) .AND. ppdata(j,5) <= O2(i,1)) THEN num4 = num4 + 1 END IF END IF END DO C2H2(i,2) = num1 A1(i,2) = num2 T(i,2) = num3 85

O2(i,2) = num4 END DO OPEN (UNIT=99, FILE='C2H2.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbins WRITE (99,*) C2H2(i,1), C2H2(i,2) END DO OPEN (UNIT=98, FILE='A1.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbins WRITE (98,*) A1(i,1), A1(i,2) END DO OPEN (UNIT=97, FILE='T.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbins WRITE (97,*) T(i,1), T(i,2) END DO OPEN (UNIT=96, FILE='O2.dat', STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, nbins WRITE (96,*) O2(i,1), O2(i,2) END DO !Create matrix and array based on number of bins specified ALLOCATE (bmatrix(nbins, nbins, nbins, nbins, 1), STAT=status) ALLOCATE (outlib(nbins**4, 5), STAT=status) !----average post-processed data within each bin-------DO i = 0, nbins-1 DO j = 0, nbins-1 DO k = 0, nbins-1 DO w = 0, nbins-1 count = 0D0 DO l = 1, nrows IF (ppdata(l,2) > C2H2(i,1) .AND. ppdata(l,2) <= C2H2(i+1,1)) THEN IF (ppdata(l,3) > A1(j,1) .AND. ppdata(l,3) <= A1(j+1,1)) THEN IF (ppdata(l,4) > T(k,1) .AND. ppdata(l,4) <= T(k+1,1)) THEN IF (ppdata(l,5) > O2(w,1) .AND. ppdata(l,5) <= O2(w+1,1)) THEN

86

count = count + 1 bmatrix(i+1, j+1, k+1, w+1, 1) = bmatrix(i+1, j+1, k+1, w+1, 1)& &+ ppdata(l,1) END IF END IF END IF END IF outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 1) = ((C2H2(i,1)+C2H2(i+1,1))/2) outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 2) = ((A1(j,1)+A1(j+1,1))/2) outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 3) = ((T(k,1)+T(k+1,1))/2) outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 4) = ((O2(w,1)+O2(w+1,1))/2) IF (count == 0) THEN outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 5) = 0D0 ELSE outlib(i+1+nbins*j+(nbins**2)*k+(nbins**3)*w, 5) =& &bmatrix(i+1, j+1, k+1, w+1, 1)/count END IF END DO END DO END DO END DO END DO DEALLOCATE (ppdata, STAT=status) DEALLOCATE (bmatrix, STAT=status) !Create temporary library array ALLOCATE (final_lib((nbins+1)**4, 5), STAT=status) dim = (nbins+1)**4 !Calculate C2H2_h column of final array DO i = 1, nbins+1 DO j = 1, nbins+1 DO k = 1, nbins+1 DO w = 1, nbins IF (i == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-2)+w,1) ELSE IF (j == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& 87

&outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-2)+w,1) ELSE IF (k == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w,1) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w+1,1) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,1) END IF END DO END DO END DO END DO

!Calculate C6H6_h(A1) column of final array DO i = 1, nbins+1 DO j = 1, nbins+1 DO k = 1, nbins DO w = 1, nbins+1 IF (i == (nbins+1)) THEN IF (j == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-2)+nbins*(k-1)+w,2) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w,2) END IF END IF ELSE IF (j == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,2) ELSE 88

final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w,2) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,2) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j-1)+(nbins+1)*(k)+w,2) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,2) END IF END IF END IF END DO END DO END DO END DO !Calculate T_h column of final array DO i = 1, nbins+1 DO j = 1, nbins DO k = 1, nbins+1 DO w = 1, nbins+1 IF (i == (nbins+1)) THEN IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-2)+w,3) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-2)+(nbins**2)*(j-1)+nbins*(k-1)+w,3) END IF END IF ELSE IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN 89

final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w,3) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,3) ELSE final_lib(((nbins+1)**3)*(i-1)+((nbins+1)**2)*(j)+(nbins+1)*(k-1)+w,3) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,3) END IF END IF END IF END DO END DO END DO END DO !Calculate O2_h column of final array DO i = 1, nbins DO j = 1, nbins+1 DO k = 1, nbins+1 DO w = 1, nbins+1 IF (j == (nbins+1)) THEN IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-2)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-2)+w,4) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-2)+nbins*(k-1)+w,4) END IF END IF ELSE 90

IF (k == (nbins+1)) THEN IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-2)+w,4) END IF ELSE IF (w == (nbins+1)) THEN final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w-1,4) ELSE final_lib(((nbins+1)**3)*(i)+((nbins+1)**2)*(j-1)+(nbins+1)*(k-1)+w,4) =& &outlib((nbins**3)*(i-1)+(nbins**2)*(j-1)+nbins*(k-1)+w,4) END IF END IF END IF END DO END DO END DO END DO !Create soot vectors for soot column of library ALLOCATE (sootpart((nbins+1)**4), STAT=status) ALLOCATE (soot((nbins+1)**4), STAT=status) sootpart = 0.0d0 soot = 0.0d0 CALL MPI_BARRIER(MPI_COMM_WORLD,IERR) !determine which CPU will handle which values of j IF (MYID == (NUMP-1)) THEN loopmax = (nbins+1)**4 loopmin = (NUMP-1)*(((nbins+1)**4)/NUMP)+1 ELSE IF (MYID == 0) THEN loopmin = 1 loopmax = (((nbins+1)**4)/NUMP) ELSE loopmin = MYID*(((nbins+1)**4)/NUMP)+1 loopmax = (MYID+1)*(((nbins+1)**4)/NUMP) END IF

91

!Calculate fv column of final array DO i = 1, nbins**4 DO j = loopmin, loopmax IF (final_lib(j,1) == outlib(i,1) .AND. final_lib(j,2) == outlib(i,2) .AND.& &final_lib(j,3) == outlib(i,3) .AND. final_lib(j,4) == outlib(i,4)) THEN sootpart(j) = outlib(i,5) END IF END DO END DO WRITE (*,*) 'RANK ',MYID,': LOOPMIN IS ',loopmin,' AND LOOPMAX IS ',loopmax !Take the values calculated by each CPU and populate the final library CALLMPI_REDUCE(sootpart,soot,dim,MPI_DOUBLE_PRECISION,MPI_SUM,0,MPI_COM M_WORLD,IERR) IF (MYID == 0) THEN !Write final array to output file OPEN (UNIT=9, FILE=outfile, STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) DO i = 1, (nbins+1)**4 final_lib(i,5) = soot(i) WRITE (9,1030) final_lib(i,1), final_lib(i,2), final_lib(i,3), final_lib(i,4), final_lib(i,5) 1030 FORMAT (1X,1P75E15.6) END DO !Close file CLOSE (UNIT=9) END IF DEALLOCATE (sootpart, STAT=status) DEALLOCATE (soot, STAT=status) DEALLOCATE (outlib, STAT=status) DEALLOCATE (final_lib, STAT=status) CLOSE (UNIT=3) CLOSE (UNIT=25) !Finalize MPI-------------------------------CALL MPI_FINALIZE(IERR) ! -------------------END PROGRAM lib_gen 92

Appendix C ­ MINIMUM DISTANCE DATA LOOK-UP CODE
!***************************************************************** ! Estimator Code: Version 1, December 15th, 2015 ! A minimum spatial interpolation code for estimating soot !concentration along the pathline of a flame ! This parallel code was developed by R. Alexander, S. Bozorgzadeh, !A. Khosousi, and S.B. Dworkin at ! Ryerson University. !***************************************************************** PROGRAM mins_interp IMPLICIT NONE ! *************************************************************** !This program uses post-processed CFD data along a streamline of !a flame and interpolates through a 5-dimensional library to !estimate soot concentration along that streamline. !*************************************************************** !Global variable declarations DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: lib_data DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: flame_data DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: temp DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: matrix DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: output CHARACTER(len=20) :: libfile = 'lib11_5D.dat' CHARACTER(len=25) :: flamefile = 'smyth48wo_msl_5D.dat' CHARACTER(len=20) :: outfile = 'interp_data.dat' INTEGER :: i, j, status INTEGER :: nrows1 = 0, nrows2 = 0, jj = 0 DOUBLE PRECISION :: C2H2_lib, A1_lib, T_lib, O2_lib, soot_lib DOUBLE PRECISION :: soot_flame, C2H2_flame, A1_flame, T_flame, O2_flame, OH_flame, height DOUBLE PRECISION :: x1, x2, x3, x4, dummy, minval, soot_max = 0.0, output_max = 0.0 !Open library, read and store data into matrix OPEN (UNIT=3, FILE=libfile, STATUS='OLD', ACTION='READ', IOSTAT=status) fileopen_lib: IF (status == 0) THEN !OPEN was OK. Read values !read through the library to determine number of rows DO READ (3,*,IOSTAT=status) dummy 93

IF (status /= 0) EXIT nrows1 = nrows1 + 1 END DO ALLOCATE (lib_data(nrows1,5), STAT=status) !Read library values and store in matrix allocate_lib: IF (status == 0) THEN REWIND (UNIT=3) DO i = 1, nrows1 READ (3,*,IOSTAT=status) C2H2_lib, A1_lib, T_lib, O2_lib, soot_lib lib_data(i,1) = C2H2_lib lib_data(i,2) = A1_lib lib_data(i,3) = T_lib lib_data(i,4) = O2_lib lib_data(i,5) = soot_lib END DO ELSE allocate_lib WRITE(*,*) 'Error with library allocation' END IF allocate_lib ELSE fileopen_lib WRITE (*,1010) status 1010 FORMAT (' ','Error opening library: IOSTAT = ', I6) END IF fileopen_lib !Open flame data, read and store data into matrix OPEN (UNIT=9, FILE=flamefile, STATUS='OLD', ACTION='READ', IOSTAT=status) fileopen_flame: IF (status == 0) THEN !OPEN was OK. Read values !read through the flame file to determine number of rows DO READ (9,*,IOSTAT=status) dummy IF (status /= 0) EXIT nrows2 = nrows2 + 1 END DO ALLOCATE (flame_data(nrows2,5), STAT=status) !Read flame file values and store in matrix allocate_flame: IF (status == 0) THEN REWIND (UNIT=9) DO i = 1, nrows2 READ (9,*,IOSTAT=status) soot_flame, C2H2_flame, A1_flame, T_flame, O2_flame, OH_flame, height 94

flame_data(i,1) = C2H2_flame flame_data(i,2) = A1_flame flame_data(i,3) = T_flame flame_data(i,4) = O2_flame IF (soot_max < soot_flame) THEN soot_max = soot_flame END IF END DO ELSE allocate_flame WRITE(*,*) 'Error with flame data allocation' END IF allocate_flame ELSE fileopen_flame WRITE (*,1020) status 1020 FORMAT (' ','Error opening flame file: IOSTAT = ', I6) END IF fileopen_flame ALLOCATE (temp(nrows1,5), STAT=status) !create temporary matrix with library data corresponding !to non-zero soot concentration values allocate_temp: IF (status == 0) THEN DO i = 1, nrows1 IF (lib_data(i,5) /= 0) THEN jj = jj + 1 temp(jj,5) = lib_data(i,5) temp(jj,4) = lib_data(i,4) temp(jj,3) = lib_data(i,3) temp(jj,2) = lib_data(i,2) temp(jj,1) = lib_data(i,1) END IF END DO ELSE allocate_temp WRITE(*,*) 'Error with temporary matrix allocation' END IF allocate_temp DEALLOCATE (lib_data, STAT=status) ALLOCATE (matrix(jj), STAT=status) ALLOCATE (output(nrows2,5), STAT=status) !Interpolate the data DO i = 1, nrows2 minval = 1E6 DO j = 1, jj

95

x1 = (ABS(temp(j,1) - flame_data(i,1)))**2 x2 = (ABS(temp(j,2) - flame_data(i,2)))**2 x3 = (ABS(temp(j,3) - flame_data(i,3)))**2 x4 = (ABS(temp(j,4) - flame_data(i,4)))**2 matrix(j) = x1 + x2 + x3 + x4 IF (matrix(j) < minval) THEN minval = matrix(j) END IF END DO DO j = 1, jj IF (minval == matrix(j)) THEN output(i,5) = temp(j,5) output(i,4) = temp(j,4) output(i,3) = temp(j,3) output(i,2) = temp(j,2) output(i,1) = temp(j,1) END IF !Determine peak soot concentration IF (output_max < output(i,5)) THEN output_max = output(i,5) END IF END DO END DO DEALLOCATE (flame_data, STAT=status) DEALLOCATE (temp, STAT=status) DEALLOCATE (matrix, STAT=status) !Open output file OPEN (UNIT=25, FILE=outfile, STATUS='REPLACE', ACTION='WRITE', IOSTAT=status) fileopen_out: IF (status == 0) THEN !Open was OK. Write soot concentration values along streamline DO i = 1, nrows2 WRITE(25,1030) output(i,5) 1030 FORMAT (F14.10) END DO ELSE fileopen_out WRITE (*,1040) status 1040 FORMAT (' ','Error opening output file: IOSTAT = ', I6) 96

END IF fileopen_out DEALLOCATE (output, STAT=status) CLOSE (UNIT=3) CLOSE (UNIT=9) CLOSE (UNIT=25) print '("Percent difference = ",f10.2,"%.")', ABS(soot_max-output_max)/soot_max*100 ! -------------------END PROGRAM mins_interp

97

REFERENCES
[1] N. E. Board, "Canada's Energy Future 2016: Energy Supply and Demand Projections to 2040," 2016. [2] I. E. Agency, "Coal Information: Overview 2017," Coal Information 2017, 2017. [3] U. E. I. Administration, "International Energy Outlook 2016," U.S. Department of Energy, 2016. [4] S. Zelenev, "A landmark Paris accord on climate change: A comment," International Social Work, vol. 59, no. 3, pp. 419-421, 2016. [5] A. Liati, B. Brem, L. Durdina, M. Vogtli, Y. Dasilva, P. Eggenschwiler and J. Wang, "Electron Microscopic Study of Soot Particulate Matter Emissions from Aircraft Turbine Engines," Environmental Science and Technology, vol. 48, no. 18, pp. 10975-10983, 2014. [6] M. Shiraiwa, K. Selzle and U. Poschl, "Hazardous components and health effects of atmospheric aerosol particles: reactive oxygen species, soot, polycyclic aromatic compounds and allergenic prorcjteins," Free Radical Research, vol. 46, no. 8, pp. 927-939, 2012. [7] R. Beniwal and V. Shivgotra, "An Elementary Framework for Judging the Cardiovascular Toxicity of Carbon Soot: Experiences from an Occupational Health Survey of Diamond Industry Workers," Cardiovascular Toxicology, vol. 9, no. 4, pp. 194-200, 2009. [8] "Air contaminants: Particulate matter," California Department of Public Health, 15 07 2015. [Online]. Available: http://www.cehtp.org/faq/air/air_contaminants_particulate_matter_(pm)#_faq_2. [9] W. Chameides and M. Bergin, "Soot takes center stage," Science, vol. 297, p. 1, 2002. [10] M. Jacobson, "Strong radiative heating due to the mixing state of balck carbon in atmospheric aerosols," Nature, vol. 409, pp. 695-697, 2001. [11] J. Houghton, L. Meira Filho, B. Callander, N. Harris, A. Kettenberg and K. Maskell, "Climate Change 1995: The Science of Climate Change," University of Cambridge, New York, 1996. [12] J. Hansen and M. Sato, "Trends of measured climate forcing agents," Proceedings of the National Academy of Sciences of the United States of America, vol. 98, no. 26, pp. 1477814783, 2001.

98

[13] J. Hansen and L. Nazarenko, "Soot climate forcing via snow and ice albedos," Proceedings of the National Academy of Sciences of the United States of America, vol. 101, no. 2, pp. 423-428, 2003. [14] X. Cheng, L. Chen, G. Hong, F. Yan and S. Dong, "Soot pollutant standards to be stricter," The Associated Press, 15 06 2012. [15] S. Turns, An Introduction to Combustion: Concepts and Applications Second Edition, New York: McGraw-Hill, 2000. [16] T. Dilstrom and A. Violi, "The effect of reaction mechanisms on the formation of soot precursors in flames," Combustion Theory and Modelling, vol. 21, pp. 23-34, 2017. [17] K. Ono, Y. Matsukawa, K. Dewa, A. Watanabe, K. Takahashi, Y. Saito, Y. Matsushita, H. Aoki, K. Era, T. Aoki and T. Yamaguchi, "Formation mechanisms of soot from highmolecular-weight polycyclic aromatic hydrcarbons," Combustion and Flame, vol. 162, no. 6, pp. 2670-2678, 2015. [18] I. Glassman, "Soot formaiton in combustion processes," Proceedings of the Combustion Institute, vol. 22, pp. 295-311, 1988. [19] F. Liu, H. Guo, G. J. Smallwood and O. L. Gulder, "Numerical modelling of soot formation and oxidation in laminar coflow non-smoking and smoking ethylene diffusion flames," Combustion Theory and Modeling, vol. 7, pp. 301-315, 2003. [20] I. M. Kennedy, "Models of soot formation and oxidation," Progress in Energy and Combustion Science, vol. 23, pp. 95-132, 1997. [21] R. Said, A. Garo and R. Borghi, "Soot formation modeling for turbulent flames," Combustion and Flame, pp. 71-86, 1997. [22] M. Frenklach and H. Wang, "Detailed modeling of soot particle nucleation and growth," Proceedings of the Combustion Institute, vol. 23, pp. 1559-1566, 1990. [23] B. Zhong, S. Dang, Y. Song and J. Gong, "3-D simulation of soot formation in a directinjection diesel engine based on a comprehensive chemical mechanism and method of moments," Combustion Theory and Modeling, vol. 16, pp. 143-171, 2012. [24] A. J. Brownh and J. B. Heywood, "A fundamentally-based stochastic mixing model method for predicting NO and soot emissions from direct injection diesel engines," Combustion Science and Technology, vol. 58, pp. 195-207, 1988.

99

[25] M. S. Celnik, M. Sander, A. Raj, R. H. West and M. Kraft, "Modeling soot formation in a premixed flame using an aeromatic-site soot model and an improved oxidation rate," Proceedigns of the Combustion Institute, vol. 32, pp. 639-646, 2009. [26] V. Chernov, M. J. Thomson, S. B. Dworkin, N. A. Slavinskaya and U. Riedel, "Soot formation with C1 and C2 fuels using an improved chemical mechanism for PAH growth," Combustion and Flame, vol. 161, pp. 592-601, 2014. [27] V. Chernov, Q. Zhang, M. J. Thomson and S. B. Dworkin, "Numerical investigation of soot formation mechanisms in partially-premixed ethylene-air co-flow flame," Combustion and Flame, vol. 159, pp. 2789-2798, 2012. [28] S. B. Dworkin, J. A. Cooke, B. A. V. Bennett, B. C. Connelly, M. B. Long, M. D. Smooke, R. J. Hall and M. B. Colket, "Distributed-memory parallel computation of a forced, timedependent, sooting, ethylene/air coflow diffusion flame," Combusion Theory and Modeling, vol. 13, pp. 795-822, 2009. [29] S. B. Dworkin, M. D. Smooke and V. Giovangigli, "The impact of detailed multicomponent transport and thermal diffusion effects on soot formation in ethylene/air flames," Proceedings of the Combustion Institute, vol. 32, pp. 1165-1172, 2009. [30] S. B. Dworkin, Q. Zhang, M. J. Thomson, N. A. Slavinskaya and U. Riedel, "Application of an enhanced PAH growth model to soot formation in a laminar coflow ethylene/air diffusion flame," Combustion and Flame, vol. 158, no. 9, pp. 1682-1695, 2011. [31] S. H. Park, S. N. Rogak, W. K. Bushe, J. Z. Wen and M. J. Thomson, "An Aerosol model to predict size and structure of soot particles," Combustion Theory and Modeling, vol. 9, pp. 499-513, 2005. [32] M. Sirignano, J. Kent and A. D'Anna, "Further experimental and modelling evidences of soot fragmentation in flames," Proceedings of the Combustion Institute, vol. 35, pp. 17791786, 2015. [33] M. D. Smooke, M. B. Long, B. C. Connelly, M. B. Colket and R. J. Hall, "Soot formation in laminar diffusion flames," Combustion and Flame, vol. 143, pp. 613-628, 2005. [34] M. D. Smooke, C. S. McEnally, L. D. Pfefferle, R. J. Hall and M. B. Colket, "Computational and experimental study of soot formation in a coflow, laminar diffusion flame," Combustion and Flame, vol. 117, pp. 117-139, 1999. [35] J. Z. Wen, M. J. Thomson, M. F. Lightstone, S. H. Park and S. N. Rogak, "An improved moving sectional aerosol model of soot formation in a plug flow reactor," Combustion Science and Technology, vol. 178, pp. 921-951, 2006. 100

[36] N. A. Eaves, M. J. Thomson and S. B. Dworkin, "The effect of conjugate heat transfer on soot formation modeling at elevated pressures," Combustion Science and Technology, vol. 185, pp. 1799-1819, 2013. [37] T. B. Hunter, T. A. Litzinger, H. Wang and M. Frenklach, "Ethane oxidation at elevated pressures in the intermediate temperature regime: Experiments and modeling," Combustion and Flame, vol. 104, pp. 505-523, 1996. [38] A. Veshkini and S. Dworkin, "A computational study of soot formation and flame structure of coflow laminar methane/air diffusion flames under microgravity and normal gravity," Combustion Theory and Modelling, pp. 1-15, 2017. [39] Q. Zhang, "Detailed modeling of soot formation/oxidation in laminar coflow diffusion flames," PhD thesis, University of Toronto, 2009. [40] B. Zhao, Z. Yang, M. V. Johnston, H. Wang, A. S. Wexler, M. Balthasar and M. Kraft, "Measurement and numerical simulation of soot particle size distribution functions in a laminar premixed ethylene-oxygen-argon flame," Combustion and Flame, vol. 133, pp. 173-188, 2003. [41] M. Harris, G. King and N. Laurendeau, "Influence of temperature and hydroxyl concentration on incipient soot formation in premixed flames," Combustion and Flame, pp. 99-112, 1986. [42] D. Olson, J. Pickens and R. Gill, "The effects of molecular structure on soot formation ll. Diffusion flames," Combustion and Flame, pp. 43-60, 1985. [43] M. Fairweather, W. P. Jones and R. P. Lindstedt, "Predictions of radiative transfer from a turbulent reacting jet in a cross-wind," Combustion and Flame, vol. 89, pp. 45-63, 1992. [44] J. Z. Wen, M. J. Thomson, M. F. Lightstone and S. N. Rogak, "Detailed kinetic modeling of carbonaceous nanoparticle inception and surface growth during the pyrolysis of C6H6 behind shock waves," Energy and Fuels, vol. 20, pp. 547-559, 2006. [45] S. Keum, H. G. Im and D. N. Assanis, "A spray-interactive flamelet model for direct injection engine combustion," Combustion Science and Technology, vol. 184, pp. 469-488, 2012. [46] F. A. Jaberi and P. Givi, "Inter-layer diffusion model of scalar mixing in homogenous turbulence," Combustion Science and Technology, vol. 104, pp. 249-272, 1996. [47] A. Kazakov and D. E. Foster, "Soot formation during DI diesel combustion using a multistep phenomenological model," SAE Tech Paper, 1998. 101

[48] S. Sukumaran, C. V. Huynh and S. C. Kong, "Numerical modeling of soot emissions in diesel sprays based on detailed fuel and PAH chemistry," Combustion Science and Technology, vol. 185, pp. 1696-1714, 2013. [49] G. Vishwanathan and R. D. Reitz, "Numerical predictions of diesel flame lift-off length and soot distributions under low temperature combustion conditions," SAE Tech Paper, 2008. [50] K. M. Leung, R. P. Lindstedt and W. P. Jones, "A simplified rection-mechanism for soot formation in non-premixed flames," Combustion and Flame, vol. 87, pp. 289-305, 1991. [51] K. B. Lee, M. W. Thring and J. M. Beer, "On the rate of combustion of soot in a laminar soot flame," Combustion and Flame, vol. 6, p. 137, 1962. [52] G. Cai, M. Yen and J. Abraham, "On formulating a simplified model for diesel and biodiesel combustion," Chemical Engineering Science, vol. 144, pp. 249-259, 2016. [53] J. Appel, H. Bockhorn and M. Frenklach, "Kinetic modeling of soot formation with detailed chemistry and physics: laminar premixed flames of C2 hydrocarbons," Combustion and Flame, vol. 121, pp. 122-136, 2000. [54] N. A. Eaves, A. Veshkini, C. Riese, Q. Zhang, S. B. Dworkin and M. J. Thomson, "A numerical study of high pressure, laminar, sooting, ethane-air coflow diffusion flames," Combustion and Flame, vol. 159, pp. 3179-3190, 2012. [55] M. Balthasar and M. Kraft, "A stochastic approach to calculate the particle size distribution function of soot particles in laminar premixed flames," Combustion and Flame, vol. 133, pp. 289-298, 2003. [56] R. I. Patterson, J. Singh, M. Balthasar, M. Kraft and W. Wagner, "Extending stochastic soot simulation to higher pressures," Combustion and Flame, vol. 145, pp. 638-642, 2006. [57] C. Celis, B. Moss and P. Pilidis, "Emissions modelling for the optimization of greener aircraft operations," Proceedings of the ASME Turbo Expo, 2009. [58] M. Balthasar, F. Mauss, M. Pfitzner and A. Mack, "Implementation and validation of a new soot model and application to aeroengine combustors," Engineering for Gas Turbines and Power, vol. 124, pp. 66-74, 2002. [59] H. Barths, N. Peters, N. Brehm, A. Mack, M. Pfitzner and V. Smiljanovski, "Simulation of pollutant formation in a gas-turbine combustor using unsteady flamelets," Proceedings of the Combustion Institute, vol. 27, pp. 1841-1847, 1998.

102

[60] E. Riesmeier, S. Honnet and N. Peters, "Flamelet modelling of pollutant formation in a gas turbine combustion chamber using detailed chemistry for a kerosene model fuel," Engineering for Gas Turbine and Power, vol. 126, pp. 889-905, 2004. [61] H. Koo, M. Hassanaly, V. Raman, M. Mueller and K. Geigle, "Large-Eddy Simulation of Soot Formation in a Model Gas Turbine Combustor," Engineering for Gas Turbines and Power, vol. 139, no. 3, 2016. [62] G. Blanquart, P. Pepiot-Desjardins and H. Pitsch, "Chemical Mechanism for High Temperature Combustion of Engine Relevant Fuels With Emphasis on Soot Precursors," Combustion and Flame, vol. 156, no. 3, pp. 588-607, 2009. [63] M. Mueller, G. Blanquart and H. Pitsch, "Hybrid Method of Moments for Modeling Soot Formation and Growth," Combustion and Flame, vol. 156, no. 6, pp. 1143-1155, 2009. [64] A. Attili, F. Bisetti, M. Mueller and H. Pitsch, "Effects of non-unity Lewis number of gasphase species in turbulent nonpremixed sooting flames," Combustion and Flame, vol. 166, pp. 192-202, 2016. [65] C. M. Megaridis and R. A. Dobbins, "Comparison of soot growth and oxidation in smoking and non-smoking ethylene diffusion flames," Combustion Science and Technology, vol. 66, pp. 1-16, 1989. [66] A. Khosousi and S. B. Dworkin, "Detailed modelling of soot oxidation by O2 and OH in laminar diffusion flames," Proceedings of the Combustion Institute, vol. 35, no. 2, pp. 1903-1910, 2015. [67] G. Legros, P. Joulain, J. Vantelon, A. Funetes, D. Bertheau and J. L. Torero, "Soot volume fraction measurements in a three-dimensional laminar diffusion flame established in microgravity," Combustion Science and Technology, vol. 178, pp. 813-835, 2006. [68] R. J. Santoro, H. G. Semerjian and R. A. Dobbins, "Soot particle measurements in diffusion flames," Combustion and Flame, vol. 51, pp. 203-218, 1983. [69] K. C. Smyth and C. R. Shaddix, "Laser-induced incandescence measurements of soot production in steady and flickering methane, propane, and ethylene diffusion flames," Combustion and Flame, vol. 107, pp. 418-452, 1996. [70] A. Veshkini, S. B. Dworkin and M. J. Thomson, "A soot particle surface reactivity model applied to a wide range of laminar ethylene/air flames," Combustion and Flame, vol. 161, no. 12, pp. 3191-3200, 2014.

103

[71] O. Park, R. Burns, O. Buxton and N. Clemens, "Mixture fraction, soot volume fraction, and velocity imaging in the soot-inception region of a turbulent non-premized jet flame," Proceedings of the Combustion Institute, vol. 36, pp. 899-907, 2017. [72] P. Gobbato, M. Masi, A. Toffolo, A. Lazzaretto and G. Tanzinid, "Calculation of the flow field and NOx emissions of a gas turbine combustor by a coarse computational fluid dynamics model," Energy, vol. 45, pp. 445-455, 2012. [73] J. Zhu, Z. Ouyang and Q. Lu, "Numerical simulation on pulverized coal combustion and NOx emissions in high temperature air from circulating fluidized bed," Journal of Thermal Science, vol. 22, no. 3, pp. 261-268, 2013. [74] S. Bozorgzadeh, "Development of soot concentration estimator for industrial combustion applications," PhD thesis, Ryerson University, 2012. [75] P. M. Mandatori and O. L. Gulder, "Soot formation in laminar ethane diffusion flames at pressures from 0.2 to 3.3 MPa," Proceedings of the Combustion Institute, vol. 33, pp. 577584, 2011. [76] N. A. Eaves, Q. Zhang, F. Liu, H. Guo, S. B. Dworkin and M. J. Thomson, "CoFlame: A refined and validated numerical algorithm for modeling sooting laminar coflow diffusion flames," Computer Physics Communications, vol. 207, pp. 464-477, 2016. [77] J. B. Moss, C. D. Stewart and K. J. Young, "Modeling soot formation and burnout in a high-temperature laminar diffusion flame burning under oxygen-enriched conditions," Combustion and Flame, vol. 101, pp. 491-500, 1995. [78] J. Nagle and R. F. Strickland-Constable, "Oxidation of carbon between 1000-2000 degrees celsius," Proceedings of the Fifth Conference on Carbon, vol. 1, pp. 154-164, 1962. [79] C. P. Zhao, C. L. Song, X. J. Li, Y. L. Li and Q. Sun, "Effects of fuel injection timing and combustion chamber geometry on combustion process and emissions of diesel engine," Combustion Science and Technology, vol. 15, pp. 393-398, 2009. [80] A. Kazakov, H. Wang and M. Frenklach, "Detailed modeling of soot formation in laminar premixed ehylene flames at a pressure of 10 bar," Combustion and Flame, vol. 100, pp. 111-120, 1995. [81] F. Xu, P. B. Sunderland and G. M. Faeth, "Soot formation in laminar premixed ethylene/air flames at atmospheric pressure," Combustion and Flame, vol. 108, pp. 471-493, 1997.

104

