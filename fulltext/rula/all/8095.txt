´ PRICING AND HEDGING ASIAN OPTIONS UNDER LEVY PROCESSES AND ROBUST LONG-TERM INVESTING WITH LEARNING ABOUT STOCK RETURNS

by

Andrew Na B.Eng. Ryerson University, 2016

A thesis presented to Ryerson University

in partial fulfillment of the requirements for the degree of Master of Science in the program of Applied Mathematics

Toronto, Ontario, Canada, 2018 © Andrew Na, 2018

AUTHOR'S DECLARATION FOR ELECTRONIC SUBMISSION OF A THESIS

I hereby declare that I am the sole author of this thesis. This is a true copy of the thesis, including any required final revisions, as accepted by my examiners.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

I understand that my thesis may be made electronically available to the public

ii

Pricing and Hedging Asian Options Under L´ evy Processes and Robust Long-Term Investing with Learning about Stock Return Master of Science, 2018 Andrew Na Applied Mathematics Ryerson University

ABSTRACT
In this work we propose a parametric model using the techniques of time-changed subordination that captures the implied volatility smile. We demonstrate that the Fourier-Cosine method can be used in a semi-static way to hedge for quadratic, VaR and AVaR risk. We also observe that investors looking to hedge VaR can simply hold the amount in a portfolio of mostly cash, whereas an investor hedging AVaR will need to hold more risky assets. We also extend ES risk to a robust framework. A conditional calibration method to calibrate the bivariate model is proposed.

For a robust long-term investor who maximizes their recursive utility and learns about the stock returns, as the willingness to substitute over time increases, the equity demand decreases and consumption-wealth ratio increases. As the preference for robustness increases the demand for risk decreases. For a positive correlation, we observe that learning about returns encourages the investor to short the bond at all levels of  and vice versa.

iii

ACKNOWLEDGMENTS
This thesis concludes my research as a master's student at Ryerson University, from September 2016 to August 2018. The success of my candidacy was largely due to the continuous support of both my supervisors Dr. Pablo Olivares and Dr. Alexey Rubtsov. As well as Dr. Cornelius Oosterlee and Dr. Bowen Zhang, who, without reserve, were generous in their help. This work was possible thanks to the support of NSERC, the government of Canada, the government of Ontario and Ryerson University.

iv

DEDICATION
The conclusion of this work marks the completion of another chapter in my life. The past two years went by in a blink of an eye, but at the same time it was filled with great memories at an institution that is always willing to give you a chance. This work has been at times challenging, at frustrating and brain wracking but most of all fulfilling. It has been the highlight of my life for the last two years and it feels gratifying to see it finished.

First and foremost, I would like to express my utmost gratitude to Dr. Pablo Olivares and Dr. Alexey Rubtsov. I have learned so many lessons from them both that I will carry forward as a researcher, academic and most importantly as a person. I would like to thank all of my instructors who have put tireless hours into our education and really helped me grow as a mathematician; Dr. Sebastian Ferrando, Dr. Jean-Paul Pascal, Dr. Silvana Ilie, Dr. Katrin Rohlf, Dr. Foivos Xanthos, and Dr. Niushan Gao. I would also like to express my gratitude to Steve Kanellis and Teresa Lee who worked tirelessly to support me and my colleagues and I would like to thank Ms. Kotlarenko and Ms. Evans who instilled in me a love for Mathematics. Lastly, I would like to express my gratitude to my friends Shannen and John for their encouragement and council and my family for their support and understanding.

v

TABLE OF CONTENTS
Declaration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Abstract . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Dedication . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . List of Tables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . List of Figures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . List of Appendicies 1 2 Introduction ii iii iv v ix xi

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xii 1 5 5 7 8 9 9

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.1 2.2 2.3 Preliminaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Arbitrage-free Pricing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . L´ evy Processes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.3.1 2.3.2 2.4 Markov Property of L´ evy Processes . . . . . . . . . . . . . . . . . . . . . . . Characteristic Function and Cumulants . . . . . . . . . . . . . . . . . . . . .

Representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.4.1 2.4.2 2.4.3 Exponential L´ evy Processes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 Girsanov Transform . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 Feynman-Kac Formula . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15

2.5

Time-Changed L´ evy Process . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 2.5.1 Multivariate Subordination . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 . . . . . . . . . . . . . . . . . . . . . . . . . . 18

3

A Time-Changed Exponential L´ evy Model 3.1 3.2

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 Model Setting and General Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 3.2.1 Characteristc Function and L´ evy Triplets of the Model . . . . . . . . . . . . 19

3.3

Univariate Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

vi

3.3.1 3.3.2 3.4

NIG Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 Variance Gamma(VG) Processes . . . . . . . . . . . . . . . . . . . . . . . . . 23

Bivariate Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 3.4.1 3.4.2 NIG Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 VG Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

4

Asian Option Pricing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 4.1 4.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 Overview of Asian Options . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 4.2.1 4.3 Asian Basket Spread Options . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

Monte Carlo Pricing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 4.3.1 Example of MC Simulation of Geometric Brownian Motion . . . . . . . . . 30

4.4

Fourier-Cosine (COS) Method . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 4.4.1 Asian Fourier-Cosine (ASCOS) Method . . . . . . . . . . . . . . . . . . . . . 32

4.5

Simulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 4.5.1 4.5.2 Univariate Simulations Results . . . . . . . . . . . . . . . . . . . . . . . . . . 35 Bivariate Simulations Results . . . . . . . . . . . . . . . . . . . . . . . . . . . 42

5

Semi-Static Hedging Using Fourier Cosine Expansion . . . . . . . . . . . . . . . . . . . . 44 5.1 5.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 Quadratic Hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 5.2.1 5.3 Simulation of Quadratic Hedging . . . . . . . . . . . . . . . . . . . . . . . . . 45

Quantile Hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 5.3.1 5.3.2 Simulation of Quantile Hedging . . . . . . . . . . . . . . . . . . . . . . . . . . 53 Robust Risk Hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

6

Calibration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 6.1 6.2 6.3 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 Model Parameter Calibration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 Implied Volatility . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62

7

Robust Consumption and Portfolio Choice with Stochastic Interest Rates and Learning about Stock Predictability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 7.1 7.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67 7.2.1 Expected Utility . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67

vii

7.2.2 7.2.3 7.2.4 7.2.5 7.3 7.4 8

Risk Aversion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 Filtering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 Overview of Stochastic Control . . . . . . . . . . . . . . . . . . . . . . . . . . 69 Dynamic Programming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

Problem Formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71 Simulation and Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88

Conclusion

Appendicies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91 Bibliography . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144

viii

LIST OF TABLES
3.1 3.2 3.3 3.4 4.1 Table of Cummulants for Univariate IG Subordinated L´ evy Process . . . . . . . . 22 Table of Cummulants for Univariate Gamma Subordinated L´ evy Process . . . . . 24 Table of Cummulants for Bivariate IG Subordinated L´ evy Process . . . . . . . . . 25 Table of Cummulants for Bivariate Gamma Subordinated L´ evy Process . . . . . . 27 Summary of Monte Carlo pricing of Asian options by IG subordinated processes, K = $52, S0 = $57, dt = 1 250, T = 1 12 . . . . . . . . . . . . . . . . . . . . . . . . . . 40 4.2 Summary of Monte Carlo pricing of Asian options by Gamma subordinated processes, K = $52, S0 = $57, dt = 1 250, T = 1 12 . . . . . . . . . . . . . . . . . . . . . . 41 5.1 Summary of expected quadratic hedging losses, S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000 . . . . . . . . . . . . . . . . . . . . . . . . 47 5.2 Optimal portfolios with quadratic hedging loss, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 5.3 Optimal portfolios with VaR hedging error, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 . . . . . . . . . . . . . . . . . . . . . . . 54 5.4 Optimal portfolios with AVaR hedging error, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 . . . . . . . . . . . . . . . . . . . . . . . 54 5.5 Expected hedging error, EQ [XT - HT ] ,comparison between MC and COS, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 . . . . . . . 54 6.1
1 Calibrated Parameters for NIG Process, n = 100000, K 1 = K 2 = $52, S0 = $68.58, 2 S0 = $74.88, dt = 1 12 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61

ix

LIST OF FIGURES
4.1 The log return processes generated by (a) IG subordinated BM (b) Gamma subordinated BM and (c) GBM, using parameters S 0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. (d) is the historic log return of observed WTI Crude prices from 2014. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 4.2 The QQ-plot from (a) IG subordinated process quantile, (b) Gamma subordinated process quantile, and (c) GBM quantile matched to the quantile of historic log return of observed WTI Crude prices from 2014 from sampled numbers. . . . 36 4.3 The distribution curves of (a) IG subordinated process, (b) Gamma subordinated process, (c) GBM and (d) the historic log return of observed WTI Crude prices from 2014 from sampled numbers. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 4.4 Monte Carlo pricing using parameters S0 = 57, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 4.5 ASCOS pricing using parameters S0 = 57, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 4.6 Monte Carlo pricing with confidence interval at  = 0.95 shows the convergence of the option prices by the law of large numbers. . . . . . . . . . . . . . . . . . . . . 40 4.7 4.8 Simulation of dependent subordinator for c = {0, 0.5, 1} values . . . . . . . . . . . . 42 Monte Carlo pricing using the bivariate model with parameters from calibration, the asset weights were set as w1 = 0.8 and w2 = 0.2. . . . . . . . . . . . . . . . . . . 43 5.1 PDF of Monte Carlo simulation of quadratic hedging loss from (a) IG subordinated BM and (b) Gamma subordinated BM, using parameters S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000. . . . . . . . . . . . . . . . . 46 5.2 CDF of Monte Carlo simulation of quadratic hedging loss from (a) IG subordinated BM and (b) Gamma subordinated BM, using parameters S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000. . . . . . . . . . . . . . . . . 48

x

5.3

CDF of Monte Carlo simulation of (a) VaR and AVaR hedging error for NIG process and (b) VaR and AVaR Hedging error for VG process, using parameters n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036. . . . . 53

6.1

Current Option market prices of (a) WTI Asian call options (b) WTI Asian put options (c) Brent crude European call options. The market data was collected from Bloomberg's database via the Bloomberg Terminal . . . . . . . . . . . . . . . 57

6.2

(a) Calibrated univariate model matched to current market price of WTI Asian Call Option (b) Calibrated bivariate model matched to current market price of WTI Asian Call Option and (c) Calibrated conditionally univariate model to current market price of Brent European Call Option expiring in 1 year. . . . . . . 62

6.3 6.4

Current market sensitivity of volatility in WTI Asian options to strike price. . . . 63 Implied volatility smile of the model for different strike prices, the parameters at each strike price, K , were calibrated for both call and put options as described in Section 6.2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64

7.1 7.2 7.3 7.4

(a) optimal stock allocation, (b) optimal bond allocation . . . . . . . . . . . . . . . 82 Relationship between consumption-wealth ratio, ambiguity and EIS . . . . . . . . 83 (a) Myopic stock allocation, (b) Myopic optimal bond allocation . . . . . . . . . . 84 (a) Stock demand due to observable parameter hedging, (b) Bond demand due to observable parameter hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85

7.5

(a) Stock demand due to unobservable parameter hedging, (b) Bond demand due to unobservable parameter hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86

7.6

(a) Stock demand due to interest rate hedging, (b) Bond demand due to interest rate hedging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87

xi

List of Appendices
Appendix A: Matlab Code . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91

xii

Chapter 1

Introduction
In the year 1900, Bachelier published his thesis "The Theory of Speculation", see [3]. In this work, Bachelier introduced the use of Brownian motion with zero drift to model the dynamics of stock movement. Unfortunately, Bachelier's work was mostly ignored for many decades until, in 1973, when Black and Scholes published their paper "The Pricing of Options and Corporate Liabilities", see [5], where they derived the famous, Black-Scholes equation; which cleverly recognized that the fair value of the option, follows the heat equation. In parallel to Black and Scholes, Samuelson and Merton, were working on the same problem, in the same year, Merton published "The Theory of Rational Options Pricing", see [34], in which he used stochastic calculus arguments to derive the Black-Scholes equation using Brownian motion. Since then many market models have been developed to price derivatives of not just common stock, but commodities and currency as well. The hedging problem is actually an older problem, the mean-variance or quadratic hedging problem is a specific case of the utility maximization problem, which was first proposed in 1738. The mean-variance hedging problem was popularized by Merton's paper "An Intertemporal Capital Asset Pricing Model", see [33]. This was extended to the general case by Schweizer, see [45] and then to incomplete markets with F¨ ollmer, see [24]. Almost a decade later, Leukert and F¨ ollmer introduced the notion of hedging risk of quantiles and presented techniques to solve them, see [23].

Asian options were first introduced in the commodities market in Tokyo, 1987, by Standish and Spaughton, two traders at Bankers Trust, now owned by Deutsche. In this work, we look more specifically at Arithmetic average fixed strike Asian options. We follow the work of Zhang and Oosterlee, see [47], who introduced a Fourier-Cosine series expansion method to price arithmetic average asian options. Ruijter and Oosterlee, see [42], extend the Fourier-Cosine method of Fang and Oosterlee, see [22], to the two dimensional case relying on the independence of the 1

CHAPTER 1 underlying assets. Pellegrino et al, see [38], further extend the method to three dimenstions, again under the assumption that the underlying assets are independent. Li and Chen, see [28], propose a pricing and hedging method using the Edgeworth series expansion, for diffusion type models. Deelstra et al , see [17] propose a general functional for the Asian basket spread payoff, Albrecher and Predota, see [1], present a pricing method based on the characteristics of the NIG L´ evy processes and Boughamora et al, see [7], price and hedge Asian options under the relative entropy measure.

In this work we explore the application of time changed L´ evy process to price and hedge Asian options derived from oil commodities. We present a time changed model with a subordinator made from a linear combination of two independent subordinating processes. This introduces an inherent dependence structure in the model. The model assumes that there is a linear structure in time between underlying assets, this tells us that a portfolio will be more volatile if the assets are more correlated. Intuitively this means that the underlying assets have a common process driving them, i.e. macroeconomic cycle. The parametric nature of the model also let's us use heavy-tailed distributions to capture heavy tailedness in the data. In our work we use the Asian Fourier-Cosine method of Zhang and Oosterlee, see [47], to price arithmetic Asian options using the proposed time changed model. We derive the univariate and bivariate characteristic function of the time changed model as well as its moments which is summarised in Tables 3.13.4. The Fourier-Cosine method was compared with an efficient Monte Carlo algorithm and from the numerical simulations it was found that the Fourier-Cosine method is computationally faster than the efficient Monte Carlo by about an order of magnitude, i.e. 2 seconds vs. 20 seconds. For a detailed error analysis of the Fourier Cosine method we refer the reader to the work of Fang and Oosterlee, see [22], and Zhang and Oosterlee, see [47]. We also note that the Fourier-Cosine method, exhibit some instability around the strike price of $0.

We also considered the application of the Fourier-Cosine method in different hedging strategies. Alonso et al, see [2], also looks at the application of the Fourier-Cosine method to the hedging problem, but they only show a numerical simulation of delta and gamma hedging and makes an incomplete note on quantile hedging. In our work we assume that the investor hedges in a semi static way, in otherwords the investors only rebalances their portfolio outside the time interval [t, T ]. We look at quadratic hedging problem as solved by Kolkiewicz et al, see [27] and quantile hedging as seen in the work of F¨ ollmer and Leukert, see [23]. We found that quadratic, VaR (value at risk) and AVaR (average value at risk) risk cannot be completely hedged in an

2

CHAPTER 1 incomplete market, this is a result that is well known. We also observed that investors looking to hedge VaR can simply hold the amount in a portfolio of mostly cash, whereas an investor hedging AVaR will need to hold more risky assets to generate larger returns. We also extend AVaR to a robust framework which is intended to reduce modelling error.

Through calibration against market data, we observe that our model successfully produces an implied volatility smile. We propose a conditional calibration method for the bivariate model and we approach the inverse problem using the Pattern Search algorithm as shown in Torczon's work, see [46]. The key advantage of this algorithm is that it is a direct search method, which implies that the function does not necessarily need to be differentiable. Torczon, see [46], provides analytic background to justify global convergence for convex cost functions. We find that the Pattern Search method works particularly well in solving calibration problems for our model.

The theory of Utility Maximization has a long history in macro and financial economics. It's central premise is the fact that asset prices are determined by investor's risk preferences and by the distributions of asset's risky future payments. Until 1713 it was believed that individuals value risky assets based solely on higher expected payoffs, this was contradicted by Nicholas Bernoulli by posing the St.Petersberg Paradox and in 1738 Daniel Bernoulli explained the paradox and proposed the concept of expected utility, the concavity of the expected utility was explained as risk aversion of the investor. Pratt(1964) and Arrow(1971) independently introduced a measure of absolute risk aversion which was extended to relative risk aversion, which is independent of wealth, see [39]. In this work, we use a recursive relative risk aversion preference of the Epstein-Zin type, see [19]

The reader is directed to Pennachi, see [39], for a general overview on the theory of Utility Maximization and Campbell and Viceira, see [11], for a general overview on portfolio choice for long-term investors. Campbell and Viceira, see [10], use regression to maximize Epstein-Zin type preferences to solve the optimal asset allocation and consumption problem for a long lived investor. Campbell et al, see [9] extend the framework to a continuous time VAR model. Campbell, Chan and Viceira, see [8], extend the framework to a multivariate setting. Maenhout, see [32], introduces the robustness problem and solves it for the CRRA (Constant Relative Risk Aversion) and Power Utility case. Liu, see [31], extends Maenhout's work to the EZ preferences case. Ju and Miao, see [26], presents a general utility function incorporating ambiguity and learning, in a regime switching asset pricing model with dividends. Escobar et al, see [20],

3

CHAPTER 1 present a framework which looks at the long-term investors problem with CRRA preferences where the investor learns about stock returns with two parameters, an observed parameter and an unobserved parameter, which is estimated by optimal non-linear filtering.

In this work we follow the work of Escobar et al, see [20] and Liu, see [31]. We use the filtration techniques of Shiryaev and Liptser, see [30] to estimate the unobserved parameter with optimal non-linear filtering from observed parameters. Using the robust representation of Anderson (2012) as shown Escobar et al, see [20] we derive an explicit expression for the optimal portfolio and consumption as an institutional investor in an infinite horizon setting with relative preference utility of the Epstein-Zin type. For a robust investor, the introduction of ambiguity aversion effectively increases the risk aversions. When time preferences and risk preferences are separated it is interesting to explore how ambiguity aversion affects the robust investor who learns about stock returns and is wiling to substitute consumption. In general, we find that if the investors willingness to substitute over time increases, the equity demand decreases and consumption-wealth ratio increases. As the preference for robustness increases the demand for risk decreases. We observe that learning about returns encourages the investor to short the riskless asset at all levels of  .

This work is divided into the following chapters. The first portion of this work is contained in Chapters 2 through 6. In Chapter 2 we introduce an extensive background into various existing results in probability, to ensure the work is complete as possible. Chapter 3, we build the model from it's foundations, we derive the L´ evy triplet, the characteristic function, its exponential function and the moments. Chapter 4 looks at the application of the model to price Asian options using Monte Carlo simulation and Asian Fourier-Cosine pricing. Chapter 5 looks at the application of the Fourier-Cosine method to quadratic and quantile hedging and extends risk hedging to a robust framework. Chapter 6 presents some results of model calibration, we see that the model can generate the implied volatility smile and present a conditional parameter calibration approach to calibrate the bivariate case using pattern search algorithms for a root mean square error(RMSE) cost function. Chapter 7 contains the second portion of the thesis. This chapter is designed to be self contained and is supplemented by the background in Chapter 2. In this chapter, we discuss the implications of robustness preferences and intertemporal substitution to a long-term investor who learns about stock returns. Chapter 8 is the conclusion of the thesis and summarizes key results in both portions.

4

Chapter 2

Background
2.1 Preliminaries

Throughout this work we assume the standard setup. We assume that we work in a probability space (, F , {Ft }t[0,T ] , P) with a non-decreasing filtration {Ft }t[0,T ] that follows the usual assumptions. Definition 2.1. Filtration Let (, F , P) be some probability space with the  -algebra, F . Then the filtration of F generated by some right continuous process Yt ( ) is defined as {Ft }t[0,T ] =  {Yt ( )} for   , is the smallest  -algebra generated by Yt . The  -algebra generated by the process Yt is non-decreasing, i.e F0  F1  ...  FT We assume the probability measure, P, is the real world probability and there exists an equivalent martingale measure (EMM) Q such that Q is absolutely continuous with respect to P, denoted Q << P, and we assume that our EMM Q is the risk neutral measure. The drift µ(t, y ) = µ, variance  (t, y ) =  , and interest rate r(t, y ) = r are assumed to be constants. The log price for each asset, j = 1, 2, is assumed to follow a L´ evy process {Yt dynamic for each asset is assumed to be given by St
(j ) (j )

}t0 and the price

= S0 exp(Yt

(j )

(j )

)

For simplicity we assume that no dividends are paid and there are no transaction costs. The preliminaries are presented without proofs as we assume the reader is familiar with the fundamentals of continuous time stochastic analysis. Definition 2.2. C´ adl´ ag Function A function is c´ adl´ ag if it is right continuous and has left limits, i.e. for a function f  [0, T ]  Rd , 5

CHAPTER 2

2.1. PRELIMINARIES

for each t  [0, T ] the limit f (t- ) = lim f (s) exists, the limit f (t+ ) = lim f (s) exists and f (t ) = f (t + ).
st,s<t st,s>t

Remark 2.3. Any continuous function is c´ adl´ ag, but c´ adl´ ag functions are not necessarily continuous and can have discontinuities. If there exists a discontinuity point at t we have that f (t) = f (t) - f (t- ), which is called a jump at t. It is important to note that a c´ adl´ ag function can have at most a countable number of jumps, see [14]. Stock prices are modelled using random c´ adl´ ag functions. If we look at the filtration Ft of all possible stock prices, from t = [0, T ] we know stock price at time t is St = St+ , which is by definition c´ adl´ ag. Definition 2.4. Stopping Time A random variable T    [0, ) is a stopping time if [T  t]  Ft , see [40]. Definition 2.5. Martingale An adapted process {Yt }t[0,T ] is called a martingale with respect to Ft (1) E Yt <  (2) if s  t, then E[Yt Fs ] = Ys a.s. Definition 2.6. Semi-Martingale A process {Yt }t[0,T ] is called a semimartingale with respect to F , if and only if Yt = Mt + At where Mt is a martingale and At is of finite variation. Yt is c´ adl´ ag, adapted and is continuous in probability, see [40], [18] Example 2.7. Let St be the adapted process that describes the asset price and t be a simple predictable process with stopping time T , the the wealth process is given by
T

Xt = X0 +
0

t dSt = 0 S0 +

d j =1

j j t St

(2.1)

The wealth process is an example of a semimartingale, see [40]. Definition 2.8. Quadratic Variation Let X and Y be semimartingales, the quadratic variation process of X is [X, X ] = X 2 -2  X - dX and the quadratic covariation process of X and Y is [X, Y ] = XY -  X - dX -  Y - dY , see [40]. Corollary 2.9. Polarization Identity
1 [X, Y ] = 2 ([X + Y, X + Y ] - [X, X ] - [Y, Y ])

6

CHAPTER 2

2.2. ARBITRAGE-FREE PRICING

Proof. The corollary is a result of the definition of quadratic variation, see [40]. Definition 2.10. Quadratic Pure Jump Process A semimartingale Y is called quadratic pure jump if [Y, Y ]c = 0, i.e. the continuous martingale term is zero and [Y, Y ] = Y02 +  (Ys )2
0<st

2.2

Arbitrage-free Pricing

Let's consider a market with d assets whose prices are modelled as real valued c´ adl´ ag vector
0 d d processes St = (St , .., St )  [0, T ] × Rd . A portfolio is a real valued vector t = (0 t , ..., t ), such j that the value of the portfolio is given by Xt (St , t ) =  j t St =< t , St > j =1 d

Definition 2.11. Predictable Processes The predictable  -algebra is the  -algebra generated on (0, T ] ×  by all c´ agl´ ad processes i.e processes that are left continuous with right limits. A measurable random variable t  [0, T ] ×   Rd is called a predictable process, i.e. For t = 0, 1, ..., M , j t is Ft-1 -measurable, see [14]. In financial terms, t gives us our transaction dates as a filtration made from our  -algebra generated by our stopping times; which is a countable random partition on [0, T ]. The portoflio is chosen based on the information available at t - 1, which shows that t is Ft-1 -measurable. This means when a brocker executes a trade at t they are working with portfolio values at t - 1. Definition 2.12. Simple Predictable Processes A simple predictable process {t }t[0,T ] is given by t = 0 1t=0 +
M n=1

tn 1[tn ,tn+1 ]

(2.2)

Where each t0 = 0 < t1 < t2 , ... < tM = T is a stopping time and each t is a predictable bounded random variable, see [14]. Definition 2.13. Self-Financing Portfolio Given the portfolio strategy t , we say the the portfolio is self financing if and only if the wealth process dXt = t dSt  Xt = X0 +  t dSt where St is a c´ adl´ ag random process, see [18]
0 T

Definition 2.14. Arbitrage Opportunity An arbitrage opportunity is a self-financing portfolio with a wealth process that satisfies the following conditions (1) X0 (t ) = 0 7

CHAPTER 2 (2) P[XT (t )  0] = 1 (3) P[XT (t ) > 0] > 0

´ 2.3. LEVY PROCESSES

Proof. Sondermann, shows that as long as an equivalent martingale measure exists no-arbitrage opportunities exists, see [18], Theorem 4.7.2. Definition 2.15. Attainable Admissible Trading Strategy An attainable admissible trading strategy is a self-financing trading strategy that admits no arbitrage. i.e. Let   U , where U is a subspace of admissible portfolios such that t is self financing strategy. There exists an EMM Q such that EQ [Xt (t )] = X0 see [18] Definition 2.16. Expectation under Risk Neutral Measure We consider the EMM Q such that, St = St- e-rt+Yt is a Q-martingale, and Yt follows the dynamics of Eq.(2.15) then we have that e-r(T -t) E[Xt (St )] = EQ [Xt (St )] is a Q-martingale when  = 0 and µ = r - - (ey - 1 - y )Y (dy )


2.3

L´ evy Processes

Definition 2.17. L´ evy Processes Let (, F , {Ft }t[0,T ] , P) be a probability space with filtration Ft , we define an adapted stochastic process Yt = {Y (t) t  [0, T ]} as a L´ evy process, if it satisfies the following properties: (1) Y0 = 0 (2) Yt has independent increments, i.e. Yt - Ys where [s < t]  [0, T ] are independent of Fs . (3) Yt has staionary increments, i.e. Yt0 , Yt1 - Yt0 , ..., Ytn - Ytn-1 are independent (4) Yt is continuous in probability i.e. For each > 0, lim P( Ys - Yt  ) = 0.
st

see, [14] Remark 2.18. Every L´ evy process has a c´ adl´ ag modification which is itself a L´ evy process, see [40].

8

CHAPTER 2 Then, we can say that is {Yt
(j )

´ 2.3. LEVY PROCESSES }t0 is a L´ evy process, for any t > 0 the distribution of {Yt
(j )

}t0

is infinitely divisible, see [14], [40]. Definition 2.19. Infinite Divisibility A probability distribution pY on Rd is said to be inifinitely divisble if for any integer d  2, there exists M identically independent distributed (i.i.d) random variables Y1 , ..., YM such that Y = M i=1 Yn  pY , see [14]. Theorem 2.20. Infinite Divisibility of L´ evy Processes Let Yt be a L´ evy process.Then for every t, Yt has an infinitely divisible distribution. We can also say that if pY is an infinitely divisible distribution then there exists a Yt such that Y1  pY

2.3.1

Markov Property of L´ evy Processes

Definition 2.21. Markov Processes Let X be a random variable with filtration Ft then X is called Markov, when: E[X Ft ] = E[Y Yt ] where Y  Ft see [14]. By definition the L´ evy processes satisfies (u)Ydt = ((u))dt , where t = dt = ti - ti-1 is the time increment; this is sufficient enough to say that Yt has the Markov property. In fact this is a stronger version of the Markov property since it holds for each t. The strong Markov property of L´ evy processes allows us to replace dt with any c´ adl´ ag random time, see [14]. Definition 2.22. Transition Operator for Strong Markov Processes The transition operator for Markov processes is defined as Pt f (t, y ) = E[f (t + t, Yt )] The linearity of of L´ evy processes gives us Pt+s = Pt Ps

2.3.2

Characteristic Function and Cumulants

Definition 2.23. Characteristic Function The characteristic function Y of a random variable Y , is the Fourier-Stieltjes transform of the distribution function F (y ), i.e: Y (u) = E[eiuY ] =
 -

eiuY dF (y ), i =



-1

9

CHAPTER 2 Definition 2.24. Exponential Moments Similarly we can define the exponential moments E[exp[uY ]] = exp[tY (-iu)] Definition 2.25. Independent Characteristic Functions For independent random variables X and Y we have: X +Y (u) = X (u)Y (u) Definition 2.26. Characteristic Exponent

2.4. REPRESENTATION

(2.3)

For a random variable Y and u  R the characteristic exponent of Y is defined as Y (u) = 1 1 log(E[exp[iuY ]]) = log(Y (u)) t t (2.4)

Remark 2.27. By Definition 2.26 it is easy to see that x (u) = exp[t (u)] Definition 2.28. Cumulant Function Let Yt be a L´ evy process with characteristic exponent given by 2.4 and E[ Yt n ] <  for each t > 0, then it's cumulant generating function is given by, see [14] n = t  n ( (u)) in un
u=0

(2.5)

(2.6)

1 (Yt+dt - Yt ) = dtE[Yt ] 2 (Yt+dt - Yt ) = dtV ar[Yt ] s(Yt ) 3 (Yt+dt - Yt ) =  2 (Yt+dt - Yt )3 2 dt 4 (Yt+dt - Yt ) k (Yt ) k (Yt+dt - Yt ) = = 2 (Yt+dt - Yt )2 dt s(Yt+dt - Yt ) = divisible, see [14].

(2.7) (2.8) (2.9) (2.10)

The cumulants of Yt increase linearly with t, i.e. Yt = tY1 , which holds because Yt is infinitely

2.4

Representation

Definition 2.29. Jump measure ¯ where A  Ft bounded away from 0, then For a L´ evy process Yt with c´ adl´ ag paths and 0  A the jump measure is given by: NtA = 1A (Ys- - Ys ) = 10 1 A ( Y s )

0<s1

0<s1

CHAPTER 2

2.4. REPRESENTATION

The jump measure is simply a counting measure, that counts the number of jumps in the path process, see [40]. Definition 2.30. L´ evy measure Let {Yt }t[0,T ] be a L´ evy process on Ft . Then, the L´ evy measure  of Yt on Rn is defined as:
A  (A) = E[N1 ] = E[ 0<s1

1A (Ys )]

 (A) is the expected number of jumps in A. the definition tells us that the L´ evy measure is the expected number of jumps that occur in our path process. Protter, [40], presents some nice results that we will use later. Theorem 2.31. Let A  Ft , and g a measurable function on A, then
A

g (y )Nt (ds, dy ) =

0<st

g (Ys )1A (Ys )

From the fact that NtA has independent and stationary increments, see [40], Theorem 34. ¯ and let g be measurable on A, then Corollary 2.32. Given A  Ft with 0  A
A

g (y )Nt (ds, dy )

is a L´ evy process, see [40]. Theorem 2.33. Let A  Ft , and  be the L´ evy measure of Y , and let g 1A  L2 (d ). Then E[ and E[(
A A

g (y )Nt (ds, dy )] = t

A

g (y ) (dx)

g (y )Nt (ds, dy ) - t

A

g (y ) (dx))2 ] = t

A

g (y )2  (dx)

Proof. see,[40], Theorem 38 Theorem 2.34. L´ evy-It^ o Decomposition Let Yt be a L´ evy process on Ft and  its L´ evy measure. Then the L´ evy process can be decomposed to: ~t Yt = µ(t, y )t +  (t, y )Bt + Jtl + J Jtl =
y <1

(2.11) (2.12)

yNt (dt, dy ) y (Nt (dt, dy ) - t (dy )) ~t (dt, dy ) yN 11

~t = J =

R R

(2.13)

CHAPTER 2

2.4. REPRESENTATION

where µ(t, y ) is the drift coefficient,  (t, y ) is the diffusion volatility and the two integral terms ~t term captures small movements and the Jtl are independent L´ evy jumps, see [14] [40]. The J term captures large movements. In tempered stable L´ evy processes the parameter  emphasizes how important these movements are. When  = 0(Gamma) the process favours large movements and when  = 1 2(Inverse Gaussian) the process favours small movements, see [14]. Theorem 2.35. It^ o Formula Let Yt be a semi-martingale process and let f (t, Yt ) be a C 1,2 function, then the It^ o formula df (t, Yt ) = f f 2  2f dt + [µdt + dBt ] + dt t y 2 y 2 f + [f (t, Yt ) - f (t, Yt- ) - y ] (dy )dt y
y <1

+

R

~t (dt, dy ) [f (t, Yt ) - f (t, Yt- )]N

(2.14)

Theorem 2.36. L´ evy-It^ o Isometry Let Yt , a semi-martingale with stopping time T . Then the solution given by applying the It^ o formula to equation (2.11) gives us Yt = Y0 + +
T 0 R T 0

µdt +

T 0

dBt +

T 0 y <1

yNt (dt, dy ) (2.15)

~t (dt, dy ) yN

and has the differential representation dYt = µdt + dBt +
y <1

yNt (dt, dy ) (2.16)

+

R

~t (dt, dy ) yN

Assuming E[Yt ] <  and if Yt has the stopping time T , Y0 = 0 and µ(t, y ) = 0 then
2 E[YT ] = E[ T 0

 2 dt +

T 0 R

y 2  (dy )dt]

(2.17)

see [37] Theorem 2.37. L´ evy Khintchine Representation Given a L´ evy process Y and its L´ evy triplet (µ, 2 , ). The characteristic exponent of Y satisfies the following formulation: Y (u) = iuµ - u2  2 + 2 (eiuy - 1 - iuy 1 y <1 ) (dy ) (2.18)

R

µ  R,  2  R+ , and  is a measure on R {0}. 12

CHAPTER 2

2.4. REPRESENTATION

Remark 2.38. The L´ evy Khintchine form is quite useful in determining the expected value of exponential L´ evy processes since E[exp(Yt )] = exp(tY (-i)) The L´ evy triplets are known for some exponential L´ evy processes as seen in [44]. µ is the drift coefficient,  is the volatility and  is the L´ evy measure. If the L´ evy measure has the form  (dy ) = u(y )dy , then u(y ) is the L´ evy density, which has the same characteristics as the probability density but does not need to integrable and is zero at the origin.

2.4.1

Exponential L´ evy Processes

Definition 2.39. Stochastic Exponential For a L´ evy process St , dSt = St- dYt , the stochastic exponential of St is given by 1 Zt = E (Yt ) = exp(Yt - [Y, Y ]c t) 2 (2.19)

Where [Y, Y ]c t = 0 is the path-continuous part of [Y, Y ] of Yt , for a proof see [40], Theorem 28. Under pure jump processes when -1 y Y (dy ) <  the stochastic exponential becomes Z t = E ( Y ) = e Yt - dZt = dYt +
2
2 t 2

1

0<st

(1 + Ys )e-Ys (2.20)

 dt + (eY - 1 - Y ) 2 0st
2 t 2

Applying the It^ o formula with f (t, y ) = ey- dYt is given by dYt = (µY - 2 )dt + 2
T 0 1 -1

0<st

 (1 + y )e-y we get that dZt = Zt- dYt where

(ey - 1 - y )Y (dy )dt +

T 0 R

~t (dt, dy ) (e y - 1 )N

(2.21)

Theorem 2.40. Ordinary and Stochastic Exponential
2 (1) Let Xt be a L´ evy process with L´ evy triplet (µX , X , X ) and Zt = E (Xt ). If Xt > 0 a.s.

then there exists another L´ evy process Yt such that Zt = eYt where Yt = log(Xt ) = Xt -
2 With L´ evy triplets (µY , Y , Y )

2t + [log(1 + Xs ) - Xs ] 2 0<st

(2.22)

µY = µX - Y = X Y =

2 + 2

(log(1 + x) - x) (dx)

[-1,1]

1 log(1+x) 1 X (dx)

13

CHAPTER 2 (2) Conversely Xt = Yt +
2 , X ) With L´ evy triplets (µX , X

2.4. REPRESENTATION

2t + [1 + Ys - eYs ] 2 0<st 2 + 2

(2.23)

µX = µY + X = Y X =

R

[ey - 1 - y ]Y (dy )

1 ey -1 1 Y (dy )

Under the EMM Q and stopping time T , the evolution of asset prices is usually described by an exponential L´ evy model with the form St = e-r(T -t) E[St ] and St = exp(Yt ), where Yt is a L´ evy process given by equation (2.15). By applying the It^ o formula the process St is given by St = e-rT St- [ + +
T 0 T 0 R 1 -1 T 0

(µY - r)dt

(ey - 1 - y )Y (dy )dt (2.24)

~t (dt, dy )] (e y - 1 )N

To check if an exponential L´ evy process is a martingale, we need to check that EQ [St ] < . Under the expectation we get EQ Ft ] = e-rT St- (At + Mt )
T

(2.25)
1

At =
0 T

[µY - r - Y dBt +
0

2 Y + 2 T 0

(ey - 1 - y )Y (dy )]dt
-1

(2.26)

Mt =

R

~t (dt, dy ) (ey - 1)N

(2.27)

Where Mt is the martingale term and At is a drift term. Under the EMM Q, we get a martingale by setting At = 0, i.e. for some interest rate r  R and Y = 0 µY - r +
  -1

(ey - 1 - y ) (dy ) = 0

(2.28)

The integral term m = -1 (ey - 1 - y ) (dy ) is given for different L´ evy processes.

2.4.2

Girsanov Transform

Definition 2.41. Radon-Nikodym Derivative Let Q be another probability measure on (, F , Ft ) such that Q << P. Then there exists Zt  L1 (, F ) with dQ = ZdP, i.e. Q(A) =
A

Zt ( )P(d )

14

CHAPTER 2 for each A  Ft . Solving for Z we get Zt = dQ dP  EQ [1A ] = E[Zt Ft ] = E[

2.4. REPRESENTATION

dQ Ft ] dP

(2.29)

Zt is a right continuous martingale such that E[Zt Ft ] = 1 and (1) Zt ( ) > 0 Q-a.s. (2) Zt = see, [18] Theorem 2.42. Girsanov Transform Let Q << P, Z = by
t dQ dP dQt dPt

on Ft

~ t is given continuous, and Mt be a P-martingale, then the Q-martingale M 1 d[M, Z ]s Zs

~ t = Mt - M
0 d

When Q = P, for L´ evy process Y such that Z = E (Y ) we get that dQ = E (Y )dP and dP = Note that E[Z0 ] = 1 a.s on measure  Lemma 2.43. For some underlying asset price given by the a pure jump L´ evy process dSt = ~t (dt, dy ) applying the St- dYt , where dYt = µY dt + R (log(1 + y ) - y )Nt (dt, dy ) + R log(1 + y )N ^t = e-r(T -t) St for Girsanov transform for some stopping time T , the discounted price, given by S interest rate r > 0 and sigmaY = 0. We define Zt = exp(
T 0  -1

(2.30)

1 dQ E (Y )

(2.31)

~t (dt, dy ) + (log(1 + y ) - y )N

T 0

(µY - r)dt) = exp(rt + Yt )

(2.32)

2.4.3

Feynman-Kac Formula

Let Yt be a L´ evy process with the L´ evy decomposition given by equation (2.11). The FeynmanKac Formula considers the problem f (t, Yt ) + Af (t, y ) = 0 t (2.33)

where Af is the infinitesimal generator of f , r is a positive real constant and (t, y )  [0, T ] × R with boundary condition f (T, y ) = H (y ) 15

CHAPTER 2

´ 2.5. TIME-CHANGED LEVY PROCESS

Definition 2.44. Infinitesimal Generator of L´ evy Processes Af is the infinitesimal generator of f (t, y ), it is given by Af = lim 1 (Pt f (t, y ) - f (t, y )) dt0 dt 1 = lim (E [f (t + dt, Yt )] - f (t, y )) t0 t f (t, y )  2 (t)  2 f (t, y ) = µ (t ) + y 2 y 2 f (t, y ) + [f (t, Yt ) - f (t, y ) - y 1 y <1 ] (dy ) y R

(2.34)

Remark 2.45. The solution of the Feynman-Kac formula, if it exists is given by
T

f (t, y ) = E exp -
t

rds H (YT ) Yt = y

(2.35)

2.5

Time-Changed L´ evy Process

There are many L´ evy processes that are used to price options. The most well known is Brownian motion, which has been used quite successfully in Finance, but present some drawbacks. One of the drawbacks of Brownian motion is that it fails to capture the jumps in asset prices, it also fails to capture the heavy-tail property and the skewness in distributions seen in Financial data of asset returns. Another class of L´ evy processes, the jump-diffusion process is a valid candidate for pricing options, but it does not capture stochastic volatility. This is what motivated the use of stochastic volatility models first by Clark, see [12], to model asset returns. Time-changed processes is one way to include stochastic volatility in a model and it's underlying distributions are rich enough to capture the properties missing in other models. This is what motivated the study into time changed L´ evy Processes.

2.5.1

Multivariate Subordination

Multivariate subordination was introduced by Barndorff-Nelson, Persen and Sato (2015), they proved that the linear combination of n independent subordinated processes is again a Levy process, see [4]. Benth and Kruhner, extended their work to generalize the results of BarndorffNelson, Persen and Sato. We will restate some results from Benth and Kruhner, see [4]. Similar results can be found in a reference text by Cont and Takov, see [14]. Definition 2.46. Subordinators Let {Rt }t[0,T ] be a c´ adl´ ag positive increasing L´ evy process, we call such processes subordinators, see [14].

16

CHAPTER 2 Theorem 2.47. Ch.f. of Subordinated L´ evy

´ 2.5. TIME-CHANGED LEVY PROCESS

Let be Yt a subordinated L´ evy process, Rt the subordinator and Xt the L´ evy process being subordinated; Xt is independent of Rt . Then the characteristic function of Yt is given by Yt (u) = exp(tRt (-iXt (u))) = exp(tlRt (Xt (u))) Proof. Let Yt = XRt be a subordinated Brownian motion then Yt (u) = E[exp(iuYt )] = E[E[exp(iu(µRt + BRt )) Rt ]] = E[exp(Rt (iuµ - = E[exp(Rt v )] = exp(tRt (-iv )) = exp(tRt (-iXt (u))) and the rest follows.
j j 0 0 and Xt are independent + cj Xt , j = 1, 2, where Xt Theorem 2.48. For a L´ evy process Yt = c0 Xt

(2.36)

u2  2 u2  2 )] Let v = iuµ - 2 2

L´ evy processes and c0 , cj constants, then {Yt }t0 has the L´ evy triplets given by: µY = c0 µX 0 + cj µX j +
t

Rn

y [1 y 1 - 1[c0 y+cj y

y 1] ]Y (dy )

(2.37) (2.38) (2.39)

Y = L0 (c0 x) + Lj (cj x) t Y = c0 L0 + cj Lj t
t

Proof. see [14], Theorem 4.1 Theorem 2.49. Let Yt = XRt be a subordinated L´ evy process and assume Rn Yt R (dRt ) < , + Xt and Rt have L´ evy triplets (µX , X , X ) and (µR , 0, ) then Y = µR X Y = µR X (A) + µY = µR µX +
 0  0

(2.40) pXt (A)R (dt)
x 1

(2.41) (2.42)

R (ds)

xpXs (dx)

where A  Ft and  is the L´ evy measure of the subordinator. Proof. see [4], Theorem 2.4

17

Chapter 3

A Time-Changed Exponential L´ evy Model
3.1 Introduction

L´ evy processes are a class of processes that are widely used in asset pricing. It contains processes such as Brownian motion, compound Poisson process, jump-diffusion process, -stable process and many others. There are many different methods to construct L´ evy processes, one of which is by subordination. We present a parametric model which adds dependence through the subordinator in a multi-asset portfolio. The resulting L´ evy process created from the subordination of another independent L´ evy process, i.e. subordinated Brownian motion, is called a time-changed process, first introduced by Clark, see [12]. The price of the assets are the exponential of time-changed processes where the subordinator is given by the Inverse Gaussian process and Variance Gamma process. The process being subordinated is a Brownian motion independent of the subordinator process.

Our model for the log-price of an asset return is a subordinated Brownian motion where the subordinator is constructed from the linear combination of two independent L´ evy processes; the new subordinator has all the properties of a L´ evy processes due to the independence of L´ evy measures, see [14].

We choose to work with subordinated Brownian motion because it is rich enough that captures small and large jumps in asset prices as well as capture the heavy-tail distribution of real asset returns, see [14]. Time-changed processes incorporate stochastic volatitlity in the model by setting time to be stochastic, i.e. Time runs faster in periods of high volatility, see [44]. 18

CHAPTER 3

3.2. MODEL SETTING AND GENERAL MODEL

This effect allows us to reproduce the volatility smile, which the classical Black-Scholes model cannot, see [14]. Next we extend the model to two dimensions to price Asian basket spread options.

3.2

Model Setting and General Model

Consider a risk neutral market with assets whose prices are represented by the vector St =
1 2  [St , St ] , where j = 1, 2, are risky assets whose dynamics are given by:  1 Y 1 S e t    0  St =   2 Yt2  S0 e   

(3.1)

where each Ytj , j = 1, 2 is a subordinated Brownian motion given by:
j j j + µj BR Ytj = Y Y Rt , j = 1, 2 t

(3.2)

j th where Y is the volatility of the j th risky asset and µj risky asset. The Y is the drift of the j

subordinator of each asset j is a linear combination of two independent subordinators given by
j j Rt = L0 t + cj Lt , j = 1, 2

(3.3)

j j where L0 t is the shared subordinator for all assets j = 1, 2, Lt . Lt is an independent increasing

L´ evy process unique to each asset, with a coefficient cj > 0; the coefficient cj must be positive because the subordinator process is by definition always increasing. In financial terms cj acts to "speed up" business time, mathematically the coefficient adds a fractional gain and introduces a linear structure in time. Notice that for the special case where cj = 0 we get the standard subordinated L´ evy process. We can also represent the model as a pure jump process, by the L´ evy-It^ o decomposition:
l,j ~ ,j Ytj = µj Y t + Jt + Jt , j = 1, 2

(3.4)

Jtl,j =
y <1

yNt (dt, dy ) y (Nt (dt, dy ) - tY j (dy ))

~t J

.j

=

R

3.2.1

Characteristc Function and L´ evy Triplets of the Model

Theorem 3.1. For each asset j = 1, 2, let Yt , be a subordinated Brownian motion with µ and  real valued constants to be calibrated. Then Yt follows equation (3.2) and it's characteristic function is given by:
j 0 Yt (u) = exp(tL (-iv ) exp(tc (-iv )) t j Lt 1 2 2 where v = iuµ - 2 u 

(3.5)

19

CHAPTER 3

3.2. MODEL SETTING AND GENERAL MODEL

Proof. The Theorem follows directly from applying Theorem 2.36 So by using the towering property Yt (u) = E[E[eiu(µRt +BRt ) Rt ]] = E[eRt (-i(iuµ- 2 u
1 2  2 ))

]

1 = etRt (-iv) , v = iuµ - u2  2 2 =e =e and the rest follows. Theorem 3.2. For each asset j = 1, 2, let Yt be the subordinated L´ evy process, Xt a Brownian
j 2 2 motion and Rt = L0 evy triplets (µY .Y , Y ),(µX , X , 0),(0, 0, R ) t + cj Lt the subordinator with L´ t(L0 (-iv )+
t cj L j (-iv )) t

tL0 (-iv ) tc
t

e

j (-iv ) j Lt

(3.6)

respectively. µY = + Y = 0  (y ) = +
 0  0  0  0 1 -1 1 -1

x ( x - µ X 0 )2  exp[- ]dxL0 (ds) 2 2tX X 0 2s 0 X j 2s x  exp[- (x - µ X j )2 ]dxLj (cj ds) 2 2tX 0 (3.7) (3.8)

X 0 2t X j 2t 1 

1 

exp[- exp[-

(y - µX 0 t)2 ]L0 (dt) 2 2tX 0 (y - µX j t)2 ]Lj (cj dt) 2 2tX j (3.9)

Proof. The L´ evy triplets of Yt are computed by applying Theorem 2.48 and Theorem 2.49 R (x) = L0 (x) + Lj (cj x) t
t

µY = = = = +

 0  0  0  0  0

L (ds)
1 -1 1 -1 1 -1 1 -1

1 -1

xpXs (dx)

( x - µ X s )2 x  exp[- ]dxR (ds) 2 2tX X 2s x ( x - µ X s )2  exp[- ]dx[L0 (ds) + Lj (cj ds)] 2 2tX X 2s x ( x - µ X 0 )2  exp[- ]dxL0 (ds) 2 2tX X 0 2s 0 X j 2s x  exp[- (x - µ X j )2 ]dxLj (cj ds) 2 2tX j

Y = µ R X =0 Y (y ) = µR µX +
 0

pX (y )R (dt) 20

CHAPTER 3 = = = +
 0  0  0  0

3.3. UNIVARIATE MODEL 1  exp[- (y - µX t)2 ]R (dt) 2 2tX

X 2t (y - µX t)2 1  exp[- ][L0 (dt) + Lj (cj dt)] 2 2tX X 2t (y - µX 0 t)2 1  exp[- ]L0 (dt) 2 2tX X 0 2t 0 X j 2t 1  exp[- (y - µX j t)2 ]Lj (cj dt) 2 2tX j

Using the L´ evy triplets we can also derive an alternate representation of the characteristic function using the L´ evy-Khintchine representation
2 Theorem 3.3. Let Yt be a subordinated Brownian motion, with L´ evy triplets (µY , Y , Y )

represented as equation (3.4), it's characteristic function is given by Y (u) = etY (u) where Y (u) = iuµY +
R

(3.10)

[eiuy - 1 - iuy 1 y <1 ]Y (dy )

(3.11)

Proof. This is the result of directly applying Theorem 2.37 with L´ evy triplets (µY , 0, Y ).

3.3

Univariate Model

The univariate case is a special case where the subordinator Rt is a real-valued process and cj = 0. The characteristic function and L´ evy triplets of Yt for the NIG and VG processes are known in closed form, see [14], Table 4.5.

3.3.1

NIG Case

Definition 3.4. IG Processes Let Lt  IGt (a, b) be a real valued process, where a = Gaussian process with the L´ evy density
x  1 e- 2     2 x3 2 R (x) =     0  

t  , 

b=

1  

then Rt = Lt is an Inverse

if x  0 otherwise

where  is the variance of the IG process. The exponential moment is given by t E[euRt ] = exp(-  ( 1 2 - u - 2 see [14], Table 4.4 21 1 2)) (3.12)

CHAPTER 3

3.3. UNIVARIATE MODEL

The NIG process is an infinite variation process with stable-like behavior of small jumps, as shown by Cont and Tankov, see [14]. As a consequence, this model gives more emphasis to local small movement of asset prices. Definition 3.5. NIG Processes Let Yt be a subordinated Brownian motion with an IG subordinator, then the process Yt  N IGt (µX , X , ), as shown by Schoutens, see [44]. In the univariate case the L´ evy measure, characteristic exponent and cumulants are known in closed form, where Xt is a Brownian motion
2 with drift µX and volatility X . The L´ evy measure is given by

Y (x) =

C Ax e K1 (B x ) x µX A= 2 X
2 µ2 X + X  2 X 2 µ2 X + X   2X 

B= C=

K1 is the modified Bessel function of the second kind which is given by Kw (z ) =  Iw- (z ) - Iw (z ) 2 sin(w) (z 2 )w + k k=0 k !(k + w + 1)


Iw- (z ) = Iw (z ) Iw (z ) =

Following Schoutens, see [44], the characteristic function is given by Y (-iv ) = exp(-at( -2i(-iv ) + b2 - b)) Where a =
1  , 

(3.13)

b=

1  

2 2 and v = iuµX - 1 2 u X then it's characteristic exponent is given by

Y (-iv ) = log(Y (u)) t = -a( -2i(-iv ) + b2 - b) and it's first two cumulants are given by Table 3.1: Table of Cummulants for Univariate IG Subordinated L´ evy Process Cummulants µ Y = 1
2 Y = 2

(3.14)

tµX
2 t(X + µ2 X ) 2 2 t(3X µX  + 3µ3 X ) 4 3 2 2 2 t(3X  + 15µ4 X  + 18X µX  )

s k

22

CHAPTER 3 see [14], Section 4.4.3

3.3. UNIVARIATE MODEL

3.3.2

Variance Gamma(VG) Processes

Like the univariate NIG case, the univariate VG case is a special case where the subordinator Rt = Gt  (a, b) is a real-valued process and cj = 0. The characteristic function and L´ evy triplets of the NIG, Yt are known in closed form, see [14], Table 4.5. Definition 3.6. Gamma Processes
t 1 Let Gt  t (a, b) be a real valued process, where a =  , b=  . Then Rt = Gt is a Gamma process
x   1 e-   if x  0   x R (x) =     0 otherwise   where  is the variace of the Gamma process. The exponential moment of the Gamma process

with L´ evy density

is given by E[euRt ] = (1 - u)-t


(3.15)

The Variance Gamma process is a finite variation process with low infinite activitiy of small jumps, see [14]. As a consequence, this model gives more emphasis to larger jumps in asset prices. Definition 3.7. VG Processes Let Yt be a subordinated Brownian motion with a Gamma subordinator, then the process Yt  V G(µX , X , ), see [44]. In the univariate case the L´ evy measure, characteristic exponent and cumulants are known in closed form, where Xt is a Brownian motion with drift µX and
2 . The L´ evy measure is given by volatility X

Y (x) =

1 Ax-B x e x µX A= 2 X
2 µ2 X + X  2 X

B=

Following Schoutens, see [44], the characteristic function is given by Y (-iv ) = (1 -
1 where a =  , b= 1 

i(-iv ) -at ) b

(3.16)

1 2 2 and v = iuµX - 2 u X then it's characteristic exponent is given by

Y (-iv ) = log(Y (-iv )) t = -a log(1 - 23

i(-iv ) ) b

(3.17)

CHAPTER 3 and it's first two cumulants are given by

3.4. BIVARIATE MODEL

Table 3.2: Table of Cummulants for Univariate Gamma Subordinated L´ evy Process Cummulants µY = 1
2 Y = 2

tµX
2 t(X + µ2 X ) 2 2 t(3X µX  + 2µ3 X ) 4 3 2 2 2 t (3  X  + 6µ4 X  + 12X µX  )

s k

see [14], Section 4.4.3

3.4

Bivariate Model

We extend the univariate case (cj = 0) to a bivariate case by using the scaling properties of the Inverse Gaussian distribution and the Gamma distribution for a constant cj > 0, see [44].

3.4.1

NIG Case

j 0 Lemma 3.8. Let Rt = L0 t + cj Lt , j = 1, 2, cj > 0 be a real valued process and Lt  IGt (a0 , b0 ),    1 where a0 = t , b0 = 1 and cj Lj cj ), where aj = t t  IG cj t ( cj aj , bj j , bj = j . 0 0

Proof. This result follows from scaling property of the Inverse Gaussian process, see [44]. Proposition 3.9. L´ evy Measure of Bivariate NIG Process Let Yt  N IG(µX , X , 0 , j , cj ) be a subordinated Brownian motion with the subordinator Rt =   j j  L0 cj ), j = 1 2cj , and j = 1 2j . L0 t + cj Lt , j = 1, 2, with cj Lt  IG cj t ( cj aj , bj t   IGt (a0 , b0 ), j = 1 20 , and j = 1 20 , then the L´ evy measure of Yt is given by Y (x) = eAx A= B0 = C0 = Bj = µX 2 X
2 µ2 X + X 0 2 X 2 µ2 X + X 0  2X 0 2 c  µ2 j j X + X 2 X

Cj C0 K1 (B0 x ) + K1 (Bj x ) x x

24

CHAPTER 3
2 µ2 X + X

3.4. BIVARIATE MODEL   cj j

Cj =

2X cj j

Proof. using equation (3.9) Y (x) = + 0 
 0  0

X 2 X j 

e

(x-µX t)2 -t 2t 2 X

dt t2 dt t2

1 2 cj

e

(x-µX t)2  - cj t 2t 2 X

Using the integral representation of the modified Bessel function Y (x) = e
µX x 2 X

 2X 0

1

2 µ2 X + X 0

1 +  2X c j

2 µ2 X + X

x  cj

K1

2 µ2 X + X 0 2 X 2 µ2 X + X 2 X

x



x

K1

cj

x

Proposition 3.10. Characteristic Function of Bivariate NIG Process Let Yt  N IG(µX , X , 0 , j , cj ) be a subordinated Brownian motion with the subordinator Rt =   j j  cj ) and L0 L0 t  IGt (a0 , b0 ).Following Schoutens, t + cj Lt , j = 1, 2, with cj Lt  IG cj t ( cj aj , bj see [44], the characteristic function of Yt is given by Y (-iv ) = E[exp(i(-iv )Yt ] = e-a0 t( where a0 =
1 , 0  - cj aj t( -2i(-iv )+b2 0 -b0 )  cj )

e

-2i(-iv )+b2 j cj -b j

b0 =

1 , 0

aj =

1 , j

bj =

1 , j

1 2 2 v = iuµX - 2 u X and cj > 0 is a constant.

Proof. Applying Theorem 3.1 we directly get the result. Remark 3.11. We can recover the characteristic exponent by Yt (u) = log(Y (u)) t which gives us  (-iv ) = -a0 ( -2i(-iv ) + b2 0 - b0 )) -  cj aj ( -2i(-iv ) + b2 j cj - bj  cj ))

Remark 3.12. The above theorem imposes that µY = 0, since and µX , X  R. Table 3.3: Table of Cummulants for Bivariate IG Subordinated L´ evy Process Cummulants µj Y = 1
j 2 (Y ) = 2

tµX + cj tµX
2 2 t((0 + c2 j j )µX + (1 + cj )X ) 3 2 3 2 2 t (3 ( 2 0 + cj j )µX + 3(0 + cj j )µX X ) 4 3 4 2 3 2 2 2 2 4 t(15(3 0 + cj j )µX + 18(0 + cj j )µX X + 3(0 + cj j )X )

s k

25

CHAPTER 3

3.4. BIVARIATE MODEL

3.4.2

VG Case

j Lemma 3.13. Let Rt = G0 t + cj Gt , j = 1, 2, cj > 0 a constant. be a real valued process. Let

G0 t  t (a0 , b0 ), where a0 =

t 0 ,

b0 =

1 0

and cj Gj t  t (aj , bj cj ), where aj =

t j ,

bj =

1 j .

Proof. This result follows from scaling property of the Gamma process, see [44]. Proposition 3.14. L´ evy Measure of Bivariate VG Process Let Yt  V G(µX , X , 0 , j , cj ) be a subordinated Brownian motion with the subordinator Rt =
j j 0 G0 t + cj Gt , j = 1, 2, with cj Gt  t (aj , bj cj ), bj = 1 j , and aj = t j . Gt  (a0 , b0 ). b0 = 1 0 ,

and a0 = t 0 then the L´ evy density of Yt is given by Y (x) = 1 Ax-B0 x 1 eAx-Bj x e + 32 x cj j x µX A= 2 X
2 µ2 X +  X 0 2 X 2 µ2 X + X cj j 2 X

B0 = Bj =

Proof. The proof is similar to Proposition 3.9, using equation (3.9) and completing the square and solving the integral gives us the proposition. Proposition 3.15. Characteristic Function of Bivariate VG Process Let Yt  V G(µX , X , 0 , j , cj ) be a subordinated Brownian motion with the subordinator Rt =
j j 0 G0 t + cj Gt , j = 1, 2, with cj Gt  (aj , bj cj ) and Gt  (a0 , b0 ), Following Schoutens, see [44],

the characteristic function of Yt is given by Y (-iv ) = E[exp(i(-iv )Yt ] = (1 - i(-iv ) b0 )-a0 t (1 - icj (-iv ) bj )-aj t where a0 =
t 0 ,

b0 =

1 0 ,

aj =

t j ,

bj =

1 j ,

2 2 v = iuµX - 1 2 u X and cj > 0 is a constant.

Proof. Applying Theorem 3.1 we directly get the result. Remark 3.16. We can recover the characteristic exponent by Yt (u) = log(Y (u)) t which gives us  (-iv ) = -a0 log(1 - i(-iv ) b0 ) - aj log(1 - icj (-iv ) bj ) Remark 3.17. The above proposition imposes that µY = 0, since µX , X  R.

26

CHAPTER 3

3.4. BIVARIATE MODEL

Table 3.4: Table of Cummulants for Bivariate Gamma Subordinated L´ evy Process Cummulants µj Y = 1
j 2 ) = 2 ( Y

tµX + cj tµX
2 2 t((0 + c2 j j )µX + (1 + cj )X ) 3 2 3 2 2 t (2 ( 2 0 + cj j )µX + 3(0 + cj j )µX X ) 4 3 4 2 3 2 2 2 2 4 t(6(3 0 + cj j )µX + 12(0 + cj j )µX X + 3(0 + cj j )X )

s k

27

Chapter 4

Asian Option Pricing
4.1 Introduction

How can we determine that a contract is fairly priced? This is one of the main questions in asset pricing and many academics have approached this problem from a mathematical and financial point of view. Literature regarding this topic is vast and carries many different opinions on how to value assets correctly. For interested readers we refer to these texts, [14], and [40] , which show pricing from both a stochastic and a partial differential equations point of view. One of the most common methods to compute prices is to use the Monte Carlo method. Monte Carlo methods takes advantage of the Law of Large Numbers to converge to a mean and output a expected price.

Alternatively, the relation between stochastic differential equations (SDE) and partial differential equations (PDE) through the Feynman-Kac representation alows us to use numerical techniques to solve pricing problems. Many different techniques have been developed to solve these PDEs, such as the method of Carr and Madan, which uses a damped Fourier series expansion to solve the PDE, [14], finite difference methods and a Fourier-Cosine expansion method developed by Fang and Oosterlee, [22]. It is well known that finite difference methods have issues in pricing high dimensional portfolios. The Fourier-Cosine method was extended to the bivariate case by Ruijter and Oosterlee, see [42] and the Asian Fourier-Cosine Method was developed by Zhang and Oosterlee, see [47]. The method was extended to three dimensions and applied to pricing and hedging multi-asset spread contracts by Pellegrino and Piergiacomo, see [38]. We present here an implementation of the Asian Fourier-Cosine method under one-dimensional time-changed models and compare with MC techniques. A two-dimensional time-changed model is presented and simulated using MC techniques.

28

CHAPTER 4

4.2. OVERVIEW OF ASIAN OPTIONS

4.2

Overview of Asian Options

Asian options were first introduced in Tokyo, 1987, for oil commodities. They are classified as path dependent options as their payoff is typically calculated as the geometric or arithmetic average of the underlying asset price at maturity [47]. These option styles are known in a broader scope as exotic options. They are usually traded over the counter (OTC) and are often illiquid. The path dependence of Asian options presents a challenge in pricing and hedging, which we try to address in this work. Definition 4.1. Asian Option
j Let {St }  R × [0, T ] be the real valued matrix of risk neutral asset price processes, where

t = 0, 1, ..., M, j = 1, 2 and M is the sampling frequency. The geometric average Asian option takes the geometric average of the price process of each asset. The geometric average is given by
G ¯t =( S M n=0 j M +1 ) Sn
1

(4.1)

Similarily, the arithmetic average can be used and is given by
A ¯t S = M 1 j Sn M + 1 n=0

(4.2)

¯t with an FT -measurable payoff H. Consider an Asian option maturing at time T based on S Then, the payoff of the European style Asian call option is given by: ¯ G,A - K j ]+ H (t, St )k = [St where (S, 0)+ = max(S, 0), see [44]. (4.3)

4.2.1

Asian Basket Spread Options

Definition 4.2. Asian Basket Spread Options Let St1 be the asset price process of a basket asset j = 1 and St2 be the asset price process of a basket of assets j = 2 then payoff of the Asian spread option is given by the following:
1 2 ¯t ¯t H (St1 , St2 , t) = [(w1 S - w2 S ) - K ]+

(4.4)

¯j , j = 1, 2 is the arithmetic averages of the respective assets, see [17] and wj is the weight where S t of each asset such that  wj = 1.
j =1 2

29

CHAPTER 4

4.3. MONTE CARLO PRICING

4.3

Monte Carlo Pricing

Monte Carlo (MC) method is a statistical method that directly applies the Central Limit Theorem by simulating n  N number of trajectories, that follow a prescribed distribution in an independent way. Random number generators (RNG) are used to sample n independent random numbers from a known distributions and relies on the Law of Large Numbers to converge to a mean, see [41]. In our work we assume we are working in a risk-neutral measure Q, to compute no arbitrage prices of Asian options. We employ efficient algorithms to reduce computation time of MC simulations by utilizing matrix operations on large generated data. Proposition 4.3. Risk-Neutral Pricing Let St (Yt ) be the price process of the underlying asset driven by the L´ evy process Yt and let H (t, Yt ) be the payoff of the Asian option under P, then the risk neutral price of the option under the risk neutral probability Q is given by EQ [H (t, Yt )] = e-r(T -t) E[H (t, Yt )] where T , is the maturity time. Proof. see [18], Theorem 4.2.1 (4.5)

4.3.1

Example of MC Simulation of Geometric Brownian Motion

The Monte Carlo algorithm outlined by Cont, see [14] is presented below. Algorithm 1: Geometric Brownian Motion while t  T do dt = 1 250 Generate Z  N(0, 1)  Y =  dtZ + µdt Y = N i=0 Y update i update t end S = S0 exp(Y ) Algorithm 1 simulates the geometric Brownian motion. It assumes that each increment is independent identically distributed (i.i.d) and draws random numbers from the standard normal distribution.

30

CHAPTER 4 Algorithm 2: Asian Option Pricing while i  N do ^T ) - K, 0) H (S (i), T ) = exp(-rT ) max(mean(S update i end

4.4. FOURIER-COSINE (COS) METHOD

Where N = T dt for stopping time T and dt is the sampling frequency i.e. daily sampling dt = 1 250. Algorithm 2 gives us the discounted price of the Asian option by taking the average of the trajectories generated from the geometric Brownian motion in Algorithm 1.

4.4

Fourier-Cosine (COS) Method

The Fourier-Cosine (COS) method is a transformation type numerical method developed by Fang and Oosterlee, see [22]. The method is extended to the bivariate case by Ruijter and Oosterlee, see [42]. The Asian Fourier-Cosine method (ASCOS) is an extension of the COS method developed by Zhang and Oosterlee, see [47]. The method is extended to three independent random variables and applied to pricing and hedging multi-asset spread contracts by Pellegrino and Piergiacomo, see [38].

The COS method calculates an approximation to the value of the option by discounting the risk neutral price. It is used to approximate the transitional probability distribution using the transitional characteristic function on a truncated interval [a, b]  R2 . Under the risk neutral probability measure Q, we denote the independent L´ evy process as Yt and risk neutral price process as St , where Yt = log(St ) and Zt = log(Xt ) such that H (t, z ) = (z - K )+ . For example, for the geometric Asian option Xt = (  St ) M +1 . We can approximation of the conditional
t=0 M
1

probability density of Zt by f (z y ) =
b 2 k a z-a Re[ZT ( y ) exp(-ik )] cos(k )dz b-a a b-a b-a b-a 2 N -1  k a z-a f (z y )  Re[ZT ( y ) exp(-ik )] cos(k ) b - a k=0 b-a b-a b-a

(4.6)

similarly we can approximate the non conditional probability density for Yt by f (y ) =
b 2 k a y-a Re[YT ( ) exp(-ik )] cos(k )dy b-a a b-a b-a b-a 2 N -1  k a y-a f (y )  Re[YT ( y ) exp(-ik )] cos(k ) b - a k =0 b-a b-a b-a

(4.7)

where Re[] is the real argument of the input, (u y ) is the conditional characteristic function of the independent L´ evy process,  is truncated a sum where the first term is truncated by 31
1 2

CHAPTER 4

4.4. FOURIER-COSINE (COS) METHOD

and k = 0, 1, ..., N - 1. The shifted characteristic function (u y ) is given by Zt (u y ) = exp(iuy )Yt (u) (4.8)

Where Yt is the characteristic function given for each process Ytj The option price is approximated by H (t, y )  exp[-r(T - t)] where Vk is given by Vk = see [22] and [42]. 2 b-a
b a N -1 k=0 

Re[ZT (

k a y ) exp(-ik )]Vk b-a b-a x-a )dx b-a

(4.9)

H (t, Xt ) cos(k

(4.10)

4.4.1

Asian Fourier-Cosine (ASCOS) Method

The Asian Fourier-Cosine method was developed by Zhang and Oosterlee is an extension of the COS method to price Asian options, see [47]. Again, we fix the complete probability space (, F , {Ft }t[0,T ] , P), and Q is the risk neutral probability measure then the price process has the dynamics given by St = S0 exp(Yt ) Where Yt is a L´ evy process. Arithmetic Average Asian Option We let the log price of the asset be Yt = log(St ), t = 0, ..., M and we the log return be defined as
t+1 Rt = log( SS ), then if we let Z1 = RM we get that for t = 2, ..., M we have that t

(4.11)

Zt = log(

SM -t+1 SM -t+2 SM + ++ ) SM -t S M -t SM -t (4.12)

= RM +1-t + log(1 + exp(Zt-1 )) = RM +1-t + Wt-1

from this Zhang and Oosterlee derived the characteristic function of Xt and approximates the characteristic function using the Clenshaw-Curtis Quadrature, see [47]. The characteristic function of Zt is given by Wt-1 = and is approximated by Wt-1 (u, dt) 
-ila 2 l Re[Zt-1 ( dt)e b-a ] b-a b-a

 -

(ey + 1)iu fZt-1 (y )dy

(4.13)

b a

(ey + 1)iu cos(l

y-a )dy b-a

(4.14)

32

CHAPTER 4 the Clenshaw-Curtis quadrature, see [13], is used to approximate Q(k, l) =
b a

4.5. SIMULATIONS

(ey + 1) b-a cos(l

ik

y-a )dy b-a

(4.15)

This gives us the recursive approximation of Wt-1 as Wt-1 (u, dt)  l -ila 2 Re[Zt-1 ( dt) exp( )]Q(k, l) b-a b-a b-a (4.16)

where l, k = [1, 2, ..., 256]. Substituting in Eq.(4.12) we get that (1 + eZM )S0 1 M St = M + 1 t=0 M +1 and the payoff of the arithmetic average is given by Vkcall = ( (1 + ez ) S0 - K )+ M +1 ( 1 + e z ) S0 + ) Vkput = (K - M +1 (4.18) (4.19) (4.17)

then, Vkcall = Vkput = call (y  , b) = call (y  , b) = put (a, y  ) = put (a, y  ) = where y  = log(
K (M +1) S0

S0 2 [ (call + call ) - Kcall ] b-a M +1 2 S0 [Kput - (put + put )] b-a M +1 b z-a exp(z ) cos(k )dz  b-a y b z-a )dz cos(k  b-a y y z-a exp(z ) cos(k )dz b-a a y z-a cos(k )dz b-a a

(4.20) (4.21) (4.22) (4.23) (4.24) (4.25)

- 1) is the execution point bounded by [a, b], i.e. a  y   b. The

integration range [a, b] is given by [a, b] = [min(log(M ) + 1 - L M 2 ), max(log(M ) + 1 + L M 2 )] the detailed derivation can be seen in [47]. (4.26)

4.5

Simulations

To use the Monte Carlo method to simulate Inverse Gaussian (IG) subordinated processes, we first needed to generate IG random numbers. IG random numbers were generated using Michael, Schucany and Hass' algorithm as shown in [35] and is outlined in Algorithm 3. 33

CHAPTER 4

4.5. SIMULATIONS

Similarily, Gamma random numbers were generated using Jonks algorithm as shown in [44] and is outlined in Algorithm 4. Using the generated numbers we simulate the subordinator process via Algorithm 5, then the underlying price is simulated from Algorithm 1, where dt = dR = R(t + dt) - R(t). Algorithm 3: IG Random Number Generator a, b are inputs representing the scale and shape parameter Generate V  N (0, 1)2 W = aV C=
a 2b

X = a + C (W - Z=
a a+1 a2 X

W (4b + W ))

Generate Y  U (0, 1) if Y >= Z then X= else X =X end Algorithm 4: Gamma Random Number Generator Generate Y  U (0, 1) Z=
a a+1 ,

a is the input representing the scale parameter

while X + Y > 1 do U  U (0, 1) V  U (0, 1) X =Ua Y =V
1 1-a 1

X =X end W  U (0, 1) Z = -log (W ) X=
ZX X +Y

Algorithm 5: Subordinator Process Simulation

34

CHAPTER 4 while t  T do Generate X  IG(a, b) or X  (a) Generate Y  IG(a, b) or Y  (a) L0 = L0 + X Lj = Lj + Y R = L0 + cj Lj update t end

4.5. SIMULATIONS

4.5.1

Univariate Simulations Results

Through numerical simulation we first study the univariate model. The purpose of this section is to study the validity of subordinated L´ evy processes in capturing jumps in asset prices and study the stability of the numerical methods. We also present some observations about the ASCOS method compared and Monte Carlo method. The parameters were initially chosen heuristically based on the parameters presented in literature. We also present some calibrated parameters in Chapter 6.
(a) IG Subordinated Time Changed Process

Log Returns

0.2 0 -0.2 0 0.1 0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Log Returns

0.2 0 -0.2 0 0.1

Trading Year (b) Gamma Subordinated Time Changed Process

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Log Returns

0.2 0 -0.2 0 0.1 0.2

Trading Year (c) Geometric Brownian Motion

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Log Returns

0.2 0 -0.2 0 0.1 0.2 0.3

Trading Year (d) Historic Returns

0.4

0.5

0.6

0.7

0.8

0.9

1

Trading Year

35

CHAPTER 4

4.5. SIMULATIONS

Figure 4.1: The log return processes generated by (a) IG subordinated BM (b) Gamma subordinated BM and (c) GBM, using parameters S 0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. (d) is the historic log return of observed WTI Crude prices from 2014. To illustrate the characteristics of the time changed model we look at Figure 4.1, which shows a process generated by (a) the IG subordinated Brownian Motion, (b) the Gamma subordinated Brownian Motion and (c) the Geometric Brownian Motion (GBM). It is clear from Figure 4.1 that Fig.4.1(a) and Fig.4.1(b) show much more volatility than Fig.4.1(c) for the same average result. The IG subordinated process captures small jump movements and does not generate large jumps. Whereas the Gamma subordinated process, lacks the fine details of the IG subordinated process but produces severe jumps. Fig.4.1(d) shows a one year historic log return of observed WTI crude oil prices from 2014. It is clear that the observed historic data the NIG process emulates Oil returns the closest.
Quantile from NIG
0.1

(a) IG Subordinated Time Changed Process

0

-0.1 -0.05

-0.04

-0.03

-0.02

-0.01

0

0.01

0.02

0.03

0.04

0.05

Quantile from Historic Observation Quantile from VG
0.1

(b) Gamma Subordinated Time Changed Process

0

-0.1 -0.05

-0.04

-0.03

-0.02

-0.01

0

0.01

0.02

0.03

0.04

0.05

Quantile from Historic Observation Quantile from GBM
0.1

(c) Geometric Brownian Motion

0

-0.1 -0.05

-0.04

-0.03

-0.02

-0.01

0

0.01

0.02

0.03

0.04

0.05

Quantile from Historic Observation

Figure 4.2: The QQ-plot from (a) IG subordinated process quantile, (b) Gamma subordinated process quantile, and (c) GBM quantile matched to the quantile of historic log return of observed WTI Crude prices from 2014 from sampled numbers. Fig.4.2(a) shows us that random numbers sampled from the IG subordinated process is the best fit to the historic data as it lies mostly on the normal line generated by the quantiles from 36

CHAPTER 4

4.5. SIMULATIONS

random numbers sampled from the IG subordinated process and the historical data. Fig.4.2(b) clearly shows that the Gamma subordinated process is not a good fit to the historical data, as there are extreme values that lie off the normal line. Fig.4.2(c) is a closer fit than Fig.4.2(b) but it still does not fit the data as well as Fig.4.2(a), as the lower tail of the distribution lies off the normal line.
(a) IG Subordinated Time Changed Process

Probability

1 0.5 0 -0.06

-0.04

-0.02

0

0.02

0.04

0.06

Probability

1 0.5 0 -0.06

Sampled Numbers (b) Gamma Subordinated Time Changed Process

-0.04

-0.02

0

0.02

0.04

0.06

Probability

1 0.5 0 -0.06 -0.04

Sampled Numbers (c) Geometric Brownian Motion

-0.02

0

0.02

0.04

0.06

Probability

1 0.5 0 -0.06 -0.04 -0.02

Sampled Numbers (d) Historic Returns

0

0.02

0.04

0.06

Sampled Numbers

Figure 4.3: The distribution curves of (a) IG subordinated process, (b) Gamma subordinated process, (c) GBM and (d) the historic log return of observed WTI Crude prices from 2014 from sampled numbers. Next, we plot the numbers sampled from the path to see their underlying distribution as shown in Figure 4.3. Comparing Fig.4.3(a) to Fig.4.3(c) we can clearly see that Fig.4.3(a) generates numbers in outside the tails of Fig.4.3(c) and is mesokurtic as you'd expect from a heavy tailed distribution. Comparing Fig.4.3(b) to Fig.4.3(c) we also observe that Fig.4.3(b) generates numbers outside the tails of Fig.4.3(c) but displays leptokurtic behavior. This is to be expected from Figure 4.1, as Fig.4.1(b) exhibits large jumps at a modest rate. Fig.4.3(d) shows us the distribution from the historic observation. Visually, it supports the argument that the NIG process is the distribution that closely emulates the historic characteristics.

37

CHAPTER 4

4.5. SIMULATIONS

60 50

(a) IG Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

3 2.5

(b) IG Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

Option Price

40 30 20 10 0 0 20 40

Option Price
80

2 1.5 1 0.5 0 55

60

60

65

Strike
60 50

Strike
3 2.5

(c) Gamma Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

(d) Gamma Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

Option Price

40 30 20 10 0 0 20 40

Option Price
80

2 1.5 1 0.5

60

0 55

60

65

Strike

Strike

Figure 4.4: Monte Carlo pricing using parameters S0 = 57, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. In Figure 4.4 we plot the sensitivity of the MC simulated option price with respect to the strike price. Fig.4.4(b) and Fig.4.4(d) are magnifications of Fig.4.4(a) and Fig.4.4(c), respectively. We observe that as the maturity date decreases, the at-the-money strike price shifts towards the initial price. This is attributed to the exponential nature of the discount factor. MC simulations of smooth out the payoff of options because of averaging.

38

CHAPTER 4

4.5. SIMULATIONS

60 50

(a) IG Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

2

(b) IG Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

1.5

Option Price

40 30 20 10 0 0 20 40

Option Price
80

1

0.5

60

0 55

60

65

Strike
60 50

Strike
2 1.5

(c) Gamma Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

(d) Gamma Subordinated Process
T=1 T=0.75 T=0.5 T=0.25 T=1/12

Option Price

40 30 20 10 0 0 20 40

Option Price
80

1 0.5 0

60

55

60

65

Strike

Strike

Figure 4.5: ASCOS pricing using parameters S0 = 57, a = 1 250, b = 1 , µ = 0,  = 0.02, = 0.02. The sensitivity of the ASCOS option price with respect to the strike price is shown in Figure 4.5. Fig.4.5(b) and Fig.4.5(d) are magnifications of Fig.4.5(a) and Fig.4.5(c), respectively. As the maturity time increases the payoff curve does not show the monotonic behavior shown in the MC simulation. The periodic behaviour of the method is due to the sinusoidal characteristic of the Fourier-Cosine expansion. The method also exhibits instability at a strike price of 0, this happens because the y  shown in Equations (4.19)-(4.25) is an imaginary value and does not exist within the range of integration.

39

CHAPTER 4

4.5. SIMULATIONS

5.2 5 4.8 4.6 4.4 4.2 0

(a) Confidence Interval on Monte Carlo Prices under IG Subordination

Option Price ($)

1

2

3

4

5

6

Number of Simulations (10^n)
5.8 5.6

(b) Confidence Interval on Monte Carlo Prices under Gamma Subordination
Discounted expected price level of confidence above level of confidence below

Option Price ($)

5.4 5.2 5 4.8 4.6 0 1 2 3 4

5

6

Number of Simulations (10^n)

Figure 4.6: Monte Carlo pricing with confidence interval at  = 0.95 shows the convergence of the option prices by the law of large numbers.

Table 4.1: Summary of Monte Carlo pricing of Asian options by IG subordinated processes, K = $52, S0 = $57, dt = 1 250, T = 1 12 Option Price ($) 4.6823 4.8907 4.9943 5.0025 4.9969 5.0024 5.0013 Confidence Interval ( = 0.95) ±0.3450 ±0.2906 ±0.0891 ±0.0304 ±0.0138 ±0.0054 ±0.0018 Number of Simulations (10n ) n=0 n=1 n=2 n=3 n=4 n=5 n=6 Computation Time (s) 0.026497 0.053204 0.048611 0.151043 0.738055 8.5354010 221.478561

40

CHAPTER 4

4.5. SIMULATIONS

Table 4.2: Summary of Monte Carlo pricing of Asian options by Gamma subordinated processes, K = $52, S0 = $57, dt = 1 250, T = 1 12 Option Price ($) 5.0542 5.3405 5.0627 4.9910 5.0050 5.0061 5.0056 Confidence Interval ( = 0.95) ±0.3447 ±0.4453 ±0.2368 ±0.1626 ±0.0674 ±0.0243 ±0.0091 Number of Simulations (10n ) n=0 n=1 n=2 n=3 n=4 n=5 n=6 Computation Time (s) 0.026497 0.053204 0.048611 0.151043 0.738055 8.5354010 221.478561

In Figure 4.6 we show that for Monte Carlo simulations the convergence of errors at a confidence level of 0.95.As the number of simulation increases the error bounds decrease. This experiment shows that a tight boundary of prices is achieved at n  5. We present a summary of computed option prices up to the nearest percent in Table 4.1. The numbers are generated by the Michael, Schucany and Hass algorithm. To achieve the required accuracy using an efficient MC method we require 221.48 seconds, while Using the Fourier cosine expansion for IG subordinated processes we get an option price of $5.0119 with a computation time of 3.04554 seconds. Table 4.2 is a summary of computed option prices up to the nearest cent with numbers generated by Jonk's algorithm. To achieve the required accuracy using an efficient MC method we require 221.48 seconds, using the Fourier cosine expansion for Gamma subordinated processes we get an option price of $5.0141 with a computation time of 2.998690 seconds.

41

CHAPTER 4

4.5. SIMULATIONS

4.5.2

Bivariate Simulations Results

Through numerical simulations we study the impact of the coefficient c in the bivariate model given by Eq.(3.2) and (3.3). We use the calibrated parameters in Table 6.1 to price the riskneutral Asian basket spread options and make some observations.
Effect of Dependence Measure
c=0 c=0.5 c=1 c=2

30

25

Subordinator Process

20

15

10

5

0 0 2 4 6 8 10 12

Time (Months)

Figure 4.7: Simulation of dependent subordinator for c = {0, 0.5, 1} values We show that as c increases the slope of the subordinated process gets steeper as shown in Figure 4.7. The slope of the line will be given by m =
dRt dt

=

L0,dt +cLdt . dt

We can immediately see

that for c > 0 the slope is proportional to c in a linear way and this implies that the stochastic time change occurs at faster rates, adding to the volatility in the simulated price process.

42

CHAPTER 4

4.5. SIMULATIONS

9

Payoff of Asian Basket Spread Option
T=1 T=1/2 T=1/6 T=1/12 T=1/25 T=1/50 T=1/75

8

7

6

Payoff

5

4

3

2

1

0 39

40

41

42

43

44

45

46

47

48

Strike Price ($)

Figure 4.8: Monte Carlo pricing using the bivariate model with parameters from calibration, the asset weights were set as w1 = 0.8 and w2 = 0.2. In Figure 4.8 we plot the sensitivity of the MC simulated Asian basket spread option price with respect to the strike price. As the maturity time increases the payoff curve moves away from the strike axis around the at-the-money point. We also observe the same monotonic behavior observed in the payoff curve in the univariate case. Prices shift right as the maturity times increase, this shows us that the spread is actually increasing as maturity increases. We do not use the Fourier-Cosine method to price the bivariate model. This is because the dependence structure between the two assets are not know. However, this dependence structure can be estimated by L´ evy copulas.

43

Chapter 5

Semi-Static Hedging Using Fourier Cosine Expansion
5.1 Introduction

Hedging strategies are used by investors and writers of financial contracts to minimize the loss on returns due to exposure to market risk. These risks are mitigated by creating a replicating portfolio that replicates the payoff of the option. In this work we assume that the investor only re-balances (hedges) their portfolio outside some time interval [t, T ], this is called semi-static hedging. Kolkiewicz and Liu, [27], argue that continuous dynamic trading is only beneficial in a complete market setting with perfect replication. They propose that static hedging, where a hedging portfolio is created at t = 0 and held to maturity t = T , is more advantageous since it reduces transaction costs. Kolkiewicz and Liu, show that for path dependent derivatives, the semi-static hedging strategy can be applied at t = T . We follow in Kolkiewicz and Liu's reasoning and look at the semi-static hedging problem.

The semi-static hedging strategies described in this chapter are based on the strategies outlined in F¨ ollmer and Schweizer, [24], and F¨ ollmer and Leukert, [23], respectively. Kolkiewicz and Liu, [27], apply F¨ ollmer and Schweizers results to hedging with path dependent options, see [27]. Alonso-Garc´ ia et al, [2], tried to use the COS-method to delta hedging, they tried to extend the framework to quadratic risk and quantile risk, but did not show any numerical evidence.

We replicate the payoff of an Asian options given by equation (4.9) with the predictable wealth process Xt = X0 +
T 0 T 0

rdt + 44

dSt

CHAPTER 5

5.2. QUADRATIC HEDGING

To follow the notation of Kolkiewicz and Liu, see [27], we let  = s Xt and  = X0 - S0 . Where s is the fraction of wealth invested in equity that is predictable for t  [0, T ] and p = 1 - s is the fraction of wealth invested in the cash account, and r is the constant interest rate.

The price dynamic of the underlying asset is a discounted c´ adl´ ag process given by St = S0 eYt ; where Yt is given by Eq.(3.2) and (3.3). In our work we prescribe two subordinating distributions; the IG subordinator and the Gamma subordinator.

5.2

Quadratic Hedging

For payoff function Ht , and wealth process Xt we can define the quadratic hedging error as J = EQ [ Xt - Ht 2 ] (5.1)

with maturity, t = T . Assuming that X0 = e-r(T -t) E[HT ] = H0 , then the cost function J is given by
2 2 2 2 ]  - 2HT ST  + HT + 2H0 ST  - 2H0 HT + ST J = EQ [H0 2 2 2 = H0 + 2H0 EQ [ST ] - 2H0 EQ [HT ] + 2 EQ [ST ] - 2EQ [HT ST ] + EQ [HT ]

Then taking the derivative with respect to , setting it to zero and solving for  we get  = Cov[HT , ST ] Var[ST ] (5.2)

this is the same result given as shown in Kolkiewicz and Liu, see [27], it interesting to note that the optimal hedging portfolio is the ratio Ht St , which gives a relative measure of risk in quadratic variation.

5.2.1

Simulation of Quadratic Hedging

We look at simulating the quadratic hedging loss using MC simulation and the ASCOS method. To hedge the option by MC simulation, first we price the option using MC simulation, then
 we use Eq.(5.2) to determine the optimal stock portfolio  , then we find s =  XT and   p = 1 - s .

Similarly, to hedge the option by COS method, we get the option payoff process from Ht  exp[-r(T - t)]Re[ZT ( k a y ) exp(-ik )]Vk b-a b-a

45

CHAPTER 5 for k = [0, ..., N - 1]. We next generate the price process from St = S0 eYt  where Vk is given by V k = S0 2 b-a
b a

5.2. QUADRATIC HEDGING

2 k a Re[Y ( ) exp(-ik )]Vk b-a b-a b-a x-a )dx b-a

ex cos(k

where Y is the characteristic function of Yt . Then using Eq.(5.2) we find  which is used to
   find s =  XT and p = 1 - s .

0.5 0.4

(a) Quadratic Hedging from NIG Process

Probability

0.3 0.2 0.1 0 -5

0

5

10

Hedging Error
0.5 0.4

(b) Quadratic Hedging from VG Process

Probability

0.3 0.2 0.1 0 -5

0

5

10

Hedging Error

Figure 5.1: PDF of Monte Carlo simulation of quadratic hedging loss from (a) IG subordinated BM and (b) Gamma subordinated BM, using parameters S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000. We start our analysis with the quadratic hedging problem using Monte Carlo simulation. Figure 5.1 shows the quadratic hedging error distribution from MC simulations. Fig.5.1(a) shows the hedging error where the underlying distribution is assumed to follow the NIG process. Fig.5.1(b) shows the hedging error where the underlying distribution is assumed to follow the VG process. We observe two things; the first is the the hedging loss from the VG process generates a 46

CHAPTER 5

5.2. QUADRATIC HEDGING

wider distribution. We can explain this by looking at Fig.4.3(b), which shows that the Gamma subordinated process generates numbers outside the tail of IG subordinated process, and generates hedging errors in the extremes. The second observation is the hump in the upper tail of Fig.5.1(b). This is likely caused by the slight skewness in the Gamma subordinated process generating asymmetric jumps, as shown in Fig.4.3(b).

We observe that the COS method is more efficient at generating the expected cost. The MC simulation for n = 100000 NIG processes took 3.228895 seconds while the COS method took 2.977460 seconds. The MC simulation for n = 100000 VG processes took 5.240039 seconds while the COS method took 2.961511 seconds. Table 5.1: Summary of expected quadratic hedging losses, S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000 Distribution NIG VG EQ [XT - HT ] 2.9646 3.0491 EQ [XT,COS - HT,COS ] 2.9465 2.9545

We summarize the expected hedging error simulated from MC and the COS method in Table 5.1. We observe that the expected hedging error from quadratic hedging is non zero for all methods, this is to be expected because quadratic hedging strategies cannot be perfectly hedged in an incomplete market. From Figure 5.2, we observe for both IG subordinated processes, Fig.5.2(a) and Gamma subordinated processes.

47

CHAPTER 5

5.2. QUADRATIC HEDGING

1 0.8

(a) Quadratic Hedging from NIG Process

Probability

0.6 0.4 0.2 0 -5

0

5

10

Hedging Error
1 0.8

(b) Quadratic Hedging from VG Process

Probability

0.6 0.4 0.2 0 -5

0

5

10

Hedging Error

Figure 5.2: CDF of Monte Carlo simulation of quadratic hedging loss from (a) IG subordinated BM and (b) Gamma subordinated BM, using parameters S0 = 57, K = 52, a = 1 250, b = 1 , µ = 0,  = 0.02,  = 0.1, n = 100000. Table 5.2: Optimal portfolios with quadratic hedging loss, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1 Distributions NIG VG s 0.1236 0.1210 s,COS 0.1240 0.1237 p 0.8764 0.8790 p,COS 0.8760 0.8763

We show the comparison of portfolio allocations simulated from MC and the COS method in Table 5.2. The portfolio allocations tell us that for an investor who want to hedge quadratic variation risk, they will invest most of their wealth in the cash account and less than 15% in the underlying.

48

CHAPTER 5

5.3. QUANTILE HEDGING

5.3

Quantile Hedging

With the financial crisis in 2008 regulators started requiring financial institutes to hold enough reserves to offset losses they may occur from portfolio returns. This lead to the development of risk measures such as Value at Risk, average Value at Risk and etc. We want to now develop a hedging portfolio that minimizes these risk measures. For this work we assume we are working in risk-neutral probability. Intuitively, we can interpret the risk given by Value at Risk as the risk that the smallest loss the portfolio will incur given a specified probability. AVaR risk has a similar interpretation, but captures more losses than VaR. The hedging VaR and AVaR risks are similar, they both try to replicate the risks using the underlying and cash account. Definition 5.1. Quantile Function A function qX  (0, 1)  R is a quantile function for X if FX (qX (s)- )  s  FX (qX (s)), s  (0, 1) The left and right continuous inverse functions of FX
- (s) = inf [x  R FX (x)  s] qX

and
+ (s) = sup[x  R FX (x)  s] qX

are called the lower and upper quantile functions respectively, qX (u) at a given level u  [0, 1] is called an u-quantile, see [43]. Value at risk is a quantile function, intuitively, it is the minimum amount of cash that an investor must hold to offset unlikely loss in a portfolio Definition 5.2. Value at Risk (VaR) For some fixed level u  [0, 1] and a return function X we define the loss as L = -X , then the value at risk of level u is defined as V aRu (L) = inf {c  R P[L > c]  1 - u} see, [43] We redefine V aRu as the smallest amount of initial capital X0 required to ensure the hedging error is greater than or equal to zero with a probability higher than u conditioned on a risk neutral setting.

49

CHAPTER 5 Definition 5.3. VaR Hedging

5.3. QUANTILE HEDGING

For some fixed high level u  [0, 1] and wealth process X , the average value at risk of level u is defined as
Q V aRu (Xt Ft ) = inf {Ht  R Q[Ct  0]  u} Q where Ct = EQ [Xt - Ht Ft ], for readability we drop Q and Ft on V aRu as we move forward.

Intuitively, this can be interpreted as the cheapest replicating portfolio that results in positive hedging error with probability greater than or equal to u. Now we can define the success set to minimize the smallest payoff as A = {Ht 1Ct 0 }. Generally, VaR is not a convex measure and penalizes diversification which is not an desirable feature. However, it is the minimum requirement in the industry which justifies studying it. The problem of VaR hedging was originally addressed by F¨ ollmer and Leukert [23] and solved using the Neyman-Pearson lemma. Bouchard, Elie and Touzi, see [6], solved the problem by reformulating it as a stochastic target problem by introducing a new random process. Moreau further extended Bouchard, Elie and Touzi's analysis to jump diffusion models, see [36]. In our work, we use a semi-static hedging strategy to hedge for quantile risk. The following proposition is taken from Leukert and F¨ olmer and is presented without proof Proposition 5.4. Quantile Hedging ¯  Ft be a solution of the problem For C = {VT  H }, let C P[C ] = max under the constraint ¯0 EQ [H 1C ]  V ¯ denote the hedge for the option H ¯ = H 1C  L1 (Q), i.e. where Q is a unique EMM. Let 
Q EQ [H 1C ¯ Ft ] = E [H 1C ¯] + T 0

¯t dXt P-a.s. 

¯) solves the optimization problem given by ¯0 ,  Then (V P[V0 + under the constraint ¯0 V0  V
T 0

t dXt ] = max

Proof. see Leukert and F¨ ollmer, [23]. 50

CHAPTER 5

5.3. QUANTILE HEDGING

Corollary 5.5. Building on Proposition 5.4 of Leukert and F¨ ollmer, see [23]. Let s and p be the fraction of wealth invested in a stock and risk free asset respectively. An investor who wants to minimize VaR at level u  [0, 1] will have the optimal portfolio allocation given by
 s =  XT   p = 1 - s

by solving the following system of equations Xt = e-rT A(n) + erT  + ST  = H0 - S0 Ct = 0 at the nth element in the set A = Ht 1Ct 0 , where n = floor[N (1 - u)] + 1, and N is the size of the set A(1, 2, . . . , n).
 , is given by Proof. Let A = EQ [Ht 1Ct 0 ] be the success set, then the optimal VaR, V aRu  = V aRu (n) V aRu

To find the optimal portfolio we want to find the success set A such that Ct  0 and order the payoffs in ascending order. Then we find the index n = floor[N u] + 1, where N is the length
 of the set [1, 2, . . . , n], then the optimal VaR is given by V aRu = V aRu (n). By replicating the  we get the portfolio weights portfolio for V aRu  = Xt V aRu

= e-rT A(n) + erT  + ST  = H0 - S0 then solving for  such that Ct = 0 we get the optimal  , where Ct = e-rT (Xt - Ht )
 =  XT s  p = 1 - s

We can extend this to find a hedging portoflios under average value at risk (AVaR). Definition 5.6. Average Value at Risk (AVaR) Hedging The average value at risk at level u  [0, 1] of a payoff function X  L1 () is given by
Q AV aRu (Xt Ft ) =

1 u

1 u

Q V aRs (Xt Ft )ds

Q again for readability we drop Q and Ft on AV aRu as we move forward.

51

CHAPTER 5 Then our success set to minimize is again given by A

5.3. QUANTILE HEDGING

Corollary 5.7. Building on Proposition 5.4 of Leukert and F¨ omer, see [23]. Let s and p be the fraction of wealth invested in a stock and risk free asset respectively. An investor who wants to minimize AVaR at level u  [0, 1] will have the optimal portfolio allocation given by
 s =  XT   p = 1 - s

by solving the following system of equations Xt = e-rT 1 n-1 A(i) + e-rT A(n) + erT  + ST t N u i=1

 = H0 - S0 Ct = 0 where the nth index is found as in VaR and N is the size of the set A(1, ..., n), we denote M as the last index of the set A. Proof. The discretized AVaR at level u is given by AV aRu = then we can replicate the AVaR by
 AV aRu = e-rT n-1 1 A(i) + e-rT A(n) + erT  + ST N (1 - u) i=1

1 n-1 V aRu (i) + V aRu (n) N u i=1

then solving the system of equations
 = Xt AV aRu

= e-rT

1 n-1 A(i) + e-rT A(n) + erT  + ST N u i=1

 = H0 - S0 Ct = 0 solving for  such that Ct = 0 we get the optimal  , where Ct = e-rT (Xt - Ht )
 s =  XT   p = 1 - s

52

CHAPTER 5

5.3. QUANTILE HEDGING

5.3.1

Simulation of Quantile Hedging

We simulate the quantile hedging loss using MC simulation and COS method. We put into practice the method to determine the optimal wealth to hedge quantile risk presented by Leukert and Fø"llmer, see [23]. To adjust the method to the COS method we assume that the wealth process follows the same distribution as the underlying asset, and the CDF of Xt is given by FX  Re[Y ( where Vk is given by Vk = 2 b-a
b a

k a ) exp(-ik )]Vk b-a b-a x-a )dx b-a

ex cos(k

where Yt is the underlying L´ evy process, and Y () its characteristic function. To determine the index from the CDF, we looked for the first CDF index that resulted in a value greater than u, where u  [0, 1]. We determine the optimal hedging portfolio for VaR and AVaR as shown in Corollary 5.5 and Corollary 5.7. We observe that the Fourier-Cosine method is an efficient method, but Monte Carlo method is more robust and tractable. A Monte Carlo simulation with 100000 trajectories was efficiently computed in 5.015140 seconds. On the other hand the COS method completed it's calculations in 2.940627 seconds.
(a) VaR and AVaR Hedging for NIG Process
MC VaR Hedging MC AVaR Hedging

1 0.8

Probability

0.6 0.4 0.2 0 -10 -8 -6 -4 -2 0 2 4 6 8

Hedging Error
1 0.8

(b) VaR and AVaR Hedging for VG Process

Probability

0.6 0.4 0.2 0 -20 -15 -10 -5 0 5 10

Hedging Error

53

CHAPTER 5

5.3. QUANTILE HEDGING

Figure 5.3: CDF of Monte Carlo simulation of (a) VaR and AVaR hedging error for NIG process and (b) VaR and AVaR Hedging error for VG process, using parameters n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036. The CDF of the hedging error for VaR and AVaR are shown in Figure 5.3. In a more intuitive sense, hedging VaR is equivalent to creating a replicating portfolio for the smallest positive hedge that results in a positive hedge at a high probability. This gives us the smallest underlying holding we need to hedge this option with a positive hedging error. Table 5.3 shows that when hedging VaR the investor is only required to hold a small portion of wealth in the underlying and a large amount in cash. This implies that to hedge VaR risk, we can simply hedge the option by holding mostly cash. Table 5.3: Optimal portfolios with VaR hedging error, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 Distributions NIG VG
MC s,V aR COS s,V aR MC p,V aR COS p,V aR

0.0287 0

0.1671 0.1681

0.9713 1

0.8329 0.8319

Table 5.4: Optimal portfolios with AVaR hedging error, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 Distributions NIG VG
MC s,AV aR COS s,AV aR MC p,AV aR COS p,AV aR

0.5931 0.3773

0.5143 0.5191

0.4069 0.6227

0.4857 0.5191

Counter intuitively, hedging AVaR requires a more risky portfolio as seen in Table 5.4. However, this is to be expected because to hedge a large loss, simply holding cash cannot provide sufficient returns. Thus the investor must seek higher returns by looking for more risky investments. Table 5.5: Expected hedging error, EQ [XT -HT ] ,comparison between MC and COS, n = 100000, K = $52, S0 = $57, dt = 1 250,  = 0.1, = 0.02, µ = 0, r = 0.036 Distributions NIG VG VaR: MC 4.5785 6.4388 VaR: COS 2.2064 4.3868 AVaR: MC -0.6249 0.4197 AVaR: COS -0.2416 -0.0883

We summarize the discounted expected hedging errors in Table 5.5. For an investor looking to hedge VaR they should expect their returns to reflect the payoff of the option as most of their hedging investments are allocated to the cash account and will at most lose a fraction of 54

CHAPTER 5

5.3. QUANTILE HEDGING

any negative movements in the underlying asset. The investor hedging AVaR is actually more exposed to risk as they need to generate higher returns to hedge risk in the entire tail.

5.3.2

Robust Risk Hedging

We can extend AVaR hedging to a robust setting. Following F¨ ollmer et al, see [23], we present risk hedging where the risk measure is robust. Intuitively, this can be thought of as hedging the expected loss regardless of the probability measure used. Definition 5.8. Robust Risk Measure For a random variable X  L1 () and Q  Q is a robust probability measure in a set of probability measures Q and is absolutely continuous w.r.t. some probability measure P. A robust risk measure is given by (X ) = sup EQ [X - (Q)]
Q Q

Proposition 5.9. Let Z  =

dQ dQ

be the Radon-Nikodym derivative such that EQ [Z Ft ] = 1 then

1 setting (Q) = 0 and Q = {Q  Q Z   u }. For some u  [0, 1], Ct = EQ [Xt - Ht Ft ] and success

set A, the optimal portfolio allocation is given by
 =  XT s   = 1 - s p

by solving the following system of equations Xt = e-rT AV aRu + erT  + ST t  = H0 - S0 Ct = 0 where AV aRu is given by AV aRu =
n -1 n -1 1 A (n ) u - q (i ) + A(i)q (i) u i=1 i= 1

Proof. From the Neyman-Pearson lemma, see [23], Definition (2.32) and subsequent examples, we get that Z = where     0 =  u-Q[XT >HT ]     Q[XT =HT ] 55 Q[XT = HT ] = 0 otherwise 1 (1XT >HT + 1XT =HT ) u

CHAPTER 5 then

5.3. QUANTILE HEDGING

AV aRu (Xt Ft ) = sup EQ [ZV aRu (Xt Ft )] = EQ [Z  V aRu (Xt Ft )] =
Q Q Q

= e-rT = e-rT

n-1 n-1 1 V aRu (n) u - q (i) + V aRu (i)q (i) + erT  + ST u i=1 i=1 n-1 n-1 1 A (n ) u - q (i ) + A(i)q (i) + erT  + ST u i= 1 i= 1

 = H0 - S0 Ct = 0 solving for  such that Ct = 0 we get the optimal  , where Ct = e-rT (Xt - Ht )
 s =  XT   p = 1 - s

where q (i) = Q[XT (i) = HT (i)], is a counting probability of the number of times the option payoff greater the value at risk of at indices i = n, ..., M , where n is found as in VaR.

56

Chapter 6

Calibration
6.1 Introduction

The problem of solving for unknown parameters given current data is known as the calibration or the inverse problem. We refer the reader to Cont and Tankov for an overview, see [15]. When historic data is used to solve the inverse problem it is known called parameter estimation. In this section we show that our model can reproduce the volatility smile observed in empirical data and present a conditional calibration method to calibrate the bivariate model.

60

(a) Strike Sensitivity for WTI Asian Call Prices
T = 1/12 T=3/12 T=5/12 T=1

Price ($)

40 20 0 10

20

30

40

50

60

70

80

90

100

110

60

Strike Price ($) (a) Strike Sensitivity for WTI Asian Put Prices

Price ($)

40 20 0 10

20

30

40

50

60

70

80

90

100

110

30

Strike Price ($) (c) Strike Sensitivity for Brent Euro Call Prices

Price ($)

20 10 0 30

40

50

60

70

80

90

100

Strike Price ($)

57

CHAPTER 6

6.2. MODEL PARAMETER CALIBRATION

Figure 6.1: Current Option market prices of (a) WTI Asian call options (b) WTI Asian put options (c) Brent crude European call options. The market data was collected from Bloomberg's database via the Bloomberg Terminal Some paths of current option prices for two different underlying assets, WTI crude oil, j = 1, and Brent crude oil, j = 2 are shown in Figure 6.1. We observe that the actual market price of the option is different from the theoretical prices. The market price also doesn't follow the monotonic behavior of the time value of money. These differences are likely caused by market friction, randomness in other variables, i.e. interest rate and a phenomenon known as the volatility smile.

6.2

Model Parameter Calibration

A common way of calibrating pricing models is to set the cost function as some distance function, d(), to minimize. This results in the following minimization problem. J (y ) = min{d(H (y ) - H mkt )}
y U

(6.1)

where y and x are vectors of parameters in a solution set U . Definition 6.1. Calibration Problem Let U be a set of solutions such that, there exists a collection of optimal solutions (y  , x )  U that solves the minimization problem. Given prices of a call option H j (y ) where j  [1, 2] is the j th . We construct the L´ evy process Zt such that the discounted asset price St = S0 exp(Zt ) is a martingale. H j (y ) = e-rT EQ [(S j (y ) - K )+ Ft ] Where S j (y ) is some functional that describes the price process, i,e. S j (y ) =
1 M +1 M t=0

(6.2)  St (y )

for arithmetic Asian options. Then the calibration problem is the solution of the following minimization problem
j mkt N i=1 Hi (y ) - H 2

y  = min
y

N

, for j = 1, 2

(6.3)

We follow Schoutens, see [44], and apply the root mean squared error (RMSE) as our calibration minimization criteria, on market option price of that day. Remark 6.2. The cost function given by the RMSE = a convex set and z  R. 58
^ 2 N i=1 (Xi -Xi ) N

is convex for [x, y ]  X

CHAPTER 6

6.2. MODEL PARAMETER CALIBRATION

Proof. We can reduce the RMSE to the SE as follows RMSE = MSE =  MSE
N

i=1

(SE) N

^ )2 SE = (Xi - X then let f (x) = (x - z )2 and f (y ) = (y - z )2 . Without loss of generality, set  = 1 2 and [x, y ]  X , then 1 1 f (x + (1 - )y ) = f ( x + y )) 2 2 1 1 = ( x + y - z )2 2 2 1 1 1 1 = ( x - z + y - z )2 2 2 2 2 1 1 = ( (x - z ) + (y - z ))2 2 2 by the Triangular inequality 1 1  ( x - z )2 + (y - z )2 2 2 = f (x) + (1 - )f (y ) Since f (x + (1 - )y )  f (x) + (1 - )f (y ) the cost function is convex. Proposition 6.3. Under the risk neutral assumption the conditional calibration method looks to solve the following problem. Let H1 (y ) = e-rdt EQ H2 (y, x y ) = e-rT EQ
1 M t=0 St (y ) -K M +1 2 ST (y, x) - K + +

y = y

Where H 1 (y ) is the modelled arithmetic Asian call option payoff for the first underlying asset, and H 2 (y, x) is the modelled European call option payoff for the second underlying asset, in a basket of assets. y is a vector of independent parameters to be calibrated and x is a vector of conditionally independent parameters to be calibrated. Then the calibration problem becomes the following optimization problem J1 (y ) = J2 (y, x y = y ) =
 1 1,mkt N i=1 Hi (y ) - H N 2

2 2,mkt N i=1 Hi (y, x) - H N

2

59

CHAPTER 6 such that

6.2. MODEL PARAMETER CALIBRATION

y  = min{J1 (y )}
y U

(6.4) (6.5)

x = min{J2 (y, x) y = y   U }
xU

where [y  , x ]  U are the pair of optimal solutions to the inverse problem 6.4 and 6.5 respectively. This optimal solution lives in the space of solution sets U Proof. This follows from the fact that the set of solutions for x  U is disjoint from y   U when ~(x), where f ~(x) = inf f (x, y ) conditioned on y = y   U , i.e. for a function inf f (x, y ) = inf f
x,y x y

Remark 6.4. To model H2 (y, x y = y  ) = e-rT EQ
j (y, x) - K ST +

y = y

we require the conditional characteristic function of the second independent subordinated processes. To do this we apply Bayes rule to get Lj L0 (u) = L0 (u)cj Lj (u) L0 (u) = cj Lj (u)

Proof. This follows from the direct application of Bayes rule and the independence of the subordinating processes For univariate models, the vector y = [0 , µX , X ] are the three parameters that needs to be
1 calibrated. In the bivariate case, things get more complicated, y = [0 , 1 , c1 , µ1 X , X ] and j 2 x = [2 , c2 , µ2 X , X ]. We can interpret X , for j = 1, 2, as the volatility in the independent BM, j j and µj X is interpreted as it's mean. We can recover the µY and Y by computing the moments

in Table 3.3 and Table 3.4. The parameter k , where k = 0, 1, 2 is interpreted as the variance of the subordinating process. As k  0 the process becomes normal, thus for our simulation k  0. As subordinating processes are monotonically increasing functions, we can see that k > 0. It is important to note that the parameters above are not directly observable, that is why we treat them as arbitrary parameters to be calibrated.

To solve the minimization problem, we look at an approach known as the Generalized Pattern Search (GPS) algorithm with constraints. The general idea of the GPS algorithm is to evaluate the cost function at the initial point, evaluate the cost function at perturbed points and if one the evaluated perturbed points has a value less than the initial, it becomes the new initial point and the perturbation radius is doubled. If the perturbation fails to yield a value less than the initial point, the perturbation radius is halved. The convergence is considered in the following 60

CHAPTER 6

6.2. MODEL PARAMETER CALIBRATION

paper by Torczon, see [46]. The algorithm is readily available in Matlab as the function patternsearch. This approach has the advantage in that it is not a gradient method, so it doesn't require the function to be differentiable; therefore it is quite ideal to use for stochastic processes. The figure below, shows the calibrated payoff and the market payoff at each strike. We can see....

Table 6.1 is shows a snap shot of solutions to the calibration problem for the univariate and bivariate model. Parameters were calibrated using data collected from the Bloomberg terminal. The underlying asset for j = 1, 2 was chosen to be WTI crude (June 2018 - June 2019) and Brent crude (June 2018 - June 2019), respectively. The initial points for Calibration was set to y0 = [0 , µX , X ] = [0.25, 0.3, 0] in the univariate case, and the pair (y0 , x0 ) =
1 2 2 ([0 , 1 , c1 , µ1 X , X ], [2 , c2 , µX , X ]) = ([0.25, 0.25, 0.2, 0.3, 0], [0.25, 1, 0, 0]) in the bivariate case.

1 Table 6.1: Calibrated Parameters for NIG Process, n = 100000, K 1 = K 2 = $52, S0 = $68.58, 2 = $74.88, dt = 1 12 S0

Model Univariate Bivariate

0 0.8744 0.9829

j (-, -) (0.7500, 0.6777)

cj (-, -) (0.0633, 0.2)

µj X (-0.1875, -) (-0.2499, -0.9988)

j X

(0.0005, -) (0.00047, 0.00047)

Fig.6.2(a) and Fig.6.2(b) show the calibrated models against market prices. The models were priced using Monte carlo pricing. At each strike point 1000000 paths were generated. The pattern search algorithm was run until the mesh grid size was less than 1e-6.

61

CHAPTER 6

6.3. IMPLIED VOLATILITY

Price ($)

50

(a) Calibration of Univariate Model Call
Calibrated Price Market Price

0 0 20 40 60 80 100 120

Price ($)

50

Strike Prices ($) (b) Calibration of Univariate Model Put

0 0 20 40 60 80 100 120

Price ($)

50

Strike Prices ($) (c) Calibration of Asian Payoff

0 0 20 40 60 80 100 120

Price ($)

20 10 0 0 10

Strike Prices ($) (d) Conditional Calibration of European Payoff

20

30

40

50

60

70

80

90

Strike Prices ($)

Figure 6.2: (a) Calibrated univariate model matched to current market price of WTI Asian Call Option (b) Calibrated bivariate model matched to current market price of WTI Asian Call Option and (c) Calibrated conditionally univariate model to current market price of Brent European Call Option expiring in 1 year. Figures 6.2 shows a a general good fitness of the calibrated price to the market price. This is one of the advantages to parametric models with more degrees of freedom. However, we can pose the question, how many degrees of freedom is appropriate? As one would expect The run time of the calibration process shows that the more free parameters there are in a model the longer the calibration process. The calibration of parameters for the univariate model took 4820.758297 seconds, over 101 different strikes and 11529.775153 seconds for the bivariate model.

6.3

Implied Volatility

Determining the implied volatility is a key calibration problem for financial models. A pricing model needs to be able to be able to show a volatility smile to ensure that it accounts for the change in volatility with strike price. This phenomenon is observed in empirical data as shown in Figure 6.3. 62

CHAPTER 6

6.3. IMPLIED VOLATILITY

12

Sensitivity of Volatility in WTI Asian Option Prices to Strike Price

10

8

Volatility

6

4

2

0 10

20

30

40

50

60

70

80

90

100

110

Strike Price ($)

Figure 6.3: Current market sensitivity of volatility in WTI Asian options to strike price. It is well known that models that like the Black-Scholes model overprices options. This is thought to be the consequence of implied volatility, see [21]. Implied volatility is found by solving the inverse problem for  , i.e. for the price of an option given by H (, K ) and the market payoff H mkt (t, K ), the implied volatility ( ) is found by solving H (, K ) = H mkt (t, K ) for  for a fixed S0 , T and each K . The main argument against the Black-Scholes model is that it assumes a constant implied volatility. We approximate the implied volatility of Arithmetic Asian option payoff following the work of Ewald, et al, see [21]. Ewald, et al, argue that  also depends on the type of option, which is normally neglected. They show that to price general Asian options, fixed strike Asian options should be used to compute implied volatility instead of European options, see [21]. First we need to find vega, denoted  =
H  .

Vega is the sensitivity of the option with respect to volatility. In

our work we will use the classical method to solve for vega. Then for call options vega is given by   Q 1 M E   M + 1 St - K   t=0 
+

 1 M  = EQ 1 ¯ St (BRt - Rt )  St >K M + 1 t=0  

63

CHAPTER 6

6.3. IMPLIED VOLATILITY

¯t is the average price of the underlying asset and for put options we look for 1 ¯ , see where S St <K [21]. Next we use Newtons method to approximate implied volatility at each strike price K , and t = T is the maturity time of the option. Newtons method is given by k+1 = k - H (k , K ) - H mkt (T, K )   H (k , K )

For call options the initial point is approximated by 0  and for put options 0  K 2 Q M E [St ] 2 EQ [St ] M K

0.9

Sensitivity of Implied Volatility to Strike

0.8

0.7

Implied Volatility

0.6

0.5

0.4

0.3 10

20

30

40

50

60

70

80

90

100

110

Strike Price ($)

Figure 6.4: Implied volatility smile of the model for different strike prices, the parameters at each strike price, K , were calibrated for both call and put options as described in Section 6.2. After solving the calibration problem, we can see that our model produces an implied volatility smile, as shown in Figure 6.4. This shows that our model is rich enough to capture the nonlinearity of the implied volatility.

64

Chapter 7

Robust Consumption and Portfolio Choice with Stochastic Interest Rates and Learning about Stock Predictability
7.1 Introduction

We consider an institutional investor who wants to maximize their expected utility over an infinite horizon. We also assume that the investor is willing to substitute consumption of the the risky asset with the risk free asset, in a more intuitive sense the investor is willing to have lower returns to for safer investments. The investor is assumed to trade in two risky assets (a stock and a bond) and one risk-free asset (a money market account). The investor is assumed to learn about stock returns using two parameters; t (observable) and t (unobservable). t only predicts the expected return, while the observed parameter, t , predicts both the expected return and volatility. This is to reflect the fact that estimating the conditional expected returns cannot fully explain the variations in stock risk premium. Like Escobar et al, see [20], we assume in the model that the stock risk premium is driven by an affine combination of function of t and t . We assume the investor estimates the unobservable parameter by Bayesian learning and that the stock return volatility depends on the observed parameter; this implies that a stochastic volatility model is a special case of our general model. We assume that an investor has an Epstein-Zin type recursive preferences, see [19]. This preference disentangles the the inverse relationship between the coefficient of relative risk aversion and the elasticity

65

CHAPTER 7

7.1. INTRODUCTION

of intertemporal substitution (EIS), implied by the CRRA (Constant Relative Risk Aversion) preferences. Furthermore, the investor worries that the model describing the investment opportunities is subject to model misspecification which follows the robust optimization problem of Anderson (2002) and outlined in Escobar et al, see [20], this implies the investor is willing to seek robust consumption and portfolio choice. We extend the work of Escobar et al, see [20], by considering Duffie and Epstein recursive preferences, see [19] in an infinite investment horizon. We extend the work of Liu, see [31] by using a bond portfolio to hedge interest risk and the inclusion of unobservable parameters in stock risk premiums.

We summarize some of the existing literature. Campbell and Viceira, see [10], shows that i) at high levels of risk aversion,  , the optimal consumption-wealth ratio increase with EIS. At low levels of EIS, i.e  < 1, the optimal ratio rises with risk aversion. While at high levels of  , i.e  > 1, it declines with risk aversion. ii) If the investor is highly risk averse, then they hold almost all wealth in the bond and earn low returns, if they have low to moderate risk aversion they borrow at the riskless rate to earn high leveraged returns. iv) Highly risk-averse investors choose safe portfolios with low average returns, so a higher  corresponds to a higher average consumption-wealth ratio. v) Investor with a low risk aversion coefficient is more invested in the risky asset. Maenhout, see [32], shows that robustness in the model reduces equity demand, and effectively acts like risk aversion. He also concludes that robustness decreases the risk free rate. Liu, see [31], shows that when stock returns and expected returns are negatively correlated the robustness actually causes the total equity demand to increase. This is due the increase in hedging demand from state variables, and the decrease in myopic demand (mean-variance hedging). Ju and Miao, see [26], conclude that for EIS,  > 1, the consumption-wealth ratio is a convex function of robustness and for EIS,  < 1, the consumption-wealth ratio is a concave function of robustness. They report a calibrated ambiguity aversion,  = 8.86 and show that ambiguity aversion helps generate variation in consumption-wealth ratio. They also observed that as ambiguity aversion increases, consumption-wealth ratio increases. Escobar et al, see [20], shows that stock return predictability significantly impacts the optimal bond portfolio in the sense that hedge components for the observed and unobserved variables are substantial. The hedge components are larger in the bond portfolio compared with the respective hedge components in the stock portfolio. They also observe that the correlation between bonds and learning parameters determines the investors position in the risky assets. For P > 0 and P  > 0 the investor will short the bond and for P < 0 and P  < 0 the investor will buy the bond.

66

CHAPTER 7

7.2. BACKGROUND

7.2
7.2.1

Background
Expected Utility

Why do we choose to optimize an investors expected utility over a more natural measure such as the expected returns? This is because in 1713, Nicholas Bernoulli pointed out a critical flaw in choosing expected returns by posing the "St. Petersberg Paradox". The paradox goes like this:

Peter tosses a coin and continues to do so until it lands "heads". He pays Paul one ducat if he gets "heads" on the very first throw, two ducats if he gets it on the second, four if on the third, eight if on the fourth, and so on, so that on each additional throw the number of ducats he must pay is doubled.

The paradox in the problem is that the expected amount that Peter must pay Paul is infinite, but, intuitively, most people would not be willing to pay an infinite amount. In 1738, Daniel Bernoulli (Nicholas' cousin) provided an explanation for the St. Petersberg Paradox by introducing the concept of expected utility. The concept was later formalized by John von Neuman and Oskar Morgenstein in 1944, see [39].

The von Neumann-Morgenstern axioms of expected utility1 are as follows 1) Completeness For any two lotteries P and Q, either Q  P or P  Q or P  Q 2) Transitivity If Z  Q and Q  P , then Z  P 3) Continuity If Z  Q  P , there exists some   [0, 1] such that Q  Z + (1 - )P 4) Dominance Let P1 be the compound lottery 1 P + (1 - 1 )Q and P2 be the compound lottery 2 P + (1 - 2 )Q. If P  Q then P1  P2 iff 1 > 2 This axiom tells us that the investor prefers the lottery with highest expected utility. It is well known that this is only a partial explanation of investors behaviour, see [39]. We now look at risk aversion.
1

We omit the Independence axiom, as empirical data exists that shows that the axiom does not hold.

67

CHAPTER 7

7.2. BACKGROUND

7.2.2

Risk Aversion

Let U (X ) denote some utility function. It was proposed by Daniel Bernoulli in 1738 that utility functions should be an increasing concave function of wealth. To show that this concavity represented the investors reservations to invest in a fair lottery, John W. Pratt(1964) used the concept of risk premium RP , where U (X - RP ) = E[U (X + L)] where L is the value of the lottery. Now setting L = 0, and taking the taylor expansion about L = 0 and X = 0 1 U  (X ) RP = -  2  2 U (X )

where  2 = E[L2 ]. We can see that RP > 0 when U (X ) is a concave function and this led to the development of the Pratt(1964)-Arrow(1971) absolute risk aversion measure. Definition 7.1. Absolute Risk Aversion Let U (X ) in C 2 be a utility function for given wealth X then the absolute relative risk is given by R (X ) = - Definition 7.2. Relative Risk Aversion2 Let U (X ) in C 2 be a utility function for given wealth function X then the absolute relative risk is given by Rr (X ) = -X U  (X ) U  (X ) U  (X ) U  (X )

7.2.3

Filtering

Filtration is a heavily studied topic in fields such as engineering and economics. It is generally used for signal processing and estimation, however it is quickly becoming common in Finance, we direct the reader to Date and Ponomareva's review on linear and nonlinear filtering in math finance, see [16]. The main use of filtering is to estimate an unobservable parameter, t with an observable parameter, t . We assume that t and t follow mean-reverting processes, and apply the non-linear(in t ) filtering technique to t and obtain a set of filtered equations, see [29] and [30]. We present the main theorem of non-linear filtering without proof below.
2

The relative risk aversion is more frequently used in financial economics, this is because it allows us to account for different levels of wealth.

68

CHAPTER 7 Theorem 7.3. Filtering3 , 4 Let (t , t ) be random processes with differentials given by equations

7.2. BACKGROUND

dt = [a0 (t, ) + a1 (t, )t ]dt + b1 (t, )dW1 (t) + b2 (t, )dW2 (t) dt = [A0 (t, ) + A1 (t, )t ]dt + B (t, )dW2 (t) where W1 (t) and W2 (t) are independent Brownian motions and the functions a0 , a1 , b1 , b2 , A0 , A1 , B meet all boundedness conditions in Liptser and Shiryaev, see [30],[29], and the conditional distribution P (0  a 0 )  N (m0 , v0 ), then mt and vt are given by dmt = [a0 + a1 mt ]dt + b2 B + A1 vt [dt - (A0 + A1 mt )dt] B2 b2 B + A1 vt 2 dvt 2 = 2a1 vt + b2 1 + b2 - dt B

subject to the conditions m0 = E[0 0 ], v0 = E[(0 - m0 )2 0 ] Proof. see [29], Sections 8.1 and 12.1 We can see that vt is the conditional variance, also known as the tracking error and mt is the conditional mean also known to be the optimal value in the mean-square sense, see [29].

7.2.4

Overview of Stochastic Control

Fix U  Rd as our domain, i.e. the subspace of admissible portfolios, see Definition 2.15, and let Xt be a stochastic process of the form
u dXt = µ(u)dt +  (u)dWt u Xt

The predictable process, u = u(t,  ), is known as the control process, µ(u), is the mean as a function of the control process, and  (u) is the standard deviation as a function of the control
u process then we call Xt = Xt our controlled process, see [37].

In stochastic control problems we consider the performance criterion J (t, x, u) = J u (x) with stopping time T as: J u (x ) = E
T t

f (Xt , u)dt + U (XT )1T < Ft

(7.1)

Where f () and U () are given continuous functions. We call u  U admissible when there exists a unique strong solution for Xt for all x  R. The stochastic control problem is to find the value function, Vt , and, optimal control u  U defined by Vt (x, u) = sup J u (x) = J u (x)


uU

(7.2)

3 4

For a comprehensive look at how to apply filtering to price dynamics we refer the reader to Gennotte, see [25] For boundedness conditions we refer the reader to Liptser and Shiryaev, see [29] and [30]

69

CHAPTER 7

7.2. BACKGROUND

If u = u(x) is a Markov control, i.e controls of the form u(t, x) = u(Xt- ) then Xt has the infinitesimal generator given by Au v (t, x), see [37]

7.2.5

Dynamic Programming

One way to solve the stochastic control problem is by using the Hamilton-Jacobi-Bellman equation. This approach was originally derived to solve control problems in the deterministic sense. Other ways include backward-stochastic differential equations, or determining the dual problem. It is known that there is an equivalence that exists between the three methods to solve control problems. Theorem 7.4. Hamilton-Jacobi-Bellman Equation We assume that v (t, x)  C 1,2 and that it satisfy the following conditions (1)
v t

+ Au v (t, x) + f (t, x, u)  0 for all x  R, u  U .


(2) XT  Ft a.s. on T <  and lim- U (XT )1T < a.s. for all u  U .
tT

(3) E v (T, XT ) +
T t

Av (t, Xt ) + 

v x

2

dt Xt = x < 

~ in the set of all stopping times. for all u  U and all T (4) v - {XT ~ }T ~<T is uniformly integrable for all u  U and x  R then v (t, x)  Vt f or all x  R Next, suppose that for each x  R there exists u  U such that (1) sup{Au v (t, x) + f (t, x, u)} = 0
uU u (2) v (t, XT ~<T is uniformly integrable ~ )T


(7.3)

Let u  U , then u is an optimal control and Vt (x, u ) = J u (t, x) f or all x  R


(7.4)

Proof. see [37], Theorem 3.1

70

CHAPTER 7

7.3. PROBLEM FORMULATION

7.3

Problem Formulation

Let (, F , {Ft }t[0,T ] , P) be a complete probability space with a non-decreasing right continuous filtration. We assume the usual assumptions holds. We consider a market with a stock index, a zero-coupon bond and a money market account. We work in the perspective of an institutional investor with an infinite investment horizon. The money market account is given by dAt = rt At dt (7.5)

where rt is the short term interest rate. The stock price, St is described by the stochastic differential equation dSt = µS,t dt + s,t dWtS St (7.6)

where µS,t is the expected stock return, S,t > 0 is the stock return volatility and WtS is a Wiener process. The interest rate is given by a Ornstein-Uhlenbeck (OU) process drt = r (r ¯ - rt )dt - r dWtP (7.7)

where r is the degree of mean reversion, r ¯ is the long-run mean of the interest rate(r), r > 0 is the interest rate volatility and WtP is a WtS correlated Wiener process such that dWtS dWtP = S,P dt. We assume that stock risk premium, t =
µs.t -rt s,t ,

is an affine function of two stochastic pa-

rameters t and t . t is the parameter observable to the investor and t is the parameter unobservable to the investor. The parameter dynamics is given by ¯ - t ) +  dW  dt =  ( t ¯ - t ) +  dW  dt =  ( t (7.8) (7.9)

¯ and  ¯ are the long-run means.  > 0 where  and  are the degrees of mean reversion.  and  > 0 are the parameter volatilities of t and t , respectively. Wt and Wt are correlated Wiener processes such that dWtS dWt = S, dt, dWtP dWt = P, dt, dWtS dWt = S, dt and dWtP dWt = P, dt.

It is assumed that the stock return volatility is dependent on the observable parameter t , i.e. S (t ). This setup is the same setup presented in Escobar, et al, see [20]. They present a model where the stock risk premium depends on the observed and unobserved parameters while the stock return volatility depends on the parameter observed by the investor. Their setup further implies that the expected stock return depends on the two parameters t and t , i.e 71

CHAPTER 7

7.3. PROBLEM FORMULATION

µS,t = µS,t (t , t ) in a recursive relative risk utility framework. From this the investor assumes the risky asset with the following dynamics dSt = (rt + S (t )(P + P t + P t ))dt + S (t )dWtS St (7.10)

where P , P and P are real constants. P and P specify the predictive power of t and t for the risk premium, respectively. For convenience we will simplify the notation and write S (t ) as S . The price of the zero-coupon bond expiring at a time T is given by dPt = (rt + q )dt + P,t dWtP Pt (7.11)

where q = qr P,t is the expected excess return on the bond, qr is the constant market price of
1 interest rate risk and P,t = r  (1 - e-r (T -t) ) is the bond price volatility. It is assumed that r

the investor follows a roll-over strategy and the maturity is kept constant i.e. P,t = P . The model of stock and bond dynamics follows the principle of no-arbitrage. The optimal filtered equations from Proposition 1. in Escobar et al, see [20] is restated below. Proposition 7.5. Let FtS,r, be the  -algebra generated by St , t and rt . The stock and bond prices of the investor is given by  dSt    ^t )   S   rt + S (P + P t + P   St      =  dt +   dPt      Pt     SP P rt + q     
=µ

0 P
=X

1 - 2 SP

   dBt,1         dBt,2   
=dB

(7.12)

and the dynamics of the state variables are given by     ¯ - t )   dt   (   S,             dr  =   (r   t   r ¯ - rt )  dt +  -r S,P       ^   ¯- ^t ) dt   (   A1     
dY ¯ -Y ) =µY =(Y

  ^ -r  ^,P A2
=Y

0 -r  ^P A3

 Y   dBt,1       dB Y    t,2     Y   dBt,3   
=dB Y

(7.13)

where    0    0   r    0 0 
= Y The processes Bt,i and Bt,j are

   ¯   t  0               0  , r ¯ and   rt       ^    ¯ t          
¯ =Y =Y

FtS,r,

-adapted correlated Wiener processes, for i = 1, 2 and            

j = 1, 2, 3, with the correlation matrix   1    0 =     0   72 0
 ^,P 1-2 S,P  ^P 1-2 S,P

(7.14)

CHAPTER 7

7.3. PROBLEM FORMULATION

^ Y dBt,i , A1, A2, A3,  where i,j = dB ^ ,  ^,P and  ^P are found in Appendix A of Escobar et al., t,j see [20] Proof. see [20], Appendix A
S P  Let t = [t , t ] be the vector of the fraction of wealth invested in the stock and bond. S P Let (1 - t - t ) be the amount invested in the money market account. Then following Liu,

[31], the wealth, Xt , of the investor is given by
 dXt = Xt (rt +  t (µ - r ) - Ct )dt + Xt t X dB t

(7.15)

where X X  is a positive semi-definite covariance matrix and Ct is consumption at time t. We assume that the investor has recursive preferences over consumption with the Duffie and Epstein continuous-time parametrization as shown in Liu, see [31]. In the absence of robustness the parametrization has the form Vt =
 t

f (Cs , Vs )ds

where Vt is the value function and f (C, V ) is a normalized aggregator of current consumption and continuation utility given by  f (C, V ) = (1 -  )V 1 1- 
1-     C  - 1 1  (V (1 -  )) 1-  
1

(7.16)

We can define a space of admissible portfolios, U , such that {t }t[0,)  R2 satisfies (1) t  [0, ) ×   R2 is FtS,,r -progressively measurable;
 for any x  (0, ) such that equation (7.15) (2) in the subspace U , there exists an optimal t

admits a unique strong solution; (3) the utility function needs to satisfy the integrability condition, i.e. EP f (Ct , Vt ) <  where f (Ct , Vt ) is given by equation (7.16); (4) Xt  0 a.s, t  (0, ) . The investor is assumed to have a Epstein-Zin type preferences with the Value function for preferences given by V = [G(t, Y )]
1- -1 -

1- Xt 1-

(7.17)

We assume  > 1 and   1 to avoid imaginary solutions.  = 1 case corresponds to the CRRA utility case. G(t, Y ) is the ansatz given by 1 G(t, Y ) = exp(A(t) + B  (t)Y + Y  Q(t)Y ) 2 73

CHAPTER 7 where

7.3. PROBLEM FORMULATION

     c11 (t) c12 (t) c13 (t)  b1 (t)            A(t) = a0 (t) , B (t) = b2 (t) , Q(t) =  c21 (t) c22 (t) c23 (t)            c31 (t) c32 (t) c33 (t)  b3 (t)    

the partials of G(t, Y ) with respect to the state variables are given by 1 GY = G(t, Y )(B + (Q + Q )Y ), 2 1 1 1 GY Y = G(t, Y )[(B + (Q + Q )Y )(B + (Q + Q )Y ) + (Q + Q )] 2 2 2

To simplify notation we drop time in notation, i.e. At = A, and all subscripts denote derivatives. The partials of the recursive utility function, V (X, Y ), with respect to time,t, the Wealth process, X , and state vector, Y , is given by VX = G
1- -1 -

X - X - -1

VXX = -G VY = - VY Y VXY

1- -1 -

1 GY - 1- G 1- X 1- 1- G 1- 1 GY GY  1 GY Y 1- - 1- -1 - X 1- = - ( + 1)G 1- X 1- G 1- 1- G2 1- G 1 -  1 -  - 1- - GY G X =- 1- G

A robust investor is one who deems the state dynamics of equations (7.7), (7.8), (7.9) and (7.15) to be approximates and possibly mis-specified. To ensure robustness, we introduce a change of measure Pu such that, Pu is absolutely continuous with respect to P, denoted Pu << P. We ^t ] as the state vector where rt , t and  ^t are the state variables such that denote Yt = [t , rt ,  each state variable follows the filtered dynamics shown in the paper by Escobar et al., see [20], Proposition 1. Under the filtered measure Pu , it follows from Girsanov's theorem that the Radon-Nikodym derivative is given by dPu = E (X, Y ) dP where dE (X, Y ) = u(X, Y ) dB Y , E (X0 , Y0 ) = 1 E (X, Y ) then the compensated Brownian motion is given by ~Y = B
t 0

us ds + dB Y 74

CHAPTER 7

7.3. PROBLEM FORMULATION

~Y where ut = u(Xt , Yt ) is a vector process that compensates the drift such that B t is a Wiener process with respect to the probability measure Pu . Under the new measure Pu the state dynamics of the model is given by ¯ - Y ) - Y u]dt + Y dB ~Y dY = [(Y where µY - Y u is the perturbed drift vector, Y is the volatility matrix of Y , and Y Y  is the positive semi-definite covariance matrix. Under this new framework our wealth dynamics are given by
~ ~ ~Y dXt = [Xt (rt +  t (µ - r ) - t X ut ) - Ct ]dt + Xt t X dB t

Then the optimization problem for a robust investor becomes sup inf EP
C, u
u

 0

1 f (Cs , Vs ) - e-s u  -1 us ds 2 s

(7.18)

where the second term is a penalty term given by the discounted relative entropy.  is a matrix of preference parameters which measures the strength of preference for robustness in the three
r  ^t ^  . With a slight abuse in notation; these ^t . dB and dB independent Brownian motions, dB t

three independent Brownian terms account for the ambiguity aversion in the stock model, bond model and the ambiguity in the unobserved parameter,  . When  = 0, is the zero matrix, the investor believes the model is correct. For an uncertainty averse investor the HJB equation in the infinite horizon is given by 1 0 = sup inf {f (C, V ) + AV - VX X  X  u - u Y  VY + u  -1 u} 2 C, u ~ X = X  , and AV is the infinitesimal generator of V given by We let  ¯ - Y )) VY AV = VX [X (r +  (µ - r )) - C ] + ((Y 1 ~ X Y  VXY + 1 Tr(Y Y  VY Y ) + VXX X 2  X X   + X   2 2 Substituting AV into the HJB equation we get ¯ - Y )) VY 0 = sup inf {f (C, V ) + VX [X (r +  (µ - r )) - C ] + ((Y
C, u

(7.19)

(7.20)

1 ~ X Y  VXY + 1 Tr(Y Y  VY Y ) + VXX X 2  X X   + X   2 2 1 ~ X u - u Y  VY + u  -1 u} - VX X   2 where       V  VX   Vr               V = V = =  Vr  XY  VXr  Y Y  Vrr           VX   Vr V       75 V Vr V  V    Vr     V  

VY

CHAPTER 7

7.3. PROBLEM FORMULATION

Given the space U of admissible portfolios we can find the first order condition with respect to u as ~ X  +  Y  VY u = VX X  


(7.21)

Substituting the first order condition back into the HJB equation and simplifying gives us ¯   VY - Y   VY 0 = sup{f (C, V ) + VX [X (r +  (µ - r )) - C ] + Y
C,

1 ~ X Y  VXY + 1 Tr(Y Y  VY Y ) + VXX X 2  X X   + X   2 2 1 2 2 ~  ~X  - VX X  X   2 ~ X  Y  VY - VX X   1 - VY  Y  Y  VY } 2 Then the first order condition(FOC) for consumption becomes
- C  = VX [(1 -  )V ]
1- 1-

(7.22)



(7.23)

Substituting the value function we get that C = X G (Y )

to find the FOC for the portfolio vector  we take the derivative of the HJB equation with respect to  and set it to 0. Then, solving for  we get the expression ¯-1 B ¯  = A Where
2 2~ ¯ = VX ~ X  - VXX X 2 X X  X X   A

¯ = V X X (µ - r ) + X  ~ X Y  VXY - VX X  ~ X  Y  VY B ¯ is non-singular. Following Maenhout, see [32], we impose the homothetic robustness and A specification. We assume the preference parameter  takes the form  (X, Y ) =  >0 (1 -  )V (X, Y ) (7.24)

where  = diag([1 , 2 , 3 ] ) is a diagonal matrix of uncertainty aversion parameter about the stock model, bond model and learning estimation, respectively. Then substituting in V , VX , VXY , VY , VY Y , G(Y ) into the optimal portfolio we get ¯-1 B ¯  = A 76 (7.25)

CHAPTER 7 where ¯ = X (  +  I2 )X  A

7.3. PROBLEM FORMULATION

~ X Y  GY + 1  ~ X  Y  GY ¯ = (µ - r ) - 1 -   B 1- G 1- G GY 1 ~ X ( - I3 +  I3 )Y  = (µ - r ) + 1- G and In = diag([11 , 12 , ..., 1n ]) Then the optimal portfolio becomes  = [X (  +  I2 )X  ]-1 [(µ - r ) + = [X (  +  I2 )X  ]-1 (µ - r )
=1 [2×2]

1 ~ GY X ( - I3 +  I3 )Y  ] 1- G

1 ~ X ( - I3 +  I3 )Y  ] GY [X (  +  I2 )X  ]-1 [ + 1- G
=2 [2×3]

1 GY = 1 -1 (µ - r ) +  1 -1  2 1- G Substituting V , VX , VXX , VXY , VY , VY Y , and G into the HJB equation we get 0 = f (C  , V ) - - - + + - - + - where f (C  , V ) = 1   - 1- G 1- X 1-  - 1- G 77  V (1 -  ) + V (1 -  )(r +  (µ - r )) G 1 ¯   - Y   ) GY V (1 -  )(Y 1- G  V (1 -  ) X X   2 -1 ~ X Y  GY V (1 -  )  1- G 1 1 1- GY  GY V (1 -  )( + 1) Y Y  21- 1- G G 1 1 G YY V (1 -  )Tr[Y Y  ] 21- G 1 ~ X  ~ X   V (1 -  )  2 1 ~ X  Y  GY V (1 -  )  1- G 1 GY 1 1 GY  V (1 -  ) Y  Y  2 1- G 1- G

(7.26)

CHAPTER 7

7.3. PROBLEM FORMULATION

Dividing by V (1 -  ), multiplying (1 -  ) and substituting  we get 0=-  +  + (1 -  )r G

+ (1 -  )(µ - r ) 1 -1 (µ - r ) +

G Y   -1 2 1 (µ - r ) G

¯   - Y   ) GY - (Y G 1  - (1 -  )(µ - r ) 1 -1 X ( I2 +  )X  1 -1 (µ - r ) 2 GY - (µ - r ) 1 -1 X ( I2 +  )X  1 -1 2 G GY 1 1 GY   -1 2 1 X ( I2 +  )X  1 -1 2 - 21- G G ~ X (-I3 +  I3 +  )Y  GY + (µ - r )  1 - 1  G  1 GY ~ X (-I3 +  I3 +  )Y  GY +  2   1 -1  1- G G  1- 1 GY 1 GY Y ( I3 + I3 -  )Y  + 2 G 1- 1- G
=3

1 GY Y - Tr[Y Y  ] 2 G Collecting like terms and simplifying we get 0=- 1 GY Y  +  - Tr[Y Y  ] G 2 G ¯ - Y )) GY + (1 -  )r - ( (Y G  1 -1 + (µ - r ) [ (1 -  )1 ](µ - r ) 2 GY + (µ - r ) [1 -1 2 ] G 1 GY  1 GY [  2   1 -1  2 +  3 ] + 2 G 1- G

(7.27)

(7.28)

Multiplying G and collecting terms to the HJB equation we get the following PDE 1 0 = - + G - Tr[Y Y  GY Y ] 2 ¯ - Y )) GY + (1 -  )rG - ((Y 1 + (1 -  )(µ - r ) 1 -1 (µ - r )G 2 + (µ - r ) 1 -1 2 GY + 1 1 GY  ( 2  1 -1 2 + 3 )GY 2G 1-
=4

(7.29)

To separate the state variables from (µ - r ) we need to look more closely at the following two terms; (µ - r ) 1  (µ - r ) and 2  1 -1 (µ - r ). We first expand (µ - r ) 1  (µ - r ) to it's 78

CHAPTER 7 components Since 1 Where
-1

7.3. PROBLEM FORMULATION

 -1 1  1 (1, 1) - 1 (1 , 2 )  =  -1 1  1 (2, 1) - 1 (2 , 2 ) 

      

2 2 2 ^2 ^2 ^2 ^2  ^2 P - P SP ) P SP ) + 3 ( P -   (1 SP -  ) + 2 ( 1 - 1 (1, 1) = =0 2 2 2 2 2 ( +  ) (  ( ^2 ^2 ^2 ^2 S ^ ^2 1  - P - P SP )) P SP ) + 3 ( P -   SP ) + 2 ( =1 1 - 1 (1, 2) =

-SP  ^2 

P S 1  ^2 1  - 1 (2, 2) = 2 P 1

1 = - 1 (2, 1)

Then ¯ 1 (µ - r ) = (µ - r )  
 2 ^)2 0 - 2( + 1 )SP  ^ (P + P   + P   ^2  q r (P + P   + P   ) + q r ( +  1 ) ( +  1 ) 1 1 = J0 + J1  Y + Y  I3 J2 I3 Y 2

Where
2 2 P 2 0 - 2( + 1 )(SP  ^2  )qr P + qr  ( + 1 ) ( +  1 ) 1    P    2  2(( + 1 )(SP  )qr - P 0 )  0 J1 = -   ( +  1 )  1     P      2  P 0 P P      20  J2 = 0 0 0    (  +  1 ) 1    2   P P 0 P   

J0 =

Next we look at 2  1 -1 (µ - r ). We let 2  1 -1 = H where F = S H (  , 1), R = qr P H (  , 2) g0 = P F + R

79

CHAPTER 7   P F (1) 0 P F (1)   g1 =   P F (2) 0 P F (2)    P F (3) 0 P F (3)  then

7.3. PROBLEM FORMULATION           (7.30)

2  1 -1 (µ - r ) = g0 + g1 Y Then the PDE becomes 1 0 = - + G - Tr[Y Y  GY Y ] 2 1 + ((1 -  ) r + (1 -  ) (µ - r ) 1 -1 (µ - r ) )G 2 
= Y Y  I3 J2 I3 Y =J0 +J1  Y + 1 2

¯ - Y ))) GY + (2  1 -1 (µ - r ) -((Y
=g0 +g1 Y

+ Where = [0, 1, 0] .

1 GY  4 GY 2G

(7.31)

We use a log-linear approximation to linearize the non-linear consumption to wealth ratio to reduce the system of ODEs to a system of equations, this same procedure has been used by Chan et al, see [8], Campbell et al, see [9], and Liu, see [31]. So we let C  = = exp(c - x)  exp(k0 + k1 ( log() - log(G))) X G where k1 = exp(E[c - z ]) c = log(C ), z = log(X ) k0 = k1 (1 - log(k1 )) Then we get the following system of equations 1 ~ ] - 1 B  (Y Y  - 4 )B 0 = -k0 - k1  log() + k1 A - Tr[Y Y  Q 2 2 1  ¯) B - ( - 1)J0 + (g0 - Y 2 ~ (Y Y  - 4 )B - 1 ( - 1)J1 - ( - 1) + Q ~ (g0 - Y ¯ ) + (g1 + Y ) B 0 = k1 B - Q 2 ~+Q ~ (g1 + ) ~-Q ~ (Y Y  - 4 )Q ~ - 1 ( - 1)J2 + (g1 + ) Q 0 = k1 Q 2 ~ = 1 (Q + Q ). The original Ricatti equation gives us the condition that Q is symmetric Where Q 2 matrix such that   c11 c12 c13   ^= Q  c12 c22 c23    c13 c23 c33  80          

CHAPTER 7 We then retrieve the equation

7.4. SIMULATION AND RESULTS

1 ^ ] - 1 B  (Y Y  - 4 )B 0 = -k0 - k1  log() + k1 A - Tr[Y Y  Q 2 2 1  ¯) B - ( - 1)J0 + (g0 - Y 2 ^ (Y Y  - 4 )B - 1 ( - 1)J1 - ( - 1) + Q ^ (g 0 - Y ¯ ) + (g1 + Y ) B 0 = k1 B - Q 2 ^-Q ^ (Y Y  - 4 )Q ^ - 1 ( - 1 )J 2 + (g 1 + ) Q ^+Q ^ (g 1 + ) 0 = k1 Q 2

(7.32) (7.33) (7.34)

We solve the system of equations in Equations (7.32)-(7.34) using the routine originally proposed by Campbell and Viceira, see [10]. This was implemented in Matlab where we used the vpasolve function to numerically solve Equations (7.32)-(7.34). The function vpasolve uses a Newton's method type approach to solve the symbolic equations numerically. The symbolic toolbox in Matlab was used to verify that, indeed, the optimal portfolio solves the system of equations given by minimizing the HJB equation with respect to portfolio . A check was formed to ¯ - B ¯ = [0, 0] . verify that the derived optimal portfolio was correct, i.e. the linear equation A ¯ is a 2 × 2 matrix with the coefficients of  and B ¯ is a vector of constant terms. Where A

7.4

Simulation and Results

Chan et al, see [8], show that the optimal strategy portfolio strategy does not depend on the EIS parameter  , instead it is dependent on  indirectly through the consumption-wealth ratio. We simulate the optimal portfolio allocations in stocks and bonds, as well as the myopic demand and hedging components. We use a mix of parameters taken from Escobar et al, [20], and Liu, see [31]. We take the uncertainty aversion parameter  = 4, the time preference parameter  = 0.0153, and the EIS parameter  = [1 40, 1 20, 1 , 1 2, 1 0, 75]. We do not simulate  = 1 to avoid numerical instability.  = 1 reduces the problem to the CRRA utility case,  = 1  reduces to the power utility case and  = 1,  = 1 case reduces to the log utility case as noted in Campbell and Viceira, see [10]. We refer the reader to Campbell and Viceira, see [11], or a comprehensive summary on portfolio choice and long-term investments. Campbell and Viceira, see [10], show that the expected utility is only maximized if the solution to Equation (7.34) is given by the positive square root of the discriminant.

We begin our analysis by looking at the optimal stock and bond allocation as a function of EIS and ambiguity. In Fig.7.1(a) shows us that in general, the change in EIS has a small decreasing affect on the optimal stock allocation. This is due to the decreasing effects of EIS on stock hedging demands for moderately risk averse investors. The investors preference for 81

CHAPTER 7

7.4. SIMULATION AND RESULTS

robustness causes the optimal stock allocation to decrease. In Fig.7.1(b) the effects of EIS are quite profound. At low levels of EIS ( < 1) we observe that the investor that learns about stock returns, monotonically increases their short position in bonds as EIS increases, but the preference to short bonds decreases(absolute) as the investor becomes more robust. At moderate to high levels of EIS ( > 1) the investor takes on less risky positions and their willingness to substitute increases, as observed by Campbell and Viceira, see [10]. We observe that as the preference for robustness increases the investor decreases their investments in the risky assets. This is explained further by Maenhout's observations as follows.
(a) Optimal Stock Allocation

1 0

Wealth Allocation

-1 -2 -3 -4 -5 0 1 2 3 4 5 6 7 8 9 10
=1/40 =1/20 =1/ =1/2 =4/3

1 0

= = [0,10] 1 2 3 (b) Optimal Bond Allocation

Wealth Allocation

-1 -2 -3 -4 -5 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.1: (a) optimal stock allocation, (b) optimal bond allocation Maenhout, see [32], observed that as EIS increases the investors preference to consume decreases their positions in risky assets. This explains the sudden decrease(absolute) in the short position in the bond and stock demand and the sudden change in allocation was also observed in empirical data by Maenhout, he observed that as EIS increases, the risk aversion parameter becomes very large to keep the portfolio within 100%. Maenhout attributes this behaviour to 'effective' risk aversion. He notes that as EIS increases, the ambiguity aversion plus risk aversion effectively becomes the risk aversion and this explains the decrease in equity demand as robustness increases as shown in Figure 7.1. This relationship between EIS and 'effective' risk aversion also supports 82

CHAPTER 7

7.4. SIMULATION AND RESULTS

the observation that for higher EIS, the investor aggressively decreases(absolute) short positions and slightly decrease their stock allocation as ambiguity aversion increases, as shown in Figure 7.1.
Optimal Consumption to Wealth Ratio
=1/40 =1/20 =1/ =1/2 =4/3

1.15

1.1

1.05

Wealth Allocation

1

0.95

0.9

0.85

0.8 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.2: Relationship between consumption-wealth ratio, ambiguity and EIS Campbell and Viceira, see [10], observed that at moderate and high levels of risk aversion, consumption increases as EIS increases, as shown in Figure 7.2. We observe that for  < 1, there is a concave behavior in the consumption-wealth ratio as ambiguity increases, conversely for  > 1, the consumption-wealth ratio shows convex behavior, this behavior was also observed by Ju and Miao, see [26]. This behavior is attributed to observation that for  > 1, the investor becomes more willing to substitute consumption with savings thus the investor at moderate levels of risk aversion seeks safer investments as shown in Figure 7.1. The effective increase in risk aversion causes the investor to invest in safer investments decreasing their consumption-wealth ratio, the opposite behavior is observed for  < 1.

The effects of learning at low levels of ambiguity aversion, increases the willingness of the investor to short the bond for all levels of  , this is observed in Fig.7.1(b). This is explained by the fact that learning encourages the investor to short the bond to increase their consumption83

CHAPTER 7

7.4. SIMULATION AND RESULTS

wealth ratio, but as ambiguity aversion grows this willingness diminishes. The change in EIS, is negligible in the myopic demand. However, we observe that the myopic stock demand decreases with increased preference for robustness as shown in Figure 7.3. The same affect was observed by Liu, see [31], this affect goes back to Maenhout's observation that the preference for robustness effectively increases risk aversion.
(a) Myopic Stock Demand

0.5

Wealth Allocation

0

-0.5 0 1 2 3 4 5 6 7 8 9 10

0.5

= = [0,10] 1 2 3 (b) Myopic Bond Demand
=1/40 =1/20 =1/ =1/2 =4/3

Wealth Allocation

0

-0.5 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.3: (a) Myopic stock allocation, (b) Myopic optimal bond allocation We say that Myopic demand in the portfolio, as shown in Figure 7.3 is equivalent to the optimal portfolio derived from the mean-variance optimal portfolio problem solved by Merton, see [33]. At first glance it appears that Figures 7.1, 7.4 and 7.5, investors behave in a counter intuitive manner. However, our result is in line with observations from Campbell and Viceira, see [10], who also observe that for  < 1 the increase in EIS, increases the investors demand for higher returns. We can see this is exactly the case, for  < 1, we see that an investor who is less willing to substitute inter-temporally shorts the bond, but not at the level of the investors who are less more willing to substitute inter-temporally. This is also reflected in the optimal consumption to wealth ratio, which increases for moderate to high risk aversion as EIS increases, shown in Figure 7.2. Holding wealth constant, we observe from Figure 7.2 that the investors consumption is less at  = [1 20, 1 40] compared to  = [1 4, 1 2], this means that they are less willing to 84

CHAPTER 7

7.4. SIMULATION AND RESULTS

substitute consumption for investments in risky or risk free asset. This explains why an investors with  = [1 4, 1 2] is more willing to take riskier positions over investors with  = [1 40, 1 20] as shown in Figure 7.1
(a) Stock Allocation from Observable Parameter Hedging Demand

0.5

Wealth Allocation

0 -0.5 -1 -1.5 -2 0 1 2 3 4 5 6 7 8 9 10
=1/40 =1/20 =1/ =1/2 =4/3

0.5

= = [0,10] 1 2 3 (b) Bond Allocation from Observable Parameter Hedging Demand

Wealth Allocation

0 -0.5 -1 -1.5 -2 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.4: (a) Stock demand due to observable parameter hedging, (b) Bond demand due to observable parameter hedging The equity demand coming from the observable parameter, Fig.7.4(a), is non zero. This is attributed to the assumption that this parameter is used to predict stock returns and stock volatility which implies the long run average of the obserbvable parameter is not zero. For an investor with  < 1, that has no preference for robustness, the equity demand increases with EIS. For an investor with  > 1 the decrease in equity demand is due to the willingness to substitute as observed by Maenhout, see [32]. However, we observe that as preference for robustness increases any difference in equity demand vanishes rapidly and overall demand decreases. For the bond (Fig.7.4(b)), we observe that an investor who learns, shorts the bond, regardless of EIS,  . The observable parameter contributes about a third of the demand for shorting the bond. In Figure 7.5 we observe that the investor assumes more risk due to the unobservable parameter. Filtering about the unobservable parameter creates the largest demand to short the bond, learning about this parameter contributes the remaining two-thirds of the demand for 85

CHAPTER 7

7.4. SIMULATION AND RESULTS

shorting the bond. The stock allocation from the unobservable parameter hedging demand is nearly non-existant, this is because in the long run average of the unobservable parameter is zero, this makes sense because the mean of the log process is assumed to go to zero in the long run. As observed by Escobar et al, see [20], the bond component of the hedge of the observed and unobserved components is much higher than the stock component and depends on the correlation values  P and P  . The investors preference to short the bond was explained by Escobar et al, see [20], through the following example; if  P > 0 and P  > 0, then the bond tends to have higher returns when future stock risk premium is expected to worsen, and thus, the bond provides a hedge against this uncertainty in future investment opportunities. The investors value this hedge by investing more in bonds (P,obs < 0 and P,unobs < 0).
(a) Stock Allocation from Unobservable Parameter Hedging Demand
0

Wealth Allocation

-1 -2 -3 -4 0 1 2 3 4 5 6 7 8 9 10
=1/40 =1/20 =1/ =1/2 =4/3

= = [0,10] 1 2 3 (b) Bond Allocation from Unobservable Parameter Hedging Demand
0

Wealth Allocation

-1 -2 -3 -4 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.5: (a) Stock demand due to unobservable parameter hedging, (b) Bond demand due to unobservable parameter hedging The initial convex behavior of the observable and unobservable hedging demand are due to the negative correlation they have with the stock return. This effect was a key result of Liu, see [31]. We can see this behaviour appearing for an investor that learns about stock return through the unobservable and observable hedging demands. Whereas, we don't see this behaviour in the interest rate hedging demand in Figure 7.6. However, as the investors preference for robustness 86

CHAPTER 7

7.4. SIMULATION AND RESULTS

increases the effects of correlation vanishes. This is due to the diluting influence of the correlation coefficients as ambiguity aversion increases.
(a) Stock Allocation from Interest Rate Hedging Demand
=1/40 =1/20 =1/ =1/2 =4/3

0.5 0.4

Wealth Allocation

0.3 0.2 0.1 0 -0.1 0 1 2 3 4 5 6 7 8 9

10

0.5 0.4

= = [0,10] 1 2 3 (b) Bond Allocation from Interest Rate Hedging Demand

Wealth Allocation

0.3 0.2 0.1 0 -0.1 0 1 2 3 4 5 6 7 8 9 10

= = [0,10] 1 2 3

Figure 7.6: (a) Stock demand due to interest rate hedging, (b) Bond demand due to interest rate hedging Maenhout, see [32], notes that as the preference for robustness increases the risk free rate decreases. We can see this behaviour reflected in Fig.7.6(b). The investor recognizes that the risk free rate changes randomly and hedges the risk purely using bonds. This is due to the perfectly negative correlation between the bond and interest rate, see [20]. We observe that as the EIS increases, the hedging demand for the bond to hedge interest rate risk decreases. This is explained by the increase in consumption of the investor at the moderate to high levels of risk aversion. However this is not enough to offset the investors willingness to short the bond. For  > 1 as ambiguity aversion increases, the effective risk aversion increases and drastically lowers the demand to short the bond, this supports the hypothesis proposed by Maenhout, see [32], which says that ambiguity aversion adds to the affect of risk aversion.

87

Chapter 8

Conclusion
Pricing and hedging has been a topic extensively studied in literature. There are many different viewpoints on how to model the movement of underlying assets. We propose a parametric model using the techniques of time-changed subordination, applied to Brownian Motion. This adds stochastic volatility in a tractable manner. Our model builds in inherent dependence between any number of assets in a portfolio. Intuitively this is equivalent to saying the underlyingassets have a common priving factor. The parametric nature of the model also let's us use heavy-tailed distributions to capture heavy tailedness in the data. For future work we propose incorporating learning about underlying returns into the model. This model is well suited to model incomplete information as it is a conditionally normal and fits well into the non-linear optimal filtering framework in Liptser and Shiryaev, see [30].

We show that our model can be priced using classical Monte Carlo method and the more efficient Fourier-Cosine method. We compare the two methods in pricing Arithmetic average Asian call options. We show that the Fourier-Cosine method is a very efficient method, but we noticed some instability of the method at a strike price of $0, this is due to the solution being imaginary at that point. However, in practice nobody trades at a strike price at $0, so it is not an issue for standard options. When used in calibration, this method does fails to reach the error tolerance of 1 × 10-6 . We suggest that this method be used with a grain of salt. It is a highly efficient method, but it is not as robust as Monte Carlo and it is sensitive to the integration bounds.

We use the Fourier-Cosine method to replicate option payoffs for quadratic risk, VaR risk and AVaR risk. We simulate the hedging strategies numerically using MC method as a benchmark and compare it to results based on the Fourier-Cosine method. The Fourier-Cosine method is tractable at determining cost functions under expectations. Thus it is quite successful at hedg88

CHAPTER 8 ing quadratic and AVaR risk, however, it does not perform as well with VaR. This is because the Fourier-Cosine method was derived with the intention to compute expectations, and not a specific points in the distribution, as the sinusoidal nature makes it difficult to find a unique point. The Fourier-Cosine method does not explore the entire domain of the characteristic function and requires higher truncation bounds to perform more accurately for quadratic hedging problems.

In this work we show that hedging VaR is equivalent to creating a replicating portfolio for the smallest positive hedge that results in a positive hedge at a high probability. Table 5.3 shows that when hedging VaR the investor is only required to hold a small portion of wealth in the underlying and a large amount in cash. This implies that to hedge VaR risk, we can simply hedge the option by holding mostly cash. Counter intuitively, hedging AVaR requires a more risky portfolio as seen in Table 5.4. However, this is to be expected because to hedge a large error, simply holding cash cannot provide sufficient returns. We also look at the discounted expected hedging errors in Table 5.5. For an investor looking to hedge VaR they should expect their returns to reflect the payoff of the option as most of their hedging investments are allocated to the cash account and will at most lose a fraction of any negative movements in the underlying asset. The investor hedging AVaR is actually more exposed to risk as they need to generate higher returns to hedge risk in the entire tail. We also extend AVaR hedging to a robust framework using the Neyman-Pearson lemma as outlined in F¨ ollmer et al, see [23]. For future work it would be interesting to extend the work to include more assets in the portfolio, consider stochastic interest rates and simulate the robust AVaR hedging portfolio.

The appearance of the volatility smile after the crash of 1987 created a new problem to explore. The cause the volatility smile is still not clear, but new models were proposed to capture the phenomenon. We show through numerical example that our model can replicate the volatility smile. We also propose a conditional calibration method to calibrate parameters. The calibration problem is reduced to two separate optimization problems. To solve this problem we use the pattern search algorithm. This direct method is known to have a global optimal point if the cost function is convex as shown by Torczon, see [46]. We show that with the RMSE cost function coupled with the pattern search algorithm effectively calibrates our model and matches market prices of WTI Asian options and Brent crude European options.

In the second part of this thesis, we explore the behavior of robust infinitely-lived investor

89

CHAPTER 8 who maximizes their recursive utility. We also assume that the investor learns about the stock returns. We performed our simulation using the method found in Campand Viceira, see [10]. From our numerical study, we found that, generally, as the EIS increases the equity demand decreases, however the effect is small, and as preference for robustness increases the demand for equity decreases. This is due to the preference for robustness adding more risk aversion to the behaviour of the investor, effectively increasing risk aversion. It was observed that when  > 1, the investor decreases(absolute) short positions in riskless assets. We also observed that for any level of EIS, as ambiguity aversion decreases(absolute) short positions in the risk free asset. This is due to the investor becoming more risk averse. When  < 1, the investor increases short positions in riskless assets as EIS increases, in this case ambiguity aversion behaves the same as when  > 1. We found that for  > 1 there is a convex behavior in consumption-wealth ratio as ambiguity increases. This is because the investor is less willing to seek risky investments and decreases their consumption-wealth ratio. Conversely for  < 1 there is a concave behavior, because the when  < 1 the investor is more willing to seek higher returns, but the preference for robustness diminishes this willingness to take risk. For moderate levels of risk aversion, consumption-wealth ratio increases as EIS increases and like Liu, see [31], we observed that as ambiguity increases, the myopic demand for stock decreases. We also found that learning about stock returns drives the investor to short the riskless asset regardless of  . The majority of the demand for shorting comes from the unobservable parameter, which is about two-thirds of the demand, while the observable parameter contributes one-third. Interest rate risk, creates a hedging demand for the bond, but the hedging demand is not enough to overcome the willingness to short the bonds. For future work, it would be interesting to consider the effects of inflation, this is quite relevant in long-term investing, as inflation is no longer constant. It would also be interesting to look at the general utility proposed by Jun and Miao, see [26].

90

Appendix A: Matlab Code
Pricing Asian Options
MC Pricing
Time-changed Univariate Main Code

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % The i s t h e main s c r i p t %

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % clear ; clc ; tic % % % I n i t i a l i z e Variables M = 250; % sampling frequency T = 1 ; % m a t u r i t y time i n y e a r s dT = T/M; % s a m p l i n g p e r i o d N = 1 0 0 0 0 0 ; % number o f s i m u l a t i o n s r a t e = 0 . 0 3 6 7 ; % r i s k f r e e r a t e o f r e t u r n i n %100 S0 = 5 7 ; % i n i t i a l s t o c k p r i c e o f two a s s e t s K = 1:100; % Strike KSpread = 5 2 ; % S t r i k e f o r Spread time = t r a n s p o s e ( l i n s p a c e ( 0 ,T, T/dT) ) ; k = 1; l = 1; f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % % % Parameters from c a l i b r a t i o n muY = 0 ; % d r i f t parameter sigmaY = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0; % %

91

APPENDIX A
% IG S u b o r d i n a t e d P r o c e s s % Generate dependent IG random time p r o c e s s [ R1 , L0 ] = IGProc ( kappa , c , dT , T, N, 0 ) ; % Generate NIG p r o c e s s [ S1 , dY1 , Y1 ] = NIGProc (R1 , S0 ,muY, sigmaY ) ; f p r i n t f ( ' Done IG Sub \ n ' ) % % % Gamma S u b o r d i n a t e d P r o c e s s % Generate dependent Gamama random time p r o c e s s [ R2 , G0 ] = GammaProc ( kappa , c , dT , T, N, 0 ) ; % Generate VG p r o c e s s [ S2 , dY2 , Y2 ] = VGProc (R2 , S0 ,muY, sigmaY ) ; f p r i n t f ( ' Done Gamma Sub \ n ' ) % % % Geometric Brownian Motion P r o c e s s % Z = normrnd ( 0 , 1 , [M,N ] ) ; % dY3 = muYdT+s q r t (dT)  sigmaY .  Z ; % Y3 = cumsum ( dY3 ) ; % S3 = S0  exp (Y3) ; % % % Asian o p t i o n p a y o f f f o r each s t r i k e p r i c e P a y o f f 1 = z e r o s ( 1 , l e n g t h (K) - 1) ; P a y o f f 2 = P a y o f f 1 ; %B l s = P a y o f f 1 ; w h i l e k < l e n g t h (K)+1 % G e n e r a t i n g Asian o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P a y o f f 1 ( k ) ] = AsianOption ( S1 ,K( k ) , r a t e , dT) ; [ P a y o f f 2 ( k ) ] = AsianOption ( S2 ,K( k ) , r a t e , dT) ; % % % B l s ( k ) = b l s p r i c e ( S0 ,K( k ) , r a t e , dT , sigmaY ) ; % G e n e r a t i n g Spread o p t i o n p r i c e ( p ) and p a y o f f ( h ) [H( : , k ) ] = SpOpt ( S1 , S2 , KSpread ( k ) , r a t e , dT ,N) ; k = k +1; end f p r i n t f ( ' Done P a y o f f c a l c u l a t i o n s \ n ' ) toc

27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68

% % % Save r e s u l t s % s a v e ( ' MCTimeChangedData . mat ' , . . . % 'K' , ' time ' , ' Pa yo f f1 ' , ' P ay o ff 2 ' )

% f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

% s a v e ( ' MCTimeChangedDataCI . mat ' , ' H1 ' , ' S1 ' , ' dY1 ' , ' Y1 ' , ' R1 ' , ' H2 ' , ' S2 ' , . . . % ' dY2 ' , ' Y2 ' , ' R2 ' , ' H' , ' K' , ' KSpread ' , ' N' , ' time ' )

92

APPENDIX A
%f p r i n t f ( ' More v a r i a b l e s saved ! \ n ' ) % % % GPU S t u f f

69 70 71 72 73 74 75 76 77 78 79 80 81 82 83

% i f M <= 1000 % % % % % % % % % % N = M; % Parameters t o Generate IG random numbers alpha0 = 6 . 1 8 8 ; beta0 = -3.894; delta0 = 0.1622; alpha = alpha0 ; beta = beta0 ; delta = delta0 ; a = [1 1 1 ] ; b = [ d e l t a 0  s q r t ( a l p h a 0 ^2 - b e t a 0 ^ 2 ) , d e l t a  s q r t ( a l p h a ^2 - b e t a ^ 2 ) , d e l t a  s q r t ( a l p h a ^2 - b e t a ^ 2 ) ] ;

84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106

% % % % % % % % % % % % % % % % % % % % % % % end

c = [1 1 ] ; % Generate dependent IG s u b o r d i n a t o r s [ R1 , L0 ] = IGProc ( a , b , c ( 1 ) ,dT , T, N, 0 , 1 ) ; [ R2 ] = IGProc ( a , b , c ( 2 ) ,dT , T, N, L0 , 2 ) ; R = [ R1 ; R2 ] ; % Generate NIG p r o c e s s e s c o v a r i a n c e = [ d e l t a ^2 d e l t a  d e l t a ; d e l t a  d e l t a d e l t a ^ 2 ] ; d r i f t = [ beta  d e l t a ^ 2 , . . . beta  d e l t a ^ 2 ] ; [ S1 ] = NIGProc (R, i n i t i a l S t o c k P r i c e s , d r i f t ( 1 ) , c o v a r i a n c e ( 1 , : ) ,T, dT ,N) ; [ S2 ] = NIGProc (R, i n i t i a l S t o c k P r i c e s , d r i f t ( 2 ) , c o v a r i a n c e ( 2 , : ) ,T, dT ,N) ; % G e n e r a t i n g Asian o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P1 ] = AsianOption ( S1 , s t r i k e P r i c e , r a t e , T, dT ,N) ; [ P2 ] = AsianOption ( S2 , s t r i k e P r i c e , r a t e , T, dT ,N) ; % G e n e r a t i n g Asian Spread o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P ] = AsianSpOpt ( S1 , S2 , s p r e a d S t r i k e P r i c e , r a t e , T, dT ,N) ; s 1 = g a t h e r ( S1 ) ; s 2 = g a t h e r ( S2 ) ; p1 = g a t h e r ( P1 ) ; p2 = g a t h e r ( P2 ) ; p = g a t h e r (P) ; r e s e t ( dev ) ;

Time-changed Bivariate Main Code

93

APPENDIX A
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % The i s t h e main s c r i p t %

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % clear ; clc ; tic % % % I n i t i a l i z e Variables M = 1 2 ; % sampling frequency T = 1 / 7 5 ; % m a t u r i t y time i n y e a r s dT = T/M; % s a m p l i n g p e r i o d N = 1 0 0 0 0 0 0 ; % number o f s i m u l a t i o n s r a t e = 0 . 0 2 ; % r i s k f r e e r a t e o f r e t u r n i n %100 S0 = [ 6 8 . 5 8 ; 7 4 . 8 8 ] ; % i n i t i a l s t o c k p r i c e o f two a s s e t s K = 39:0.5:48; % Strike time = t r a n s p o s e ( l i n s p a c e ( 0 ,T, T/dT) ) ; k = 1; l = 1; f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % % % % Gamma S u b o r d i n a t e d P r o c e s s % % Generate dependent Gamama random time p r o c e s s % [ R2 , G0 ] = GammaProc ( kappa , c , dT , T,N) ; % % Generate VG p r o c e s s % [ S2 , dY2 , Y2 ] = VGProc (R2 , S0 1 ,muY, sigmaY ) ; % f p r i n t f ( ' Done Gamma Sub \ n ' ) % % % Geometric Brownian Motion P r o c e s s % Z = normrnd ( 0 , 1 , [M,N ] ) ; % dY3 = muYdT+s q r t (dT)  sigmaY .  Z ; % Y3 = cumsum ( dY3 ) ; % S3 = S0  exp (Y3) ; % % l o a d ( ' BivarY1 . mat ' ) l o a d ( ' BivarX1 . mat ' ) % Parameters from c a l i b r a t i o n muX = [ y ( 4 , 1 3 : 3 1 ) ; x ( 3 , 1 : 1 9 ) ] ; sigmaX = [ y ( 5 , 1 3 : 3 1 ) ; x ( 4 , 1 : 1 9 ) ] ; kappa = [ y ( 1 , 1 3 : 3 1 ) ; y ( 2 , 1 3 : 3 1 ) ; x ( 1 , 1 : 1 9 ) ] ; c = [ y(3 ,13:31) ; x(2 ,1:19) ] ; muY = dT .  muX+c .  muXdT ; sigmaY = s q r t (dT .  ( ( kappa ( 1 , : )+c . ^ 2 .  [ kappa ( 2 , : ) ; kappa ( 3 , : ) ] ) .  muX. ^ 2 + . . . ( [ 1 ; 1 ] + c ) .  sigmaX . ^ 2 ) ) ;

94

APPENDIX A
% Asian o p t i o n p a y o f f f o r each s t r i k e p r i c e P a y o f f 1 = z e r o s ( 1 , l e n g t h (K) - 1) ; %P a y o f f 2 = P a y o f f 1 ; %B l s = P a y o f f 1 ; w h i l e k < l e n g t h (K)+1 % IG S u b o r d i n a t e d P r o c e s s % Generate dependent IG random time p r o c e s s [ R1 , L0 ] = IGProc ( kappa ( : , k ) , c ( 1 , k ) ,dT , T, N, 1 ) ; [ R2 ] = IGProc ( kappa ( : , k ) , c ( 2 , k ) ,dT , T, N, 2 , L0 ) ; % Generate NIG p r o c e s s [ S1 ] = NIGProc (R1 , S0 ( 1 ) ,muY( 1 , k ) , sigmaX ( 1 , k ) ) ; [ S2 ] = NIGProc (R2 , S0 ( 2 ) ,muY( 2 , k ) , sigmaX ( 2 , k ) ) ; f p r i n t f ( ' Done IG Sub \ n ' ) % G e n e r a t i n g Asian o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P a y o f f 1 ( k ) ] = AsianSprOption ( S1 , S2 ,K( k ) , r a t e , dT , 0 . 8 5 ) ; k = k +1; end f p r i n t f ( ' Done P a y o f f c a l c u l a t i o n s \ n ' ) toc

43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84

% % % Save r e s u l t s f i l e n a m e = s p r i n t f ( ' MCTCSprSim %d . mat ' ,T) ; save ( filename , . . . 'K ' , ' time ' , ' P a y o f f 1 ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

% s a v e ( ' MCTimeChangedDataCI . mat ' , ' H1 ' , ' S1 ' , ' dY1 ' , ' Y1 ' , ' R1 ' , ' H2 ' , ' S2 ' , . . . % ' dY2 ' , ' Y2 ' , ' R2 ' , ' H' , ' K' , ' KSpread ' , ' N' , ' time ' )

%f p r i n t f ( ' More v a r i a b l e s saved ! \ n ' ) % % % GPU S t u f f

% i f M <= 1000 % % % % % % % % % % N = M; % Parameters t o Generate IG random numbers alpha0 = 6 . 1 8 8 ; beta0 = -3.894; delta0 = 0.1622; alpha = alpha0 ; beta = beta0 ; delta = delta0 ; a = [1 1 1 ] ; b = [ d e l t a 0  s q r t ( a l p h a 0 ^2 - b e t a 0 ^ 2 ) , d e l t a  s q r t ( a l p h a ^2 - b e t a ^ 2 ) , d e l t a  s q r t (

95

APPENDIX A
a l p h a ^2 - b e t a ^ 2 ) ] ;
85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107

% % % % % % % % % % % % % % % % % % % % % % % end

c = [1 1 ] ; % Generate dependent IG s u b o r d i n a t o r s [ R1 , L0 ] = IGProc ( a , b , c ( 1 ) ,dT , T, N, 0 , 1 ) ; [ R2 ] = IGProc ( a , b , c ( 2 ) ,dT , T, N, L0 , 2 ) ; R = [ R1 ; R2 ] ; % Generate NIG p r o c e s s e s c o v a r i a n c e = [ d e l t a ^2 d e l t a  d e l t a ; d e l t a  d e l t a d e l t a ^ 2 ] ; d r i f t = [ beta  d e l t a ^ 2 , . . . beta  d e l t a ^ 2 ] ; [ S1 ] = NIGProc (R, i n i t i a l S t o c k P r i c e s , d r i f t ( 1 ) , c o v a r i a n c e ( 1 , : ) ,T, dT ,N) ; [ S2 ] = NIGProc (R, i n i t i a l S t o c k P r i c e s , d r i f t ( 2 ) , c o v a r i a n c e ( 2 , : ) ,T, dT ,N) ; % G e n e r a t i n g Asian o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P1 ] = AsianOption ( S1 , s t r i k e P r i c e , r a t e , T, dT ,N) ; [ P2 ] = AsianOption ( S2 , s t r i k e P r i c e , r a t e , T, dT ,N) ; % G e n e r a t i n g Asian Spread o p t i o n p r i c e ( p ) and p a y o f f ( h ) [ P ] = AsianSpOpt ( S1 , S2 , s p r e a d S t r i k e P r i c e , r a t e , T, dT ,N) ; s 1 = g a t h e r ( S1 ) ; s 2 = g a t h e r ( S2 ) ; p1 = g a t h e r ( P1 ) ; p2 = g a t h e r ( P2 ) ; p = g a t h e r (P) ; r e s e t ( dev ) ;

IG Random Number Generator

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This f u n c t i o n g e n e r a t e s IG random numbers . I r e t u r n s t h e IG g e n e r a t e d % numbers V r e t u r n s t h e Chi s q u a r e d g e n e r a t e d numbers and Y r e t u r n s t h e % u n i f o r m l y g e n e r a t e d numbers . a and b a r e t h e IG parameters , n i s t h e % number o f s u b o r d i n a t o r s and m i s t h e number o f s i m u l a t i o n s . % % % %

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ I ] = IGRNG( a , b , n ,m) % I n i t i a l i z e variables a o n e s = o n e s ( 1 ,m) ; b o n e s = o n e s ( 1 ,m) ; a = ( transpose ( a )  a ones ) ; b = ( transpose (b)  b ones ) ; % Schucany ' s a l g o r i t h m t o g e n e r a t e IG random numbers V = ( normrnd ( 0 , 1 , [ n m] ) ) . ^ 2 ; % g e n e r a t e s a c h i s q u a r e d n by m a r r a y W = a .  V; C = a ./(2. b) ; X = a + C.  (W - s q r t (W.  ( 4 .  b + W) ) ) ;

96

APPENDIX A
P = a . / ( a+o n e s ( n ,m) ) ; Y = u n i f r n d ( 0 , 1 , [ n ,m] ) ; % Yg = g a t h e r (Y) ; Pg = g a t h e r (P) ; %Only r e q u i r e d f o r gpu a r r a y s i f Y >= P I = ( a . ^ 2 ) . /X; else I = X; end end

16 17 18 19 20 21 22 23

IG Process Generator

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This f u n c t i o n w i l l g e n e r a t e t h e IG d i s t random time %

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ R, L0 ] = IGProc ( kappa , c , dT , T, N, j , L0 ) a0 = dT/ s q r t ( kappa ( 1 ) ) ; b0 = 1/ s q r t ( kappa ( 1 ) ) ; i f j >0 a j = dT/ s q r t ( kappa ( j +1) ) ; b j = 1/ s q r t ( kappa ( j +1) ) ; else a j=a0 ; b j=b0 ; end i f nargin < 7 % pd = ma kedis t ( ' I n v e r s e G a u s s i a n ' , ' mu' , a , ' lambda ' , b ) ; L0 = z e r o s ( u i n t 6 4 (T/dT) ,N) ; L = L0 ; n = l e n g t h ( a0 ) ; m = N; i = 1 ; t = 0 ; w h i l e t < T-dT t = t+dT ; % X = random ( pd , [ n ,m] ) ; Y = random ( pd , [ n ,m] ) ; X = IGRNG( a0 , b0 , n ,m) ; Y = IGRNG( a j , bj , n ,m) ; % I n d e p e n d e n t IG P r o c e s s e s L0 ( i + 1 , : ) = L0 ( i , : ) +X( 1 , : ) ; L( i + 1 , : ) = L( i , : ) +Y( 1 , : ) ; i = i +1; end % Dependent IG P r o c e s s e s R = L0 + c  L ; else % pd = ma kedis t ( ' I n v e r s e G a u s s i a n ' , ' mu' , a , ' lambda ' , b ) ; L = z e r o s ( u i n t 6 4 (T/dT) ,N) ; n = l e n g t h ( a0 ) ; m = N; i = 1 ; t = 0 ; w h i l e t < T-dT t = t+dT ;

97

APPENDIX A
% X = random ( pd , [ n ,m] ) ; Y = random ( pd , [ n ,m] ) ; X = IGRNG( a0 , b0 , n ,m) ; Y = IGRNG( a j , bj , n ,m) ; % I n d e p e n d e n t IG P r o c e s s e s L( i + 1 , : ) = L( i , : ) +Y( 1 , : ) ; i = i +1; end % Dependent IG P r o c e s s e s R = L0 + c  L ; end end

32 33 34 35 36 37 38 39 40 41

NIG Process Generator

1 2

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This g e n e r a t e s a IG s u b o r d i n a t e d time changed p r o c e s s

3 4 5 6 7 8 9 10 11 12 13 14 15

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ S , dY , Y,dW]=NIGProc (R, S0 , mu, sigma ) n = s i z e (R, 1 ) ; m = s i z e (R, 2 ) ; Z = normrnd ( 0 , 1 , [ 1 ,m] ) ; dR = [ z e r o s (m, 1 ) , d i f f (R) ' ] ; dR =dR ' ; dY = sigma  s q r t (dR) .  Z + . . . dRmu ; dW = sigma  s q r t (dR) .  Z - . . . dR sigma ; Y = cumsum (dY) ; S = S0  exp (Y) ; end

Gamma Random Number Generator

1 2

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This f u n c t i o n g e n e r a t e s Gamma random numbers %

3

% U and V r e t u r n u n i f o r m l y g e n e r a t e d random numbers %

4 5 6 7 8

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [G] = GammaRNG( a , n ,m) % I n i t i a l i z e variables a o n e s = o n e s ( 1 ,m) ; a = ( transpose (a) a ones ) ;

98

APPENDIX A
X = o n e s ( n ,m) ; Y = o n e s ( n ,m) ; % Jonk ' s a l g o r i t h m t o g e n e r a t e Gamma d i s t r i b u t e d randon numbers w h i l e X+Y > 1 U = u n i f r n d ( 0 , 1 , [ n ,m] ) ; V = u n i f r n d ( 0 , 1 , [ n ,m] ) ; X = U. ^ ( 1 . / a ) ; Y = V. ^ ( 1 . / ( 1 - a ) ) ; end Z = - l o g ( u n i f r n d ( 0 , 1 , [ n ,m] ) ) ; G = Z .  X. / (X+Y) ; end

9 10 11 12 13 14 15 16 17

Gamma Process Generator

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This f u n c t i o n w i l l g e n e r a t e t h e Gamma d i s t random time %

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ R, G0 ] = GammaProc ( kappa , c , dT , T, N, j ) a0 = dT/ kappa ( 1 ) ; i f l e n g t h ( kappa ) >1 a j=dT/ kappa ( j +1) ; else a j=a0 ; end % pd = make dist ( 'Gamma' , ' a ' , a ) ; G0 = z e r o s (T/dT ,N) ; G = z e r o s (T/dT ,N) ; n = l e n g t h ( a0 ) ; m = N; i = 1 ; t = 0 ; w h i l e t < T-dT t = t+dT ; % X = random ( pd , [ n ,m] ) ; Y = random ( pd , [ n ,m] ) ; X = GammaRNG( a0 , n ,m) ; Y = GammaRNG( a j , n ,m) ; % I n d e p e n d e n t IG P r o c e s s e s G0( i + 1 , : ) = G0( i , : ) +X( 1 , : ) ; G( i + 1 , : ) = G( i , : ) +Y( 1 , : ) ; i = i +1; end % Dependent IG P r o c e s s e s R = G0 + c G; end

VG Process Generator

1

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %

99

APPENDIX A
% %
3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31

2

This g e n e r a t e s a Gamma s u b o r d i n a t e d time changed p r o c e s s

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ S , dY , Y,dW]=VGProc (R, S0 , mu, sigma , L , j , l ) n = s i z e (R, 1 ) ; m = s i z e (R, 2 ) ; dY=z e r o s ( n ,m) ; i f n a r g i n <= 6 Z = normrnd ( 0 , 1 , [ 1 ,m] ) ; dR = [ z e r o s (m, 1 ) , d i f f (R) ' ] ; dR =dR ' ; dY = sigma  s q r t (dR) .  Z + . . . dRmu ; dW = sigma  s q r t (dR) .  Z - . . . dR sigma ; e l s e i f nargin > 6 % j i s t h e row i n d e x o f c o v a r i a n c e matrix % l i s t h e column i n d e x o f j t h row t h a t c o r r e s p o n d s t o t h e o t h e r s t o c k sigma1 = sigma ( j , j ) ; sigma2 = sigma ( j , l ) ; Z = normrnd ( 0 , 1 , [ 1 ,m] ) ; dR = [ z e r o s (m, 1 ) , d i f f (R) ' ] ; dR =dR ' ; dL = [ z e r o s (m, 1 ) , d i f f (L) ' ] ; dL =dL ' ; dY = sigma1  s q r t (dR) .  Z + . . . sigma2  s q r t ( dL ) .  Z + . . . dRmu( j ) ; dW = sigma  s q r t (dR) .  Z - . . . dR sigma ; end Y = cumsum (dY) ; S = S0  exp (Y) ; end

Asian Option Payoff

1 2 3 4 5 6 7 8

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % This computes Asian Option P r i c e %

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % f u n c t i o n [ p a y o f f ] = AsianOption ( S , K, r , dT) % option payoff h = mean (max( mean ( S ) -K, 0 ) ) ; % option discounted value p a y o f f = exp ( - r  (dT) )  h ;

100

APPENDIX A
end

9

Asian Basket Spread Option Payoff

1 2 3 4 5 6

f u n c t i o n [ p a y o f f ] = AsianSprOption ( S1 , S2 , K, r , dT , w) % option payoff h = mean (max ( (w mean ( S1 ) - (1 -w)  mean ( S2 ) ) -K, 0 ) ) ; % option discounted value p a y o f f = exp ( - r  (dT) )  h ; end

Hedging Asian Options
Quadratic Hedging
NIG Quadratic Hedging

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24

clear ; clc ; format long

T=1; dt =1/250; M =T/ dt ; S0 =57; r =0.0367; N = 100000; K = 52; f i n a l S t r i k e P r i c e = K;

% % Hedging by MC tic k = 1; l = 1; f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % Parameters from c a l i b r a t i o n muY = 0 ; % d r i f t parameter sigmaY = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0; % IG S u b o r d i n a t e d P r o c e s s % Generate dependent IG random time p r o c e s s

101

APPENDIX A
[ R1 , L0 ] = IGProc ( kappa , c , dt , T,N) ; % Generate NIG p r o c e s s [ S ] = NIGProc (R1 , S0 ,muY, sigmaY , T, dt ) ; V = max( mean ( S ) -K, 0 ) ; f p r i n t f ( ' Done IG Sub \ n ' )

25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66

% % Hedging MC by r e p l i c a t i o n St = mean ( S , 2 ) ; a l p h a = cov ( S ( end , : ) ,V) / var ( S ( end , : ) ) ; b e t a = exp ( - r  dt )  ( mean (V) - a l p h a  St ( end ) ) ; % wealth p r o c e s s X = exp ( - r  dt )  mean ( mean (V) )+exp ( r T) .  b e t a+a l p h a .  St ( end ) ; % d e t e r m i n i n g o p t i m a l a l p h a and b e t a J = mean ( ( mean (V) -X) . ^ 2 ) ; [ L , I ]=min ( J ( : ) ) ; [ row , c o l ] = i n d 2 s u b ( s i z e ( J ) , I ) ; a l p h a = a l p h a ( row , c o l ) ; b e t a = b e t a ( row , c o l ) ; X = exp ( - r  dt )  mean ( mean (V) )+exp ( r T) .  b e t a+a l p h a .  St ( end ) ; % f r a c t i o n o f w e a l t h i n s t o c k s and bonds p i s = a l p h a . /X; p i p = 1- p i s ; % hedging e r r o r RL = V - X;

toc

% % Hedging with COS Method tic f p r i n t f ( ' Start T =%i \ n ' ,T) %Note : A c co r d i n g t o our e r r o r a n a l y s i s , t h e r e i s term N( e r r o r ( q ) ) , s o when %N g o e s up , N I MUST BE INCREASED AT THE SAME TIME ! %D e f a u l t v a l u e s N=256; N I =400;

% Initializing tic ; i=complex ( 0 , 1 ) ;

q =0;

102

APPENDIX A
% Parameters from c a l i b r a t i o n muX = 0 ; % d r i f t parameter sigmaX = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0;

67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108

a0 = 1/ s q r t ( kappa ) ; b0 = 1/ s q r t ( kappa ) ; % % Cumulant and t r u n c t i o n r a n g e f o r NIG c1 = dt muX; c2 = dt  ( sigmaX^2+muX kappa ) ; % % % integration truncation

% L=10 c o n v e r g e s w e l l t o t h e r e f e r e n c e v a l u e . When i n c r e a s i n g L , N, N I % s h o u l d a l s o be i n c r e a s e d . And when L i s v e r y l a r g e , s h o u l d u s e put - c a l l % parity . L=10; a=c1 -L  s q r t (M c2 ) ; b=l o g (M)+ M c1+L  s q r t (M c2 ) ;

k =0:N- 1 ; omega=k '  p i / ( b - a ) ; v = i muX omega - 0 . 5  omega . ^ 2  sigmaX ^ 2 ; c f Z=exp ( - a0  dt  ( s q r t ( - 2  i  ( - i  v )+b0 ^ 2 ) - b0 ) ) ; I n t A s i a n=z e r o s (N, N) ;

% Only f o r Clenshaw - C u r t i s q u a d r a t u r e Ni = 0 : 2 : N I ; Ni=Ni ' ; d=2./(1 - Ni . ^ 2 ) ; d ( 1 ) =1; d ( end ) =0.5  d ( end ) ; n =0:1: f l o o r ( N I /2) ; D=n '  n ; D=2/( N I )  c o s (D 2  p i / N I ) ; D( : , 1 ) =0.5 D( : , 1 ) ; D( : , end ) =0.5 D( : , end ) ; w1=D'  d ;

f o r k1 =1:N- 1 f o r k2 =1:N- 1

103

APPENDIX A
I n t A s i a n ( k1 , k2 ) = asianmat ( omega ( k1 ) , omega ( k2 ) , N I , a , b , a , w1) ; end end

109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150

% % Only f o r Beta f u n c t i o n % f o r k1 =1:N- 1 % % % % end end f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( k1 , k2 , a , b ) ;

c f B=c f Z ;

f o r j =2:M A=r e a l ( c f B .  exp ( - i  a  omega ) ) ; A( 1 ) =0.5 A( 1 ) ; Phi B =(2/(b- a ) )  I n t A s i a n A; c f B=c f Z .  Phi B ; end

% ep s t a n d f o r ' e x e r c i s e p o i n t ' ep=l o g (K (M+1)/S0 - 1) ;

i f ep>b ep=b ; e l s e i f ep<a ep=a ; end

% % Hedging with s t o c k s and bonds U= ( 2 . / ( b - a ) )  ( ( S0 . / (M+1) )  Chi ( ep , b , N, a , b ) - (K- ( S0 / (M+1) ) )  P s i ( ep , b , N, a , b ) ) ; Re=r e a l ( c f B .  exp ( - i  a  omega ) ) ; % Asian o p t i o n v l a u e H=U.  Re ' ; H( 1 ) =0.5 H( 1 ) ; % Price process Re=r e a l ( c f Z .  exp ( - i  a  omega ) ) ; % E [ S0exp (Y) ] = V.  Re ' V = ( 2 . / ( b - a ) )  S0  Chi ( a , b , N, a , b ) ; % s t o c k p r i c e a t t=T S=V.  Re ' ;

104

APPENDIX A
S ( 1 ) =0.5  S ( 1 ) ; % FOC a l p h a c o s = cov (H, S ) / var ( S ) ; b e t a c o s = exp ( - r  dt )  ( sum (H) - a l p h a c o s  sum ( S ) ) ; % Wealth p r o c e s s X cos = exp ( - r  dt )  sum (H)+exp ( r T) .  b e t a c o s+a l p h a c o s .  sum ( S ) ; % d e t e r m i n g t h e minimum J = ( o n e s ( 2 , 2 )  sum (H) - X cos ) . ^ 2 ; [M, I ]=min ( J ( : ) ) ; [ row , c o l ] = i n d 2 s u b ( s i z e ( J ) , I ) ; % o p t i m a l s t o c k s and bonds a l p h a c o s = a l p h a c o s ( row , c o l ) ; b e t a c o s = b e t a c o s ( row , c o l ) ; X cos = exp ( - r  dt )  sum (H)+exp ( r T) .  b e t a c o s+a l p h a c o s .  sum ( S ) ; % f r a c t i o n o f w e a l t h i n s t o c k s and bonds p i s c o s = a l p h a c o s / X cos ; p i p c o s = 1- p i s c o s ; % hedging l o s s RL cos = sum (H) - ( X cos ) ; toc

151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177

f p r i n t f ( ' Done \ n ' ) s a v e ( ' NIGQHedge . mat ' , 'RL ' , ' RL cos ' , ' a l p h a ' , . . . ' beta ' , ' alpha cos ' , ' b e t a c o s ' , ' p i s ' , ' pi p ' , . . . ' p i s c o s ' , ' p i p c o s ' , ' r ' , ' S0 ' , ' dt ' , 'T ' , 'muX ' , 'K ' , ' kappa ' , ' sigmaX ' , . . . 'a ' , 'b ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

VG Quadratic Hedging

1 2 3 4 5 6 7 8 9 10 11 12

clear ; clc ; format long

T=1; dt =1/250; M =T/ dt ; S0 =57; r =0.0367; N = 100000; K = 52; f i n a l S t r i k e P r i c e = K;

105

APPENDIX A

13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54

% % Hedging by MC tic k = 1; l = 1; f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % Parameters from c a l i b r a t i o n muY = 0 ; % d r i f t parameter sigmaY = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0; % Gamma S u b o r d i n a t e d P r o c e s s % Generate dependent Gamama random time p r o c e s s [ R, G0 ] = GammaProc ( kappa , c , dt , T,N) ; % Generate VG p r o c e s s [ S ] = VGProc (R, S0 ,muY, sigmaY , T, dt ) ; V = max( mean ( S ) -K, 0 ) ; f p r i n t f ( ' Done Gamma Sub \ n ' )

% % Hedging MC by r e p l i c a t i o n St = mean ( S , 2 ) ; a l p h a = cov ( S ( end , : ) ,V) / var ( S ( end , : ) ) ; b e t a = exp ( - r  dt )  ( mean (V) - a l p h a  St ( end ) ) ; % wealth p r o c e s s X = exp ( - r  dt )  mean ( mean (V) )+exp ( r T) .  b e t a+a l p h a .  St ( end ) ; % d e t e r m i n i n g o p t i m a l a l p h a and b e t a J = mean ( ( mean (V) -X) . ^ 2 ) ; [ L , I ]=min ( J ( : ) ) ; [ row , c o l ] = i n d 2 s u b ( s i z e ( J ) , I ) ; a l p h a = a l p h a ( row , c o l ) ; b e t a = b e t a ( row , c o l ) ; X = exp ( - r  dt )  mean ( mean (V) )+exp ( r T) .  b e t a+a l p h a .  St ( end ) ; % f r a c t i o n o f w e a l t h i n s t o c k s and bonds p i s = a l p h a . /X; p i p = 1- p i s ; % hedging e r r o r RL = V - X;

toc % % Hedging with COS Method tic f p r i n t f ( ' Start T =%i \ n ' ,T) %Note : A c co r d i n g t o our e r r o r a n a l y s i s , t h e r e i s term N( e r r o r ( q ) ) , s o when

106

APPENDIX A
%N g o e s up , N I MUST BE INCREASED AT THE SAME TIME ! %D e f a u l t v a l u e s N=256; N I =400;

55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96

% Initializing tic ; i=complex ( 0 , 1 ) ; q =0;

% Parameters from c a l i b r a t i o n muX = 0 ; % d r i f t parameter sigmaX = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0;

a0 = 1/ kappa ; b0 = 1/ kappa ; % % Cumulant and t r u n c t i o n r a n g e f o r VG c1 = dt muX; c2 = dt  ( sigmaX^2+muX kappa ) ; % % % integration truncation

% L=10 c o n v e r g e s w e l l t o t h e r e f e r e n c e v a l u e . When i n c r e a s i n g L , N, N I % s h o u l d a l s o be i n c r e a s e d . And when L i s v e r y l a r g e , s h o u l d u s e put - c a l l % parity . L=10; a=c1 -L  s q r t (M c2 ) ; b=l o g (M)+ M c1+L  s q r t (M c2 ) ;

k =0:N- 1 ; omega=k '  p i / ( b - a ) ; v = i muX omega - 0 . 5  omega . ^ 2  sigmaX ^ 2 ; c f Z =(1 - i .  ( - i  v ) . / b0 ) . ^ ( a0  dt ) ; I n t A s i a n=z e r o s (N, N) ;

% Only f o r Clenshaw - C u r t i s q u a d r a t u r e Ni = 0 : 2 : N I ; Ni=Ni ' ; d=2./(1 - Ni . ^ 2 ) ; d ( 1 ) =1;

107

APPENDIX A
d ( end ) =0.5  d ( end ) ; n =0:1: f l o o r ( N I /2) ; D=n '  n ; D=2/( N I )  c o s (D 2  p i / N I ) ; D( : , 1 ) =0.5 D( : , 1 ) ; D( : , end ) =0.5 D( : , end ) ; w1=D'  d ;

97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138

f o r k1 =1:N- 1 f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( omega ( k1 ) , omega ( k2 ) , N I , a , b , a , w1) ; end end

% % Only f o r Beta f u n c t i o n % f o r k1 =1:N- 1 % % % % end end f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( k1 , k2 , a , b ) ;

c f B=c f Z ;

f o r j =2:M A=r e a l ( c f B .  exp ( - i  a  omega ) ) ; A( 1 ) =0.5 A( 1 ) ; Phi B =(2/(b- a ) )  I n t A s i a n A; c f B=c f Z .  Phi B ; end

% ep s t a n d f o r ' e x e r c i s e p o i n t ' ep=l o g (K (M+1)/S0 - 1) ;

i f ep>b ep=b ; e l s e i f ep<a ep=a ; end % % Hedging with s t o c k s and bonds U= ( 2 . / ( b - a ) )  ( ( S0 . / (M+1) )  Chi ( ep , b , N, a , b ) - (K- ( S0 / (M+1) ) )  P s i ( ep , b , N, a , b ) ) ; Re=r e a l ( c f B .  exp ( - i  a  omega ) ) ;

108

APPENDIX A
% Asian o p t i o n v l a u e H=U.  Re ' ; H( 1 ) =0.5 H( 1 ) ; % Price process Re=r e a l ( c f Z .  exp ( - i  a  omega ) ) ; % E [ S0exp (Y) ] = V.  Re ' V = ( 2 . / ( b - a ) )  S0  Chi ( a , b , N, a , b ) ; % s t o c k p r i c e a t t=T S=V.  Re ' ; S ( 1 ) =0.5  S ( 1 ) ; % FOC a l p h a c o s = cov (H, S ) / var ( S ) ; b e t a c o s = exp ( - r  dt )  ( sum (H) - a l p h a c o s  sum ( S ) ) ; % Wealth p r o c e s s X cos = exp ( - r  dt )  sum (H)+exp ( r T) .  b e t a c o s+a l p h a c o s .  sum ( S ) ; % d e t e r m i n g t h e minimum J = ( o n e s ( 2 , 2 )  sum (H) - X cos ) . ^ 2 ; [M, I ]=min ( J ( : ) ) ; [ row , c o l ] = i n d 2 s u b ( s i z e ( J ) , I ) ; % o p t i m a l s t o c k s and bonds a l p h a c o s = a l p h a c o s ( row , c o l ) ; b e t a c o s = b e t a c o s ( row , c o l ) ; X cos = exp ( - r  dt )  sum (H)+exp ( r T) .  b e t a c o s+a l p h a c o s .  sum ( S ) ; % f r a c t i o n o f w e a l t h i n s t o c k s and bonds p i s c o s = a l p h a c o s / X cos ; p i p c o s = 1- p i s c o s ; % hedging l o s s RL cos = sum (H) - ( X cos ) ; toc

139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173

s a v e ( 'VGQHedge . mat ' , 'RL ' , ' RL cos ' , ' a l p h a ' , . . . ' beta ' , ' alpha cos ' , ' b e t a c o s ' , ' p i s ' , ' pi p ' , . . . ' p i s c o s ' , ' p i p c o s ' , ' r ' , ' S0 ' , ' dt ' , 'T ' , 'muX ' , 'K ' , ' kappa ' , ' sigmaX ' , . . . 'a ' , 'b ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

Quantile Hedging
NIG Quantile Hedging

1

clear ;

109

APPENDIX A
clc ; format long % % I n i t i a l Parameters T=1; dt =1/250; M =T/ dt ; S0 =57; r =0.0367; N = 100000; K = 52; eps = 0 . 9 9 ;

2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43

% % Hedging by MC tic f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % Parameters from c a l i b r a t i o n muY = 0 ; % d r i f t parameter sigmaY = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0; % IG S u b o r d i n a t e d P r o c e s s % Generate dependent IG random time p r o c e s s [ R1 , L0 ] = IGProc ( kappa , c , dt , T,N) ; % Generate NIG p r o c e s s [ S ] = NIGProc (R1 , S0 ,muY, sigmaY , T, dt ) ; V = max( S -K, 0 ) ; ST = S ( end , : ) ; VT = V( end , : ) ; V0 = exp ( - r T)  mean ( mean (V) ) ; f p r i n t f ( ' Done IG Sub \ n ' ) % % VaR Hedging with MC by r e p l i c a t i o n % hedging p o r t f o l i o % initial syms a b = V0- a  S0 ; x = b+a  S0 ; c = x -V0 ; system = c == 0 ; var = a ; a l p h a = d o u b l e ( s o l v e ( system , var ) ) ; b e t a = V0- a l p h a  S0 ; % wealth p r o c e s s p o r t f o l i o g i v e n by C0 == 0

110

APPENDIX A
X = V0+exp ( r T) .  b e t a+a l p h a .  ST ; % determining q u a n t i l e index C = exp ( - r T) X- exp ( - r T) VT; [ row , c o l ] = f i n d (C>=0) ; A = VT( c o l ) ; [ J , I ] = s o r t (C( c o l ) , ' a s c e n d ' ) ; A = A( I ) ; i d x = f l o o r ( l e n g t h (A)  ( e p s ) ) +1; dN = l e n g t h (A( 1 : i d x ) ) ; % a l p h a a t C == 0 syms a V1 = exp ( - r T) A( i d x ) ; b = V0- a  S0 ; x = V1+exp ( r T)  b+a  mean (ST) ; c = exp ( - r T)  x - V0 ; system = c == 0 ; var = a ; % o p t i m a l p o r t f o l i o f o r VaR alpha = d o u b l e ( s o l v e ( system , var ) ) ;

44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85

b e t a = V0- a l p h a  S0 ; X var = V0+exp ( r T)  b e t a+a l p h a  mean (ST) ; p i s v a r = a l p h a / X var ; p i p v a r = 1- p i s v a r ; % I n i t i a l investments H0 var = b e t a+a l p h a  S0 ; % hedging e r r o r RL var = exp ( - r T)  ( X var -VT) ;

% % ES Hedging with MC by r e p l i c a t i o n % o p t i m a l p o r t f o l i o f o r ES % a l p h a a t C>=0 from 1 : idx - 1 syms a V2 = exp ( - r T)  ( 1 / (dN e p s ) )  sum (A( 1 : idx - 1) )+V1 ; b = V0- a  S0 ; x = V2+exp ( r T)  b+a  mean (ST) ; c = exp ( - r T)  x - V0 ; system = c == 0 ; var = a ; a l p h a a = d o u b l e ( s o l v e ( system , var ) ) ; % optimal p o r t f o l i o alpha es = alpha a ; b e t a e s = V0- a l p h a e s  S0 ;

111

APPENDIX A
X es = V0+exp ( r T)  b e t a e s+a l p h a e s  mean (ST) ; p i s e s = a l p h a e s / X es ; p i p e s = 1- p i s e s ; % I n i t i a l investments H0 es = b e t a e s+a l p h a e s  S0 ; % hedging e r r o r RL es = exp ( - r T)  ( X es -VT) ; toc % % Hedging with COS Method format long

86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127

T=1; dt =1/250; M =T/ dt ; S0 =57; r =0.0367; K = 52; f i n a l S t r i k e P r i c e = K; eps = 0 . 9 9 ;

f p r i n t f ( ' Start T =%i \ n ' ,T) %Note : A c co r d i n g t o our e r r o r a n a l y s i s , t h e r e i s term N( e r r o r ( q ) ) , s o when %N g o e s up , N I MUST BE INCREASED AT THE SAME TIME ! %D e f a u l t v a l u e s N=256; N I =400;

% Initializing tic ; i=complex ( 0 , 1 ) ;

q =0;

a0 = 1/ s q r t ( kappa ) ; b0 = 1/ s q r t ( kappa ) ; % % Cumulant and t r u n c t i o n r a n g e f o r NIG c1 = dt muY; c2 = dt  ( sigmaY^2+muY kappa ) ; % % % integration truncation

% L=10 c o n v e r g e s w e l l t o t h e r e f e r e n c e v a l u e . When i n c r e a s i n g L , N, N I % s h o u l d a l s o be i n c r e a s e d . And when L i s v e r y l a r g e , s h o u l d u s e put - c a l l

112

APPENDIX A
% parity . J =10; a=c1 - J  s q r t (M c2 ) ; b=l o g (M)+ M c1+J  s q r t (M c2 ) ;

128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169

k =0:N- 1 ; omega=k '  p i / ( b - a ) ; v = i muY omega - 0 . 5  omega . ^ 2  sigmaY ^ 2 ; c f Z=exp ( - a0  dt  ( s q r t ( - 2  i  ( - i  v )+b0 ^ 2 ) - b0 ) ) ; I n t A s i a n=z e r o s (N, N) ;

% Only f o r Clenshaw - C u r t i s q u a d r a t u r e Ni = 0 : 2 : N I ; Ni=Ni ' ; d=2./(1 - Ni . ^ 2 ) ; d ( 1 ) =1; d ( end ) =0.5  d ( end ) ; n =0:1: f l o o r ( N I /2) ; D=n '  n ; D=2/( N I )  c o s (D 2  p i / N I ) ; D( : , 1 ) =0.5 D( : , 1 ) ; D( : , end ) =0.5 D( : , end ) ; w1=D'  d ;

f o r k1 =1:N- 1 f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( omega ( k1 ) , omega ( k2 ) , N I , a , b , a , w1) ; end end

% % Only f o r Beta f u n c t i o n % f o r k1 =1:N- 1 % % % % end end f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( k1 , k2 , a , b ) ;

c f B=c f Z ;

f o r j =2:M B=r e a l ( c f B .  exp ( - i  a  omega ) ) ;

113

APPENDIX A
B( 1 ) =0.5 B( 1 ) ; Phi B =(2/(b- a ) )  I n t A s i a n B ; c f B=c f Z .  Phi B ; end

170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211

% ep s t a n d f o r ' e x e r c i s e p o i n t ' ep=l o g (K (M+1)/S0 - 1) ;

i f ep>b ep=b ; e l s e i f ep<a ep=a ; end

% % VaR and ES Hedging with COS Method

U= ( 2 . / ( b - a ) )  ( ( S0 . / (M+1) )  Chi ( ep , b , N, a , b ) - (K- ( S0 / (M+1) ) )  P s i ( ep , b , N, a , b ) ) ; Re=r e a l ( c f B .  exp ( - i  a  omega ) ) ; % Asian o p t i o n v l a u e H=U.  Re ' ; H( 1 ) =0.5 H( 1 ) ; H0 = exp ( - r T)  sum (H) ; % Price process Re=r e a l ( c f Z .  exp ( - i  a  omega ) ) ; % E [ S0exp (Y) ] = V.  Re ' V = ( 2 . / ( b - a ) )  S0  Chi ( a , b , N, a , b ) ; % s t o c k p r i c e a t t=T S=V.  Re ' ; S ( 1 ) =0.5  S ( 1 ) ; % Fourier -Cosine o f 1 W = ( 2 . / ( b - a ) )  P s i ( a , b , N, a , b ) ; F = r e a l ( exp ( - i  a  omega ) ) ' . W; F ( 1 ) =0.5  F ( 1 ) ; h = sum (H)+F ; s = sum ( S )+F ; % The CDF o f c f B W = ( 2 . / ( b - a ) )  Chi ( a , b , N, a , b ) ; CDF = r e a l ( c f Z .  exp ( - i  a  omega ) ) ' . W; CDF( 1 ) =0.5 CDF( 1 ) ; % initial syms a p o r t f o l i o g i v e n by C0 == 0

114

APPENDIX A
b = H0- a  S0 ; x = b+a  S0 ; c = x - H0 ; system = c == 0 ; var = a ; a l p h a c o s = d o u b l e ( s o l v e ( system , var ) ) ; b e t a c o s = H0- a l p h a c o s  S0 ; % Wealth p r o c e s X cos = exp ( - r T) .  H+exp ( r T) .  b e t a c o s .  F+a l p h a c o s .  S ; p i s c o s = a l p h a c o s /sum ( X cos ) ; p i p c o s = 1- p i s c o s ; % determining q u a n t i l e index n = 1; w h i l e n < l e n g t h (H)+1 J ( n ) = sum (CDF( 1 : n ) ) ; i f J ( n ) >= e p s && J ( n ) < 1 br eak ; else n = n+1; end end idx = n-1; C = exp ( - r T) .  sum ( X cos ( i d x : end ) ) .  F- exp ( - r T) .  sum (H( i d x : end ) ) F ; [ row , c o l ] = f i n d (C>=0) ; A cos = sum (H( c o l ) )+F ; dN = l e n g t h ( A cos ( i d x : end ) ) ; % a l p h a a t C>=0 a t i d x syms a h1 = exp ( - r T)  A cos ( i d x ) ; b = H0- a  S0 ; x = h1+exp ( r T)  b+a  sum ( S ) ; c = exp ( - r T)  x -H0 ; system = c == 0 ; var = a ; % o p t i m a l p o r t f o l i o f o r VaR a l p h a c o s = d o u b l e ( s o l v e ( system , var ) ) ; b e t a c o s = H0- a l p h a c o s  S0 ; X v a r c o s = H0+exp ( r T)  b e t a c o s+a l p h a c o s .  sum ( S ) ; p i s v a r c o s = alpha cos / X var cos ; p i p v a r c o s = 1- p i s v a r c o s ; % I n i t i a l investments H 0 v a r c o s = b e t a c o s+a l p h a c o s  S0 ;

212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253

115

APPENDIX A
% hedging e r r o r R L v a r c o s = exp ( - r T)  X v a r c o s -H0 ; % a l p h a a t C>=0 from i d x syms a h2 = exp ( - r T)  ( 1 / (dN e p s ) )  sum ( A cos ( i d x +1: end ) )+h1 ; b = H0- a  S0 ; x = h2+exp ( r T)  b+a  sum ( S ) ; c = exp ( - r T)  x - H0 ; system = c == 0 ; var = a ; a l p h a a c o s = d o u b l e ( s o l v e ( system , var ) ) ; % o p t i m a l p o r t f o l i o f o r ES alpha es cos = alpha a cos ; b e t a e s c o s = H0- a l p h a e s c o s  S0 ; X e s c o s = H0+exp ( r T)  b e t a e s c o s+a l p h a e s c o s  sum ( S ) ; p i s e s c o s = alpha es cos / X es cos ; p i p e s c o s = 1- p i s e s c o s ; % I n i t i a l investments H 0 e s c o s = b e t a e s c o s+a l p h a e s c o s  S0 ; % hedging e r r o r R L e s c o s = exp ( - r T)  ( X e s c o s -H) ; toc

254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279

f p r i n t f ( ' Done \ n ' ) s a v e ( ' NIGVarHedge . mat ' , ' RL var ' , ' RL es ' , ' R L v a r c o s ' , ' R L e s c o s ' , . . . ' alpha a ' , ' alpha ' , ' beta ' , ' a l p h a e s ' , ' b e t a e s ' , ' a l p h a a c o s ' , ' alpha cos ' , ' beta cos ' , ' alpha es cos ' , ' beta es cos ' , . . .

280

'a ' , 'b ' , ' pi p es cos ' , ' pi p var cos ' , ' p i s e s c o s ' , ' pi s var cos ' , ' pi p es ' ,...

281 282

' p i p v a r ' , ' p i s e s ' , ' p i s v a r ' , ' H0 var ' , ' H0 es ' , ' H 0 v a r c o s ' , ' H 0 e s c o s ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

VG Quantile Hedging

1 2 3 4 5 6 7 8

clear ; clc ; format long % % I n i t i a l Parameters T=1; dt =1/250; M =T/ dt ; S0 =57;

116

APPENDIX A
r =0.0367; N = 100000; K = 52; f i n a l S t r i k e P r i c e = K; eps = 0 . 9 9 ;

9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50

% % Hedging by MC tic k = 1; l = 1; f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % Parameters from c a l i b r a t i o n muY = 0 ; % d r i f t parameter sigmaY = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0; % Gamma S u b o r d i n a t e d P r o c e s s % Generate dependent Gamama random time p r o c e s s [ R, G0 ] = GammaProc ( kappa , c , dt , T,N) ; % Generate VG p r o c e s s [ S ] = VGProc (R, S0 ,muY, sigmaY , T, dt ) ; V = max( S -K, 0 ) ; ST = S ( end , : ) ; VT = V( end , : ) ; V0 = exp ( - r T)  mean ( mean (V) ) ; f p r i n t f ( ' Done Gamma Sub \ n ' )

% % VaR Hedging with MC by r e p l i c a t i o n % hedging p o r t f o l i o % initial syms a b = V0- a  S0 ; x = b+a  S0 ; c = x -V0 ; system = c == 0 ; var = a ; a l p h a = d o u b l e ( s o l v e ( system , var ) ) ; b e t a = V0- a l p h a  S0 ; % wealth p r o c e s s X = V0+exp ( r T) .  b e t a+a l p h a .  ST ; % determining q u a n t i l e index C = exp ( - r T) X- exp ( - r T) VT; [ row , c o l ] = f i n d (C>=0) ; p o r t f o l i o g i v e n by C0 == 0

117

APPENDIX A
A = VT( c o l ) ; [ J , I ] = s o r t (C( c o l ) , ' a s c e n d ' ) ; A = A( I ) ; i d x = f l o o r ( l e n g t h (A)  ( e p s ) ) +1; dN = l e n g t h (A( 1 : i d x ) ) ; % a l p h a a t C == 0 syms a V1 = exp ( - r T) A( i d x ) ; b = V0- a  S0 ; x = V1+exp ( r T)  b+a  mean (ST) ; c = exp ( - r T)  x - V0 ; system = c == 0 ; var = a ; % o p t i m a l p o r t f o l i o f o r VaR alpha = d o u b l e ( s o l v e ( system , var ) ) ;

51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92

b e t a = V0- a l p h a  S0 ; X var = V0+exp ( r T)  b e t a+a l p h a  mean (ST) ; p i s v a r = a l p h a / X var ; p i p v a r = 1- p i s v a r ; % I n i t i a l investments H0 var = b e t a+a l p h a  S0 ; % hedging e r r o r RL var = exp ( - r T)  ( X var -VT) ;

% % ES Hedging with MC by r e p l i c a t i o n % o p t i m a l p o r t f o l i o f o r ES % a l p h a a t C>=0 from 1 : idx - 1 syms a V2 = exp ( - r T)  ( 1 / (dN e p s ) )  sum (A( 1 : idx - 1) )+V1 ; b = V0- a  S0 ; x = V2+exp ( r T)  b+a  mean (ST) ; c = exp ( - r T)  x - V0 ; system = c == 0 ; var = a ; a l p h a a = d o u b l e ( s o l v e ( system , var ) ) ; % optimal p o r t f o l i o alpha es = alpha a ; b e t a e s = V0- a l p h a e s  S0 ; X es = V0+exp ( r T)  b e t a e s+a l p h a e s  mean (ST) ; p i s e s = a l p h a e s / X es ; p i p e s = 1- p i s e s ; % I n i t i a l investments

118

APPENDIX A
H0 es = b e t a e s+a l p h a e s  S0 ; % hedging e r r o r RL es = exp ( - r T)  ( X es -VT) ; toc % % Hedging with COS Method tic f p r i n t f ( ' Start T =%i \ n ' ,T) %Note : A c co r d i n g t o our e r r o r a n a l y s i s , t h e r e i s term N( e r r o r ( q ) ) , s o when %N g o e s up , N I MUST BE INCREASED AT THE SAME TIME ! %D e f a u l t v a l u e s N=256; N I =400;

93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134

% Initializing tic ; i=complex ( 0 , 1 ) ; q =0;

% Parameters from c a l i b r a t i o n muX = 0 ; % d r i f t parameter sigmaX = 0 . 0 2 ; % v o l a t i t l i t y kappa = 0 . 1 ; c = 0;

a0 = 1/ kappa ; b0 = 1/ kappa ; % % Cumulant and t r u n c t i o n r a n g e f o r VG c1 = dt muX; c2 = dt  ( sigmaX^2+muX kappa ) ; % % % integration truncation

% L=10 c o n v e r g e s w e l l t o t h e r e f e r e n c e v a l u e . When i n c r e a s i n g L , N, N I % s h o u l d a l s o be i n c r e a s e d . And when L i s v e r y l a r g e , s h o u l d u s e put - c a l l % parity . L=10; a=c1 -L  s q r t (M c2 ) ; b=l o g (M)+ M c1+L  s q r t (M c2 ) ;

k =0:N- 1 ; omega=k '  p i / ( b - a ) ; v = i muX omega - 0 . 5  omega . ^ 2  sigmaX ^ 2 ;

119

APPENDIX A
c f Z =(1 - i .  ( - i  v ) . / b0 ) . ^ ( a0  dt ) ; % c f Z=exp ( i  omega  ( r - q+w)  dt - 0 . 5  ( omega . ^ 2 )  ( sigma ^ 2 )  dt+dt  d e l t a  ( s q r t ( a l p h a ^2 - b e t a ^ 2 ) - s q r t ( a l p h a ^2 - ( b e t a+i  omega ) . ^ 2 ) ) ) ;
137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175

135 136

I n t A s i a n=z e r o s (N, N) ;

% Only f o r Clenshaw - C u r t i s q u a d r a t u r e Ni = 0 : 2 : N I ; Ni=Ni ' ; d=2./(1 - Ni . ^ 2 ) ; d ( 1 ) =1; d ( end ) =0.5  d ( end ) ; n =0:1: f l o o r ( N I /2) ; D=n '  n ; D=2/( N I )  c o s (D 2  p i / N I ) ; D( : , 1 ) =0.5 D( : , 1 ) ; D( : , end ) =0.5 D( : , end ) ; w1=D'  d ;

f o r k1 =1:N- 1 f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( omega ( k1 ) , omega ( k2 ) , N I , a , b , a , w1) ; end end

% % Only f o r Beta f u n c t i o n % f o r k1 =1:N- 1 % % % % end end f o r k2 =1:N- 1 I n t A s i a n ( k1 , k2 ) = asianmat ( k1 , k2 , a , b ) ;

c f B=c f Z ;

f o r j =2:M B=r e a l ( c f B .  exp ( - i  a  omega ) ) ; B( 1 ) =0.5 B( 1 ) ; Phi B =(2/(b- a ) )  I n t A s i a n B ; c f B=c f Z .  Phi B ; end

% ep s t a n d f o r ' e x e r c i s e p o i n t '

120

APPENDIX A
ep=l o g (K (M+1)/S0 - 1) ;

176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217

i f ep>b ep=b ; e l s e i f ep<a ep=a ; end % % VaR and ES Hedging with COS Method

U= ( 2 . / ( b - a ) )  ( ( S0 . / (M+1) )  Chi ( ep , b , N, a , b ) - (K- ( S0 / (M+1) ) )  P s i ( ep , b , N, a , b ) ) ; Re=r e a l ( c f B .  exp ( - i  a  omega ) ) ; % Asian o p t i o n v l a u e H=U.  Re ' ; H( 1 ) =0.5 H( 1 ) ; H0 = exp ( - r T)  sum (H) ; % Price process Re=r e a l ( c f Z .  exp ( - i  a  omega ) ) ; % E [ S0exp (Y) ] = V.  Re ' V = ( 2 . / ( b - a ) )  S0  Chi ( a , b , N, a , b ) ; % s t o c k p r i c e a t t=T S=V.  Re ' ; S ( 1 ) =0.5  S ( 1 ) ; % Fourier -Cosine o f 1 W = ( 2 . / ( b - a ) )  P s i ( a , b , N, a , b ) ; F = r e a l ( exp ( - i  a  omega ) ) ' . W; F ( 1 ) =0.5  F ( 1 ) ; h = sum (H)+F ; s = sum ( S )+F ; % The CDF o f c f B W = ( 2 . / ( b - a ) )  Chi ( a , b , N, a , b ) ; CDF = r e a l ( c f Z .  exp ( - i  a  omega ) ) ' . W; CDF( 1 ) =0.5 CDF( 1 ) ; % initial syms a b = H0- a  S0 ; x = b+a  S0 ; c = x - H0 ; system = c == 0 ; var = a ; a l p h a c o s = d o u b l e ( s o l v e ( system , var ) ) ; b e t a c o s = H0- a l p h a c o s  S0 ; % Wealth p r o c e s p o r t f o l i o g i v e n by C0 == 0

121

APPENDIX A
X cos = exp ( - r T) .  H+exp ( r T) .  b e t a c o s .  F+a l p h a c o s .  S ; p i s c o s = a l p h a c o s /sum ( X cos ) ; p i p c o s = 1- p i s c o s ; % determining q u a n t i l e index n = 1; w h i l e n < l e n g t h (H)+1 J ( n ) = sum (CDF( 1 : n ) ) ; i f J ( n ) >= e p s && J ( n ) < 1 br eak ; else n = n+1; end end idx = n-1; C = exp ( - r T) .  sum ( X cos ( i d x : end ) ) .  F- exp ( - r T) .  sum (H( i d x : end ) ) F ; [ row , c o l ] = f i n d (C>=0) ; A cos = sum (H( c o l ) )+F ; dN = l e n g t h ( A cos ( i d x : end ) ) ; % a l p h a a t C>=0 a t i d x syms a h1 = exp ( - r T)  A cos ( i d x ) ; b = H0- a  S0 ; x = h1+exp ( r T)  b+a  sum ( S ) ; c = exp ( - r T)  x -H0 ; system = c == 0 ; var = a ; % o p t i m a l p o r t f o l i o f o r VaR a l p h a c o s = d o u b l e ( s o l v e ( system , var ) ) ; b e t a c o s = H0- a l p h a c o s  S0 ; X v a r c o s = H0+exp ( r T)  b e t a c o s+a l p h a c o s .  sum ( S ) ; p i s v a r c o s = alpha cos / X var cos ; p i p v a r c o s = 1- p i s v a r c o s ; % I n i t i a l investments H 0 v a r c o s = b e t a c o s+a l p h a c o s  S0 ; % hedging e r r o r R L v a r c o s = exp ( - r T)  X v a r c o s -H0 ; % a l p h a a t C>=0 from i d x syms a h2 = exp ( - r T)  ( 1 / (dN e p s ) )  sum ( A cos ( i d x +1: end ) )+h1 ; b = H0- a  S0 ; x = h2+exp ( r T)  b+a  sum ( S ) ; c = exp ( - r T)  x - H0 ;

218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259

122

APPENDIX A
system = c == 0 ; var = a ; a l p h a a c o s = d o u b l e ( s o l v e ( system , var ) ) ; % o p t i m a l p o r t f o l i o f o r ES alpha es cos = alpha a cos ; b e t a e s c o s = H0- a l p h a e s c o s  S0 ; X e s c o s = H0+exp ( r T)  b e t a e s c o s+a l p h a e s c o s  sum ( S ) ; p i s e s c o s = alpha es cos / X es cos ; p i p e s c o s = 1- p i s e s c o s ; % I n i t i a l investments H 0 e s c o s = b e t a e s c o s+a l p h a e s c o s  S0 ; % hedging e r r o r R L e s c o s = exp ( - r T)  ( X e s c o s -H0) ; toc

260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277

f p r i n t f ( ' Done \ n ' ) s a v e ( ' VGVarHedge . mat ' , ' RL var ' , ' RL es ' , ' R L v a r c o s ' , ' R L e s c o s ' , . . . ' alpha a ' , ' alpha ' , ' beta ' , ' a l p h a e s ' , ' b e t a e s ' , ' a l p h a a c o s ' , ' alpha cos ' , ' beta cos ' , ' alpha es cos ' , ' beta es cos ' , . . .

278

'a ' , 'b ' , ' pi p es cos ' , ' pi p var cos ' , ' p i s e s c o s ' , ' pi s var cos ' , ' pi p es ' ,...

279 280

' p i p v a r ' , ' p i s e s ' , ' p i s v a r ' , ' H0 var ' , ' H0 es ' , ' H 0 v a r c o s ' , ' H 0 e s c o s ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' )

Calibration
Implied Volatility
1 2 3 4 5 6 7 8 9 10 11 12 13 14

% % MC I m p l i e d V o l a t i l i t y clear ; clc ; format long tic % % % I n i t i a l i z e Variables l o a d ( ' AsianOptionMarketData . mat ' ) ; l o a d ( ' AsianOptionMarketDataPut . mat ' ) ; l o a d ( ' UnivarY1 . mat ' ) ; M = 1 2 ; % sampling frequency T = 1; dT = T/M; N = 1 0 0 0 0 0 0 ; % number o f s i m u l a t i o n s

123

APPENDIX A
r a t e = 0 . 0 2 ; % r i s k f r e e r a t e o f r e t u r n i n %100 S 0 C a l l = 6 8 . 5 8 ; % i n i t i a l commodity p r i c e S0Put = S 0 C a l l ; % KSpread = 5 2 ; % S t r i k e f o r Spread f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % % % Asian o p t i o n p a y o f f f o r each s t r i k e p r i c e s = s i z e (WTIAsnOpt) ; sigma impl initialCall = zeros ( s (1) ,1) ; sigma impl initialPut = zeros ( s (1) ,1) ; k =1; tic f p r i n t f ( ' G e t t i n g i n i t i a l p o i n t s \n ' ) w h i l e k < s ( 1 ) +1 % Parameters from c a l i b r a t i o n muX = y ( 2 , k ) ; sigmaX = y ( 3 , k ) ; kappa = y ( 1 , k ) ; c = 0; muY = dT .  muX; sigmaY = s q r t (dT .  ( kappa .  muX.^2+ sigmaX . ^ 2 ) ) ; % i n i t i a l point [ R C ] = IGProc ( kappa , c , dT , T,N) ; [ S C ] = NIGProc ( R C , S0Call ,muY, sigmaY ) ; s i g m a i m p l i n i t i a l C a l l ( k ) = s q r t ( 2 /M ( exp ( - r a t e dT)  abs ( mean ( mean ( S C ) ) ) /K( k ) ));
40 41 42

15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39

[ R P ] = IGProc ( kappa , c , dT , T,N) ; [ S P ] = NIGProc ( R P , S0Put ,muY, sigmaY ) ; s i g m a i m p l i n i t i a l P u t ( k ) = s q r t ( 2 /M ( exp ( - r a t e dT)  abs (K( k ) /mean ( mean ( S P ) ) ) ) );

43 44 45 46 47 48 49 50 51 52 53 54

k = k+1 end s a v e ( ' i n i t i a l P o i n t . mat ' , ' s i g m a i m p l i n i t i a l C a l l ' , ' s i g m a i m p l i n i t i a l P u t ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' ) toc % % l o a d ( ' i n i t i a l P o i n t . mat ' ) l o a d ( ' UnivarY1 . mat ' ) % Asian o p t i o n o b s e r v e d p a y o f f Payoff WTI mkt = WTIAsnOpt+WTIAsnOptPut ; % I m p l i e d V o l a t i l i t y WTI f p r i n t f ( ' S t a r t i n g i m p l i e d v o l c a l c \n ' )

124

APPENDIX A
tic k =1; sigma impl NIG = z e r o s ( 1 , 1 0 1 ) ; w h i l e k < l e n g t h (K)+1 % Parameters from c a l i b r a t i o n muX = y ( 2 , k ) ; sigmaX = y ( 3 , k ) ; kappa = y ( 1 , k ) ; c = 0; muY = dT .  muX; sigmaY = s q r t (dT .  ( kappa .  muX.^2+ sigmaX . ^ 2 ) ) ; f p r i n t f ( ' Elements Remaining : %d \ n ' , l e n g t h (K) - k ) ; i f S 0 C a l l > K( k ) sigma impl NIG ( k ) = s i g m a i m p l i n i t i a l C a l l ( k ) ; error = 10; n = 2; while error > 0.5(10^( -4) ) s i g m a i m p l N I G o l d ( k ) = sigma impl NIG ( k ) ; [ R1 , L0 ] = IGProc ( kappa , c , dT , T,N) ; [ S1 , dY1 , Y1 ,W1] = NIGProc (R1 , S0Call ,muY, s i g m a i m p l N I G o l d ( k ) ) ; [ P a y o f f 1 ( k ) ] = AsianOption ( S1 ,K( k ) , r a t e , dT) ; vega NIG = mean ( sum ( mean ( S1 )>K( k ) ) .  mean ( S1 .  W1) ) sigma impl NIG ( k ) = s i g m a i m p l N I G o l d ( k ) - (( P a y o f f 1 ( k ) . . . - Payoff WTI mkt ( k , end ) ) / vega NIG ) e r r o r = abs ( sigma impl NIG ( k ) - s i g m a i m p l N I G o l d ( k ) ) n = n+1; i f n > 1000000 f p r i n t f ( ' Too many i t e r a t i o n s \ n ' ) ; break ; end k = k+1; end e l s e i f S 0 C a l l <= K( k ) sigma impl NIG ( k ) = s i g m a i m p l i n i t i a l P u t ( k ) ; error = 10; n = 1; while error > 0.5(10^( -4) ) s i g m a i m p l N I G o l d ( k ) = sigma impl NIG ( k ) ; [ R1 , L0 ] = IGProc ( kappa , c , dT , T,N) ; [ S1 , dY1 , Y1 ,W1] = NIGProc (R1 , S0Put ,muY, s i g m a i m p l N I G o l d ( k ) ) ; [ P a y o f f 1 ( k ) ] = AsianOption ( S1 ,K( k ) , r a t e , dT) ; vega NIG = mean ( sum ( mean ( S1 )<K( k ) ) .  mean ( S1 .  W1) ) sigma impl NIG ( k ) = s i g m a i m p l N I G o l d ( k ) - (( P a y o f f 1 ( k ) . . . - Payoff WTI mkt ( k , end ) ) / vega NIG )

55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96

125

APPENDIX A
e r r o r = abs ( sigma impl NIG ( k ) - s i g m a i m p l N I G o l d ( k ) ) n = n+1; i f n > 1000000 f p r i n t f ( ' Too many i t e r a t i o n s \ n ' ) ; break ; end k = k+1; end end end % % C o r r e c t i o n f o r sigma < 0 u s i n g w e i g h t e d i n t e r p o l a t i o n f p r i n t f ( ' Applying c o r r e c t i o n \ n ' ) i f min ( s i z e ( f i n d ( sigma impl NIG < 0) ) ) > 0 a = f i n d ( sigma impl NIG < 0) ; a = sort (a) ; a = [ a ( 1 ) - 1 , a , a ( end ) + 1 ] ; j =2; while j < length ( a ) sigma impl NIG ( a ( j ) ) = ( abs ( sigma impl NIG ( a ( j ) ) - sigma impl NIG ( a ( 1 ) ) / . . . ( sigma impl NIG ( a ( 1 ) ) - sigma impl NIG ( a ( end ) ) ) )  sigma impl NIG ( a ( 1 ) ) . . . +abs ( sigma impl NIG ( a ( j ) ) - sigma impl NIG ( a ( end ) ) / ( sigma impl NIG ( a ( 1 ) ) . . . - sigma impl NIG ( a ( end ) ) ) )  sigma impl NIG ( a ( end ) ) ) / l e n g t h ( a - 2) ; j=j +1; end end s a v e ( ' implVol . mat ' , ' sigma impl NIG ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' ) % % l o a d ( ' implVol . mat ' ) figure p l o t (K, sigma impl NIG , ' - o ' ) yl im ( [ 0 . 3 , 0 . 9 ] ) xlabel ( ' Strike Price ($) ' ) yla bel ( ' Implied V o l a t i l i t y ' ) t i t l e ( ' S e n s i t i v i t y of Implied V o l a t i l i t y to S t r i k e ' ) toc

97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132

Parameter Calibration
1 2 3

% % MC I m p l i e d V o l a t i l i t y clear ; clc ;

126

APPENDIX A
format long tic % % dT = 1 / 1 2 ; N = 1 0 0 0 0 0 ; % number o f s i m u l a t i o n s r a t e = 0 . 0 2 ; % r i s k f r e e r a t e o f r e t u r n i n %100 S0 = 6 8 . 5 8 ; % i n i t i a l commodity p r i c e S0 Call2 = 74.88; % KSpread = 5 2 ; % S t r i k e f o r Spread f p r i n t f ( ' T o t a l number o f s i m u l a t i o n s : %i \ n ' ,N) % % var = 2 ; % 1 i s u n i v a r 2 i s b i v a r put = 0 ; % i f c a l i b r a t i n g p u t s s e t t o 1 % I n i t i a l i z e Variables i f var == 2 l o a d ( ' AsianOptionMarketData . mat ' ) ; K Asn = K; Payoff WTI mkt = WTIAsnOpt ; l o a d ( ' EuroOptionMarketData . mat ' ) ; K Eur= K; Payoff BRNT euro mkt = BRNTEuroOpt ; else i f put == 1 l o a d ( ' AsianOptionMarketDataPut . mat ' ) ; K Asn = KPut ; K = KPut ; Payoff WTI mkt Put = WTIAsnOptPut ; else l o a d ( ' AsianOptionMarketData . mat ' ) ; K Asn = K; Payoff WTI mkt = WTIAsnOpt ; end end % Parameters f o r c a l i b r a t i o n i f var == 1 muX WTI Call = 0 . 3 ; kappa0 = 0 . 2 5 ; sigmaX WTI Call = 0 ; else muX WTI Call = 0 . 3 ; muX WTI Call2 = 0 ; kappa0 = 0 . 2 5 ;

4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45

127

APPENDIX A
kappa1 = 0 . 2 5 ; kappa2 = 0 . 2 5 ; c1 = 0 . 2 ; c2 = 1 ; sigmaX WTI Call = 0 ; sigmaX WTI Call2 = 0 ; end % % i f var == 2 k = 1 w h i l e k < l e n g t h ( K Asn )+1 f p r i n t f ( ' S t a r t i n g b i v a r i a t e c a l i b r a t i o n f o r y\n ' ) o p t i o n s = o p t i m o p t i o n s ( ' p a t t e r n s e a r c h ' , ' D i s p l a y ' , ' i t e r ' , ' MeshTolerance ' , 1 e - 10 , ' F u n c t i o n T o l e r a n c e ' , 1 e - 6 , ' S t e p T o l e r a n c e ' , 1 e - 6) ;
59 60 61

46 47 48 49 50 51 52 53 54 55 56 57 58

y0 = [ kappa0 ; kappa1 ; c1 ; muX WTI Call ; sigmaX WTI Call ] ; l b = [ 0 ; 0 ; 0 ; - i n f ; 0 ] ; ub = [ i n f ; i n f ; i n f ; i n f ; i n f ] ; fun WTI = @( y ) Payoff WTI NIG ( y ( 1 ) , y ( 2 ) , y ( 3 ) , K Asn ( k ) , y ( 4 ) , y ( 5 ) ,N, r a t e , S0 , Payoff WTI mkt ( k , end ) ) ;

62

[ y ( : , k ) , f v a l y , e x i t f l a g , o u t p u t y ] = p a t t e r n s e a r c h ( fun WTI , y0 , [ ] , [ ] , [ ] , [ ] , lb , ub , [ ] , o p t i o n s )

63 64 65 66 67 68

muY = dT y ( 4 , k )+y ( 3 , k )  y ( 4 , k ) dT ; sigmaY = s q r t (dT  ( ( y ( 1 , k ) +(y ( 3 , k ) ^ 2 )  y ( 2 , k ) )  y ( 4 , k ) ^ 2 + . . . (1+y ( 3 , k ) )  y ( 5 , k ) ^ 2 ) ) ; R1 = IGProc ( [ y ( 1 , k ) , y ( 2 , k ) ] , y ( 3 , k ) ,dT , 1 , N, 1 ) ; S1 = NIGProc (R1 , S0 ,muY, sigmaY ) ; P a y o f f W T I c a l ( k ) = mean ( AsianOption ( S1 , K Asn ( k ) , r a t e , dT , Payoff WTI mkt ( k , end ) ) ) ;

69 70 71 72 73 74 75 76 77 78 79 80 81 82 83

k = k+1 end s a v e ( ' BivarY1 . mat ' , ' y0 ' , ' y ' , ' P a y o f f W T I c a l ' ) f p r i n t f ( ' y V a r i a b l e s saved ! \ n ' ) % % x f p r i n t f ( ' S t a r t i n g c a l i b r a t i o n f o r x\n ' ) l o a d ( ' BivarY1 . mat ' ) l o a d ( ' EuroOptionMarketData . mat ' ) ; K Eur= K; Payoff BRNT euro mkt = BRNTEuroOpt ; l = 1 [ a , b ] = i n t e r s e c t ( K Asn , K Eur ) ; y = y ( : , b) ; w h i l e l < l e n g t h ( K Eur )+1 f p r i n t f ( ' S t a r t i n g t h e s e a r c h f o r x\n ' )

128

APPENDIX A
o p t i o n s = o p t i m o p t i o n s ( ' p a t t e r n s e a r c h ' , ' D i s p l a y ' , ' i t e r ' , ' MeshTolerance ' , 1 e - 10 , ' F u n c t i o n T o l e r a n c e ' , 1 e - 6 , ' S t e p T o l e r a n c e ' , 1 e - 6) ;
85 86 87

84

x0 = [ kappa2 ; c2 ; muX WTI Call2 ; sigmaX WTI Call2 ] ; l b = [ 0 ; 0 ; - i n f ; 0 ] ; ub = [ i n f ; i n f ; i n f ; i n f ] ; fun BRNT = @( x ) P a y o f f N I G C a l l 2 ( x ( 1 ) , x ( 1 ) , x ( 2 ) , K Eur ( l ) , x ( 3 ) , x ( 4 ) ,N, r a t e , S 0 C a l l 2 , Payoff BRNT euro mkt ( l ) ) ;

88

[ x ( : , l ) , f v a l x , e x i t f l a g , o u t p u t x ] = p a t t e r n s e a r c h ( fun BRNT , x0 , [ ] , [ ] , [ ] , [ ] , lb , ub , [ ] , o p t i o n s )

89 90 91 92 93 94

[ R1 , L0 , L1 ] = IGProc ( [ y ( 1 , l ) , x ( 1 , l ) ] , x ( 2 , l ) , 1 / 1 2 , 1 ,N, 1 ) ; muY = dT x ( 3 , l )+x ( 2 , l )  x ( 3 , l ) dT ; sigmaY = s q r t (dT  ( ( y ( 1 , l ) +(x ( 2 , l ) ^ 2 )  x ( 1 , l ) )  x ( 3 , l ) ^ 2 + . . . (1+x ( 2 , l ) )  x ( 4 , l ) ^ 2 ) ) ; S1 = NIGProc ( x ( 2 , l )  L1 , S 0 C a l l 2 ,muY, sigmaY ) ; P a y o f f B R N T e u r o c a l ( l ) = mean ( EuroOption ( S1 , K Eur ( l ) , r a t e , dT , Payoff BRNT euro mkt ( l , end ) ) ) ;

95 96 97 98 99 100 101 102 103 104

l = l +1 end s a v e ( ' BivarX1 . mat ' , ' x0 ' , ' x ' , ' P a y o f f B R N T e u r o c a l ' ) f p r i n t f ( ' x V a r i a b l e s saved ! \ n ' ) e l s e i f var == 1 i f put == 1 k = 1; w h i l e k < l e n g t h (K)+1 f p r i n t f ( ' S t a r t i n g u n i v a r i a t e put c a l i b r a t i o n f o r y \ n ' ) options = optimoptions ( ' patternsearch ' , ' Display ' , ' i t e r ' , ' MeshTolerance ' , 1 e - 10 , ' F u n c t i o n T o l e r a n c e ' , 1 e - 6 , ' S t e p T o l e r a n c e ' , 1 e - 6) ;

105 106 107 108

y0 = [ kappa0 ; muX WTI Call ; sigmaX WTI Call ] ; lb = [0; - i n f ; 0 ] ; ub = [ i n f ; i n f ; i n f ] ; fun WTI = @( y ) Payoff WTI NIG Put ( y ( 1 ) , 0 , 0 , K Asn ( k ) , y ( 2 ) , y ( 3 ) ,N, r a t e , S0 , Payoff WTI mkt Put ( k , end ) ) ;

109

[ y ( : , k ) , f v a l y , e x i t f l a g , o u t p u t y ] = p a t t e r n s e a r c h ( fun WTI , y0 , [ ] , [ ] , [ ] , [ ] , lb , ub , [ ] , o p t i o n s )

110 111 112 113 114

R1 = IGProc ( y ( 1 , k ) , 0 , 1 / 1 2 , 1 ,N, 0 ) ; muY = dT y ( 2 , k ) ; sigmaY = s q r t (dT  ( y ( 1 , k )  y ( 2 , k ) ^2+y ( 3 , k ) ^ 2 ) ) ; S1 = NIGProc (R1 , S0 ,muY, sigmaY ) ; P a y o f f W T I c a l P u t ( k ) = mean ( AsianOptionPut ( S1 , K Asn ( k ) , r a t e , dT , Payoff WTI mkt Put ( k , end ) ) ) ;

115 116

k = k+1 end

129

APPENDIX A
s a v e ( ' UnivarY1Put . mat ' , ' y0 ' , ' y ' , ' P a y o f f W T I c a l P u t ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' ) else k = 1; w h i l e k < l e n g t h (K)+1 f p r i n t f ( ' S t a r t i n g u n i v a r i a t e c a l i b r a t i o n f o r y\n ' ) options = optimoptions ( ' patternsearch ' , ' Display ' , ' i t e r ' , ' MeshTolerance ' , 1 e - 10 , ' F u n c t i o n T o l e r a n c e ' , 1 e - 6 , ' S t e p T o l e r a n c e ' , 1 e - 6) ;
124 125 126 127

117 118 119 120 121 122 123

y0 = [ kappa0 ; muX WTI Call ; sigmaX WTI Call ] ; lb = [0; - i n f ; 0 ] ; ub = [ i n f ; i n f ; i n f ] ; fun WTI = @( y ) Payoff WTI NIG ( y ( 1 ) , 0 , 0 , K Asn ( k ) , y ( 2 ) , y ( 3 ) ,N, r a t e , S0 , Payoff WTI mkt ( k , end ) ) ;

128

[ y ( : , k ) , f v a l y , e x i t f l a g , o u t p u t y ] = p a t t e r n s e a r c h ( fun WTI , y0 , [ ] , [ ] , [ ] , [ ] , lb , ub , [ ] , o p t i o n s )

129 130 131 132 133

R1 = IGProc ( y ( 1 , k ) , 0 , 1 / 1 2 , 1 ,N, 0 ) ; muY = dT y ( 2 , k ) ; sigmaY = s q r t (dT  ( y ( 1 , k )  y ( 2 , k ) ^2+y ( 3 , k ) ^ 2 ) ) ; S1 = NIGProc (R1 , S0 ,muY, sigmaY ) ; P a y o f f W T I c a l ( k ) = mean ( AsianOption ( S1 , K Asn ( k ) , r a t e , dT , Payoff WTI mkt ( k , end ) ) ) ;

134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153

k = k+1 end s a v e ( ' UnivarY1 . mat ' , ' y0 ' , ' y ' , ' P a y o f f W T I c a l ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' ) end end

toc

% % Plots

l o a d ( ' UnivarY1 . mat ' ) l o a d ( ' AsianOptionMarketData . mat ' ) Payoff WTI mkt = WTIAsnOpt ; figure subplot (4 ,1 ,1) h o l d on p l o t ( Payoff WTI cal , '-+ ' , ' LineWidth ' , 0 . 5 ) p l o t ( Payoff WTI mkt ( : , end ) , ' - o ' , ' LineWidth ' , 0 . 5 ) xlabel ( ' Strike Prices ($) ' )

130

APPENDIX A
ylabel ( ' Price ($) ' ) t i t l e ( ' ( a ) C a l i b r a t i o n o f U n i v a r i a t e Model C a l l ' ) % l e g e n d ( ' A r i t h m e t i c Asian C a l l C a l i b r a t e d P r i c e ' , ' Asian C a l l Market P r i c e ' )

154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192

l o a d ( ' AsianOptionMarketDataPut . mat ' ) ; l o a d ( ' UnivarY1Put . mat ' ) Payoff WTI mkt Put = WTIAsnOptPut ; subplot (4 ,1 ,2) h o l d on p l o t ( P a y off WTI cal Put , '-+ ' , ' LineWidth ' , 0 . 5 ) p l o t ( Payoff WTI mkt Put ( : , end ) , ' - o ' , ' LineWidth ' , 0 . 5 ) xlabel ( ' Strike Prices ($) ' ) ylabel ( ' Price ($) ' ) t i t l e ( ' ( b ) C a l i b r a t i o n o f U n i v a r i a t e Model Put ' ) % l e g e n d ( ' A r i t h m e t i c Asian Put C a l i b r a t e d P r i c e ' , ' Asian Put Market P r i c e ' )

l o a d ( ' BivarY1 . mat ' ) l o a d ( ' AsianOptionMarketData . mat ' ) Payoff WTI mkt = WTIAsnOpt ; subplot (4 ,1 ,3) h o l d on p l o t ( Payoff WTI cal , '-+ ' , ' LineWidth ' , 0 . 5 ) p l o t ( Payoff WTI mkt ( : , end ) , ' - o ' , ' LineWidth ' , 0 . 5 ) xlabel ( ' Strike Prices ($) ' ) ylabel ( ' Price ($) ' ) t i t l e ( ' ( c ) C a l i b r a t i o n o f Asian P a y o f f ' ) l e g e n d ( ' C a l i b r a t e d P r i c e ' , ' Market P r i c e ' )

l o a d ( ' BivarX1 . mat ' ) l o a d ( ' EuroOptionMarketData . mat ' ) ; Payoff BRNT euro mkt = BRNTEuroOpt ; subplot (4 ,1 ,4) h o l d on p l o t ( Payoff BRNT euro cal , '-+ ' , ' LineWidth ' , 0 . 5 ) p l o t ( Payoff BRNT euro mkt , ' - o ' , ' LineWidth ' , 0 . 5 ) xlabel ( ' Strike Prices ($) ' ) ylabel ( ' Price ($) ' ) t i t l e ( ' ( d ) C o n d i t i o n a l C a l i b r a t i o n o f European P a y o f f ' ) % l e g e n d ( ' European C a l l C a l i b r a t e d P r i c e ' , ' European C a l l Market P r i c e ' )

131

APPENDIX A

Portfolio Choice
Simulation
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39

clear all clc % % l o a d s t h e s i m p l i f e i d s y m b o l i c p o r t f o l i o s from Check2 .m % l o a d ( ' p o r t f o l i o E Z . mat ' ) ; % % % time c o u n t e r s t a r t tic % % Parameters % I n i t i a l time t 0 =0; % Terminal time tT =20; % Initial variables qr =0; s i g m a r = 0 . 0 3 ; s i g m a l = 0 . 1 4 6 7 ; sigma b = 0 . 2 6 2 0 ; s i g m a s = 0 . 2 ; r b a r = 0 . 0 2 ; l b a r = - 2.1493; bbar =0; k r =0.5; k l =0.2935; k b =4.0942; P= 3 . 7 8 1 6 ; Pl = 1 . 6 3 1 5 ;Pb= 1 3 . 4 0 3 5 ; r h o s p =0; r h o s l = - 0.2186; r h o s b = - 0.2164; rho Pb = 0 . 3 ; rho Lp = 0 . 3 ; rho Lb = - 0.4913;

% % mean r e v e r t i n g s i g m a s ( Long Run) % epsilon = 0.025; % s i g m a s=e p s i l o n +( s i g m a l ^ 2 / ( 2  k l ) ) ;

% f i l t e r e d c o r r e l a t i o n parameter r h o l=s q r t (1 - r h o s l ^ 2 ) ; r h o l p =(rho Lp - r h o s l  r h o s p ) / r h o l ; r h o p=s q r t (1 - r h o s p ^2 - r h o l p ^ 2 ) ; r h o l b =(rho Lb - r h o s l  r h o s b ) / r h o l ; r h o p b =(rho Pb - r h o s p  r h o s b - r h o l p  r h o l b ) / r h o p ; r h o b=s q r t (1 - r h o s b ^2 - r h o l b ^2 - rho pb ^ 2 ) ;

% solving for m syms m eqns = - 2  k b m +si gma b ^2 - ( sigma b  r h o s b +(m Pb) ) ^ 2 - . . . ( s i g m a b  r h o l b - ( (m Pb  r h o s l ) / r h o l ) ) ^ 2 - . . . ( s igma b  rho pb +(m Pb  ( r h o s l  r h o l p - r h o l  r h o s p ) ) / ( r h o l  r h o p ) ) ^ 2 ; v a r s = m;

132

APPENDIX A
[m]= s o l v e ( eqns ==0, v a r s ) ; m = vpa (m) ; m = d o u b l e (m( 2 ) ) ; a1=s i g m a b  r h o s b +(m Pb) ; a2=s i g m a b  r h o l b - ( (m Pb  r h o s l ) / r h o l ) ; a3=s i g m a b  rho pb +(m Pb  ( r h o s l  r h o l p - r h o l  r h o s p ) ) / ( r h o l  r h o p ) ;

40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81

% t e s t i n g parameters , p a r a m e t e r s f o r b e h a v i o r gamma=4; p s i = 1 / 0 . 7 5 ; vphi = 0 . 0 1 5 3 ;% vphi i s time p r e f e r e n c e parameter >0 % % % l o n g run a v e r a g e o f v a l u e s r=r b a r ; l=l b a r ; b=bbar ; s i g m a p = ( s i g m a r / k r )  (1 - exp ( - k r  ( tT - t 0 ) ) ) ; q = qr  sigma p ; % variables vrho = [ 0 ; 1 ; 0 ] ; I3 = diag ( [ 1 , 1 , 1 ] ) ; I2 = diag ( [ 1 , 1 ] ) ; % s t a t e v a r i a b l e means kbar = [ k l  l b a r ; k r  r b a r ; k b  bbar ] ; k =[ k l , 0 , 0 ; 0 , k r , 0 ; 0 , 0 , k b ] ; % s t a t e v a r i a b l e v o l a t i l i t y matrix Sy = [ r h o s l  s i g m a l , r h o l  s i g m a l , 0 ; . . . -rho sp  sigma r , - r h o l p  sigma r , - rho p  sigma r ; . . . a1 , a2 , a3 ] ; % c o v a r i a n c e o f bonds and s t o c k S = [ s i g m a s , 0 , ; sigma p  r h o s p , sigma p  s q r t (1 - r h o s p ^ 2 ) ] ; rho = [ 1 , 0 ; 0 , rho lp / rho l ; 0 , rho p / r h o l ] ; Sx = S  rho . ' ; % mean o f bonds and s t o c k minus i n t e r e s t mu = [ s i g m a s  (P+Pl  l+Pb  b ) ; q ] ; % T i s t h e a m b i g u i t y parameter tau = 0 : 1 : 1 0 ;

% % Simulation i = 1 c h e ck = 1 ; w h i l e i <=l e n g t h ( tau ) syms a 1 b1 1 b2 1 b3 1 q 1 1 1 q 1 2 1 q 1 3 1 q 2 1 1 q 2 2 1 q 2 3 1 q 3 1 1 q 3 2 1 q 3 3 1 A = a 1; B = [ b1 1 ; b2 1 ; b3 1 ] ;

133

APPENDIX A
Q = [ q11 1 , q12 1 , q 1 3 1 ; q21 1 , q22 1 , q 2 3 1 ; q31 1 , q32 1 , q 3 3 1 ] ; t 1 1 = tau ( i ) ; t 2 2 = tau ( i ) ; t 3 3 = tau ( i ) ; T = [ t1 1 , 0 , 0 ; 0 , t2 2 , 0 ; 0 , 0 , t3 3 ]

82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101

% p o r t f o l i o constants p h i 1=S  ( rho . '  T rho+gamma I 2 )  S . ' ; p h i 2=Sx  (T- I 3+gamma I 3 )  Sy . ' ; p h i 3 = Sy  ( ( ( 1 - gamma) /(1 - p s i ) )  I 3+I3 - (1/(1 - p s i ) ) T)  Sy . ' ; p h i 4 = (1/(1 - p s i ) )  p h i 2 . '  i n v ( p h i 1 )  p h i 2+p h i 3 ;

% p h i 1 components v p h i 0 = t 1 1  r h o l ^2  r h o s p ^2 + gamma r h o l ^2 - t 3 3  r h o p ^2  r h o s p ^2+ . . . t 3 3  r h o p ^2 - t 2 2  r h o l p ^2  r h o s p ^2 + t 2 2  r h o l p ^ 2 ; v p h i 1 = - gamma r h o l ^2  r h o s p ^2 + gamma r h o l ^2 - t 3 3  r h o p ^2  r h o s p ^ 2 + . . . t 3 3  r h o p ^2 - t 2 2  r h o l p ^2  r h o s p ^2 + t 2 2  r h o l p ^ 2 ; % mu. '  i n v ( p h i 1 ) mu J0 = (P^2  vphi0 - 2  (gamma+t 1 1 )  ( r h o s p  r h o l ^ 2 )  qr P + . . . qr ^ 2  ( r h o l ^ 2 )  (gamma+t 1 1 ) ) / ( ( gamma+t 1 1 )  vphi1 ) ; J1 = - ( 2  ( (gamma+t 1 1 )  qr  ( r h o s p  ( r h o l ^ 2 ) ) -P vphi0 ) ) / ( ( gamma+t 1 1 )  vphi1 )  [ Pl ; 0 ; Pb ] ; J2 = ( 2  vphi0 ) / ( ( gamma+t 1 1 )  vphi1 )  [ Pl ^2 0 Pl  Pb ; 0 0 0 ; Pl  Pb 0 Pb ^ 2 ] ; % p h i 2 . '  i n v ( p h i 1 ) mu H = phi 2 . '  inv ( phi 1 ) ; F = s i g m a s H( : , 1 ) ; R = qr .  sigma p .  H( : , 2 ) ; g0 = P .  F+R; g1 = [ Pl F ( 1 ) 0 Pb F ( 1 ) ; Pl F ( 2 ) 0 Pb F ( 2 ) ; Pl F ( 3 ) 0 Pb F ( 3 ) ] ;

102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118

% S o l v i n g t h e System o f e q u a t i o n s k1 = vphi ; j =1;

w h i l e j == 1 syms a 1 b1 1 b2 1 b3 1 q 1 1 1 q 1 2 1 q 1 3 1 q 2 1 1 q 2 2 1 q 2 3 1 q 3 1 1 q 3 2 1 q33 1

119 120 121

A = a 1; B = [ b1 1 ; b2 1 ; b3 1 ] ; Q = [ q11 1 , q12 1 , q 1 3 1 ; q21 1 , q22 1 , q 2 3 1 ; q31 1 , q32 1 , q 3 3 1 ] ;

134

APPENDIX A
k 1 o l d = k1 k0 = k1  (1 - l o g ( k1 ) ) ; c o n s t = - k0 - p s i  k1  l o g ( vphi )+k1 A+vphi  p s i +(g0 - kbar ) . '  B . . . - 0.5  B . '  ( Sy  Sy . ' - p h i 4 ) B - 0 . 5  t r a c e ( Sy  Sy . '  Q) - 0 . 5  ( p s i - 1)  J0 ; y = k1 B+(g1+k ) . '  B-Q ( Sy  Sy . ' - p h i 4 ) B+Q ( g0 - kbar ) - 0 . 5  ( p s i - 1)  J1 - ( p s i - 1)  vrho ;
128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146

122 123 124 125 126 127

y2 = k1 Q+(g1+k ) . '  Q+Q. '  ( g1+k ) -Q. '  ( Sy  Sy . ' - p h i 4 ) Q- 0 . 5  ( p s i - 1)  J2 ;

i f check ==1 q1 = - 0 . 5  ( p s i - 1)  J2 ; q2 = k1+(g1+k ) . ' ; q3 = ( g1+k ) ; q4 = - (Sy  Sy . ' - p h i 4 ) ; A1 = q1 ; A2 = q2+t r a n s p o s e ( q3 ) ; A3 = q4 ; q u a d d i s c = A2 . ^ 2 - 4 .  A3 .  A1 ; quadeqn = ( - A2+q u a d d i s c )  0 . 5  i n v (A3) check = check +1; end

% solve Q f p r i n t f ( ' S t a r t i n g s o l u t i o n \n ' ) tic x = [ c o n s t ; y ; y2 ( : ) ] ; % v a r s x = [ a 1 , b1 1 , b2 1 , b3 1 , q11 1 , q12 1 , q13 1 , q21 1 , q22 1 , q23 1 , q31 1 , q32 1 , q 3 3 1 ] ;

147 148 149 150 151 152 153 154 155 156 157 158 159 160 161

% %

i n i t x = zeros (1 , length ( varsx ) ) ; Xsol = v p a s o l v e ( x==0, varsx , i n i t x ) Xsol = v p a s o l v e ( y2==0) i f sum ( s i z e ( Xsol . q 1 1 1 ) ) >2 i f psi < 1 i d x = i n t e r s e c t ( f i n d ( Xsol . q11 1 > 0) , f i n d ( Xsol . q 1 2 1==0)) i f l e n g t h ( i d x ) >1 i d x = i n t e r s e c t ( f i n d ( Xsol . q33 1 < 0) , i d x ) end else i d x = i n t e r s e c t ( f i n d ( Xsol . q11 1 < 0) , f i n d ( Xsol . q 1 2 1==0)) i f l e n g t h ( i d x ) >1 i d x = i n t e r s e c t ( f i n d ( Xsol . q33 1 > 0) , i d x ) end

135

APPENDIX A
end q 1 1 1=Xsol . q 1 1 1 ( i d x ) ; q 1 2 1=Xsol . q 1 2 1 ( i d x ) ; q 1 3 1=Xsol . q 1 3 1 ( i d x ) ; q 2 1 1=Xsol . q 2 1 1 ( i d x ) ; q 2 2 1=Xsol . q 2 2 1 ( i d x ) ; q 2 3 1=Xsol . q 2 3 1 ( i d x ) ; q 3 1 1=Xsol . q 3 1 1 ( i d x ) ; q 3 2 1=Xsol . q 3 2 1 ( i d x ) ; q 3 3 1=Xsol . q 3 3 1 ( i d x ) ; % % else q 1 1 1=Xsol ( 1 ) ; q 1 2 1=Xsol ( 2 ) ; q 1 3 1=Xsol ( 3 ) ; q 2 1 1=Xsol ( 4 ) ; q 2 2 1=Xsol . q 2 2 1 ; q 2 3 1=Xsol . q 2 3 1 ; q 3 1 1=Xsol . q 3 1 1 ; q 3 2 1=Xsol . q 3 2 1 ; q 3 3 1=Xsol . q 3 3 1 ; % % end Xsol = v p a s o l v e ( s u b s ( y )==0) ; b 1 1 = Xsol . b1 1 ; b2 1= Xsol . b2 1 ; b3 1 = Xsol . b3 1 ; Xsol = v p a s o l v e ( s u b s ( c o n s t )==0) ; a 1 = Xsol ; % change t o d o u b l e a=d o u b l e ( a 1 ) ; b1=d o u b l e ( b1 1 ) ; b2=d o u b l e ( b2 1 ) ; b3=d o u b l e ( b3 1 ) ; c11=d o u b l e ( q 1 1 1 ) ; c12=d o u b l e ( q 1 2 1 ) ; c13=d o u b l e ( q 1 3 1 ) ; c21=d o u b l e ( q 2 1 1 ) ; c22=d o u b l e ( q 2 2 1 ) ; c23=d o u b l e ( q 2 3 1 ) ; c31=d o u b l e ( q 3 1 1 ) ; c32=d o u b l e ( q 3 2 1 ) ; c33=d o u b l e ( q 3 3 1 ) ; b1 1 = Xsol . b1 1 ; b2 1= Xsol . b2 1 ; b3 1 = Xsol . b3 1 ; a 1 = Xsol . a 1 ; b1 1 = Xsol . b1 1 ( i d x ) ; b2 1= Xsol . b2 1 ( i d x ) ; b3 1 = Xsol . b3 1 ( i d x ) ; a 1 = Xsol . a 1 ( i d x ) ;

162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193

A new = a B new =[b1 ; b2 ; b3 ] Q new = [ c11 , c12 , c13 ; c21 , c22 , c23 ; c31 , c32 , c33 ] Y = [ l ; r ;b]; k1 new = exp ( k0+k1  p s i  l o g ( vphi ) - k1  ( A new+B new . '  Y+0.5 Y. '  Q new Y) ) ; k1 = k1 new d e l t a k = k1 new - k 1 o l d i f abs ( d e l t a k ) < 10^( - 4) syms a 1 b1 1 b2 1 b3 1 q 1 1 1 q 1 2 1 q 1 3 1 q 2 1 1 q 2 2 1 q 2 3 1 q 3 1 1 q32 1 q33 1

194 195 196 197 198 199 200 201

A = a 1; B = [ b1 1 ; b2 1 ; b3 1 ] ; Q = [ q11 1 , q12 1 , q 1 3 1 ; q21 1 , q22 1 , q 2 3 1 ; q31 1 , q32 1 , q 3 3 1 ] ; k1=k1 new ; k0 = k1  (1 - l o g ( k1 ) ) ; c o n s t = - k0 - p s i  k1  l o g ( vphi )+k1 A+vphi  p s i +(g0 - kbar ) . '  B . . . - 0.5  B . '  ( Sy  Sy . ' - p h i 4 ) B - 0 . 5  t r a c e ( Sy  Sy . '  Q) - 0 . 5  ( p s i - 1)  J0 ;

136

APPENDIX A
y = k1 B+(g1+k ) . '  B-Q ( Sy  Sy . ' - p h i 4 ) B+Q ( g0 - kbar ) - 0 . 5  ( p s i - 1)  J1 - ( p s i - 1)  vrho ;
203 204 205 206 207

202

y2 = k1 Q+(g1+k ) . '  Q+Q. '  ( g1+k ) -Q. '  ( Sy  Sy . ' - p h i 4 ) Q- 0 . 5  ( p s i - 1)  J2 ;

x = [ c o n s t ; y ; y2 ( : ) ] ; % v a r s x = [ a 1 , b1 1 , b2 1 , b3 1 , q11 1 , q12 1 , q13 1 , q21 1 , q22 1 , q23 1 , q31 1 , q32 1 , q 3 3 1 ] ;

208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224

% %

i n i t x = zeros (1 , length ( varsx ) ) ; Xsol = v p a s o l v e ( x==0, varsx , i n i t x ) Xsol = v p a s o l v e ( y2==0) i f sum ( s i z e ( Xsol . q 1 1 1 ) ) >2 i f psi < 1 i d x = i n t e r s e c t ( f i n d ( Xsol . q11 1 > 0) , f i n d ( Xsol . q 1 2 1==0)) i f l e n g t h ( i d x ) >1 i d x = i n t e r s e c t ( f i n d ( Xsol . q33 1 < 0) , i d x ) end else i d x = i n t e r s e c t ( f i n d ( Xsol . q11 1 < 0) , f i n d ( Xsol . q 1 2 1==0)) i f l e n g t h ( i d x ) >1 i d x = i n t e r s e c t ( f i n d ( Xsol . q33 1 > 0) , i d x ) end

end q 1 1 1=Xsol . q 1 1 1 ( i d x ) ; q 1 2 1=Xsol . q 1 2 1 ( i d x ) ; q 1 3 1=Xsol . q 1 3 1 ( i d x ) ;

225

q 2 1 1=Xsol . q 2 1 1 ( i d x ) ; q 2 2 1=Xsol . q 2 2 1 ( i d x ) ; q 2 3 1=Xsol . q 2 3 1 ( i d x ) ;

226

q 3 1 1=Xsol . q 3 1 1 ( i d x ) ; q 3 2 1=Xsol . q 3 2 1 ( i d x ) ; q 3 3 1=Xsol . q 3 3 1 ( i d x ) ;

227

% idx ) ;

b1 1 = Xsol . b1 1 ( i d x ) ; b2 1= Xsol . b2 1 ( i d x ) ; b3 1 = Xsol . b3 1 (

228 229 230 231 232 233 234 235 236 237

% else

a 1 = Xsol . a 1 ( i d x ) ;

q 1 1 1=Xsol . q 1 1 1 ; q 1 2 1=Xsol . q 1 2 1 ; q 1 3 1=Xsol . q 1 3 1 ; q 2 1 1=Xsol . q 2 1 1 ; q 2 2 1=Xsol . q 2 2 1 ; q 2 3 1=Xsol . q 2 3 1 ; q 3 1 1=Xsol . q 3 1 1 ; q 3 2 1=Xsol . q 3 2 1 ; q 3 3 1=Xsol . q 3 3 1 ; % % end Xsol = v p a s o l v e ( s u b s ( y )==0) ; b1 1 = Xsol . b1 1 ; b2 1= Xsol . b2 1 ; b3 1 = Xsol . b3 1 ; b1 1 = Xsol . b1 1 ; b2 1= Xsol . b2 1 ; b3 1 = Xsol . b3 1 ; a 1 = Xsol . a 1 ;

137

APPENDIX A
Xsol = v p a s o l v e ( s u b s ( c o n s t )==0) ; a 1 = Xsol ; % change t o d o u b l e a=d o u b l e ( a 1 ) ; b1=d o u b l e ( b1 1 ) ; b2=d o u b l e ( b2 1 ) ; b3=d o u b l e ( b3 1 ) ; c11=d o u b l e ( q 1 1 1 ) ; c12=d o u b l e ( q 1 2 1 ) ; c13=d o u b l e ( q 1 3 1 ) ; c21=d o u b l e ( q 2 1 1 ) ; c22=d o u b l e ( q 2 2 1 ) ; c23=d o u b l e ( q 2 3 1 ) ; c31=d o u b l e ( q 3 1 1 ) ; c32=d o u b l e ( q 3 2 1 ) ; c33=d o u b l e ( q 3 3 1 ) ; A = a B = [ b1 ; b2 ; b3 ] Q = [ c11 , c12 , c13 ; c21 , c22 , c23 ; c31 , c32 , c33 ] j =2; end end % f i n d i n g the p o r t f o l i o s gy = B+QY; Phi = (1/(1 - p s i ) )  i n v ( p h i 1 )  p h i 2  gy+i n v ( p h i 1 ) mu ; P h i s = i n v ( p h i 1 ) mu ; P h i l = (1/(1 - p s i ) )  i n v ( p h i 1 )  p h i 2  [ gy ( 1 ) ; 0 ; 0 ] ; P h i r = (1/(1 - p s i ) )  i n v ( p h i 1 )  p h i 2  [ 0 ; gy ( 2 ) ; 0 ] ; Phi b = (1/(1 - p s i ) )  i n v ( p h i 1 )  p h i 2  [ 0 ; 0 ; gy ( 3 ) ] ;

238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279

p i p ( i )=Phi ( 2 ) p i s ( i ) = Phi ( 1 ) % s p e c u l a t i v e demandgamma p i p s ( i )=P h i s ( 2 ) ; p i s s ( i ) = P h i s ( 1 ) ; % h e d g i n g demand from u n o b s e r v a b i l i t y , o b s e r v a b i l i t y and s t o c h a s t i c % interest rates p i p l ( i ) = Phi l (2) ; p i s l ( i ) = Phi l (1) ; pi p r ( i ) = Phi r (2) ; p i s r ( i ) = Phi r (1) ; p i p b ( i ) = Phi b ( 2 ) ; p i s b ( i ) = Phi b ( 1 ) ; % consumption t o w e a l t h r a t i o cwr ( i )=k1

i = i +1 end s a v e ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' , ' p i s ' , ' p i p ' , ' p i s s ' , ' p i p s ' . . . , ' p i s l ' , ' p i p l ' , ' p i s r ' , ' p i p r ' , ' p i s b ' , ' p i p b ' , ' cwr ' ) f p r i n t f ( ' V a r i a b l e s saved ! \ n ' ) % time c o u n t e r end toc

% % Plots

138

APPENDIX A
close all clear all clc tau = l i n s p a c e ( 0 , 1 0 , 1 1 ) ; figure subplot (2 ,1 ,1) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i s , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i s , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i s , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i s , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i s , ' -^ ' ) yl im ( [ - 5 1 ] ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) , x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( a ) Optimal Stock A l l o c a t i o n ' ) % subplot (2 ,1 ,2) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i p , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i p , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i p , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i p , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i p , ' -^ ' ) yl im ( [ - 5 1 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( b ) Optimal Bond A l l o c a t i o n ' ) % figure subplot (2 ,1 ,1)

280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321

139

APPENDIX A
h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i s s , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i s s , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i s s , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i s s , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i s s , ' -^ ' ) yl im ( [ - 0 . 5 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( a ) Myopic Stock Demand ' ) % subplot (2 ,1 ,2) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i p s , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i p s , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i p s , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i p s , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i p s , ' -^ ' ) yl im ( [ - 0 . 5 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( b ) Myopic Bond Demand ' ) % figure subplot (2 ,1 ,1) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i s l , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i s l , ' - o ' )

322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363

140

APPENDIX A
l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i s l , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i s l , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i s l , ' -^ ' ) yl im ( [ - 2 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( a ) Stock A l l o c a t i o n from O b s e r v a b l e Parameter Hedging Demand ' ) % subplot (2 ,1 ,2) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i p l , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i p l , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i p l , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i p l , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i p l , ' -^ ' ) yl im ( [ - 2 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( b ) Bond A l l o c a t i o n from O b s e r v a b l e Parameter Hedging Demand ' ) % figure subplot (2 ,1 ,1) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i s r , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i s r , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i s r , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i s r , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' )

364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405

141

APPENDIX A
p l o t ( tau , p i s r , ' -^ ' ) yl im ( [ - 0 . 1 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( a ) Stock A l l o c a t i o n from I n t e r e s t Rate Hedging Demand ' ) % subplot (2 ,1 ,2) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i p r , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i p r , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i p r , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i p r , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i p r , ' -^ ' ) yl im ( [ - 0 . 1 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( b ) Bond A l l o c a t i o n from I n t e r e s t Rate Hedging Demand ' ) % figure subplot (2 ,1 ,1) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i s b , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i s b , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i s b , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i s b , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i s b , ' -^ ' ) yl im ( [ - 4 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' )

406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447

142

APPENDIX A
t i t l e ( ' ( a ) Stock A l l o c a t i o n from U n o b s e r v a b l e Parameter Hedging Demand ' ) % subplot (2 ,1 ,2) h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , p i p b , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , p i p b , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , p i p b , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , p i p b , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , p i p b , ' -^ ' ) yl im ( [ - 4 0 . 5 ] ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' ( b ) Bond A l l o c a t i o n from U n o b s e r v a b l e Parameter Hedging Demand ' ) % figure h o l d on l o a d ( ' s i m u l a t i o n E Z e i s 1 4 0 . mat ' ) p l o t ( tau , cwr , ' -> ' ) l o a d ( ' s i m u l a t i o n E Z e i s 1 2 0 . mat ' ) p l o t ( tau , cwr , ' - o ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 2 5 . mat ' ) p l o t ( tau , cwr , ' -d ' ) l o a d ( ' s i m u l a t i o n E Z e i s 0 5 . mat ' ) p l o t ( tau , cwr , ' - s ' ) l o a d ( ' s i m u l a t i o n E Z e i s 4 3 . mat ' ) p l o t ( tau , cwr , ' -^ ' ) x l a b e l ( ' \ t h e t a 1 =\ t h e t a 2 =\ t h e t a 3 \ i n [ 0 , 1 0 ] ' ) y l a b e l ( ' Wealth A l l o c a t i o n ' ) l e g e n d ( ' \ p s i =1/40 ' , ' \ p s i =1/20 ' , ' \ p s i =1/\gamma ' , ' \ p s i =1/2 ' , ' \ p s i =4/3 ' ) t i t l e ( ' Optimal Consumption t o Wealth R a t i o ' )

448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483

143

REFERENCES
[1] Hansjorg Albrecher and Martin Predota. On pricing Asian options on NIG L´ evy processes. Journal of Computational and Applied Mathematics, 2004. [2] Jennifer Alonso-Garv´ ia, Oliver. Wood, and Jonathan Ziveyi. Pricing and hedging guaranteed minimum withdrawal benefits under a general L´ evy framework using the COS method. Quantitative Finance, 2017. [3] Louis. Bachelier. The theory of speculation. Master's thesis, L'Ecole Normale Superieure, 1900. [4] Fred E. Benth and Paul Kruhner. Integrability of multivariate subordinated L´ evy processes in Hilbert space. Stochastic: An International Journal of Probability and Stochastic Processes, 2015. [5] Fischer Black and Myron Scholes. The pricing of options and liabilities. The Journal of Political Economy, 1973. [6] Bruno Bouchard, Romuald Elie, and Nizar Touzi. Stochastic target problems with controlled loss. SIAM Journal on Control and Optimization, 2008. [7] Wissem Boughamoura, Anand N. Pandey, and Faozi Trabelsi. Pricing and hedging of asian option under jumps. International Journal of Applied Mathematics, 2011. [8] John. Campbell, Yeung. Chan, and Luis Viceira. A multivariate model of strategic asset allocation. Journal of Financial Economics, 2003. [9] John Campbell, Jorge Rodriguez, and Luis Viceira. Strategic asset allocation in a

continuous-time var model. Journal of Economic Dynamics and Control, 2004. [10] John Campbell and Luis Viceira. Consumption and portfolio decisions when expected returns are time varying. Quarterly Journal of Economics, 1999.

144

REFERENCES [11] John Campbell and Luis Viceira. Strategic Asset Allocation: Portfolio Choice for LongTerm Investors. Oxford Press, 2001. [12] Peter K. Clark. A subordinated stochastic process model with finite variance for speculative prices. Econometrica, 1973. [13] C.W. Clenshaw and A.R. Curtis. A method for numerical integration on an automatic computer. Numerische Mathematiks, 1960. [14] Rama Cont and Peter Tankov. Financial Modelling With Jump Processes. CRC Press, 2003. [15] Ramma Cont and Peter Tankov. Calibration of Jump-Diffusion Option Pricing Models: A Robust Non-Parametric Approach. Ecole Polytechnique, Centre de Math´ ematiques Appliquees, 2002. [16] Paresh Date and Ksenia Ponomareva. Linear and nonlinear filtering in mathematical finance: a review. IMA Journal of Management Mathematics, 2011. [17] Griselda Deelstra, Alexandre Petkovic, and Mich´ ele Vanmaele. Pricing and hedging Asian basket spread options. Journal of Computational and Applied Mathematics, 2010. [18] Sondermann Dieter. Introduction to Stochastic Calculus for Finance A New Didactic Approach. Springer, 2006. [19] Darrell Duffie and Larry G Epstein. Stochastic differential utility. Econometrica, 1992. [20] Marcos Escobar, Sebastian Ferrando, and Alexey Rubtsov. Portfolio choice with stochastic interest rates and learning about stock return predictability. International Review of Economics and Finance, 2016. [21] Christian-Oliver Ewald, Zhaojun Yang, and Yajun Xiao. Implied volatility from Asian options via Monte Carlo methods. International Journal of Theoretical and Applied Finance, 2009. [22] Fang Fang and Cornelis W. Oosterlee. A novel pricing method for European options based on Fourier-cosine series expansion. SIAM Journal of Scientific Computing, 2008. [23] Hans F¨ ollmer and Peter Leukert. Quantile Hedging. Finance and Stochastics, 1999. [24] Hans F¨ ollmer and Martin Schweizer. Hedging of Contingent Claims Under Incomplete Information. University of Bonn, 1990. 145

REFERENCES [25] Gerard Gennotte. Optimal portfolio choice under incomplete information. The Journal of Finance, 1986. [26] Nengjiu Ju and Jianjun Miao. Ambiguity, learning and asset returns. Econometrica, 2012. [27] Adam Kolkiewicz and Yan Liu. Semi-static hedging for GMWB in variable annuities. North American Actuarial Journal, 2012. [28] Weiqing Li and Su Chen. Pricing and hedging of arithmetic Asian options via the Edgeworth series expansion approach. Journal of Finance and Data Science, 2016. [29] Robert Liptser and Albert Shiryaev. Statistics of Random Processes, Volume I. Springer, 2000. [30] Robert Liptser and Albert Shiryaev. Statistics of Random Processes, Volume II. Springer, 2000. [31] Hening Liu. Robust consumption and portfolio choice for time varying investment opportunities. Annals of Finance, 2010. [32] Pascal J. Maenhout. Robust portfolio rules and asset pricing. The Review of Financial Studies, 2004. [33] Robert Merton. An intertemporal capital asset model. Econometrica, 1973. [34] Robert Merton. Theory of rational option pricing. The Bell Journal of Economics and Management Science, 1973. [35] John R. Michael, William R. Schucany, and Roy W. Haas. Generating random variables using transformations with multiple roots. The American Statistician, 1976. [36] Ludovic Moreau. Stochastic target problems with controlled loss in jump diffusion models. SIAM Journal on Control and Optimization, 2011. [37] Bernt Karsten Øksendal and Agn´ es Sulem. Applied stochastic control of jump diffusions, volume 498. Springer, 2005. [38] Tommaso Pellegrino and Sabino Piergiacomo. Pricing and hedging multi-asset spread options by a three-dimensional Fourier cosine series expansion method. Journal of Energy Markets, 2014. [39] George Pennachi. The Theory of Asset Pricing. Pearson Education, 2008.

146

REFERENCES [40] Philip E. Protter. Stochastic Differential Equations. In Stochastic Integration and Differential Equations, pages 249­361. Springer, 2005. [41] Sheldon M Ross. Simulation. Academic Press, 2012. [42] Marjon J. Ruijter and Cornelis W. Oosterlee. Two-dimensional Fourier cosine series expansion method for pricing financial options. SIAM Journal of Scientific Computing, 2012. [43] Alexander Schied. Lecture Notes of a Minicourse held at the 8th Symposium on Probability and Stochastic Processes at Universidad de las Am´ ericas, Puebla. TU Berlin, Institut f¨ ur Mathematik, 2004. [44] Wim Schoutens. L´ evy processes in Finance. John Wiley & Sons, 2003. [45] Martin Schweizer. Mean-variance hedging for general claims. Annals of Applied Probability, 1992. [46] Virginia Torczon. On the convergence of pattern search algorithms. SIAM Journal of Optimization, 1997. [47] Bowen Zhang and Cornelis W. Oosterlee. Efficient pricing of european-style asian optoins under exponential L´ evy processes based on Fourier cosine expansions. SIAM Journal of Financial Mathematics, 2013.

147


