Ryerson University

Digital Commons @ Ryerson
Theses and dissertations

1-1-2009

Nanoindentation simulations for large atomic systems : an analysis of molecular dynamics and bridged finite element - molecular dynamics methodologies
Jonathan Vandersluis
Ryerson University

Follow this and additional works at: http://digitalcommons.ryerson.ca/dissertations Part of the Aerospace Engineering Commons Recommended Citation
Vandersluis, Jonathan, "Nanoindentation simulations for large atomic systems : an analysis of molecular dynamics and bridged finite element - molecular dynamics methodologies" (2009). Theses and dissertations. Paper 635.

This Thesis is brought to you for free and open access by Digital Commons @ Ryerson. It has been accepted for inclusion in Theses and dissertations by an authorized administrator of Digital Commons @ Ryerson. For more information, please contact bcameron@ryerson.ca.

NANOINDENTATION SIMULATIONS FOR LARGE ATOMIC SYSTEMS: AN ANALYSIS OF MOLECULAR DYNAMICS AND BRIDGED FINITE ELEMENT- MOLECULAR DYNAMICS METHODOLOGIES

By
Jonathan Vandersluis, B. Eng Aerospace Engineering Ryerson University, 2009

A thesis presented to Ryerson University In partial fulfillment of the requirements for the degree of Master's of Applied Science in the Progratn of Aerospace Engineering

Toronto, Ontario, Canada, 2009

© Jonathan Vandersluis

PROPEATY@F

RYERSOJ ~1 MHIERSRl UBMRY

Authors Declaration

I hereby declare I mn the sole author of this thesis. I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals .for the purpose of scholarly research.

ii

Abstract

Nanoindentation Simulations for Large Atomic Systems: An Analysis of Molecular Dynandcs and Bridged Finite Element- Molecular Dynamics Methodologies..

Jonathan Vandersluis, Master of Applied Science, Aerospace Engineering Ryerson University, Toronto, 2009

This thesis develops a molecular dynamics (MD) custom made con1putational tool to perform nanoindentation simulations on copper nanon1atetials, a Face Centred Cubic (FCC) metal. The Etnbedding Atotn Method (EAM) is used to n1odel the interatomic forces with the substrate. Further, a bridged finite elen1ent - molecular dynatnics
(FE~MD)

shnulation tool is also adapted

to perform nanoindentation experimentation. Using this bridged FE-MD sitnulation tool, nanoindentations are perfonned much tnore effectively than the MD simulations while saving substantial computational simulation time. While the MD sitnulation experienced difficulties capturing the behaviour of the system during indentation especially at faster indentation speeds, the bridged FE-MD n1ethod is capable of reaching a state of equilibrium within a single step for each indentation depth interval analyzed throughout the nanoindentation. Although the hardness values for these simulations cannot be obtained without larger scale simulations using more pov1erful con1putational resources, the simulations provide insight into the behaviour of the copper nanon1aterial during nanoindentation. As a result, it is clear that the bridged FE-MD nanoindentation tool is much 1nore effective for executing nanoindentation simulations than the traditional MD tnethodologies.

iii

Acknowledgements

I would like to take this opportunity to first thank my supervisor, Dr. Kamran Behdinan, and my co-supervisor, Dr. Zouheir Fawaz, who have both been very suppo1iive and provided much guidance throughout the past two years. I would also like to thank Dr. Kai-Uwe Bletzinger and Dr. Roman Lackner, who gave me the opportunityto study with them in Munich, Germany at the Technical University of Munich for four months during the sun1mer of 2008. I am very grateful for the privilege to be able to work on this research at this esteemed university and am thankful that I was welcomed there with .open mms. I would also like to thank all my friends and colleagues, for their guidance and helping n1e stay motivated with their words of encouragement. Lastly, I would like to thank my family, most notably my parents, for all their love and support throughout my life. They have always pushed 1ne to be the best that I could be and I am sure that I \vould not have been able to acco1nplish half as 1nuch without them. I would like to dedicate this thesis to tny Zaidy, who has recently passed away from pancreatic cancer. Despite being diagnosed with a tem1inal fonn of cancer, his continued work ethic and positive attitude was truly re1narkable. He has always been of great inspiration to tne and \Vill be sadly missed.

iv

Table of Contents

1.

Introduction ················o&&$$0000000&&&&0000 ··········oooooo~~··································oooo· o Goo··············&&$$00000000. 1

2.

Molecular Dynamics Nanoinde.11tation ueo···oouu·uu··········--oo····u .. oe·······oouu·u····u··u·u .....
2.1. 2.2. 2.3.

0000

4

Molecular Dynamics Introduction .................................................................................. 4 Embedding Atom Method for Interatomic Potential ....................................................... 5 Custom Molecular Dynamics Code Nl_MD_V_7_00..................................................... 7

2.3.1. MATLABTM Function NI- MDV -7 -00 .................................................................... 7 2.3 .2. MATLAB TM .Crystal Structure Functions ................................................................... 8 2.3.3. MATLABTM Function Indenter_Design_V_7_00 .................................................... 13 2.3.4. MATLABTM Function Indenter- MoveV -7 -00 ...................................................... 18 2.3.5. MATLABTM Function ContactV -7 -00 .................................................................. 18 2.3.6. MATLABTM Function Contact Area V 7 00 ......................................................... 21

----

2.3.7. MATLABTM Function Force- Sun1mationV -7 -00 ................................................. 23
2.4.

A1olecular Dynamics Periodic Boundary Conditions ...................... .. ........... ................ 23 Additional Nanoindentation Theory ........................ .. ................................................... 25

2.5.

3.

lVIolecular Dynanucs Nanoindentation Results ... m.oeeoo·· ... ··n······.u········ou········ooouum··ou 27
3.1. 3.2. Molecular Dynamics Nanoindentation Introduction ................ ,. .................................. 27 Molecular Dynamics Sensiti-vity AnaZvsis ..................................................................... 28

3.2.1. Temperature Sensitivity Analysis ............................................................................. 29 3.2.2. Force Sensitivity Analysis ........................................................................................ 31 3.2.3. Molecular Dynan1ics Displacen1ent Sensitivity Analysis ......................................... 33

3.2.4. Clamping Sensitivity Analysis .................................................................................. 38
3.3. 3.4. 3.5. Afolecular Dynamics Nanoindentation Sirnulation Conditions ............................... ..... 39 Molecular Dynamics Spherical Indenter Results ......................................................... 41 Molecular Dynarnics Berkovich Indenter Results ..... ...... .............................................. 43 Molecular Dynamics Square Pyramidal Indenter Results............................................ 45 Disc. u ssion ...... ........ .. ........... ........... ... ......... .......... ..... ........ ......................... ................. .. 47
v

3. 6.
3. 7.

3. 8.

Chapter Summary ......................................................................................................... 50

4.

Bridged Finite Element- Molecular Dynantics Nanoindentation .... ouu·······w····ooo·· .. no 51
4.1. Bridged Finite Elernent- Molecular Dynamics Introduction ...... .......... ...................... 51 Traditional Finite Elements .Method Theory ............................................... .................. 52

4.2.

4.2.1. General Form of Finite Element Method Simulations .............................................. 52 4.2.2. General Form of a FEM Stiffuess Equation ............................................................. 53 4.2.3. Traditional FEM Discretization Scheme .................................................................. 55 4.3. Bridged Finite Element- Molecular Dynamics Theory ...... ,. ................ ,. ..................... 57

4.3 .1. Bridged Finite Eletnent - Molecular Dynamics Discretization Scheme .................. 57 4.3.2. Embedding Atom Method Potentials in Bridged Finite Elements- Molecular Dy11a1nics .................................................................................................................. 61 4.4. 4.5. 4.6. Custom Finite Elenzent-lvfolecular Dynamics Code FE_MD_V_7_00 ...................... 62 Custom Finite Element- Molecular Dynamics Nanoindentation Code Nl- FE- MD-V -7 -00 ..................................................................................................... 63 ChapterSumntary ......................................................................................................... 65
ooouooo . . . . . . u . ····· u . . . . uo ··

5.

Bridged Finite Element - lVIolecular Dynamics N ano.indentation
5.1. 5.2.

66

Bridged Finite Element- Molecular Dynamics Nanoindentation Introduction .......... 66 Bridged Finite Element -Molecular Dynamics Sensitivity Analysis ............................ 67

5.2.1. Indenter Incretnent Size Sensitivity Analysis ........................................................... 67
5.2.2. Indentation Depth Interval Size Sensitivity Analysis ......................................... ,. .... 69 5.2.3. Bridged Finite Eletnent -Molecular Dynamics Displacement Analysis .................. 70 5.3. 5.4. 5.5. 5. 6. 5. 7. 5.8. Bridged Finite Element -:A1olecular Dynamics Simulation Conditions ....................... 75 Bridged Finite Elernent -.A1olecular Dynamics Spherical Indenter Results ................. 77 Bridged Finite Element -Molecular Dynamics Berkovich IndenterResults ..... ., ......... 78 Bridged Finite Element -Jvlolecular Dynamics Square Pyramidal Indenter Results ... 79 Discussion and Comparison betvveen Bridged Finite Element -Molecular Dynamics Simulations and Molecular Dynamics Simulations ...................................................... 80 Clza]Jter Summary ......................................................................................................... 82

Vl

Appendix A - Flowcharts for Molecular Dynamics Code ··m····ooo·oeooo····muo···m··mou·m·mm· 88 Appendix B - Flowcharts for Bridged FE-MD Code ··········mm····meoo·······m·m······m··u···m··· 91

vii

Table of Figures
Figure 1 -Traditional and Partial Unit Cells for HCP metals .............................................. .... ~ ... 12 Figure 2- Three Dimensional and Overhead Views of a Berkovich Indenter ..................... ,. ...... 15 Figure 3- Three Dimensional Vievv of Pyramidal Indenter ......................................................... 17 Figure 4- Geometry of Spherical Indenter ................................. ,. ............................................. .. 21 Figure 5 -Two-dimensional representation of Periodic Boundary Conditions ........................... 24 Figure 6 - Saraev and Miller's Hardness Graph forCopper Substrates with Nickel Coating ..... 28 Figure 7- Force vs. Indentation Depth Graph for 0 K to 600 !( ....................... ........ ...... .......... ,.. 30 Figure 8- Force vs Indentation Depth Graph for 600 K to 1300 K .................................... ,. ....... 31 Figure 9- Force Sumtnation Method Compatison...... ........... ................................... ................... 32 Figure 10- Cotnparison of Clamping Techniques using MD Simulations .................................. 39 Figure 11- MD Results using Spherical Indenter with Diameter ofFourUnit Cells .................. 41 Figure 12 -MD Results using Spherical Indenter with Diameter of Five Unit Cells .................. 41 Figure 13- MD Results using Spherical Indenter with Diameter of Six Unit Cells .......... ,. ........ 42 Figure 14- MD Results using Spherical Indenter with Diatneter of Seven Unit Cells .......... ,. ... 42 Figure 15 - MD Results using Berkovich Indenter with Base of Length Four Unit Cells,. ......... 43 Figure 16- MD Results using Berkovich Indenter with Base of Length Five Unit Cells ........... 43 Figure 17 - MD Results using Berkovich Indenter with Base of Length Six Unit Cells ............. 44 Figure 18 - MD Results using Berkovich Indenter with Base of Length Seven Unit Cells ......... 44 Figure 19- MD Results using Pyramidal Indenter with Base Four by Four Unit Cells ........ ,. .... 45 Figure 20- MD Results using Pyratnidal Indenter with Base Five by Five Unit Cells ............... 45 Figure 21 - MD Results using Pyramidal Indenter with Base Six by Six Unit Cells................... 46 Figure 22 - MD Results using Pyramidal Indenter with Base Seven by Seven Unit Cells .......... 46 Figure 23 - One dimensional two-node spring element ............................................................... 53 Figure 24- Assembly of two-body potential linear spring elements ........................................... 55 Figure 25-- Bridged FE-MD discretization scheme for element centred about Node 3 ............... 58 Figure 26 -Increment Size Sensitivity Test Applied Force Results ............................................. 68 Figure 27 - Indentation depth Interval Size Sensitivity Analysis Applied Force Results ............. 69 Figure 28- FE-MD Results using Spherical Indenter with Dian1eter of Four ·unit Cells ............ 77

VHl

Figure 29- FE-MD Results using Spherical Indenter with Diameter of Five Unit Cells ............ 77 Figure 30- FE-MD Results using Berkovich Indenter with Base of Length Four Unit Cells ..... 78 Figure 31 - FE-MD Results using Berkovich Indenter with Base of Length Five Unit Cells ..... 78 Figure 32- FE-MD Results using Pyran1idal Indenter with Base Four by Four Unit Cells ........ 79 Figure 33 -FE-MD Results using Pyramidal Indenter with Base Five by Five Unit Cells ......... 79 Figure 34- Progran1 Execution Flowchati for MATLAB TM function NI_MD_ V_7_ 00 ............ 88 Figure 35 -Program Execution Flowchart for MATLABTM function Indenter_Design_V_7_00
······················································································································································· 89 Figure 36- Program Execution Flowchart for MATLAB TM function Contact_V_7_00 ............. 90

Figure 37 -Program Execution Flowchart for MATLAB TM function NI_FE_MD_V_7 _ 00 ...... 91

ix

Table of Tables
Table 1 - Lattice Constants for Copper for Tetnperatures Ranging from OK to 1300K .............. 29 Table 2- Atotnic Positions at Equilibrium Step #1 fron1 MD Simulations ................................. 34 Table 3 -Atomic Positions after Indentation Step from MD Simulations ................................... 35 Table 4 - Atotnic Positions at Equilibrium Step #2 from MD Simulations ................................. 36 Table 5- Atomic Positions at Equilibrium Step #3 from MD Simulations ................................. 37 Table 6- Atotnic Positions at Equilibrium Step #1 from Btidged FE-MD Simulations ............. 71 Table 7 - Atomic Positions after Indentation Step frotn Bridged FE-MD Sitnulations ............... 72 Table 8- Atomic Positions at Equilibrium Step #2 frotn Bridged FE-MD Sitnulations ............. 73 Table 9- Aton1ic Positions at Equilibrium Step #3 from Bridged FE-MD Simulations ............. 74

X

Nomenclature
English Symbols
a
aberk

Lattice constant of crystal Width of Berkovich indenter base Indenter base, including the atomic radius Width of square pyramidal indenter base Acceleration of aton1 in x-direction at timet Contact area of indenter Square Pyramid indenter edge length Height ofHCP unit cell Compliance of a 1naterial Differential Operators Displacement of atom 1 in X-direction Indenter elastic modulus Reduced elastic modulus Substrate elastic tnodulus Inten1al force on atom 1 in the x -direction External force on atom 1 in the x-direction Force on atom i in p-direction Indenter height Contact depth of indentation Material hardness Spring stiffness coefficient Boltztnann's constant Stiffness tnatrix Kinetic energy on atom i Length of indenter base

ai
apyr

ax(t)

Ac
b

c
C
d,

a

a1x
Ei

Er

E5

f1x
F1x

FPi

h
he
H

k

kb K
K Ei

m
Ntot

Atomic mass Total nutnber of atoms
xi

P1

Vertex #1 for planar indenter design Distance between atoms i and j Cartesian vector on crystal lattice position #1

rsphere

Radius of spherical indenter Atomic radius

s
t

Stiffuess of a n1aterial Tin1e Temperature Potential energy of element 1 Potential energy of node i Potential energy of element between atoms i and j Total potential energy of an atomic system Velocity of atom in x-direction at timet X-coordinate at titne t Centre of indenter in x-direction Atomic position of atom i in x-direction Distance in the y-direction from the base to tip for Berkovich indenter

T

u1 ui uij
Utotal

Vx(t)
x(t)
Xcen

Greek Symbols
Total potential energy of an atom i
f.Pij

General pair potential between atotns i and j Poisson's ratio of indenter Poisson's ratio of substrate Increment operator Change in atomic position of node 1 Energy density on atom i resulting from atom j

Ptotal,i
¢ij
tp
()

Total energy density of atom i EAM pair potential between atotns i and j EAM etnbedding function Indenter Angle

xii

List of Acronyms

AFM BCC DFT EAM FE FE-MD FEM FCC HCP MD PBC

Atomic Force Microscopy Body Centred Cubic Density Functional Theory Etnbedding Atom Method Finite Elements Finite Element - Molecular Dynan1ics Finite Element Method Face Centred Cubic Hexagonal Close Packed Molecular Dynamics Periodic Boundary Conditions

xiii

List of Units

A
GPa
K.

Angstroms (10- 10 m) Giga Pascals (10 9 Pa) Degrees Kelvin kilograms Nano-newtons (1 o-9 N)
9 N anometres ( 1om)

kg nN

nm
m
s
0

Metres Seconds Degrees

xiv

liP Introduction
Over the past two decades, nanomaterials have revolutionized the field of matetials. N anomaterials are defined by a grain size of less than 100 run in at least one coordinate. Due to their miniscule grain size, nanotnaterials have been found to exhibit superior properties to traditional materials. These superior properties include but are not limited to; in1proved hardness, higher tensile strength, longer fatigue life, and better ductility. Given these properties, nanomaterials are becoming increasingly popular for use in con1mercial products. Research studies focusing on nanomaterials have been successful in many areas including biomedicine, [l-21 gas detection,I 31 and water disinfection.f 41

Due to the size of nanomaterials, .it can often be challenging to analyze nanon1aterials because at the nano-level, traditional experimentation often cannot be used. At the 1nacro-level, tensile tests are tnostly used in order to quantify the properties of a tnaterial. At the nano . . level, however, it is very expensive and difficult to perform these tests. As a result, nanoindentation has become one of the most popular methods used to determine nanomaterial properties such as elastic 1nodulus, hardness, and stiffness. A nanoindentation experitnent is perfonned by using an indenter to push down on a material at a constant speed. Based on the response of the material to this indentation, one can establish the properties of the material. Most commonly, in nanoindentation experitnents atomic force microscopy (AFM) is used to capture the response of the nanomateriaL These very high-resolution scanning probe microscopes provide excellent resolution even at a fraction of a nanotnetre and thus, can be used to accurately determine nanomaterial properties. [SJ

Despite the success of nanoindentation expelitnents, the process is still tremendously expensive to perform. Therefore, tnany studies have been performed through the use of computational nanoindentation simulations. Using these computer simulations, users are able to drastically reduce costs and tnore efficiently investigate a wide array of tnaterials at various conditions. The most common method used to perfonn computational atomistic sitnulations is using molecular dynamics (MD) simulations. As a result, MD nanoindentation simulations have becotne quite popular as a more cost effective replacement ·to nanoindentation experimentation. MD

nanoindentation simulations have been successful in studies dealing with a wide atTay of materials such as single walled carbon nanotubes, f6J poss materials, [7] silicon carbide, rs- 91 and copper thin fihns.[IO]

Prior to the comtnencen1ent of this research, an Embedding Atom Method (EAM) numerical fitting procedure for pure face-centred cubic (FCC) and body centred cubic (BCC} metals was developed by Narayan, Behdinan and Fawaz. This research employs the EAM fitting procedure using a custom-made MD software to successfully predict the thermal and elastic properties of pure copper. [Jl) Chapter 2 discusses the theory of the custom-made MD software developed by Narayan, Behdinan and Fawaz and its application for this research to execute nanoindentation simulations. In Chapter 3, this code is tested and large scale nanoindentations are performed using three different types of indenters.

In recent years, multi-scale simulations have been implemented to improve the effectiveness of MD computer simulations. These tnulti-scale methods combine both nano-level and macro-level computational tools to more efficiently model the macro properties of large aton1ic systems. For example, a computational atomistic tool such as MD is en1ployed to model the behaviour of atotns or molecules at the nano level, and that information is then used to dete1mine the behaviour of the system at the micro and/or macro levels (often using the finite element method). These sitnulations have enabled users to greatly reduce computational tilne and resources while still .obtaining accurate results. Recent research using multi-scale methods have explored such areas as material science,P 21 robotics, fl3J biomedicine)14- 161 fractional kinetics, [l7J turbulence tnodeling,flS] and fluid dynamicsY 9-201 Multi-scale sitnulations have also been applied to nanoindentation simulations as shown in research studying thin fihns/ 21 ] cyclic indentation,£221
231 plasticity, £ and nanocavities"£241

A novel bridged finite element - molecular dynatnics (FE-MD) 1nethod was previously developed by N m·ayan in his thesis entitled, "A numerical fitting procedure for the Embedding Atotn Method Interaton1ic Potential and a Bridged Finite Element - Molecular Dynamics for Large Atomic Systems." In this research, a unique discretization scheme was developed which enabled the atomic systems to be modeled more effectively. This bridged FE-MDtnethod was
2

found to produce ahnost identical results to traditional MD shnulations while requ1nng significantly less simulation time.£ 251 In this research, the blidged FE-MD code is adapted to perfotm nanoindentation simulations. Chapter 4 discusses the theory of the bridged FE-MD software, and the development of the FE-MD nanoindentation functions. In Chapter 5, the bridged FE-MD nanoindentation method is tested, full-scale simulations are perfonned, and the two simulation methods are then cotnpared. Finally, Chapter 6 concludes the thesis as the results are reviewed and future applications are discussed.

3

2. Molecular Dynamics N anoindentation

2 . 1$

Molecular Dynamics Introduction

Even with today' s technology, it is still not possible to directly observe the behaviour of individual atoms within a large system. Therefore, computer programs have been developed to shnulate atotnic behaviour at the molecular level. The most common n1ethod used for atomistic simulations is tnolecular dynamics (MD). Molecular dynamics is a time-dependent tnethod that integrates equations of motion to simulate the behaviour of individual atoms for a variety of conditions.

The basic algorithm of all molecular dynamics shnulations is as follows:

1) Define the initial paran1eters of the simulation.

2) Initialize the systetn (i.e. the initial positions and velocities of the atoms are defined). 3) Calculate the forces on all aton1s. 4) Integrate the equations of motion to determine new positions and velocities for the titne step. 5) Record the relevant information. 6) Repeat steps 3, 4 and 5 until all tin1e steps are completed.

The force calculation is the most labour-extensive portion of most MD simulations. To calculate the force on a particular atom, one must consider the force contributions of all its neighbouring atoms. Therefore, one must first calculate the distance between all atoms. In n1ost MD simulations, a cut-off distance is used. If distances between atoms are found to exceed the cut-off distance, the forces are assumed to be negligible. A general form of the force between two atoms in the x-direction is shown in Equations 1-2, \Vhere u is the potential energy between two atotns, and r is the distance between those two atotns.

4

F (r) Jx

= _ au(r)

ax

[1] [2]

F
Jx

(r) = _ (:) au(r) r ar

To more effectively model interatomic forces, several advanced methods have been developed. Today, n1ost commonly used interatomic potential functions include the Lennard-Jones pairpotential, the Tersoff potential, and the En1hedding Atom Method (EAM) potential functions. EAM potentials are the 1nost effective n1ethod with \Vhich multi-body metallic systems are modeled. [26 ] In this research, only copper substrates were investigated. Since copper is a face centred cubic (FCC) metal, EAM potentials were used to model the interato1nic interactions in this research. The theory ofEAM potentials is discussed in greater depth in Section 2.2 below.

In order to integrate the equations of motion, a Taylor series expansion is implemented. The xcomponent of a particle's position in space at titne tis referred to as x(t), while its velocity and acceleration in the x-direction are referred to as vx(t) and ax(t). Using the Verlet algolithm, one of the effective algoritluns, the following second order Taylor expansions are defined in their simplified fotm.[ 27 ] Silnilarly, the equations can be applied in the same manner to the y and zdirections. The theory used in Equations 3 and 4 is the basis of the behaviour of the atoms throughout the code.

x(t Vx(t

+ llt)

~ x(t)

+ llt · Vx(t) + 2
l:lt

llt 2

ax(t)

[3]
[4]

+ L\t)

~

Vx(t)

+ Z [ax(t) + ax(t + L\t)]

2e2..

Embedding Atom Method for Interatomic Potential

The Embedding Atom Method (EAM) is the most effective 1nethod for detennining interatomic potentials for metallic systems. EAM potentials are based on the Density Functional Theory (DFT), a quantutn n1echanics theory derived frotn the understanding that the energy of a collection of atotns can be expressed by a functional of their density. In n1ost interatomic
5

potential functions, the theory of pair potentials is used as the individual forces on atoms can be calculated and the total potential is simply the summation of the individual atomic forces. The total potential energy of an atotn,
(/Ji,

is a function of the distance between atoms i and}:

({J;

=

L
j=l j71=i

N

(/J;j

[5]

For tnetallic systems, the valence electrons are able to move freely throughout the system in \Vhat is often referred to as a 'sea of electrons'. As a result, rather than calculating the aton1ic forces as pair potentials, one must also look at metallic systen1s as multi-body potentials. The EAM potential function, proposed by Daw and Baskes,[28-291 and later used by Foiles, Daw and Baskes to determine the functions for specific Face Centred Cubic (FCC) metals,[ 30] combines the pair potential and the multi~body potential to determine the total potential energy of the system. They proposed that the total potential energy of a tnetallic systetn is a su1n of the en1bedding energy,

Li Fi (Ph,i), and half the pair potential energy. The e1nbedding function, as shown in Equations 6
and 7, is a function of the electron density. In Equation 7, the variable
\f, known as the en1bedding function, refers to the required energy to embed a nucleus within the

sea of electrons.

Utotal

=

L
i

F;(Ptotal,;)

+ ~L cf>(rij)
i,j

[6]

i=tj

Utotal

=

~.[~ ~
J=f:.l

cf>(ru) + '¥ tp(ru) ]··
j=ti

[7]

6

2..3..

Custom Molecular Dynamics Code NI_MD_V_7_00

Prior to the cotnmencement of this research, extensive work was performed in the areas of tnolecular dynamics and bridged Hnite elements. The research performed in this thesis is largely based the research of Narayan, Behdinan and Fawaz in which EAM potential functions were fitted using a custom-made MD simulation tooL[Il] To enable nanoindentations to be perfotmed using this research, the aforementioned software was significantly altered. Despite these alterations, the essentials of the MD portion of the code were unchanged. The code was progrmnmed using MATLABTM, a comtnonly used engineering programming tool due to its ability to easily carry out matrix operations. Sections 2.3 .1- 2.3. 7 will outline significant alterations made to the original molecular dynamics code MD_ V_7_ 00 to enable MD nanoindentation simulations to be perfonned.

2 . 3$1 . MATLABTM Function NI MD- V-7 00
In order to perform the nanoindentation process, a number of functions were developed. NI_MD_V_7_00 is the principal function used to perfonn the nanoindentation procedure. As previously mentioned, this function is an adaptation of the previously designed function MD_ V_7_ 00. While NI_MD_V_7 _ 00 is unable to perfonn the entire nanoindentation process itself, it is the function that ties all other functions together. The n1ajor tasks that are perfonned in this function are as follows:

1) Define the initial conditions for the simulation. 2) Read the positions and velocities of the substrate as defined in the function FCC_Gen_V_7_00, BCC_Gen_V_7_00, HCP_.Gen_V_7_00 or Dia_Gen_V_7_00. 3) Calculate the distances between each atotn and its neighbouring atoms and store the distances that are less than the defined EAM potential cut off distance. Use the EAM potential function, BAM_potential_V_7_ 00, to determine the interatomic forces. 4) Solve the forc.es on each of the atoms using the predetermined distances between each atom and its neighbouring atoms.
7

5) Calculate the current positions and velocities of each of the atotns using Taylor series expanstons. 6) Apply the periodic boundary conditions to the system. 7) Write relevant information, such as positions, velocities and forces. 8) Repeat steps 2 through 7 for the required steps of the indentation procedure.

In Step 5, calculating the change in positions, velocity and acceleration for the next tin1e step is discussed. During the indentation, for son1e atoms directly contacting the indenter, this step will not be included. Rather, for these atoms, their olientations will be dictated by contact analysis MATLAB TM function Contact_V_7 _ 00. This algorithm .will be discussed in detail in section 2.3.5.

Additionally, MATLAB TM function NI_MD_V_7_ 00 simulates the multiple stages of a nanoindentation procedure. Prior to nanoindentation, the function executes time steps until the forces acting on the system are relatively unchanged and it is assumed that the systetn has reached equilibrium. At this point, the nanoindentation process is initiated. Once the indentation is complete, one can also sin1ulate a relaxation period· in · which an equilibrium step is first implemented while the indenter position is unchanged, followed by a final equilibrium step following the removal of the indenter. This process will be itnplemented in section 3.2.3 when the author investigates the effects of nanoindentation on individual atomic positions. For a flowchart outlining the complete process that MA TLAB TM function NI_MD_V_7_ 00 executes, the reader can consult Appendix A.

2&3 . 2 . MA TLABTM Crystal Structure Functions

In the research conducted by Narayan, Behdinan and Fawaz, the geotnetries of Face Centred Cubic (FCC) and Body Centred Cubic (BCC) lattice crystals were definedP 11 FCC and BCC crystal structures are the crystal structures most conunonly found in nature and their inclusion in the research is expected. However, typically, most nanoindentation experiments use diamond indenters because of their superior hardness and resistance to scratching. Furthermore, to make

8

the code more all encompassing, the geometry of Hexagonal Close Packed (HCP) tnetals was investigated. Therefore, two additional functions were created to define the crystal structures for diamond and HCP metals. The functions defining each of the crystal structures dealt with in this research will be defined in detail in future sections.

MATLABTM Functions FCC_Gen_V_7_00, BCC_Gen_V_7_00

Since the two functions defining the geotnetries of FCC and BCC metals were established in the work of N·arayan, Behdinan and Fawaz, only a brief summary of the methodology used in constructing these functions will be discussed. The tnethodology for all crystal structure functions are as follows:

1) Define the initial positions of a partial cell (in the case of FCC and BCC metals, one~

eighth cell was used). 2) Duplicate the partial cell in the x, y and z-directions for the defined number of cells. 3) Define the velocity of each of the atoms using a Gaussian probability density function.

For the initial velocities of the atoms that are defined in these functions, Equations 8-10 were used. In these equations, 1n is the mass of each atotn, k 8 is Boltztnann's constant, (1.3806503
1
x

o-23

m 2kg/s2K), T is the temperature of the system in degrees Kelvin, and Ntot is the total

number of atotns in the system. Using these equations, the velocity distribution of the entire system is established. As one would expect, the kinetic energy of the system is largely dependent on the initial ten1perature of the system, as shown in Equations 11-13.

f(vx) =

~exp(-;::;)

[8]

f(vy) =

~exp(-7:::)
9

[9]

~ ( f(vz) = ~2Jik;Texp 1

2

mv ) 2k:T

[10]

1 2 - 1 ( 2) - 1 2 - 1 zmi(Vx )avg- zmi Vy avg- z1ni(Vz )avg- -zksT

[11] [12]

KEavg,t·=-m· 2 t
Ntot

(C v x,L·2) avg +v· C y,t 2) avg +v· C z,t 2) avg ) =-kT 3 B 2

KEtotal,l· =

I

-m·l · v x,l·2) avg + (v y,l·2) avg + (vz,l·2) avg )

i=1

1 2

(c

~ -Ntot k B T 2

3

[13]

MATLABTM Function Dia- GenV -7 -00
For the indentations that were performed throughout this work, a dirunond indenter was used to indent a copper substrate. The lattice sttucturefor diamond is dian1ond cubic crystal. This crystal structure, while first discovered in dian1ond, has also been found to be present in several elements in group IV of the periodic table, such as tin, silicon, and germanium. To model the lattice structure of diamond cubic crystal matetials, the function Dia_ Gen_ V_7_ 00 was developed. Diamond cubic crystal lattice structure, while similar to that of FCC n1etals, is slightly more complex. For FCC and BCC metals, the lattice parameters were defined by first investigating a one-eighth cell. However, in a diamond cubic crystal structure, since the pattern that occurs in a one-eighth cell is not repeated throughout the lattice structure, a partial unit cell was determined to be a more effective option. The atmns that characterize this partial cell are defined in Cartesian coordinates as shown in Equation 14.

10

r; = [0 0 0] r; = [o a 2 ~] r3 = [a 2 0 ~] ~ [a a o] r4 = 2
2

rs = [a 4
T6 =

a

4

~]

[14]

[3: -3a 4 ~] 3a ~ [a r7 = 4 4 34a] ~ [3a a rs= 4 - 3:J
4

In the Equation 14, 'a' is the defined lattice size of the diamond unit cell. Using this partial cell, the diamond cubic lattice stn1cture for the entire material can then be defined by replicating the eight atoms defined above and ·translating them as necessary. These atomic positions are then stored in a text file to be accessed in future functions.

To determine the velocities of atoms using the diamond cubic crystal structure, the process is identical to the one described above in section 2.3.2.1. For the nanoindentations performed in this thesis, the indenter was · assumed to be rigid. As a result, the atoms within the dian1ond indenter were assumed to · have no velocity or kinetic energy. A detailed explanation of this decision is discussed in Section 3.1.

MA TLAB TM Function HCP_ Gen_V_7_00

The last crystal structure dealt with in this research is Hexagonal Close Packed (HCP). The HCP lattice structure is observed in metals such as zinc, titanium, beryllium, and magnesium. As in the function Dia_Gen_V_7 _00, a one-eighth unit cell could not be used to capture the nature of

11

the lattice structure for HCP tnetals. Since FCC and BCC lattice structures are cubic, the atoms can be modelled with respect to the x, y and z axes. However, the HCP unit cell is hexagonal in shape, hence the atoms are not easily defined by their relationships to the x, y and z axes. To overcome this problem, the unit cell for the HCP crystal structure was defined slightly differently. In HCP metals, the crystal structure is similar to that of FCC metals, but there is a shift in the positions of the atoms in each layer. Consequently, to orient the unit cell along the x, y and z axes, rather than looking at the entire unit cell, a smaller unit cell was constructed by creating a rectangular prism out of five atoms in the bottom row of the unit cell and the original height. A traditional HCP unit cell and the modified HCP unit cell are displayed in Figure 1.

a
Figure 1- Traditional and Partial Unit Cells for HCP metals

The length of the n1odified unit cell is solved using the Pythagorean Theorem as shown in Equation 15. The distance between atoms in the y-direction in successive layers of atoms is calculated in Equations 16.

l = 2

Ja2- (I/= ~a

[15]

Ay=FG?
the positions of which are shown in Equation 17.
12

[16]

Using the modified unit cell, a design process using a modified one-eighth cell was implemented,

?I==
~ rz ==

[0

0
l
2

0]

[a 2

o]

r; = [o
~

-Lly l - - Lly 2

r4

= ·Z

[a

il
~]

[17]

While creating a function to characterize the crystal sttucture of HCP metals will allow the softw-are to becotne more all-encompassing, in this research, simulations will not be performed using this crystal structure. For HCP metals, the potential functions are much more complex and therefore, significant work must be done to enable their itnplementation in future research.

2.3.3. MA TLABTM Function Indenter_Design_V_7_ 00

To perform nanoindentation sitnulations successfully, the construction of indenter is paramount. MATLABTM function Indenter_Design'-V_7 _ 00 deals with aU matters concerning the construction and design of the indenter. The first concen1 with respect to the indenter design is the material chosen for the indenter. Based on the nature of the function, indenters tnay be constn1cted using any of the four crystal sttuctures defined above in Section 2.3 .2.

Once the lattice structure for the indenter is established using one of the crystal structure definitions discussed in Section 2.3.2, the indenter shape could then be characterized. While there are several different types of nanoindenters con1monly used today, three of the more popular nanoindenters used today are the spherical, Berkovich, and square pyratnid indenters. In this research, these three indenters are investigated. The geon1etry of the three indenters is defined by the following three functions; Spher_Geo_ V___7_ 00, Berk_Geo_ V_7_ 00, and Pyr_Geo_V_7 _OO. ·These functions sort through each aton1 individually to determine whether it fits within the geometry of that specific indenter. In the research of Narayan, Behdinan and Fawaz, MATLABTM function CRACK_VOID_V_7_00 was used to create a residual function using sytnbolic MA TLABTM to retnove atoms present in a specific geometry frotn the systetn. In

13

this function, the same theory is used to remove those atoms that are outside the specified geometry from the system. The functions designed for each of the indenter types are discussed future sections of this chapter. A flowchat1 illustrating the indenter design process can be found Appendix A.

MATLABTM Function Spher_Geo_V_7_00

The first indenter geometry defined was the spherical indenter using MATLAB TM function Spher_ Geo_ V_7_ 00. The geometry of the spherical indenter · is defined in Equation 18. The subscript 'cen' refers to the position of the centre of the sphere in the specified direction, while the variable i refers to the atom being investigated.

[18]

Using the geometry ofthe sphere, the function evaluates the position of each individual atotn to determine \Vhether it lies within the indenter. For large indenters, the contact analysis during nanoindentation is very time consutning process. As a result, to speed up the simulation, both the top half of the sphere and atoms in the centre of the sphere are also retnoved from the indenter. These atoms cam1ot contact the substrate and therefore, their removal does not negatively impact the simulation results.

MATLABTM Function Berk Geo V 7 00

Berkovich indenters are the most con1n1on indenters · used in modem nanoindentation experin1ents and simulations. A Berkovich indenter is a triangular pyramid in which the angle between the edge and the normal is 65.3 degrees. In Figure 2, diagrams of a Berkovich indenter in three-dimensional and overhead views are . displayed. In contrast to the process used to construct the spherical indenter, the approach for the Berkovich indenter was altered slightly due to the complexity of its geometry. In this case, it is not possible to define one equation that will

14

characterize the entire geometry of the indenter as was done for the spherical indenter. Instead, MA TLAB TM function Berk_ Geo_ V_7_ 00 characterizes the geotnetry of Berkovich indenters by defining three planar equations.

To determine the planar equations for each of the three faces of the indenter, the positions of each of the vertices ·were first identified. Using the overhead view of the Berkovich indenter as shown above in Figure 2 1, the geometry of a Berkovich indenter was established. In Figure 2, ai is the width of the base, l is the length of the base, z is the distance in the y-direction from the base to the indenter tip, and h is the height of the indenter. These variable definitions are shown in Equations 19-21, belovv. Next, the four vertices for the Berkovich indenter were determined and are shown in Equation 22 belo\v. Finally, the equations of a plane were developed using Equations 23-27 as illustrated below.

l=2ai
Zberk

J3

[19] [20] [21]

= 2t tan 30o

a·

h=

ai

cos(65.3°) ai . =----2sin(65.30) 2 tan(65.3°)

1

http://www.hindawi.com/floats/742569/figures/742569.fig1.xht
15

Pt

= [0 = [a· -f

0 0

0] 0]

Pz =[a P3

o]
Zberk

[22]

P4 =

[a· i

h]
0 [23] [24] [25]

Ax

+ By + Cz + D =

A= Yt (zz- z3)
B = z 1 (x 2
-

+ Yz(z3- z1) + y3(z1- z2)

D = -

+ z 2 (x3 - x 1 ) + z3 (x1 - x 2 ) C = X1 (Yz- Y3) + Xz(Y3- Yt) + X3(Y1- Y2) [xl (yzz3 - Y3Zz) + Xz (y3z1 - Y1 z3) + X3 CY1 Zz x3 )

[26]

YzZt)]

[27]

Using the three plane equations described above, the atoms are separated based on their locations relative to the boundaries of the three planes. If an atom was found to be outside the boundaries of the three planes it was removed from the system. As shown the above equations, the indenter tip was designed to be facing in the positive
z~direction.

In order to perform the indentation, the

indenter is reflected so that the tip is facing tovvards the substrate. The manipulation of the indenter is discussed in more detail in Section 2.3 .4 below.

MATLABTM Function Pyr~Geo_V_7_00

The third type of indenter used in this research is a square pyramidal indenter. A diagrrun of a square pyratnidal indenter is sho\vn in Figure 3. The approach used by MA TLAB TM function Pyr_Geo_V_7_00 \Vas quite similar to that ofMATLABTM function Berk_Geo_V_7_00. Once again, a planar approach was used to define the ·indenter faces and any atotns outside the planar boundaries were determined not to be part of the indenter.

16

Figure 3 -Three Dimensional View of Pyramidal Indenter

In Equations 28-30, the geometry of the square pyran1id indenter is studied. As shown in Figure 32 ,
ai

refers to the width of the indenter base, b refers to the length of the edge of the pyramid, l

references the height along the face of the pyramid, and h refers to pyramid height. It is important to note that '(} ', the angle of the pyramid face, must be larger than 45°. As shown in Equation 30, if an angle of less than 45° is used, the height of the pyramid will be an imaginary number. In this research, the value of 8 used for the square pyramid design was 54.74°. As can be calculated using Equation 30, this angle produces an indenter with height equal to the width of its base. Using the geo1netry of the square pyramid, the five vertices present on the indenter were defined as shown in Equation 31. The planar equations, as shown above in Equations 2327, were then used in order to characterize the planes needed to construct the square pyramid.
a·

b=

2 cose

l

[28]

[29]

[30]

P1 = [0
2

0

0]

[31]

http://www.analyzemath.com/Geometry_calculators/pyramid_l.gif

17

P2 = [ai P3 = [ai P4 = [0 Ps =

0
ai ai ai

0]

0] 0]

[a· j

2

h]

Again, as was done in MATLAB TM function Berk_ Geo_ V_7_ 00, the indenter was designed with its tip in the positive z-direction. As a result, this indenter must be reflected so that its tip will be facing toward the substrate.

2. 3.4 . MA TLAB TM Function Indenter- Move.....V-7 00
In order to orient the indenter as required, MATLAB TM Function Indenter_Move_V_7_ 00 is used. This function is very flexible as it allows the user to both move and reflect the indenter to any position or orientation in space. When Berkovich or square pyrmnidal indenters are used, the indenter must first be reflected. To do so, the centre of the indenter is first determined and for each atom, a new z-position is calculated that is of equal distance fi·on1 the centre of the indenter but on the opposite side of the centre. As well, this function is used to orient the indenter so that the centre of the indenter is directly above the centre of the substrate and that the nanoindentation will be perfotmed more effectively. Furthermore, when the indentation is taking place, it is used to lower the indenter into the substrate at the beginning of each time step.

2. 3.5 . MATLABTM Function Contact- V-7 00
The MATLABTM function Contact_V_7_ 00 is the most important function for the indentation procedure. This function determines if contact occurs between the indenter and the substrate and any substrate atoms being contacted are displaced accordingly. To detetmine whether contact is occulTing, MA TLAB TM function Contact_V_7_ 00 looks at each indenter aton1 and calculates the distance between it and each individual substrate atotn. If the calculated distance is less than the

18

radii of the indenter and substrate atoms, the two atotns are detennined to be in contact with one another.

In order to deal with the contact, MATLAB TM function Contact_V_7_ 00 separates all possible contact into three different scenarios. Each of these scenarios is dealt with differently and will be discussed in detaiL The three cases in which contact may occur are as follows:

1) Contact between one substrate atom and one indenter atom. 2) Contact between one substrate atom and two indenter aton1s. 3) Contact between one substrate atom and tnore than t\vo indenter atotns.

When dealing with contact, an iterative procedure was hnplemented using the bisection tnethod. The bisection method is a technique that iterates by cutting the bracketing interval in half. For every iteration, the tnidpoint is tested and if the required value is between the midpoint and the lower bound, the n1idpoint becotnes the new upper bound. Conversely, if the required value is between the midpoint and the upper bound, the midpoint becomes the new lower bound. This process is repeated until the value is within the required range for the iteration. This method is often criticized because numerous iterations are required for convergence. In this study, the bisection method is an excellent choice due to its simplicity and tremendous effectiveness.

When only a substrate aton1 is being contacted by only one indenter atom, dealing with the contact is quite simple. Here, the function first determines the angle of contact and compares it to a pre-specified angle. If the angle of contact is less than this specified angle, the substrate atom will be displaced only in the z-direction. Othernrise, the substrate atom is displaced radially as would be expected for any inelastic contact. For this radial displacement, an iterative procedure is ilnplemented in which a displacement factor is varied until the distance between the atoms is within the required lilnits. The decision to only displace contacted atotns radially for atotns contacted at an angle was tnade to ensure that the simulation would be more realistic. If all contact resulted in radial displacement, the bonds between the substrate atoms that are directly contacting the indenter ·would eventually break as the atoms would be pushed apart as the

19

indenter is lowered. While it may be expected that this would occur during high speed indentations, it is not expected for the indentation speeds analyzed in this research.

For the second case, the algoritlun is substantially tnore complex. This time, an iterative procedure is used to ensure that both indenter atoms are equidistant from the substrate atom as contact is occurring. Throughout the iterative process, the displacement of the substrate atom is calculated and stored in a temporary variable. If the distance between the substrate atom and an indenter atom · is less the contact distance, the substrate atom will be moved further from the indenter atom being examined. Similarly, if the distance between the substrate atom and an indenter aton1 exceeds the contact distance, the bounds of the bisection tnethod will be altered to ensure that the substrate atotn \Vill be moved closer to the indenter atom in question. Using the new position of the substrate of the atotn, the process is repeated until the distances between the substrate atotn and each of the two indenter atoms are within the specified range. Using this technique, aton1s may be tnoved signitl.cantly to ensure that the substrate atom would be equidistant fi·on1 the two indenter .atoms. Using this method, dislocations were found to ensue as atotns were displaced much faster than the indentation speed. Consequently, the displacement of the substrate atom was litnited so that it cannot exceed the indentation speed.

When an atom is contacting more than two indenter aton1s at once, the algorithm used to deal with contact is quite straight-forward. It is assumed that when contacting three or more atoms, the substrate atom will be locked in place between the indenter atoms. Therefore, the only displacement that will occur while the indenter is moving in the z-direction will be in the same direction. Thus, MATLAB TM function Contact_V _7_ 00 merely displaces a substrate atom by the indentation speed in the direction of contact if it is in direct contact with three or tnore indenter atoms. ·A flowchart describing the entire procedure undergone by MATLAB TM function Contact_V _7_ 00 can be found in Appendix A.

20

2. 3 . 6" MATLABTM Function Contact Area V 7 00

The process of detern1ining the hardness of a material through a nanoindentation simulation requires the identification of both the indenter's contact area and the force applied by the indenter on the substrate. MATLABTM function Contact_Area_V_7_00 was created to detennine the contact area at any point during the indentation procedure. Contact area is defined as a twoa dimensional projection of the area of the substrate that is being contacted by the indenter. The contact function, as described above, takes into account the radii of the diamond and copper atoms. When calculating the contact area, the radii of the diamond atoms are accounted for as well. Since the contact area is dependent on the geometry of the indenter, the calculations for the three types of indenters will be discussed independently in the sections below.

Spherical Indenter Contact Area

To calculate the contact area for the spherical indenter, the geometry of the sphere must first be understood. As can be shown in Figure 4/ the radius of the sphere and the radius of the cross-sectional axea form a right angle. If the indentation depth is known, the Pythagorean Theorem can be used to detem1ine the cross-sectional radius ·which can then be used to solve the area of the cross-section. In the calculations, the radius of the
of Spherical Indenter

diamond atoms is also taken into account. The process of calculating the contact area is shown below in Equations 32-34.

r

= rsphere + 1atm
-

[32] [33] [34]

R

= ~r 2 - (r- h) 2 = ~h 2 - 2rh
Ac = nR 2 = rr(h 2
2rh)

3

http://www.csm-instruments.com/fr/system/files/images/ab~25-photo7 .jpg

21

Berkovich Indenter Contact Area

For a Berkovich indenter, by using Equations 19-21 as defined above in Section 2.3 .3.2, the twodimensional projection of the contact surface can be solved as well. Since Berkovich indenters are triangulax in nature, by using the equation for the area of a triangle as shown in Equation 3 7, an expression for the contact area of the indenter was developed.

[35]
l = lberk

A
c

+ 2ratm 2 a·l -f3a· =-t-= __z._
2 4
a·
t

[36] [37]
[38] [39]

h=

2 tan(65.3°)

Ac

= 3{3h 2 tan 2 (65.3°) = 24.56197h 2

Equation 39 is commonly found in literature with respect to Berkovich indenters. It should be noted that this equation is only valid before the indenter is completely submerged within the substrate. If the indenter is lo·wered further into the substrate, the indentation depth used in the calculation shovvn in Equation 39 will be that of the indenter height, rather than the actual indentation depth. In all simulations used in this research, indentations will be performed ensuring that the indenter is never completely subn1erged within the substrate.

Pyramid Indenter Contact Area

The contact area calculations for the square-pyrmnidal indenter are similar to that of the Berkovich indenter. The methodology used to calculate the contact area for a square pynunid indenter Cail be shown in Equations 40-44.

ai

=

apyr

+ 2ratm
ai2

[40]

Ac =

[41]

22

h=-

ai~1 -2 2 cos 8
2

[42]

a. = --;::::=;:::=== z ..Jsec 2 8 - 2
A=--c sec 2 (}- 2

2h

[43] [44]

4h 2

As can be shown in Equation 44, the contact area for a square pyramidal indenter is only dependent on the angle and height of the pyramid. However, as is the case with the other two indenters, this equation is only valid so long as the entire tip of the indenter is not submerged within the substrate.

2. 3.7. MATLABTM Function Fo:rce_Summation_V_7_00

To determine the forces acting on the system during nanoindentation, MATLAB TM function Force_Summation_V_7_00 was created. Since the above mentioned MATLABTM function Contact_V_7 _00 is displacement dependent, the force acting on the entire substrate is always preserved. As a result, alternative techniques to determine the applied force on the system during nanoindentation were developed. In Section 3.2.2 of this thesis, a thorough comparison of the differing force techniques is performed and the optimal force summation technique for the purposes of this research is determined.

2. 4.

Molecular Dynamics Periodic Boundary Conditions

Despite the high-performance computing that is available today, it remains a challenge to simulate the large atomic systems that would be required to obtain the properties of a nanomaterial as would be usable for commercial manufacturing, as billions or even trillions of atoms must be
si~ulated

over long time periods. To enable such large simulations to be

performed, a commonly used technique in MD simulations uses Periodic Boundary Conditions (PBC). Periodic Boundary Conditions enable the user to generate a few unit cells, and replicate
23

them as needed to simulate the remaining aton1s in the system. The behaviour of the original unit cells (usually known as the primary cells) is analyzed and the exact positions and orientations are reproduced for all the replica cells (usually known as image cells). A two-dimensional representation of the use of PBC cells is shown in Figure 54 below,

Figure 5- Two-dimensional representation of Periodic Boundary Conditions

In this research, PBC atoms are treated slightly differently than described above. Rather than duplicating the positions and velocities of each of the atoms of the primary cell for the image cells, all atoms in the image cells are treated as fixed atoms. As such, throughout the simulation, their positions remain fixed. For nanoindentation, this decision is greatly beneficial as one may use PBC ·without having to replicate the int1uence of the · indenter for each of the image cells. Additionally, for those atoms that are further from the centre of the substrate, the applied forces as a result of the indentation are quickly diminished. Therefore, modeling PBC atoms as rigid still ensures that the results obtained from the nanoindentation will be accurate.

4

http://matdl.org/repository/eserv/matdl:857/web_wiki2fez2465.jpg

24

2.5.

Additional Nanoindentation Theory

One of the 1nost comtnon purposes of performing a nanoindentation test is to determine certain properties of the material. For example, the equations con1monly used to detennine properties such as hardness, reduced elastic modulus, stiffuess, compliance, projected area and contact depth are calculated using Equations 45-50. The hardness of a material is a tneasure of the pressure it is able to withstand prior to deformation. The reduced elastic modulus is a measure of a materials tendency to be deformed elastically. The stiffness of a material is the resistance of a material to elastic defonnation. The difference between the reduced elastic modulus and stiffuess of a material is that the former is an intrinsic property of a material while the latter is dependent on the shape and boundary conditions of that material. Cotnpliance is simply the inverse of stiffness and is helpful to know when perfon11ing instrument calibration at the beginning of a nanoindentation experiment. Finally the projected area and contact depth are both properties of the experiment and therefore, will often be defined by the user.

Hardness

H=
Er

F

A he

[45]

Reduced Elastic Modulus

-Jrr s = 2 -{if;; Ahe

[46]

Stiffness Compliance Contact Area Contact Depth

S= (dF) dh ··max

= ~Er.j/f;
2
1

[47]

C=s Ac = 4E

[48]
[49] [50]

1[

2 2 r C

he = h- 0.75 F~ax

The above six equations are the basis for all nanoindentation equations.£3 11 Using Hertzian theory, the reduced elastic 1nodulus, Er, can also be studied due to its relationship with the elastic tnodulus, E, and Poisson's ratio, v, of the substrate and indenter. In cases where the indenter is

25

assumed to have infinite stiffness, the Young's Modulus, Ei, will equal infinity and therefore the second part of the equation will be cancelled out. [321

[51]

In this study, the tnajor focus will be to determine the hardness of the substrates investigated. Therefore, Equation 45 will be used almost exclusively. However, in further research, Equations 46-51 will be very valuable as they may be used to investigate further nanotnaterial properties.

26

3GI Molecular Dynamics Nanoindentation Results

3. 1.,

Molecular Dynamics Nanoindentation Introduction

For each the simulations that are analyzed in this chapter, a copper substrate was indented using a diamond tip indenter. The copper substrate has been modelled using the EAM interatomic potential as discussed in Chapter 2. Traditionally, diamond indenters have been used in nanoindentation, due to their hardness and resistance to scratching. Using computer simulations, one can theoretically define an indenter with infinite stiffness. It has been found that modelling an indenter using infinite stiffness is in fact more accurate than a diamond indenter. It should be noted that using rigid indenters, rather than modelling the interatomic interactions, produces results that differ slightly from experimental results. [331 This difference originates from the deformation of the diamond indenter, while miniscule, during experimental nanoindentations. For theoretical nanoindentations using indenters with infinite stiffness, such a deformation does not occur and therefore the results are more accurate. Due to the improved accuracy of the hardness values when the indenter is modeled as rigid, the interatomic interactions between the diamond atoms as well as between the copper and diamond atoms are not modeled in this research. However, the lattice structure of the diamond atoms is still utilized in the simulations. Prior to performing nanoindentations, the research of Saraev and Miller was reviewed. [341 In their work, the impact of nickel coating on the hardness of copper substrates is investigated. Saraev and Miller employ the parallel n1olecular dynamics program PARADYN to perform their nanoindentation simulations. In their simulations, a 40 by 40 by 30 unit cell (approximately 14 by 14 by 11 nm) copper substrates with differing thicknesses of nickel coating are indented using a diamond spherical indenter·. with diameter 17 unit cells (approximately 6 nm) at a speed of 5 mls and at a temperature of 293 K. EAM potential functions are used to obtain the interatomic potentials as are used in this author's research. The hardness vs. indentation depth graph for copper and nickel-coated copper substrates is displayed in Figure 6. As shown in Figure 6, the baseline simulation in their research is a pure copper substrate as is studied in this thesis. In that case, the maximun1 recorded hardness value during nanoindentation is approximately 16 GPa. As
27

a result, in this research study, the results obtained can be compared with Saraev and Miller's results to ensure that the results are accurate.

Due to the time constraints and computational limitations, simulations using similar size substrates as used by Saraev and Miller were not possible in this research. As a result, Saraev and Miller's results will be used as a guide this research to ensure that the results obtained by the bridged FE-MD MATLAB TM simulations are within reason.

- - - {I) pure Ni .~ :(U) 5 om of Ni over Cu - -- -- -- :{IU)2.5 nm ofNiov&rCu (IV) 1.8 nm of Ni over Cu (V) o.snmofNiovmCu - ··-- - - (VI) pure Cu
0.5 1

Indentation Depth (nm)
Figure 6 - Saraev and Miller's Hardness Graph for Copper Substrates with Nickel Coating

3.2..

Molecular Dynamics Sensitivity Analysis

Prior to running full-scale simulations, several sensitivity analyses were performed to provide insight into the responsiveness of the nanoindentation software. Additionally, through these tests, one will be able to better understand the effect of certain changes to the initial conditions of the simulation on the hardness of a material. Four sensitivity analyses were performed prior to running full simulations. These tests will be discussed in Sections 3.2.1-3.2.4 below.

28

3. 2. 1. Temperature Sensitivity Analysis

The first sensitivity analysis performed investigated the effect of temperature changes on nanoindentation results. By varying ten1perature while maintaining the initial conditions of the simulation, the effects of temperature on nanohardness could be ascertained. As discussed by Narayan, Behdinan and Fawaz, lattice constants are greatly dependent on temperature. In this research, a set of lattice constants were solved using the custom MATLAB TM MD software and were compared to experimental results. The lattice constants, when verified via this MD software, were found to be almost identical to those of the experimental results. [liJ In this work, the lattice constants of the experimental analysis were used for the temperature analysis and can be found in Table 1.

Temperature (K) OK 25K 50K lOOK 200K 293 K 400K 500K 600K 700K 800K 900K lOOOK 1200K 1300K

Lattice Constants (A)L35 J 3.603287 3.603287 3.603504 3.604806 3.609650 3.615000 3.621579 3.628086 3.634846 3.641787 3.648945 3.656464 3.664381 3.681444 3.690734

Table 1- Lattice Constants for Copper for Temperatures Ranging from OK to 13001<

Using the above lattice constants, the effect of temperature on the hardness of copper was analyzed. For the simulations, the following initial conditions were used:

29

Indenter Type Substrate Size Indenter Diameter Indent Speed Maximum Indentation Depth Clamping

Spherical 4 by 4 by 4 unit cells ( 14.46 A), PBCs in x, ydirections 2 unit cells (7.134 A) 25 mls

sA
Absolute clamping on all faces except the in the positive z-direction

The simulations were performed using given temperatures and corresponding lattice constants shown in Table 1. A graph that compares the applied force to the indentation depth is shown in Figures 7 and 8.

25 20 15
+ OK
o
·$\

.5.
u L.
(1.1

z
"C

25 K
SOK

.2
.! 10 'ii a.
<C

<, 100 K

-

200 K
< , 293 K

5
0
0
1

, 400 K ·· · 500 K

2

3

4

5

a

600 K

Indentation Depth (A)

Figure 7- Force vs. Indentation Depth Graph for 0 Kto 600 K

As·shown in Figure 7, for temperatures ranging from 0 K to 600 K, changes in temperature and lattice size do not significantly affect the forces acting on the substrate and subsequently do not significantly affect the hardness of the material. It is noticed, however, that as the temperature increases, the forces are slightly increased during indentation. While these differences are quite marginal for a small scale simulation such as was performed in this temperature analysis, it would be expected that the differences would be slightly larger for simulations using large atomic systems.

30

25

20

z c

I§

600 K 700 K 800 K 900 K 1000 K

y
Lo

"';'15
0
" '0

~
&

~10
<{

a. a.

5

1200 K 1300 K

0

0

1

2

3

4

5

Indentation Depth (A}
Figure 8- Force vs Indentation Depth Graph for 600 K to 1300 K

For temperatures above 600 K, as shown in Figure 8, the same trends are not exhibited. Since the temperatures are so high, the kinetic energy within the system, and the corresponding atomic forces are quite large. As a result, the atoms are much more active and the atomic positions when contact occurs can be erratic. Therefore, it is expected that the nanohardness values obtained using the MD software becomes greatly less effective for temperatures in excess of 600 K. Thus, for large-scale simulations using temperatures higher that 600 K, further testing should be performed to ensure the results are accurate.

3$2 . 2 . Force Sensitivity Analysis

The second sensitivity analysis performed investigated differing force summation techniques. As previously mentioned, during nanoindentation the total force on the copper substrate is constant since a displacement dependent nanoindentation process is implemented. Therefore, using MATLAB TM function Force_Summation_V_7 _00, the following three force summation methods were analyzed:

3]

1) Sun1mation of all atotns except those that are clatnped.

2) Summation of all atoms except those that are clamped or adjacent to clamped atoms.
3) Summation of only those atoms that are contacting the indenter.

In order to test the three methods of force summation, a simulation was performed using the following initial conditions:

Indenter Type Temperature Substrate Size Indenter Diameter Indent Speed Maximum Indentation Depth Clamping

sA

Spherical 293 K 6 by 6 by 6 unit cells (21.69 A), PBCs in x, y directions and negative z-direction. 3 unit cells (1 0.845 A) 20m/s

Absolute clamping on all faces except the in the positive z-direction

The three force summation methods produce drastically differing force vs. indentation depth plots as shown in Figure 9. For comparison, Saraevand Miller's results will be used to ensure that the force summation technique chosen produces results that are within reason.

70 60 50

..s.
(JJ

z u ... 0
u..
<(

40
~

Force Summation Method #1 Force Summation Method #2 Force Summation Method #3

30 20 10 0
1
2

-a .51! 1"i a.

a

"~

3

4

5

-10
Indentation Depth (A)
Figure 9 - Force Summation Method Comparison

32

For the case when only the contact forces are used, the force plot is erratic and the forces acting on the copper substrate are much higher than expected. As well, for the force summation method in which the forces for both the clamped atom and the atoms adjacent to them are discounted, the forces were found to be too low as the indenter must be indent almost

3A

into the substrate

before the forces become positive values. Therefore, the most effective technique was determined to be the summation of all undamped forces.

It should be noted, that for larger systems the difference between the first two force summation methods will be quite small as the forces adjacent to the clamped edges are expected to be miniscule for large atomic systems. For the nanoindentation simulations executed in this research, since the substrates used are not very large the forces near the edges .are still rather significant. Regardless, it was felt that the force summation method chosen would still be the most effective one as it is the n1ost accurate for the substrate sizes analyzed in this study.

3.2.3. Molecular Dynamics Displacement Sensitivity Analysis

The third sensitivity analysis perfonned studied the effect of nanoindentation on the atomic positions throughout the nanoindentation procedure. In this simulation, in addition to the equilibrium step prior to ·the nanoindentation ·and the indentation step itself, two more equilibrium steps have been included. Once the indentation is completed, a second equilibrium step is executed, followed by the removal of the indenter and a third equilibrium step. In this sin1ulation, the deformation of the copper substrate should be clearly illustrated. The following initial conditions were used in the simulation:

Indenter Type Temperature Substrate Size Indenter Diameter * Indent Speed Maximum Indentation Depth Clamping

Spherical 293 K 4 by 4 by 4 unit cells (14.46 A), PBCs in x, ydirections 2 unit cells (7.134 A) 10 m/s

sA
Absolute clamping on all faces except the in the positive z-direction
33

The copper substrate in this simulation consists of 365 aton1s. For the purposes of this test, only specific relevant atoms are highlighted. For clarity, the tables display the atomic positions ranking them by the value of their z-positions from largest to smallest. The percentage differences used in the tables refer only to the difference between the atomic positions in the zdirection from their starting positions to the cunent step. All tables display atomic positions in Angstroms (A). In Tables 2-5, significant atomic displacements from each of the steps throughout the nanoindentation process are presented.

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 165 169 237 257 64 63 62 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 72300 7.2300 5.4225 9.0375 7.2300 7.2300 7.2300 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 5.4225 9.0375 7.2300 7. 7.2300 7.2300 7.2300 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 10.8450 7.2300 3.6150

After Equilibrium #1 (A) X-Position 3.5437 7.2300 7.2300 7.2300 10.9163 5.3846 5.3845 9.0754 9.0755 7.2300 7.2300 5.3718 9.0882 Y-Position 7.2300 3.5437 .2301 10.9164 7.2301 5.3846 9.0755 5.3846 9.0755 5.3719 9.0883 7.2301 7.2301 7 01 Z-Position 14.3023 14.3023 14.2414 14.3024 14.3023 14.2681 14.2681 14.2681 14.2681 12.5781 12.5782 12.5782 12.5781 10.8316 7.2240 7.2300 3.5836
% Difference

Table 2- Atomic Positions at Equilibrium Step #1 from MD Simulations

As shown in Table 2, the atoms are not greatly displaced to reach equilibrium. In fact, only atoms whose z-positions are at a . maximum move in excess of one percent. For larger systems, the displacements are expected to be larger to reach equilibrium, as atoms in the centre of the substrate will not be as greatly affected by the clamping along the walls. In Table 3, below, the atomic positions at the conclusion of the indentation are shown.

34

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 165 169 237 257 64 63 62 X-Position 3.6150 7.2300 7.2300 72300 10.8450 5.4225 5.4225 9.0375 9.0375 7.2300 7.2300 5.4225 9.0375 7.2300 7.2300 7.2300 Y-Position 72300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 5.4225 9.0375 7.2300 7.2300 7.2300 7 7 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 10.8450 7.2300 3.6150

After Indentation (A) X-Position 3.4757 7.2300 7.2300 7.2300 10.9843 5.6488 5.6488 8.8112 8.8113 7.2300 7.2300 5.2199 9.2401 7.2300 7.2298 7.2301 Y-Position 7.2300 3.4758 7.2301 10.9843 7.2300 5.6488 8.8113 5.6488 8.8113 5.2199 9.2401 7.2302 7.2302 7.2299 7.2304 7.2298 Z-Position 12.8143 12.8143 9.2387 12.8143 12.8143 13.2466 13.2467 13.2466 13.2467 11.4435 11.4437 11.4436 11.4436 6.9723 4.6090 2.4543
% Difference

Table 3- Atomic Positions after Indentation Step from MD Simulations

The atomic positions at the conclusion of the indentation are illustrated in Table 3. At this point, the greatest displacen1ent is found in atom 65 as it is the first atom contacted and is indented the full

sA. Other atoms that are contacted directly by the indenter include atoms 40, 60, 70, 90, 315,

320, 335 and 340. Interestingly, as a result of the indentation, all the atoms directly below the first aton1 indented, atom 65, are displaced significantly. As shown in Table 3, atoms 62, 63, and 64 are each drastically displaced from their original z-positions. These displacements result from the compression of the substrate as atom 65 is pushed in the negative z-direction. · This compression of the substrate is also clearly seen, but to a lesser extent, in atoms 165, 169, 237, and 257.

35

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 165 169 257 64 63 62 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 7.2300 7.2300 5.4225 9.0375 7.2300 7.2300 7.2300 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 5.4225 9.0375 7.2300 7.2300 7.2300 7.2300 7.2300 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 10.8450 7.2300 3.6150

After Equilibrium #2 (A) X-Position 3.4757 7.2300 7.2300 7.2300 10.9843 5.7346 5.7346 8.7255 8.7254 7.2300 7.2300 5.2108 9.2492 Y-Position 7.2300 3.4758 7.2301 10.9843 7.2300 5.7347 8.7256 5.7347 8.7256 5.2108 9.2492 7.2304 7.2304 7.2300 7.2300 7.2300 7.2300 Z-Position 12.8143 12.8143 9.2387 12.8143 12.8143 13.1599 13.1602 13.1599 13.1602 11.3357 11 .3359 11.3358 11 .3358 6.9499 4.5482 2.3876
% Difference

Table 4 -Atomic Positions at Equilibrium Step #2 from MD Simulations

The atomic positions after the second equilibrium has been reached are illustrated in Table 4. During this step, the equilibrium is established as the indenter is held in the position it had reached at the conclusion of the indentation step. Seeing as the atoms directly contacting the indenter .are · unable to move, there is no change in z-positions for any of the atoms that are directly contacting the indenter. However, for the atoms that becon1e compressed due to the indented atoms above them, there is still displacement in the negative z-direction. For each of the aforementioned atoms, the displacement in the negative z-direction continues as the system responds to the compression from the indented atoms above. Due to the speed of the nanoindentation, however, the system has been able to respond fairly well to the nanoindentation as the· indenter .is lowered into the substrate. As a result, to reach the second equilibrium step range the atomic displacements are quite small.

36

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 165 169 237 257 64 63 62 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 7.2300 7.2300 5.4225 9.0375 7.2300 7.2300 7.2300 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 5.4225 9.0375 7.2300 7.2300 7.2300 7.2300 7.2300 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 10.8450 7.2300 3.6150

After Equilibrium #3 (A) X-Position 3.5153 7.2300 7.2300 7.2300 10.9447 5.3063 5.3063 9.1537 9.1537 7.2300 7.2300 5.4061 9.0539 7.2300 7.2300 7.2300 Y-Position 7.2300 3.5153 7.2300 10.9447 7.2300 5.3063 9.1537 5.3063 9.1537 5.4061 9.0539 7.2300 7.2300 7.2300 7.2299 7.2300 Z-Position 14.2965 14.2965 10.8244 14.2965 14.2965 14.2512 14.2512 14.2512 14.2512 12.6583 12.6583 12.6583 12.6583 7.9159 5.7012 3.3763
% Difference

Table 5- Atomic Positions at Equilibrium Step #3 from MD Simu lations

Table 5 demonstrates the behaviour of the atoms after the indenter is ren1oved and a third equilibrium step is performed. In this table, it is evident that after letting the system relax, the defonnation still remains. It is noted however, that the system does partially expand once the indenter is removed. Interestingly, after the third equilibrium step is completed, significant displacements only remain in aton1s 62-65. For the remaining atoms, however, their positions are almost identical to their original equilibrium positions. One significant change in the atomic positions is observed in atoms 165, 169, 237, and 257. After the third equilibrium step is completed, these atoms actually exhibit displacements in the positive z-direction. While this may seem puzzling, these atoms are being pushed in the positive z-direction due to their proximity to atom 65. Through this analysis, it is evident that MD MATLABTM function NI_MD_V_7_00 models the behaviour of a substrate undergoing nanoindentation effectively.

37

3. 2 . 4. Clamping Sensitivity Analysis
The final sensitivity analysis performed studied the effect of clamping on the nanohardness. When clamping a material, the software enables two different types of clamping to be performed; absolute clamping or relative clamping. Absolute clamping restricts motions of clamped atoms in all directions, while relative clamping restricts motion only in the direction that is being clamped. In this sensitivity analysis the following four methods of clamping were investigated:

1) Relative clamping only on botton1 face

2) Absolute clamping only on botton1 face 3) Relative clamping on all faces except top face 4) Absolute clamping on all faces except top face

Using the following initial conditions, simulations using each of the clamping techniques were performed: Indenter Type Temperature Substrate Size Indenter Diameter Indent Speed Maximum Indentation Depth Spherical lOOK 6 by 6 by 4 unit cells, PBCs in x, y-directions 2 unit cells (7.134 A) 20rnls

sA

Using these simulation conditions, nanoindentation were performed for each of the clamping techniques. The simulation results are shown in Figure 10.

38

25

.s CD
u """ 0 u..

2

20 15
~

Relative Clamping - bottom Clamping- bottom

-a .! 10 1i Q.
<(

~Absolute

,, Relative Clamping- all
&

5 0

Absolute Clamping- all

-r----2

2.5

3

3.5

4

4.5

5

Indentation Depth (A)

Figure 10- Comparison of Clamping Techniques using MD Simulations

From the graph, it is apparent that the difference between the clan1ping techniques is not drastic. As a result, the clamping technique implemented is not expected to have a great impact on the hardness of the material. However, the graph indicates that absolute clamping is more effective than relative clamping. Additionally, absolute clamping on all faces except the face that directly contacts the indenter requires significantly less time steps to reach equilibrium than absolute clamping on the bottom face only.

3. 3..

Molecular Dynamics Nanoindentation Simulation Conditions

In Sections 3.4-3.6, the simulations results are shown. Each simulation was performed using a 10 by 10 by 10 unit cell (36.15 by 36.15 by 36.15

A) copper substrate with PBCs in the x andy-

directions as well as ·the negative z-direction. Simulations were performed using speeds ranging from 10 m/s and 30 rnls, while the indenter sizes used (before the indenter is trimmed) ranged from 4 by 4 by 4 unit cells (14.46 by 14.46 by 14.46

A) to 7 by 7 by 7 (25.3 by 25.3 by 25.3 A)

unit cells. The simulation temperature is n1aintained at 293 K, and absolute clamping is used on all faces except the face coinciding with the maximum z-positions.

39

The indenters used for the simulations are quite unique and are each expected to produce distinct results. The spherical indenter's height is equal to its radius. The Berkovich indenter produces a height approximately equal to one-third of the length of the base. For the square pyran1idal, the angle used was 54.74°. As a result, the height of the pyramid will be equal to the width of the base or twice the height of the spherical indenter. As a result, the Berkovich indenter is expected to produce the smallest hardness values followed by the spherical and square pyramidal indenters respectively. In Figures 11-22, below, the simulation results are graphed.

40

3. 4..

Molecular Dynamics Spherical Indenter Results
25

20

ii c.
~
In In

15
~
m

"tJ
L.

r:

CIJ

10 m/s 20 m/s

7.:

10 m

, 30 m/s 5
~

0
0

1

2

3

4

5

6

7

8

Indentation Depth (A)

Figure 11- MD Results using Spherical indenter with Diameter of Four Unit Cells

25

20

w
~
"C
!...

Cl..

15

· 10 m/s
ill

c:

Cl.l

Ill Ill

:X:

"'

10

20 m/s 30m/s

5

0

1

2

3

4

5

6

7

8

Indentation Depth (A)
Figure 12 ~MD Results using Spherical Indenter with Diameter of Five Unit Cells

41

25

20

ii
~
"'0
L.

c.
QJ

15
~

"" "" c
10

10 m/s
20 m/s

:1:

m

11a

., 30 m/s

5

0 0

1

2

3

4

5

6

7

8

Indentation Depth (A)
Figure 13- MD Results using Spherical indenter with Diameter of Six Unit Cells

25 - - - --· --~·---------------·

mQ.

~
IJ'I

15
~

,c

G.l

VI

10 m/s
20

m ::X:

L.

10

1!11

m/s

&

30 m/s

5

0 0
1 2

3

4

5

6

7

8

Indentation Depth (A)

Figure 14- MD Results using Spherical Indenter with Diameter of Seven Unit Cells

42

3.5..

Molecular Dynamics Be:rkovich Indenter Results

50 45 40

-m
Q.,

35 30
25
e.
IS

~
In (iJ

en
l!o..

"C

c

10 m/s

:r;:

fC

20

20 m/s

15 10
5 0 0
1

30 m/s

2

3

4

5

Indentation Depth (A)

Figure 15- MD Results using Berkovich Indenter with Base of Length Four Unit Cells

25

20

-m
Q.,

~
"C

15 .
· 10 m/s

c

In (iJ

en

rn :t:

l!o..

10

~ 20

m/s

30 m/s 5

0

0

1

2

3

4

5

6

Indentation Depth (A)

Figure 16- MD Results using Berkovich indenter with Base of length Five Unit Cells

43

30 25

-r--- ·------ - -- - - -- - --

~
(II (II

-m a.
"C

20
~ ~

c

w 15

10 m/s

m X

lo..

10 5 0 0
2

20 m/s

" 30 m/s

4
Indentation Depth (A)

6

8

figure 17- MD Results using Berkovich Indenter with Base of length Six Unit Cells

25

20

S! 15
WI WI

ma.
"a

::::::

... tO

c

QJ

~

10 m/s 20 m/s 30 m/s

10

i!t

,,~

5

0 0
1
2

3

4

5

6

7

Indentation Depth (A)

Figure 18- MD Results using Berkovich Indenter with Base of length Seven Unit Cells

44

3*6..

Molecular Dynamics Square Pyramidal Indenter Results
45

40

35
ti 30 c.
~
G.l 1: "C s..
Ill Ill

25

20

~ ~

10 m/s
20 m/s 30 m/s

:c

Rl

15 10
5

0
0
2

4

6

8

10

Indentation Depth (A)
Figure 19- MD Results using Pyramidal Indenter with Base Four by Four Unit Cells

45 40 35
ti 30
a.

S! 25
ill)

Ill

1: "C s..

w

20 15 10
5

., 10 m/s
~e

:c

m

20m/s 30m/s

0

2

4

6

8

10

Indentation Depth (A)
Figure 20- MD Results using Pyramidal indenter with Base Five by Five Unit Cells

45

45
40

35

mQ.

30

~
In In

25
20
~
Ill

"C

c:

G.l

10 rn/s
20 rn/s

:.X:

m ""

15 10
5
0

.. 30 m/s

0

2

4

6

8

10

indentation Depth (A)
Figure 21- MD Results using Pyramidal Indenter with Base Six by Six Unit Cells

45 40 35

~
II)

30 25 20 .. 10 m/s
ea

~
VI

t:: "C

G.l

::r;

... m

15 .. 10
5
0

20 m/s

" 30 m/s

0

2

4

6

8

10

Indentation Depth (A)

Figure 22- MD Results using Pyramidal Indenter with Base Seven by Seven Unit Cells

46

3 . 7..

Discussion

In Figures 11-22, it can be observed that the hardness vs. indentation depth plot for the MD simulations never start right at an indentation depth of 0

A.

Due to the algorithm used for the

first equilibrium step, the indentation step is commenced once the change in applied force per time step is within the specified limits. As a result, the applied force on the system is still not a positive value. Due to the size of the copper substrate used for the MD simulations, the data shown in Figures 11-22 cannot be used to determine the hardness of copper metal nor can it be used in the design process of products using copper nanomaterials. However, the trends illustrated in the hardness graphs reveal valuable information with respect to nanoindentation.

In Figures 11-14, the results of the spherical indenter nanoindentation sitnulations are illustrated. In these graphs, significant changes in the hardness vs. indentation depth plot can be observed when the indentation speed is altered. As the indentation speed increases, the hardness values increase quicker over indentation depth. Most notably, for the indentation speed of 10 tnls, the hardness responds very quickly to changes in indentation depth. This is expected as the 10 mls indentation speed allows significantly more titne for the system to defonn and for the forces to be transferred to the system.

Interestingly, for the 10 m/s indentation, the spherical indenter plots all level off at indentation depths ranging between 4

A and 5 A. For the higher speed nanoindentation, however, this

phenotnenon does not occur. At these speeds, the plots are only seen to level off when the indentation depth approaches the tnaximum indentation depth. For slower speeds, the atomic deformations are tnuch smaller and therefore, the other atoms are able to adjust as the indenter is moved down. For the faster speed indentations, the system is unable to adjust to the larger deformation as quickly. Therefore, for higher speed indentations, the hardness plots only reach their 1naximum as the indentation depth approaches the maxhnum indentation depth.

An additional important result to note for sitnulations using spherical indenters is that the hardness decreases as the indenter size decreases. This trend is most clearly illustrated in the silnulations using the indentation speeds of 20 m/s and 30 m/s. Comtnonly referred to as the
47

"indenter size effect," the reduction of hardness values for larger indenter sizes is consistent with the findings of many other research studies.r 36]

In Figures 15-18, it is evident that the simulations using the Berkovich indenter are not as effective as those using spherical indenter. For example, in Figure 15, the 10 m/s indentation reaches it tnaxin1um hardness at a indentation depth of approximately 1.5 A. Since the Berkovich indenter's height is much stnaller than its width, the majority of the indenter contacts the substrate very quickly in the simulation. As a result, prior to the system being able to react to the indentation, the indenter is cmnpletely submerged within the substrate. This is especially the case for the two stnaller indenters. One explanation for the irregularities that are observed for the smaller indenters lies within the method with which contact area is calculated. Since the contact area is calculated based on the geometry of the indenter rather than being based on the atoms actually used in the simulation, there are large discrepancies for such sn1all indenters. However, for larger indenters, as will be used for nanoindentations using large atomic systems, these discrepancies will be relatively insignificant.

For the t"vo larger indenters, as shown in Figures 17 and 18, the hardness vs. indentation depth plots for the three indentation speeds appear to converge more effectively. The increased convergence is expected as for the larger Berkovich indenters, the indenter can be submerged further within the substrate than for the stnaller sized indenters. For the Berkovich indenters, the "indenter size effect" is not observed. It is expected that for simulations using larger substrates, the "indenter size effect" would indeed be observed, however, for such as small indentation depth, the system is unable to respond effectively to the indentation.

For the square pyramidal indenters, shown in Figures 19-22, many of the same trends as shown for spherical and Berkovich indenters are observed. As in the simulations using spherical and Berkovich indenters, the hardness vs. indentation depth plots increase faster for slower indentation speeds. However, for square pyran1idal indenters, the three plots crossover each other much before the maxin1um indentation depth is reached. This trend was not observed for the other two indenter types. As well, the "indenter size effect" is not presented for square pyramidal indenters. If the indenters were to approach the n1aximun1 indentation depth, it is expected that
48

the "indenter size effect" would be illustrated in the results. However, for a substrate size of 10 by 10 by 10 unit cells (36.15 by 36.15 by 36.15 A) as used, indent the substrate to such an extent is not advisable. In that case, the system would be challenged to respond so such a con1pression within the system and the results obtained would be inaccurate.

When comparing the three indenter types, the most striking difference is the maximutn nanohardness observed in the different types of indenters. For spherical indenters, the maximum hardness is found to be between 18-20 GPa. This is consistent with the results of Saraev and Miller discussed Section 3.1. For the Berkovich indenter, the maximum hardness differs substantially between the different indenter sizes. Thus, it is concluded that for tnore effective results, testing tnust be perfonned using larger substrate and indenter sizes. For the square pyramidal indenter, the maxilnum hardness observed in the plots is between 35-40 GPa. While it was expected that the maxilnum hardness using a square pyramidal indenter would be larger than when using a spherical indenter, the difference between the two is much larger than expected.

In all of the MD simulations performed, the ditTerence between the simulations perfotmed using indentation speeds of 10 m/s and the two faster indentation speeds of 20 nlls and 30 tn/s is quite substantial. Based on this, it is infened that in further studies, testing for intennediate speeds should be en1ployed. With the cmnpletion of further testing, it would be possible to detetmine the optitnal indentation speed with which to perform nanoindentation expetiments that would provide the best results while requiring the shortest simulation time.

49

3s8..

Chapter Summary

This chapter describes MD simulations sensitivity tests perfo1n1ed and larger scale nanoindentation simulations. These tests were very effective, as expected trends were illustrated and the maximum hardness results for spherical indenters were found to be extremely similar to the results expected based on the research conducted by Saraev and Miller. It was evident, however, that the nanoindentation simulations in this research are tnerely the starting point to detennine the actual hardness of a copper nanotnaterial. For the nanohardness of copper to be determined, one must perfonn 1nuch larger scale simulations as performed in the aforementioned research while using a tnore appropriately sized indenter. In Chapter 4, a bridged finite eletnentmolecular dynamics (FE-MD) tnethod will be introduced. This bridged FE-MD tnethod will be used to performed nanoindentation experimentation more etiectively while significantly reducing sitnulation tilne.

50

4. Bridged Finite Element - Molecular Dynamics Nanoindentation

4. 1..

Bridged Finite Element- Molecular Dynamics Introduction

Despite the success of MD simulations, recent studies have introduced revolutionary tnethods that enable nanosized materials to be analyzed more efficiently. These methods, comn1only referred to as multi-scale methods, couple the macro and nano scale to more effectively analyze the behaviour of large atomic systetns at the macro scale. Most tnulti-scale methods etnploy the use of both macro (such as FEM) and atomistic (such as MD) simulation tools to perform their experitnentation. In this chapter, a unique bridged method is introduced and applied to nanoindentation simulations. This method, developed by Narayan, combines the theories of finite eletnents method (FEM) and tnolecular dynamics (MD).(2SJ This tool signit1cantly reduces shnulation time required by traditional MD simulations while maintaining precision. Compared to the thousands of time steps that n1ay be required for MD simulations to reach can be reached in only a few steps using the bridged FE-MD technique.
equilibriutn~

it

The strength of this n1ethod lies with the novel discretization scheme utilized that allows the molecular dynamics equations of motion to be easily solved using traditional FEM techniques. This bridged method has proven extre1nely effective in the aforetnentioned work of Narayan. However, due to the tremendous size of the stiffness matrices produced for large atomic systen1s, significant computational resources are required to execute these sitnulations. Therefore, to fully explore the strength of the bridged FE-MD method and use it for tneaningful sin1ulations, more powerful computational tools than those available to this author must be employed.

This chapter \vill examine the bridged FE-MD method in detail and the software created for the original MATLAB TM code FE_MD_V_7_ 00 as well as its nanoindentation adaptation MA TLAB TM code NI FE MD V 7 00 will be discussed.

51

4 . 2..

Traditional Finite Elements Method Theory

Finite element method (FEM) is a very common numerical method used to solve many engineering problen1s. FEM simulations are most con1monly used for structural, them1al, electromagnetic, and fluid problems. A general overview of some relevant FEM theories will be discussed in this section; however, for a more detailed overview of basic FEM theory, the reader is urged to consult FE!vl reference materials.

4. 2$1 . General Form of Finite Element Method Shnulations

While FEM solutions have been used for a wide scope of problems, the general algorithm used by all FEM tools is viliually identical. This general algorithm is defined by the following steps:

1) Discretize the system and select element type - the nodes and elen1ents for the system are defined. 2) Select a displacement function. 3) Define the strain/displacement and stress/strain relationships. 4) Derive the element stitiness equations and matrices. 5) Assetnble the individual elemental stiffuess matrices to derive the global stiffness matrix or global equations. 6) Introduce boundary conditions - these boundary conditions can be used to remove rows or columns from the global stiffness matrix and speed up the simulation. 7) Solve for unknown degrees of freedom (in this case the only unknowns are nodal displacements) and elemental stress/strains.

The eletnental stresses and strains as calculated using FEM are not relevant to the research being conducting in this study. Therefore, ·while the code solves for the elemental stresses and strains, those results will not be discussed in this thesis. In the coming sections, traditional FEM discretization methodology and stiffness matrices derivation will be discussed in tnore depth.

52

"t2o2 . General Form of a FEM Stiffness Equation
To detnonstrate the fon11ulation of the stiffness n1atrices used in FEM in its tnost general form, the tnost basic element in finite elements, the spring element, is discussed. A diagram of a onedimensional spring element is shown in Figure 23. The nodal displacements for the spring eletnent are denoted by nodes.

d1x

and

d2 x,

while F1 x and F2x represent the external forces on those

Figure 23- One dimensional two~ node spring element

The internal energy of the element can be expressed with respect to the displacements as,

[52]

The internal forces of the element, / 1x and

/zx'

can be expressed in relationship to the internal

energy of the eletnent as shown in Equations 53 and 54. Additionally, the total force acting on each node is total zero, shown in Equation 55.

[53]

[54]

[55]

53

Using a multi-variable Taylor series expansion, the inten1al nodal force derivatives can be expressed with respect to the displacement in each node,

[56]

[57]

By combining Equations 56 and 57, a stiffness matrix for the non-linear spring eletnent can be established. Equation 58, is given in standard FEM stiffness n1atrix [K]{d} = [F] as can be found in any traditional FEM resource.

a2 u 2 o( d1x) d1x=O dzx=O a2u a(dlx)a( a2x) dtx=O dzx=O

I

[58]

Fora system ofeletnents, a global stiffness matrix can be established by the same process. The general form of a global stiffness matrix is illustrated in Equation 59 for a one-dimensional nonlinear system. It should be noted that for tnore complex elements such as those used in the btidged FE-MD software, the stiffness matrices constructed will much tnore intricate. This issue w·iU be discussed in more detail in Section 4.3 when the bridged FE-MD tnethodology is discussed. Additionally, as Equation 59 only displays a system of equations used to solve the unkno\vn degrees of freedotn in the x-direction, the size of the global stiffness matrix will be enlarged for each additional degree of freedom (additional displacetnents in y and z-directions, or rotations in all three directions) added to the system.

54

a2utot 2 adlx a2Utot aalxaanx

a2utot aanxadlx a2utot 2 aanx

dlx d2x anx

=[]-

autot aalx
[59]

autot aanx

4.2.3 . Traditional FEM Discretization Scheme

In traditional FEM discretization schemes, linear spring elements are viewed as two-body potential, as elements are defined between each pair of nodes. In Figure 24, a seven element exan1ple using two-body potential has been created using five nodes. While elements 2, 4 and 6 appear to be three-node elements, they are sitnply elements using two nodes that are not adjacent to one another.

Figure 24- Assembly of two-body potential linear spring elements

Since all elements in Figure 24 are defined as having only two nodes, the potential energy can be detined by the following linear spring equation which defines that between any two nodes, i and }, the potential energy is merely a function of the spring constant, k, and the distance between the two nodes.

1 (A A )2 U·· = -k - dJx · · . !] 2 d· Lx

[60]

Using the definition of potential energy as described in Equation 60, the element stiffness matrices for each of the seven elements can be determined as shown in Equations 61-67.

55

[K] 1 =

k1 [ 1 ~

-1

-1 1
0

0 0 0 0 0 0 0
0

0 0 0 0 0
-1 0 1 0 0
0

0 0 0 0 0 0 0
0

[61]

!l
[62]

[Klz =

k2[{1 k3[! k4[!

0 0
0

!l
[63]

1
-1
0

[Kh =

-1 1
0

0
0

0
0

0
0 0

0 0
0

!l
[64]

[Kh =

1 0 -1
0

0
0 0

-1 0 1
0

!l
[65]

0 0 [K]s = ks 0 0 0

0 0 0 0 0 0 0 0 0
0

0

0 1 -1 0 0 0 1 0 -1

0 0 -1 1 0 0 0 0
0

!l {1]
[66]

[K]6 = k6

[!

0
0

[Kh =

k7[!

0 0
0

0

0 0
0 0

0
0

0 0

1 -1

~1]

[67]

56

If it is assumed that the stiffness coefficient, k, is constant throughout the matetial as will be done for all sin1ulations performed in this research, the seven elemental stiffness matrices can be summed to create a global stiffness matrix as shown in Equation 68. The complete stiffness system of equations is shown in matrix form in Equation 69.

-1
[Klrotal ==

k

[ 2 ~1

-1

3
-1 -1 0

-1 -1 4

0
~1

-1
-1

-1 3
-1

Jl]
-1 2

[68]

kT
4. 3..

[ -1 2

-1 3 -1 -1 0

-1 -1 4 -1 -1

0 -1 -1 3 -1

a1x

Jl]
-1 2

a2x a3x a4x dsx

=

F1x Fzx F3x F4x Fsx

[69]

Bridged Finite Element- Molecular Dynamics Theory

In this section, the FEM theory specific to the bridged FE-MD method is discussed. While similar to the traditional FEM theory, a discretization schen1e that is unique to this btidged
FE~

MD tnethod wiH be introduced. This discretization scheme is designed to be dynatnic in nature so that the theory of the Embedding Aton1 Method can be impletnented in the stiffness equations.

4.3 . 1.. Bridged Finite Elentent- Molecular Dynamics Discretization Scheme

To demonstrate the discretization scheme used in the bridged FE-MD softvvare, the five node example used in the previous section was studied. However, in this case, the definition of an element is slightly altered. For this discretization scheme, rather than defining elements as twonode bodied, elements are defined as being centred at nodes. Figure 25 detnonstrates an eletnent established with node three as its centre.

57

Prlma.Jy Node.
Figure 25- Bridged FE-MD discretization scheme for element centred about Node 3

As shown for the element in Figure 25, node three is referred to as the primary node, as the elemental energy is n1erely the energy of only that node. The remaining four nodes are refeiTed to as secondary nodes, as their atomic energies do not factor in the total energy of the element. For this discretization scheme, secondary nodes include all atoms that the forces between the two nodes are significant. This is discussed in section 4.3 .2 when the EAM potential functions are included in the bridged FE-MD method. Due to this discretization method, the number of elen1ents used for a system will be identical to the number of nodes or atoms in that system.
Therefore~

the stiffness tnatrices that are constructed using this method are more manageable

than they would othenvise be.

For this discretization scheme, the potential energy of an element is looked at differently. Here, the traditional equation for potential energy of an element can be altered to calculate the potential energies at each node of the elen1ent. If one assumes that the total potential energy of the element can be attributed equally to each node, Equation 60 can be reorganized, as sho\vn in Equation 70, to calculate the nodal potential energies.

1 (A U·· =-k l} 2 d·lx

~d· Jx

A )2
"

[60]

U· t = U· ] = -k 4 d·tx. - d· Jx

1 (,..

)2

[70]

For each of the five elements in the example given, assuming that the sphere of influence for an element is the distance between three adjacent nodes, the elemental energies for each of the five elen1ents in this system can be detennined as shown in Equations 71-75.

58

[71] [72] [73]

[74]
[75]

Using the stiffness matrix shown in Equation 59, the stiffness tnatrices for each of the elements can be evaluated. For element 1, the stiffness tnatrix is formulated in Equation 76 and then evaluated for the five element example in Equation 77.

azui aanxaalx
[K]i =

azui ad1xaanx
azul

[59]

adz X aal X

azul

ad Zx 2
azul

aa2xaa3x azul aa1xaa4x ad2xaa4x azutot azul adlxaasx ad2xaasx

azul aa3xaalx azul aa3xaaZx azul ad 3x z azul aa3xaa4x azul aa3xaasx

azu1 aa4xaa1x adsxadlx azul azul aa4xaa2x adsxaaZx azul azul aa4 ad3 adsxaa3x azul azul 2 adsxaa4x ad 4x
azul
X X

[76]

azul

azul

aa4xaa5x

ad Sx 2

59

2 k -1

[K]1 =

2[

T~1 ~1 ~ o~o]
0
0

[77]

0
0

0

0

Similarly, for the remaining four elements, the elemental stiffness matrices can be easily evaluated as shown in Equations 78-81.

-1
[Klz

0

=2 ~

k [ -1 1

3

-1 -1
0

-1 1
0
0

0 -1
0

1
0

!l
{1] ],1 ]

[78]

[Kh

[ 1 =2 T
k

0

-1

0
0

0

1 -1
0 0

-1
4

-1

[79]

-1 -1
0 0

1
0

[K]4

=2 ~

k 0

[0

0 1
0

0

1
-1 0

-1 -1
3

[80]

-1 0
0

-1
0

[K]s

=2 ~

k 0

[0

0
0

0
0 0 0

0
0

1
0

-1

1 -1

11]
-1 2

[81]

For the system, one can then determine the global stiffness tnatrix by summing the individual elemental matrices as shown in Equation 82.

60

-1
[K]rotal

= k ~1

[ -1 2

3

-1 0 -1 -1

-1 4 -1 -1 -1 3 -1 0 -1 -1 2

11]

[82]

As hypothesized, the global stiffness tnatrices for each of the two discretization techniques are identicaL Therefore, it has been confinned that the bridged FE-MD discretization schetne indeed models the energy of the system effectively. This flnding indicates that there is great benefit to the proposed discretization model. Due to the co1nplexity of the EAM multi-body potentials, using this method enables the total energy acting on each node to be solved individually. In the coming section, the application of these EAM potentials to the stiffness equations will be discussed.

4. 3 . 2. Embedding Atom Method Potentials in Bridged Finite Elements Molecular Dynamics

For the bridged FE-MD method, to calculate the forces on the atoms, the theory of tnolecular dynmnics is still ilnplemented. As done for the molecular dynamics simulations, EAM potentials are used to n1odel the interatomic forces. To model these forces as elemental forces, Equation 7 determines the total force acting on each atotn resulting from all the surrounding atoms within specified the distance limits.

u,;total "'

~ L rP c r,j) + '¥
j=1

N

L p(ru)
j=l

N

[7]

For the total atomic force on a given aton1, or node for the bridged FE-MD sin1ulation, the derivative of the EAM potential energy equation is derived with respect to a given Cartesian coordinate p, as shovvn in Equation 83.

61

Fp.
t

= - aui,EAM =- f [d<P(r;j) + ( d'P + d'l' ) dp(rij)] arij
api

~
j=t:i

drij

dPtot,i

dPtot,j

drij

api

[83]

The variable

rij

references the distance between two atoms, i andj, as calculated in Equation 84.

The first derivative of Equation 84 with respect to each Cartesian coordinate is shown in Equations 85-87.

T;j

=

Jcx;arij axi ayi

2 Xj) -

(Yi- Yj)

2 -

(z;- Zj)

2

[84] [85]

=

8rij Xi - Xj - axj = rij

arij arii Yi- Yi - = --=--.--..;.... ayj
rij

[86]

arij-

azi -

arij = _ Zi- Zj __;.._ azj rij

[87]

Using the above equations, the EAM potential forces on each atom and in each Catiesian coordinate can be calculated and stored in the global force matrix. These calculations are completely independent of any boundary condition on the system. Therefore, the only unknown variables in the global stiffness are the nodal displacements. In the Sections 4.4 and 4.5, this theory is applied to MA TLAB TM function FE_MD_V_7_ 00 and its nanoindentation adaptation MA TLAB TM function NI FE MD V 7 00.

4e4..

Custom Finite Element _,. Molecular Dynamics Code FE_MD_V_7_ 00

In Narayan's research, the bridged FE-MD code FE_MD_ V_7_00 was developed and three applications were analyzed using the software. These analyses were found to be extretnely effective, as the results were very sin1ilar to that of the molecular dynamics simulation in a fraction of the sitnulation time.

62

4 . 5.. Custom Finite Element- Molecular Dynamics Nanoindentation Code NI........FE MDV 7 00 --_...,.,

For the purposes of perfonning a nanoindentation using the bridged FE-MD software, the code was altered. The major differences between MATLABTM function NI- FE- MD--V-7 -00 and MATLAB TM function FE_:MD_ V_7_00 lie in the inclusion of the indenter design and the contact analysis functions. Despite these additions, the theory of the bridged FE-MD software as designed for MATLAB TM function FE_ MD_V_7_00 is not adapted. A flowchart outlining the process undergone by MATLAB TM function NI_FE_MD_V_7 _ 00 can be found in Appendix B. However, the tnajor tasks that are perfonned in MATLAB TM function N1_FE_MD_V_7_ 00 are as follows:

1) Define the initial conditions for the simulation.

2) Read the positions and velocities of the substrate as defined in the function FCC_Gen_V_7_00, BCC_ Gen_ V_7_00, HCP_Gen_V_7_00 or Dia_Gen_V_7_00. 3) Calculate the distances between each atom and its neighbouring atoms and use that information to discretize the system. 4) Define the eletnent stiffness matrices. 5) Assemble the global stiffness matrix by sumtning the individual element stiffhess matrices. 6) 7) Define the boundary conditions and apply them to the system. If the indentation step has com1nenced, add the nodal displacements obtained frotn MA TLAB TM function Contact_V_7 _00 to the current positions of the contacted atoms and apply boundary conditions on those nodes to prohibit thetn from being displaced. 8) Solve for all unknown nodal displacetnents and all con-esponding nodal forces.

9) Write relevant infonnation, such as positions, forces.
10) Repeat steps 3 through 9 for the required steps of the nanoindentation procedure.

Although the substrate is analyzed using a bridged FE-MD simulation, the indenter is not designed to be included in the FEM displacement calculations. Rather, MATLAB TM function Indenter_Design_V_7_ 00 creates an indenter in identical fashion as described in Chapter 2.
63

Since the indenter is designed as a rigid atomic system, there is no need to apply the FE-MD code to the indenter design. Therefore, as with the MD simulations, the only influence of the indenter on the substrate is modeled using MATLAB TM function Contact_V_7_ 00. However, for the bridged FE-MD simulations, the contact between the indenter and the substrate is dealt with in a slightly different manner than the method employed in Chapter 2.

While rviD simulations are time-dependent, the bridged FE-MD code is completely timeindependent. As a result, the contact analysis methodology was varied for MATLAB TM function NI_FE_MD_V_7_00. In molecular dynamics sin1ulations, for each time step, the indenter is lowered by a predetennined indentation speed and the molecular dynamics sin1ulation is perfonned to determine the positions and velocities for each of the atoms in the system. In this case, the indenter is still lowered in sn1all increments, but the bridged FE-MD sitnulation is only performed at specified indentation depth intervals.

For each incren1ental change in indenter position, the corresponding displacen1ents in the substrate are recorded and stored. At the conclusion of the indentation depth interval, the total nodal displacements resulting from the indentation are added to the current atomic positions of the substrate. Next, for each atotn that is displaced by the indenter, nodal boundary conditions are applied to prevent them frotn being displaced from their new positions. At this time, bridged FE-MD simulation is performed and the displacements on the remaining atoms are calculated.

In this fashion, MATLAB TM function NI__FE_MD_V___.7_00 is able to simulate the effect of the indenter being lowered incrementally without requiring the bridged FE-MD sitnulation to be executed for each incremental displacetnent of the indenter. Consequently, the simulation can be executed in a reasonable tin1e and is in fact still executed faster than in the MD simulations. For nanoindentations using this method, it is expected that there would be marginal differences in the results for the indenter incren1ents used. However, the indentation depth interval size used is presutned to have much more bearing on the simulation results. These hypotheses are examined in detail in Section 5.2.

64

4. 6..

Chapter Summary

This chapter discussed a novel bridged FE-MD simulation tool for large atomic systems as presented in the research of Nm·ayan. The theory surrounding the bridged FE-MD method was summarized and the bridged FE-MD code was adapted to create MATLABTM function NI_FE_MD_V_7_ 00, which is specifically tailored towards perfom1ing nanoindentation sitnulations. In the next chapter, the aforementioned function will he used to perfo1n1 nanoindentations and its effectiveness will be analyzed.

65

5. Bridged Finite Element - Molecular Dynamics Nanoindentation

5 . 1.. Bridged Finite Element- Molecular Dynamics Nanoindentation Introduction

In the previous chapter, the theory characterizing the bridged FE-MD MATLABTM software was described. In this chapter, the software is tested and large scale nanoindentation simulations are executed. As perfonned using molecular dynamics MATLABTM code NI_MD_V_7_ 00, nanoindentations use rigid diamond indenters to indent copper substrates. Using each of the three designed indenter types; spherical, Berkovich and square pyramidal indenters, the sensitivity of the code is tested and larger scale simulations are perfonned. The bridged FE-MD sitnulation results are then analyzed and compared to MD results.

For each of the tests conducted using the bridged FE-MD code, prior to the commencetnent of the indentation procedure, an equilibrium step is first completed. While this was done for the MD simulations, using the bridged FE-MD method for this process is n1uch more effective. For the bridged FE-MD n1ethod, an iterative method is executed until the maximum atomic displacetnent throughout the system is within required limits. For all the simulations in this research, for the system to be considered in a state of equilibrium, the tnaximum atomic displacement within the syste1n must be less than 0.1

A. As

compared to the MD simulations

when thousands of iterations are required for equilibrium, the bridged FE-MD sin1ulations discussed in Sections 5.4-5.6 require only six iterations to reach equilibriu1n. Furthennore, for the bridged FE-MD simulations, the applied force prior to indentation is 1neasured to be zero rather than the negative value that was calculated at the conclusion of the MD equilibrium step. Therefore, the bridged FE-MD method projects to be much more efficient than traditional MD simulations.

66

5.2.

Bridged Finite Element -Molecular Dynamics Sensitivity Analysis

Prior to nanoindentation simulations being executed, the sensitivity of MATLABTM function NI_FE_MD_V_7 _00 is analyzed. In Sections 5.2.1-5.2.3, the sensitivity of the code is tested by analyzing the material response to indenter increment size changes and indentation depth size interval changes. Next, the atomic displacements of the system during nanoindentation are analyzed as previously tested for the MD analysis and the two results are compared.

5.2. 1. Indenter Increment Size Sensitivity Analysis
As described in Section 4.5, since the bridged FE-MD method is time independent, to simulate the effect of lowedng the indenter into the substrate, the indenter is moved incrementally into the substrate and the contact analysis is perforn1ed for each increment. It is expected that the increment size will not have a great effect on the results obtained from the simulation. In order to test this hypothesis, the indentation depth interval size is maintained constant at 0.1

A while the

number of increments per indentation depth interval is varied from ten increments to one hundred increments. For these simulations, the following initial conditions are used:

Indenter Type Temperature Substrate Size Indenter Diameter Maximum Indentation Depth Clamping

Spherical 293 K 4 by4 by 4 unit cells (14.46 2 unit cells (7.134 A)

A)

sA

Absolute clamping on all faces except the in the positive z-direction

Simulations using the above conditions are performed for five different increment sizes. The recorded forces are graphed over indentation depth and are shown in Figure 26. In the legend used in Figure 26, the increment size is descdbed based on the number of increments that is used for the contact analysis per FEM intervaL

67

25

T
e~

20 +-~--------------

10 Increments

· 20 Increments
s 25 Increments

e.. 50 Increments
· 100 Increments

0

1

2

3

4

5

Indent Depth (A)

Figure 26 -Increment Size Sensitivity Test Applied Force Results

As shown in Figure 26, the applied force results are not greatly affected by the number of increments used per interval size. However, for the case when only ten increments are used per FEM interval, there are slight changes to the force results that indicate that the simulation is unable to effectively capture the true nature of the system. Additionally, when 100 increments are used per FEM interval, the applied force values differ slightly from the remaining increment size tests. In this case, the forces are slightly greater at the conclusion of the nanoindentation than the remaining increment sizes. However, it is found that due the algorithm used for MATLAB TM function Contact_V_7 _00, the atoms are being pushed too quickly away from the indenter and the applied forces are again not true to the behaviour of the material. As a result, it is determined that each of the other three increment sizes would be adequate to perform the simulations effectively. For large scale simulations, having fewer increments per indentation depth interval could pose problems when many atoms are being contacted by the indenter simultaneously. Therefore, in this research, the optitnal increment size was chosen to be fifty increments per FEM interval (each incretnent lowers the indenter by 0.002 A), as this ensures that the behaviour of the material is captured effectively even for large scale simulations.

68

5. 2.2. Indentation Depth Interval Size Sensitivity Analysis

Once the increment size sensitivity analysis is completed, it ·is necessary to investigate the indentation depth interval size to ensure that theinterval size used will effectively capture the material response to the nanoindentation. Using the same initial conditions as used in the incren1ent size sensitivity analysis, interval sizes ranging from 0.05 each of these simulations, the increment size is maintained at

A to 0.2 A are studied. For 0.002 A, as determined in the

previous section. The results from the interval size tests are graphed in Figure 27.

25
20

z .:.
<U
y
L.

15

~ 0.05

AInterval Size

J2 10
"a

0.1 A Interval Size

a. Q.
<(

.~

m 0.15 Interval Size
5

-

· 0.2 A Interval Size

0

-5

Indent Depth

Figure 27 -Indentation depth Interval Size Sensitivity Analysis Applied Force Results

Figure 27 illustrates that the interval size used in the analysis drastically affects the bridged FEMD simulation results. For interval sizes of 0.05

A and 0.1 A,

there is little change in applied

force between the two sin1tHations. For the simulations using interval sizes of 0.15

A and 0.2 A,

however, there are significantchanges fron1 the smaller interval sizes. This is particularly true for the 0.2

A interval size as the system is unable to respond to the large aton1ic displacements that
A.

result from the contactwith the indenter. In fact, it is shown in Figure 27 that the applied forces are calculated to be negative values when the indentation depth reaches approxin1ately 4.5

This occurs because atoms are pushed together so quickly that the distance between then1 is less
69

than the cut-off distance as specified by the EAM potential function. As a result, the code is unable to calculate the forces between the atoms and the total applied force on the system is skewed. Therefore, interval sizes of 0.05

A and 0.1 A could both be

used to provide accurate

results in nanoindentation simulations. However, the optimal size for the purposes of this research is an interval size of 0.1

A, as the minuscule added accuracy of the 0.05 A interval size

does not warrant doubling the number of nanoindentation steps, and therefore, double the tin1e required for the simulations to be executed.

5. 2. 3. Bridged Finite Element -Molecular Dynamics Displacement Analysis

The final sensitivity analysis of the bridged FE-MD method investigates the displacement of atomic positions throughout the nanoindentation procedure. This sensitivity test compares the differences between the displacen1ents recorded in the MD and bridged FE-MD simulation techniques. For the simulation, just as was perfo1n1ed for the MD simulation, two equilibrium steps are investigated in addition to the first equilibrium step and the nanoindentation. A second equilibrium step is executed once the indenter reaches its ·maxitnum indentation depth, followed by a third equilibrium step that .is executed after the indenter is removed. The following initial conditions are used in the simulation as was used in Section 3.2.3:

Indenter Type Temperature Substrate Size Indenter Diatneter Maximum Indentation depth Clamping

Spherical 293 K 4 by 4 by 4 unit cells (14.46 2 unit cells (7.134 A)

A)

sA

Absolute clamping on all faces except the in the positive z-direction

As in the MD displacement analysis, for the bridged FE-MD simulation, only specific atoms are highlighted. While a more detailed displacement analysis could be performed using more of the substrate atoms, the goals of this analysis are to compare the two simulation n1ethods and to ensure that the substrate does not merely return to its original form once the indenter is removed from the system. In Tables 6-9, the results from the displacement sensitivity analysis is shown. In addition to merely displaying those atoms that present large displacements, some atoms that were
70

discussed in Section 3.2.3 will also be included. This inclusion will allow the two methods to be better compared.

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 153 165 169 181 237 241 253 257 64 314 339 63 62 7.2300 3.6150 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 3.6150 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 5.4 9.0375
Y-Position

After Equilibrium #1 (A)
X-Position Y-Position

Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525

Z-Position 14.3007 14.3007 14.2371 14.3007 14.3007 14.2651 14.2651 14.2651 14.2651 12.6424 12.5769 12.5769 12.6424

% Difference

7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5

3.5407 7.2300 7.2300 7.2300 10.9193 5.3 5.3841 9 9. 7.

7.2300 3.5407 7.2300 10.9193 7.2300 5.3841 9.0759 5.3841 9.0759 9.0948 5.3699 9.0901 5.3652 7.2300 10.9527 3.5073

9.0901

7.2300 7.2300 5.3648 9.0952 7.2300 7.2230 3.5827

7.2300

7.2300

at Equilibrium Step #l from Bridged FE-MD Simulations

Table 6 lists starting atomic positions and conesponding equilibrium atomic positions prior to the start of the indentation. In this table, only the percentage difference of the displacement in the z-direction is calculated. As seen in Table 6, there are no significant aton1ic displacements for the system to reach a state of equilibrium. The most significant displacements are located on the face that coincides with the maximum z-position values where the displacements are slightly larger than one percent. These findings are consistent with the results of the MD displacement sensitivity analysis.

71

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 153 165 169 181 237 241 253 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 3.6150 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 9.0375 5.4225 9.0375 5.4225 7.2300 10.8450 3.6150 7.2300 7.2300 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 10.8450 10.8450 10.8450 7.2300 3.6150

After Indentation (A) X-Position 3.3289 7.3886 7.2300 7.0714 11.1311 5.3592 5.0340 9.4260 9.1008 2.9066 7.6156 Y-Position 7.3886 3.3289 7.2300 11.1311 7.0714 5.3592 9.4260 5.0340 9.1008 9.5392 5.1833 9.2767 4.9208 7.6156 4.9208 9.2767 11.5534 2.9066 6.8444 7.2300 5.5774 8.8826 7.2300 72300 11.0667 11.0667 12.3948 11.0667 12.3948 12.3948 11.0667 7.0480 8.3577 8.3577 4.8108 2.6531 Z-Position 12.6988 12.6988 9.2371 12.6988 12.6988 10.6672 12.8889
% Difference

5
9.0375 7.2300 62 7.2300 7.2300

Table 7- Atomic Positions after Indentation Step from Bridged FE-MD Simulations

In Table 7, the atomic positions once the indentation has been completed are presented. At the conclusion of the indentation step, the aton1ic displacements in the z-direction for many of the atoms are quite substantial. As found in MD displacement sensitivity test, there are also significant displacements calculated in atoms that are compressed due to the indentation. h1terestingly, atoms 315 and 340 experience displacements of 26.2%, while those atoms are displaced with atoms 320 and 335 in the MD simulation. In the bridged FE-MD simulations, atoms 320 and 335 are also ·displaced in the x and y-directions. It is found that these atoms are contacted by the indenter at more of an angle than was the case for atoms 315 and 340. Due to the equilibrium steps performed for each interval during the FE-MD simulation, the system responded to the indentation faster and therefore, atoms 315 and 340 are marginally displaced prior to being contacted by indenter atoms.
72

Additionally, the displacements in atoms 314, 339, and 62 differ significantly fron1 the MD simulation. While in the MD simulations, atoms 314 and 339 displaced only 2.2% in the negative z-direction at the conclusion of the nanoindentation, displacements using the bridged FE-MD method are calculated as 22.9% in the negative z-direction. Atom 62, in contrast, is not displaced for the bridged FE-MD simulations as significantly as observed for the MD simulations. These large differences can once again be attributed to the equilibrium steps implemented by the bridged FE-MD method.

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 340 153 165 169 181 237 241 253 257 64 314 339 63 62 9.0375 7.2300 7.2300 10.8450 10.8450 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 3.6150 .2300 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 9.0375 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 L4.4600 12.6525 12.6525 12.6525

After Equilibrium #2 (A) X-Position 3.3289 7.3 7.2300 7.0714 11.1311 5.3592 5.0340 Y-Position 7.3886 3.3289 7.2300 11.1311 7.0714 5.3592 9.4260 5.0340 9.1008 9.5373 5.1833 6.8444 11.5554 9.2767 4.9227 7.6156 11 .5554 2.9046 6.8444 7.2300 5.5775 8.8825 7.2300 7.2300 7.2300 5.5775 8.8825 7.2300 7.2300 Z-Position 12.6988 12.6988 9.2371 12.6988 12.6988 10.6672 12.8889 12.8889 10.6672 12.3955 11.0667 11.0667 12.3955 11.0667 12.3955 12.3955 11.0667 6.9977 8.3315 8.3315 4.7426 2.5836

Table 8- Atomic Positions at Equilibrium Step #2 from Bridged FE-MD Simulations ·

Table 8 shows the atomic .positions at ·the conclusion of the second equilibrium step. As in the MD simulations, the indenter is held in place during this step and subsequently, the atoms directly contacting the indenter are unable to move. For the remaining atoms, there is almost no
73

displacement within the system. Due to the methodology of the bridged FE-MD code, the system is already in a state of quasi-equilibrium at the conclusion of the indentation. Therefore, for the equilibrium step to be completed, only one additional simulation step is required. As expected, at the conclusion of this additional step there is no significant change in the atomic positions throughout the system.

Starting Positions (A) Atom# 40 60 65 70 90 315 320 335 153 165 169 181 237 241 253 257 X-Position 3.6150 7.2300 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 3.6150 7.2300 7.2300 10.8450 5.4225 5.4225 9.0375 9.0375 .2300 5.4225 9.0375 7.2300 7.2300 Y-Position 7.2300 3.6150 7.2300 10.8450 7.2300 5.4225 9.0375 5.4225 9.0375 9.0375 5.4225 9.0375 5.4225 7.2300 10.8450 3.6150 7.2300 7.2300 5.4225 9.0375 7.2300 7.2300 Z-Position 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 14.4600 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 12.6525 10.8450 10.8450 10.8450 7.2300 3.6150 3.

After Equilibrium #3 (A) X-Position Y-Position 3. 7.2300 6.8761 10.7818 5.0184 82 Z-Position 13.8459 13.8459 7.2300 10.7818 6.8761 5.0184 10.0427 4.4173 9.4416 9.2095 7.3158 7.1 12.4102 5.4944 5.2505 9.2095 8 7.2300 5.6022 8.8578 7.2300 7.2300 5.4944 8.9656 5.2505 7.3158 12.4102 2.0498 7.1442 7.2300 5.6022 8.8578 7.2300 7.2300 12.1081 14.0699 12.4538 12.4538 14.0699 12.4538 14.0699 14.0699 12.4538 8.3538 10.0283 10.0283 6.1495 3.6088
% Difference

64
314 339 63 62

Table 9 -Atomic Positions at Equilibrium Step #3 from Bridged FE-MD Simulations

The aton1ic positions after the third equilibrium ·step is completed are shown in Table 9. As was case for the MD simulation, the system again expands once the indenter is removed. For the bridged FE-MD simulation, the removal of the indenter has a greater effect on the system. For atoms 62-65, the movement after the indenter is removed is drastically greater. Aton1 62, after being indented by 27 .9%, returns to a position only 0.17% less than its starting position.
74

Similarly, the displacements of atoms 63-65 using the bridged FE-MD technique are greater than was found for the MD simulations. If additional steps were to be executed for the MD simulations, the atoms would eventually exhibit the same displacements; however, for the blidged FE-MD this process takes only a few steps.

Atoms 153, 181, 241 and 253 are subjected to unique reactions due to the removal of the indenter. As shown in Table 9, these atoms are displaced by 11.2% in the positive z-direction. It is also seen that each of the atoms experience significant displacetnents either in the x or ydirection. It is evident that as the system expands, these Jour atoms are pushed too close to other atoms. As a result, the atomic forces acting on them are quite large and the atoms are pushed further in the z-direction and above their initial positions.

For the remaining atoms, the displacements observed at the conclusion of the indentation step are reduced as the system expands. While similar to the results of the MD simulations, the aton1ic displacements at the end of the final equilibrium step are still larger for the bridged FE-MD simulation. Since the MD sin1ulation .is not as effective at modeling the system as it undergoes the indentation, the MD simulation never actually reaches a state of equilibrium. Therefore, when the indenter is removed, the atomic positions of all atoms except atoms 62-65 are returned to positions very similar to their initial positions. Using the bridged FE-MD method, as expected, the indentation leaves more of a long lasting effect on the system. As such, it is evident that the bridged FE-MD method is more effective than the MD sin1tdation method for nanoindentation experimentation. In the coming sections, this point will be further illustrated as full-scale nanoindentation simulations are performed and their results are compared to the MD simulations results.

5.3.

Bridged Finite Element -Molecular Dynamics Simulation Conditions

For the bridged FE-MD simulations, .to intention was to perform simulations using the identical conditions as used for the MD simulations. However, because of computing constraints, modeling 10 by 10 by 10 unit cell sized copper substrates with PBC was not possible. Instead,

75

smaller copper substrates sized 8 by 8 by 6 unit cells were analyzed without PBC. While performing simulations using different substrate sizes for the two simulation techniques makes comparison more difficult, the purpose of this research is not to determine the exact hardness values for a copper nanomaterial. Rather, it aims to determine the effectiveness of the bridged FE-MD simulation tool in performing nanoindentation experiments. In Figures 28-33, the bridged FE-MD simulations results are graphed. For each of the simulations, in addition to plotting the bridged FE-MD results, the MD results for an indentation speed of 10 n1fs are also plotted on the same graph. At that speed, the systen1 is found to be capable of responding to the indentation most effectively. As such, comparison between the trends of each of the simulation methodologies is possible.

For each of these tests, the simulation temperature used was 293 K, and absolute clamping is used on all faces except in the positive z-direction. As in the MD simulations, testing is performed using each of the three designed indenters: spherical, Berkovich, and square pyramidal. For the MD sin1tdations, four different indenter sizes were used. Due to the smaller substrate size used for the bridged FE-MD method, simulations using the two larger indenter sizes are not possible. Using theselarger indenter sizes, contact would occur almost adjacent to the clamped edges of the substrate and therefore, the clamping would interfere with the displacements due to contact.and the simulation results would be inaccurate.

76

5.4. Bridged Finite Element -Molecular Dynamics Spherical Indenter Results

~FE-MD

Simulation

- M D Simulation -10 m/s

0

1

2

3

4

5

Indentation Depth (A)

Figure 28- FE-MD Results using Spherical Indenter with Diameter of Four Unit Cells

20 18
16

14
rG
~
Cll Cll

0..

12
10
~FE-MD

'"a

::.t:

m

....

w s:::

8
6
4
2

Simulation

......-MD Simulation- 10 m/s

0
0

1

2

3

4

5

Indentation Depth (A)

Figure 29- FE-MD Results using Spherical Indenter with Diameter of Five Unit Cells

77

5e5.. Bridged Finite Element -Molecular Dynamics Berkovich Indenter Results
50
45
40

-m
Q..

35 30
25
~FE-MD

~
Ill Ill

"til

c

(IJ

""' m 20 :c 15
10 5 0 0
1
2 Indentation Depth (A)

Simulation

- M D Simulation -10 m/s

3

4

Figure 30- FEuMD Results using Berkovich Indenter with Base of Length Four Unit Cells

25

20

ii Q..
~
Ill Ill (1.1

15
~FE-MD

"tll
a...
fill

c:

10

Simulation

:1:

- M D Simulation -10 m/s

5

0
0
1

2

3

4

5

Indentation Depth (A)

Figure 31- fEaMD Results using Berkovich indenter with Base of Length Five Unit Cells

78

5e6o Bridged Finite Element -Molecular Dynamics Square Pyramidal Indenter Results
50
45

40 35
ii Q.,
~
11.1'1 11.1'1

30 25 20 15 10
5
~FE-MD

"'C

c

GJ

Simulation

:;:

m

II..

~MD Simulation

- 10 m/s

0
0
2 4

6

8

10

Indentation Depth (A)
Figure 32- FE-MD Results using Pyramidal Indenter with Base four by four Unit Cells

50 45

35

'7i
~
VI VI

Q.

30
25
20
~FE-MD

"'C
L.

w c

Simulation

:X:

m

15
10
5 0 0
2

~MD

Simulation- 10 m/s

4

6

8

10

Indentation Depth ()\)
Figure 33- FE~MD Results using Pyramidal Indenter with Base Five by Five Unit Cells

79

5. 7. Discussion and Comparison between Bridged Finite ElementMolecular Dynamics Simulations and Molecular Dynamics Simulations

For the spherical indenter simulations, as shown in Figures 28-29, the bridged FE-MD results appear to follow the same trends as were found in the MD simulations. Due to the smaller substrate size for the bridged FE-MD simulations, the hardness values for the bridged FE-MD simulations are slightly less than those of the MD simulations. Interestingly, in both cases, the hardness values level off at approximately the same indentation depth. Additionally, the bridged FE-MD simulations exhibit the "indenter size effect," as was presented for the MD simulations. Furthermore, when comparing the results to those of Saraev and Miller, it is evident that the bridged FE-MD produces hardness values that more closely resemble Saraev and Miller's results. Based on this information, it is evident that the bridged FE-MD method is extremely successful for simulations using the spherical indenters.

For the simulations using Berkovich indenters, the differences between the bridged·FE-MD and MD simulation results are more pronounced. While the MD simulations differ greatly as the indenter size is altered, the bridged FE-MD simulation results follow the satne trends despite indenter size changes. As shown in Figures 30-31, in both of the two hardness plots, the maximum hardness value occurs within an indentation ·depth of 1 A. This peak in the hardness plot occurs as a large number of atoms contact the substrate very quickly during the indentation step of the simulation. Furthermore, for the bridged FE-MD simulations using Berkovich indenters, again the "indenter size effect" is exhibited in the results. Based on the information shown in Figures 30-31, it appears that the bridged FE-MD method is able to determine the hardness of a material much more effectively than the MD simulations.

The bridged FE-MD technique produces more uniform results than the MD method for simulations using square pyramidal indenters as well. As shown in Figures 32--33, in the MD simulations the hardness plots differ significantly for changes in indenter size, while the bridged FE-MD simulations produce almost identical plots. Due to the geometry of the square pyramidal indenters, the two indenters used in the bridged FE-MD simulations are identical except for the additional atoms included in the base of the larger indenter. Therefore, it is expected that the
80

results will not differ greatly. Due to the size of the square pyramidal indenter and the substrate, the system is prohibited from responding properly to the nanoindentation. As a result, the hardness results obtained frotn the square pyramidal indentation in this research are not indicative of the actual hardness values that would be obtained from a simulation using a large atomic system.

Overall, the bridged FE-MD simulation results are quite favourable. Despite the smaller substrate size used in the bridged FE-MD sitnulations, the results obtained in the bridged FE-MD sin1ulations are in fact much better than in the MD simulations. While the MD results all require significant indentation to occur before the applied forces are recorded as positive values, the iterative technique en1ployed by the bridged FE~MD MATLABTM function NI_FE_MD_V_7_ 00 ensures that the recorded applied forces on the system are very close to zero prior to the commencement of the nanoindentation step. As a result, positive applied force and hardness results are recorded fro.m the very start of the nanoindentation procedure.

While the MD simulations often were unable to capture the behaviour of the system due to the speed of nanoindentation, this is not an issue with the bridged FE-MD simulations. This is especially seen for the simulations using Berkovich indenters. Due to the smaller height of the Berkovich indenter, there were great difficulties in many of the MD sin1ulations performed in capturing the behaviour of the system as a result of the little tin1e the system has to respond to the indenter. As shown in Figures 28-33, the system does not appear to have any such difficulties when the bridged FE~MD method is implemented.

Besides the increased accuracy of the nanoindentation simulation results using the bridged FEMD method, significantly less simulation time is required for the simulations to be cmnpleted. For exan1ple, vvhile more than twenty-four hours is required to execute simulations using MD sin1ulations \Vith an indentation speed of 10 tn/s, the bridged FE-MD n1ethod simulations vvere completed in ten hours. While a portion of this difference ste1ns from the smaller substrate size used for the bridged ·FE-MD simulations, the bridged FE-MD technique still saves several hours of simulation thne cmnpared to traditional MD simulation techniques.

81

5. 8..

Chapter Sun1mary

In this chapter, the nanoindentation bridged FE-MD MA TLAB TM function NI_FE_MD_V_7_ 00 was first analyzed through a variety of sensitivity tests. These tests were extremely effective as the optimal initial conditions with which to run the simulations were determined and the atomic displacements obtained from a bridged FE-MD nanoindentation simulation were found to be similar to those of the MD si1nulation. Next, larger scale simulations were performed using spherical, Berkovich, and square pyramidal indenters. These simulations were extren1ely successful as the results were found to be an irnprovement upon the MD si1nulation results.

82

6e Concluding Remarks
In this research 5 computational tools were implemented to study the behaviour of atomic systeJns undergoing nanoindentations. Using an adaptation of a pre-existing custom-made molecular dynamics code, nanoindentations vvere performed to analyze the behaviour of copper nanomaterials under a variety of conditions. The interatomic potential forces were tnodeled using the embedding atom potential function. Copper substrates were analyzed using three different rigid diamond indenter types, each of which was designed in four different sizes, and at three indentation speeds. Overall, these simulations were successful but at the faster indentation speeds, in particular, the system was not ahvays able to respond quickly to the indentations.

To more efficiently model the behaviour of the system during nanoindentations, a bridged

FE~

I\1D code adapted for the needs of this research. This bridged FE-MD method, proposed by

Narayan, combines the theories of MD and FEM to allo\V the equations of motions found in MD to be solved using traditional FEl\1 theory. This method introduces a discretization scheme that is uniquely suited to modeling the interatomic forces in large atomic systems and enables the atomic displacements to be solved efiiciently.

Using this bridged FE-MD simulation, large scale nanoindentation shnulations \vere performed. These sin1ulations are found to be tnore effective and less time consuming than the traditional MD sitnulation technique. MD silnulations were found to have great difficulties in reaching a state of equilibriutn, resulting in less accuracy \Vithin the results. The bridged FE~ MD simulation method, in contrast, reaches a state of quasi~equilibrium after each indentation depth interval and therefore, the simulations produce more accurate nanohardness results. While the bridged FEMD shnulations were found to be extren1ely effective, further testing n1ust be done. Due to the computational constraints, the simulations investigated using the bridged FE-MD method were performed mainly to assess its effectiveness. Therefore, it will be necessary to conduct larger scale sin1ulations so that the results can be used cotnmerciaUy in the design process.

83

While this research impletnents the bridged FE-MD method for a very specific purpose, future research possibilities using the bridged FE-MD nanoindentation softvvare are vast. These possible avenues include but are not lilnited to: studying the effects of nanoindentation on alloys, and imperfect crystal structures; determining the optimal size of coatings on a material to ensure the greatest hardness values; analyzing the hardness of a material undergoing significant stress or experiencing fatigue or failure; determining the effect of nanoindentation experimentation on the fatigue life of a nanomaterial; etc. To ensure that the bridged FE-MD software can be used to explore other materials such as non-metals, powders, and alloys, additional potential functions must first be incorporated within the bridged FE-MD software. As this research group progresses, these adaptations to the bridged FE-MD software will be implemented to provide researchers with a comprehensive tool with which they will be able to significantly itnpact the field of nanomaterials.

84

References

[1]

Ratto, F., Matteini, P., Rossi, F., Menabuoni, L., Tiwari, N., Kulkarni, S. K., et al. (2009). Photothermal effects in conective tissues mediated by laser-activated gold nanorods. Nanomedicine: Nanotechnology Biology and Medicine (5) , 143-15 1. Inoue, K.-i., Takano, H., Yanagisawa, R., Koike, E., & Shimada, A. (2009). Size effects of latex nanomaterials on lung inflammation in mice. Toxiology and Applied Pharmacology (234), 68-76. Kim, J., Yun, J.~H., & Han, C.~S. (2009). Nanomaterial~embedded gas sensor fabrication. Current Apllied Physics (9), e38-e4L Li, Q., Mahendra, S., Lyon, D. Y., Brunet, L., Liga, M. V., Li, D., et al. (2008). Antimicrobial nanomaterials for water disinfection and microbial control: Potential applications and implicants. ~Vater Research (42), 4591-4602. Schulte, J. (2005). Nanotechnology, global strategies, industry trends and applications. West Sussex, England: Jon Wiley and Sons, Ltd. Jeng, Y.-R., Tsai, P.-C., & Fang, T.-H. (2005). Molecular-dynamics studies of bending mechanical properties of empty and C60-filled carbon nanotubes under nanoindentation. The Journal of Chemical Physics (122) . Zeng, F., & Sun, Y. (2006). Molecular dynamics simulations ofnanoindentation ofposs materials. Computational Methods, 1655--1660. Noreyan, A., Amarb, J., & Marinescua, I. (2005). Molecular dynamics simulations of nanoindentation of beta-SiC with diamond indenter. lvfaterials Science and Engineering B (11?), 235-240. Kalia, R. K., Nakano, A., & Vashishta, P. (2007). A molecular dynamics study ofnanoindentation of amorphous silicon carbide. Journal of Applied Physics (1 02) .

[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]

[10] Huo, D., Liang, Y., & Cheng, K. (2006). An investigation ofnanoindentation tests on the single crystal copper thin film via an atomic force microscope and molecular dynamics simulation. Journal of Mechanical Engineering Science (221), 259-266.

[1 1] Narayan, K., Behdinan, K., & Fawaz, Z. (2007). An engineeringporiented embedded-atom-method potential fitting procedure for pure fcc and bee metals. Journal of Materials Processing Technology (182)' 387-397.
[12] Andrade, J. E., & Tu, X. (2009). Multiscale framework for behavior prediction in granular media. A1echanics ofJVfaterials (41), 652-669. [13] Harndi, M., & Ferreira, A. (2009). Multiscale design and modeling of protein-based nanomechanisms for nanorobotics. The International Journal of Robotics Research (28) , 436-449.

85

[14] Ayton, G. S., & Voth, G. A. (2009). Systematic multiscale simulation of membrane protein systems. Current Opinion in Structural Biology (19), 138-144. [15] Bavafaye~Haghighi, E., Yazdanpanaha, M., Kalaghchi, B., & Soltanian~Zadeh, H. (2009). Multiscale cancer modeling: In the line of fast simulation and chemotherapy. Mathematical and Computer Modelling (49), 1449-1464. [16] Martins, M., Ferreira Jr., S., & Vilela, M. (2007). Multiscale models for the growth of avascular tumors. Physics ofL?fe Reviews (4) , 128-156. [17] Zas]avsky, G., Guzdar, P., Edelnman, M., Sitnov, M., & Sharma, A. (2008). Multisca]e behavior and fractional kinetics from the data of solar wind-'magnetosphere coupling. Communications in Nonlinear Science and Numerical Simulation (13), 314-330. [18] Peters, N. (2009). Multiscale combustion and turbulence. Proceedings of the Combustion Institute

(32)' 1-25.
[19] John, V., & Roland, M. (2007). Simulations of the turbulent channel flow at Re=l80 with projectionbased finite element variational multi scale methods. International Journal for Numerical Methods in Fluids (55) , 407-429. [20] He, X., & Ren, L. (2009). An adaptive multiscale finite element method for unsaturated flow problems in heterogeneous porous media. Journal of Hydrology (374) , 56-70. [21] Wang, C.-T., Jian, S.-R., Jang, J. S.-C., Lai, Y.~S., & Yang, P.-F. (2008). Multiscale simulation of nanoindentation on Ni (1 0 0) thin film. Applied Surface Science (255) , 3240-3250. [22] Shiari, B., & Miller, R. E . (2008). Multiscale modeling of ductile crystals at the nanoscale subjected to cyclic indentation. Acta Materialia (56) , 2799-2809. [23] Jin, J., Shevlin, S., & Guo, Z. (2008). Multiscale simulation of onset plasticity during nanoindentation of AI (001) surface. Acta Materia/ia (56), 4358-4368. [24] Yu, W., & Shen, S. (2009). Multiscale analysis of the effects ofnanocavity on nanoindentation.

Computational Materials Science .
[25] Narayan, K . (2007). A numerical fitting procedure for the Embedding Atom Method interatomic

potential and a bridgedfinite element - molecular dynamics method for large atomic systems.
Toronto: Ryerson University. [26] l\r1ansoori, G. A. (2005). Principles of nanotechnology. World Scientific. [27] Frenkel, D., & Smit, B. ( 1996). Understanding molecular simulation -from algorithms to applications. San Diego, CA: Academic Press. [28] Daw, M.S., & Baskes, M. (1983). Semiempirical, quantum mechanical calculation of hydrogen embrittlement in metals. Physical Review Letters (50), 1285-1288.

86

[29] Daw, M.S., & Baskes, M. (1984). Embedding Atom Method: Derivation and application to impurities, surfaces, and other defects in materials. Physical Review B (29) , 6443~6453. [30] Foiles, S., Daw, M. S., & Baskes, M. (1986). Embedding Atom Functions for the fcc metals Cu, Ag, Au, Ni, Pd, Pt and their alloys. Physical Review B (33) , 7983-7991.

[3 1] Kaupp, G. (2006). Atomic force microscopy, scanning nearfield optical microscopy and
nanoscratching. Springer. [32] Van Swygenhoven, H., Hasnaoui, A., & and Der]et, P.M. (2004). Nanoindentation in nanoCJystalline metallic layers: A rnolecular dynamics study on size effects. Villigen, Switzerland: Paul Scherrer Institut, NUM/ASQ. [33] Shi, Y., & Falk, M. L. (2007). Simulations ofnanoindentation in a thin amorphous metal film. Thin Solid Films (515) , 3179-3182. [34] Saraev, D., & Miller, R. E. (2006). Atomic-scale simulations of nanoindentationainduced plasticity in copper crystals with nanometer-sized nickel coatings. Acta Materialia (54), 33-45. [35] Touloukian, Y., Kirby, R., Taylor, R., & Desai, P. (1970). Thermophysical properties of matter Vol. 12. IFI/Plenum. [36] Gerberich, W., Tymyak, N., Grunlan, J., Horstemeyer, M., & Baskes, M. (2002). Interpretations of indentation size effects. Journal ofApplied Mechanics (69) , 433-442.

87

Appendix A- Flowcharts for Molecular Dynamics Code
Call desired crystal lattice structure function to define the initial positions and velocities of the system

Use MATLABTM function EAM_Poly_Fit_V_7_00 to fit the EAM embedding function defined earlier

Define initial parameters for the system such as electron density and pair potential functions

Ca!IMATLABTM function EAM_Range_V_7_0 0 to obtain tabulated EAM potentials for material

H

START

1

Create indenter using MATLABTM function Indenter_Design_V_7_00 using the specified indenter size and type

Define nanoindentation step initial conditions (for example, number of time steps, movement of the indenter)

~<~..all----"'"'1

..,

Advance nanoindentation step

NO

All nanoindentation steps considered?

YES

...

STOP

J

YES If first equilibrium step is completed, move indenter using MATLABTMfunction Indenter_Move_V_7_ 00 and perform contact analysis between the indenter and the substmte using MATLAB TM function Contact_V_7_00 Record all relevant information such as atomic positions, velocities, forces and contact area in text file

All time steps completed?

...

NO
MATLABTM functions Contact_Area_V_7_00 and Force_Summation_V_7_00 are executed

Calculate the interatomic dist:!nces and tabulate those distances that are less than the upper cut-off distance

M""'-t--------;1
I"'

1

Advance time stepJl~<~~~B---------....

Using the tabulated --in_t_e-ra-tl-JO,....l_J· calculate the EAM potential energy '-

1 c-d-is-t-an_c_e_s,-~""'-t----------tl ~

1

Choose next atom11111

1~...----Jonsidered ?

NO

All atoms

YES

...

Update all positions and velocities. If contact analysis was performed, only the atomic position changes as determined by the contact analysis are applied to those atoms

Use EAM potential derivatives to determine the atomic forces

Calculate the acceleration of the atom using the EAM force

Use Taylor series expansion to calculate the atomic position and velocity

Figure 34- Program Execution Flowchart for MATLABTM function NI_MD_V_7_00

88

Define initial conditions such as crystal structure, indenter type, and indenter size

Calculate the trin1 equations for the indenter geotnetry

Evaluate the position of indenter atom

Write atomic positions in excluded atoms text file

Write atotnic positions in indenter geometry text file

figure 35- Program Execution Flowchart for MATlABTM fJJnction lndenter_Design_V_7_00

89

Calculate interatomic distances between substrate atom and indenter atoms

Store substrate and indenter atom combinations in contact matrix

NO

Determine number of indenter atoms contacting substrate atom in question
TWO Calculate distance between atom and first indenter atom and record corresponding displacement THREE

ls contact angle greater than maximum angle?

Displacement in z-directiori only

NO
Displacement in z-direction only Displacement in radial direction Calculate distance between atom and second indenter atom and record corresponding displacement

Record atomic displacements

NO

Figure 36- Program Execution Flowchart for MATLABTM function Contact_V_7_00

90

Appendix B - Flowcharts for Bridged FE-MD Code

Call desired crystal lattice structure function to define the initial positions and velocities of the system

START

Create indenter using MATLABTM function Indenter_Design_V_7_00 using the specified indenter size and t}1Je

STOP
Advance nanoindentation step

Define nanoindentation step initial conditions (for example, number of increments used, displacement of the indenter)

Define initial conditions oftb.e simulation (for example, if iterations are used, PBC)

Record all relevant information such as atomic positions, velocities; forces and contact area in text i1le

Lower indenter into substrate incrementally

NO
Perform contact analysis between the indenter and the substrate using MATLABTM function Contact_V_7_oo

MATLAB TM functions Contact_Area_V_7_ 00 and Force_Summation_V_7_00 are executed

Solve for all unknown displacements using FEM methodologies

Store contact displacements in temporary variable

Using EAM force equations, calculate elemental forces YES

NO

Apply nodal boundary conditions to system (including those from the contact analysis)

Apply atomic displacement from contact analysis to system

Calculate interatomic distances and tabulate those distances that are less than the upper cutoff distance

Create elemental stiffness matrix that includes all forces within the cut-off distance from atom

Sum all elemental stiffness matrices to torm global stiffness matrix

Figure 37- Program Execution Flowchart for MATLABTM function NI_FE_MD_V_7_00

91


