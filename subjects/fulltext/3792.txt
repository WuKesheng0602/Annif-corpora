KINETO-ELASTIC ANALYSIS OF MODULAR ROBOT SYSTEMS WITH COMPONENT MODEL UPDATING

by

Richard Phillip Mohamed Master of Applied Science, Ryerson University (2007) Bachelor of Engineering, Ryerson University (2005) Toronto, Ontario, Canada

A dissertation presented to Ryerson University in partial fulfillment of the requirements for the degree of Doctor of Philosophy in the program of Aerospace Engineering

Toronto, Ontario, Canada, 2015 © Richard Phillip Mohamed, 2015

Author's Declaration
I hereby declare that I am the sole author of this thesis. This is a true copy of the dissertation, including any required final revisions, as accepted by my examiners.

I authorize Ryerson University to lend this thesis to other institutions or individuals for the purpose of scholarly research.

I further authorize Ryerson University to reproduce this thesis by photocopying or by other means, in total or in part, at the request of other institutions or individuals for the purpose of scholarly research.

I understand that my dissertation may be made electronically available to the public.

ii

KINETO-ELASTIC ANALYSIS OF MODULAR ROBOT SYSTEMS WITH COMPONENT MODEL UPDATING Richard Phillip Mohamed Doctor of Philosophy, Aerospace Engineering, Ryerson University (2015)

Abstract
This dissertation describes the kineto-elastic analysis and component structural dynamic model updating of serial modular reconfigurable robots (MRRs). In general, kineto-elastic analysis is concerned with the structural vibrations, elastic deflections, and torque transmissions of robots which undergo motion from one pose (position and orientation) to another. This work focuses on the kineto-elastic analysis of MRRs undergoing low-speed quasi-static motion. When determining an MRR's payload capacity, or designing MRR modules, the main difficulty is the large number of module configurations and the infinite number of poses within each configuration. Also, the kineto-elastic models of MRRs can become quite large with an increasing number of modules, thereby increasing the numerical complexity. Furthermore, the analytical models of individual MRR components may contain uncertainties, such as unknown stiffness and material parameters, which may lead to large errors for assembled MRR models. To alleviate these issues, a new framework was developed for the kineto-elastic analysis of MRR modules with an emphasis on assessing the worst-case poses. First, a combinatory search method was presented to reduce the computational burdens associated with determining the maximum payload capacity, and performing the module stiffness designs. This involved identifying the worst-case configuration and pose amongst a large number of configurations and infinite number of poses. Afterwards, it was demonstrated that the determination of an MRR's payload capacity, as well as the module stiffness designs, can be performed at the worst-case pose and configuration to satisfy a global set of kineto-elastic performance requirements for all remaining configurations. Next, a new component mode synthesis (CMS) model with fixed-free component boundaries was developed to reduce the sizes of kineto-elastic models, mimic natural link-joint connectivity, and allow experimental tests of joint modules in multiple poses to enable

iii

test-analysis model correlation. Finally, a novel method was created to update the uncertain model parameters of joint and link modules using frequency response data from component vibration tests in multiple poses (including the worst cases), with boundary conditions matching those from the CMS models. This procedure can completely avoid testing an entire assembly to perform model updating, and can provide accurate updated model results in any assembly pose.

iv

Acknowledgements
First and foremost, I owe a deep sense of gratitude to my supervisor, Dr. Jeff Xi, who has taken me under his wing since my undergraduate studies. It has been a long and fruitful journey. Although it was difficult with minimal funding at first, he still accepted me as his PhD student, and for that I am eternally grateful. Through project-based learning, Dr. Xi has trained several HQP during his tenure, and I am thankful he included me in some of those projects. He works very hard to ensure his students are supported. His solutions to many engineering problems are quite intriguing, yet resourceful. Not only is he full of brilliant ideas, but he is willing to take the time and go out of his way to meet with his students. It has been my utmost pleasure to know and work for him, and I hope we can remain good friends in the future. Next, I would like to sincerely thank the members of my committee, Dr. Cheung Poon, Dr. Bo Tan, Dr. Vincent Chan and Dr. Chris Mechefske (from Queen's University) for taking time away from their schedules in order to review my dissertation. I am grateful that Dr. Hekmat Alighanbari volunteered to chair my preliminary exam. I am deeply indebted to Dr. Jeff Yokota for accepting me into this program, and for all of the great conversations we had about martial arts during my time at Ryerson. Also, thanks must go to Dr. Habiba Bougherara for involving me in some of her projects, and believing in my capabilities. I would also like to thank Leah Rogan for continuously guiding me through the administrative process, always providing a quick answer to my questions, and for providing me with necessary letters. She is undoubtedly the best graduate program administrator at Ryerson. I would also like to thank Kim Gallo, for always keeping me in mind when the department needed a TA (especially for Dr. Bo Tan's AER222 class). In addition, I would like to thank the awards committee from the Department of Aerospace Engineering at Ryerson University, the High Performance Computing Virtual Laboratory at Queen's University, and the government of Ontario for the vast amounts of awards and scholarships throughout my PhD studies. I would also like to thank all of my fellow colleagues who worked in EPH107 over the years. Although many have come and gone, it was my pleasure to work with all of them. I'd like to especially thank Daniel Finistauri, Oscar Jia, Liang Liao and Yu Lin for all of their

v

encouragement and great memories we had over the years. I hope we never lose contact. My sincere thanks goes to John Montesano (who I've known since my high school days). Without his advice, I probably wouldn't have even enrolled in the aerospace undergraduate program, let alone graduate studies. Thanks must also be given to Tony Balkissoon and Jaime Bustamante for taking their time to review my dissertation. It was quite encouraging to have an intelligent lawyer and MBA graduate read through my work. My gratitude must be given to Hamid Ghaemi and Primoz Cresnik for allowing me to use the department's vibration test equipment, and for checking the sensor calibrations. Also, I have to thank Peter Bradley for machining the components used for my vibration experiments. Without the help of these engineering support officers, none of the vibration tests would have been possible. Finally, I wouldn't have reached this far in my scholarly career without the unconditional love, support, understanding, and patience from my parents, Franklin and Pearl, sister Diana, and girlfriend Sophie. Words alone can't describe the personal sacrifices you've made for me. You all set the foundations, from which I promise to build upon. This work, and everything else I do in this life, is dedicated to you.

vi

Table of Contents
erial Modular Robot Structural Stiffness Performance............................................................................4 1.2.2 Stiffness and Payload Design of Serial Reconfigurable Modules ..............................................................6 1.2.3 Structural Dynamic Model Reduction for Modular Robots .......................................................................7 1.2.4 Component Experiments and Model Updating for Modular Robots..........................................................8 1.3 PROBLEM STATEMENT ........................................................................................................................................9 1.4 RESEARCH OBJECTIVES ....................................................................................................................................10 1.5 OUTLINE OF DISSERTATION ..............................................................................................................................12 2. LITERATURE REVIEW ....................................................................................................................................14 2.1 KINETO-ELASTIC MODELING OF ROBOTS ..........................................................................................................14 2.1.1 Kineto-elastic Model Discretization Techniques......................................................................................18 2.2 WORKSPACE SEARCH METHODS FOR ROBOT KINETO-ELASTIC ANALYSIS.......................................................21 2.3 DESIGN FOR ROBOT KINETO-ELASTIC PERFORMANCE REQUIREMENTS ............................................................25 2.4 COMPONENT SUBSTRUCTURING METHODS FOR VIBRATION ANALYSIS ............................................................27 2.4.1 Experimental Component Mode Synthesis Methods ................................................................................32 2.4.2 Component Mode Synthesis Modeling of Robots .....................................................................................34 2.5 STRUCTURAL DYNAMIC MODEL UPDATING METHODS .....................................................................................36 2.5.1 Model Updating Techniques for Robots...................................................................................................40 3. KINETO-ELASTIC MODELING METHOD FOR SERIAL MODULAR ROBOTS ..................................42 3.1 SYSTEM DESCRIPTION OF SERIAL MODULAR ROBOT ........................................................................................42 3.2 FORWARD KINEMATICS METHOD FOR SERIAL MODULAR ROBOTS...................................................................44 3.2.1 General Rigid-Body Motion for a Single Module ....................................................................................44 3.2.2 Initial Configuration Assembly ................................................................................................................46 3.2.3 Motion Pose Computations ......................................................................................................................49 3.3 KINETO-ELASTIC MODELING USING THE FINITE ELEMENT METHOD ...............................................................51 3.3.1 Finite Element Discretization...................................................................................................................52 3.3.2 Module Structural Element Shape Functions...........................................................................................54 3.3.3 Local Connectivity of Module Element Coordinates................................................................................57 3.3.4 Module Element Structural Stiffness ........................................................................................................59 3.3.5 Module Element Structural Mass .............................................................................................................61 3.3.6 Joint Motor Stiffness ................................................................................................................................63 3.3.7 Rigid Offset Components and Non-Structural Masses .............................................................................67 3.3.8 Pose-Dependent Loads Due to Gravity....................................................................................................70 3.3.9 System Equations and Assembly ..............................................................................................................72 3.4 CASE STUDY .....................................................................................................................................................74 3.6 SUMMARY .........................................................................................................................................................79

vii

limination Search for Feasible Configuration Enumeration .................................................................87 4.4.2 Workspace Search for using GA/NSGA-II for Worst-Case Kineto-Elastic Performance ........................90 4.4.3 Workspace Search Simplifications and Convergence Issues....................................................................93 4.5 NUMERICAL CASE STUDIES ..............................................................................................................................94 4.5.1 Planar Configuration for Workspace Search Verification.......................................................................95 4.5.2 Worst-Case Kineto-Elastic Performance for Spatial Configurations ......................................................99 4.6 SUMMARY .......................................................................................................................................................104 5. COMBINATORIAL SEARCH METHOD FOR THE PAYLOAD CAPACITY ANALYSIS AND MODULE STIFFNESS DESIGN ......................................................................................................................105 5.1 PROBLEM DESCRIPTION ..................................................................................................................................106 5.1.1 Payload Capacity Problem ....................................................................................................................106 5.1.2 Module Stiffness Design Problem ..........................................................................................................108 5.2 COMBINATORIAL SEARCH METHOD FOR PAYLOAD CAPACITY ANALYSIS AND MODULE STIFFNESS DESIGN .109 5.3 IMPLEMENTATION CONSIDERATIONS ..............................................................................................................112 5.3.1 Payload Capacity Determination...........................................................................................................112 5.3.2 Nonlinear Approach for Module Stiffness Design..................................................................................114 5.4 NUMERICAL CASE STUDIES ............................................................................................................................116 5.4.1 Maximum Payload Capacity Analysis....................................................................................................116 5.4.2 Module Stiffness Design Using Nonlinear Method ................................................................................118 5.5 SUMMARY .......................................................................................................................................................122 6. COMPONENT MODE SYNTHESIS WITH FIXED-FREE INTERFACE CONDITIONS FOR SERIAL MODULAR ROBOTS........................................................................................................................................123 6.1 FREQUENCY RESPONSE FUNCTION FOR A SINGLE COMPONENT ......................................................................124 6.2 COMPONENT STRUCTURAL DYNAMIC MODEL REDUCTION ............................................................................127 6.2.1 Craig-Bampton Method for Component Model Reduction ....................................................................128 6.2.2 Component Model Reduction with Hybrid Interface Conditions ...........................................................131 6.3 COMPONENT COORDINATE FRAME TRANSFORMATION ...................................................................................136 6.4 SYSTEM ASSEMBLY IN GLOBAL FRAME ..........................................................................................................137 6.5 CMS MODEL RESONANCES AND ANTIRESONANCES .......................................................................................139 6.6 RECOVERY OF FRF PHYSICAL COORDINATES FROM CMS MODEL .................................................................142 6.7 CASE STUDY ...................................................................................................................................................145 6.8 SUMMARY .......................................................................................................................................................156 7. POSE-BASED COMPONENT VIBRATION TESTING AND MODEL UPDATING METHOD.............157 7.1 COMPONENT MODEL UPDATING FOR MULTIPLE POSES ..................................................................................158 7.1.1 Model Updating Parameters..................................................................................................................161 7.1.2 Constrained Optimization Approach......................................................................................................162 7.2 DETECTION OF ANALYTICAL RESONANCES AND ANTIRESONANCES ...............................................................166 7.3 OVERVIEW OF COMPONENT UPDATING AND TESTING METHOD .....................................................................168 7.3.1 Assembled Model Correlation................................................................................................................169 7.4 CASE STUDY - ADJUSTABLE MODULAR LINKAGE SYSTEM .............................................................................170 7.4.1 Analytical Component Model Description .............................................................................................171 7.4.2 Component Experiments and Updating .................................................................................................176 7.4.3 Assembly Verification Experiments........................................................................................................183 7.5 CASE STUDY - LANDING GEAR ASSEMBLY .....................................................................................................188 7.5.1 - Analytical Component Model Description............................................................................................188 7.5.2 Component Experiments and Updating .................................................................................................191

viii

7.5.3 Assembly Verification Experiments®..................................................................................223 C.2.1 Transformation to Frequency Domain ..................................................................................................225 C.2.2 Frequency Domain Data Checks...........................................................................................................227 C.2.3 FRF Averaging and Smoothing .............................................................................................................229 APPENDIX D - EXPERIMENT FRF DATA ADJUSTMENTS FOR PARASITIC LOADING EFFECTS..232 D.1 MASS LOADING EFFECTS ...............................................................................................................................232 D.2 FIXTURE LOADING EFFECTS ...........................................................................................................................233 BIBLIOGRAPHY....................................................................................................................................................236

ix

List of Tables
Table 3-1: Pitch, roll and yaw input angles for each initial configuration..................................................................48 Table 3-2: Module geometric properties for case study .............................................................................................77 Table 3-3: Joint motion inputs and module position vectors for case study ...............................................................78 Table 3-4: Kineto-elasto-static tip displacement results for case study ......................................................................78 Table 3-5: Stationary undamped natural frequency results for test cases ...................................................................79 Table 4-1: GA and NSGA-II parameters....................................................................................................................95 Table 4-2: Computation times for solving the four parameters in Eq. (4.5) for a single configuration......................99 Table 4-3: Enumerated MRR spatial configurations ................................................................................................100 Table 5-1: Stationary payload capacities for kineto-elastic performance requirements ...........................................117 Table 5-2: Ranking scheme to determine overall worst-case configuration.............................................................120 Table 5-3: Final module thickness designs...............................................................................................................120 Table 5-4: Worst-case kineto-elastic performance for design validation .................................................................121 Table 6-1: Model parameters for joint components..................................................................................................147 Table 6-2: Full FE model resonances and antiresonances for each test case............................................................152 Table 6-3: Computation times for case study example.............................................................................................155 Table 7-1: FE parameters for each substructure .......................................................................................................175 Table 7-2: Initial analytical model parameters .........................................................................................................175 Table 7-3: Upper and lower bounds for updating parameters...................................................................................178 Table 7-4: Updated FE model parameters adjustable linkage case study .................................................................179 Table 7-5: Comparison of component experimental resonances with initial and updated models ............................181 Table 7-6: Comparison of component experimental antiresonances with initial and updated models ......................182 Table 7-7: PMAC and Mean FDAC values for initial and updated component models............................................183 Table 7-8: Comparison of assembly experimental resonances with initial and updated CMS models......................186 Table 7-9: Comparison of assembly experimental antiresonances with CMS models ..............................................186 Table 7-10: PMAC and Mean FDAC values for initial and updated CMS models...................................................187 Table 7-11: Initial landing gear analytical model parameters....................................................................................191 Table 7-12: Lower and upper bounds for landing gear updating parameters ...........................................................194 Table 7-13: Updated landing gear FE parameters .....................................................................................................195 Table 7-14: Comparison of component experimental resonances with initial and updated models ..........................197 Table 7-15: Comparison of component experimental antiresonances with initial and updated models ....................197 Table 7-16: PMAC and Mean FDAC values for initial and updated component models..........................................198 Table 7-17: Comparison of assembly experimental resonances with CMS models ..................................................201 Table 7-18: Comparison of assembly experimental antiresonances with CMS models ...........................................202 Table 7-19: PMAC and Mean FDAC values for initial and updated CMS models...................................................203

x

List of Figures
Figure 1-1: Types of common MRR structures (a) Serial with long joint axis offsets [14], (b) Serial with hinged joint modules, (c) Serial with successive revolute joints (d) Parallel kinematic machine (PKM) .......................3 Figure 2-1: Typical reference frames used for flexible robot modeling (a) Global frame, (b) Floating frames, (c) Corotational frames............................................................................................................................................15 Figure 2-2: (a) Workspace visualization with kineto-elastic parameter mapping using increment-based search [59], (b) Workspace volume computation using grid-based search [51] ....................................................................22 Figure 2-3: (a) Coupled cantilever beam system, (b) Fixed-interfaces, (c) Free-interfaces, (d) Hybrid interfaces ....29 Figure 2-4: Updated FRF using simulated experimental data ....................................................................................37 Figure 3-1: (a) Inventory of MRR modules, (b) MRR assembled in two different configurations ............................43 Figure 3-2: General motion for a single link module..................................................................................................45 Figure 3-3: Initial configuration directions for a single joint module.........................................................................47 Figure 3-4: MRR modules at initial configuration and after motion occurs...............................................................48 Figure 3-5: Module finite element discretization........................................................................................................53 Figure 3-6: Local displacements and forces at each node in a spatial finite element beam........................................55 Figure 3-7: Motor virtual spring stiffness (a) Side View, (b) Front view...................................................................63 Figure 3-8: (a) Distributed load due to self-weight in global frame, (b) Equivalent consistent nodal loads in local frame, (c) Equivalent consistent nodal loads in global frame ............................................................................71 Figure 3-9: MRR poses for case study (a) Initial configuration, (b) Pose #1 .............................................................75 Figure 3-10: MRR poses for case study (a) Pose #2, (b) Pose #3...............................................................................76 Figure 4-1: Hybrid search method for worst-case stiffness configurations and poses................................................87 Figure 4-2: Elimination search algorithm for configuration enumeration ..................................................................89 Figure 4-3: (a) Flowchart of GA/NSGA-II workspace search method, (b) Pseudo-code for FEM solver.................91 Figure 4-4: Planar verification configuration .............................................................................................................95 Figure 4-5: Maximum translational deflection results for planar configuration (a) Single GA run, (b) Multiple GA/NSGA-II runs ..............................................................................................................................................96 Figure 4-6: Standard deviations for 30 translational deflection optimal joint variables .............................................98 Figure 4-7: Planar configuration optimal joint variables for maximum translational deflections ..............................98 Figure 4-8: Joint variables for worst-case stiffness poses in Eq. (4.5)......................................................................101 Figure 4-9: (a) Highest linear and angular deflections, (b) Highest static torques and lowest fundamental natural frequencies found in spatial MRR configurations with 70 N (7.1356 kg) payload..........................................102 Figure 4-10: Worst-case poses for (a) Configuration #1, (b) Configuration #12, (c) Configuration #2, and (d) Configuration #3 ..............................................................................................................................................103 Figure 5-1: Combinatorial search method for payload capacity analysis and module stiffness design .....................111 Figure 5-2: Search method for module stiffness design using GA with nonlinear constraints.................................114 Figure 5-3: Configuration and pose with lowest payload capacity...........................................................................118 Figure 6-1: Serial modular robot component models ...............................................................................................125 Figure 6-2: Joint module i CMS interface conditions for (a) Craig-Bampton method, (b) Hybrid interface method .........................................................................................................................................................................128 Figure 6-3: Component coordinate frames for assembly experimental tests ............................................................143 Figure 6-4: Component FE discretization for hinged modular robot example with interface conditions shown for hybrid CMS method.........................................................................................................................................146 Figure 6-5: Poses for case study (a) Initial configuration, (b) Pose #1, (c) Pose #2, (d) Pose #3 .............................148 Figure 6-6: Drive-point FRFs for initial pose (a) 33 DOF test case, (b) 42 DOF test case.......................................149 Figure 6-7: Drive-point FRFs for pose #1 (a) 33 DOF test case, (b) 42 DOF test case............................................150 Figure 6-8: Drive-point FRFs for pose #2 (a) 33 DOF test case, (b) 42 DOF test case............................................151 Figure 6-9: Drive-point FRFs for pose #3 (a) 33 DOF test case, (b) 42 DOF test case............................................152 Figure 6-10: Resonance frequency relative errors (a) Initial pose, (b) Pose #1, (c) pose #2, (d) Pose #3 ................153 Figure 6-11: Antiresonance frequency relative errors (a) Initial pose, (b) Pose #1, (c) pose #2, (d) Pose #3 ..........154 Figure 7-1: Substructure experiment setup with component BCs for hybrid CMS method (a) Link module test, (b) Joint and link module tests for three poses.......................................................................................................159 Figure 7-2: Large phase angle oscillations due to small noise regions after FRF smoothing (a) Magnitude, (b) Real part, (c) Phase, (d) Imaginary part....................................................................................................................164 Figure 7-3: Updating process for hinged components with constrained genetic algorithm......................................165

xi

Figure 7-4: MvMIF for an FRF column with three excitation points .......................................................................168 Figure 7-5: (a) CAD model of assembled modular linkage system, (b) Close-up view of joint...............................172 Figure 7-6: Component FE discretization.................................................................................................................173 Figure 7-7: Substructure tests for components 7 to 12, (a) Link and coupling, (b) Joint, link and coupling in different link poses...........................................................................................................................................174 Figure 7-8: Fixed-free experimental tests, (a) Components 4 to 6, (b) Components 10 to 12, (c) Components 16 and 17 .....................................................................................................................................................................177 Figure 7-9: Joint-link fixed-free experimental tests, (a) Components 1 to 6 (joint 1 & link 1), (b) Components 7 to 12 (joint 2 & link 2), (c) Components 13 to 17 (joint 3 & link 3)....................................................................177 Figure 7-10: Comparisons of initial model, updated model and experimental FRFs for component tests, Drive-point FRFs: (a) Link 1, (b) Link 2, (c) Link 3, Cross-point FRFs: (d) Joint 1 & 1ink 1 (90°), (e) Joint 2 & link 2 (45°), (f) Joint 3 & Link 3 (0°).........................................................................................................................180 Figure 7-11: Linkage assembly tests in for verification in different poses, (a) Pose #1, (b) Pose #2, (c) Pose #3, (d) Pose #4 .............................................................................................................................................................184 Figure 7-12: Comparisons of initial model, updated model and experimental cross-point FRFs for hybrid CMS method (a) Pose #1, (b) Pose #2, (c) Pose #3, (d) Pose #4...............................................................................185 Figure 7-13: Stick model of assembled experimental landing gear..........................................................................189 Figure 7-14: (a) Polymer bushings embedded in link, (b) CAD model of middle joint assembly, (c) Bushing stiffness model .................................................................................................................................................190 Figure 7-15: Hinged experiment test setup, (a) Drag brace assembly with tall fixture, (b) Main strut assembly with short fixture......................................................................................................................................................192 Figure 7-16: Comparisons of initial model, updated model and experimental drive-point FRFs for component tests, (a) Drag brace (fixed-free), (b) Drag brace (hinged, -21.37°), (c) Main strut (fixed-free with wheels), (d) Main strut (hinged, 14.97°) .......................................................................................................................................196 Figure 7-17: Landing gear assembly tests in different configurations, distinguished by the spacing between the hinges (a) #1 - r1 = 75 mm, (b) #2 - r1 = 200 mm, (c) #3 - r1 = 425 mm, (d) #4 - r1 = 575 mm, (e) close-up view of accelerometer for configuration #4 .....................................................................................................199 Figure 7-18: Comparisons of initial model, updated model and experimental drive-point FRFs for CMS assembly configurations, (a) #1 - r1 = 75 mm, (b) #2 - r1 = 200 mm, (c) #3 - r1 = 425 mm, (d) #4 - r1 = 575 mm..........200

xii

Acronyms
Acronym BC CG CMS DOF FE FRF GA MFC MRR NSGA RFM TAM ZRP Definition Boundary Condition Center of Gravity Component Mode Synthesis Degree of Freedom Finite Element Frequency Response Function Genetic Algorithm Multi-Freedom Constraint Modular Reconfigurable Robot Non-dominated Sorting Genetic Algorithm Response Function Method Test-Analysis Model Zero Reference Plane

Nomenclature
Symbol b c f p q t u B DH DV F G H K M P Definition body vector configuration-space vector force and moment vector tip position vector joint variable vector vector of module thicknesses nodal displacement vector Boolean connectivity matrix for local finite elements structural (hysteresis) damping matrix viscous damping matrix force amplitude vector in frequency domain flexibility matrix receptance matrix stiffness matrix mass matrix vector of component reduced generalized coordinates Units m N (and N-m for moments) m rad (or deg if specified) m m (and rad for rotations) N/m (and N-m/rad for rotations) N-s/m (and N-m-s/rad for rotations) N m/N (and rad/N-m for rotations) m/N (and rad/N-m for rotations) N/m (and N-m/rad for rotations) kg m or rad (at interface locations) xiii

R S T Ws X Z A b E fx, fy, fz g G h Ip Iy, Iz J kx, ky, kz k, k, k L mx, my, mz m nele ndof r t u, v, w

rotation matrix Boolean connectivity matrix for system finite elements coordinate transformation matrix component mode transformation matrix displacement amplitude in frequency domain dynamic stiffness matrix area rectangular cross-section base length modulus of elasticity force in x-, y- and z-directions gravitational acceleration shear modulus rectangular cross section height polar mass moment of inertia area moment of inertia about y- and z-axis torsion constant virtual spring stiffness in along the x-, y-, or z-axis rotational virtual spring stiffness in about the x-, y-, or z-axis length moment about x-, y-, or z-axis mass number of elements number of structural DOFs radius thickness translational displacements along x-, y- or z-axis

m N/m m2 m N/m2 N m/s2 N/m2 m kg-m2 m4 m4 N/m N-m/rad m N-m kg m m m

Greek Symbol    

Definition mass-normalized mode shape vector constraint mode matrix mass-proportional viscous damping constant stiffness-proportional viscous damping xiv

Units 1/s s

    ,  n ar

constant relative error stiffness proportional hysteretic damping constant material density torsional deformation about x-axis bending angle about y-, or z-axis resonance frequency antiresonance frequency

kg/m3 rad rad rad/s (or Hz if specified) rad/s (or Hz if specified)

Subscript axial bend,z bend,y casing config CMS e G i joint m motor n s tip torsion w

Definition for axial deformation for bending about z-axis for bending about y-axis relating to joint casing configuration relating to CMS assembly in global frame element (in the local coordinate frame) global frame ith module relating to joint structural components motion relating to motor components total number of modules (or components) static variables at the tip of the module or assembled MRR for torsion about x-axis relating to rigid wrist

xv

1. Introduction
This introductory chapter first provides a background of existing MRR designs and describes their differences. The subsequent sections describe motivations for the current research, the problem statement and the dissertation's objectives. The final section in this chapter provides a brief overview for the remaining chapters presented in this dissertation.

1.1 Background
Modular reconfigurable robots are perhaps the most versatile machines in use today. These robots consist of several interconnected joint and link modules that can be reassembled and reconfigured to perform a variety of tasks in order to meet different motion and workspace requirements. On the contrary, typical non-reconfigurable manipulators are designed with only one configuration to attain a certain range of motion, thus their motion capabilities are rather constrained to a single workspace volume, and their tasks are limited to the type of end-effector used as an attachment. Throughout this dissertation, the term "configuration" refers to the initial joint axes configurations where all joint motion variables are set to zero, and "pose" refers to the position and orientation of an MRR after the joints rotate from their initial configuration setup. The geometry of reconfigurable modules can be made simple or complex. Simple module geometry consists of an actuator (active joint) which drives a connected link using a common connection interface. Therefore, each joint module can be made to operate independently, as a self-contained unit. Conversely, complex module geometry is composed of several actuators that can simultaneously drive a platform. In general, there are three types of reconfiguration, namely, self-assembly [1-4], self-reconfiguring [5, 6] and manual-reconfiguring [7, 8]. Self-assembly mechanisms are at the highest level of reconfiguration and are fully autonomous since these mechanisms can automatically assemble and disassemble from their inter-module connections without any form of manual assistance. Self-reconfiguring mechanisms can reconfigure themselves, but only after the system is assembled with some form of manual assistance. Manual-reconfiguring mechanisms are the most common and simplest in terms of structure, but can only be assembled and reconfigured manually. Furthermore, modular robots can be classified

1

depending on whether or not their modules are identical in shape and functionality [9] and the types of MRR structures that are formed when the modules are connected. Generally speaking, MRRs with sets of identical modules are easier to maintain than traditional robots since the modules can be readily interchanged if a module malfunctions. In a non-redundant, nonreconfigurable manipulator, the malfunction of a single joint (especially the base joint) can be catastrophic, as it may render the entire manipulator as inoperable until the component is replaced or repaired In terms of module connectivity, there are two main categories: open-chain (serial) and closed-chain (parallel). The former is the most common form of connectivity found in MRRs, in which modules are connected in series to form a serial arm [7, 10-12]. The open-chain configurations can also be branched off to form additional open-chains leading to a tree-like structure [13]. In general, the joint modules in most serial MRRs, such as those found in [7] and [14], are larger in size compared to the joints of traditional robots due to the fact that the connection interfaces located on the joint module must have enough connection points to properly secure adjacent link modules. Figure 1-1(a) shows an example of an MRR with large joint modules. The most noticeable difference between the serial joint module types are the joint offset distances, which occur along the axis of rotation for the example in Fig. 1-1(a), leading to an increased joint range of motion and the ability to hold a larger motor, thus more torque, at the cost of a higher module weight. On the other hand, there are examples of smaller MRR joints, such as the hinged joint modules in Fig. 1-1(b), which are lightweight and have zero offset distances along the joint rotation axis, but offer a decreased range of motion. In both cases, the connection interfaces for the joints are located at the ends of the joint output shafts. A popular example of a serial modular robot structure is the Canadarm2, shown in Fig. 1-1(c), which uses three successive revolute joint modules (with their axes of rotation perpendicular to each other) at the shoulder and wrist, and a single revolute joint at the elbow.

2

Figure 1-1: Types of common MRR structures (a) Serial with long joint axis offsets [14], (b) Serial with hinged joint modules 1 , (c) Serial with successive revolute joints 2 (d) Parallel kinematic machine (PKM)

While closed-chain structures are possible for MRRs, research has been focused on a single module type, namely reconfigurable parallel kinematic machines (PKMs) which can be reassembled to include additional joints, links and tool heads [15]. However, they are more difficult to manually reconfigure than serial MRRs due to the large number of parts. Unlike serial MRRs, which contain only active joints to drive the links, PKMs may contain both active and
1

Engineering Services Inc., Robot Arms, http://www.esit.com/index.php/business/robot-arms. Retrieved March 2014. 2 NASA, Canadarm2 and Mobile Servicing System, http://www.nasa.gov/mission_pages/station/structure/elements/mss.html. Retrieved March 2015.

3

passive joints (which do not have any motors or motion input). Because of the closed-loop structure of PKM branches, greater accuracy can be achieved than with a serial robot, at the cost of a greatly reduced range of motion. An example of a PKM with sliding-leg prismatic joints is shown in Fig. 1(d). If separate parallel mechanism modules are connected at each other's end platforms to form an open-chain serial structure, the resulting assembled mechanism becomes a hybrid serial-parallel mechanism [5, 16], thereby increasing the range of motion. Such MRRs benefit from the high stiffness and low weight advantages of parallel mechanisms and the wide range of motion capabilities of serial manipulators. Other types include biologically-inspired lattice structured MRRs [3] and MRRs that can perform locomotion [6].

1.2 Motivation
This section describes the motivation for the current MRR research presented in this dissertation. The following topics are of concern: the kineto-elastic analysis of serial MRRs, the structural design of MRR modules and payload capacity optimization, the reduction and synthesis of module structural dynamic models, and module model updating using experimental data for each module. What links these topics is that all of their analyses are directly affected by the MRR module configurations and poses. Overall, these are relatively new topics relevant to MRR research, most of which have not been previously studied.

1.2.1 Serial Modular Robot Structural Stiffness Performance
Positional accuracy remains one of the leading concerns in mechanism analysis and component stiffness is one of its main affecting factors. In general, tip position inaccuracies are caused by deflections due to applied payloads, self-weights of the joints and links, and robot vibration. Although serial MRRs can be reconfigured to perform different motion tasks, their stiffness performance for a known task usually does not match that of a non-reconfigurable mechanism designed only for performing the task requirement in a single configuration repeatedly. When joint module axes are reconfigured, the maximum stiffness and payload capacities for assembled MRRs can vary drastically between different module configurations. Moreover, the number of total MRR configurations can increase exponentially with an increase in the number of modules. For open-chain MRRs, considerable research has been conducted for MRR kinematics [17] and rigid-body dynamic models [18]. These models mainly focus on the

4

automatic generation of the required kinematic and dynamic equations for MRR module reconfigurations. Other research involved automated kinematic calibration methods to improve the pose accuracy of multiple MRR configurations [19, 20], and methods for optimal module selection for task-specific configurations [21, 22]. However, little attention has been paid to the analysis of serial MRRs with modules that exhibit inherent structural flexibility. Kineto-elastic analysis is an essential tool to analyze the aforementioned causes of structural inaccuracies over different poses in a robot's workspace. In general, kineto-elastic analysis can be subdivided into three categories [23]: kinetostatics (which is focused on the force or velocity transformations from the end-effector to the joints), kineto-elasto-statics (which incorporates the structural flexibilities of the joints and/or links in order to determine the linear elastic deformations due to applied static loads and low-speed quasi-static motion) and kineto-elastodynamics (which includes the time-varying loads from rigid body dynamics and vibration, coupled with the elastic structural properties of the components). In the current literature, kinetoelastic analysis has been extensively studied for reconfigurable parallel robots. However, there is a lack of research contributions for the kineto-elastic analysis of serial MRRs, which are more susceptible to adverse stiffness issues than their parallel counterparts. This is because the load of the entire robot is carried on a single base joint for serial MRRs, rather than multiple base joints, as found in PKMs, in which the loads are distributed. Although recent studies on serial MRRs include stiffness models [24, 25], the variation in stiffness and payload capabilities for multiple configurations were not presented. For typical non-reconfigurable serial robots with minimal joint length offsets, the most critical stiffness pose is known to occur at maximum arm stretch, which can be easily determined by visual inspection. However, due to the larger joint sizes found in serial MRRs, their shapes after assembling the modules can become quite complex and it can be shown that with increased joint elasticity, the stiffness performance of serial MRRs can exhibit changes in dominant elastic deformation modes, which may occur away from fully stretched poses. Unlike a non-reconfigurable robot, where the search space for the worst-case structural performance occurs within a single configuration's workspace, the search space for MRRs includes both the "configuration-space", which contains all of the configurations to be analyzed and the individual workspaces within each configuration. Therefore, both the configuration-space and the individual configuration workspaces must be searched to identify the

5

configurations and poses that can affect the structural performance of the MRR most drastically. Overall, more research to assess the stiffness performance requirements for multiple serial MRR configurations is warranted.

1.2.2 Stiffness and Payload Design of Serial Reconfigurable Modules
Typically, the topology design of a reconfigurable module is concerned with three aspects: Kinematic synthesis, configuration design, and structural design. Kinematic synthesis refers to the design of the module lengths and joint parameters to meet assembly motion and workspace volume requirements. Configuration design refers to the selection of modules to perform task requirements. Finally, structural design refers to the stiffness design of the modules, by optimizing the individual module shapes or material properties, to achieve satisfactory kinetoelastic performance requirements for all available configurations. Evidently, the structural performance of an MRR is tightly coupled with its kinematic parameters and configuration. For example, during the module design phase, if the length of the module changes, so will the stiffness. The existing structural design methods were developed for traditional nonreconfigurable robots and there are no well-defined methods for MRRs that have been discussed in detail. The main challenge here is how to account for the number of different module configurations and their respective workspaces. In the structural design of traditional nonreconfigurable mechanisms, the workspace of only one configuration is considered, which in itself requires a complicated design procedure. Because an MRR can have various topologies due to both configuration and kinematic changes, the structural design problem at hand can become quite tedious. For MRRs, all the feasible module configurations and their workspaces must be considered during the design phase, which can impose enormous computational complexities. Therefore, a clearly defined and numerically efficient methodology for the structural design of reconfigurable modules is an essential requirement for this field of research. In general, the structural design of reconfigurable modules can be seen as an "inverse" design problem when it is required to construct a module from scratch in order to meet multiple kinetoelastic performance requirements for a given payload. In order to improve the structural performance for existing MRR modules, instead of re-designing the module casings or adding stiffening springs to the joint modules, which is both time consuming and costly, the "forward"

6

design problem is to optimize the maximum payload an MRR can carry in order to safely satisfy a given set of kineto-elastic constraints. The payload capacity design problem can play an important role for stationary MRR positioning tasks such as part inspections, where parts that are too heavy can cause significant link deflections, leading to large errors in measurement. Evidently, some MRR configurations may outperform others with regards to kineto-elastic performance, thereby affecting the maximum payload capacity between configurations. Thus, a procedure to identify the maximum payload that existing MRR modules can carry, for each possible configuration, should prove useful in configuration selection and tool or end-effector design.

1.2.3 Structural Dynamic Model Reduction for Modular Robots
When an MRR is reconfigured, or changes its pose, the structural dynamics (stationary vibrations, response amplitudes, natural frequencies and mode shapes) of the MRR assembly also changes. Because assembled system finite element (FE) models are often large and complex, substructuring methods such as component mode synthesis (CMS) can provide a means of reducing the number of structural degrees of freedom (DOF) of component models for assembly into a larger system, while maintaining a specified degree of accuracy by retaining a pre-selected number of mode shapes. Also, any structural design modifications to one substructure model should not affect the individual component dynamics of the remaining substructures. Therefore, CMS methods are ideal for modeling MRR modules that do not change shape. However, structural changes to one module will inevitably affect the overall system dynamics of an MRR assembly. For example, "joint 1" in Fig. 1-1(a) does not change shape during motion since the rotation axis of the output shaft (connected to "link 1") is aligned with the length of the joint module's offset axis. On the other hand, CMS is more difficult to implement if a joint module behaves as a hinged joint as in the case of the base joint in Fig. 11(b), with the offset distances perpendicular to the axis of rotation. In this scenario, because the shape of the joint module changes, the joint should be modeled as two separate substructures with connection nodes directly on the axis of rotation. For the majority of CMS procedures, the choice of component modes used in the reduction process are dictated by the boundary conditions (BCs) imposed on each substructure model to

7

determine the set of normal modes used for reduction. In previous mechanism CMS models [2628], the moving joints, such as revolute joints, were considered rigid and the link components were usually separated directly at the joints. Thus, the choice of BCs typically imposed on the link substructures were either free-free, or fixed-fixed boundaries. In reality, the joints themselves contain small sub-components such as bearings, axles, joint yokes, gears or motors, which can directly affect the dynamic characteristics of the entire mechanism assembly. Likewise, it is impossible to experimentally evaluate the dynamic contributions of hinged joints if free-free boundary conditions are used for link modal tests, since testing the links alone cannot provide sufficient information about the flexible joint dynamics or constraints. Furthermore, the connection interfaces between each MRR module may exhibit flexible dynamic characteristics, especially if the connection ports carry large masses or if the modules are connected by bolts (as in Fig. 1-1(a) and (b)). Therefore, the additional dynamic properties of the joints and connection interfaces should be accounted for in the CMS models for MRRs, along with the inclusion of the appropriate BCs.

1.2.4 Component Experiments and Model Updating for Modular Robots
Large articulated systems such as industrial robots typically undergo experimental structural dynamic testing to validate existing analytical models. In these cases, it is required to test a number of robot poses to check for pose-based model dependencies such as natural frequencies of the entire system. Also, testing multiple robot poses can provide more experimental information in the absence of rotational frequency response function (FRF) measurements or joint FRF measurements, since these are usually difficult, if not impossible, to directly measure. Likewise, another advantage of testing multiple poses is that the local model parameters (such as link cross section areas and material properties) should remain the same for different poses. Usually, if the required accuracy of an analytical assembly model is not within specified limits, the entire FE model needs to be updated to match the experimental results as close as possible, which can prove to be a troublesome task considering the large number of possible updating parameters. Conversely, if smaller sub-assemblies and components are tested first, large and expensive experimental setups can be completely avoided and the model updating process is more efficient since the number of simultaneous updating parameters can be reduced significantly. Afterwards, the updated component models can be assembled using CMS and

8

further structural dynamic testing can be conducted in a virtual environment, thereby reducing the need for extensive experimental testing of the entire robot assembly in different configurations and poses. Since MRR modules can be readily removed from an MRR assembly, they are ideal candidates for substructure experimental testing and CMS model updating. To update or identify unknown FE model parameters for MRR modules effectively, the component experiments, and hence CMS model, should mimic the natural connectivity between modules as closely as possible. Furthermore, the module connection interfaces may contribute to the dynamic behavior of the entire module. In these scenarios, the connection stiffness, mass or damping should be accounted for in both the experiment and updated model. Therefore, the experiment BCs should match the module connection interfaces. Also, individual modules will experience stiffened dynamic behavior during component tests, compared to testing an assembled MRR. As a consequence, the experimental mode shapes and natural frequencies of individual modules will occur at higher frequencies than those of an assembled MRR. Hence, the use of experimental FRF data across the entire measurement bandwidth should be more beneficial for model updating, rather than the use of measured natural frequencies and mode shapes. Additionally, the experiment and CMS BCs must be carefully selected in order to test different module poses for pose-based model dependencies. In the case of hinged joint modules, as in Fig. 1-1(b), slight variations in joint angles, as well as physical model parameters affecting the stiffness, mass and damping, could have a large impact on the dynamic performance with visible differences in FRFs. The problem is further complicated if nonlinearities exist within the joint, such as friction, wear, contact and clearance. For this reason, an updating method should be formulated to allow a best-fit solution for a simplified linear joint model in order to entirely avoid modeling complexities and remain computationally efficient.

1.3 Problem Statement
There is a need for a computationally efficient method for the kineto-elastic performance analysis of serial MRRs, namely, a method to determine the worst-case configurations and poses for a given set of modules. For this problem, one has to account for a large number of module MRR configurations and within each configuration's workspace there are an infinite number of 9

poses which must also be taken into account to find the worst-case stiffness pose. This problem is further complicated if multiple kineto-elastic performance quantities are included, such as deflections, joint torques and vibrations. Due to the added complexity of multiple configurations, poses and different kineto-elastic performance requirements (in the form of design constraints), it can be shown that the module structural design and payload capacity problems may form redundant and inconsistent systems of equations when more than one module is considered. Therefore, unique closed-form solutions to these problems do not exist. However, to ease the complexity of these design problems, it would be most beneficial to develop a method such that the design computations are performed at a single configuration and pose, rather than multiple configurations and poses. For the updating of CMS models of MRR modules, a method needs to be developed such that the experimental and CMS model BCs incorporate the natural connectivity boundaries at the module connection ports or interfaces. The experiment conditions should allow each joint module to be tested in more than one pose to determine if the joint flexibility is pose-dependent. Furthermore, the CMS model should include the possibilities of additional stiffness, mass and damping terms at the connection interfaces of each module to account for the connection dynamics of adjoining components. Evidently, if more than one pose is used during the updating process, the problem becomes an overdetermined system of equations since there are more equations available than possible model updating parameters. Overall, the updating method should solely rely on experimental data from the component tests, and should be completely independent of utilizing experimental data from entire MRR assembly tests during the module updating process. At most, tests should only be performed on an MRR assembly to validate the updated models.

1.4 Research Objectives
To address the issues mentioned in the previous sections, the main objectives of this dissertation are summarized as follows:

10

1. Develop a kineto-elastic model for the quasi-static stiffness performance analysis of serial MRRs. The model should account for reconfigurable kinematics, joint offsets, structural flexibilities and masses of the links and joints, non-structural masses, such as motor masses and their associated rigid-body offsets. Also, the model should solve for the kineto-elastostatics (tip deflections at the last link in the MRR chain and joint wrench moments) and the stationary structural vibrations (undamped MRR natural frequencies) at any given configuration and respective pose after motion from initial assembly. 2. Create a computationally efficient and numerically accurate direct search method to find the worst-case quasi-static stiffness performance configurations and poses for a given number of MRR modules, payload and multiple kineto-elastic parameters. The method must include all possibilities in the feasible configuration space, as defined by the number of modules and their possible configurations, as well as the workspaces of each configuration. 3. Develop design methodologies for the maximum payload capacity determination and the optimal module stiffness design. Both methods should be subject to multiple kineto-elastic performance requirements in the form of design constraints. 4. Develop a CMS method for MRR modules using fixed- and free-interface conditions for model reduction and to allow for hinged joint module experimental tests in different poses. Along with computing the natural frequencies and mode shapes, a method should be developed such that FRFs can also be recovered for force inputs and elastic motion outputs at all node locations, including those of the CMS reduced structural DOF. 5. Create a component model updating method for MRR modules which uses experimental FRF data from hinged joint module tests. The BCs of the module experimental conditions should match those of the CMS model and adjacent module connection interfaces, while allowing different joint module poses to be tested. The goal here is to update the FE parameters such that the assembled MRR model does not require further updating. Thus, the CMS model of the MRR assembly using updated parameters should perform accurately in any random pose.

11

1.5 Outline of Dissertation
This dissertation is organized into eight chapters. The remaining chapters are described as follows: Chapter 2 contains a literature review which covers the main topics related to the research in this dissertation, namely kineto-elastic analysis and modeling of flexible robots, robot stiffness design methods, workspace search methods, dynamic component model substructuring techniques and structural dynamic model updating methods. Chapter 3 describes a kineto-elastic modeling method for serial MRRs, which includes the kinematics required for MRR initial configuration assembly, the pose computations using a recursive method for MRR motion, combined with the module stiffness modeling using the FE method to solve for the kineto-elasto-static deflections, moments, and the stationary structural vibrations. Chapter 4 proposes a novel methodology to search for the worst-case stiffness configurations and poses for a given number of MRR modules. First, the method includes an automated enumeration algorithm which can effectively reduce the large configuration-space to a small subset of configurations by eliminating all infeasible configurations with respect to MRR kinematics and equivalent structural performance properties between two or more configurations. The second stage involves determining the worst-case stiffness configurations and poses using direct search optimization methods and forward kinematics, which completely avoids searching through a pre-determined number of poses. Chapter 5 presents new methods to solve the redundant/inconsistent stiffness and payload design problems, such that a given set of kineto-elastic performance requirements are fulfilled for all configurations. This is accomplished by including the results from the search methods in Chapter 4, thereby forming a combinatorial search method to simplify the problem by reducing the size of the configuration-space, identifying the worst-case configurations and poses, and finally identifying the maximum allowable payload capacity, or performing the structural design of the modules. 12

Chapter 6 covers the development of structural dynamic model reduction techniques using CMS methods for MRR modules, with particular emphasis on using hybrid (fixed-free) interface boundaries, which are suitable for experimental testing. Also, methods are developed to recover FRFs when the input/output coordinates are located on separate components with different poses, and when physical coordinates corresponding to input/output DOFs are eliminated in the CMS reduction. Chapter 7 presents a new method for updating reduced CMS models of MRR modules using experimental data from individual hinged joint-link module tests in different poses. An optimization approach is formulated using a genetic algorithm (GA) to minimize the FRF error between the updated component models and experiments with bounded constraints on the updating parameters and nonlinear constraints on the resonance and antiresonance frequencies for multiple component poses simultaneously. Component vibration tests are performed on an adjustable linkage system made to resemble a serial MRR with hinged joints. The experimental component BCs are made to naturally mimic component connectivity along with the fixed- and free-interface conditions used for the hybrid CMS method. The component updating method is validated using further tests on the assembled system in different poses. To convey the versatility of the updating approach for other mechanisms, an experimental model resembling a landing gear (parallel mechanism) was constructed and a similar procedure, with the inclusion of fixture flexibility, was conducted to update the reduced component models in different poses with fixedinterface conditions. Chapter 8 briefly summarizes the work in this dissertation, lists the major contributions, lists the associated journal publications submitted, and suggests future work for this research.

13

2. Literature Review
This chapter presents a literature survey on the relevant subjects related to the research in this dissertation. First, a background on the existing methods for the kineto-elastic modeling of robots with flexible links and/or joints is introduced. Next, a review of the currently available workspace search methods for the pose-based kineto-elastic analysis of robots is presented. This is followed by a survey of the existing robot stiffness design methods. Afterwards, the available component-based substructuring techniques for structural dynamic modeling are discussed, as well as the associated literature pertinent to available robot substructuring models. Particular attention is paid to CMS and FRF-based substructuring methods. Finally, structural dynamic model updating methods are discussed, along with approaches to update CMS models and the available model correlation tools.

2.1 Kineto-elastic Modeling of Robots
The kineto-elastic modeling of robots has been extensively studied over the past few decades, with the majority of research conducted for high-speed lightweight non-reconfigurable manipulators. Such manipulators, suffer, to a greater extent than large industrial manipulators, from detrimental structural flexibility issues such as high deflections and increased vibrations. Previous research led to significant advancements in the kineto-elastic modeling for robots considering flexible components, most of which are well documented in the survey papers [2933]. Most of the research reviewed in these papers focused on the development of kineto-elastodynamic models for non-reconfigurable robotic systems for the purpose of validating analytical models, robot control or path planning. The equations of motion were usually developed according to the choice of elastic deformation reference frames and typically resulted in highly nonlinear systems of differential algebraic equations which inevitably couple the rigid-body and flexible-body dynamics. The three main types of reference frames used for kineto-elastic models in the literature are shown in Fig. 2-1. The global (or inertial) reference frame, shown in Fig. 2-1(a), is a single fixed coordinate system from which all other reference frames for rigid-body or elastic motions are defined. The floating frame method, shown in Fig. 2-1(b), is the most commonly used reference frame method

14

for the analysis of flexible robotic systems [30, 31]. In this method, each component has its own coordinate system fixed to its body (also known as body-fixed, or local coordinate frames), and the deformations of each component are defined with respect to their own coordinate systems. Afterwards, the position and orientation of each component's body-fixed frame is defined by the global reference frame, from which the kineto-elastic equations are solved. Finally, for the corotational frame approach, shown in Fig. 2-1(c), each deformable element of a flexible component model has its own rigidly attached coordinate frame and the motion of the elements is separated into rigid-body and flexible-body components [34]. This formulation is used in conjunction with floating frames (the origins of which do not have to be rigidly attached to points on the deformable bodies) and a common global reference frame [35].

Figure 2-1: Typical reference frames used for flexible robot modeling (a) Global frame, (b) Floating frames, (c) Corotational frames

For each of the mentioned coordinate frame methods, the equations of motion can be formulated using Lagrange's equations, Newton-Euler equations, or the principle of virtual work [36]. When selecting the coordinate frame representations, there exist several differences between the reference frame methods when the equations of motion are formulated [30, 31]. First, the coordinate transformation from the floating frames to the global frame leads to an exact representation of the rigid-body dynamics in the undeformed state [37], whereas corotational formulations eliminate the element's rigid-body motion and the global formulations superimpose rigid-body motions on the deformations. Therefore, the floating frame representations are usually applied for robots that undergo small flexible-body deformations, while the corotational and global frame representations are better suited for large deformations. Next, the floating frame 15

formulation leads to a highly nonlinear mass matrix due to the inertia coupling between the rigidbody velocities and the elastic deformation velocities, as found from computing the kinetic energy equations [30], while the corotational and global frame formulations both have linear mass matrices since the kinetic energy is computed in a single inertial frame, thus negating the coupling between rigid-body and flexible-body motions. Also, the floating and corotational frame formulations can have linear stiffness matrices since their elastic coordinates are defined in the body-fixed or element coordinates, while the global frame methods produce nonlinear, time-dependent stiffness matrices since they are formulated using nonlinear stresses and strains [31]. Finally, unless revolute joints are modeled as elastic bodies (such as virtual springs), their treatment differs among the three methods. The joints in the corotational and global frame methods are modeled by allowing two adjacent components to share a common node. In contrast, the floating frame methods require algebraic joint constraint equations between components to constrain relative motions. For the floating frame method, the equations of motion for a multibody system can be written as follows [30]:
 M rr M  fr r  0 0   q r  0 0   qr   f ext ,r   f v ,r   f c , r  M rf   q            0 K   x    f    f    f  M ff  f  ff   f   x f  0 D ff   x   ext , f   v , f   c , f 

(2.1)

where M, D, and K are the respective mass, viscous damping, and stiffness matrices, qr represents the rigid-body (reference) generalized coordinates and xf denotes the elastic coordinates (representing the linear elastic structural deformations). In Eq. (2.1), fext, represents the vector of external forces, fv represents the vector of centrifugal and coriolis forces, and fc denotes the vector of constraint forces. To solve the kineto-elasto-dynamic equations of motion, the differential algebraic equations must be solved for rigid-body motions and deformations simultaneously, regardless of chosen reference frame formulations. This presents considerable computational complexities. Shabana [23] developed an augmented approach which uses Lagrange multipliers to solve for the joint constraints in the floating frame, and integrates the accelerations numerically to determine the elastic and rigid-body poses and velocities. An alternative approach is to use recursive formulations, as found in the literature [36, 37]. To simplify the solution procedure of the kinetoelasto-dynamic problem, the rigid-body dynamics could be solved separately a priori to obtain

16

the inertia and reaction forces, which can then be introduced into a set of linear flexible-body equations, from which the system deformations could be solved. Afterwards, the obtained deformations could be superimposed onto the rigid-body motions to obtain the total motion of the flexible system. This procedure is referred to as the linear theory of elasto-dynamics [23, 30, 35]. Here, the inertia tensor (Mrr in Eq. (2.1)) as well as the forces on the right-hand side of Eq. (2.1) are assumed to be independent of the elastic deformation effects. Therefore, the equations for the linear theory of elasto-dynamics can be obtained as [23, 30]:

r  f ext ,r  f v , r  f c , r M rr q  f  K ff x f  f ext , f  f v , f  f c , f  M fr q r M ff  x f  D ff x

(2.2) (2.3)

Eq. (2.2) can be solved for the rigid-body displacements, velocities, accelerations and reaction forces. Afterwards, these rigid-body dynamic parameters can be substituted into Eq. (2.3) to solve for the deformations of each component using standard FE techniques. However, the accuracy of the results obtained by this approach are questionable when lightweight, high-speed robots are analyzed, which in turn cause large link deformations. In these instances, the inertia coupling between rigid-body motions and elastic deformations is significantly high and should not be neglected [30]. Further simplifications to the equations of motion in Eq. (2.1) may arise if a robot undergoes low-speed quasi-static motion, with small elastic deflections relative to the link lengths. These quasi-static cases are the focus of the research in this dissertation. Though the majority of research is concerned with the flexible dynamics of robots, other research applied flexibility models to robots that experience quasi-static motion for the purpose of robot control [38] and stationary vibration analysis [39]. For quasi-static motion, the joint velocities are constant, thus
r and the time-dependent inertial forces in the rigid-body dynamic equations of motion ( M rr q

r in Eq. (2.1)) become negligible. Furthermore, when revolute joint angular velocities M fr q
approach zero, the nonlinear centrifugal and coriolis forces in the equations of motion (fv in Eq. (2.1)) also become null vectors. Therefore, the coupling effect between rigid-body and elastic motions is negligible for low-speed quasi-static motion. What remains in Eq. (2.1) are the terms

17

strictly related to the structural elasticity of the robot. Accordingly, the solutions to the structural elastic deformations can then be obtained linearly using FE methods. Previously, a number of researchers assessed the flexibility of joints and links in serial manipulators. To account for link flexibility, most researchers used Euler-Bernoulli beams, which mainly account for link bending [33]. Also, flexible joints were usually modeled as virtual springs with lumped masses, since the inertia of motor components (such as joint shafts and gears) is relatively low, storing little kinetic energy [31]. Particular methods were developed to determine when components can be considered flexible or rigid. Spong [40] assessed the stiffness of manipulators with rigid links and flexible joints and noted that when the joint stiffness approaches infinity, the entire model can be treated as an assembly of rigid bodies. Yang and Sadler [41] studied the stiffness effects of manipulator components and noted that the ratio of joint to link stiffness is an indicator of a robot's positioning deviation. Xi and Fenton [42] analyzed the coupling effects of flexible links and joints, and noted that the joint to link inertia ratios are also a factor in assessing the flexibility of an entire robot. Overall, the previous research determined that the geometric sizes and inertial properties of the links relative to the joints were the main contributing factors in assessing component flexibility.

2.1.1 Kineto-elastic Model Discretization Techniques
To model the elasticity of flexible robot components, a number of discretization techniques have been employed in the literature such as finite segment methods, the assumed mode method and the finite element method. Although there are many other existing methods available in the literature, the aforementioned methods are particularly useful since they can discretize the infinite number of flexible DOFs associated with robot modeling into a finite number of DOFs, therefore decreasing the required computational expense. Finite segment methods, also known as pseudo-rigid body methods, assume that each component consists of a set of rigid bodies connected by a series of springs, dampers and lumped masses. Howell et al. [43] modeled flexible links by creating a pseudo-rigid body model. To mimic beam bending, their pseudo-rigid model can be represented by two rigid links connected with a nonlinear torsion spring joint. The underlying problem was the determination of an

18

equivalent torsional spring stiffness which can adequately represent the deflection at the tip of the rigid beam. To solve this problem, a parametric equation was developed under the assumption that the large-deflection cantilevered links follow a near-circular path at the tip. Afterwards, the rigid-body beam deflection angle was solved using a one-dimensional optimization method (golden search), from which the equivalent spring stiffness can be obtained from the load-deflection relationships. Saxena and Kramer [44] further developed the method to include combined bending and axial loads. Their method was proven to be useful for the kinetoelasto-static analysis of flexure hinged compliant mechanisms, which undergo large deflections and where geometric nonlinearities are prevalent in the beam members. For kineto-elasto-dynamic modeling, the assumed mode method can describe link deflections using sets of truncated modal series for each DOF, in the form of finite-dimensional Ritz vectors, which are in terms of mode eigenfunctions and time-varying modal amplitudes. These assumed link deflection functions are then substituted into Lagrange's equations to derive the equations of motion. The method heavily relies on the selection of the assumed mode deflection shapes and appropriate BCs of the links. Shabana [45] evaluated a number of different link BCs and noted that if the choice of the reference coordinate frame is properly selected, then solutions for the assumed modes for different BCs can eventually converge to a single solution. Theodore and Ghosal [46] developed an assumed mode model considering only bending in the links with clamped BCs. They compared the results with a single-link two-element FE model and noted that the FE method is more convenient to model manipulators with complex link geometry, is computationally faster, but is less accurate than the assumed modes method in computing natural frequencies at higher modes. For multi-link flexible robots, the FE method is the most popular choice for discretization in the literature. The ability to incorporate dissimilar elements for different components is particularly useful for modeling links attached to flexible joints. Huang and Wang [47] modeled a three-link spatial manipulator with flexible links and revolute joints. Each link was modeled using Timoshenko beam theory and each revolute joint transmission system was modeled using a series of virtual springs and lumped masses to mimic a spherical joint with three translational and three rotational structural DOFs. This type of joint model allows for full flexibility of the

19

joints and can incorporate relatively rigid joint DOFs by setting the spring stiffness coefficients to high values. Yang and Sadler [41] used the FE method to model flexible planar serial robots and accounted for flexibility in the links using Euler-Bernoulli beams and flexible joints by modeling them as torsional shafts. Torby and Kimura [48] developed an FE model for manipulators with prismatic joints by representing each sliding joint as two 3-D beam elements and applying moving boundary conditions. Wang and Wang [49] developed FE models for flexible planar parallel mechanisms and used an equivalent linear contact spring to represent the connecting pin and journal bearing for revolute joints. Zhou et al. [50] modeled a flexible tripod PKM considering link flexibility using beam elements, moving platform flexibility using plate elements and configuration-dependent flexible spherical joints using virtual springs and dampers. In terms of MRRs, most of the kineto-elastic modeling and discretization techniques in the literature have been applied to reconfigurable PKMs [15, 50-52]. In references [15, 51, 52], the discretization methods involved modeling each link using a single element with diagonal stiffness terms (which neglect the coupling of translational and rotational deflections, as found in typical FE Euler-Bernoulli beams), and modeling the platforms as rigid bodies. These methods use the principle of kinematic and static duality to develop the elastic displacement compatibility and force equilibrium equations in terms of a Jacobian or transformation matrix. The equations were then used to describe kineto-elasto-static models, based on Hooke's law. A similar kinetoelasto-static model was developed by Hu et al. [53] for hybrid serial-parallel mechanisms. For serial MRRs, the number of available kineto-elastic analysis and modeling techniques in the literature is quite limited. Tosunoglu [54] developed a pseudo-rigid body model for flexible links and joints. The joints were modeled as linear torsional springs for revolute joints and linear translational springs for prismatic joints, while the links were discretized into a number of nodes containing six virtual spring DOFs connected by rigid bodies. In [55], a kineto-elasto-static model was developed for a serial MRR using compliance (or flexibility) matrices for the joint and link modules, and included the joint offset flexibilities, as well as the effects of gravity in terms of payload, motor and module structural weights. White et al. [56] developed a general kineto-elasto-static model for tetrahedron-shaped modules using beam elements connected to 6DOF virtual springs for the joints. Overall, the kineto-elastic modeling of fully flexible serial

20

MRRs has not been extensively studied, and more research is necessary since these robots suffer from flexibility issues more so than PKMs.

2.2 Workspace Search Methods for Robot Kineto-Elastic Analysis
Workspace search methods are effective tools for quantifying the pose-dependent kinetoelastic performance of MRR configurations. In the current literature, there are two main types of workspace search methods used in kineto-elastic analysis: increment-based and grid-based. Increment-based methods use forward kinematics to search a robot's workspace. First, the joint ranges of motion are pre-specified and each joint range is divided into a number of motion increments (angular increments for revolute joints, linear increments for prismatic joints). Then, the robot poses are scanned one-by-one by hierarchically searching through the joint ranges in increments until all possible combinations of prescribed joint variables are accounted for. At these poses, the required kineto-elastic performance parameters are computed and stored. On the other hand, grid-based workspace search methods use inverse kinematics to search through a workspace. This is accomplished by assuming an initial shape for the workspace boundary, such as a cube, then dividing the boundary into a number of grid points which represent the possible number of robot positions. At each possible position, the inverse kinematics are computed to determine if the grid point is reachable, along with any kineto-elastic performance parameters. If a grid point is not reachable in the workspace, then it is removed from the set. Overall, the current workspace search methods are useful if the workspace boundary or volume is required. The kineto-elastic performance parameters can then be visualized in contour plots over the workspace, as shown in Fig. 2-2(a) which uses an increment-based search. A workspace volume computation using a grid-based search is shown in Fig. 2-2(b). In the previous literature, increment-based workspace search methods were used for nonreconfigurable serial robots, and grid-based methods were used for parallel robots. The main reason is that the forward kinematics are easier to compute for serial robots, whereas the inverse kinematics are easier to compute for parallel robots. As an early example, Tang and Wang [57] assessed the effects of link deflections and joint compliance on the overall positioning of a twolink planar flexible manipulator by calculating the link displacements from Euler-Bernoulli beam theory, and approximating the joint compliance with a torsional spring. Their kineto-elasto-static 21

analysis used an increment-based search with 180° motion ranges, and joint variable increments of 20°. Increment-based workspace searches were also utilized to analyze the pose-dependent stationary vibration characteristics of serial manipulators. Sadler and Yang [58] analyzed a cylindrical serial manipulator with one revolute joint at the base connected to a prismatic joint and observed the natural frequency changes at different prismatic joint lengths. Their analysis was simplified by fixing the base joint motion to simulate low-speed quasi-static motion.

Figure 2-2: (a) Workspace visualization with kineto-elastic parameter mapping using increment-based search [59], (b) Workspace volume computation using grid-based search [51]

In more recent work, Li et al. [59] used an increment-based search method to analyze the dynamic effects of a 3-DOF industrial manipulator with flexible joints and an additional 3-DOF wrist, with and without the additional mass effects of a riveting tool. The manipulator was modeled with rigid links and flexibly joints. Also, the workspace computations were simplified by assuming the wrist and base joint DOFs were fixed, and were performed using 1° joint variable increments. The joint and tool vibration ratio over the workspace is shown in Fig. 2-2(a) as an example of kineto-elastic parameters plotted over a workspace. Many other researchers incorporated kineto-elastic indices to evaluate kineto-elastic performance over a robot's workspace. A popular parameter for the evaluation of static torque was based on the condition number of the Jacobian (or twist transformation) matrix [60]. However, this parameter may not be as useful as directly searching for the highest torques. This was caused by two reasons: first, the twist transformation matrix terms do not have similar units, and second, the condition

22

number of the twist transformation does not take into account module self-weights, as shown in the derivation [60]. Previously, other parameters such as stiffness ellipsoids were also derived assuming external end-effector payloads and do not take into account individual component selfweights [61, 62]. Thus, direct evaluations of the deflections, torques or natural frequencies are more reliable methods for assessing the stiffness performance of assembled MRR modules in different configurations and poses. Instead of mapping kineto-elastic indices over a robot's workspace, other researchers performed workspace searches to determine only the best or worst robot poses with respect to kineto-elastic performance. Gan et al. [63] applied an incrementbased search method to a 3-DOF non-reconfigurable serial robot to determine the worst-case pose which yields the highest joint torques due to robot collision by hierarchically searching through the joint parameters together with joint angular velocity directions one-by-one in their value ranges. In terms of grid-based workspace searches for parallel robots, Xi et al. [51] formulated a kineto-elasto-static model of a PKM using compliance matrices for the links and joints. Two indices were computed to evaluate the stiffness performance over the workspace using the trace of the assembled PKM compliance matrix. Piras et al. [64] mapped the static stiffness and fundamental natural frequency for a planar motion parallel robot's workspace using a grid-based search. In their analysis, only the axial elastic deformations were considered in the links. Callegari et al. [65] performed a kineto-elasto-static analysis to aid in the design of a compliant parallel robot with flexure hinges as joints in order to optimize its workspace volume. Tyapin and Hovland [66] performed a similar analysis on a parallel robot and designed it to optimize kinematic and stiffness requirements via a multi-objective optimization approach. Chi and Zhang [52] mapped each of the dominant diagonal terms of a PKM's stiffness matrix in separate plots to find the dominant modes of static deformation. In previous papers with non-reconfigurable robots, only the workspace of one configuration was analyzed, whereas an MRR has multiple configurations and each configuration has its own workspace. It would be beneficial to develop a computationally efficient and accurate method to analyze the workspaces of all feasible configurations to determine which configurations have the best or worst kineto-elastic performance. For serial MRRs, there are few published examples

23

which involve kineto-elastic workspace searches for different joint reconfigurations. In [55], a kineto-elastic workspace search was conducted to determine the MRR configurations with the highest translational tip deflections in order to facilitate the stiffness design of the modules. However, the increment-based search method, which scanned through the robot poses one-byone for each configuration workspace using joint angular increments, can be proven to lack accuracy if large increments are used, and can lead to extremely high computational times with smaller increments. A similar effect can be found using grid-based search methods with inverse kinematics. In the incremental and grid-based search formulations, a pre-determined number of poses are analyzed, but in reality, a robot's workspace has an infinite number of possible poses. Also, these "brute force" search methods may be proven to be computationally expensive if only a maximum or minimum stiffness result is required, for example, to obtain knowledge of the robot's operating payload limits. For typical non-reconfigurable serial robots with simple shapes and no joint offset distances, the worst-case kineto-elastic pose occurs at maximum arm stretch. On the other hand, the worst-case configurations and poses for MRRs are not easily identified due to possible changes in dominant deformation modes present in each module. Thus, a more direct search method is the preferred choice for MRRs. Earlier direct search methods were applied to the kinematic calibration or optimal module selection problems for serial MRRs. In [19], a hybrid method was developed for the kinematic calibration of a small set of predefined MRR configurations with unknown geometric errors. A Monte Carlo method was used to generate several random poses for a configuration and the calibration was performed only at those poses using a genetic algorithm to achieve a robust solution. However, there was no heuristic function to directly evaluate the relative error between the random poses. Thus, without any knowledge about the relevance of the poses in a configuration's workspace, the worst-case poses might be completely missed or unaccounted for. Furthermore, when searching the workspaces using traditional optimization methods, such as gradient search methods or sequential programming methods, the solution for the worst-case kineto-elastic poses may become trapped in local optima instead of a global optimum. This is mainly due to the fact that these methods use local searches which compare the values of the nearest points, then move in the direction of the more optimal points. Overall, an efficient and numerically accurate direct

24

search method which can guarantee a global optimal solution for the worst-case kineto-elastic performance of an MRR is required. To do this, the method should be able to identify the feasible MRR configurations with respect to kinematics and kineto-elastic performance requirements, and search the MRR's feasible configuration-space along with workspaces of each configuration.

2.3 Design for Robot Kineto-Elastic Performance Requirements
The structural design of typical non-reconfigurable robots usually includes minimizing kineto-elastic performance measures (such as deflections and vibrations), or maximizing stiffness. The design parameters usually include material properties and cross-section dimensions. Other possible topology design parameters, such as link lengths for serial robots, are usually pre-determined from a separate kinematic design stage, and are kept fixed during the structural design process. For realistic designs, constraints on link and joint sizes, or their masses, must be incorporated. Also, for a given payload requirement, when the objective is to minimize the mass of the robot, constraints on the deflections and vibrations must be applied. On the other hand, to meet a set of kineto-elastic performance requirements for existing robot designs, additional stiffening elements can be added or the payload capacity could be optimized. Typically, the structural design problem is solved using optimization methods. Sadler et al. [67] presented design methods for flexible manipulators, including four-bar mechanisms and three-link serial manipulators, using the commercial FE software package ANSYS®. Lin and Lin [68] proposed a methodology for designing flexible robots and noted the weight trade-off between increasing the link thicknesses to reduce the deflections and vibrations of the robots under study. Oral and Ider [69] optimized the link cross-sections of a flexible manipulator with Euler-Bernoulli beam finite elements under time-dependent displacement constraints using sequential quadratic programming. Zhu et al. [70] performed a simultaneous structural and control optimization of a two-link manipulator with the FE link cross-section areas as design variables for reduction of the overall weight. Shijun and Jinjuan [71] optimized the structural variables of an industrial three-link parallel robot using ANSYS®. Roy et al. [72] used the FE method to design and analyze a two-link robotic arm to have high static strength, high vibration frequencies and low weight over the entire workspace. Dixit et al. [73] designed a single-link 25

Cartesian manipulator with a revolute joint and a prismatic joint support by determining the cross-section variables of the links to maximize the individual FE beam fundamental frequencies as opposed to maximizing the system fundamental frequencies with constraints on the link mass and deflections. Their optimization was performed using the sequential quadratic programming method. Abdel-Malek and Paul [74] increased the stiffness-to-weight ratio of a manipulator arm by replacing a hollow circular cross-section link with one that is made with three hollow tubes connected in parallel. Global optimization methods such as simulated annealing, particle swarm optimization and evolutionary algorithms, have been useful in designing robots for kineto-elastic performance requirements. Zhongyi et al. [75] used a simulated annealing algorithm and FE software to optimize the cross-section variables of a two-link high-speed manipulator to increase the structural stiffness and improve kineto-elasto-dynamic performance. Eberhard and Tang [76] implemented the particle swarm optimization algorithm to optimize the link stiffness vales of a hexapod PKM. They performed the optimization at a fixed number of random poses simultaneously, and their objective function was to minimize the average minimum eigenvalue of the leg stiffness at each pose. Cui and Xiao [77] optimized the shape of single-link manipulators with the objective of maximizing natural frequencies with weight constraints using a GA. Saravanan et al. [78] designed a robotic arm by optimizing the link cross section thicknesses using three different multi-objective evolutionary algorithms and the comparing the solutions of each. They also compared the effectiveness of performing the optimization using different link cross section shapes. For multi-objective optimization problems, many authors combined the multiple objective functions into a single weighted objective function. Zhang et al. [79] used a GA with a combined objective function to maximize the workspace volume and stiffness over the workspace of a tripod PKM. Ultimately, the GA has been a proven reliable global optimization method for robot structural design, as evidenced by many applications in the literature. Currently, the existing structural design methods were developed for traditional nonreconfigurable mechanisms and there are few existing methods for serial MRRs that were discussed in detail. It is well known that an increasing number of modules can increase the total

26

number of configurations exponentially, so the optimal structural design of MRRs can become quite complicated. The design examples used in [67-72, 75, 77 and 78] were all nonreconfigurable planar manipulators with the joints modeled as simple springs, and the most critical manipulator pose is known to occur at maximum arm elongation, which can be determined by visual inspection for these cases. For MRRs that undergo spatial motion with longer joint modules, such as the one shown in Figure 1-1, the shape of the assembled MRR structure can become quite complex and one has to consider the most critical configuration and pose that will yield the most suitable design points from a number of possible configurations and their respective poses, as opposed to just one. These design points are not easily obtainable by visual inspection, and the dominant modes of deformation for each module may change, for example, from link bending to joint torsion; thus yielding a critical pose that is different from the maximum elongation pose. Furthermore, the optimal MRR design should satisfy the kinetoelastic performance requirements for all configurations. The majority of research in open-chain MRR structural design has been focused on designing the modules for kinematic tasks. Other researchers who studied serial MRR structural designs did so without regard to the kineto-elastic flexibility issues in different module reconfigurations, as found in [8, 12-14, 21]. Alternatively, researchers focused on improving the kineto-elastic performance of existing MRR modules by adding stiffening springs to the joints to achieve static balancing [63, 80], but the design procedures conducted in the literature were limited to a single configuration only and it is not known which configurations are the best or worst performing based on their examples. Also, re-designing existing off-the-shelf modules is often a costly procedure, requiring extensive machining and modifications to the joint modules. Instead, tuning the parameters that are external to the MRR structure, such as the external payload capacity or tool reaction force, can prove to be viable options to improve the kineto-elastic performance of existing MRR modules. Overall, the published MRR module structural design methods lack consideration for multiple joint reconfigurations, which is a clear deficit in the current literature.

2.4 Component Substructuring Methods for Vibration Analysis
Component mode synthesis (CMS) methods were originally developed to reduce the numerical complexity from analyzing the structural dynamics (for mode shapes and natural 27

frequencies) of large system FE models which do not change geometry, such as entire aircraft or trusses and frames. The first CMS method was developed by Hurty [81]. The FE model reduction is accomplished by dividing the system into separate substructures, each of which consists of boundary and interior DOFs, then performing a modal analysis on each substructure to determine the normal modes and other modes which relate to component connectivity in terms of forces and displacements. Afterwards, a specified number of normal modes are kept for the reduction process and modal transformation matrices (based on Ritz coordinate vectors) are used to reduce the matrix sizes of each component's dynamic model. The reduced CMS matrices contain a combination of physical coordinates (corresponding to the boundary DOFs) and generalized coordinates (corresponding to the reduced set of internal DOFs). In general, CMS methods can be classified according to the types of interface BCs used to obtain the normal modes, and the types of modes that can enforce displacement compatibility and/or force equilibrium conditions between separate substructures. Among the most popular CMS methods are the Craig-Bampton method [82], which uses component fixed-interface normal modes, and the MacNeal and Rubin methods [83, 84], which use free-interface normal modes. Later researchers further developed the methods to include the possibility of hybridinterfaces which can connect one component with a free interface and another with a fixed interface [85-87]. The CMS modal transformation matrices developed in [85-87] are specific to the type of interface conditions used, and are therefore limited in their approaches since they have to be reconstructed for different interface BCs. Also, the physical coordinates of the component interfaces might be eliminated in the reduction process and CMS assembly needs to be performed using generalized modal coordinates. Fig. 2-3 shows an example of a cantilevered beam divided into three substructures to convey the differences between the three main interface types. To assemble the reduced substructures (whose equations of motion usually contain terms in both generalized and physical coordinates from the applied modal transformation matrices), the displacement compatibility and force equilibrium constraints are enforced. There are two approaches most commonly used for CMS assembly. The first approach, termed the "primal formulation" in [88], defines a unique set of interface DOF, and the interface forces are

28

eliminated as unknowns using interface equilibrium, thus finally describing the system using the equations of motion and displacement compatibility equations. The second approach, called the "dual formulation" is another approach to perform CMS assembly [88, 89]. In this method, the full set of assembled global DOF is retained and the assembled system is obtained by satisfying the interface force equilibrium in terms of Lagrange multipliers. By implementing the constraint equations in the form of a matrix, a linear transformation can be introduced and the assembly process of the system equations resembles that of the direct-stiffness method for typical FE assembly, as found in [90].

Figure 2-3: (a) Coupled cantilever beam system, (b) Fixed-interfaces, (c) Free-interfaces, (d) Hybrid interfaces

In terms of component damping models, the majority of CMS methods can handle Rayleigh proportional or structural (hysteretic) damping since the computed normal modes are nearly identical to those of an undamped model [91]. However, if general damping is considered, the kept normal modes will appear in complex conjugate pairs and the modal transformation matrix will need to be partitioned to include the complex-valued responses and their time derivatives. Morgan et. al [92] developed the fixed-interface Craig-Bampton modal transformation matrices for cases which involve general damping. More recently, the hybrid-interface CMS approaches

29

for stationary structures have been improved by Majed et. al, [93] and Dieker et al. [94] to allow for any set of interface BCs (all fixed, all free, or hybrid) to be used. Also, the component normal modes in these newer hybrid methods can be computed using any of the mentioned BCs. Further advantages of the methods in [93, 94] include explicit incorporation of physical coordinates at the interface boundaries, component independence, static completeness (gives the exact static solution for each component), inclusion of different damping types between components, and ease of testing components experimentally. The different combinations of component modes used in the CMS modal transformation matrices, often referred to as component mode sets [95], are specific to the CMS method used and the selection of component interface BCs. The types of modes most commonly used for the various CMS models are defined as follows [89, 95]: o Normal modes are the eigenvectors obtained from solving each component's free vibration problem with the component BCs either all fixed, all free, or a combination of fixed and free constraints. Only a selected number of modes are kept from the complete set of normal modes from the full FE model of the component. The number of retained normal modes is what dictates the reduction of matrix sizes in CMS methods. o Constraint modes are defined as the static deformation modes of a component when a unit displacement is applied to a set of interface DOFs (which are normally fixed when computing the normal modes), while the remaining component DOFs are restrained with zero forces. If there are multiple interface boundaries, or redundant interfaces, the process is repeated for each interface, thereby forming multiple constraint modes. The process is equivalent to a Guyan reduction [96] of the interior DOFs. o Rigid-Body modes representaa the rigid-body configurations of a component when it experiences zero-deformation displacements. The rigid-body modes are defined relative to any set of boundary DOFs that are sufficient to restrain the rigid-body motion of a component. These modes are computed by applying a unit displacement at each rigidbody DOF one at a time.

30

o Attachment modes are used to complement free-interface normal modes and are defined as the component displacement vector due to a unit force applied to one of the interface DOF, while all remaining DOFs have zero applied forces. If the component is fully unrestrained and rigid-body motion occurs, as found in free-free component BCs (statically indeterminate), then the flexible static behavior of the component can be captured by momentarily applying fixed constraints to the rigid-body DOFs and determining the resulting static modes. MacNeal [83] and Rubin [84] remove the rigidbody contribution to form inertia-relief modes. o Residual flexibility modes compensate for the loss of accuracy when discarding freeinterface normal modes for statically determinate or indeterminate component BCs by removing the contributions of the kept normal modes from the flexibility matrix (inverse of the stiffness matrix). This process is equivalent to removing the kept mode contributions from the attachment (or inertia-relief) modes, which are an alternative representation of the flexibility matrix expressed in terms of the omitted normal modes. Thus, the residual flexibility modes can effectively increase accuracy without increasing the number of kept normal modes. Other CMS modes were developed such as the use of quasi-static constraint modes from Shyu et al. [97]. The intention of these modes was to capture the inertial effects in the static constraint mode formulation by including the mass matrix. Therefore, the undamped equations of motion are used to solve for the quasi-static constraint modes at a particular tuning frequency. Shyu et. al [97] determined that the optimal tuning frequency for quasi-static modes should be chosen slightly lower than the natural frequency of interest. Benfield and Hruda [98] introduced the concept of loaded-interface normal modes to account for the stiffness and mass coupling of adjacent components. These types of modes are computed either by reducing the adjoining component interface terms, then adding those terms corresponding to the stiffness and mass matrices of the component of interest [98], or by adding ad-hoc stiffness and mass terms at the interface of the adjacent component to the current component under study [95]. The normal modes of the component are then computed with the loaded-interface terms. Although these methods violate the "component independence" criterion [95], they are useful for experimental

31

CMS applications, since separable components are usually connected to each other with fasteners or there are overlaps between components at their interface boundaries.

2.4.1 Experimental Component Mode Synthesis Methods
Originally, CMS methods were developed with the intentions of reducing system models and not for experimental applications where measured modes are used in the CMS model [82, 95]. The early experimental examples were mainly conducted to validate CMS models [83, 84]. Many previous researchers made attempts to directly measure the required component modes used in CMS modal transformation matrices, with the overall goal of avoiding testing the entire assembled structure experimentally. However, direct experimental mode substitution methods are difficult to implement since direct measurements of static constraint modes for fixedinterfaces, or attachment modes for free-interfaces, may prove to be troublesome tasks. The major difficulty in experimentally deriving component models for CMS is the treatment of experimental BCs for each component. Previous work by Rubin [84], Baker [99] and Alvin et al. [100] suggests using free-free BCs for component experimental testing. Typically, this is accomplished by hanging components using cables or bungee cords to simulate free boundaries. However, these methods heavily rely on the accuracy of measured residual flexibility terms due to modal truncation, thus requiring measurements at component interfaces. Because interface modes occur at much higher frequencies than the substructure's internal modes, this is a difficult task to achieve, especially if the displacement output sensors (accelerometers) have a low frequency bandwidth. To improve the accuracy of free-free CMS models, Karpel et al. [101] suggested testing components with mass-loaded interfaces, which force the lower frequency modes to contain necessary interface information. This method also allows the higher frequency residual flexibility modes to be captured in a lower experimental frequency range. Mayes et al. [102] developed a similar method in which a large flexible mass is added to each component tested to improve the modal basis of the substructures. The coupled system is first tested, then the flexible mass is tested alone to determine its dynamic characteristics and is then removed analytically (decoupled) from the experimental component to obtain the true system dynamic characteristics. The effectiveness of the method was further studied by Rohe and Allen [103]. Misawa [104]

32

developed a method in which the effects of untested components are accounted for in the analytical models of tested components using additional reduced stiffness and mass terms at specific nodal coordinates for translational DOFs. The method involves reducing the analytical system equations of motion to only include the coordinates where the translational stiffness and mass terms are to be added from the untested components using Guyan reduction, then reducing a tested component's equations of motion without the effects of the added stiffness and mass terms. Afterwards, the difference between the two reduced models allows for a determination of the effects of the untested components, from which the stiffness and mass terms can be added to the system model to account for the untested components. Other methods included performing modal tests on components attached to fixtures connected to the ground with arbitrary stiffness. Soucy and Humar [105] created a hybrid method in which the constraint modes of fixtures can be determined experimentally using static tests, and component free-interface and normal modes are determined using modal tests. The static tests were performed on beam and frame structures using a flexible fixture with arbitrary stiffness (constructed with thin beams) and the components were connected to the fixture at the interface attachment points. A known static force was applied at the attachment points on the fixture and the translational displacements and reaction forces at the supports were measured using and linear variable differential transformers (LVDTs) and load cells. Allen et al. [106] presented methods to remove the modal effects of large flexible fixtures by employing modal constraints to analytically force the fixture motion to zero. These methods do not require separate fixture motion measurements, and the tests are only required on the coupled fixture and component system. The first method they presented uses constraints to nullify the fixture motions and therefore required the number of measurement points to be equal to the number of fixture modes. However, in actual practice, the number of measurement points can be far greater than the number of measurable modes, especially if the fixture is much stiffer than the component. The second method Allen et al. [106] developed involved performing singular value decomposition (SVD) on the coupled fixture and component modes and constraining the fixture motion to zero. This method seems to be more practical since the fixture motion constraints do not require motion measurements on the fixture alone.

33

Alternatively, frequency-based substructuring (FBS) methods were developed [107, 108] to couple or decouple the experimental FRFs of two or more components connected to each other [107, 108]. In the majority of the FBS methods, the component models are left in an unreduced form, and the difficulty of the experimental applications arise from the inability to directly measure dynamic stiffness terms. Instead, the receptance (inverse of dynamic stiffness matrix) rows and columns of components and assemblies can be readily measured. However, to decouple the receptance terms of an assembly, these methods usually require separate tests for the components of interest, along with force and motion measurements at their connectivity interfaces, where it might be difficult to place sensors or force transducers, especially if the components are clamped together or are connected by fasteners or joints. To determine response measurements directly from a CMS model, test-analysis models (TAMs) were developed to include the measurement coordinate locations in the analytical CMS models. This is a requirement if the physical coordinates where measurements were taken are reduced to a set of generalized modal coordinates during the CMS reduction process. Blades and Craig [109] developed a TAM for a Craig-Bampton method with fixed interfaces. Morgan et al. [110] developed a TAM for determining the uncoupled forced response of each component using free-interfaces in order to determine the couple system response. What differs from other TAM techniques like Guyan reduction (which is used to eliminate specific unmeasured DOF from full FE models using static condensation), is that the CMS-based TAMs apply an additional modal transformation matrix during the reduction process to retain the measurable DOF (instead of eliminating unmeasurable DOF) thus increasing the number of physical coordinates in the CMS reduced system matrices. Another method is to recover the physical coordinates where measurements were taken in a post-processing stage, though this method is rarely discussed in the literature since measurements are usually taken at physical coordinates which coincide with interface boundaries.

2.4.2 Component Mode Synthesis Modeling of Robots
The existing CMS methods were applied for the kineto-elasto-dynamic analysis or stationary modal analysis (structural dynamics) of robots. One of the earliest examples in the literature from Imam et al. [111] involved the development of a CMS model for the kineto-elasto-dynamic

34

analysis planar mechanisms by including the rate of change of the natural frequencies with respect to mechanism motion. Shabana and Wehage [112] developed a floating frame approach for the vibration analysis of serial robots. Also, the BCs for each link were assumed to be freefree with normal and rigid-body modes computed to perform CMS. De Smet et al. [26] developed a stationary vibration model of an industrial manipulator using Craig-Bampton CMS with fixed link boundaries, and validated their results with modal experiments on the assembled robot in two different poses. Jen and Johnson [113] used a CMS model with free-interfaces to study the effects of pose changes and payload variations on the stationary vibration characteristics of a planar manipulator. Xianmin et al. [114] used a free-interface CMS method with residual flexibility attachment modes to model parallel mechanisms in order to analyze stationary vibration in different mechanism poses. Moon and Cho [28] obtained the experimental modal parameters of a four-bar linkage and industrial manipulator by separating the links and suspending them with cords to simulate free-free boundary conditions. The normal mode shapes were then directly substituted into their CMS model for validation purposes. However, their method did not include the use of attachment modes, rigid-body modes, or residual flexibility modes, and they did not include the possibility of joint stiffness or damping. Therefore their method yielded natural frequency errors as high as 14.1% and 16.2% for the first modes of each case. Park and Mills [27] modeled a manipulator connected to a flexible payload using CMS with fixed interfaces and quasi-static constraint modes to reduce the complexity of the dynamic equations of motion. Aside from the floating (body-fixed) frame approach, CMS models have been developed using other coordinate frames. Craig and Anthony [115] developed a CMS method for multibody system dynamics using either tangent reference frames, where the coordinate frame is locally attached to a point on the link, or secant reference frames, which pass through specified interface nodes and are defined by the instantaneous positions of the endpoints of the link. Cardona [116] developed a corotational frame approach using the Craig-Bampton CMS method for links with fixed interfaces. More recently, other researchers developed CMS methods for robots using absolute coordinate frame formulations. Gerstmayr and Ambrosio [117] and Pechstein et al. [118] developed absolute nodal coordinate formulations for their CMS models for the CraigBampton method. The advantage of their method when performing kineto-elasto-dynamic

35

analysis is that the assembled system's mass and stiffness matrices become constant. However, their current shape function formulations do not consider flexible rotational DOFs. In the current literature, there are no CMS methods applied to modular robots. For serial MRRs with separable joint-link modules, CMS modeling would be ideal since the modules can be naturally interchanged or removed from the system assembly. CMS models can also prove useful when comparing analytical models to experimental tests. Naturally, the simplest BCs to implement for joint-link modules would be to fix one end of an active joint, with the end of the link being free. This would allow the joint-link module to be tested at different joint angles to identify pose-based dependencies on the configurations, which may be caused by additional joint structural flexibility. Furthermore, the joint flexibility contributions in the current robot CMS methods in [26, 27, 111-118] were neglected, and the joints were all considered rigid. Although CMS methods with "mixed" BCs were studied for robots [119], the interface BCs between adjacent components were either all free, or all fixed. Therefore, a hybrid CMS method needs to be developed for serial joint-link modules.

2.5 Structural Dynamic Model Updating Methods
For large and complicated system assemblies, the accuracy of FE or CMS vibration model predictions may often exhibit questionable errors when compared to experimental test data. These errors can often originate from modeling inaccuracies such as incorrect damping predictions, flexible connections or joints, improper modeling of experimental BCs, and incorrect assumptions of material properties. As a result, it would be beneficial to update the analytical structural dynamic model parameters to provide better correlation with experimental results. Over the past few decades, there has been a considerable amount of research in FE updating techniques using experimental data for large stationary structures [120]. Typically, these methods can be classified according to the types of data extracted from experiments (modal data vs. frequency response functions, or FRFs), types of parameter adjustments (direct matrix terms vs. model physical parameters such as element material properties and geometry), and solution methods (direct vs. iterative or optimization approaches).

36

There are several advantages to using directly measured FRF data as opposed to estimating modal data for model updating [121,122]. First, FRFs contain a greater number of data points than modal data for the same number of tests. Likewise, FRFs contain information about subcomponent modes that cannot be directly measured and modes that are out of the specified bandwidth. Because modal data is derived from FRFs at resonant frequencies, accurate modal data is difficult to obtain near closely-spaced or highly damped modes. Also, modal parameter estimation procedures usually involve curve-fitting procedures, which can introduce further errors. Furthermore, FRF data can be specified for any number of measurable DOFs, whereas critical mode shape information may be lost if there are too few measurement points. Finally, measured modal data should either be expanded to fit the number of DOFs in an FE model, or the FE model should be reduced to match the number of measurement points; these expansion or reduction methods are usually prone to numerical errors. Fig. 2-4 shows an updated FRF of a beam model using simulated experimental data.

Figure 2-4: Updated FRF using simulated experimental data

In terms of FE parameter adjustments, updating the model physical parameters seems to be the most logical choice since direct matrix modifications may not produce physically meaningful results [123]. The majority of direct solution methods apply direct matrix modifications instead of tuning the physical model parameters. Pilkey [124] devised a direct solution method to determine a symmetric general damping matrix for beams using experimental modal data and known stiffness and mass matrices. Avitable et al. [125] developed the analytical model improvement (AMI) method, which uses initial estimates of analytical mass and stiffness 37

matrices along with experimental mode shape and natural frequency data in order to update the mass and stiffness matrices to match the target data. The AMI method uses a weighted pseudoinverse solution with the weighting terms equal to the experimental modal vectors. This method was implemented by Butland and Avitable to update analytical Craig-Bampton reduced component models of a plate assembly, instead of directly substituting experimental modes into the CMS matrices [126]. A Guyan reduction technique was used in [126] to eliminate the nodes where measurements were not taken before the CMS reduction was applied. Carvalho et. al [127], developed a direct updating method which requires no model reduction or expansion techniques and requires only a small number of resonance frequencies and modal vectors. Although direct solution methods, which mainly use extracted experimental modal properties, are more computationally efficient, they may suffer from improper node connectivity, fully populated matrices, violation of matrix symmetry, or the loss of a positive definite stiffness matrix [123]. Iterative updating methods which use FRF sensitivity matrices can produce physically realistic system matrices. Lin and Ewins [121] developed the response function method (RFM) initially for undamped structures. The RFM method uses FRF data (receptances) directly to compute an error function with respect to an analytical model. The analytical dynamic stiffness matrix terms are rewritten in terms of small perturbations and the RFM equations are then formed into a linear system of equations relating a sensitivity matrix and an unknown vector of fractional parameter corrections to the error between experimental and analytical FRFs. The RFM method is computed for a given number of FRFs at known frequency points and is solved using a pseudo-inverse in an iterative fashion. This method was further developed by Lin and Zhu [128] to include updating proportional or general damping matrices. Later, the RFM method was used extensively by Arora et al. [129] to update the stiffness and mass matrices of an Fshaped beam structure, while the damping matrix was updated using the direct method from [124]. The advantage of the RFM method is that physical connectivity of the analytical model is preserved and that the system matrices remain symmetric, with positive semi-definite stiffness and positive definite mass matrices. Also, the method can use incomplete sets of FRF data, with analytical FRFs replacing the missing terms. On the other hand, these methods are sensitive to noise and can yield non-unique parameter estimates, especially if the initial model estimate is far

38

from the nominal system parameters. As well, the system matrices may become ill-conditioned if the error between experimental and analytical FRFs is too large and the solutions yield nonunique updating parameter estimates. Furthermore, the method may experience large discrepancies near resonances when solving the pseudo-inverse [130]. To solve this problem, Kwon and Lin [131] determined that the frequencies from which the RFM method is computed should be at least 2 Hz away from resonances. Other iterative methods included updating FE parameters using sensitivity matrices based on modal vectors [132] or antiresonance eigenvalues [133]. Alternatively, FE updating methods were applied using optimization algorithms for stationary structures. In the majority of these methods, the objective function is to minimize the error between the analytical and experimental FRFs, which takes the form of the initial RFM set of equations, without resorting to sensitivity matrices and small perturbation theory. Levin and Lieven [123] developed updating methods using a genetic algorithm or simulated annealing. Other optimization algorithms involved using particle swarm optimization [134], and the bees algorithm [135]. A multi-objective updating approach has been studied by Kim and Park [136], where the solutions for the updated parameters were chosen from a Pareto-optimal frontier, and robust updating parameter selection methods have been applied by Kwon and Lin [137] using the Taguchi method in combination with a GA. Recently, Beck et al. developed a neural network approach combined with two evolutionary algorithms to update component geometries in a simulated experiment [138]. The objective functions in the optimization methods are usually the summed error (or sum of squares error) over the entire range of FRF data [124, 134-136], or the Euclidean norm of an FRF error vector (row or column) is computed to reduce the objective function to a scalar quantity for multiple DOF [138]. Other researchers compute a mean square percentage error between analytical and experimental FRFs, then divide this quantity by the number of FRF data points used in the updating procedure [139]. The main advantage with using optimization methods for updating is that bounded inequality constraints can be applied to the updating parameters in order to provide physically realistic solutions and improve solution convergence [136, 140, 141]. The main downside to these methods is that unique solutions are almost never guaranteed and long computational times are required for high solution accuracy.

39

2.5.1 Model Updating Techniques for Robots
The model updating techniques have been successfully developed and applied to typical nonmodular robots in the current literature. In these methods, fully assembled robots were experimentally tested (or a simulated experiment was performed) using a large number of poses. In particular, the dynamic parameters of the joints, such as stiffness and damping, are unknown and should be identified. Pham et. al, [142] developed an updating method using a bandpass filter to identify the joint stiffness of a serial manipulator with rigid links and flexible joints. To excite the structure near the first natural frequency, the robot's controller provided a chirp function to move the joints, and the position feedback was determined from the joint encoders. Alici and Shirinzadeh [143] developed an identification procedure to determine the joint stiffness of a fully flexible 6-DOF serial robot using static tests. The robot was tested in 20 different poses using a cable-pulley system to apply a known load at the end-effector, and the displacements were used to measure the static deflections at the robot's tip. Also, a nonlinear least squares procedure was employed to minimize the summed square of the robot pose errors, which was solved using preconditioned conjugate gradient methods (Levenburg-Marquardt algorithm). Zhou et al. [50] developed a joint stiffness identification method for a fully flexible PKM with pose-dependent hinged revolute and spherical joints. A modal analysis was performed on the PKM in 28 different poses. Guyan reduction was performed on the FE model to retain only the joint stiffness, mass and damping parameters. Afterwards, an eigenvalue sensitivity method was developed to identify the joint stiffness and proportional damping parameters using a pseudo-inverse with manual adjustments for fine tuning. A similar approach was used by Rognant et. al [144] for a parallel robot with modal tests performed for two robot poses. Instead of using eigen-sensitivity analysis, the joint stiffness and proportional damping parameters were obtained using an optimization approach by minimizing the sum of squares error between the analytical and experimental FRFs over a specified bandwidth. More recently, Dumas et al. [145] developed a static joint stiffness identification procedure for 6-DOF industrial manipulators subjected to an external payload force. The three poses where the robot's kinematic dexterity was the highest were chosen as experimental measurement points, and the joint stiffness values were determined using a linear least squares method.

40

While the majority of research has been focused on the structural dynamic model updating of non-modular robots, there are only a few publications which apply model updating methods for modular robots. The research group of Li et al. [146, 147] devised a joint stiffness updating method using fuzzy logic combined with an optimization method for a 9-DOF (nine revolute joint modules) serial modular robot. In [146, 147], modal tests were performed on the fully assembled modular robot in a single pose and configuration, while the updating method involved minimizing the summed squares of the natural frequency errors. Therefore, the method in [146, 147] is similar to the updating methods found in [50, 142-145] for non-modular robots. Furthermore, the solutions obtained in [146, 147] may not be valid for different robot poses since the joint parameters were identified using a single robot pose. Currently, there are no true modular testing and model updating approaches in the literature for serial modular robots with flexible joints. That is, all of the robot updating techniques in the available literature use experimental data for the entire robot assembly, instead of testing the individual modules separately and performing the model updating at separate stages for each module. By taking advantage of component testing and updating methods for individual modules, large assembly tests can be completely avoided, and the number of simultaneous updating parameters can drastically be reduced, thereby possibly reducing the variations in the updating parameter solutions. The main difficulty in testing modules individually is the attempt to emulate the BCs to match the natural connectivity between modules.

41

3. Kineto-Elastic Modeling Method for Serial Modular Robots
In this chapter, a kineto-elastic modeling method for serial MRRs is presented, which combines the rigid-body MRR poses with the structural elasticity of the modules. First, a description of the types of serial MRRs under study is given. This is followed by the development of an MRR kinematic model to account for the module connectivity during initial MRR assembly setup and/or module reconfigurations, with all module lengths aligned with a common global reference frame. Then, recursive methods are developed for the MRR forward kinematics to determine the pose (position and orientation) or each module with respect to the global frame for given revolute joint input motions. Afterwards, the kineto-elastic model for assembled MRRs using the finite element (FE) method is presented. The goal of the kinetoelastic model is to solve the stationary vibration and kineto-elasto-static problems. The underlying assumption in this dissertation is that the modules undergo low-speed quasi-static motion, such that the inertial, centrifugal and coriolis forces are negligible. The goal here is to solve for the kineto-elasto-static deflections, wrench moments at the output shafts of the joint modules, and undamped fundamental natural frequencies for an MRR in any possible configuration and pose subjected to an externally applied payload. Here, the payload refers to an externally applied load caused by a mass at the free-end (or tip) of the assembled MRR, and the tip deflection refers to the small elastic deformations found at the tip of the MRR caused by the applied payload and gravitational loads due to module structural self-weights along with nonstructural masses such as joint motors.

3.1 System Description of Serial Modular Robot
The types of open-chain MRRs under study in this dissertation consist of separate detachable revolute joint and link modules, as shown in Fig 3-1(a). When an MRR is assembled in a particular initial configuration, the system is driven by the revolute joint modules, shown in Fig. 3-1(b). The links are connected to the joint modules using bolts which connect one of the ends of a link to one of three orthogonal flat faces located near the base of the joint, or the top flat surface at the end of the joint output shaft. Each MRR module is initially configured with respect

42

to a common global reference frame [14, 19, 55], where the lengths of the joint and link components are always initially aligned along the global x-, y-, or z-axes. This type of orthogonal connectivity allows the joints to provide rotation about one of three possible axes in either direction (±x, ±y, and ±z) relative to the module's local coordinate system. At these initial configurations, each joint variable is initially set to zero; once motion occurs, the pose of each module changes. On the last link, a separate wrist module or end-effector can be added for extra mobility. Successive revolute joint and link modules can be attached to each other by connecting one end of a link module to one of the flat faces of the previous joint module, thereby forming a serial robot.

Figure 3-1: (a) Inventory of MRR modules, (b) MRR assembled in two different configurations

For the MRR under study in Fig. 3-1, the longer joint lengths can be immediately noticed, as compared to those found in traditional non-reconfigurable serial robots. This allows the joint modules to contain larger components such as motors, gears and bearings, thereby allowing greater torque capabilities when compared to smaller joint modules. Also, a separate motor

43

driver/controller can be mounted on one of the flat faces at the base of a joint module, thus enabling the joint module to become a completely self-sustained unit, independent of other modules. The longer joint sizes can create a noticeable difference in the kinematics when the joint lengths are ignored and modeled as simple nodes that connect links. Therefore, the joint offset lengths must be taken into account in the MRR kinematic and kineto-elastic models. While the methods introduced in this dissertation can also be applied to other serial MRR modules with longer joint offsets, such as those found in [12, 20, 146, 147], the kineto-elastic methods can also be computed for MRR joint modules with zero offset distances. To facilitate module reconfigurations from a pre-existing configuration, the MRR can be moved to its home position to reset the joint variables to zero. Afterwards, the modules can be manually detached from their connection ports, then re-aligned with one of the global reference frame axes that are required for the new configuration, and re-attached to their neighboring modules. Since the joint variables are always reset to zero before any reconfigurations occur, new configurations are always assembled in their new home positions.

3.2 Forward Kinematics Method for Serial Modular Robots
This section describes a computational method to solve for the rigid-body forward kinematics for open-chain MRRs. The problem is defined as the determination of the pose of each module for a given initial MRR configuration assembly (referred to as the static pose), and the determination of the MRR pose after joint input motion occurs (referred to as the motion pose). A recursive method is developed, instead of applying joint constraint equations (as in Shabana's text [148]), to ease the MRR assembly process and avoid computational burdens associated with computing constraint Jacobian matrices.

3.2.1 General Rigid-Body Motion for a Single Module
For an arbitrary single module undergoing rigid-body translations and rotations depicted in Fig. 3-2, a position vector, p, defines the position of a point on the module with respect to a global (space-fixed) coordinate system (for example, the XG-YG-ZG frame in Fig. 3-1). A local body vector, b', defines the length of the module with respect to a local (body-fixed) coordinate system. Using Cartesian coordinates, these vectors can be represented as:

44

p   px b'  b
' x

py b
' y

pz  b
' T z

T

(3.1)

Figure 3-2: General motion for a single link module

The position vector of the link in Fig. 3-2 is due to the rotation and translation and is commutative as given by the following equation [149]:

p  Rb' + h = h + Rb'

(3.2)

where R is defined as a rotation matrix, which is used to describe the orientation of a module, and h is a vector of translations. If h becomes a null vector, then there is only rotation. Similarly, if R becomes an identity matrix, then there is only translation. The properties of rotation matrices are given in Appendix A. Rotation matrices can be defined using different rotation sequences about each axis. In this work, the Tait-Bryan pitch, roll and yaw rotation sequence is used [149], also referred to as the "X-Y-Z" Euler angles in [150]. Starting with the common global reference frame, the module is first rotated by an angle x about the body-fixed x-axis, then rotated by y about the body-fixed yaxis, and finally rotated by z about the body-fixed z-axis. The rotation matrix for this rotation sequence is given by:

R = R  x  R  y  R  z 
where

(3.3)

45

1 0 R  x    0 c x  0 s x

 c y 0     s x  , R  y    0   s y c x   

0 s y  c z  1 0  , R  z     s z  0 c x   0 

 s z c z 0

0 0  1  .....(3.4)

with `c' and `s' denoting cosine and sine functions, respectively. Multiplying the terms in Eq. (3.4) gives the following:

 c y c z  R =  s x s y c z  c x s z  c x s y c z  s x s z 

c y s z c x c z  s x s y s z c x s x s y  s x c z

s y    s x c y  c x c y  

(3.5)

Equation (3.5) is used in the subsequent sections for the initial configuration assembly for multiple modules to define the module orientations for each of the configurations, and to compute the pose after an MRR moves from its home position.

3.2.2 Initial Configuration Assembly
In this dissertation, all initial module configurations (or reconfigurations) are initially defined with respect to a common global coordinate frame, referred to as the "zero reference plane" or ZRP in [14, 19, 55], where each of the joint variables are initially set to zero and once motion occurs, the pose of each module changes. In total, there are six possible ways of setting up each module, taking into consideration that modules are commonly connected in an orthogonal fashion. Three configurations are along positive directions of three axes and other three along the negative directions. Figure 3-3 shows the six configuration directions of a joint module with respect to the ZRP, with the joint output shaft rotations always counter-clockwise about the module's body vector axis.

46

Figure 3-3: Initial configuration directions for a single joint module

In the local frame attached to each revolute joint module with large offsets, the joint length is always assumed to be aligned with its axis of rotation, defined as the local x-axis, the link length is defined along its local x-axis, the joint output connection to the link is defined as the local zaxis on the link's body, while the local y-axis is determined using the right-hand rule. Using this convention, the local body vector for the ith module in Eq. (3.1) becomes:

bi'   Li

0 0

T

(3.6)

To attain the possible configuration directions at the initial configuration assembly, a static rotation matrix in the space-fixed frame that defines the initial orientation of the ith module relative to the ZRP is defined as:

R s ,i  R ( x ,config ,i ,  y ,config ,i ,  z ,config ,i )

(3.7)

where x,config,i, y,config,i, and z,config,i are pre-defined pitch, roll and yaw angles for each configuration direction for the ith module, shown in Table 3-1.
47

Table 3-1: Pitch, roll and yaw input angles for each initial configuration Configuration Direction x y z -x -y -z

x,config,i
[deg] 0 0 0 0 0 0

y,config,i
[deg] 0 0 -90 180 0 90

z,config,i
[deg] 0 90 0 0 -90 0

The order of rotations used in Eq. (3.7) is given by Eq. (3.3) to coincide with Tait-Bryan pitch, roll and yaw angles. Figure 3-4 shows an MRR with n reconfigurable modules and their corresponding body vector notations at their initial configurations.

Figure 3-4: MRR modules at initial configuration and after motion occurs

The static body vectors for the ith module in the global frame can be computed as:
bs ,i = R s ,i bi'

(3.8)

Using Eqs. (3.6) and (3.7), the static positions at the ith point along the chain defining the MRR assembly at the initial configuration can be determined using a recursive method as follows:

48

ps ,1  b0 ps ,2  ps ,1  R s ,1b1'
' ps ,3  ps ,2  R s ,2 b2

(3.9)





ps ,i  ps ,i 1  R s ,i bi' In the above equation, the subscripts for R0i,s denote that the rotation matrices are computed recursively from the base node, `0' attached to the origin of the global reference frame, to the ith node on the corresponding module. From Eq. (3.9), at initial assembly, a position vector for the

ith module with respect to the global coordinate frame can then be written in compact form for
the tip of the nth module as:

ps ,n 1 =  bs ,i
i 0

n

(3.10)

Because the orientations of the modules are initially computed at initial assembly with respect to the global frame, the rotation matrices, Rs,i, do not need to be recomputed if zero motion occurs.

3.2.3 Motion Pose Computations
To determine the pose of each MRR module after motion occurs, given joint motion input angles, the ZRP method from [14, 19, 55] is employed. A separate rotation matrix which defines the relative motion due to the ith revolute joint module's input motion angle, qi (in the joint's local frame, about the x-axis) is defined as:

R m ,i  R  1   i  qi , 0, 0 

(3.11)

where i is a Boolean operator and is equal to zero if the ith module is a revolute joint, or equal to 1 otherwise. Alternatively, the rotations in Eq. (3.11) may be adjusted if the revolute joint's rotational motion axis is about the module's local y- or z- axis. Afterwards, the rotation matrix which defines the orientation of the ith module after motion occurs can be defined as:

R i  R s , i R m ,i

(3.12)

Applying recursive rotations for each module down the chain yields the following rotation matrices, including the motion parts with respect to the fixed global reference frame:

49

R 01  R1  R s ,1R m ,1 R 02  R1R12 = R s ,1R m ,1R s ,12 R m ,2 R 03  R1R12 R 23 = R s ,1R m ,1R s ,12 R m ,2 R s ,23R m,3 
i j 1

(3.13)


i j 1



R 0i   R ( j 1) j   R s ,( j 1) j R m, j where R0i denotes the rotation matrix to describe the orientation of the ith module with respect to the global coordinate frame due to the initial configurations and joint motions, and R12 is the rotation matrix, including static and motion parts, from module 2 relative to module 1. Similarly, Rs,12 is the static rotation matrix for module 2 relative to module 1. It can be noted at the initial assembly static configuration, where the motion rotation matrices are all identity matrices, Rs,2 = Rs,1Rs,12 and hence Rs,12 = Rs,1TRs,2. Therefore, the rotation matrix for the second module with respect to the global frame becomes:
R 02  R 01R T s ,1R s ,2 R m ,2

(3.14)

Similarly, the rotation matrix for the third module after motion occurs becomes:
R 03  R 02 R T s ,2 R s ,3 R m ,3

(3.15)

The same procedure occurs for any remaining modules down the chain. Thus the rotation matrix after motion occurs for the ith module can be computed recursively as: R 0i   R T s , j -1R s , j R m , j
j 1 i

(3.16)

And the position vector at the tip of the nth module after joint motion occurs can be computed as:

pn 1   R 0i bi'
i 0

n

(3.17)

The advantage of using a fixed global reference frame is that all the modules can be reconfigured with respect to a single frame, thereby avoiding the reset of the n local frames during reconfigurations, which are automatically taken care of by Eq. (3.16) in this approach. Furthermore, the reason to use the vector form for MRRs instead of the more commonly used Denavit-Hartenberg parameters [151] is that the former is more general since it can be defined in

50

all three axes. For the modules in Fig. 3-4, the generality of the vector form is exploited during the initial configuration setup of each module, where adjacent modules are initially mounted orthogonal to each other along one of the three axes. This method allows for separate explicit expressions of the static and motion rotation matrices for each module, thereby enabling a greater level of reconfigurability since the static part only changes with the robot configuration, and the motion part changes with joint movements alone.

3.3 Kineto-Elastic Modeling Using the Finite Element Method
To account for the structural elasticity of the MRR modules, a kineto-elastic model is developed in this section. A local (body-fixed) reference frame is used to first define the elastic deformations of the modules for the FE formulation, which are then assembled in the global frame to form a serial MRR. Thus, two sets of coordinates are used to describe the flexible behavior of the modules: a body-fixed coordinate system is used as a reference for the elastic deformations, while the pose of the module is described with respect to a fixed global reference frame. Therefore, the flexible-body global position vector of an arbitrary point p on a single module i can be denoted as:

p flex , p  pi  R 0i  b'p ,i  d p ,e,i 

(3.18)

where b'p,i is a local body vector from the origin of the body to point p on the body, dp,e,i is a vector of translational elastic deformations with respect to the local body-fixed frame at the pth node for the ith module. The kineto-elastic analysis methods in the forthcoming chapters are subject to the following assumptions:
o The flexible modules are assumed to be undergoing low-speed (quasi-static) motion with

negligible acceleration, thus the coriolis and centrifugal forces, as well as the dynamic inertia effects may be ignored.
o It is assumed that each module undergoes small linear-elastic deformations due to its self-

weight, motor weight and externally applied payload.
o The modules all have symmetric, uniform cross-sections, except in the case of hinged

joint modules.
o The first joint module is rigidly attached to a fixed support when the MRR is assembled.

Therefore, no base structural motions occur. 51

o Although the joint motor shafts experience flexible (compliant) behavior, it is assumed

joint friction and clearance is negligible, though these factors can be easily implemented directly in the FE model for later analysis if required. From the first assumption, the coupling effect between rigid-body motions and elastic deformations can be neglected. Therefore, the kineto-elastic problem becomes categorized into a kineto-elasto-static problem to solve for the static deflections and wrench moments, and a structural dynamic problem to solve for the natural frequencies and mode shapes. It can be shown that the elastic behavior with respect to a fixed global frame of an MRR assembly (or any multi-link robot for that matter) can change drastically in different robot poses, which is a main concern in this dissertation. The kineto-elastic analysis and structural dynamic models can then be used to perform stiffness design of MRR modules, determine the worst-case quasi-static stiffness performance MRR configurations and poses, or the maximum payload capacity an MRR can carry.

3.3.1 Finite Element Discretization
In this work, the kineto-elastic model of the MRR is discretized into separate linear- elastic finite elements for the joint casings, motor stiffness and links, as shown in Fig. 3-5. To account for the additional flexibility of joint modules with longer offsets, instead of modeling the joints as torsional spring elements alone, the joint casings are modeled as finite element beams where the offset length of the joint shaft is taken into account to justify possible bending, torsion and axial deformation. It can be assumed that the links can also undergo the same type of deformations since they are also long and slender. The link modules are modeled as solid or hollow rectangular beams, and the joint modules are modeled as solid or hollow circular beams. The choice of the type of beam elements depends on the sizing of the module cross-sections. If a module's thickness to length ratio is greater than 1/20, then Timoshenko beam elements are suitable since they can include the possibility of transverse deformations due to shear stresses [152]. Otherwise, Euler-Bernoulli beam elements are adequate for more slender modules. By using beams instead of solid elements, a computationally inexpensive model could be generated with smaller matrix sizes without greatly sacrificing accuracy if small linear-elastic deformations

52

occur. The choice of beam elements for the kineto-elastic analysis of robots has been widely adopted in the previous literature and was proven to be effective [23, 41, 44-55].

Figure 3-5: Module finite element discretization

Although not shown in Fig. 3-5 for clarity, each link and joint module is further subdivided into a number of finite elements, with evenly spaced nodes numbered consecutively from the base to the tip of the assembled MRR. Therefore, the length of an element for module i is given by:
Le ,i  Li nele,i

(3.19)

where Li is the total length of module i, and nele,i is the number of elements module i contains. Referring back to Fig. 3-4, the numbered nodes at the ends of each module refer to their connection points. Also, an additional virtual spring stiffness between each joint and link module is implemented in the kineto-elastic model to account for the flexibility found in the motors of each joint module. The motor spring element consists of six structural DOF at each node to account for motor compliance in all directions, but the flexibilities of the given structural DOF can be suppressed to only account for lateral and torsional motor compliance if required. Furthermore, the gravitational effects due the distributed weight of each model are to be accounted for, as well as those for non-structural masses (such as motor masses and payloads).

53

The non-structural motor masses are represented as lumped masses with possible length offsets at their center of gravity (CG) location. Moreover, if there are any components that are significantly shorter than the link or joint modules, such as the end-effector in Fig. 3-5, they may be modeled as rigid bodies with their offset lengths and masses taken into account. The following sub-sections describe the theoretical stiffness modeling of each MRR component.

3.3.2 Module Structural Element Shape Functions
Each link and joint module casing is modeled using a given number of two-node spatial beam elements with six structural DOFs at each node. A single element is shown in Fig. 3-6 with the local element coordinate frame denoted as Xe-Ye-Ze and the end nodes denoted as "1" and "2". At each node, an axial force denoted by fx, causes tension, denoted by u; the two lateral forces, denoted by fy and fz, cause two transverse bending deflections, denoted by v and w, as well as their slopes, denoted by  and , respectively. The moments include torque, denoted by

mx, causing torsion, denoted by ; and two bending moments, denoted by my and mz,
respectively. Because small linear elastic deformations are assumed, it is further assumed that no geometric nonlinearities exist for the individual elements, which may cause large strains, displacements or buckling [152]. Moreover, it is assumed that the module loads and deformations are small enough such that material nonlinearities (pre-stressed condition or inelastic behavior) do not exist. The vectors of local nodal displacements and forces for a twonode element (as shown in Fig. 3-6) are defined as follows:

ue  u1 v1 f e   f x1
f y1 f z1

w1 1 1  1 u2 mx1 m y1 mz 1 f x2

v2

w2  2 2  2 e f y2 fz2 mx 2

T

my 2

mz 2 

T

(3.20)

e

In Eq. (3.20), the subscript `e' denotes that the coordinates coincide with the module's bodyfixed reference frame. For the axial and torsional displacements, a linear displacement function is assumed over the length of the two-node element (Le) in Fig. 3-6:

u  x   c1  c2 x

  x   c11  c12 x

(3.21)

Note that for the torsional deformations, any warping along the axial coordinate is ignored, which limits the element to small displacement assumptions. For bending about the local Ze and

54

Ye axes, if the displacement contributions due to transverse shear are neglected, a cubic polynomial can be used to approximate the lateral deflections in terms of unknown coefficients:

vb  x   c3  c4 x  c5 x 2  c6 x3 wb  x   c7  c8 x  c9 x 2  c10 x3

(3.22)

Figure 3-6: Local displacements and forces at each node in a spatial finite element beam

To include the transverse shear strain contributions in the lateral bending displacements, the following holds [153]:

v  vb  vs , w  wb  ws

(3.23)

where vs and ws are the additional lateral deflections due to shearing strains. Accordingly, the total slopes, which include bending rotation and transverse shear, are the following:

v vb vs       xy , x x x

w wb ws       xz x x x

(3.24)

where xy and xz are the shear strains in the Xe-Ye and Xe-Ze planes, respectively. The negative sign for  in Eq. (3.24) denotes that the sign conventions for the positive bending moments in the Xe-Ye and Xe-Ze planes change according to Fig. 3-6. The shear strains in Eq. (3.24) can also be expressed as [153]:

 xy 

fy vs w  fz ,  xz  s  ;  x k y GA x k z GA

(3.25)

55

where ky and kz are the shear coefficients in Timoshenko's beam theory and can be determined for a variety of cross-section shapes using the formulations in [154, 155], G is the elastic shear modulus, and A is the cross-section area of the module. The shear strains in Eq. (3.24) are independent of the beam's axial coordinate. The moment-curvature relations in the Xe-Ye and Xe-Ze planes are given by: mz   EI z  2 vb , x 2 my  EI y  2 wb x 2 (3.26)

where Iz and Iy are the polar moments of area about the Ze- and Ye-axis, respectively. Also, the relation between the shear forces and bending moments is given by the force-moment equilibrium equations: dmz  f y  0, dx dmy dx  fz  0 (3.27)

Substituting Eqs. (3.25) to (3.27) into Eq. (3.24) and rearranging, the elastic bending slopes (rotations) about the local Ze- and Ye-axis which include the effects of the shear strains are written as:

  x   c4  2c5 x   3c6 

 6 EI z  2 x    k y GA   6 EI y  2    x   c8  2c9 x   3c10  x k z GA  

(3.28)

If the shear effects are ignored (as in the case of Euler-Bernoulli beams), the corresponding shear strain terms in Eqs. (3.23), (3.24) and (3.28) are removed. Each of the displacement functions in Eqs. (3.21) and (3.22) can be written in matrix form as follows:
u  x   Xc

(3.29)

 is a matrix containing the polynomial terms relating to where u(x) = {u(x), v(x), w(x), (x)}T, X

the length variable x in Eqs. (3.21) and (3.22), and c is a vector of the unknown coefficients c1 to c12. To determine these unknown coefficients, the following BCs are imposed: u  0   u1 , u  Le   u2 , v  0   v1 , v  Le   v2 , w  0   w1 , w  Le   w2
(3.30)

  0   1 ,   Le    2 ,   0   1 ,   Le   2 ,   0    1 ,   Le    2

56

where the slope functions for (x) and (x) are given by Eq. (3.28). Afterwards, the displacement functions in Eq. (3.29) can be expressed using the polynomial terms when the BCs in Eq. (3.30) are applied, along with the nodal displacement vector in Eq. (3.20), giving the following:
c ue  X

(3.31)

where X is a matrix containing the polynomial terms of each displacement function after BCs are applied. The vector of the unknown coefficients c can be determined in terms of the nodal coordinates ue as:
 1u cX e

(3.32)

By substituting Eq. (3.32) into (3.29), the displacement field can then be written in terms of the nodal displacement coordinates as:
 1u  N u u  x   XX e d e

(3.33)

where Nd is the element shape function matrix, which contains the individual shape functions for each mode of elastic deformation for each set of elastic coordinates in ue. The obtained shape functions for each beam deformation mode are given in Appendix B.

3.3.3 Local Connectivity of Module Element Coordinates
For a given number of discretized structural elements in the ith module, nele, the total number of connected nodes is nele+1, and the total number of structural DOFs in the module is ndof = 6(nele+1), disregarding any BCs at the end nodes. The nodal coordinates for the Jth element in its own reference frame for Eq. (3.20) can be denoted as:
(J ) ue ,i 



u1( J ) 

T

u2( J ) 

T T e ,i



(3.34)

where the subscripts 1 and 2 denote the pth node numbers, and {up(J)}e,i is a 6×1 vector containing the three translational and three rotational displacements for the Jth element at the pth node. Let

ue,i denote the vector containing the total elastic displacement coordinates after the ith module is
discretized into nele attached elements using its body-fixed coordinate system as a reference:

ue,i  u1T



T u2  uT  u(Tnele 1) p



T

e ,i

(3.35)

57

Then, the vector of containing all individual (unattached) element coordinates (each of which are also parallel to the ith module's body-fixed reference coordinates) is defined as:
 e ,i  u



ue(1) ,i 

T

ue(2) ,i 

T



ue(,Ji ) 

T





( nele ) ue ,i



T T

(3.36)

In general, if a nodal coordinate is misaligned with the module's local coordinate frame, it must be rotated with respect to the body-fixed coordinate system of the module. Afterwards, the following linear transformation can be used to connect the coordinates of the unattached individual elements:
 u  e ,i  B u C e ,i

(3.37)

where B C,e,i is a Boolean matrix for connectivity. For example, suppose the ith module is discretized into three elements each containing two nodes, and the connected assembly containing four nodes. Then Eq. (3.37) takes the following form:

 u1(1)  I 0 0  (1)    u2  0 I 0 (2)  0 I 0 u2    (2)    u3  0 0 I (3) u  0 0 I  3   (3)   u4  e , i  0 0 0

0  u 0  1 u  0  2   0   u3  0  u4  e , i  I

(3.38)

where the I terms denote 6×6 identity matrices. The relation between the individual Jth element's nodal coordinates and the total assembly coordinates for the ith module is given by:
(J )  (J ) ue ,i  B C ue ,i

(3.39)

Using the above 3-element example in Eq. (3.38), the nodal coordinates of the first and third elements can be expressed using Eq. (3.39) as:

 u1    u1(1)   I 0 0 0  u2    (1)     , u2 e ,i 0 I 0 0   u3   u4  e ,i

 u1    (3) u3  0 0 I 0  u2    (3)     u4 e ,i 0 0 0 I   u3  u4    e ,i

(3.40)

58

3.3.4 Module Element Structural Stiffness
To determine the structural stiffness matrices for the modules, the minimum total potential energy formulation is used. The total potential energy for a single element in the ith module is given by:

 e  U e  We

(3.41)

where Ue is the element's internal strain energy, and We is the work done by external forces. These can be expressed as:
Ue 
1 2

 
e

T

dVe ,

We   u j ,e f j ,e
j 1

ndof

(3.42)

where  is the element's strain tensor,  is the element's stress tensor, and the index j represents the jth structural DOF in the element. The work done by external forces involves the payload force and the self-weights of the modules and motors due to gravity. Other possible external forces such as traction are not of any concern in this dissertation. For a conservative system, /uj = 0, which is the minimum total potential energy to satisfy compatibility and equilibrium, leading to the static force-displacement equations for an individual element. For the axial, bending (transverse and rotational) and torsional modes of deformation, the potential energy of the spatial element can be expressed as:

U e  U e, axial  U e,bend , z  U e,bend , y  U e,torsion

(3.43)

where the potential energy due to bending in the Xe-Ye and Xe-Ze planes (Ue,bend,z and Ue,bend,y) includes the additional shear strain contributions. Each term in Eq. (3.43) can be represented as [156, 157]:

U e ,axial 

1 e 1 T  u  AE   dx  ue , axial K e , axial ue , axial  20 2  x 

L

2

(3.44)

2 2 L   2v  1 e  v   U e ,bend , z    EI z  2   k y GA     dx  2 0  x    x   1 T  ue ,bend , z  K e ,bend , z + K e , rot , z  ue ,bend , z 2

(3.45)

59

2 2 L  2w  1 e  w   U e ,bend , y    EI y  2   k z GA      dx  2 0 x  x      1 T  ue ,bend , y  K e ,bend , y + K e , rot , y  ue ,bend , y 2

(3.46)

U e ,torsion 

1 e 1 T    GJ   dx  ue,torsion K e,torsion ue,torsion  20 2  x 

L

2

(3.47)

where the Ke terms are the individual element stiffness matrices for each deformation mode and the ue terms contain the corresponding elastic nodal displacements. Substituting the first and second derivatives of the shape functions from Section 3.3.2 (with their explicit terms found in Appendix B) into the above equations, the stiffness matrices for each deformation mode can be determined as:
T K e, axial   Bu AEBu dx 0 Le

(3.48)

T K e,bend , z   B v EI z B v dx 0 T K e, rot , z   B k y GAB dx 0 Le

Le

(3.49)

K e,bend , y   B T w EI y B w dx
0 T K e,rot , y   B k z GAB dx 0 Le

Le

(3.50)

T K e,torsion   B GJB dx 0

Le

(3.51)

where the respective Bd matrices (d = u, v, w, , , ) contain the first or second partial derivatives (with respect to the x coordinate) of the respective shape functions in Appendix B for each deformation mode:

60

 Nu  B v  x  N v  B  x  N v   N B w  x  N v  B  x  N w  + N B  x  N 
Bu 
 x
2 2 2 2

(3.52)

If the Bd matrices are resized to have 1×12 dimensions with the terms for each partial derivative of the shape functions placed in the columns which correspond to the deformation modes of interest at particular nodes, and the remaining terms zero, the resulting stiffness matrix in the local coordinate frame for a single element becomes: K e  K e,axial  K e,bend , z + K e,rot , z  K e ,bend , y + K e,rot , y  K torsion (3.53)

The 12×12 stiffness matrix for a single element in Eq. (3.53) is shown in its explicit form in Appendix B. This type of element coincides with the spatial "Beam4" and "Beam188" elements found in the ANSYS® FE software, and produces nearly identical results.

3.3.5 Module Element Structural Mass
For a single element, representing a finite portion of either a joint module's casing, or a link module, the equations of motion considering the elastic structural deformations can be derived using Lagrange's equation (neglecting dissipation energy from damping):
d  Te  Te  U e  We    Qe    e  ue ue dt  u

(3.54)

where T is the kinetic energy of the element, ue contains the displacements in Eq. (3.20) (although it can be replaced with any set of generalized coordinates), and Qe is a vector of nonconservative generalized forces applied at the respective coordinates in ue. To determine the structural mass matrices for the modules, the kinetic energy of a single element can be written as:

Te  Te ,axial  Te,bend , z  Te ,bend , y  Te ,torsion

(3.55)

where the kinetic energy due to bending in the Xe-Ye and Xe-Ze planes (Te,bend,z and Te,bend,y) includes rotary inertia effects. Each of the terms in Eq. (3.43) can be written as:

61

Te, axial
L

1 e 1 T  e,axial M e,axial u  e,axial  2 dx  u    Au 20 2

L

(3.56)

Te,bend , z

1 e 1 T  2  dx  u  e ,bend , z  M e,bend , z + M e,rot , z  u  e,bend , z  2   I z     Av 20 2 1 e T 2 dx  1 u e   2   I y  Aw ,bend , y  M e ,bend , y + M e , rot , y  ue ,bend , y  20 2
L

(3.57)

Te ,bend , y 





(3.58)

Te ,torsion 

1 e 1 T  e ,torsion M e,torsion u  e,torsion  J 2 dx  u  20 2

L

(3.59)

where the Me terms are the individual element mass matrices for each respective deformation mode in Eqs. (3.56) to (3.59). Substituting the shape functions from Section 3.3.2 (with the explicit forms found in Appendix B) into Eqs. (3.56) to (3.59), the consistent mass matrices for each deformation mode can be determined as:
T M e, axial   N u  AN u dx 0 Le

(3.60)

M e ,bend , z   N T v  AN v dx
0

Le

M e ,rot , z   N  I z N dx
T 0

Le

(3.61)

M e,bend , y   N T w  AN w dx
0

Le

M e, rot , y   N  I y N dx
T 0 T M e,torsion   N  JN dx 0 Le

Le

(3.62)

(3.63)

Afterwards, expanding the individual shape functions to become 1×12 vectors for each deformation mode at particular nodes of interest, the resulting 12×12 mass matrix for the element becomes:

62

M e  M e, axial  M e,bend , z + M e ,rot , z  M e,bend , y + M e,rot , y  M torsion The explicit form of Eq. (3.64) is given in Appendix B.

(3.64)

3.3.6 Joint Motor Stiffness
To account for the additional flexibility found in the motor and gear system of each joint module, a virtual spring model is employed. Essentially, the virtual spring model is a general simplification of a complex system which has been employed by numerous researchers to convey the elasticity of the motor components [31, 40, 41, 47, 50, 54, and 56], and completely avoids the requirement to model each internal motor component separately. In this dissertation, a simple massless virtual spring stiffness model is used, and is attached to the local coordinate frame of the adjacent joint or link. Such a model, unlike the one in [50] is not dependent on the joint angular position. This allows the same joint stiffness model to be used for different joint angles. Thus, the pose dependency for the stiffness of the joint and link modules arise from their relative orientations from one another when connected in a chain. It is assumed that the motor stiffness terms do not experience any coupling with respect to the different deformation modes. It is further assumed that the elastic motor deformations are small enough that the motor stiffness behaves linearly, and is thereby free of friction, impacts and clearance issues. The motor spring element consists of six structural DOFs (three translations and three rotations) at each node to coincide with the six structural DOFs found at each node of the beam element used for the modules. For the revolute joint modules with the motor axis of rotation coinciding with the local Xe-axis of the body-fixed frame attached to the module casing, the motor stiffness terms (with the exception of the rotational stiffness about the local y-axis) are shown in Fig. 3-7.

Figure 3-7: Motor virtual spring stiffness (a) Side View, (b) Front view

63

By minimizing the total potential energy, the system of equations for a motor's virtual spring can be determined. The total potential energy of a motor's virtual spring (at a stationary angle) is given as a similar form to Eq. (3.41), and the internal strain energy for the ith joint module's motor spring with two nodes can be expressed as:
U e ,motor ,i  1 2 2 2 k x  u2  u1   k y  v2  v1   k z  w2  w1  e , motor ,i 2 1 2 2 2  k  2  1   k 2  1   k  2  1  e , motor ,i 2 1 T  ue , motor ,i K e , motor ,i ue , motor ,i 2









(3.65)

where umotor,i contains the six structural deformations at each node in the local coordinate frame as shown in Eq. (3.20), and Kmotor,i is the motor's virtual spring stiffness in the local frame. The size of Kmotor,i is 12×12, and is shown in its explicit form in Appendix B. One end of the virtual motor spring element is connected to the distal node of the joint module beam element at the output shaft, and the other end is connected to the successive link module beam element as shown in Fig. 3-5. Also, the coordinate frame of the motor spring element is assumed to always be aligned with the body-fixed coordinate frame of the joint module casing. For typical revolute joints, ky = kz if there is a bearing or bushing securing the output shaft with minimal or zero clearance, leading to radial stiffness terms. That is, if an arbitrary force with a constant magnitude is applied in any radial direction perpendicular to the axis of rotation, the magnitude of the corresponding elastic deformations do not change radially. Additionally, k usually represents the stiffness of the motor's brake, or the elastic torsional deformation of the motor shaft. The axial motor stiffness term, kx, represents the axial stiffness of the motor shaft, or gear assembly, in tension or compression, and the remaining rotational stiffness terms, k and k, are usually treated as rigid DOFs. To obtain a semi-rigid virtual spring joint model, the stiffness terms for the required "rigid" DOFs can be set to high values (relative to the flexible DOFs), for example, on the order of 1015 N/m (or 1015 N-m/rad for the rotational stiffness terms). However, this procedure may lead to ill-conditioning of the stiffness matrix if the adjoining components exhibit relatively low stiffness values. On the other hand, a semi-rigid transformation matrix can be applied to the stiffness terms of the virtual spring element when it is connected to the joint casing element using multi-freedom constraints (MFCs). For the ith joint module, the stiffness of 64

the joint casing, combined with its motor stiffness, can be determined using the following semirigid transformation to constrain the rigid virtual spring DOF in the module's local frame:
 T K casing K joint ,e,i = B r , e ,i   0

0   B r , e ,i K motor   e ,i

(3.66)

where Kcasing is the joint casing structural stiffness, Kmotor is the joint motor stiffness, and B r,e,i is a Boolean transformation matrix in the local frame of the joint casing, which can be derived using methods in [158]. The size of B r,e,i is (ndof,casing+ndof,motor)×(ndof,e,i), with ndof,e,i representing the number of structural DOF when the joint casing is connected to the virtual spring, and the rigid virtual spring DOF are removed. A transformation for the joint module's mass matrix, Mjoint,e,i, is computed in a similar fashion to Eq. (3.66). Also, the nodal displacement and force vectors to connect the joint casing to the virtual spring can be determined using:  ucasing   u joint ,e,i  B  r , e ,i   umotor e,i  f casing   f joint ,e,i  B  r , e ,i   f motor e ,i (3.67)

(3.68)

As an example, suppose the motor's virtual spring contains only three flexible DOF in its local frame, umotor,e,i = {vmotor, wmotor, motor}Te,i. Then, the vector containing the unattached motor casing and virtual spring connection DOFs, say at nodes p and p+1 is given by: u1,c        u p,casing    T     u  v w    p ,c p ,c p ,c p ,c p ,c p ,c   umotor e ,i   T  v p , m wp , m  p ,m v p 1,m wp 1,m  p 1,m   e , i 

(3.69)

where the subscripts `c' and `m' in Eq. (3.69) denote the casing and motor, respectively. Applying Eq. (3.67) leads to the following vector for the joint DOF with attached DOF at node p and unattached spring DOF at node p+1:
T u joint ,e,i  u1,  up c

vp

wp  p  p  p

v p 1

wp 1  p 1

T joint , e ,i

(3.70)

where the following constraints are employed: 65

u p , joint  u p ,c , v p , joint  v p ,c  v p , m , wp , joint  wp ,c  wp ,m ,

 p , joint   p ,c   p , m ,  p , joint   p ,c ,  p , joint   p ,c ,
v p 1, joint  v p 1,m , wp 1, joint  wp 1, m ,  p 1, joint   p 1,m

(3.71)

From the above set of constraints, node p+1 contains only three DOFs, whereas the next connecting link module contains six DOFs at the same node. Therefore, a similar procedure should be used to define the connectivity between the joint module with the virtual spring and the next adjacent link module. In this case, the flexible DOF of the virtual spring are connected to the corresponding flexible DOF of the link, while the remaining DOF of the link are directly connected to the previously unattached DOF of the joint casing. This procedure retains proper connectivity, since a lack thereof for any particular DOF may result in insufficient restraints for an element. Because the link modules are in different orientations than the joint modules at both the initial connectivity stage and after motion occurs, the transformations as well as constraints in Eqs. (3.66) to (3.68) must be conducted in the global frame instead of the local frame when connecting links to virtual springs. Details for connecting the modules in the global frame are given in Section 3.3.9.

If the motor stiffness is low and there are considerable elastic deformations present, the local displacements at the node representing the motor shaft's output should be constrained to nonzero prescribed values, usually representing the maximum allowable joint clearance (or gap) between the motor shaft and joint casing. Upon solving for the MRR's kineto-elasto-static displacements, a simple check of the local displacements at the node coinciding with the motor output can determine if the maximum allowable displacements are violated. If the constraints are violated for a particular motor spring DOF, then non-homogeneous single-freedom constraints (SFCs) [152] can be applied by substituting the values of the allowable elastic displacements into the local displacement vector for the virtual spring nodes, removing the corresponding rows of the local virtual spring stiffness matrix, then transferring all of the known terms to the right hand side (in terms of equivalent forces). The system of kineto-elastic equations can then be solved in a reduced form with the prescribed allowable displacements to solve for the unknown displacements and reaction forces along the MRR chain.

66

3.3.7 Rigid Offset Components and Non-Structural Masses
With the exception of the end-effector in Fig. 3-5, all module local stiffness matrices, Ke,i are represented using either Timoshenko beam elements or virtual springs. Since the end-effector offset length is significantly shorter than the link lengths, the end-effector can be modeled as a rigid body. In order to achieve rigid-body behavior, a slave-master transformation is applied in order to employ MFCs. Referring to Fig. 3-5, assuming the body-fixed local coordinate frame of the end-effector is initially aligned with that of the nth link module when all joint variables are zero, denoting the length of the wrist as Lw, the local body vector of the wrist, relative to the coordinate frame of the nth link module (last module in the chain) is written as:
' bnw  R nw  Lw

0 0

T

(3.72)

where Rnw is a rotation matrix defining the relative orientation of the wrist with respect to the local coordinate frame of the nth link. Let "s" denote the elastic node at the tip of the nth link module or "slave node", and "m" denote the node at the tip of the wrist or "master node". The rotational elastic DOFs at nodes "s" and "m" are equivalent, that is, s,e = m,e, s,e = m,e and s,e = m,e (or s,e = m,e in vector form for the local frame attached to the nth link). The goal here is to offset the elastic (slave) DOF behavior to the rigid (master) DOF. Assuming infinitesimal elastic translational displacements and rotations, the relations between the slave and master nodal DOF are determined from:
' d s,e  d m,e  bnw  m,e

(3.73)

where ds,e and dm,e are the local translational DOF vectors for the slave and master nodes, respectively. The above equation represents the kinematic constraints between the slave and master DOFs, and can be written in terms of a rigid-body transformation matrix: us,e  Tsm,e um,e (3.74)

where the respective 6×1 slave and master displacement vectors are us,e = {ds,eT s,eT}T and um,e = {dm,eT m,eT}T. The force-displacement relationship for the slave DOF can be expressed as: f s,e  K s,e us,e (3.75)

67

In order to preserve equilibrium across the rigid link, the total work due to the external forces must be zero:
T T us, e f s, e  um, e f m, e  0

(3.76)

Substituting Eq. (3.74) into (3.76) yields the following relationship between the slave and master nodal force vectors:
T f m,e  Tsm, e f s, e

(3.77)

Furthermore, substituting Eqs. (3.74) and (3.77) into (3.75), gives the following:
T f m,e  Tsm, sm, e um,e e K s, e T

(3.78)

from which the equivalent 6×6 nodal stiffness matrix associated with the master coordinates (in terms of the slave coordinates) is given by:
T K m,e  Tsm, sm, e e K s, e T

(3.79)

The modified stiffness in Eq. (3.79), forces in Eq. (3.77) and deformations in Eq. (3.74) can account for the behavior of a rigid link coupled to an elastic node. These transformations occur with respect to the local frame of the elastic (slave) node and should be computed in the local frames prior to MRR system assembly. Note that the number of slave DOF is equal to the number of master DOF after the transformations are performed. Overall, the same transformations in Eqs. (3.73) to (3.77), and (3.79) can be applied for any type of rigid link in any orientation with respect to a body-fixed frame attached to the adjoining component. To determine the equivalent mass matrix due to the rigid wrist's motion caused by the velocities of the attached link's elastic deformations, it is assumed that the total mass of the wrist is concentrated at its CG location and is represented by a point mass. Therefore to compute the rigid-body mass, Lw = LCG (distance from the base of the wrist to the CG) in Eq. (3.72). The kinetic energy of a rigid wrist connected to a flexible node, with respect to a body-fixed coordinate frame attached to the nth flexible link can be determined using:
 T  1 T  Te  1 2 mw d w d w  2 w I p , nww

(3.80)

68

 is the wrist's angular velocity vector (due to the angular where mw is the wrist's mass,  w    ), Ip,nw represents the rigid velocity of the rotational elastic deformations of the nth node,  w n

wrist's mass moment of inertia tensor, which is first calculated by determining the inertia tensor of the wrist in its own coordinate frame Ip,w, then performing a transformation to the body-fixed
 is the wrist's coordinate system of the nth link (Ip,nw = RnwIp,wRnwT). In Eq. (3.80), d w

translational velocity vector due to the velocities of the elastic deformations at the tip of the nth link, and can be computed using:
 d     b' d w n n nw

(3.81)

Substituting Eq. (3.80) and solving for the kinetic energy terms in Lagrange's equation, as found in Eq. (3.54), will lead to an equivalent mass matrix for the rigid wrist (Me,wrist). Afterwards, the modified mass matrix for the nth link module becomes:
M e, n  M link ,e,n  M wrist ,e,n

(3.82)

where Me,link is the link's structural mass matrix, as computed from Eq. (3.64). To account for other non-structural masses, such as the motor masses or tip payload, a similar procedure can be used if the CG locations are offset from an elastic node. Otherwise, if the non-structural mass locations are aligned within a structural element or at a nodal coordinate, a lumped mass matrix can be used for the motors. Thus, the mass matrix of the ith joint module becomes:
M e,i  M joint ,e,i  M motor ,e ,i

(3.83)

Also, since the virtual spring terms for the motor elements in the stiffness matrix do not carry any mass or inertia, the absence of the coinciding terms in the global mass matrix will cause it to lose its positive definite properties. Therefore, some of the resulting undamped natural frequencies may become infinite (indicating rigid-body motion), or will not consist of positive real numbers, which have no physical meaning. To overcome this problem, the mass matrix entries corresponding to the virtual spring terms are set to relatively small positive numbers, which ensures that the global mass matrix remains non-singular, yet retains accurate predictions of the system's natural frequencies.

69

3.3.8 Pose-Dependent Loads Due to Gravity
To account for the gravitational forces due to the masses of the joint motors or distributed self-weights of each module, the equivalent forces and moments must be relocated to the end nodes of each individual beam element. This is accomplished using consistent loading techniques, which can guarantee equivalent nodal force solutions with respect to the elastic displacements, since the same shape functions are used in the element stiffness matrix derivation [152]. For the self-weights due to the structural masses of each module, the work done by the discrete nodal forces should be equal to the work done by the distributed gravitational load, that is, Wnodal = Wdist, which can be expressed in the local frame of the beam element as:
T ^e u f w,e    Ag u  x dx
T e Le

(3.84)

0

where u(x) = {u(x), v(x), w(x)}T in the above equation. Since the gravitational load always acts in a single global direction (negative YG direction), as shown in Fig. 3-8, the distributed loading due to element's self-weight must first be transformed to the element's local coordinate frame in order to proceed with the computations in Eq. (3.84). To proceed, the acceleration due to gravity in the local frame of the element is computed using:  ge, x  0    T  ^ e   g e, y  = R 0i  g  g   0    ge, z 

(3.85)

where g = 9.81 m/s2, and R0i is the rotation matrix, which includes the module orientations at initial assembly and after motion for the ith module, as computed from Eq. (3.16). Afterwards, by substituting the shape functions for the axial and bending deformation modes, along with their respective local gravitational acceleration terms, the consistent nodal loads due to the module self-weights in Eq. (3.84) for each local direction can be expressed as:
f w,e , x    Ag e, x N u dx, f w,e, y    Ag e , y N v dx, f w,e, z    Ag e, z N w dx
0 0 0
Le Le Le

(3.86)

70

Figure 3-8: (a) Distributed load due to self-weight in global frame, (b) Equivalent consistent nodal loads in local frame, (c) Equivalent consistent nodal loads in global frame

Afterwards, the consistent load terms in Eq. (3.85) can be arranged for an element as:
f w,e

g  e Ae Le  x 2

gy
2

gz 2

gL 0  z 12

gyL
12

gx 2

gy
2

gz 2

0

gz L 12

g L  y  12 e

T

...(3.87) To include the gravitational force due to the joint motor components, it is assumed that the each motor weight acts as a concentrated load, either directly on a node, or at a distance "a" from the origin of the element's coordinate frame along the Xe-axis. The conservation of work can be expressed as:
T T ^e ue f motor ,e  mmotor g ua

(3.88)

71

where mmotor is the motor's mass. By substituting the shape functions and nodal displacement vectors, the consistent loads in each direction found in Eq. (3.88) can be written as:
f motor ,e, x  mmotor g e, x N u f motor ,e, y  mmotor g e, y N v f motor ,e, z  mmotor g e , z N w
xa x a x a

(3.89)

In a similar fashion to Eq. (3.87), the consistent nodal loads due to the motor can be placed in a vector fmotor,e,i for a single element. It is important to note that when the assembly of the modules occur for kineto-elastic analysis in the global frame, the consistent loads only contain force components acting parallel to the global YG-axis, and the corresponding consistent moments should be about an axis that is parallel to the global XG-ZG plane at all times. The only exception is when a module's Xe-axis is aligned with the global YG-axis, which causes the consistent moments to become zero.

3.3.9 System Equations and Assembly
After a module is discretized into one or more elements, using the method in Section 3.3.3, it is necessary to assemble the elements of all modules in order to proceed with the kineto-elastic and structural vibration analysis of the assembled MRR, which is dependent on the initial module configurations, and their individual poses after motion. To do this, the local elastic displacement and force vectors must first be transformed to the space-fixed global frame. For the

ith module, this can be accomplished by:
f e,i  TiT f G ,i

(3.90)

and
ue ,i  TiT uG ,i

(3.91)

where fG,i and uG,i are the global force and displacement vectors. To transform the local module deflection and force vectors to global coordinates, the block-diagonal coordinate transformation matrix, which is a function of the ith module's configuration, ci, and joint motion variables, qi is given by:
Ti  ci , qi   diag  R 0i 

(3.92)

72

where R0i is the rotation matrix defined in Eq. (3.16), which is dependent on both the static orientation of the ith module at assembly (due to initial configuration directions), and the change in orientation after joint motions occur. In general, there is a rotation matrix, R0i, to transform the three translational DOF, and another R0i to transform the three rotational DOF at each node. Thus, the size of Ti is dependent on the number of structural elastic DOF present in a module and is ndof × ndof. Due to the orthogonality of the rotation matrices, Ti is also orthogonal (Ti-1 = TiT). In the local frame, the module forces can also be determined using Hooke's law as follows: f e,i  K e,i ue ,i (3.93)

where Ke,i is the local stiffness matrix for the ith module. Substituting Eq. (3.91) into (3.93) gives:
f e,i  K e,i TiT uG ,i

(3.94)

which can be used to determine the local forces acting on a module if the global force vector is known. Afterwards, Eq. (3.90) is substituted into Eq. (3.94) to give the force-displacement relation in the global coordinate frame:
T f G ,i  TK i e ,i T i uG ,i

(3.95)

where the stiffness matrix in the global coordinate frame for the ith module becomes:
T K G ,i  TK i e ,i T i

(3.96)

Similarly, for the structural dynamic problem, the ith module's mass matrix in the global coordinate frame is:
T M G ,i  TM i e ,i T i

(3.97)

Afterwards, the undamped equations of motion for the ith module in the global frame become:
G ,i (t )  K G ,i uG ,i (t )  f G ,i (t ) M G ,i u

(3.98)

To obtain the global stiffness and mass matrices of the assembled MRR, KG and MG, as well as the vectors of nodal displacements and forces, uG and fG, a connectivity matrix is used in a similar fashion as connecting the individual elements in Section 3.3.3. The system FE connectivity matrix is defined according to:

73

 G  S FE uG u  f  ST f
G FE

(3.99)

G

 are vectors containing the individual unassembled elastic DOFs, uG,i (i = 1, 2,..., where G and fG

n) and forces, fG,i (i = 1, 2,..., n), for each module in the global frame, and SFE is the system's
connectivity matrix, similar to the Boolean matrix in Eq. (3.37) for an individual module. Equation (3.99) ensures rigid constraints at the required connection DOFs. The assembled system's stiffness and mass matrices in the global frame can then be obtained using:
  K G  ST MG  ST FE K G S FE , FE M G S FE

(3.100)

where K G and MG are block-diagonal matrices containing the individual unassembled KG,i and
MG,i matrices for each module. The size of uG is dependent on the total number of elements

chosen for the joint and link components (nele) and number of elastic DOFs chosen to represent the motor stiffness found in the joint modules (nele,joint). When the entire MRR is assembled, the total number of structural elastic DOFs is nele(6n)+ nele,motor(# of joints), which is equivalent to the number of rows found in uG or the force vectors on the right-hand side of Eq. (2). Referring back to Fig. 3-1, it is assumed that the MRR is fixed to a rigid base. Therefore, only the first node DOFs on the first joint module are rigidly constrained, and the FE boundary conditions are:

u1  v1  w1  1  1   1  0

(3.101)

For serial MRRs, the assembled stiffness and mass matrices are banded with terms concentrated along the diagonal if the node numbering is consecutive from the base to the tip of the last module. However, if parallel or branched configurations occur (which is not the major focus in this dissertation), the matrices may become sparse due to the node numbering.

3.4 Case Study
In order to compare the effectiveness of the FE methods developed in this chapter, kinetoelasto-static and stationary vibration analyses were conducted for an MRR with three revolute joint modules, three link modules, and a 3-DOF wrist. To validate the models presented in this chapter, the MRR's global tip deflections and undamped natural frequencies were computed at four random poses (initial configuration pose and three random poses), and the results were

74

compared to a commercial software package. The assembled MRR is shown in Figs. 3-9 and 310.

Figure 3-9: MRR poses for case study (a) Initial configuration, (b) Pose #1

For this simulation, kineto-elasto-static models using the methods in Sections 3.3, 3.4 and ANSYS® were compared, while stationary vibration models were compared using only the FE method and ANSYS®. It was assumed that all modules (links and joint structural casings) were made of Al-6061 with E = 69 GPa,  = 0.33 (G = 25.9398 GPa), and  = 2700 kg/m3. Also, the link modules were modeled as hollow Timoshenko beams with uniform square cross sections, as well as the cube-shaped portion of the joint modules (where the connection interfaces are located). The cylindrical portions of the joint modules, which contain added masses to the motors and gears, were modeled as hollow Timoshenko beams, while each motor's stiffness and gearing system were modeled using massless linear virtual springs. Furthermore, it was assumed that the end-effector was treated as a rigid body. In ANSYS®, "BEAM188" elements were used to model the links and joint casings and an "MPC184" element was used to model the rigid end-effector link. To model the virtual spring joints in ANSYS®, tandem "COMBIN14" elements were used

75

at each joint output, since this element only allows either three rotational or three translational DOF to be applied at once. Thus, at each joint, one "COMBIN14" was used to model the three translational DOFs and another to model the rotational DOFs. To include the module and motor self-weights in the ANSYS® model, the equivalent nodal consistent moments and forces were computed using the method in Section 3.3.8 and directly entered as nodal force inputs in the software. Also, for the vibration analysis, the non-structural masses were modeled using the "MASS21" lumped masses at the corresponding nodes. In all cases, the structural masses of the modules were modeled using consistent mass matrices for Timoshenko beams.

Figure 3-10: MRR poses for case study (a) Pose #2, (b) Pose #3

The module geometric properties, including the initial configuration axes for the modules are shown in Table 3-2. After the modules were assembled for the initial configuration, the MRR was moved to the three different poses (labeled Pose #1, Pose #2 and Pose #3 in Figs. 3-9 and 310) for the kineto-elasto-static and vibration analyses. For simplicity, it was assumed that the wrist module remained locked in a position such that it always remains aligned with the last link module, and because the wrist length is short relative to the other modules, it was modeled as a rigid-body. The local joint input angles and position vectors for each pose tested are given in Table 3-3.

76

Table 3-2: Module geometric properties for case study MRR Module Joint 1 Link 1 Joint 2 Link 2 Joint 3 Link 3 Wrist Module Axis Directions for Initial Configuration z x -z x y x x Length, Li [m] 0.25 0.60 0.1875 0.45 0.1875 0.45 0.05 Inner Radius, ri [m] 0.045 0.035 0.035 Inner Cross Section Base Length, bi [m] 0.09 0.07 0.07 Wall Thickness (Outwards), ti [m] 0.005 0.005 0.004 0.004 0.004 0.004 -

For the joint motor parameters, the lateral and torsional joint virtual stiffness terms for the base joint's motor were assumed to be ky = kz = 2.5×109 N/m and k = 3×1011 N·m/rad. For the second and third joint modules, the motor stiffness terms were assumed to be ky = kz = 2×109 N/m and k = 2×1011 N·m/rad. All other joint stiffness values were set to 1013 N/m (or N·m/rad). The motor mass for the base joint was 2 kg, while the remaining motor masses were 1.5 kg, and the end-effector mass was 1 kg. It was assumed that the CG locations for the non-structural motor masses were located at the mid-lengths of the modules (including the wrist) aligned with the length (Xe) axes. At the free-end of the wrist, an externally applied payload force of 70 N (7.1356 kg) was applied along the negative YG direction at the tip of the end-effector. Furthermore, for the kineto-elasto-static tests, each module was discretized using a single element, while for the vibration tests, each separate module was discretized into 10 evenly spaced Timoshenko beam finite elements. The results of the elastic displacements at the tip (freeend) of the MRR, along with the first eight undamped natural frequencies for each test pose for the ANSYS® models, are given in Tables 3-4 and 3-5. The computational models from Sections 3.3 and 3.4 were programmed in MATLAB® 7. When the computational models were compared to the ANSYS® model, and when 15-digit accuracy is set in the options for the output file, the results between the ANSYS® model and the FE model vary by a maximum error (relative to the ANSYS model®) on the order of 10-6%. This error might be due to the solver used in ANSYS® (sparse direct solver), although, the use of other iterative solvers, such as the preconditioned conjugate gradient solver, yielded slightly higher errors on the order of 10-5%. In any case, the computational kineto-elasto-static model still exhibits low relative differences when compared to the software.

77

Table 3-3: Joint motion inputs and module position vectors for case study Test Case MRR Module Joint 1 Link 1 Joint 2 Link 2 Joint 3 Link 3 Wrist Joint 1 Link 1 Joint 2 Link 2 Joint 3 Link 3 Wrist Joint 1 Link 1 Joint 2 Link 2 Joint 3 Link 3 Wrist Joint 1 Link 1 Joint 2 Link 2 Joint 3 Link 3 Wrist Joint Input Angle [deg] 0 0 0 -25 -40 40 50 85 -45 90 -85 -65 Module Tip Position Vector, pi (i = 2 to 8) py,i [m] pz,i [m] px,i [m] 0 0.9000 0.2500 0.6000 0.9000 0.2500 0.6000 0.9000 0.0625 1.0500 0.9000 0.0625 1.0500 1.0875 0.0625 1.5000 1.0875 0.0625 1.5500 1.0875 0.0625 0 0.9000 0.2500 0.5438 0.6464 0.2500 0.5438 0.6464 0.0625 0.9785 0.7629 0.0625 0.9299 0.9440 0.0625 1.2629 1.0332 -0.2268 1.2999 1.0431 -0.2589 0 0.9000 0.2500 0.3857 1.3596 0.2500 0.3857 1.3596 0.6250 0.7543 1.1015 0.0625 0.8618 1.2551 0.0625 1.1225 1.0726 0.3807 1.1515 1.0523 0.4161 0 0.9000 0.2500 0 1.5000 0.2500 0 1.5000 0.0625 -0.4483 1.5392 0.0625 -0.4646 1.3524 0.0625 -0.6541 1.3690 0.4703 -0.6751 1.3709 0.5157

Initial Configuration

Pose #1

Pose #2

Pose #3

Table 3-4: Kineto-elasto-static tip displacement results for case study Global Elastic Tip Displacements at End-Effector Test Case Initial Config. Pose #1 Pose #2 Pose #3 Model
ANSYS® FE error % ANSYS® FE error % ANSYS® FE error % ANSYS® FE error %

Flexible Tip Position Vector, pflex,tip  10-3 [rad]
-1.9650 5.34×10-6 -1.5934 2.12×10-6 -1.5321 3.91×10-6 1.1044 6.56×10-6

u [mm]
0.3359 4.67×10-6 0.3867 9.38×10-7 -0.1436 4.89×10-6 -0.0367 4.61×10-6

v [mm]
-2.0512 8.42×10-7 -1.6633 2.76×10-6 -1.3737 6.24×10-6 -0.9120 8.45×10-7

w [mm]
-0.0341 3.78×10-6 -0.2501 3.45×10-6 -0.0407 8.13×10-7 -0.0420 3.09×10-6

 10-3 [rad]
-0.1816 4.54×10-6 -0.8170 1.23×10-6 0.5166 7.34×10-6 0.7298 1.08×10-6

 10-3 [rad]
0 6.12×10-6 0.0233 6.34×10-6 -0.0369 5.90×10-6 -0.0089 4.77×10-6

px,tip [mm]
1.5534 1.3003 1.1514 0.6751

py,tip [mm]
1.0854 1.0414 1.0506 1.3700

pz,tip [mm]
0.0625 -0.2592 0.4161 0.5157

In terms of computation times, the average time to compute the tip displacements for ten computations using the FE model is 0.2452 s. If the remaining global and local displacements 78

and local force vectors were to be computed for the entire MRR, the average computation times for the FE model increased to 0.2498 s. The results of the first eight undamped natural frequencies for the FE and ANSYS® models are shown in Table 3-5. The results are nearly the same, with a maximum difference on the order of 10-3 Hz for the 7th mode for Pose #2. Again, this is likely due to the solver used in ANSYS®. All modes before the 6th mode have relative errors below 10-5%. Overall, the analytical models presented in this chapter are reasonably accurate when compared to commercial software.
Table 3-5: Stationary undamped natural frequency results for test cases Test Case Initial Config. Pose #1 Pose #2 Pose #3 Model
ANSYS®

1
11.7377 3.74×10-6 12.5277 1.38×10-6 14.2569 1.58×10-6 16.5048 3.03×10-6

Undamped Natural Frequencies, n,i [Hz], (i = 1,2,...,8 = Mode #) 2 3 4 5 6 7
12.5497 3.46×10-6 13.3462 2.74×10-6 14.3129 2.18×10-6 17.4337 3.27×10-6 71.6454 3.59×10-6 45.8858 4.37×10-6 39.6156 4.48×10-6 33.7521 2.19×10-6 80.5580 1.58×10-6 67.8382 6.09×10-6 109.1697 4.89×10-6 56.0165 3.85×10-6 117.9026 5.20×10-6 132.3110 7.09×10-6 141.6993 3.33×10-6 94.5081 4.28×10-6 184.6929 8.89×10-6 168.2681 6.46×10-6 277.0571 3.61×10-5 129.7650 5.96×10-6 223.1502 4.48×10-5 228.3097 4.37×10-5 334.8830 5.97×10-5 276.4221 3.62×10-5

8
291.2925 3.43×10-5 274.8912 3.64×10-5 403.8113 5.43×10-5 342.2687 2.92×10-5

FE error %
ANSYS® ANSYS® ANSYS®

FE error % FE error % FE error %

3.6 Summary
This chapter presented a kineto-elastic computational method which combines the rigid-body reconfigurable kinematics with module structural elasticity for an MRR. By using the recursive kinematic method in Section 3.2, the requirement to reset the local kinematic coordinate frames is avoided. Also, the modeling methods are valid for low-speed quasi-static motions, with the goal of determining the global tip deformations, local forces and undamped natural frequencies when the MRR is subjected to module self-weights, motor weights, and external forces due to a payload at the end-effector. These kineto-elastic parameters can be solved in any possible MRR pose. Furthermore, the inclusion of rigid component modeling and joint motor stiffness adds to the versatility of the kineto-elastic models. The modeling methods in this chapter can be adapted to MRRs that have small or large joint offsets as well as hinged modules. It is shown in the results from Section 3.4 that the FE model is accurate when compared to commercial software. Moreover, the pose-dependency on the global tip deformations and the natural frequencies are evident in the case study. This will be further examined in the next chapter to determine the worst-case kineto-elastic MRR configurations and poses. Overall, the FE methods developed in this chapter are utilized in the remaining chapters of this dissertation.

79

4. Hybrid Search Method for the Worst-Case Quasi-Static Stiffness Performance
This chapter presents a new and effective hybrid search methodology for the quasi-static stiffness performance evaluation of serial MRR configurations. For a given set of MRR modules and a specified payload requirement, the goal is to determine the maximum static torques, maximum tip deflections and minimum fundamental natural frequency that exist for each feasible MRR configuration. By doing so, the configurations and their respective poses with the worst-case stiffness performance characteristics can be identified. Afterwards, these worst-case configurations can be avoided during MRR assembly, thereby ensuring configurations with better kineto-elastic performance. The problem at hand presents considerable numerical difficulties, mainly due to the large number of possible module configurations and the infinite number of poses within each configuration's workspace. Since multiple structural and kinematic parameters exist for an MRR, an analytical solution is rather difficult to obtain. Therefore, to alleviate these difficulties, the proposed hybrid search method combines an elimination search algorithm to reduce the total number of configurations to a smaller subset of feasible configurations (configuration-space search), with a genetic algorithm (GA) [159], or nondominated sorting genetic algorithm (NSGA-II) [160], to directly search for the worst-case stiffness poses for each kineto-elastic requirement (workspace search). It is demonstrated that the worst-case stiffness search method in this chapter is superior in computational time and numerical accuracy, compared to previous incremental or grid-based workspace search methods, which require searching through a pre-determined number of poses. Through case studies, the new hybrid search method is proven to be computationally efficient and able to obtain accurate results for the worst-case stiffness poses.

4.1 Problem Description
The type of serial MRR under study in this chapter is described in Section 3.1, with joint modules containing long offset distances relative to adjacent link axes. The problem under study is the determination of the MRR configuration and pose that yields the most detrimental quasistatic stiffness performance with respect to tip deflections, fundamental natural frequencies and

80

base joint static torques (where the highest moments occur). Along with the assumptions for the kineto-elastic model in Chapter 3, the order of module assembly (from the module located at the base of the robot to the tip module) is assumed to remain constant due to the fact that the modules located near the base should be larger in size (and hence stiffer) than the modules located near the robot's tip. To avoid further over-complicating the hybrid search method in this chapter, the quasi-static motion assumption must hold. The forthcoming analysis would be impossibly complex if flexible-body dynamic performance is included. The number of required workspace searches will increase drastically since solutions for all possible combinations of joint angular velocity directions are required, along with additional computational burdens in solving large systems of differential algebraic equations. The main challenge in the kineto-elastic analysis in this chapter is how to account for the number of different robot configurations and infinite number of poses. For an MRR with n modules and six possible configurations for each module, the total number of possible configurations is 6n, which increases exponentially with an increase in the number of modules; thus the problem becomes computationally complex when searching for the worst-case kinetoelastic poses for each configuration. For example, an MRR with two joint and two link modules has 1296 possible configurations, whereas an MRR with three joint and three link modules has 46656 possible configurations. Because not every configuration is feasible with respect to the MRR kinematics, module assembly and configuration symmetry, an enumeration scheme should be employed to reduce the number of configurations to a smaller set of feasible configurations. Therefore, an automated enumeration process is required to identify a small subset of feasible configurations in order to avoid searching through the individual workspaces from each of the 6n configurations for the worst-case stiffness configurations and poses. After all configurations are enumerated for a given number of modules, the configuration-space can be represented as: c =  c1 , c2 , , ci ,, cN 
T

(4.1)

where N is the number of enumerated feasible configurations for the study.

81

When an MRR is assembled in a particular configuration, c, and moved to an arbitrary stationary pose with joint motion variables, q = [q1, q2, ..., qi, ..., qn]T, the kineto-elastic tip deflections with respect to the global reference frame are as follows:
1 uG (c, q) = K G  f p,G  f w,G  fmotor ,G 

(4.2)

where uG is the global deflection vector, KG is the assembled global stiffness matrix, fp,G, fw,G and fmotor,G, are the global force/moment vectors representing the payload force acting at the tip of the end-effector, the forces due to the module structural self-weights, and the joint motor weights, respectively. In Eq. (4.2), uG contains all of the elastic deflections associated with the nodal DOF for the entire MRR due to the internal forces (fw,G and fmotor,G) and the externally applied payload force (fp,G). If the global deflection vector is determined from Eq. (4.2), the local wrench forces/moments can be solved at the end-tips of the ith module using:
f e,i (c, q)  k e ,i TiT uG ,i

(4.3)

where fe,i is a vector containing the local forces and moments, ke,i is the local module stiffness matrix, Ti is a transformation matrix to transform the local element stiffness, deflection and force vectors to global coordinates, and uG,i is a vector containing the global nodal deflections for the

ith module. In order to avoid the resonance phenomenon while the MRR is moved to another
pose, it is desirable to determine the lowest system natural frequency. An undamped freevibration finite element model for a stationary configuration and pose can be derived (for example, using Lagrange's equation) as:
2  K G  n   0  MG  M p,G  M motor ,G  

(4.4)

where n is a natural frequency found by solving the eigenvalues ( = n2) of Eq. (4.4),  is the mode shape eigenvector corresponding to n, MG is the assembled global mass matrix which accounts for the structural masses of the joints and links, Mp,G is a matrix representing the payload mass in global coordinates and Mmotor,G is a matrix containing all of the non-structural masses of the internal joint components, such as motors and gears. Observing Eqs. (4.2) to (4.4), with the exception of fp,G, ke,i, and Mp,G, the remaining terms are not only dependent on the payload, but also on the initial configurations of the MRR

82

modules, and their poses after movement from those initial positions. The problem for the stiffness performance determination can be stated as: given a payload mass attached to the tip of the end-effector, mp (in Mp,G), and equivalent payload force acting in the direction of gravity, P = -mpg (in fp,G), determine the configurations, cfi, and their respective vectors of joint variables, qfi, with i = 1 to 4, in order to optimize the following kineto-elastic objective functions:

 arg max  f  c arg max  f  c arg min  f  c
c f 1 ,q f 1 c f 2 ,q f 2 2 c f 3 ,q f 3 3 c f 4 ,q f 4 4

arg max f1  c f 1 , q f 1   max  u tip 
f2


(4.5)

, q f 2   max  tip 
e ,1

f 3,qf 3

f4

,qf 4

   max  m     min   
n1

where utip is the magnitude of the three robot translational tip deflections along the global XG-, YG- and ZG-directions, or

u

v wtip . Similarly, tip is the magnitude of the robot angular tip
T T

deflections about the global XG-, YG- and ZG-axes, and can be written as    tip ; and me,1 is the static torque magnitude about the local Xe-, Ye- and Ze-axes obtained at the tip of the first joint module (where the first link is connected) and can be denoted as

m

x

my

mz  . In
T 1

Eq. (4.5), n1 is the undamped fundamental natural frequency for free vibration found in the assembled MRR. At the worst-case stiffness performance configurations and poses found in Eq. (4.5), the loads acting on the individual modules are the highest for all configurations, thus causing the highest MRR deflections and torques, and lowest natural frequencies. It is expected that planar motion MRR configurations will have the same worst-case pose at full stretch for each of the objectives in Eq. (4.5), but not the spatial configurations due to the possible change in dominant deformation modes, which are also affected by additional joint motor compliance. For example, the dominant deformation mode for a module may change from joint torsion to joint bending with different MRR poses. The search for the kineto-elastic objective functions in Eq. (4.5) are subject to the following constraints:
c fi  c

qLB  q fi  qUB

(4.6)

83

where qLB and qUB represent vectors of the lower and upper bounds of joint motion limits, respectively. The jth row in qLB and qUB defines the motion limits for the jth joint module.

4.2 Numerical Complexity
In this chapter, the problem to determine the worst-case stiffness configurations and poses can encounter significant numerical difficulties. First, a large number of computations are required to solve Eq. (4.5) for multiple MRR configurations. The multiple objective functions indicate that multiple structural analyses must be performed to optimize the quantities given in Eq. (4.5), three static and one vibration. In the stiffness analysis of traditional non-reconfigurable robots, the workspace of only one configuration is considered, which exhibits a complex problem already. Also, the worst case stiffness pose usually occurs at maximum arm elongation for non-reconfigurable serial robots with simple geometries. On the other hand, MRR joint module reconfigurations can produce different workspace ranges of motion, all of which must be considered when determining the worst-case stiffness performance. Likewise, within each configuration's workspace there are an infinite number of poses which must be taken into account to find the worst-case stiffness pose. Also, due to the multiple objectives in Eq. (4.5), there may exist symmetric module configurations, or multiple poses within a configuration which give the same worst-case stiffness results. Furthermore, with additional MRR modules, the number of possible configurations can become exceedingly large, and the systems of equations in (4.2) to (4.4) can increase drastically in size. A closed-form analytical solution to determine the worst-case stiffness can be difficult, if not possible, to obtain. Since the deflection and torque objective functions in Eq. (4.5) are only required at one location on the assembled MRR, along with the lowest natural frequency, it becomes necessary to solve for the remaining global static deflections, torques and natural frequencies throughout the entire MRR structure. The given objective functions are dependent on the remaining deflections, frequencies and unknown joint variables, which are greater in number than the system of equations in Eqs. (4.2) to (4.4). Therefore, with multiple MRR modules, the worst-case stiffness determination is a redundant problem. Previous researchers employed incremental [39, 55, 59, 63] or grid-based search methods [51, 52, 64-66] to solve this problem.

84

However, to achieve a high degree of numerical accuracy, the methods in the aforementioned references might require computations at billions of possible poses for a single configuration. For a single configuration, the time complexity for the incremental-based search problem assuming the numerical complexity of Eqs. (4.2) to (4.4) remains constant is O((ninc)
njoint

), with

ninc representing the number of angular joint increments and njoint representing the number of
joint modules. For example, using an incremental search method to achieve 0.1° worst-case pose accuracy for a 3-DOF serial manipulator with 180° joint ranges of motion will require 5.9297×109 calculations. Instead, by computing the worst-case stiffness poses using a direct search method, the large number of required computations can be drastically reduced. The time complexity using a direct search method for a single configuration would be O((y(popt)
njoint

) with

y(popt) representing a function of the search optimization method's adjustable tuning and
convergence parameters. In both cases, an exponential increase in computation time is expected with an increasing number of joint modules. However, a fixed number of MRR poses is avoided using a direct search method. For a given number of joint modules and prescribed accuracy requirement for the worst-case poses, a search method needs to be developed such that the number of required computations in y(popt) is less than that of ninc. In general, direct search methods avoid possibilities for stiffness mapping over the workspace, but can provide a more direct solution to solving the MRR operational limits for the objective functions in Eq. (4.5) given a payload requirement. Therefore, for a specified payload, the identified worst-case deflections, torques and fundamental resonance frequencies will not be exceeded in any configuration's workspace.

4.3 Hybrid Search Method for Worst-Case Stiffness Performance
To reduce the computational burdens associated with the problem in this chapter, yet obtain accurate solutions, a new hybrid search method is developed which combines an elimination search algorithm to reduce the configuration-space to a smaller subset of feasible configurations, and a search method to directly search the workspaces of each feasible configuration. The hybrid search method is shown in Fig. 4.1. To apply this method for a given number of modules, each module's local geometry, stiffness and mass properties are initially defined by the user since they

85

are constant throughout all configurations and poses. Also, the joint motion limits are predefined based on each actuator's physical range of motion. For the first stage of the method, an elimination search algorithm is developed to automatically generate the total number of configurations (for example, 6n configurations for six configuration directions per module), scan the set of all possible MRR configurations and reduce the size of the configuration-space to a small subset of feasible configurations for MRR kineto-elastic analysis. Once the set of feasible configurations is determined, the next stage involves determining the worst-case stiffness poses for each stored feasible configuration. Because of the inherent nonlinearity in this problem, a direct search method is proposed which exploits the direct search capabilities of a GA or NSGA-II. The idea is to automatically "morph" the configurations into their respective poses with the worst-case stiffness conditions which satisfy the objective functions in Eq. (4.5). The GA/NSGA-II is performed sequentially to solve Eqs. (4.2) to (4.4) using MRR forward kinematics found in Section 3.2, thereby including all possible MRR pose as potential candidates for the worst-case poses in Eq. (4.5). Due to the stochastic nature of GA/NSGA-II operations, a stability check is then performed by running the search method for fully converged solutions a number of times, and checking the standard deviation of the converged joint variable solutions. In the following section, details of each stage in the hybrid search method are given.

86

Figure 4-1: Hybrid search method for worst-case stiffness configurations and poses

4.4 Implementation Considerations
4.4.1 Elimination Search for Feasible Configuration Enumeration
In general, the total number of configurations can be expressed as 6n. However not all of the configurations are feasible. Thus, the first issue in the hybrid search method is a search of the configuration-space to enumerate feasible configurations with respect to the required kinetoelastic analysis for the objective functions in Eq. (4.5). Previous researchers such as Chen and Burdick [161] developed enumeration procedures based on geometric symmetry properties of 87

MRR configurations. However, the currently existing enumeration procedures in the literature were not developed to consider eliminating configurations which may give identical worst-case kineto-elastic performance values at one or more poses. Therefore, an automated enumeration algorithm using an elimination search was developed and is shown in Fig. 4-2. First, a full-factorial table containing all possible configurations is generated based on the number of available modules. The row dimension of the full-factorial table is equivalent to the total number of possible joint configurations found in the assembled MRR (6n) and the column dimension is equal to the number of modules (n). Next, each configuration (or row) in the fullfactorial table is scanned to determine if any of the MRR configurations are infeasible with respect to following requirements:
o The first joint cannot have any axis configurations that are in negative directions. This

measure will greatly reduce the symmetric configurations about the base of the robot, and will prevent the base joint from clashing with the ground link/fixture.
o The assembled MRR configuration must not be restricted to planar motions if a spatial

motion wrist is attached. At least one joint rotation axis must be perpendicular to all remaining joint axes. The reason why planar configurations are not considered for the analysis is due to a larger workspace volume requirement with the added end-effector.
o Link modules cannot have their length axes aligned with adjacent joint module rotation

axes. If a joint is initially configured to align in the ±YG- or ±ZG-directions, it is automatically assumed that the corresponding link should be aligned with the global XGaxis. Also, if a joint is initially configured to align in the ±XG-direction, the corresponding link should be aligned with the global ZG-axis. This will ensure that link modules will always remain perpendicular to adjacent joint modules and will also prevent module clashing during initial assembly.
o Initial module configurations that are symmetric about the x-z, x-y, or y-z planes cannot

exist. Symmetric MRR poses not only give the same kinematic results, but also produce the same tip deformations, base joint torques and natural frequencies. Although this measure will eliminate symmetric configurations at initial module assembly, it does not guarantee that two or more poses for different configurations will not be symmetric (at the worst-case poses for Eq. (4.5)) after motion occurs.

88

Figure 4-2: Elimination search algorithm for configuration enumeration

If any of the above requirements are violated, the corresponding configurations are removed from the table. Using the above four rules reduces the likelihood that two or more configurations will yield the same kinematic and kineto-elastic analysis results (utip, tip, me,1 and n1). The remaining configurations will form the feasible configuration-space, c. Using this method does not take a considerable amount of computational time: ~2×10-2 s for 2-DOF to ~12 s for 6-DOF. However, since the full-factorial table containing all possible configurations can get quite large with an increasing number of modules, it is recommended that the enumeration stage occurs separately before the workspace search stage for better computer memory allocation. Overall, the presented automated enumeration scheme is relevant in the fact that it can effectively reduce the 89

large configuration-space to a small subset of configurations by eliminating all infeasible cases, thereby requiring fewer configuration workspace searches.

4.4.2 Workspace Search for using GA/NSGA-II for Worst-Case Kineto-Elastic Performance
The proposed method to determine the worst-case kineto-elastic configurations and poses which satisfy the objective functions in Eq. (4.5) utilizes a customized GA or NSGA-II and is shown in Fig. 4-3 with the shaded flowchart symbols representing NSGA-II operations. First, the user inputs an arbitrary payload and each module's local FEM matrices are computed and stored. The workspace searches begin by selecting a feasible configuration ci from c and generating an initial population, which contains the initial guesses from a random number generator for the optimal joint variables, qfi, bounded by qLB and qUB. By using this approach, every possible joint angle in the motion ranges is a candidate for the worst-case scenario, and the proposed method is not limited to searching a fixed number of poses. For both the GA and NSGA-II, real-valued parameter coding is used throughout, except for the genetic operations in Fig. 4-3(a). Therefore, the initial population of optimal joint variable candidates, denoted as [q] in Fig. 4-3(a), is a realvalued matrix with the rows representing the number of joints, and the columns representing each individual (or chromosome) in the population. The objective functions (termed fitness functions for the GA or NSGA-II) in Eq. (4.5) are evaluated for each individual using the FEM pseudo-code in Fig. 4-3(b). That is, for each estimate of joint variable vectors in the population, the transformation matrix in Eq. (3.92) is computed for each module, then applied to Eqs. (3.96) and (3.97) to transform the local elements to the global coordinate frame, and assembled into the global force vectors, stiffness and mass matrices using the connectivity matrices in Eqs (3.99) and (3.100). Equations (4.2) to (4.4) are then used to evaluate the fitness functions fi(cfi, qfi) in Eq. (4.5) for each individual and they are ranked in order from best to worst. For a single set of joint variable predictions, the main difference between the GA and NSGA-II is that the GA is only able to solve one of the objectives in Eq. (4.5) at a time, while the NSGA-II can be utilized to compute all objectives in Eq. (4.5) simultaneously. Therefore, the entire GA procedure in Fig.4-3(a) must be performed separately for each of the fitness functions in Eq. (4.5) for each feasible configuration.

90

Figure 4-3: (a) Flowchart of GA/NSGA-II workspace search method, (b) Pseudo-code for FEM solver

For the NSGA-II, the solutions with non-dominant ranks are usually sorted using a crowding distance algorithm found in [160], which utilizes a cuboid to enclose a particular point on the Pareto frontier. The size of the cuboid is formed by the adjacent points on the Pareto frontier, from which the crowding distances from the cuboid's vertices to the enclosed point can be computed. Afterwards, the genetic operations in Fig. 4.3(a) are computed by converting the realvalued joint variables to binary bit strings. The selection stage uses the roulette wheel method [159] where the individuals with the higher fitness values have a higher percentage chance of being randomly selected for the next stage. Then the crossover stage occurs, where a percentage of selected individuals are chosen with a specified crossover probability and random sites on each of the bit-strings are swapped. Mutation is then performed on the bit strings, where a randomly selected position on a bit string is switched, thus changing the fitness of the chromosome. For a pre-specified number of GA/NSGA-II iterations (or generations), completely new designs are introduced into the current population in order to increase the diversity of 91

solutions in a process called migration [159]. After the genetic operations in Fig. 4-3(a) are completed, the binary strings are converted back to real-valued parameters and the bounded joint variable constraints in Eq. (4.6) are checked. If a newly formed individual violates the bounded constraints, it is discarded and the genetic operations are performed once again to generate a new individual. The final phase of the workspace search involves combining the newly formed population (children) obtained from the genetic operations with the previous population (parents). For both the GA and NSGA-II, elitism is used to ensure that the best ranked individuals in both child and parent populations are included in the newly combined population. After each generation, the termination criteria include a tolerance on the cumulative change for each of the best-fit solutions for Eq. (4.5), divided by the number of current stall generations (the number of generations where there is minimal improvement in the best overall fitness function). The averaged cumulative change of the best-fit solutions can be represented as:
f i , s 

1 s  abs  fi,best  fi, j , s j 1

i  1, 2,3, 4

(4.7)

where s is the current stall generation number, fi,best is the current overall best-fit solution for Eq. (4.5), fi,j is the next best (or better) fitness found in the jth stall generation. If a new stall generation becomes available, then the averaged cumulative change in the best-fit solutions can be updated using: fi , s 1 

fi , s 1  sfi , s s 1

,

i  1, 2,3, 4

(4.8)

Eq. (4.8) avoids recomputing the summation of differences in Eq. (4.7). For the current stall generation, the convergence condition for each fitness function is then satisfied when fi,s+1  fi, with fi denoting the user-defined tolerance for each fitness function in Eq. (4.5). Further stopping criteria for the GA or NSGA-II include pre-defined limits on the maximum number of generations and stall generations, and a pre-defined time limit for stalled generations (if there is no improvement in the best fitness value). Once the GA or NSGA-II solutions converge, the best solutions for Eq. (4.5) are stored. For the NSGA-II, the Pareto-optimal frontier can be plotted with the dominant and non-dominant solutions found in the current population. However, only

92

the extreme points on the Pareto frontier are necessary for the work in this chapter since only the worst-case solutions in Eq. (4.5) are required.

4.4.3 Workspace Search Simplifications and Convergence Issues
It is important to include the fact that for any given configuration, multiple MRR poses may exist which satisfy the fitness functions in Eq. (4.5). This is especially true for configurations with the first joint axis aligned with the global YG-axis. In such cases, joint motion for the first joint is assumed to be locked. Furthermore, when searching the various configuration workspaces to solve Eq. (4.4) for the natural frequencies, the first joint for every configuration always remains locked since the natural frequencies are dependent on the shape the MRR structure can form, rather than its pose with respect to the global coordinates. Like most direct search methods, the solutions obtained from the GA (or NSGA-II) are suboptimal. In particular, the final converged solutions produced by the GA for Eq. (4.5) are stochastic in nature since the initial population generation, crossover, and mutation operations are defined by random number generators which typically use uniform probability distributions. To alleviate the solution variations for the optimal joint variables obtained from the GA/NSGAII, a cumulative moving average method is employed. To check GA solution stability, the workspace searches are conducted by repeatedly running the GA and solving each of the fitness functions and their respective joint variables until the cumulative mean values for each optimal joint variable converges to a single value within a specified tolerance, or for a pre-specified number of converged GA runs. For the current converged GA run, k, the mean value for each predicted optimal joint angle is given by:

qi ,k 

q
r 1

k

i ,r

k

, i = 1, 2, ... , n joint

(4.9)

where qi,r is the predicted optimal joint angle for the ith joint module in the rth GA run. Similarly, the standard deviation for each optimal joint angle for the current GA run is:
2 2  1 k si ,k 1   qi ,r  qi ,r   , i = 1, 2, ... , n joint    k  1 r 1  1

(4.10)

93

The workspace searches continue until Eqs. (4.9) and (4.10) become stable within a given tolerance with respect to the previous converged GA run. With an increasing number of converged GA runs, the values of the cumulative moving averages and standard deviations will eventually approach a constant value. Therefore, Eqs. (4.9) and (4.10) can be used to dictate the number of necessary converged GA runs, k, to check the solution stability of the joint variables. Afterwards, the best fit solutions for each scenario in Eq. (4.5) can be selected from each set of converged GA runs. In order to provide more rapid convergence for multiple converged GA runs, the upper and lower search limits for the joint variables, qLB and qUB, can be reset to lie within a smaller specified range of the near-optimal joint angles obtained from the first few GA runs. This measure will further reduce the chances of each successive GA run converging to symmetric sets of joint angles, thus guaranteeing convergence to a single pose and reducing simulation time when performing the stability check. However, for each run of the GA, if the stall time limit or maximum number of stall generations is reached before the solution converges to an acceptable optimal solution, the results of the current GA run are discarded and a new GA run is restarted.

4.5 Numerical Case Studies
Two case studies were performed on an MRR with three reconfigurable revolute joints and an end-effector, as depicted in Fig. 3-9 in Section 3.5, with the same geometric and material properties, as well as joint stiffnesses and motor masses. Moreover, it was assumed that each joint module has an angular range of motion from -90° to +90°. For the initial kineto-elastic workspace searches, the MRR was loaded with a stationary payload force of 70 N (7.1356 kg) acting in the negative global YG-direction. The GA and NSGA-II parameters used for the simulations are listed in Table 4-1. These parameters were determined based on initial tests of the workspace search, where the simulation was run several times for a randomly selected configuration until the adjusted parameters gave desirable results. Details on tuning the GA parameters are found in [159], albeit through trial and error methods. All computations were performed using a desktop PC with a 3.4 GHz processor and 16 GB of memory. First, a verification study for the workspace search is performed using a planar configuration with known joint variable solutions, with the worst-case kineto-elastic poses occurring at maximum stretch. The GA and NSGA-II are compared with the incremental-based search methods from 94

[55], [59] and [63] for solution times and accuracy. Afterwards, the hybrid search method is applied to determine all feasible spatial configurations, then searching these configurations with the goal of determining the worst-case kineto-elastic performance configurations and poses for the MRR.
Table 4-1: GA and NSGA-II parameters
Parameter Initial population size Crossover fraction Crossover function Fitness scaling function Max. number of generations Migration fraction Migration interval Selection function Max. number of stall generations Stall time limit Tolerance for fitness Pareto fraction (NSGA-II only) Value 30 0.85 Two point method [159] Rank method [159] 500 0.1 10 Roulette wheel method [159] 15 80 s 10-13 0.1

4.5.1 Planar Configuration for Workspace Search Verification
To verify the solutions obtained for the workspace searches, a planar configuration in Fig. 44 is used, with all joints having "+z" axis initial configurations. The optimal worst-case solutions are known to occur at the initial configuration pose (equivalent to maximum stretch) with all joint variables set to 0° for each requirement in Eq. (4.5). The fitness functions in Eq. (4.5) are solved sequentially using the GA, and are solved simultaneously using the NSGA-II.

Figure 4-4: Planar verification configuration

95

For comparison purposes, the incremental search method in [55], [59] and [63] is used by searching the joint ranges of motion in angular increments of 1° (5,929,741 poses), 3° (226,981 poses) and 5° (50,653 poses). This was accomplished using three nested "for" loops (one for each joint) and searching the joint parameters one-by-one in a hierarchical fashion. Coincidentally, this method gives the most optimal solution for this verification example since all optimal joint variables, q = [0°, 0°, 0°] lay exactly upon a set of points within the given angular increment ranges. However, this is not the case if angular increments were chosen such that the optimal solution lied between them. To observe the stability of the fitness solutions, the best fitness and mean fitness values for a single converged GA run are shown in Fig. 4-5(a), and the results for the maximum translational deflection in Eq. (4.5) obtained from running the GA and NSGA-II for 30 consecutive converged solutions are shown in Fig. 4-5(b).

Figure 4-5: Maximum translational deflection results for planar configuration (a) Single GA run, (b) Multiple GA/NSGA-II runs

96

The random variations in the fitness functions for all 30 converged runs have standard deviations of 4.7671×10-13 m for the GA solutions and 5.0537×10-13 m for the NSGA-II solutions. It is shown that the deflections obtained using the joint variables from the running averages in Eq. (4.9) converge closer to the optimal solution with increasing GA or NSGA-II runs, therefore proving that the solution for the maximum translational deflection is reliable, and stochastic variations in the fitness functions are small. Furthermore, it is shown in Fig. 4-5 that the GA and NSGA-II methods can provide accuracy for the optimal translational deflections within six decimal places. Therefore, if a larger degree of accuracy is not necessary, a single GA or NSGA-II converged run should prove to be sufficient in order to spare a great deal of computational time. Alternatively, a common method to refine the GA or NSGA-II results is to include a local search after each converged run in a post-processing phase. In this research, the MATLAB® function fminunc (a gradient-based method) was applied after the 30 GA runs in an effort to improve the accuracy of the results. It was found however, that by using the GA parameters in Table 1, the post-processing method did not show a significant improvement in the accuracy of the results and had additional computational times due to the added local searches. For the solutions of the optimal worst-case joint angles, there exists a larger degree of variability from the standard deviations for each converged solution as shown in Fig. 4-6. However, the overall standard deviations begin to stabilize with increasing GA/NSGA-II runs and the variations of the mean joint angles from Eq. (4.9) converge to the predominant optimal value of 0° for each joint. For 30 converged runs, the highest overall standard deviation for the GA solution is 1.7344×10-3 degrees for the second joint, and for the NSGA-II solution it is 1.6763×10-3 degrees for the first joint. Thus, the cumulative moving average method in Eqs. (4.9) and (4.10) is useful in identifying converged solution variations. On the other hand, it is obvious that the method does not guarantee the best solution possible. Therefore, it is more desirable to select the best overall fitness solution amongst a number of converged GA/NSGA-II runs. The optimal joint variable solutions for 30 converged GA and NSGA-II runs are shown in Fig. 4-7. In this simulation, the best deflection fitness is found from the 15th GA run, and the joint variables are qf1 = [-2.0692×10-4, 3.2689×10-4, 2.9592×10-5] degrees.

97

Figure 4-6: Standard deviations for 30 translational deflection optimal joint variables

Figure 4-7: Planar configuration optimal joint variables for maximum translational deflections

98

The computational times for each method are listed in Table 2 for 2- to 6-DOF cases when solving for all four of the fitness functions in Eq. (4.5). As the number of modules increases, the complexity in solving Eqs. (4.2) to (4.4) increases drastically. As shown in Table 4-2, with increasing DOF, the computational time using the incremental search method increases exponentially, which is complicated beyond acceptable when there are more than three reconfigurable DOF. On the other hand, the GA/NSGA-II computational times increase more linearly, and are acceptable within reasonable limits for all DOF solutions. Though the computational time for the GA is faster than that of the NSGA-II, the difference is less noticeable with increasing DOF. The non-dominated sorting of the optimal fitness functions using the crowding distance operations from [160] may be the main contributing factor to increased NSGA-II times.
Table 4-2: Computation times for solving the four parameters in Eq. (4.5) for a single configuration Time for Incremental Search [s] Time for GA Search [s] Time for NSGA-II Search [s] (Angular increments) (# of Converged Runs) (# of Converged Runs) 1° 3° 5° 1 10 30 1 10 30 2 289.48 33.72 12.91 11.36 1.12×102 3.60×102 22.19 2.09×102 6.41×102 3 7.08×104 2.67×103 5.93×102 28.44 2.99×102 8.33×102 43.32 4.42×102 1.26×103 * 7 * 5 4 2 3 4 1.57×10 2.09×10 2.76×10 44.32 4.01×10 1.42×10 69.51 6.82×102 1.99×103 * 9 * 7 * 6 2 3 2 5 4.65×10 2.01×10 1.59×10 91.64 8.82×10 2.69×10 1.08×10 1.23×103 3.10×103 * 12 * 9 * 7 2 6 1.03×10 1.55×10 1.82×10 1.37×10 1.30×103 4.11×103 1.63×102 1.72×103 4.87×103 * Denotes expected computational times based on average computational time for a single pose computation #DOF

4.5.2 Worst-Case Kineto-Elastic Performance for Spatial Configurations
To determine the worst-case kineto-elastic performance configurations for each of the fitness functions in Eq. (4.5), the hybrid search method in Fig. 4-2 was applied. The configuration-space search stage yielded 14 enumerated feasible joint configurations for spatial motion, as shown in Table 4-3. This effectively reduced the computational effort instead of performing separate workspace searches for 6n = 46656 possible combinations of link and joint module configurations. For the workspace searches, the sequentially run GA (instead of the NGSA-II) was used to search for the kineto-elastic objectives in Eq. (4.5) for 30 converged runs. The best converged run for each of the objectives was chosen for the final results. These results were then compared to those obtained when each MRR configuration's pose is at full stretch in the XG-ZG plane (in a direction perpendicular to the payload force). This can be computed by determining the joint input angles which maximize the magnitude of the x- and z-components of the position

99

vector at the MRR's tip in Eq. (3.17), or max(pn+1,xz), where pn+1,xz contains only the x- and zcomponents of pn+1.
Table 4-3: Enumerated MRR spatial configurations Configuration # Joint 1 axis Link 1 axis Joint 2 axis Link 2 axis Joint 3 axis Link 3 axis 1 x z x z y x 2 x z y x y x 3 z x y x y x 4 z x -z x y x 5 x z -y x y x 6 z x -y x y x 7 y x -z x y x 8 x z y x z x 9 y x y x z x 10 z x y x z x 11 y x z x z x 12 y x -y x z x 13 z x -y x z x 14 y x -z x z x

First, the configuration-space and workspace search stages of the method in Fig. 4-2 were computed concurrently using a single processor with a total computation time of 1.18×104 s. If the computations were performed using the increment-based method in [55], [59] or [63] with 1° increments, the required computations would take ~84 times longer. To take advantage of multicore (and multi-threaded) processing capabilities, parallel processing in MATLAB® (using the "matlabpool" and "parfor" commands) was used to run the workspace searches for several configurations simultaneously. That is, the feasible configurations were first obtained separately, then the workspace searches using the sequentially run GA were conducted simultaneously with six separate processor threads (which mimic six processors). Therefore, the worst-case poses in Eq. (4.5) were solved for six configurations at a time twice, and then for the last two configurations. The use of parallel processing reduced the total computation time to 4.92×103 s. The results for the joint variables which give the worst-case poses for each of the kinetoelastic objectives are shown in Fig. 4-8, where the maximum stretch poses for each configuration are also plotted and denoted as max(|Pxz|). The joint variables for the first joint are ignored for configuration #'s 7, 9, 11, 12 and 14 since their joint axes of rotation are aligned with the global y-axis, which yields any first joint input angle in the range for the worst-case pose. For all cases in Fig. 4-8, the joint variables for each kineto-elastic objective in Eq. (4.5) do not exactly occur at maximum stretch, though configurations #11 and #14 have all variables quite close to maximum stretch. The corresponding worst-case kineto-elastic performance parameters for each configuration are shown in Fig. 4-9.

100

Figure 4-8: Joint variables for worst-case stiffness poses in Eq. (4.5)

With the first joint locked for the analyses of configurations #11 and #14 (since the first joint is aligned with the YG-axis in these configurations), the MRR is essentially confined to 2-DOF planar motion, with a dominant bending deformation mode for the base joint and links, while torsion is dominant for the remaining joints. Therefore, the tip deflections and base joint torques for these configurations are highest at their maximum stretch, as shown in Fig. 4-9. However, their natural frequency poses vary slightly from maximum stretch, and the GA search produces poses that give lower natural frequencies, as evident in Fig. 4-9. Therefore, the objectives obtained using the GA to solve Eq. (4.5) produce better results compared to the maximum stretch pose due to the existence of joint elasticity and changes in dominant deformation modes that are not easily identifiable from simple visual inspection. Furthermore, for a single configuration, the 101

worst-case poses for each requirement in Eq. (4.5) may occur at different poses due to changes in dominant deformation modes. Configuration #4 in Fig. 4-9 shows the highest changes of worstcase translational and angular deflections from the maximum stretch pose. For this configuration, the pose that gives max(tip) has a local torsional deformation (e,1) at the base joint's output shaft of -5.0507×10-4 rad, and a local rotational deformation (e,1 about the Ze-axis) of 1.7182×10-5 rad. At the same nodal location, when the MRR is moved to the maximum stretch pose, e,1 is just slightly decreased to -5.0381×10-4 rad, while e,1 is drastically reduced to 8.0588×10-8 rad. Therefore, the pose for max(tip) has a dominant deformation mode for e,1 as compared to the maximum stretch pose.

Figure 4-9: (a) Highest linear and angular deflections, (b) Highest static torques and lowest fundamental natural frequencies found in spatial MRR configurations with 70 N (7.1356 kg) payload

With further inspection of the results in Fig. 4-9, configuration #1 gives the highest worstcase kineto-elastic translational and angular tip deflections (utip = 2.1796 mm, tip = 2.0488×10-3 102

rad), as well as the lowest fundamental natural frequency (n1 = 11.5406 Hz). This configuration is shown in Fig. 4-10(a). The highest worst-case static torques (me,1 = 178.2140 N-m), are shared by three configurations (#'s 2, 3 and 11). Conversely, configuration #12 (shown in Fig. 4-10(b)) has the lowest worst-case translational tip deflections (utip = 1.8352 mm) and this configuration, along with configuration #9, has the lowest worst-case angular tip deflections (tip = 1.8398×10-3 rad). Also, configurations #5 and #6 have the lowest worst-case torques at the base joint (me,1 = 173.4429 N-m), and the highest fundamental natural frequencies (n1 = 12.2602 Hz), along with configuration #14. Therefore, it is recommended to use configurations #5, #6 or #12 to attain the best kineto-elastic performance. It is important to note that although the enumeration procedure eliminates symmetric poses during initial configuration assembly, it does not prevent two or more configurations converging to symmetric or identical worst-case kineto-elastic poses which may give identical MRR shapes during the workspace search stage, thereby giving the same worst-case kineto-elastic results. This was the case for configurations #2 and #3 (shown in Fig. 4.10(c) and (d)), as well as configurations #5 and #6.

Figure 4-10: Worst-case poses for (a) Configuration #1, (b) Configuration #12, (c) Configuration #2, and (d) Configuration #3

103

4.6 Summary
A new hybrid search method to determine the worst-case MRR configurations and poses was presented in this chapter. It was shown that the number of configurations can be drastically reduced to a small subset of feasible configurations, thereby avoiding the need to search an exponential number of configurations. When searching for the worst-case poses for each configuration, when compared to the previous incremental workspace search methods, the computational efficiency is greatly improved when using the sequentially run GA method. Also, the sequentially run GA is slightly more computationally efficient than the NSGA-II since only extreme optimal values are required, instead of multiple solutions along a Pareto-optimal frontier. It is shown that the automated enumeration procedure and payload search methods do not take much time away from the overall combinatorial search method. When observing the results of the joint variables, the worst-case stiffness poses for the majority of the configurations do not always occur at maximum stretch, demonstrating the additional complexity of MRR modules and therefore justifying the requirement for the workspace search. Though a model reduction procedure would be beneficial to decrease the solution time, these models usually contain errors relative to the full FE model. Overall, this search method is a part of a larger combinatorial search method to either determine the maximum payload capacity of MRR configurations, or for the stiffness design of the MRR modules, which is the focus of the next chapter.

104

5. Combinatorial Search Method for the Payload Capacity Analysis and Module Stiffness Design
In this chapter, new methods for the payload capacity analysis and module stiffness design of serial MRRs are presented. The problem for the module stiffness design is defined as the determination of proper module sizes according to pre-specified kineto-elastic performance requirements and a given payload. On the other hand, it is often difficult to directly implement design changes on existing MRR modules to increase stiffness performance due to component complexity, cost and time constraints. Previous researchers [80, 162] developed control methods to improve the payload capabilities of serial MRRs using spring-assisted joints to achieve static balancing. However, adjusting the maximum payload capacity for multiple joint module axis reconfigurations was not thoroughly investigated, and it is not known which configurations are the best or worst performing based on their examples. Instead of redesigning the joints to achieve improved kineto-elastic performance, the alternative approach in this chapter is to instead optimize the maximum external payload capacity for an existing set of MRR modules in order to meet multiple kineto-elastic performance requirements that are common to all configurations. The main issue with both the payload capacity and module design problems is how to satisfy the kineto-elastic performance requirements for a large number of feasible MRR configurations and poses. So far, the existing methods in the literature have been developed only for the payload analysis and structural design of traditional non-reconfigurable robots. Because an MRR has multiple configurations, a simple design process is proposed in order to avoid performing the payload capacity analysis or stiffness design stage at each configuration. In the forthcoming sections, it is shown that the payload capacity determination and module stiffness design problems are dependent on the MRR configuration and pose which gives the overall worst-case kineto-elastic performance (which is determined using the search method in Chapter 4). Therefore, the payload analysis or stiffness design only needs to be carried out at the worst-case configurations and poses which can guarantee the robot's satisfactory performance for all remaining feasible configurations. By utilizing the search methods in the previous chapter in an overall combinatorial search method, the complexity of the design problems are further reduced in three search stages (configuration-space search, workspace search and payload or stiffness 105

design search). Also, to assess the payload-carrying capabilities between configurations, the payload capacity analysis can be performed at the worst-case poses in order to identify the best performing configurations (the ones with the highest payload capacities). It also mentioned that the payload capacity and module stiffness design problems may become inconsistent systems of equations for given kineto-elastic performance requirements. If the worst-case poses are known, the payload capacity problem can be reduced to a series of monotonic functions, dependent on the number of kineto-elastic performance requirements. On the other hand, when performing the static module stiffness design stage in the local frames of each module, while the payload force requirement can be fully determined, the determination of the module deflection requirement is in fact redundant. This is because there are more module tip deflections than the assembled system's tip deflection requirement, thus leading to non-unique estimates of the optimal thicknesses for each module. To overcome this problem, a nonlinear approach in the global frame of the MRR assembly is used to search for a near-optimal solution.

5.1 Problem Description
5.1.1 Payload Capacity Problem
The maximum payload capacity problem can be stated as: given an existing set of MRR modules and multiple quasi-static kineto-elastic performance requirements for all configurations, determine the highest allowable payload mass (mp) at the tip of the end-effector that the MRR can carry for all feasible configurations. This is represented by the following objective function:
  max  m p ,i  f5  c fi , q fi       c fi  c; qLB  q fi  qUB ; i  1,...,4

(5.1)

where the subscript i represents one of the four worst-case configurations and poses which are satisfied by Eq. (4.5) in Chapter 4. Eq. (5.1) is also subject to the feasible configuration constraints and joint motion limits defined in Eq. (4.6). The maximization problem in Eq. (5.1) is subject to pre-defined kineto-elastic performance requirements, which are represented as the following set of nonlinear inequality constraints:

106

  max    c , q     max  m  c , q    m min   c , q    
tip f2 f2 e ,1 f3 f3 n1 f4 f4

max u tip  c f 1 , q f 1   u tip ,c
tip , c

(5.2)

e ,1, c

n1,c

where utip,c and tip,c are prescribed magnitudes of the linear and angular deflection performance requirements at the tip of the MRR, me,1,c is the magnitude of the static torque requirement for the first joint module, and n1,c is fundamental natural frequency requirement for the entire MRR. It is of interest to reduce robot positioning errors due to the tip deflections, thus in Eq. (5.2) they act as constraints for the payload capacity analysis. In general, the fundamental natural frequency requirement should be based on the avoidance of any known resonances, likely due to external forces produced by tools located at the end-effector or high-speed motion (though it is assumed here that low-speed quasi-static motion occurs). Furthermore, the static torque is constrained at the tip of the base joint in order to be able to hold the MRR with enough motor torque at any given feasible configuration and pose. It is assumed that the MRR joint motors are pre-selected for this problem, and the torque requirements are defined based on manufacturer torque specifications. If it is determined that the allowable torque in Eq. (5.2) is exceeded during the payload capacity determination, the torque induced by the MRR's module self-weights and payload may risk physically damaging the motors. For each of the kineto-elastic requirements in Eq. (5.2), it can be noticed that the maximum payload determination problem may become an inconsistent system of equations since the static requirements are given as magnitudes to coincide with a payload force acting in an arbitrary direction. For example, inconsistencies in the system may appear when one assumes separate values for the XG-, YG- and ZG-components for the transverse tip deflection requirements (instead of magnitudes as in Eq. (5.2)), since satisfying two or more of these requirements may become physically impossible. Thus, a closed-form solution to determine the maximum payload capacity does not exist. However, the worst-case stiffness and maximum payload determination problems are dependent on each other, as shown in Eqs. (4.2) to (4.4) in Chapter 4. That is, if the worst-case stiffness configurations and poses (cfi and qfi) are identified in Eq. (4.5), given the

107

requirements of Eq. (5.2), the lowest payload capacity occurs at these poses since they will not change with variations in stationary payload magnitudes.

5.1.2 Module Stiffness Design Problem
The module stiffness design problem can be stated as: given a payload requirement, along with multiple kineto-elastic performance requirements, design the individual module crosssections such that the given requirements are satisfied for all feasible configurations. For typical non-reconfigurable robots, the stiffness design stage only has to account for a single robot configuration, with the only topology changes being the robot's pose due to kinematic motion. Since this method focuses on stiffness design rather than kinematic design, it is assumed that the kinematic design of the MRR is performed beforehand in order to meet workspace and kinematic performance requirements. Therefore, the module lengths are assumed to be pre-determined. Furthermore, it is assumed that the material properties used for each module are known beforehand. The ideal stiffness design scenario will yield a MRR structure with minimal deflections and vibrations. However, minimizing the deflections and maximizing the fundamental natural frequency will give exceedingly high module masses. Since the types of MRRs in this study are manually configured, the modules can get quite heavy for an individual to lift. Thus, the objective function for the stiffness design stage is to minimize the mass of each module for a given payload:
n   f 6  t   min  mtotal   i Li Ai  ti   i 1  

(5.3)

where n is the total number of joint and link modules, i is the material density and Li is the length of the ith module. The cross section area of each module, Ai, is a function of the module's thickness, ti, and the shape of the cross section is dependent on the type of module (revolute joint or link). In Eq. (5.3), the vector containing each of the module thickness parameters is defined as:
t  t1 , t2 ,..., ti ,..., tn 

(5.4)

The kineto-elastic performance requirements for the stiffness design stage can also be represented by Eq. (5.2) as nonlinear inequality constraints. That is, the magnitudes for each of

108

the static requirements are used. The optimization problem in Eq. (5.3) is also subjected to the following bounded constraints:
t LB  t  tUB

(5.5)

where tLB and tUB are positive constants representing the lower and upper bound constraints on the module thicknesses. Observing the global static tip deflection solution from Eq. (4.2), along with the eigenvalue problem from Eq. (4.4) in Chapter 4, it can be noticed that the module self-masses (and equivalent forces due to the self-weights) affect the overall static and vibration performance of the MRR. Unlike the payload capacity problem, the stiffness design problem involves the necessary updating of module structural masses with each thickness design change, which also affects the system's mass matrices (and equivalent consistent loads due to module self-weights) for the MRR at every pose. Also, for the static problem, each module's tip wrench (due to the payload force at the end-effector) can be fully determined by simply projecting the payload force onto the tips of each module. However, the determination of the module tip deformations is a redundant problem, since there are more module tip deflections than the tip deflection requirement at the end-effector. Furthermore, inconsistencies in the system equations may become apparent as explained in Section 5.1.1. Therefore, a direct analytical solution for the module stiffness design problem is difficult to obtain.

5.2 Combinatorial Search Method for Payload Capacity Analysis and Module Stiffness Design
In order to avoid performing the payload capacity analysis or module structural design for every possible MRR configuration, a combinatorial search method was developed to reduce the overall complexity of the required search space in order to perform the payload capacity or stiffness design problems more efficiently. By using the configuration-space and workspace searches from Chapter 4, the problem is first simplified by reducing the size of the configurationspace to a small subset of feasible configurations, then identifying the worst-case kineto-elastic configurations and poses. Afterwards, using these configurations and poses as design points, the maximum allowable payload capacity can be identified, or the module cross-sections can be

109

designed. Therefore, instead of designing an MRR at all of its possible configurations, this combinatorial search method focuses on determining the smallest set of design point configurations that can guarantee satisfactory kineto-elastic performance throughout all remaining feasible configurations. The combinatorial search method is shown in Fig. 5-1. For the payload capacity determination problem, the initial material property and geometric inputs are based on an existing MRR design. After the feasible configurations are determined using the enumeration method from Section 4.4.1, the workspace searches for each feasible configuration are conducted using the sequential GA method from Section 4.4.2 using an arbitrary payload. Once the worst-case stiffness poses for each kineto-elastic performance objective in Eq. (4.5) are determined, the payload capacity search for the final stage reduces to separate monotonic functions for each kineto-elastic requirement. Therefore, a computationallyefficient bisection search method is introduced. The bisection searches are run sequentially according to the number of kineto-elastic requirements in Eq. (5.2). When all possible solutions are obtained for each of the configurations and their respective poses, the recommended maximum allowable payload capacity of the MRR for all feasible configurations is chosen as the lowest overall payload found in the method. For the module stiffness design problem, after module enumeration occurs, the workspace searches are conducted using the required payload mass and an initial estimate of the module thicknesses (all material properties and module lengths are assumed to be known). For each of the four kineto-elastic objective functions in Eq. (4.5), the worst-case poses for each configuration are ranked from the worst-performing (lowest rank) to best-performing (highest rank). Afterwards, the four ranks for each configuration are summed, and the configuration with the overall lowest summed rank (overall worst kineto-elastic performance configuration) is chosen to perform the stiffness design. This process avoids designing the modules at every feasible configuration. For the chosen design point configuration in Eq. (5.2), the module stiffness design process is conducted separately for each worst-case pose and the final solution is chosen as the one with the highest sum of all module thicknesses.

110

Figure 5-1: Combinatorial search method for payload capacity analysis and module stiffness design

To design the module thicknesses, a nonlinear approach involving a GA is used to design the required module thicknesses with Eq. (5.2) acting as pre-specified nonlinear constraints on the module sizing. The inherent nonlinearity in this problem arises not only from the performance requirements in Eq. (5.2), but also from the required updating of each module's mass during the design stage. Using the module thicknesses for the new MRR design obtained from satisfying Eq. (5.3) and the constraints in Eqs. (5.2) and (5.5), the current design configuration and pose is removed from the feasible configuration space and the configuration and pose search to determine the kineto-elastic performance quantities in Eq. (4.5) is performed again for the

111

remaining configurations to verify if any of the constraints in Eq. (5.2) are violated. If none of the constraints are violated, then the current design is chosen as the final design. Otherwise, the module thicknesses of the current design are stored, and the structural design is carried out at the most critical of the remaining configurations based on the configuration ranking scheme. Afterwards, the highest thicknesses for each module obtained from each of the design iterations are chosen for the final design. This process will guarantee a design with satisfactory structural performance for all of the feasible configurations for the MRR.

5.3 Implementation Considerations
5.3.1 Payload Capacity Determination
If the worst-case stiffness configurations and poses (cfi, qfi in Eq. (4.5)) are determined from the workspace search stage, the search to determine the maximum payload to satisfy the kinetoelastic performance requirements of Eq. (5.2) can occur. However, one must first determine if the requirements in (5.2) are physically possible by solving Eq. (5) with zero payload and check if the requirements of (5.2) exceed their limits due to the MRR's self weight alone. If the requirements cannot be satisfied with no external payload attached, then they must be re-adjusted to more realistic values, otherwise the method to determine the maximum payload will not converge. In general, the bisection method is typically used to find a solution for the roots of nonlinear systems of equations in the form of f(x) = 0 by searching an interval with lower and upper bound initial estimates for x [163]. Here, the bisection method is modified to use the constraint inequalities in Eq. (5.2) in order to find the highest allowable payload amongst all MRR configurations. The reason the bisection method was chosen over other search methods (such as Newton-Raphson) was due to its ability to guarantee a converged solution, however at the cost of higher computational times due to converging linearly. To implement the bisection method, the first constraint in (5.2) is rewritten as utip(cf1, qf1) - utip,c  0, and all other constraints are rewritten in the same manner. When all the terms of the constraint inequalities in Eq. (5.2) are moved to the left-hand side, they can be expressed as:
Fi  c fi , q fi , m p ,i   0, i  1 to 4

(5.6)

112

where mp,i is the payload mass attached to the tip of the end-effector. The functions Fi in Eq. (5.6) are to be evaluated using the user-defined constraints utip,c, tip,c, me,1,c, or n1,c, along with Eqs. (4.2) to (4.4) to solve for utip, tip, me,1, or n1 at the corresponding worst-case configurations and poses, cfi, and qfi. Note for the vibration requirement, the "" sign in Eq. (5.6) changes to "". To search for the maximum allowable payloads using the bisection method, upper and lower limits for the payload (mp,U,i and mp,L,i) must be chosen such that:
Fi  c fi , q fi , m p ,U ,i  Fi  c fi , q fi , m p , L ,i   0

(5.7)

which guarantees that the maximum payload lies within the interval [mp,L,i, mp,U,i]. Afterwards, the initial estimate for the maximum allowable payload can be chosen as:
m p ,max,i  m p ,U ,i  m p , L ,i

2

(5.8)

Then, substituting Eq. (5.8) into Eq. (5.6), the user-defined requirements of Eq. (5.2) can be checked. The following evaluations are then computed to determine which sub-interval the maximum allowable payload lies:
if Fi  c fi , q fi , m p ,max,i   0 then set m p ,U ,i  m p ,max,i , substitute in (5.8) else if Fi  c fi , q fi , m p ,max,i   0 and re-evaluate Fi conditions then set m p , L ,i  m p ,max,i , substitute in (5.8) else Fi  c fi , q fi , m p ,max,i   0 and re-evaluate Fi conditions

(5.9)

then m p ,max,i is the maximum payload

The algorithm in Eq. (5.9) is repeated until the solutions converge to within a preset relative error (rel), which can be written as:

 rel 

m p , u  m p ,l m p ,u  m p ,l

 100%

(5.10)

113

The computed payload capacities can then be verified by performing kineto-elastic workspace searches and determining if the values in Eq. (4.5) violate any requirements from Eq. (5.2). Alternatively, this method can be performed for all worst-case configurations and poses to determine the best configurations with higher payload capacities.

5.3.2 Nonlinear Approach for Module Stiffness Design
The proposed method to solve for the optimal module cross-section sizes is to apply a nonlinear approach, which is a forward method that does not require the solution to be obtained directly from the assembled kineto-elastic equations, thereby permitting required updates for the module self-weights concurrently with design iterations. Also, the kineto-elasto-static performance requirements in Eq. (5.2) can be defined as magnitudes, instead of separate XG-, YG-, and ZG-components (which may lead to solution inconsistencies). Because of the inherent nonlinearity of the design problem, a search method can instead be used to determine the optimal module thicknesses. This way, the bounded module thickness constraints in Eq. (5.5) can be easily adopted. In general, there are two approaches for solving nonlinear problems: gradient based and direct search methods. The former involves an inverse approach, hence it is not used here. Therefore, a GA with bounded and nonlinear constraints was developed to determine the optimal module thicknesses, as shown in Fig. 5-2.

Figure 5-2: Search method for module stiffness design using GA with nonlinear constraints

114

First, the payload requirements and the constraints in Eqs. (5.2) and (5.5) are defined. Also, the overall worst-case configuration which satisfies Eq. (4.5) is identified using the search method in Section 4.4, along with its four worst-case poses for each kineto-elastic performance parameter in Eq. (4.5). Afterwards, the initial population for the thickness design variables is generated and the global FE equations are computed for each individual. Then, the fitness function in Eq. (5.3) is computed for the entire population as well as the constraints in Eqs. (5.2) and (5.3). Using this process, the module structural masses and equivalent consistent loads can be computed for each separate individual. Next, the bounded and nonlinear constraints for each individual are computed and checked for solution feasibility. Infeasible solutions are assigned a rank of zero (in order to reject the individuals), while the feasible solutions are ranked from the worst to best in terms of fitness. The convergence criterion is then checked, which is similar to the fitness convergence criteria used in Eqs. (4.7) and (4.8), however by checking the fitness function in Eq. (5.3) instead. An additional tolerance is set for the maximum allowable constraint violations for each constraint in Eq. (5.2). The GA processes which occur afterwards (selection, crossover, mutation, migration, ranking and maximum number of generations) are identical to those used in Sections 4.4.2 and 4.4.3. For typical open-chain robot structures, the joints and links located near the base typically carry more load due to the local force increase from the tip of the robot towards the base, thus the module thicknesses should increase from the tip of the robot to the base. Because a GA is utilized, using upper and lower bound constraints on the module thicknesses may not guarantee that the thicknesses of the base joint and link modules are larger than the remaining module thicknesses. For this reason, additional sizing inequality constraints are required. This can be accomplished by enforcing ratios, by which the sizes of the link and joint modules located closest to the base can act as references to ensure proper sizing of the consecutive links and joints. The ratio for the sizes of each link relative to the first link can be defined as Rs,link,i and the sizing ratio for the sizes of each joint after the first joint as Rs,joint,i. The thickness sizing ratio constraints can then be written as:

115

tlink ,2   Rs ,link ,2                 tlink ,i    Rs ,link ,i  tlink ,1 ,           t R     link n s link n , , ,    

t joint ,2   Rs , joint ,2                 t joint ,i    Rs , joint ,i  t joint ,1           t R     joint n s joint n , , ,    

(5.11)

where tlink,i and tjoint,i are the link and joint thicknesses for the ith module, and n is the number of available link or joint modules. Using Eq. (5.11) will ensure that the GA converges to preferable link and joint module sizes. Also, if the inequality signs in Eq. (5.11) are set to equal signs, and the thickness sizing ratio between the first link and first joint is known, then the stiffness design problem can be reduced to a single thickness design variable.

5.4 Numerical Case Studies
Case studies for the payload capacity analysis and stiffness design were performed for the MRR given in the examples found Sections 3.5 and 4.5. Therefore, the MRR parameters are assumed to be known for the payload analysis, and the worst-case configurations and poses are found in the results of Section 4.5. For the module stiffness design problem, these worst-case kineto-elastic configurations and poses are used as design points to re-design the modules in order to meet kineto-elastic and payload requirements.

5.4.1 Maximum Payload Capacity Analysis
Using the four worst-case poses for each configuration found in Section 4.5, the maximum allowable payloads were determined using the bisection method in Eqs. (5.6) to (5.10). The userdefined kineto-elastic performance requirements for Eq. (5.2) were given as: max  u tip   1.5  103 m max  tip   1.5 103 rad max  m e ,1   140 N-m min n1   14 Hz These values were chosen to improve the performance of the MRR for the kineto-elastic objectives found using Eq. (4.5). For the bisection search, the maximum number of iterations was set to 1000, and the upper payload limit for Eq. (5.8) was set to 100 kg, while the lower limit 116 (5.12)

was set to 0 kg. Also, the preset relative error in Eq. (5.10) was set to 10-13. As a stand-alone computation, the bisection method takes a total time of 17.93 s to compute the maximum payload values for all configurations and worst-case poses in Table 5-1. It is shown that configuration #1 has the lowest payload capacities for the linear and angular deflection requirements, as well as the natural frequency requirement. This is evidenced in Fig. 4-9 since this configuration has the highest tip deflections and lowest natural frequency. However, the lowest payload capacity for the torque requirement is shared by configuration #'s 2, 3, and 11, since these configurations have equivalent maximum torques in Fig. 4-9. For all configurations, the kineto-elastic workspace searches were performed using a single GA run for each case in Table 5-1 to ensure that the kineto-elastic requirements in Eq. (5.12) were not violated. It was noted that the joint variables which satisfied Eq. (4.5) changed minimally using the payload capacities in Table 5-1, and that for each configuration, the worstcase kineto-elastic parameters were close to the given constraints, without violating them. In other words, using the prescribed payloads for each configuration and kineto-elastic requirement in Table 5-1 would give: max(utip) = 1.4999 mm, max(tip) = 1.4999 × 10-3 rad, max(me,1) = 139.9999 N-m, and min(n1) = 14.0000 Hz for all feasible configurations.
Table 5-1: Stationary payload capacities for kineto-elastic performance requirements Config # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Maximum Allowable Payloads for Requirements in Eq. (5.2) (for me,1,c  (for n1,c  (for tip,c  (for utip,c  1.5 0.0015 rad) 140 N-m) 14 Hz) mm) [kg] [kg] [kg] [kg] 3.8562 4.4881 4.6688 4.2366 4.2430 4.9529 4.6160 4.5352 4.2430 4.9529 4.6160 4.5352 4.0257 4.5921 4.6688 4.3598 4.7885 5.2225 4.8613 5.0277 4.7885 5.2225 4.8613 5.0277 4.7005 5.0133 4.6688 4.5670 4.2358 4.7661 4.6688 4.5698 5.1948 5.3667 4.7777 4.2366 4.2377 4.7910 4.6688 4.5670 4.3676 4.6893 4.6160 4.5352 5.2517 5.3667 4.7777 4.3598 4.2377 4.7910 4.6688 4.5670 4.9755 5.1009 4.8610 5.0277

117

From the results in Table 5-1, it is determined that the maximum allowable MRR payload capacity is 3.8562 kg from the translational deflection requirement of configuration #1. For this configuration, the worst-case joint variables for the translational deflection from Fig. 4-8 are qf1 = (6.9418×10-2, 12.4263, -73.6549) degrees, and its pose is shown in Fig. 5-3.

Figure 5-3: Configuration and pose with lowest payload capacity

If an incremental workspace search method with 5° increments was used to find the worstcase pose for max(utip), the solution would be qf1 = (0, 15, -75) degrees, which would overestimate an allowable payload to be 3.8620 kg and violate the performance requirements with maximum translational tip deflection of 1.5012 mm. Therefore, it is recommended that the MRR in this example should not have a payload over 3.8562 kg in order to avoid violating the performance requirements for any feasible configuration. On the other hand, it is recommended to select the best-case stiffness configurations for typical payload-carrying operations in order to reduce the errors resulting from tip deflections and vibrations, or hold a higher payload for given kineto-elastic constraints in Eq. (5.12). In Table 4 it is evident that configurations #12, #5, and #6 have the highest payload capacities for the specific kineto-elastic requirements. Naturally, these configurations yield the best kineto-elastic performance from the workspace search stage in Section 4.5.

5.4.2 Module Stiffness Design Using Nonlinear Method
To re-design the MRR modules in order to increase the maximum allowable payload capacity from 3.8562 kg (37.8923 N) found in Table 5-1 to 7.1356 kg (70 N), subject to the pre-

118

defined kineto-elastic performance requirements for max(utip), max(tip), and min(n1) in Eq. (5.12), the GA with bounded and nonlinear constraints from Section 5.3.3 was utilized. Note that the requirement for the base joint torque in this design scenario was increased to me,1  200 N-m, since the payload force of 70 N (combined with the module and motor weights) can induce static base joint torques which can easily violate the torque constraint in Eq. (5.12) if the module structural self-weights increase for each design iteration. To design the cross-sections of the hollow module casings, it was assumed that the inner section distances (radius, ri, for joints and inner base length, bi, for links) remain fixed, from which the thickness design variables protrude outwards. For all modules, the bounded thickness constraints in Eq. (5.5) were set to 3 mm for the lower bounds and 30 mm for the upper bounds. Also, using the first joint and link modules as size references, the sizing ratio constraints in Eq. (5.11) were all set to  0.75% for all remaining link and joint modules, thereby keeping the base joint and link modules larger. Additional test cases were performed by setting the sizing ratios equal to 0.75 (instead of using inequalities), and also by setting the thickness of the base joint module equal to the thickness of the base link module (reducing the problem to a single variable design). Instead of designing the modules at every feasible configuration and worst-case pose found in Fig. 4-8, the worst-case configuration is used, and is determined by ranking each of the four worst-case kineto-elastic performance parameters found in Eq. (4.5) for every configuration according to the results from Fig. 4-9. The absolute worst-cases are assigned a rank of "1". This ranking scheme is shown in Table 5-2. For the ranking scheme, all numerical values for the worst-case kineto-elastic parameters were rounded to 7 decimal places due to small errors in the solutions of nearly identical worst-case kineto-elastic parameters (as shown in Fig. 4-5(b)). The results in Table 5-2 indicate that configuration #1 is the overall worst-case configuration, thus it was used as the primary design point at its four respective poses. The GA shown in Fig. 5-2 was run for each of the four critical poses for configuration #1 (shown in Fig. 4-8), and multiple thickness design candidates were computed. For each kinetoelastic requirement (and their respective worst-case poses), ten converged solutions were obtained (40 solutions overall) and the solutions with the lowest fitness functions in Eq. (5.3) for each of the four kineto-elastic requirements were chosen as the design candidates. For design

119

safety, the final design candidate was then chosen as the one with the highest mass. This process was eventually repeated for each sizing ratio test case. The GA parameters used for the test cases are the same as those used in Table 4-1, with an additional tolerance of 10-13 for nonlinear constraint feasibility. Evidently, the search space was smaller when the "=" size ratio constraint was active. In all cases, the GA converged closest to the linear deflection constraint of 1.5 mm, rather than the remaining constraints. Likewise, the pose which gave max(utip) for configuration #1 had the highest converged module masses, therefore it was chosen for the final design. Table 5-3 shows the results of the module thicknesses and overall MRR mass obtained for each design case.
Table 5-2: Ranking scheme to determine overall worst-case configuration Config # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Individual Ranking for Worst-Case KinetoElastic Performance from Eq. (4.5) and Fig. 4-9 for for for for max(me,1) min(n1) max(utip) max(tip) 1 1 4 1 6 7 1 5 6 7 1 5 2 2 4 3 10 11 12 12 10 11 12 12 9 9 4 8 3 4 4 11 13 13 10 1 4 5 4 8 8 3 1 5 14 13 10 3 4 5 4 8 12 10 12 12 Sum of Ranks 7 19 19 11 45 45 30 22 37 21 17 40 21 46 Overall Worst-Case Configuration Ranking 1 4 4 2 12 12 9 8 10 6 3 11 6 14

Table 5-3: Final module thickness designs Design Case Joint 1 "" Size Ratios "=" Size Ratios
"=" Size Ratios (single t variable design)

Module Thickness, ti [mm] Link 1 5.5878 5.3815 7.8298 Joint 2 6.9758 7.4515 5.8723 Link 2 4.1088 4.0361 5.8723 Joint 3 3.6474 7.4515 5.8723 Link 3 3.0742 4.0361 5.8723 9.3144 9.9353 7.8298

Total Mass Including Motor Masses [kg] 20.0740 21.0147 23.1464

The results in Table 5-3 show that when the "" size ratio constraint is active, the entire mass of the MRR is about 1 kg lighter than the results produced when the "=" size ratio constraint is

120

used. However, it is more feasible to use the designs with the "=" size ratio constraint to increase the level of interchangeability between the second and third joint and link modules. Furthermore, when the problem is reduced to a single variable design, the total MRR mass obtained is the highest. However, in terms of computational times, the single variable design is most efficient with an average GA computational time of ~22 s, compared to the "" cases (~34 s) and "=" cases (~47 s). To validate the each of module designs, and check if another design iteration is required using the next best configuration in Table 5-2, the workspace searches from Section 4.4 were run to obtain the worst-case kineto-elastic parameters for Eq. (4.5) for the new module designs. Table 5-4 shows the most extreme kineto-elastic performance parameters and their respective configurations for each of the new designs. The results show that when the "" sizing ratio is used, the deflections and natural frequencies converge closes to the performance requirements, as compared to the other two size ratio cases. Also, for each test case, the worstcase design configurations do not differ. However, like the payload capacity analysis results, the worst-case poses change slightly. Because all performance requirements were met, when designing the modules using configuration #1, another design iteration with the next worst-case configuration was not necessary. Overall, this case study confirms the effectiveness of the proposed design approach.
Table 5-4: Worst-case kineto-elastic performance for design validation Design Case Worst-Case Kineto-Elastic Performance max(utip) [mm] max(tip) 10-3 [rad] max(me,1) [N·m] min(n1) [Hz] max(utip) [mm] max(tip) 10-3 [rad] max(me,1) [N·m] min(n1) [Hz] max(utip) [mm] max(tip) 10-3 [rad] max(me,1) [N·m] min(n1) [Hz] 1.4997 1.4426 175.5077 14.2589 1.4935 1.4307 185.1973 14.2862 1.4999 1.4623 194.5176 14.3671 Configuration(s) Where the Worst-Case Performance Occurs 1 1 2, 3, 11 1 1 1 2, 3, 11 1 1 1 2, 3, 11 1

"" Size Ratios

"=" Size Ratios

"=" Size Ratios (single variable design)

121

5.5 Summary
This chapter presented new methods for solving the inconsistent payload capacity and redundant/inconsistent stiffness design problems for serial MRRs. For a given set of kinetoelastic performance requirements, it was shown that the maximum allowable payload to satisfy the requirements of all configurations can be solved by pre-determining the worst-case configuration and pose. By doing so, the problem can be reduced to a set of monotonic functions for each kineto-elastic requirement and a complicated search method is not required. Similarly, since the module stiffness design problem focuses on performing the design stage at a single MRR configuration and pose to satisfy the kineto-elastic requirements, the design process is greatly simplified as opposed to performing the design stage at all known configurations, either one-by-one or simultaneously. The main problem with the module stiffness design problem is that it is in fact redundant. Although the stiffness design can be performed at the module level, infeasible results might be achieved. Therefore, a search method was developed using a GA with bounded and nonlinear constraints, as well as relative sizing ratios to constrain the module sizes. When using this nonlinear approach to perform the stiffness design, the results show the design method is effective since the module shapes optimized at a single configuration satisfy the structural requirements for all remaining configurations.

122

6. Component Mode Synthesis with Fixed-Free Interface Conditions for Serial Modular Robots
This chapter presents a new and effective model reduction technique using component mode synthesis (CMS) for the stationary structural dynamic analysis of serial modular robots. In the previous chapters, a full FE model (with multiple elements per module) was used to compute the undamped fundamental natural frequencies. To accurately compute the first resonance frequency, an FE model with a small number of elements will be sufficient [152]. However, to compute resonances accurately at higher modes, the system will require a large number of elements, thereby adding to the computational complexity. Therefore, a computationally efficient and accurate model reduction process will prove useful for analyzing large MRR assemblies. The focus of the CMS method in this chapter is to incorporate fixed-free (hybrid) interface conditions between the components (at their module connection interfaces), which can enable experimental vibration testing of individual joint-link modules for any angular position in a joint's motion range. Previous research in the literature were limited to non-modular robots, and used classical CMS approaches utilizing either all fixed- or all free-interface conditions. Also, the existing CMS models involved separating the components directly at the movable joints. These methods make the experimental vibration testing of robot components difficult since the influence of joint dynamic parameters (in terms of stiffness and damping) or component connection dynamics cannot be included if fixed-fixed or free-free component BCs are used. Alternatively, if fixedfree (hybrid interface) CMS models are developed for modular robots, separate modules can be tested using cantilevered BCs. This is particularly useful for testing joint modules, where the base of the joint is fixed, and the output shaft is free to rotate, thereby mimicking the natural connectivity of the base of the joint module (at the fixed portion) with a preceding link module. The hybrid interface CMS method does not require complicated experiment fixtures, especially if the connection interfaces for a given set of modules are identical. Furthermore, if sensors cannot be placed on a joint module, a link can be attached to the joint module for vibration experiments, and the effects of different poses can be tested with fixed-free BCs. This is particularly useful if the joint modules change their overall shape at different angular 123

positions, or if the joint dynamics are dependent on the joint's angular position. In the following sections, the development of the hybrid CMS method for the pose-based stationary vibration analysis of serial modular robots is presented, along with a comparison to the traditional CraigBampton method [82, 89, and 95]. Although the sizes of CMS models can be drastically smaller than full FE models, the physical coordinates at interior nodes are usually lost in the reduction process. Further complications arise when two or more connected components are being tested in different poses with force input and motion output sensors at different coordinates. Because of the advantages of using experimentally measured FRF data over mode shapes (as mentioned in Section 2.5), a method is presented to recover the FRFs regardless of the physical locations and orientations of the input and output coordinates. Finally, a numerical case study for a serial modular robot with hinged modules shows the effectiveness of the hybrid CMS model when compared to the traditional Craig-Bampton method and a full FE model.

6.1 Frequency Response Function for a Single Component
Each serial modular robot component is initially modeled using the FE method in Chapter 3 and can contain ndof structural degrees of freedom (discretized into multiple elements). Here, the term "component" refers to a part which cannot change shape when it is separated from adjacent components. If a joint module changes its overall shape during motion, then it should be modeled as multiple components. It is assumed that each component's structural dynamic model behavior is linear, and its motion is excited by a known force input. The separated component models for serial modular robot are shown in Fig. 6-1. For the ith component, the equations of motion in the time domain as formulated in the local body-fixed coordinate frame (Xe,i-Ye,i-Ze,i frame in Fig. 6-1) can be represented as:

 e ,i (t )   jD H ,e ,i + K e,i  xe,i (t )  f e,i (t ) M e,i  xe,i (t )  DV ,e,i x

(6.1)

where xe,i(t) is a dynamic nodal displacement response vector, fe,i(t) is an externally applied dynamic force vector obtained from exciting the experimental test component, and j2= -1. Note that xe,i(t) is different from the static deflection vector, ue,i (due to time invariant loads), in the sense that the total deflection is due to the superposition of dynamic and static components (xe,i(t) + ue,i). A similar superposition of the dynamic and static forces (such as module self-weights due to gravity) would yield the total force vector. Thus, the static loads are independent of the 124

dynamic loads, assuming small linear elastic deformations for stationary structural dynamic analysis [166]. Also, the internal forces (resulting from the static deflections producing internal stresses) and externally applied static loads cancel each other. Therefore, the dynamic deflections can be independently measured with respect to the static deflection positions (at static equilibrium).

Figure 6-1: Serial modular robot component models

In Eq. (6.1), it is assumed that the local mass and stiffness matrices, Me,i and Ke,i, may contain rigid length offsets, non-structural masses (such as joint motors, external payload mass or heavy sensors), or additional joint stiffness terms. If damping is low, viscous and structural proportional damping may be assumed in the form:
DV ,e,i   i M e ,i   i K e,i D H , e , i   i K e ,i

(6.2)

where i and i are the respective mass- and stiffness-proportionality constants for Rayleigh viscous damping, and i is a hysteretic damping constant for structural damping. Harmonic motion is assumed for each component as follows:
xe,i (t )  X e,i e jt  e,i (t )  j X e ,i e jt x  xe,i (t )   2 X e,i e jt f e,i (t )  Fe,i e jt (6.3)

125

where e = cos(t) + jsin(t) (Euler's formula). Substituting Eq. (6.3) into (6.1), the equations of motion in the frequency domain can be determined as:
2    M e,i  j DV ,e,i  jD H ,e,i + K e,i   X e ,i ( )  Fe,i ( )

(6.4)

In a similar fashion to the FE equations in Chapter 3, the FE equations are solved using a common global coordinate reference frame. To convert the nodal displacements and excitation forces in Eq. (6.4) from the local Xe-Ye-Ze frame to the global XG-YG-ZG frame, the following kinematic transformations are applied:

X e,i ( )  TiT X G ,i ( ) Fe,i ( )  TiT FG ,i ( )

(6.5)

where XG,i and FG,i are the displacement amplitude and force excitation global vectors, respectively. In Eq. (6.5), Ti is the same block-diagonal coordinate transformation matrix found in Eq. (3.92) and is dependent on the orientation at initial module assembly setup, and after the robot is moved to a given pose. Substituting Eq. (6.5) into (6.4) gives the component's equation of motion in the frequency domain with respect to a fixed global coordinate reference frame:
2 T Ti    M e,i  j DV ,e,i  jD H ,e,i + K e ,i   Ti X G ,i ( )  FG,i ( )

(6.6)

To determine the component's response vector due to a force input in the global frame, Eq. (6.6) can be rearranged as:
2 T X G ,i ( )  Ti    M e ,i  j DV ,e,i  jD H ,e,i + K e ,i   Ti





1

FG,i ( )

  ZG ,i ( )   FG,i ( )  H G ,i ( ) FG,i ( )

1

(6.7)

where ZG,i is the dynamic stiffness matrix and HG,i is the receptance matrix. In general, ZG,i is not suitable for experiments since the global mass, stiffness and damping terms cannot be directly measured. If an accelerometer is placed at node p and the component is excited at node q, then the corresponding receptance matrix entry is given by:
pq HG ,i ( )  p XG ,i ( )

FGq,i ( )

(6.8)

126

p q where X G ,i is the measured response at node p and FG ,i is the excitation force at node q. Taking

the first derivative of Eq. (6.8) yields the mobility (jHG,i), while the second derivative gives the accelerance (-2HG,i).

6.2 Component Structural Dynamic Model Reduction
This section describes methods to reduce the sizes of the component equations of motion using component mode sets, which is a precursor to system CMS assembly. Each module in Fig. 6-1 is modeled as a separate substructure, or superelement. The "interface" nodes which separate each component are located at each module's connection interface, and are labeled with a "c" in Fig. 6-1. Note that the internal nodes for each component are not shown in Fig. 6-1 for clarity. In general, the CMS transformation matrices (which contain the component modes and are used to reduce the sizes of the original FE matrices) can either be computed from the local or global frames of each component using either Eqs. (6.4) or (6.6), respectively. However, for mechanisms, the latter case requires the reduced CMS matrices for each component to be recomputed with each pose change. Therefore, the CMS transformation matrices for a substructure with redundant interfaces computed from the local FE equations is described here. To begin, Eq. (6.4) can be partitioned for the ith component as follows:  Z BB Z  IB   Z EB

Z BI Z II Z EI

Z BE   X B   FB   F'B         Z IE   X I    FI    0I        Z EE   e,i  X E e,i  FE e,i  F'E e

(6.9)

where the I DOF set refers to internal coordinates, the B set refers to the respective boundary coordinates (located at node "ic" in Fig 6-1), and the E set refers to the excess (redundant) boundary coordinates (located at node "i+1c" in Fig 6-1). The total number of elastic DOFs per component is equal to the number of boundary DOFs plus internal DOFs. F'B and F'E denote connection forces with adjacent structures. For simplicity, the frequency argument () for the dynamic stiffness matrix is not shown in Eq. (6.9). The ith component's local displacement vector in the frequency domain (in physical coordinates) can be written in terms of a set of reduced generalized coordinates, Pi, as:

X e,i ( )  WS ,i Pi ( )

(6.10)

127

where WS,i is the component mode transformation matrix which contains the mass-normalized component normal mode shapes (eigenvectors from free-vibration) as well as other static modes, which are dependent on the interface BCs used to compute the normal modes. If the physical coordinates at the interface boundaries are retained, then the vector of reduced generalized coordinates can be expressed as:

Pi   X B ,e

PK

X E ,e i

T

(6.11)

where PK is a reduced set of generalized modal coordinates, determined by the CMS method used. For ease of CMS assembly, the interface coordinates should remain in (or be transformed to) physical coordinates instead of modal or mixed coordinates. What sets the apart the CMS methods from one another are the types of BCs applied when computing the normal modes, as shown in Fig. 6-2.

Figure 6-2: Joint module i CMS interface conditions for (a) Craig-Bampton method, (b) Hybrid interface method

Because the well-known Craig-Bampton method [82, 89, and 95] retains the interface DOFs in physical coordinates, it is used here for comparison with the hybrid interface method. These methods are described in the following sub-sections.

6.2.1 Craig-Bampton Method for Component Model Reduction
The Craig-Bampton method utilizes a reduced set of fixed-interface normal modes to reduce the sizes of component FE models. For the ith component in Fig. 6-1, the fixed-interface normal

128

modes are obtained by setting the displacements at both interfaces (XB and XE) to zero in Eq. (6.9) and the solving following eigenvalue problem:

K

II

2  n , r M II  I , r  0 , r  1, 2,  , ndof , I e ,i

(6.12)

where ndof,I denotes the number of structural DOFs for the interior nodes (in the II partition of Eq. (6.9)), I,r is the mode shape vector corresponding with the rth natural frequency, n,r. Since proportional damping is assumed in Eq. (6.2), I,r is identical to that from an undamped model, and the corresponding natural frequency is approximately equal to the undamped natural frequency [91]. Otherwise, if general damping is used, the fixed interface modes will contain twice the number of kept modes in complex conjugate pairs (as obtained from solving the required quadratic eigenvalue problem [167]), and Eqs. (6.10) and (6.11) will need to be partitioned to include the complex-valued responses and their derivatives, which significantly increases the complexity of the problem at hand. Each mode shape vector obtained from solving Eq. (6.12) for ndof,I structural DOFs can be assembled as columns in the ndof,I × ndof,I mode shape matrix, N,i:
 N ,i   I ,1 , I ,2 ,  , I , K ,  , I , ndof ,I   i   
 K ,i

(6.13)

The mode shape matrix in Eq. (6.13) is normalized with respect to MII such that:

   

T N T N T N T N

M II  N   I II ,i K II  N    N ,i  DV , II  N   D V , II ,i D H , II  N   i  N ,i
i i i i

(6.14)

2 2 2 where III is an I×I identity matrix,  N ,i  diag n ,1 , n ,2 ,  , n , ndof ,I



 and D

V,II

is a diagonal

viscous damping matrix. The full FE component model is reduced by selecting K fixed-interface normal modes to retain, thereby forming a reduced mode shape matrix in Eq. (6.13), K,i. Typically, the chosen number of normal modes to retain for CMS is based on the number of available modes within the frequency range of interest for each component. In general, if the assembled system's frequency bandwidth is known, then each component's bandwidth of interest

129

should be larger than the system's bandwidth since the individual components give higher natural frequencies due to increased stiffness and lower mass when the BCs are applied. To enforce displacement compatibility between components, static constraint modes can be used by applying a unit displacement on an interface coordinate (while constraining the motion of the remaining coordinates of that set), and leaving all remaining coordinates force-free [95]. For the B interface coordinate set in Eq. (6.9), the constraint mode matrix, B,e,i, can be determined from:

K BB K  IB  K EB

K BI K II K EI

K BE   I BB   RBB       K IE    IB    0   e ,i   0   e ,i  K EE   REB   e ,i

(6.15)

where RBB and REB are reaction forces at the respective interface coordinates. Solving the second row of Eq. (6.15) yields:

 B , e ,i

 I BB   I BB     1    IB     K II K IB    0  0   e ,i    e ,i

(6.16)

For the excess E interface coordinate set in Eq. (6.9), a similar procedure gives the respective constraint mode matrix, E,e,i, as:

 E , e ,i

0  0       1    IE    K II K IE       I I EE  EE  e,i   e ,i

(6.17)

Observing Eqs. (6.16) and (6.17), the constraint modes are frequency-independent, and do not need to be recalculated for different frequency ranges. Afterwards, the Ritz coordinate transformation in Eq. (6.10) can be expressed as:

X e,i ( )   B ,e,i X B ,e ,i   K ,i PK ,i   E ,e ,i X E ,e,i

(6.18)

from which, the Craig-Bampton component mode transformation matrix, WCB,i, for the ith module with redundant interfaces can then be determined as:

130

WCB ,i

 I BB    IB   0

0  K ,i 0

0   IE   I EE   e ,i

(6.19)

Note that the natural component BCs in the system assembly should be accounted for. That is, node 1 in Fig. 6-1 is naturally fixed to the ground, and node n+2 on the nth module is naturally free. Therefore, for the first and last modules (each have a single interface), Eq. (6.19) is determined as follows:

 WCB ,1   K ,i  0

 IE   I BB  , W  , CB n I EE   e,1  IB

0   K ,i   e,n

(6.20)

It is important to note that this method was not initially developed with the intentions of experimental testing [82, 95], since it is difficult to measure the constraint modes. Also, for serial modular robots, if the joint modules exhibit changes in dynamic behavior with changing joint angular positions, then an adjustable fixture is required to measure the fixed-interface normal modes. Therefore, the next section describes a hybrid CMS reduction method where the component BCs are fixed-free, thereby enabling the joint to freely move to different angular positions to allow for experimental testing of the joint dynamics.

6.2.2 Component Model Reduction with Hybrid Interface Conditions
The hybrid interface CMS method assumes that the interface coordinates at the tip of a module have free BCs, while the connecting interface nodes at the base of the next successive module have fixed BCs. Therefore, the normal modes for each component are computed using fixed-free BCs, which can allow joint output motions for experimental tests. For the ith component in Fig. 6-1 with redundant interfaces, the fixed-free interface normal modes are computed by fixing the B interface coordinates (XB in Eq. (6-9)), which coincides with the node "ic" in Fig. 6-1. The E interface coordinates (XE in Eq. (6-9)), which coincides with the node "i+1c" in Fig. 6-1, have free BCs. The fixed-free ith component normal modes are obtained by solving the following eigenvalue problem:
  K II    K EI K IE  M II 2   n ,r   K EE  M EI M IE    I , r  0       0  , r  1, 2,  , ndof ,( I  E ) M EE   e ,i  E , r   

(6.21)

131

where ndof,(I+E) denotes the total number of interior and free-interface (excess boundary) coordinates. In Eq. (6.21), the rth mass-normalized normal mode shape vectors are partitioned according to the respective internal coordinates (I,r) and free-interface coordinates (E,r). In a similar fashion to Eq. (6.13), the ndof,(I+E) normal modes are assembled as column vectors in the mode shape matrix, N,i:
 I ,1 , I ,2 ,  , I , K ,  , I , ndof ,( I E )   N ,i    E ,1 , E ,2 ,  , E , K ,  , E , ndof ,( I  E )    i

(6.22)

The above equation has dimensions of ndof,(I+E) × ndof,(I+E). In Eq. (6.22), only a pre-specified number of normal modes are retained in order to reduce the size of the full FE component model. Therefore, the reduced mode shape matrix with partitioned normal modes corresponding to the internal and free-interface coordinates can be expressed as:

    I ,1 , I ,2 ,  , I , K   K ,i   IK      EK  i E ,1 , E ,2 ,  , E , K  i

(6.23)

For the fixed-interface (B coordinate set in Eq. (6.9)), constraint modes are required to restrain the component's rigid-body motion. For the hybrid method, the constraint modes (partitioned according to the interior and free-interface DOFs) are determined from the following:

K BB   K IB   K EB

K BI K II K EI

K BE   I BB   RBB      0  K IE    IB         K EE   0 EB  e ,i   e ,i   e ,i

(6.24)

The constraint modes are then obtained by solving the lower two row/column partitions of the stiffness matrix in Eq. (6.24), which yields:

 B , e ,i

  I BB      IB   K II       EB   e ,i    K EI

  1 K IE   K IB     K EE   K EB   e,i I BB

(6.25)

For the free-interface (E coordinate set in Eq. (6.9)), to complement the normal and constraint mode sets, residual flexibility attachment modes relative to the fixed-interface are employed. To improve the accuracy of free-interface (non-hybrid) methods, the use of residual 132

flexibility attachment modes were first explored by MacNeal [83]. Essentially, an attachment mode is defined as a component displacement vector obtained from applying a unit force on the free-interface DOFs and zero forces elsewhere [89]. In other words, the attachment modes are specified columns of the component's flexibility matrix, with all DOFs fixed except for the freeinterface DOFs [95]. Residual flexibility attachment modes account for the effects of the truncated normal mode set in Eq. (6.23) by removing these associated normal mode contributions that are present in the component's flexibility matrix [84]. Therefore, the contributions of the higher modes are instead used to determine the residual flexibility attachment modes. Rubin [84] showed greater improvements in accuracy using the residual flexibility attachment modes over those found from the full flexibility matrix. The flexibility matrix for the ith component with the B interface fixed is given by:
G e ,i G   II G EI G IE  K   II  G EE  e,i  K EI K IE  K EE   e ,i
1

(6.26)

Using the orthogonal properties of the mass-normalized mode shape matrices in Eq. (6.22), Eq (6.26) can be alternatively expressed as:
1 T G e , i   N ,i   N ,i  N , i

(6.27)

2 2 2 where  N ,i  diag n ,1 , n ,2 ,  , n , ndof ,( I  E ) , as obtained from the eigenvalue problem in Eq.





(6.21). Eq. (6.27) can further be decomposed using the kept and omitted modal contributions, and their corresponding eigenvalue matrices:
1 T 1 T G e ,i   K ,i   K , i  K , i   O , i  O ,i  O ,i

(6.28)

where the subscript K denotes kept modes and the subscript O denotes omitted modes. The residual flexibility matrix can then be obtained as:
  G    1  T G e ,i e ,i K ,i K ,i K ,i

(6.29)

Afterwards, the residual flexibility attachment modes can be determined by imposing a unit force on the E interface coordinates as follows:
  G IE    0   G    = G e ,i   E , e ,i  I EE  i G EE  e ,i

(6.30)

133

Using a combination of the retained normal modes from Eq. (6.23), the constraint modes from Eq. (6.25) and the attachment modes from Eq. (6.30), the Ritz coordinate transformation in Eq. (6.10) can be expressed as:
*  X e,i ( )   B ,e,i X B ,e ,i   K ,i PK ,i  G E , e ,i PE ,i

(6.31)

It is important to note that the attachment modes in Eq. (6.30) have units of m/N, unlike the constraint modes which are unitless. Therefore, the Ritz vector terms coinciding with the freeinterface are in generalized coordinates, P*E,i. Expanding Eq. (6.31) gives:

XB   I BB     X I     IB X    EB  E e , i 

0  IK  EK

0   X B ,e   *    G  PK   WH 1,i Pi IE     P*  G EE  e ,i  E i

(6.32)

To assemble the reduced module component models using CMS, it would be beneficial to convert all interface generalized coordinates to physical coordinates. Research by Majed et al. [93] and Dieker et al. [94] suggest using a non-singular flexibility matrix for free-interface attachment modes to obtain a secondary CMS transformation matrix in order to convert all interface DOFs to physical coordinates. The advantage of the hybrid CMS method for modular robots over free-interface methods is that the flexibility matrix in Eq. (6.26) can be readily inverted since it is non-singular (fully constrained at the B interface DOFs) and does not require further adjustments such as inertia-relief modes [95] for free-free component BCs. From the third row in Eq. (6.32), P*E,i can be solved as:

 1  X   X   P  PE*,i  G EE , e ,i E ,e EB B ,e EK K i
The generalized coordinate vector, P*i in Eq. (6.32) can then be expressed as:

(6.33)

 X B ,e   I BB    Pi*   PK    0   P *   G  1  E i  EE  EB

0 I KK  1  G
EE

EK

0   X B ,e    0    PK   WH 2,i Pi  1   X  G EE  e ,i  E ,e 
i

(6.34)

Substituting Eq. (6.34) into Eq. (6.32) gives the following form of Eq. (6.10) with interface DOFs in physical coordinates:

134

XB   I BB     X I     IB X    EB  E e , i 

0  IK  EK

0   I BB    G 0 IE      G  1  G EE  e ,i  EE EB

0

 1  G EE EK

I KK

0   X B ,e    0    PK   1   X  G EE  e ,i  E ,e 

(6.35)

i

Using the result in Eq. (6.35), the hybrid component mode transformation matrix for the ith module can written explicitly as:

WH ,i

I BB    G  1     IB  G IE EE EB  0 

0
 G    IK  G IE EK 0
1 EE

0   G  1   W W G IE EE  H 1,i H 2,i I EE   e ,i

(6.36)

Note that for the first module, Eq. (6.36) reduces to that for free-interfaces (since the natural BC at the base of the first module is fixed) which is identical to the method found in [84]:
 G  1    G IE EE EK WH ,1   IK 0   G  1  G IE EE  I EE  e,i

(6.37)

For the last module, since the interface node (node n in Fig. 6-1) is fixed and the last node, n+2 is free (natural BC), Eq. (6.36) reduces to that of the Craig-Bampton method:

I WH ,n   BB   IB

0   IK   e ,i

(6.38)

The main advantage in using the hybrid CMS method over the Craig-Bampton or freeinterface methods is the simplicity in performing experimental tests on the joint modules to determine the normal modes. For the hybrid CMS method, only one fixture is required to test each module (if the fixture has the same interface connectivity for all modules), whereas the Craig-Bampton method requires a separate fixture for each module connection interface. Also, using fixed-free BCs of modules allows for testing the joint substructures in different poses to experimentally evaluate the joint stiffness and/or damping, whereas fixed-fixed BCs require separate or adjustable fixtures to achieve this. Furthermore, with traditional free-interface CMS methods, the joints are usually considered to be rigid, and experimental evaluations of the joint dynamics are difficult to perform since the components (which are usually separated at the joint output shafts) need to mimic the free-free BCs experimentally by hanging them with bungee

135

cords (or cables). This may present difficulties since the dynamic effects of different joint poses may cause out of plane motions when hanging from cords.

6.3 Component Coordinate Frame Transformation
To reduce the components using either the Craig-Bampton method or the hybrid interface method, Eqs. (6.19) or (6.36) are substituted into Eq. (6.10), which is then substituted into Eq. (6.4) to yield the following reduced equations of motion for the ith component in the local coordinate frame:

WST,i Z e,i ( ) WS ,i Pi ( )  WST,i Fe,i ( )  WST,i F'e,i ( )
or Z S ,e,i ( ) Pi ( )  FS ,e,i ( )  F'S ,e,i ( )

(6.39)

where WS,i is chosen based on the selected CMS method (WCB,i in Eq. (6.19) or WH,i in Eq. (6.36)), since the interface coordinates for both methods share the same physical coordinate sets. In Eq. (6.39), F'e,i is the vector of adjacent component connection forces, ZS,e,i is a modalreduced dynamic stiffness matrix, and FS,e,i, and F'S,e,i are modal-reduced force vectors. For convenience, the component reduction in Eq. (6.39) is usually performed individually for Me,i,

Ke,i, DV,e,i, and DH,e,i, in Eq. (6.4) such that ZS,e,i can be computed more efficiently for a selected
number of frequency points. To assemble reduced substructures to one another, each of the terms in Eq. (6.39) must first be transformed to a common global reference frame. Using the component mode matrices (WCB,i in Eq. (6.19) or WH,i in Eq. (6.36)) in the local frame, and an unknown set of generalized coordinates in the global frame, the Ritz coordinate transformation in Eq. (6.10) can be expressed as:
T  X e,i ( )  WS ,i TR ,i P i ( )

(6.40)

where TR,i is a reduced coordinate transformation matrix with square dimensions equal to the number of columns in either WCB,i or WH,i. The generalized coordinate vector in the global frame can be represented as:
  X P i B ,G

Pk

X E ,G i

T

(6.41)

136

It is important to note that the reduced set of modal coordinates, Pk, do not need to be rotated to the global frame since the local mass-normalized truncated mode shape vectors, K,i, produce equivalent modal-reduced system sub-matrices in any pose. Therefore, only the boundary nodes need to be rotated. This is accomplished using the following reduced physical coordinate transformation matrix:

 R B ,i  TR ,i   0   0

0 I KK 0

0   0  R E ,i  

(6.42)

where RB,i and RE,i are block-diagonal matrices containing the individual rotation matrices for each of the boundary nodes, which are dependent on the initial configuration of the module and its orientation after motion occurs (analogous to R0i in Eq. (3.16)), and IKK is a K×K identity matrix for K retained normal modes. Substituting Eq. (6.40) into Eq. (6.9) and pre-multiplying both sides by TR ,i WST,i gives the reduced form of the equations of motion for the ith component in the global reference frame:
T  TR ,i Z S ,e ,i ( )TR ,i P i  TR ,i FS,e,exp ,i ( )  TR ,i F' S ,e ,i ( )

 ( )  F or Z S ,G ,i ( ) P i S ,G,exp ,i ( )  F' S ,G ,i ( )

(6.43)

6.4 System Assembly in Global Frame
To assemble the reduced component matrices using a common global frame, the "primal formulation" is used, which eliminates the interface connection forces as unknowns using the interface equilibrium equations [88]. The displacement compatibility and force equilibrium equations are introduced as the following constraint equations:
 =0 BWS P LT WST F'G  0

(6.44)

where B is a signed Boolean matrix relating displacement compatibility at the interfaces, WS is a block-diagonal matrix containing the component mode matrices for each component from either Eq. (6.19) or (6.36), and P is a vector of the unattached generalized coordinates for each component, with interface coordinates in the physical global frame. In Eq. (6.39), it can be

137

shown that L acts as a Boolean connectivity matrix which relates the substructure generalized Ritz coordinates to a unique set of generalized coordinates for the assembled system in the following form:

 = Lu P CMS

(6.45)

where uCMS represents the vector of CMS-assembled generalized coordinates. Substituting Eq. (6.45) into the first part of Eq. (6.44) will lead to:

BWS LuCMS  0, uCMS

(6.46)

The above equation means that L must span the nullspace of (BWS) to satisfy the compatibility condition. Therefore, only the L matrix is required for the system assembly. The B matrix in the first part of Eq. (6.44) for three substructures a, b and c (which can represent three successive modules, for example) can be expressed as:
 I ,a p  B ,a p  B ,b p  I ,b p  E ,b p  E ,c p  I ,c p

0 B 0

I 0

I 0

0 0

0 I

0 I

0 0 

(6.47)

The compatibility constraints in the above equation are enforced at the boundary coordinates (B and E) for each module in the form P B,a = P B,b and P E,a = P E,b. Also, Eq. (6.45) can be represented as the following:
  I P I ,a     PB ,a  0   0 P B ,b     PI ,b    0 P   0  E ,b     0 P E ,c     PI ,c   0 0 uI ,a  0    0  uB ,ab    0   uI ,b  0 0 I 0   uE ,bc    0 0 I 0   uI ,c  CMS  0 0 0 I 0 I I 0 0 0 0 I 0 0 0 0

(6.48)

It can be shown that the L Boolean matrix in Eq. (6.48) is equal to null(BWS) [88]. The equations of motion in the global frame for each component in Eq. (6.43) can then be expressed in block-diagonal form as:
 ( )  F ( )  F' ( ) Z S ,G ( ) P S ,G S ,G

(6.49)

138

Eq. (6.45) is substituted into Eq. (6.49), then each side in the resulting equation is pre-multiplied by LT. Also, to eliminate the connection forces (F'S,G), the following condition holds from Eq. (6.44):
LT WST F'G  LT F'S ,G  0

(6.50)

Afterwards, the CMS assembled equations of motion for the system becomes:

LT Z S ,G ( )Lu( )  LT FS ,G ( )
or

 ZCMS ( )uCMS ( )  FCMS ( )

(6.51)

From Eqs. (6.48) and (6.51), it can realized that the generalized component boundary coordinates for the assembled system are equal to the physical coordinates [88, 89]. Therefore, the assembly process is identical to the FE method with connectivity occurring at the component interfaces.

6.5 CMS Model Resonances and Antiresonances
To determine the resonance frequencies of a CMS assembled model in the global frame, the following free-vibration eigenvalue problem with reduced stiffness, mass and damping matrices is to be solved:
2   n ,l M CMS  jn ,l DV ,CMS  jD H ,CMS + K CMS   CMS ,l  0

(6.52)

where n,l is the lth resonance frequency and CMS,l is the corresponding eigenvector containing the complex mode shapes. The quadratic eigenvalue problem in Eq. (6.52) can be solved by assuming a state-space solution in the following form [167]:
 + Yw = 0 Xw

(6.53)

which is a system of 2ndof,CMS equations, instead of ndof,CMS (number of DOFs after CMS assembly) as found in Eq. (6.52). In Eq. (6.53), the X and Y matrices can be represented by:
-M 0 M , Y X  M DV  CMS  0

0   K  jDH    CMS

(6.54)

and w is the state variable represented by:

139

 (t )     x w   n ,l l  ,   x (t ) CMS  l CMS

2  x (t )    n ,l l     w       x (t ) CMS  n ,l l  CMS

(6.55)

where n,l = jn,l and l is the corresponding mode shape. Afterwards, Eq. (6.52) can be rewritten using Eqs. (6.53) and (6.54) as:
  -M    0
0 M     0  n ,l      K  jDH   M  DV  

n ,l l  0      l CMS 0  CMS 

(6.56)

In Eq. (6.56), n,l is a complex eigenvalue pair corresponding to the lth mode, and the resonance frequency, n,l, is taken from its imaginary part. By solving the eigenvalue problem in Eq. (6.56), det(Y - (-X)) = 0, the resulting eigenvector matrix will be composed of the derivatives of the modal vectors, along with the desired mode shapes:

 n 1       1   CMS 

 n 2
2

 

 n l
l

 

 n 2 n

dof ,CMS

2 ndof ,CMS

    CMS

(6.57)

Eqs. (6.52) to (6.57) are particularly useful for highly damped or general damped assemblies. For proportionally damped assemblies, the solving the eigenvalue problem of the equivalent undamped system is sufficient and can greatly reduce the computational effort by solving the eigenvalues and eigenvectors for ndof,CMS equations instead of 2ndof,CMS equations found from the quadratic eigenvalue problem for general damped systems. Also, the eigenvectors for proportionally damped systems are equal to those of the undamped system, with slight differences in the eigenvectors [91]. The eigenvalue problem for the proportionally damped CMS assembly can be expressed as:
2  K CMS  n  ,l M CMS  CMS ,l  0 

(6.58)

The resulting mode shapes from Eq. (6.58) lead to the orthogonality conditions found in Eq. (6.14), but for the entire CMS assembly, which can be used to uncouple the reduced system's stiffness, mass and damping matrices. The antiresonance frequencies for a particular FRF are dependent on the selected input (motion) and output (force) coordinates, and can identify where the receptance FRFs approach zero. Each set of input/output coordinates produce different antiresonance frequencies. For full 140

FE models, the antiresonances can be determined by solving the eigenvalue problem by removing the pth row (output/motion coordinate) and qth column (input/force coordinate) from the MG and KG matrices of an undamped model [165, 168]. However, because either of the input and output coordinates (or both) may be lost during the CMS reduction process, the determination of antiresonances is not so straight forward as removing the corresponding rows/columns from the assembled CMS model. To determine the antiresonances of a CMS reduced assembly, the process first involves removing the pth rows and qth columns (corresponding to input and output coordinates) from each matrix in Eq. (6.4) in the local frame of each component. Then, the rows and columns of the component mode transformation matrices (WCB,i from Eq. (6.19), or WH,i from Eq. (6.36)), and coordinate transformation matrices (TR,i from Eq. (6.42)) which are multiplied by the corresponding pth rows and qth columns of the Me,i,

DV,e,i, DH,e,i, and Ke,i matrices should also be removed for each component. Afterwards, noting
that the pth row and qth column were removed from the unassembled components and thus removed from the full FE model, the reduced component models are then assembled using the method in Eqs. (6.44) to (6.51). The eigenvalue problem for the mth antiresonance frequency, ar,m, can be stated as:
2   ar ,m M CMS  jar ,m DV ,CMS  jD H ,CMS + K CMS   pq ar ,CMS ,m  pq  0

(6.59)

where the subscript pq denotes that the pth row and qth column of the unreduced stiffness, mass and damping matrices are removed. Eq. (6.59) can be solved for systems that are highly damped or have general damping using a similar procedure from Eqs. (6.52) to (6.56). If the damping is proportional or negligible, Eq. (6.59) can be reduced to a regular eigenvalue problem as follows:
2  K CMS  ar  , m M CMS  pq ar ,CMS , m  pq  0 

(6.60)

It is important to note that for cross-point measurements (p  q), the antiresonance solutions may yield complex roots due to the loss of matrix symmetry, thus the antiresonances only occur at the positive real roots for these cases. Conversely, for drive-point measurements (p = q), all antiresonances are positive and real since the KCMS,pq and MCMS,pq matrices are symmetric. Also, when two consecutive imaginary FRF peaks are in the same direction, an antiresonance exists between those modes [168]. In the case of drive-point measurements, all imaginary peaks are in the same direction. Therefore, it can be shown that drive-point measurements yield a larger

141

number of antiresonances (where each resonance is separated by an antiresonance), while crosspoint measurements give "saddle-points" in the absence of antiresonances [165].

6.6 Recovery of FRF Physical Coordinates from CMS Model
To directly compare the CMS methods in sections 6.2 to 6.5 with experimental FRF data (or a separate full FE model) for modular robot assemblies in random poses, a method is presented in this section to recover the physical coordinates from the reduced CMS models (from Eqs. (6.43) or (6.51)), which correspond with experiment test locations for force inputs and motion outputs. These experimental test locations may coincide with internal (reduced modal) coordinates of assembled CMS models, which are not in the physical coordinate domain. For typical CMS test-analysis models (TAMs), measurement locations are retained as physical coordinates, usually at model interfaces, or by placing physical coordinates at measurement locations coinciding with internal CMS DOFs [109]. Note that these methods can possibly increase the size of the reduced CMS model when considering additional physical coordinates. Instead, the method presented in this section can be used to recover the physical measurement coordinates directly from the original CMS model with retained (modally reduced) dimensions. This is essential if there are strict requirements to retain the dimensions of the analytical CMS matrices for later virtual testing, and can enable a direct comparison with experimental data. Also, this method avoids the condensation of unmeasured physical coordinates using methods such as Guyan reduction [96] or improved reduced system (IRS) [169], which may risk further error propagation in the CMS model when combined with the Craig-Bampton or hybrid reduction methods. Typically, for experiments with non-movable components, the FRF in Eq. (6.8) is measured with transducer coordinate frames aligned with a common global frame. However, for testing interconnected components with different orientations, cross-point measurements taken in local coordinate frames of separate components must be converted to a common global frame for a direct comparison between analytical and experimental models. Moreover, an additional transformation from the CMS generalized coordinates to physical FE coordinates is required to directly compare the analytical CMS model with experiment data. To illustrate the required coordinate transformations, consider the ith and jth components in different orientations in Fig. 6142

3. An accelerometer is placed on the bottom surface of component i at physical node p, and component j is excited with a force at node q. For this scenario, typical FFT spectrum analyzers would give a false readout of Eq. (6.8) if the local sensor coordinate systems cannot be adjusted for alignment with the global coordinate frame in the analyzer software. What the sensors would actually read is a pseudo-receptance term, given by the equation:
H epq , exp ( )  X ep,exp ,i ( ) Feq , exp , j ( )

(6.61)

where X ep,exp ,i is an experimental displacement at node p on the ith component (usually obtained from an accelerometer reading converted to displacement units) and Feq , exp , j is the experimental input force at node q on the jth component (obtained from an impact hammer strike, or a shaker). Note that Eq. (6.61) contains displacement and force measurements in different local coordinate systems.

Figure 6-3: Component coordinate frames for assembly experimental tests

The forthcoming method assumes that the measured experimental force is also used to excite the analytical CMS model, thereby enabling a direct comparison of measured and analytical motion responses. In instances where an impact hammer is used to excite the experimental structure, a perfect impact is difficult to achieve. Therefore, when the experimental force is transformed to the frequency domain, it is not constant, whereas a perfect impact would yield a constant frequency domain force. To convert the measured input force signal at node q, from the

143

local coordinate system of component j to the global frame of the reduced CMS assembly, the following transformation is performed:
FCMS, j ( )  TR , j WST, j Fe,exp , j ( )

(6.62)

Eq. (6.62) is substituted into the CMS reduced assembled model (at the corresponding nodal locations in FCMS from Eq. (6.51)) for an assembly's experimental test setup. Afterwards, the analytical displacement vector containing the generalized CMS global coordinates can be determined as:
1 uCMS ( )  ZCMS ( ) FCMS ( )

(6.63)

In order to directly compare the analytically obtained displacements from the CMS reduced model to the local experimental displacements in physical coordinates for substructure i at node p in Fig. 6-3, Eq. (6.40) can be expressed in terms of uCMS for the ith substructure as follows:

uB ,hi    X r ,e ,i ( ) = WS ,i T uCMS ,i ( )  WS ,i T  uI ,i  u   E ,ij 
T R ,i T R ,i

(6.64)

CMS ,i

where the vector uCMS,i contains all of the reduced generalized displacement coordinates of component i, as found from uCMS in Eq. (6.63), Xr,e,i contains the corresponding physical displacement local coordinates recovered from the CMS assembly's displacements (in
p at output node p is contained in the vector Xr,e,i. In general, generalized coordinates), and X r,e,i

Xr,e,i does not yield the exact same result as Xe,i obtained from the full FE model in Eq. (6.4)
since there are expected errors due to the CMS reduction. Also, Xr,e,i may contain coupled displacement contributions at the interfaces of component i from adjacent substructures, h and j, in the test bed. Therefore, this method is synonymous with the loaded-interface CMS methods of [101] and [104], but the deflections here contain additional contributions due to deflections from the internal nodes of the adjacent testing components. To determine the local pseudo-receptance FRF terms (as in Eq. (6.61)) for the analytical CMS model in the respective local coordinate systems of components i (containing output node p) and j (containing input node q), the results from Eq. (6.64) can be used in the following equation:

144

H ( ) 
pq e

X rp,e,i ( ) Feq ,exp , j ( )

(6.65)

To determine the global experimental input forces, and the CMS reduced global analytical deflections, the coordinate frame transformations in Eq. (6.5) can be applied to the local experimental force, and to Eq. (6.64) in the form of:

X r ,G ,i    Ti X r ,e,i   FG ,exp , j    Ti Fe ,exp , j  

(6.66)

Afterwards, by extracting the pth displacements and qth forces at their corresponding nodes in Eq. (6.66), the analytical receptance FRF terms in the global frame can be determined as:
H ( ) 
pq G

X rp,G ,i ( ) FGq,exp , j ( )

(6.67)

Thus, the more suitable form of the receptance in a common global frame can be alternatively used to compare an analytical model to an experiment. Overall, the method described so far is fully capable of incorporating the analytical experimental transducer physical coordinates with different component configurations, in either the local or global coordinate frames, thus enabling direct comparisons between the experiment and reduced CMS model.

6.7 Case Study
To compare the hybrid CMS method developed in this chapter to the Craig-Bampton method and a full FE model, a forced vibration analysis was conducted with the goals of obtaining the FRFs, natural frequencies and antiresonances of a planar motion serial modular robot with three hinged joint modules, three link modules and a locked wrist module for four different robot poses. The FE discretization of each component is shown in Fig. 6-4. The material and geometric properties of the link modules, as well as the rigid wrist are the same as those found for the example in section 3.5. Also, it is assumed that the rigid wrist is combined with link 3 to form a single component using a rigid offset link. Each hinged joint module is modeled as two separate components. The revolute joint motors are housed within the joint output links and when joint motion occurs, these output links move relative to the adjacent hinged joint yokes. The joint output links and the module links were modeled as hollow Timoshenko beams, while the joint 145

yokes were modeled as solid Timoshenko beams. Moreover, the distance between the joint yokes were modeled as rigid links with connection nodes at their mid-lengths as shown in Fig. 6-4. The rigid offset distances between the joint yokes were 0.065 m for the first joint, and 0.0475 m for the remaining joints.

Figure 6-4: Component FE discretization for hinged modular robot example with interface conditions shown for hybrid CMS method

Each motor's stiffness and gearing system were modeled using massless linear virtual springs, and were attached to the joint output link elements to form separate component substructures. The lateral and torsional joint virtual stiffness terms for each joint's motor were assumed to be kx

146

= ky = 2×109 N/m and k = 3×1010 N·m/rad. The motor mass for the base joint was 2 kg, while the remaining motor masses were 1.5 kg, and the end-effector mass was 1.25 kg (with a rigid wrist offset of 0.035 m). All links had the same structural material properties (E = 69 GPa,  = 0.33 (G = 25.9398 GPa), and  = 2700 kg/m3). The geometric and material properties for the joints are given in Table 6-1. Note that there was no payload mass attached to the end effector for this case study.
Table 6-1: Model parameters for joint components
Joint Component

Geometric Parameters L [mm] 45 45 35 35 bo [mm] 10 60 9 42.5 bi [mm] 50 33.5 ho [mm] 45 60 35 42.5 hi [mm] 50 33.5

1(2×) 2 3 5,9(2×) 6,10 7,11

Material Parameters  E [kg/m3] [GPa] 2770 72 2770 72 2770 72 2770 72

Proportional Damping Parameters    [1/s] [s] -6 20 7×10 0.01 20 7×10-6 20 5×10-6 0.01 20 5×10-6 -

*Note: Poisson's ratio, , is 0.33 for components 1, 3, 5, 7, 9 and 11

It was assumed that all link and joint structural elements had proportional viscous damping, while the joint virtual springs had structural proportional damping (stiffness proportional). It was also assumed that all of the links had proportional viscous damping coefficients of  = 30 s-1 and  = 1×10-6 s. The proportional damping parameters for all of the joint components are given in Table 6-1. For the CMS assembly, the nodes located at the base of joint 1 are naturally fixed to a rigid support, and the tip of the end-effector is naturally free. When component model reduction is performed using the hybrid interface method, the interface BCs are shown in Fig. 6-4 for each component. On the other hand, when the Craig-Bampton method is used, all component interface BCs in Fig. 6-4 remain fixed. In this example, the FRFs, natural frequencies and antiresonances of interest are in the XG-YG plane and it is assumed that the structure is only excited in this plane. Because joint motion only occurs in this plane, the model can be also be further simplified using 2-D elements. Each link module was discretized using 16 evenly spaced elements, while the joint yokes and joint output links were discretized using two evenly spaced elements (due to their short lengths relative to the links). The test poses include the initial configuration pose and three poses after moving from the initial configuration pose as shown in Fig. 6-5.

147

Figure 6-5: Poses for case study (a) Initial configuration, (b) Pose #1, (c) Pose #2, (d) Pose #3

The full FE model contained 189 DOFs (with the first node attached to joint 1 having fixed BCs), and numerical tests for the hybrid and Craig-Bampton CMS methods were conducted by reducing the joint models and retaining one mode for each test, while varying the number of kept modes for each link module (1, 4 and 16, respectively). Therefore, the reduced system contains 33, 42, and 78 DOFs for the respective test cases. When one mode is kept for each component, this represents the minimal order CMS case. The local joint input angles for the initial configuration are all set to zero degrees, the joint inputs for pose #1 are q1 = [-60°,15°,45°], for pose #2 are q2 = [45°,-90°,45°], and for pose #3 are q3 = [0°,-75°,-105°]. Afterwards, the drive148

point FRFs were obtained by assuming a single-axis accelerometer was placed at the tip of the third link module (at the node connecting the rigid wrist) in the local Ye-direction of the link, and a constant force of -1 N (in the Ye-direction) in the frequency domain to emulate a perfect impact. These were obtained by following the FRF recovery method in Section 6.6 for 6401 frequency points in the 0 to 2000 Hz range. The drive-point FRFs were also used to compute the antiresonances (as opposed to cross-point references which will yield a lower number of antiresonances). The local accelerance FRF phase angles (tan-1(Im(Ha)/Re(Ha))) and magnitudes are shown in Figs. 6-6 to 6-9 for each test case with 33 and 42 DOFs for the reduced CMS models.

Figure 6-6: Drive-point FRFs for initial pose (a) 33 DOF test case, (b) 42 DOF test case

The visible differences in analytical FRFs indicate a degree of correlation between the respective CMS models and full FE model. It is demonstrated that for each pose tested, the

149

minimal-order test case with 33 DOFs (one retained mode for each component) contains large FRF errors in the 700 Hz to 2000 Hz frequency range using either Craig-Bampton method or the hybrid method. When the number of kept link modes are increased to three per link (42 DOF test case), the differences between the full FE model and both CMS models are reduced drastically within the 0 to 2000 Hz frequency range, and there are small differences between each model. By observing the phases for each test case, it can be noticed that for low-damped modes, the phase angle drops by 180°, and at antiresonances with low damping, the phase angle increases by 180°. However, once modes or antiresonances are moderately damped, the phase shift occurs, but at angles less than 180°.

Figure 6-7: Drive-point FRFs for pose #1 (a) 33 DOF test case, (b) 42 DOF test case

150

Figure 6-8: Drive-point FRFs for pose #2 (a) 33 DOF test case, (b) 42 DOF test case

To provide a better level of correlation between the models, the relative errors between the CMS models and the full FE model's resonance and antiresonance frequencies are observed. These are computed as:

error  abs 

 CMS   full   full 

 100%   

(6.68)

The first ten in-plane natural frequencies and antiresonances obtained for the full FE model are given in Table 6-2. These coincide with a frequency range of interest from 0 to 2000 Hz, plus an additional mode and two additional antiresonances. The frequency values in Table 6-2 act as references for the nominal full FE model in order to compare the frequencies obtained from the Craig-Bampton and hybrid CMS models. The relative errors for the resonances and antiresonances are shown in Figs. 6.10 and 6.11.

151

Figure 6-9: Drive-point FRFs for pose #3 (a) 33 DOF test case, (b) 42 DOF test case

Table 6-2: Full FE model resonances and antiresonances for each test case
Resonance (or Antiresonance) Mode # 1 2 3 4 5 6 7 8 9 10 2-D Full FE Model Resonance Frequencies Initial Config. [Hz] 15.8946 74.1573 186.5786 583.6016 663.9424 1018.9805 1501.8279 1548.8578 1559.3813 2285.7478 Pose #1 [Hz] 16.5854 69.0992 170.9720 535.0701 712.7255 1038.3475 1316.4834 1562.1562 1964.3440 2292.7618 Pose #2 [Hz] 22.2831 41.0233 153.7458 630.2252 791.2456 1049.2071 1405.6240 1650.1780 1868.3081 2301.2267 Pose #3 [Hz] 22.8393 47.3219 127.6274 629.4471 841.6717 1129.1220 1377.7995 1496.8270 1899.4318 2331.9900 2-D Full FE Model Drive-point Antiresonance Frequencies Initial Pose #1 Pose #2 Pose #3 Config. [Hz] [Hz] [Hz] [Hz] 48.6133 37.5519 28.2855 22.9254 140.9581 131.0745 96.7120 73.4102 583.6016 528.3796 628.6044 625.8168 659.7134 711.4247 772.7406 840.5431 923.7975 931.3320 976.6598 970.3796 1170.6130 1125.4725 1105.0588 1148.5411 1531.8176 1413.4864 1595.2469 1467.1845 1548.8578 1951.6016 1854.0250 1850.2133 2282.4489 2292.3830 2290.8677 2322.9777 2727.3111 2706.0712 2674.6659 2624.4675

152

Figure 6-10: Resonance frequency relative errors (a) Initial pose, (b) Pose #1, (c) pose #2, (d) Pose #3

Observing the resonance and antiresonance frequencies in Table 6-2, as well as the FRFs in Figs. 6-6 to 6-9, it can be noticed that certain resonances/antiresonances are not visible in the FRF peaks/phases, such as modes 4 (583.6016 Hz) and 8 (1548.8578 Hz) for the initial configuration pose. In this case, antiresonances at the same locations as modes 4 and 8 effectively cancel those FRF peaks. In other instances, such as the 4th mode for pose numbers 1 to 3, the FRF peaks in Figs. 6-7 to 6-9 at those locations have low amplitudes, mainly due to the presence of close antiresonance frequencies at those resonance locations. When damping is set to zero, it can be noted that those amplitudes for the 4th mode increase significantly. Therefore, due to the combination of damping and a close antiresonance frequency, these modes have lower amplitudes, and may not be visible during experimental tests (these modes may appear in regions 153

of noise from the experimental FRF results, and are thereby difficult to detect). In other instances, such as the 9th mode (1559.3813 Hz) for the initial configuration, the FRF peaks are not visible in the magnitude, phase, or real and imaginary parts. These modes are likely found in rotational receptances and may not be detected if only linear motion is measured.

Figure 6-11: Antiresonance frequency relative errors (a) Initial pose, (b) Pose #1, (c) pose #2, (d) Pose #3

From the resonance and antiresonance frequency errors in Figs. 6-10 and 6-11, it is shown that the Craig-Bampton method performs better than the hybrid method with lower relative errors when the model is reduced to 33 DOFs (minimal-order model). However for both CMS methods, the relative errors for the 33 DOFs models are above 1% after the 5th resonance and after the 4th antiresonance (> 841 Hz). These errors are drastically reduced (far below 1%) when

154

the number of kept modes are increased for the 42 and 78 DOF cases, however at a cost of higher computational times. Note that for the higher-order models, the hybrid CMS method outperforms the Craig-Bampton method for all cases in Figs. 6-10 and 6-11. In fact, the 42 DOF cases for the hybrid method computes a few resonances and antiresonances with lower errors than the 78 DOF Craig-Bampton method. Therefore, the hybrid method is numerically superior when more than one mode is retained for each link. The higher accuracy may be contributed to the use of residual flexibility attachment modes at the free-interface coordinates, as opposed to unadjusted attachment modes obtained from the flexibility matrix [84]. Overall, for an accurate minimalorder CMS model, computational tests can be conducted where the number of kept modes should be gradually decreased until desirable accuracy is achieved for each resonance or antiresonance frequency within the frequency range of interest. Table 6-3 lists the computation times for solving the FRFs and resonance eigenvalue problems associated with each model used for the example in this section.
Table 6-3: Computation times for case study example # of Retained DOF for CMS Models 33 42 78 Average Time for Solving Resonances [s] Full FE Model (189 DOF) 0.2065 CraigBampton CMS 3.1431×10-3 1.6718×10-2 2.2322×10-2 Hybrid CMS 3.1697×10-3 1.5314×10-2 2.1968×10-2 Average Time for Solving FRF Terms [s] Full FE Model (189 DOF) 36.7513 CraigBampton CMS 0.8193 1.6872 3.9041 Hybrid CMS 0.8157 1.7629 4.1136

In terms of computation times, both CMS methods performed similarly since the same number of reduced DOFs were used for concurrent tests. If a high fidelity model in terms of accuracy for higher-order resonances is required for the workspace searches in Chapter 4, then the CMS models used in this chapter can greatly reduce computation times. However, since only the first resonance frequency was required in Chapter 4, a low number of elements for a regular FE model should prove to be sufficient. In terms of experimental practicality (for determining component normal modes and FRFs), the hybrid CMS method is superior in the sense that it allows testing for pose-dependent components such as hinged joints and requires only one fixture, whereas the Craig-Bampton method is limited since all component boundaries are required to be fixed.

155

6.8 Summary
This chapter presented a new approach for the structural dynamic model reduction of serial modular robot components using a hybrid-interface CMS method. The physical coordinate recovery method developed in this chapter is useful for determining FRFs based on different force excitation and motion measurement locations on different components. This procedure essentially avoids the common methods of retaining required measurement locations by dividing individual component models into several reduced components with multiple interfaces (since the interfaces for the CMS methods in this chapter remain in physical coordinates). Therefore, the original CMS models presented in this chapter can be retained with interface coordinates coinciding with component connection points. Based on the case study, it is demonstrated that the hybrid CMS method is numerically superior when compared to the Craig-Bampton method if a minimal-order CMS model is not required (which is usually the case if high accuracy for computing higher resonances/antiresonances is needed). Although the computation times are similar for both methods, the hybrid CMS method is more practical for testing separate components experimentally, and can allow testing for pose-dependent modules such as hinged joints with self-contained motors.

156

7. Pose-Based Component Vibration Testing and Model Updating Method
This chapter presents a practical and effective framework for the updating of mechanism FE component models such that the updated reduced-order CMS model of the entire assembled system can provide accurate structural dynamic results in any possible pose/configuration. Typically, initial models of large mechanism assemblies are created using inexpensive beam or shell elements. In the aerospace industry, these simple models are commonly referred to as "stick" models [170]. However, the accuracy of these initial models is questionable, especially when they are further reduced using CMS methods, and experiments are usually performed only for validation purposes. Unlike immovable stationary structures, the experimental testing and model updating of robots/mechanisms present a more complicated scenario due to the infinite number of possible poses. With different poses, the component orientations change relative to one another, thereby affecting the modal properties of the entire assembly. Therefore, the updated parameters for robots must provide good correlations with experimental test data for all possible poses. To address some of the shortcomings in research related to the component model updating of modular robots (as well as other mechanisms), a new framework is developed in this chapter. The main goal here is to avoid testing the entire assembled structure by obtaining accurately updated CMS reduced component models which mimic their natural interface boundaries with adjacent components in experimental FRF tests. Likewise, the assembled CMS model must be able to perform accurately in any random pose. This is accomplished using a building block approach where the physical FE parameters of each CMS reduced component in their local element coordinate frames are updated. By constructing CMS matrices using updated FE parameters, the requirement to experimentally derive the modes required for CMS (such as constraint or attachment modes) is completely avoided. Since it is impossible to directly measure joint FRFs, the experimental substructure BCs are made to mimic natural joint-link connectivity by enabling flexible-hinged boundaries and testing links with joint hinges in multiple arbitrary orientations. This exploits the fact that experimental FRFs obtained away from the joints can contain information about the joint dynamics which result in resonance frequency shifts. Also, the testing of multiple joint-link poses can allow one 157

to determine if the joint dynamics are pose-dependent, or if the joints behave like rigid bodies. The model updating of each component in multiple possible poses is performed using a GA with bounded inequality constraints on the updating parameters and nonlinear constraints on FRF parameters (natural frequencies, antiresonances and fixture motion). Then, the reduced component models are adjusted to include (or remove) additional mass and stiffness effects at the interface locations analytically. These additional terms may coincide with unmeasured portions of components that are considered entirely fixed or the effects of fixture motions (which should be removed from the updated models). Afterwards, the effectiveness of the proposed framework is demonstrated with experimental case studies. The first case study is an adjustable modular linkage system made to resemble the MRR with hinged joints from the case study in Section 6.7 using the hybrid CMS method, and the second case study is on a simplified landing gear model using the Craig-Bampton method. Overall, the framework presented in this chapter can enable further structural dynamic testing of complete robotic (or mechanism) systems in a virtual environment, thus reducing the requirement for extensive experimental testing on entire assemblies.

7.1 Component Model Updating for Multiple Poses
To facilitate FE model updating for each component, the frequency response function method (FRFM) is utilized, which directly uses experimental FRF data to evaluate errors existing in analytical models [134, 138]. The goal here is to minimize these errors by correcting the analytical model parameters of each component. Referring to the example in Section 6.7, the links can be experimentally tested alone using fixed-free BCs, and the joints (which contain multiple components) can be tested as separate substructures in multiple poses. Note that the use of fixed-free BCs for joint modules are only applicable if the joints are active (self-driven) and their motors can be independently controlled (as found in typical modular robots). Otherwise, if the joints are passive, fixed-fixed BCs are required to prevent rigid-body motion of the joint. Furthermore, if the joint geometry does not permit the placement of sensors, or impact hammer locations, then the adjacent link module can be attached to the respective joint, and tests can be performed in multiple poses. The substructure test setup is shown in Fig. 7-1 for a single link and joint module in n = 3 different test poses.

158

Figure 7-1: Substructure experiment setup with component BCs for hybrid CMS method (a) Link module test, (b) Joint and link module tests for three poses

As shown in Fig. 7-1(a), the link modules only need to be tested in a single pose since their shapes do not change. This is because the link natural frequencies and mode shapes remain the same for any component orientation. The advantage of the hybrid CMS method is that only one fixture is required, thereby easily permitting multiple poses to be tested when testing joints together with links as substructures. If the Craig-Bampton method is applied experimentally, a separate fixture is required at the excess substructure interface, which needs to be adjusted (or replaced with other fixtures) when testing multiple joint poses. For both of the mentioned methods, the normal modes required for CMS reduction can easily be obtained from vibration tests with the appropriate component BCs. However, the measurement of static constraint modes (by applying a unit displacement on a free-interface, while fixing the motion of all other coordinates), or static attachment modes (by applying a unit force on the free-interface and fixing the remaining coordinates) may prove to be difficult to implement experimentally, requiring complicated fixtures. Furthermore, since rotational modal displacements cannot be directly measured, the approximation of normal mode shape vectors usually requires curve-fitting techniques, which may lead to large errors. Therefore, the use of FRF data is preferred here for updating the models, and the correlation of partially measured component normal modes can be checked in a post-processing stage. When multiple substructure poses are considered, such as the setup in Fig. 7-1, the equations of motion can be expressed as: 159

 H  ,   1  G    H G  , n  





 F  X     ,    G , exp   , 1  G , exp   , 1  1                          FG ,exp  , n   X G ,exp  , n    , nq         













.....(7.1) where (,) is the system error vector at a particular frequency, , caused by discrepancies in the analytical model, HG(,). The individual orientations of each component in the substructure's test assembly with respect to a common global frame can be defined by  = [{}1,
...,{}i, ..., {}n]. Note that the global orientation vectors {}i used in this chapter are different

from the local joint input motion variable vectors used in Chapter 4, to prevent confusion with the force input coordinate locations, q, which coincide with column entries of the receptance FRF matrix HG(,). If the hinges are flexible relative to the links, then HG(,), along with the resonances and antiresonances will exhibit significant differences with changing test poses. To directly compare the analytical FRF terms from a reduced CMS model to the experimental FRF measurements, a more suitable scalar form of Eq. (7.1) is presented, which includes the possibility of multiple test poses:
eFRF  ,     
n qn n F


 1 q  q1

 abs  log  H  
1

pq G , exp

 ,     log  H Gpq  ,   



(7.2)

The summed differences in Eq. (7.2) occur for a known number of frequency points of interest,
n, a number of force excitation locations, nF, and a given number of different substructure test
pq poses, n. The analytical receptance column vectors in the global frame,  H G  ,   , are

determined from the FRF recovery method in Section 6.6 (from Eq. (6.67)). If particular DOFs
pq are not experimentally measured, then their corresponding entries in  H G  ,   , can be

omitted. The receptance magnitudes in Eq. (7.2) are found by taking the Euclidean norm of each measured column, q. Also, taking the base-10 logarithms of FRFs reduces the dominant error contributions of resonant peaks while increasing the effects of antiresonances [123].

160

7.1.1 Model Updating Parameters
The physical parameters of each component that are initially uncertain are required to be updated using the experimental data from the joint and link substructure tests. The vector of updating parameters for the ith component is defined as: ai  a1 , ..., ak , ..., anu





i

(7.3)

with nu updating parameters. These updating parameters may include material properties, geometry, virtual spring stiffness, and damping terms. The geometric parameters do not include changing the lengths of any component in order to preserve the kinematic structure of the assembled system. Also, the dependent terms found in the stiffness, mass or damping matrices need to be updated accordingly. For example, updating the cross-section dimensions will also change the area moment of inertia in the component matrices. It is further assumed that there is zero structural damage in the components, and that neighboring elements of the same size and material will have equivalent updated parameters. This measure will provide a physically realistic updated model by avoiding possible parameter fluctuations with neighboring elements and also reduce the number of updating parameters, instead of updating each individual element of a component. When the component physical parameters are updated, they can be represented as the original parameter value with an added perturbation in the form:
ak ,i  ao,i  ai

(7.4)

The nu updated parameters for a single component, ai, are directly substituted into the local FE stiffness, mass and damping matrices in Eq. (6.6) during the updating process and new CMS matrices are recalculated for each updating iteration. For example, if the cross-section length and Young's modulus are to be updated for a square cross-section, an updated linear axial stiffness term would become (Eo,i + Ei)(bo,i + bi)2 / Li, with Ek,i = Eo,i + Ei and bk,i = bo,i + bi. Using a direct search optimization method to perform the parameter updating, it would be more beneficial to directly substitute discrete values for Ek,i and bk,i to the avoid the extra addition computations. This approach can also avoid the added computations of rebuilding separate perturbation matrices for every updating parameter change, as found in [121] and [129].

161

7.1.2 Constrained Optimization Approach
To update the reduced component models, a direct search method is presented which involves a genetic algorithm (GA) with linear and nonlinear bounded constraints. Rather than minimizing the resonance frequency errors, or mode shape errors, which require accurate mode shape estimations, the objective is to minimize the FRF errors found in Eq. (7.2). Since tests on separate substructures produce resonances at higher frequency ranges than a fully assembled model, it is beneficial to perform the FRF optimization for a given number of frequency points across the entire measurement range. Furthermore, testing individual hinged assemblies of components reduces the number of updating parameters and lessens the chances of non-unique parameter estimations. Likewise, the advantage of testing multiple poses allows more data to be obtained to aid in updating the local element parameters since they should remain the same for various poses. Evidently, this model updating problem becomes an overdetermined system if more than one pose is considered. Therefore, an exact analytical solution does not exist and an optimization method must be applied. Thus, the optimization problem in this chapter is stated as: minimize f  eFRF  ,  , a  subject to the following linear constraints:   1 , 2 , , n



 

(7.5)

ai  a  a1 , a2 , , anc  a LB ,i  ai  aUB ,i , i  1, 2, ... ,nc where a contains all of the updating parameters for nc components undergoing a hinged test, aLB,i and aUB,i are vectors containing the lower and upper bound limits for each updating parameter in the ith component. The optimization problem is further subjected to the following nonlinear constraints:



n,l ,error   , a   en ,l    , l  1, 2, ... , n n ,exp    ar ,m ,error   , a   e ar ,m    , m  1, 2, ... , n ar ,exp   
X F ,error  ,  , a   eX , F   

(7.6)

The number of experimentally captured resonance and antiresonance frequencies for each pose are denoted as nn,exp and nar,exp, respectively; en.l and ear.m are tolerances placed on the lth resonance frequency and mth antiresonance for each pose tested, . The last constraint in Eq.

162

(7.6) is to restrain the motion at an analytical fixture interface with a pre-specified tolerance, eX,F. This constraint can be expressed as: 1 X F ,error  ,  , a   n
p p  XF  ,G   ,  , a   X F ,G , exp   ,   abs    p   X  ,     1 , , F G exp  

n

(7.7)

p where X F ,G is the updated analytical coupled response at the fixture interface for a given p pq q excitation at node q, and the experimental response is found from X F ,G , exp  H G , exp FG , exp . Eq.

(7.7) is calculated at frequencies ranges away from experimental resonances and antiresonances, as well as noisy regions. The pose-dependent absolute resonance and antiresonance frequency errors between the analytical model and experimental values in Eq. (7.6) are computed from:

n,l ,error     abs 

 n ,l     n ,l ,exp        n ,l ,exp     

      ar ,m ,exp     ar ,m ,error     abs  ar ,m    ar ,m,exp     

(7.8)

Eq. (7.8) is computed at drive-point measurements only, to account for the maximum number of antiresonances possible. From observing Eq. (7.2) during the updating process, if an analytical resonance (or antiresonance) frequency is far from the experimental value, small changes in the objective function might occur since the base-10 logarithm is used. This is especially true for the cases of highly damped modes, or if n used in Eq. (7.2) is low and the modes have low damping (sharp peaks). Therefore, the constraints in Eq. (7.8) are used to enforce a trust region for acceptable resonance and antiresonance errors, as well as improve FRF matching using the GA. Typically, resonance errors are also minimized in objective functions. However, measured resonance frequencies may be inaccurate due to the resolution of measurements or highly damped modes. Thus, the constraints in Eq. (7.8) can have tolerances based on the level of uncertainty in the experimental data. Also, constraining the errors at discrete resonance frequencies is opposed to traditional methods that constrain the average of all the resonance frequency errors, which may not account for individual resonance frequency shifts in the analytical model. This measure can essentially improve GA stability for the solutions of updated FRFs. Furthermore, the phase difference is not accounted for in the objective function in Eq. (7.2) since the experimental phase angle is extremely sensitive to small noise fluctuations found 163

in the complex parts of the experimental FRFs as shown in Fig. 7-2. Therefore, the phase of the updated FRF may either tend to approach perfect phase correlation, or approach a ±180° phase difference from the experimental FRF. In the latter case, the updated FRF is deemed unacceptable, and newly updated FRFs should be re-computed. A ±180° phase difference between experimental and updated FRFs may also indicate that the input/output coordinates for the analytical FRFs may have incorrect signs with respect to the experimental input/output coordinates. This can instead be observed in the signs of the imaginary FRF peaks, which will be different from the experimental imaginary FRF peaks.

Figure 7-2: Large phase angle oscillations due to small noise regions after FRF smoothing (a) Magnitude, (b) Real part, (c) Phase, (d) Imaginary part

The solution of the constrained optimization problem described in Eqs. (7.2) to (7.8) is depicted in Fig. 7-3 to update the uncertain physical model parameters with experimental FRF data.

164

Figure 7-3: Updating process for hinged components with constrained genetic algorithm

First, the uncertain FE model parameters, test poses, and initial estimations for the constraints in Eqs. (7.5) and (7.6) are defined. Afterwards, an initial population containing the initial guesses of the updated parameters, ai, for each component is created using a random number generator

165

bounded by aLB,i and aUB,i. The fitness function in Eq. (7.2) and the constraints in Eqs. (7.5) and (7.6) are then evaluated for each individual in the population. Then, the individuals are ranked according to the smallest values produced from Eq. (7.2) whether or not the constraints in Eq. (7.6) are violated. For each iteration (or GA generation) in the updating process, the genetic operations in Fig. 7-3 (selection, crossover, mutation, and migration [159]) are then computed. The final stage of the GA involves combining the best ranked individuals from the newly formed population (children) with the previous population (parents). The GA termination criteria includes a tolerance on the averaged values for the relative change in each of the best-fit solutions for Eq. (7.2), and a feasibility check for constraint violations in Eqs. (7.5) and (7.6). If a converged solution is not found after a pre-specified maximum number of generations, then the constraints are relaxed by either by enlarging the lower and upper bounds for the updating parameters in Eq. (7.5), or increasing the tolerances in Eq. (7.6), and the process is then repeated. If convergence is still not attained, then the number of updating parameters can also be increased.

7.2 Detection of Analytical Resonances and Antiresonances
One note of concern when solving the resonance or antiresonance eigenvalue problems during model updating is that the is that the analytical CMS model may produce additional resonances or antiresonance frequencies that are not observable in the experimental data. Such instances may arise when the resonance or antiresonance dynamic contributions of unmeasured experimental DOFs (such as rotational hinge DOFs) are present in the CMS model within the
pq frequency range of interest, but are not present in  H G ,exp  . The problem is further affected by

the presence of highly damped resonances or antiresonances in the experiment data, where the experimental imaginary and real FRF peaks (at the resonances) or the minimum FRF magnitudes (at the antiresonances) can lie within the noise levels, which makes the experimental identification of these frequencies difficult. Also, the existence of out-of-plane modes might be present in the experimental data if a single-axis accelerometer is not positioned correctly, or if a hammer impact is out of the plane of interest. These issues may lead to incorrect pairing of analytical CMS and experimental resonances/antiresonances for Eq. (7.8).

166

In order to avoid an additional coordinate reduction in the CMS model to remove rotational DOFs (which may lead to further modeling errors), one method to overcome this situation is to detect the experimentally measurable resonances and antiresonances from the analytical CMS model using the multivariate mode indicator function (MvMIF) [171] for each GA individual. The goal here is to match the number of analytical resonances/antiresonances with those that are experimentally available in order to correctly apply Eq. (7.8). The MvMIF is found by solving the following eigenvalue problem for given analytical FRF columns:
pq Re  H G  Re H Gpq   MIF Re H Gpq  Re H Gpq   Im H Gpq  Im H Gpq  T T H





(7.9)

where Re{} and Im{} denote the real and imaginary parts of the analytical FRF column vectors, and the superscript H denotes the Hermitian transpose. Here, the analytical FRF columns only contain entries which coincide with experimentally measured FRF coordinates. The MvMIF is plotted over a range of frequencies in Fig. 7-4 for an example with three different excitation locations and a fixed output coordinate (for roving hammer tests). During the updating process, the analytical CMS resonances and antiresonances for each GA iteration are arranged in ascending order. All resonances and antiresonances that are out of the frequency range of interest are discarded. Then, to determine if the lth analytical CMS resonance can be experimentally captured, given the input/output coordinates p and q, the minimum eigenvalue found from Eq. (7.9), min(MIF), is determined by setting  = n,l in the vector H Gpq  . This avoids solving the MvMIF through the entire frequency range since the only locations of interest are the resonances/antiresonances. If min(MIF) approaches 0, a measurable resonance is detected using the FRFs in H Gpq  , and if min(MIF) approaches 1, the resonance cannot be detected (is highly damped, out-of-plane, or is equal to an antiresonance frequency). Because antiresonance frequencies change with each input-output coordinate, Eq. (7.9) is instead solved for a single
pq which coincides with an experimental measurement location, at input-output FRF location, H G

 = ar,m, to detect if the mth CMS antiresonance can be captured from the FRF term. Therefore, to check for antiresonances using the MvMIF, Eq. (7.9) becomes:

MIF 

pq pq Re  H G   Im  HG  2

pq Re  H G 

2 2

(7.10)

167

The MvMIFs from Eq. (7.10) are plotted for a drive-point, and two cross-point measurements for the example in Fig. 7-4 (labeled MVMIF11, MVMIF12, and MVMIF13). Because the number of antiresonances is greater at drive-point measurements (p = q), it would be more beneficial to compute the antiresonances used in Eqs. (7.8) and (7.10) at drive-points. The overall process is repeated until the number of detected resonances and antiresonances in the analytical FRFs matches those captured by the experimental FRFs (within the frequency range of interest), and their values are then paired for Eq. (7.8). Analytical resonance/antiresonance pairs that are not detected by any MvMIF can then be omitted for the frequency constraints in Eq. (7.8). Nevertheless, this process of identifying the correct frequency pairs for Eq. (7.8) can aid in GA convergence, though it does not guarantee that the current iteration's updated parameters are feasible if the constraints in Eq. (7.8) are violated.

Figure 7-4: MvMIF for an FRF column with three excitation points

7.3 Overview of Component Updating and Testing Method
To implement the updating of serial modular robot component models using experimental FRF data, a building block procedure is proposed, and is described in the following steps: 1. Detach all link and modules from their connection interfaces. 168

2. Perform vibration experiments on the links alone with fixed-free experimental BCs to obtain FRFs from a single pose. Identify the experimental resonance and antiresonance frequencies for Eq. (7.6). 3. Create FE models using the methods from Chapter 6 to match the experimental test conditions. Update the uncertain FE model parameters for each link to satisfy Eqs. (7.2) to (7.8) for reduced component models. 4. Perform vibration experiments on the joints alone (with one end fixed, the other end free), testing each joint in multiple poses. If the joint geometry is too complex and does not permit the placement of accelerometers or locations for force impacts, attach the tested link module to its respective joint module, then attach the sub-assembly at the base of the joint to a fixture (or a rigid base). Afterwards, obtain experimental FRFs with input/output points along the sub-assembly for multiple poses to identify structural dynamic pose-dependencies in the joints, and identify experimental resonance and antiresonance frequencies for Eq. (7.6). 5. Create reduced CMS models of the experimental joint-link assembly, then update all remaining unknown FE model parameters to satisfy Eqs. (7.2) to (7.8). 6. Repeat steps 4 and 5 for the remaining joints and links. Joint components that are shared with other adjacent links only need to be updated once and their updated models can be included when updating adjacent substructures. 7. With all component models updated, CMS assembly of the components in any required pose can be performed for further virtual testing if required.

7.3.1 Assembled Model Correlation
After each component's model parameters are updated using the above procedure, to compare the initial FE model estimates and updated CMS models with experimental data for each test, two global model (instead of local DOF) correlation tools are utilized. Since the presented model updating method mainly uses FRF data, the primary correlation criterion used is the frequency domain assurance criterion (FDAC) [172] which is defined by the cosine between complex analytical and experimental FRFs :

169

FDAC a ,  x  

pq Re  H G a  pq G a

H   H



H

H

pq G ,exp

x 

pq G , exp

x 



(7.11)

where a corresponds to the frequency where the analytical complex FRF vector is calculated, and x is the frequency where the experimental FRF was measured. In general, the FDAC is a measure of shape correlation between FRFs at specific frequencies across the full spatial domain and its values can vary between -1 and 1. When a = x, if all FDAC values are equal to 1 across a given frequency range, then the FRFs are perfectly correlated and in phase with each other. An FDAC value of -1 indicates perfect correlation with a 180° phase lag and FDAC values near zero indicate little or no correlation. In order to measure the correlation between the analytical and partially measured experimental modal vectors, the partial modal assurance criterion (PMAC) [173] is utilized:

PMACr 

CMS r CMS r exp 
H

CMS r exp r
H

2

H r

exp 

(7.12)
r

where the rth modal vectors for the analytical model, {CMS}r, only contain terms coinciding with the measured modal contributions. Unlike the regular MAC, the PMAC uses only a subset of each modal vector to check the linear proportionality between measured and analytical modal vectors. In Eq. (7.12), the resulting coefficients vary between 0 and 1, with 0 indicating no correlation, and 1 indicating perfect correlation.

7.4 Case Study - Adjustable Modular Linkage System
To assess the effectiveness of the proposed method, the procedure in Sections 7.1 to 7.3 was carried out for a small experimental modular linkage system with adjustable joints and separable links, intended to simulate the example serial modular robot in Section 6.7 in a cost-effective manner. When the linkage is assembled, all joint axes are parallel, thus only planar motion poses are considered. Also, force impacts and accelerometer motions were only observed in a single plane. The goal here is to update all uncertain FE parameters for hybrid CMS reduced models with experimental FRF data from link fixed-free and joint-link fixed-free component tests.

170

7.4.1 Analytical Component Model Description
The assembled modular linkage system's CAD model is shown in Fig. 7-5(a). In total, there are 17 components, including added virtual springs at the interfaces of each component, to account for connection flexibility. The connection interfaces for each component are identical and are accomplished using M6×1 threads. The assembly is mounted on a heavy breadboard table, which matches the connection interface threading for the components. As a result, the individual components can be tested directly on the breadboard table with their natural connectivity conditions. Each joint substructure consisted of a rod eye secured to a joint clevis using a precision shoulder screw (components 1 to 3, 7 to 9, and 13 to 15 in Fig. 7-5(a)). The link substructures were made of rods with threaded ends connected to a coupling link (components 4 to 6, 10 to 12, and 16 & 17). By tightening the shoulder screws at high torques, the friction forces between the inner faces of the joint yokes and outer faces of the rod eye are sufficient to hold the linkage system in place for low-impact testing. Each time the joints were tightened for vibration tests, the torques on the shoulder screws were kept close to 10 N-m (~7.4 lb-ft) using a small torque wrench. To change the joint angular positions, the shoulder screws were loosened, and the desired angle was adjusted using a protractor as a reference, as well as a measurement of the link(s) height (due to a lack of available high-precision position sensors). Also, the threaded ends of the links and joint clevis yokes were wrapped with five layers of Teflon thread sealing tape for tightening and easy removal (instead of using thread-locking fluid). It is important to note that tightly fastened threads suppress the nonlinear behavior of joints/connections [174]. Therefore, the connections exhibit linear stiffness behavior.

171

Figure 7-5: (a) CAD model of assembled modular linkage system, (b) Close-up view of joint

For FE modeling, all links were modeled as Euler-Bernoulli beams (with no geometric nonlinearities, due to low impact testing loads), and all other structural parts (couplings, rod eyes and clevis yokes) were modeled as Timoshenko beams, due to their higher thickness to length ratios. All shoulder screws and nuts were modeled as non-structural lumped masses. Also, the connections between the rod eyes and joint yokes were assumed to be rigid, since the joints were tightly fastened. The additional rod eye at the end of link 3 is modeled as a rigid link. The FE discretization is for each component shown in Fig. 7-6. To include connectivity stiffness at the rod eye/link interfaces, and the coupling/joint yoke interfaces, a linear virtual spring was attached at the threaded portions of the of the links and joint yokes (components 1, 4, 7, 10, 13 and 16). These virtual springs included uncoupled local translational stiffness (ky) and torsional stiffness (k), while the axial stiffness terms (kx) were assumed to be rigid. Also, the virtual spring stiffness values were assumed to be constant over the frequency range. It is further assumed that all structural elements have stiffness proportional viscous damping, and all virtual springs have proportional structural damping.

172

When testing the separated link and joint substructures, the threaded portions that are secured to the breadboard table exhibit flexibility due to the virtual springs, and are therefore included in the B stiffness partition of Eq. (6.9) at the component's interface. However, when computing the normal modes during substructure tests with fixed-free BCs, the effects of the added mass at the threaded regions (as shown for components 7 and 10 in Fig. 7-7, for example) are assumed to be negligible at the B interface coordinate sets since these regions are completely fixed to the breadboard table. Also, at the free nodes of the link couplings during substructure tests (E coordinates), the effects of the added mass from the adjacent threaded regions of the next joint's clevis yoke are not present. Therefore, the component mass matrices are initially partitioned in the same form of Eq. (6.9) during the substructure tests, but need to be modified before CMS assembly to include the added effects of the untested masses due to the threaded regions of the adjacent connecting components.

Figure 7-6: Component FE discretization

To include the added (previously untested) masses to the ith component before CMS assembly occurs, the following modified local mass matrix is used:  M BB ,e,i    M IB ,e ,i   M EB ,e,i
M BI ,e,i M II ,e ,i M EI ,e,i

M e ,i

  M IE ,e,i  M EE ,e,i  M BB ,e,i 1  
M BE ,e,i

(7.13)

where MBB,e,i is the previously untested mass (at the threaded regions) for the next consecutive component. Eq. (7.13) must be applied for components 3, 6, 9 and 12 before CMS assembly. The

173

mass of the untested threaded regions can be determined by weighing the components, then using a solid CAD model to estimate the volume. By doing this, the mass of the threaded regions of the joint yokes were determined to be 4.34×10-3 kg, and 8.62×10-4 kg at the fixed portions of the rod ends. Also, the masses of the joint shoulder screws were measured to be 0.0067 kg (including the M5 hex nuts), and the M6 hex nuts attached to the ends of the rods were measured to be 0.0021 kg. Because the accelerometer is large relative to the components being tested, it was modeled as a rigid link with an offset mass (measured to be 0.0076 kg) located at its CG (as determined from a CAD model and manufacturer drawings), and can be added or removed from the models in a similar fashion to Eq. (7.13). For all tests, the orientation the rigid accelerometer was measured relative to the local coordinate system of the component it was attached to.

Figure 7-7: Substructure tests for components 7 to 12, (a) Link and coupling, (b) Joint, link and coupling in different link poses

For model reduction purposes during component tests, the three link component sets (4 to 6, 10 to 12, and 16 & 17) can be reduced to three individual substructures since the orientations of their adjacent components do not change relative to one another. When a joint is added for testing (as shown in Fig. 7-7(b)), these substructure sets also include the rod eye components (3 to 6, 9 to 12, and 15 to 17), while the joint yokes remain as separate substructures (1 & 2, 7 & 8,

174

and 13 & 14). Therefore, when CMS assembly occurs, there are six separate substructures, which are numbered accordingly in Table 7-1. The assembled full FE model contains 234 DOF and the hybrid reduced CMS assembly contains 51 DOF. The initial analytical model parameters for the structural components are given in Table 7-2. For this initial model, it is assumed that the virtual springs are rigid. Also, the densities of each component were obtained by weighing them, then estimating the their volumes from a CAD model.
Table 7-1: FE parameters for each substructure # of Full Model Elements for Each Component
1 2 2 1 20 4 1 2 2 1 16 4 1 2 2 1 16 78

Component
1 2(2×) 3 4 5 6 7 8(2×) 9 10 11 12 13 14(2×) 15 16 17 Totals:

# of DOFs for Each Unassembled Component (No BC's)
6 9 9 6 63 15 6 9 9 6 51 15 6 9 9 6 51 285

# of DOFs for Full FE Model (BC's Included)
9

# of Kept Modes for Hybrid CMS Reduction
4

# of DOF After CMS Reduction (BC's Included)
7

Substructure #
1 (Joint 1) 2 (Link 1) 3 (Joint 2) 4 (Link 2) 5 (Joint 3) 6 (Link 3)

84

10

16

12

4

10

72

7

13

12 60 234

4 7 36

10 10 51

-

Table 7-2: Initial analytical model parameters Geometric Parameters Component L [mm] bo [mm] ho [mm] ro [mm] Material Parameters  [kg/m3] E [GPa] Proportional Damping Parameters  [s]

2(2×) 17.5 3 12 7496.96 205 1×10-5 3 16 6 8 5* 2766.71 69 3×10-5 5 181 2.65 7784.94 207 1×10-5 6 37 20 15 2711.27 69 3×10-5 8(2×) 17.5 3 12 7496.96 205 1×10-5 9 16 6 8 5* 2766.71 69 3×10-5 11 106 -2.65 7823.98 207 1×10-5 12 38 6** 7947.37 205 1×10-5 14(2×) 17.5 3 12 7496.96 205 1×10-5 15 16 6 8 5* 2766.71 69 3×10-5 17 120 2.65 7828.70 207 1×10-5 *Located at rounded part of rod eyes, **Denotes hexagonal side length, Poisson's ratio is 0.33 for aluminum and 0.29 for steel

175

7.4.2 Component Experiments and Updating
7.4.2.1 Experiment Setup and Component Tests For all experiments in this example, roving hammer and accelerometer tests (single-input, single-output) were performed. An adhesive was used to mount the accelerometer. Details of the equipment used, the test parameters, and data processing are given in Appendix C. Throughout all tests, it was ensured that the hammer impacts remained less than 40 N, to prevent the tightly fastened joints from becoming loose and also to avoid accelerometer overloads. Also, a higher than usual frequency range (0-2000 Hz) was chosen since testing individual mechanism components produce resonances at higher frequencies. At each measurement coordinate pair, the results of ten impacts were recorded to check for linearity and repeatability, and the average of at least five impacts were used to generate the FRFs with the H1 method in Appendix C to reduce accelerometer noise (since the hammer noise was mostly eliminated using a force window). Also, additional smoothing of the real and imaginary FRFs was conducted for each data set in separate frequency ranges where noise was still prevalent. The first components to be tested were the link substructures (2, 4, and 6 in Table 7-2) with fixed-free BCs, shown in Fig. 7-8. For these tests, the threaded rod ends were secured to the breadboard table, and excited at four locations. For the links with couplings (components 6 and 12), the accelerometer was placed at a quarter of their lengths from their base. This coincided with the first interior node for those components, and drive-point measurements were taken in the opposite direction. Afterwards, the respective joints were attached to the bases of the link substructures and tests were performed for three poses, based on the relative link orientations (at 0°, 45° and 90°) with respect to the global coordinate frame in Fig. 7-7. For these joint-link tests, the accelerometer locations were the same as those for the link component tests. Overall, for each separate component test, four FRFs were obtained. Because the joint-link components were tested in three poses, these tests yielded 12 FRFs.

176

Figure 7-8: Fixed-free experimental tests, (a) Components 4 to 6, (b) Components 10 to 12, (c) Components 16 and 17

Figure 7-9: Joint-link fixed-free experimental tests, (a) Components 1 to 6 (joint 1 & link 1), (b) Components 7 to 12 (joint 2 & link 2), (c) Components 13 to 17 (joint 3 & link 3)

177

7.4.2.2 Component Parameter Updating For all components, the stiffness and damping parameters are to be updated, since they are directly unmeasurable. For the virtual springs, these include the translational and rotational spring terms, along with structural (hysteretic) proportional damping constants. For the remaining components, the updating parameters consisted of Young's modulus (E) and the stiffness-proportional damping constants (). The upper and lower bounds for each of the updating parameters in Eq. (7.5) are given in Table 7-3. For the link tests, en in Eq. (7.8) was set to  2% for each resonance frequency, and for the hinged substructure tests, en set to  3%. All antiresonance frequency constraints, ear were set to  5% and the number of frequency increments in Eq. (7.2) was set to n = 200 for each test case. These points were evenly distributed throughout each FRF curve in separate ranges at least 10 Hz away from resonance frequencies. Because the antiresonance frequencies change with different measurement points, only the antiresonances at drive-point measurements were used in the updating process. Also, since the experimental antiresonances are mainly found in noisy regions of FRFs, their corresponding error constraints were set higher than those of the resonances.
Table 7-3: Upper and lower bounds for updating parameters Components 2,5,8,11,12,14,17 3,6,9,15 1,4,7,10,13,16 Updating Parameter E [GPa]  [s] E [GPa]  [s] ky [N/m] k [N-m/rad]  Lower Limit 170 1×10-7 65 1×10-7 1×105 1×102 1×10-4 Upper Limit 220 1 75 1 1×1012 1×1010 10

The GA parameters used for this case study are found in Table 4-1, with the exception that the initial population was set to 50, and an additional tolerance of 10-7 was added for the nonlinear constraints in Eq. (7.8). Due to the variability in converged GA solutions, a total of ten converged GA runs were computed for each test case. Afterwards, each solution was ranked from 1 (best) to 10 (worst) for the lowest eFRF in Eq. (7.2) and highest FDAC and PMAC values in Eqs. (7.11) and (7.12), respectively. The ranked solutions were then added, and the final solution was chosen as the one with lowest combined ranking score. Using the data from the link fixed-free tests, the parameters for substructures 2, 4, and 6 in Table 7-1 were updated first. Afterwards, using the data from the joint-link tests in multiple poses, the remaining joint 178

components were updated. The average GA computation times for the link tests, and joint-link tests were 282 s and 376 s, respectively. Table 7-4 gives the updated component parameters for the hybrid CMS model.
Table 7-4: Updated FE model parameters adjustable linkage case study Component 1 2(2×) 3 4 5 6 7 8(2×) 9 10 11 12 13 14(2×) 15 16 17 Material Parameters E [GPa] 175.3526 68.5431 190.5239 65.8349 187.9652 66.1740 203.7814 217.4572 172.6921 69.8782 194.3489 Virtual Spring Parameters k ky [N/m] [N-m/rad] 5.4357×105 915.9897 1.2928×107 1.4873×103 4.8462×105 1.1841×103 9.4959×106 1.3395×103 6.2758×105 991.1080 1.3982×107 2.0212×103 Proportional Damping Parameters   [s] 1.2784×10-3 -5 2.6819×10 1.6457×10-5 8.0754×10-4 4.8913×10-6 9.3647×10-5 1.5875×10-3 1.4651×10-5 9.9238×10-5 3.8362×10-3 2.2630×10-6 6.6595×10-6 4.3674×10-3 3.4154×10-5 5.5572×10-4 5.6177×10-3 9. 4033×10-6 -

Fig. 7-10 shows the results of the updated hybrid-reduced component models for selected drive-point accelerance magnitude FRFs in the link local coordinate frames, |Ha()|e = |(j)2H()|e, compared to those of the initial model estimates and experimental data. In Fig. 710(a) to (c) the drive-point FRFs are shown for the tests with the links alone, and in Fig. 7-10(d) to (e), cross-point measurements (with excitations at the middle node of each link) are shown for each joint-link test in selected poses.

179

Figure 7-10: Comparisons of initial model, updated model and experimental FRFs for component tests, Drive-point FRFs: (a) Link 1, (b) Link 2, (c) Link 3, Cross-point FRFs: (d) Joint 1 & 1ink 1 (90°), (e) Joint 2 & link 2 (45°), (f) Joint 3 & Link 3 (0°)

180

Fig. 7-10(d) shows the joint-link test with the lowest overall first natural frequency and shows the joint-link test with the highest first natural frequency of all poses tested. It can be observed that for all test cases, the updated FRFs yield significant improvements over the initial model FRFs for the entire frequency range, due to the fact that the imposed nonlinear constraints aided the GA in obtaining feasible, yet accurate solutions. For the individual link (alone) tests, the differences between the updated and analytical drive-point FRFs are more profound near the last captured resonance frequency for each case. Tables 7-5 and 7-6 compare the measured resonances (obtained from the real parts of the experimental FRFs, for proportional damping) and antiresonances (from experimental FRF magnitudes) for each component test case.
Table 7-5: Comparison of component experimental resonances with initial and updated models
Substructure Test Case 1) Link 1 alone 2) Link 2 alone 3) Link 3 alone Mode # 1 2 3 1 2 1 2 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 1 2 3 1 2 3 1 2 1 2 1 2 Experiment [Hz] 39.04 383.31 1151.42 70.34 726.26 102.44 785.92 37.72 365.68 954.87 1161.54 36.81 358.63 951.92 1338.87 35.94 355.69 946.90 1674.06 62.26 621.73 1209.41 60.52 606.02 1415.30 60.19 587.95 1580.93 88.44 692.47 86.68 648.41 85.93 623.20 In-Plane Resonance Frequencies Updated Initial Relative Model Model Error % [Hz] [Hz] 41.65 6.69 38.64 418.78 9.25 386.95 1232.56 7.05 1138.74 76.55 8.83 70.71 780.01 7.40 722.30 119.06 16.22 101.98 945.82 20.35 784.92 39.31 4.22 36.69 392.90 7.44 361.01 1133.80 18.74 970.45 1631.02 40.42 1180.79 39.23 6.57 36.51 389.37 8.57 352.29 1112.31 16.85 967.16 1841.17 37.52 1372.37 39.20 9.07 36.44 388.05 9.10 350.34 1104.67 16.66 962.35 1993.40 19.08 1718.84 73.32 17.76 61.73 725.10 16.63 617.69 1777.84 47.00 1188.83 73.04 20.69 61.28 712.09 17.50 599.30 1853.78 30.98 1373.32 72.92 21.15 61.08 708.65 20.53 595.90 1915.04 21.13 1547.53 97.08 9.77 89.04 754.80 9.00 678.91 96.75 11.62 87.84 742.50 14.51 636.24 96.62 12.44 87.36 731.99 17.46 612.09 Relative Error % -1.02 0.95 -1.10 0.53 -0.55 -0.45 -0.13 -2.73 -1.28 1.63 1.66 -0.81 -1.77 1.60 2.50 1.39 -1.50 1.63 2.67 -0.85 -0.65 -1.70 1.26 -1.11 -2.97 1.48 1.35 -2.11 0.68 -1.96 1.34 -1.88 1.66 -1.78

4) Joint 1, link 1 (0°)

5) Joint 1, link 1 (45°)

6) Joint 1, link 1 (90°)

7) Joint 2, link 2 (0°)

8) Joint 2, link 2 (45°)

9) Joint 2, link 2 (90°) 10) Joint 3, link 3 (0°) 11) Joint 3, link 3 (45°) 12) Joint 3, link 3 (90°)

181

Table 7-6: Comparison of component experimental antiresonances with initial and updated models
Substructure Test Case 1) Link 1 alone 2) Link 2 alone 3) Link 3 alone 4) Joint 1, link 1 (0°) In-Plane Antiresonance # 1 2 1 1 1 2 3 1 2 3 1 2 3 1 2 1 2 1 2 1 1 1 In-Plane Drive-Point Antiresonance Frequencies Updated Initial Relative Relative Experiment Model Model Error % Error % [Hz] [Hz] [Hz] 381.86 414.40 8.52 384.59 0.71 1064.02 1147.38 7.83 1079.70 1.47 682.81 744.49 9.03 670.34 -1.83 748.44 888.82 18.76 753.16 0.63 365.00 392.81 7.62 360.64 -1.19 948.44 1088.97 14.82 935.42 -1.37 1105.94 1616.14 46.13 1145.21 3.55 354.44 389.08 9.77 350.51 -1.11 940.13 1070.61 13.88 928.40 -1.25 1305.31 1792.86 37.35 1333.37 2.15 352.95 387.87 9.89 347.91 -1.43 933.13 1062.00 13.81 922.83 -1.10 1610.94 1975.34 22.62 1636.28 1.57 617.19 706.67 14.50 608.19 -1.46 1201.56 1735.83 44.46 1180.52 -1.75 599.69 695.39 15.96 591.32 -1.40 1341.88 1756.14 30.87 1334.36 -0.56 580.13 692.26 19.33 588.17 1.39 1420.94 1785.71 25.67 1457.91 2.60 648.13 732.84 13.07 654.34 0.96 600.63 720.38 19.94 612.59 1.99 571.88 710.62 24.26 590.35 3.23

5) Joint 1, link 1 (45°)

6) Joint 1, link 1 (90°) 7) Joint 2, link 2 (0°) 8) Joint 2, link 2 (45°) 9) Joint 2, link 2 (90°) 10) Joint 3, link 3 (0°) 11) Joint 3, link 3 (45°) 12) Joint 3, link 3 (90°)

For these component tests and respective analytical models, the updated results show good resonance and antiresonance frequency correlations with respective maximum absolute errors of 2.97% and 3.55%, compared to those of the initial analytical model (47% and 44.46%). It is shown for the joint-link tests in different poses that the pose-dependency of the joints affect the first resonance frequencies slightly, as compared to the higher resonances. Further GA runs for each joint-link component test were attempted with reduced resonance error constraints to  1%, but the after ten attempts, the GA did not successfully converge for each case. However, since the resonance errors of the existing updated models showed improvements over the initial models, they were deemed acceptable for this study. Note that amplitude correlations at the resonances were omitted in this study since the amplitudes of the experimental resonances with low damping are limited by the chosen frequency increments (0.3125 Hz). Table 7-7 shows the PMAC and mean FDAC correlation values, computed between the analytical models and the experimental data at the measured DOFs. The partial experimental mode shapes were extracted from the imaginary FRF peaks of the measured coordinates on the links and compared to those from the corresponding DOFs in the analytical modal vectors. The results in Table 7-7 show that the first partial mode shape for both models are well correlated. However, the updated models 182

have better mode shape correlations for the higher modes. The mean FDAC values, computed at a = x over the entire frequency range, indicate that the updated models show a significant improvement over the initial models. The lowest mean FDAC value for the component tests is 0.7347 for the initial model, compared to 0.9462 for the updated model. Overall, the FDAC is a more reliable correlation tool for this study than the PMAC since it is computed at all frequency points, rather than the resonance frequencies alone.
Table 7-7: PMAC and Mean FDAC values for initial and updated component models
Substructure Test Case 1) Link 1 alone 2) Link 2 alone 3) Link 3 alone Mode # 1 2 3 1 2 1 2 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 1 2 3 1 2 3 1 2 1 2 1 2 Initial Model Mean PMAC FDAC 0.9911 0.8964 0.9289 0.9031 0.9892 0.9193 0.9044 0.9391 0.9096 0.8933 0.9936 0.8433 0.7440 0.9854 0.6678 0.9989 0.8395 0.7347 0.9353 0.6950 0.9993 0.8171 0.7493 0.9001 0.6253 0.9904 0.7978 0.9345 0.5222 0.9835 0.7875 0.9242 0.5234 0.9947 0.7754 0.9233 0.6014 0.9911 0.7803 0.9764 0.9988 0.7841 0.9641 0.9910 0.7762 0.9783 Updated Model Mean PMAC FDAC 0.9927 0.9867 0.9924 0.9908 0.9934 0.9879 0.9947 0.9992 0.9812 0.9956 0.9964 0.9948 0.9892 0.9957 0.9896 0.9983 0.9933 0.9854 0.9912 0.9805 0.9981 0.9920 0.9827 0.9910 0.9879 0.9988 0.9622 0.9941 0.9754 0.9990 0.9647 0.9977 0.9765 0.9992 0.9690 0.9962 0.9722 0.9990 0.9483 0.9891 0.9920 0.9599 0.9914 0.9984 0.9462 0.9877

4) Joint 1, link 1 (0°)

5) Joint 1, link 1 (45°)

6) Joint 1, link 1 (90°)

7) Joint 2, link 2 (0°)

8) Joint 2, link 2 (45°)

9) Joint 2, link 2 (90°) 10) Joint 3, link 3 (0°) 11) Joint 3, link 3 (45°) 12) Joint 3, link 3 (90°)

7.4.3 Assembly Verification Experiments
Assembly tests for the linkage system were conducted to validate the updated component models for four different poses, as shown in Fig 7-11. These tests were conducted to check the 183

pose-based dependencies for the assembled components and to validate whether or not the local CMS parameters for each component were updated effectively. Four FRFs were obtained for each pose by exciting the midpoints of each link, as well as a drive-point measurement opposite the accelerometer.

Figure 7-11: Linkage assembly tests in for verification in different poses, (a) Pose #1, (b) Pose #2, (c) Pose #3, (d) Pose #4

Fig. 7-12 shows the results of the cross-point accelerance FRF magnitudes in the local frame of the accelerometer with force excitations at the midpoint of link 3. For each test, resonances and antiresonances that were over 1000 Hz were highly damped and difficult to capture experimentally. The highly damped modes can also be verified for the analytical models by computing MvMIF values close to 1 at the resonance and antiresonance frequencies. The updated model results in Fig. 7-12 show clear improvements over the initial model between 200 and 1000 Hz for all poses. The resonance and antiresonance frequency errors are given in Tables 7-8 and 7-9. It is shown that the updated model has minimum resonance and antiresonance errors of 0.52% and 0.40%, and maximum errors of 13.89% and 4.13%, respectively. This is a major improvement over the initial model which has minimum resonance and antiresonance errors of 1.12% and 6.94%, and respective maximum errors of 46.19% and 25.05%. Note that the last captured resonance for pose #1 contained the highest updated model error. However, all modes within 1000 Hz have relatively low errors. For acceptable vibration model correlation, NASA recommends resonance frequency deviations of <5% for all modes of interest, while the 184

European Cooperation of Space Standards (ECSS) recommends a more stringent requirement of <3% [175]. Although the updated model failed to meet the ECSS requirement for six resonances, the initial model satisfied this requirement for only one resonance.

Figure 7-12: Comparisons of initial model, updated model and experimental cross-point FRFs for hybrid CMS method (a) Pose #1, (b) Pose #2, (c) Pose #3, (d) Pose #4

185

Table 7-8: Comparison of assembly experimental resonances with initial and updated CMS models
Assembly Configuration Test Case Mode # 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 1 2 3 4 5 6 7 Experiment [Hz] 7.08 48.01 130.36 226.82 457.93 968.60 1912.06 7.42 41.73 126.98 230.45 432.73 711.26 849.77 1019.93 9.68 29.12 104.73 279.66 489.02 697.92 898.09 10.14 33.17 92.47 271.30 518.15 714.37 868.03 In-Plane Natural Frequencies Initial Updated Relative Model Model Error % [Hz] [Hz] 8.17 15.48 7.26 52.30 8.94 46.60 151.07 15.89 131.48 252.65 11.39 224.48 519.55 13.46 468.72 1095.42 13.09 948.86 1890.63 -1.12 1646.39 8.72 17.54 7.75 47.06 12.77 42.23 145.56 14.63 125.95 258.03 11.97 224.56 497.69 15.01 442.96 807.20 13.49 695.94 1042.93 22.73 871.28 1491.06 46.19 993.47 10.40 7.44 9.26 32.39 11.23 28.65 120.02 14.60 105.40 306.21 9.49 274.65 579.69 18.54 493.17 858.75 23.04 701.57 1015.16 13.04 874.82 11.05 8.97 9.81 36.47 9.95 32.26 109.93 18.88 95.69 291.97 7.62 260.39 613.55 18.41 522.66 859.44 20.31 731.46 973.22 12.12 850.14 Relative Error % 2.61 -2.94 0.86 -1.03 2.36 -2.04 -13.89 4.46 1.20 -0.81 -2.56 2.36 -2.15 2.53 -2.59 -4.34 -1.61 0.64 -1.79 0.85 0.52 -2.59 -3.26 -2.74 3.48 -4.02 0.87 2.39 -2.06

Pose #1 ( = [90°,90°,90°])

Pose #2 ( = [30°,45°,90°])

Pose #3 ( = [135°,45°,0°])

Pose #4 ( = [90°,15°,-90°])

Table 7-9: Comparison of assembly experimental antiresonances with CMS models
Assembly Configuration Test Case In-Plane Antiresonance # 1 2 3 4 5 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 Experiment [Hz] 34.69 116.56 212.50 444.06 918.44 22.81 107.81 222.50 428.75 708.13 839.38 17.19 78.75 267.19 472.50 678.44 819.69 10.00 59.69 262.19 519.38 742.19 859.06 In-Plane Drive-Point Antiresonance Frequencies Updated Initial Relative Model Model Error % [Hz] [Hz] 37.81 9.00 33.44 131.62 12.92 114.43 236.29 11.20 210.91 508.14 14.43 457.22 1083.06 17.92 936.90 26.24 15.02 23.49 122.80 13.90 106.90 245.67 10.41 213.43 489.79 14.24 435.87 806.90 13.95 695.60 1025.34 22.16 856.90 19.38 12.74 16.88 90.17 14.50 78.44 287.85 7.73 260.05 572.80 21.23 484.43 848.42 25.05 685.94 996.93 21.62 850.36 11.25 12.50 10.04 70.93 18.84 61.25 280.38 6.94 251.37 605.63 16.61 514.43 844.12 13.73 713.72 959.10 11.65 834.11 Relative Error % -3.60 -1.83 -0.75 2.96 2.01 2.97 -0.85 -4.08 1.66 -1.77 2.09 -1.80 -0.39 -2.67 2.52 1.11 3.74 0.40 2.62 -4.13 -0.95 -3.84 -2.90

Pose #1 ( = [90°,90°,90°])

Pose #2 ( = [30°,45°,90°])

Pose #3 ( = [135°,45°,0°])

Pose #4 ( = [90°,15°,-90°])

186

Table 7-10 lists the PMAC and FDAC values for the hybrid CMS assembled test poses. The updated model shows excellent PMAC correlations for the lower modes. Although this is still lower than the PMAC values obtained from the updated component tests, the minimum PMAC value of 0.9049 indicates that the updated model's mode shapes are well correlated. The updated model's mean FDAC values show large improvements over those for the initial models and the lowest FDAC value occurs for pose #4 (0.9317), which represents good point-to-point FRF correlation.
Table 7-10: PMAC and Mean FDAC values for initial and updated CMS models
Assembly Configuration Test Case Mode # 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 1 2 3 4 5 6 7 PMAC Initial Model Mean FDAC 0.9719 0.7324 0.7270 0.7092 0.8147 0.8256 0.6541 0.6020 0.9597 0.8003 0.9674 0.7922 0.6949 0.6557 0.4218 0.6892 0.3371 0.9819 0.7482 0.8358 0.6573 0.8289 0.4505 0.7825 0.7622 0.9310 0.7968 0.7212 0.6493 0.7159 0.6797 0.6538 0.4942 PMAC Updated Model Mean FDAC 0.9774 0.9630 0.9918 0.9454 0.9842 0.9837 0.9909 0.9107 0.9638 0.9724 0.9853 0.9565 0.9366 0.9493 0.9467 0.9286 0.9049 0.9936 0.9910 0.9686 0.9390 0.9305 0.9113 0.9311 0.9668 0.9889 0.9905 0.9492 0.9317 0.9578 0.9182 0.9319 0.9454

Pose #1 ( = [90°,90°,90°])

Pose #2 ( = [30°,45°,90°])

Pose #3 ( = [135°,45°,0°])

Pose #4 ( = [90°,15°,-90°])

Overall, the obvious decrease in assembly model correlations, though small, are most likely contributed to error propagation when assembling the updated component models, since the updated components themselves are not perfectly correlated. Also, unavoidable experimental errors such as misaligned impact strikes, unnoticeable data leakage or large amounts of noise in the FRFs may contribute to the level of uncertainty in the test-analysis correlations.

187

7.5 Case Study - Landing Gear Assembly
To convey the versatility of the testing and updating method in this chapter, experiments were carried out for a simplified landing gear model with two separable links. Because the links are connected by passive joints (instead of active, or lockable joints as in MRR modules), the experimental BCs involve fixing the joints at opposing ends of the link. Because of this, the hybrid CMS method is inapplicable for comparing the analytical model using the experiment BCs. Therefore, the Craig-Bampton method is used instead. Also, to test for pose dependencies of the link, the height of one of the fixtures, as well as the base distance needs to be adjustable. Furthermore, the effects of fixture flexibility may hamper the updated model's results. Thus, the fixture stiffness terms should be included as additional updating parameters, then removed for CMS assembly.

7.5.1 - Analytical Component Model Description
A CAD model of the experimental landing gear is shown in Fig. 7-13 in an inverted position for mounting on a heavy breadboard table situated on the ground for vibration testing. For simplicity, there were no additional shock struts or actuators. Each component (labeled 1 to 11) is assembled to form a beam stick model as shown in Fig. 7-13 (overlaying the CAD model). To change the configuration of the landing gear, the four bolts securing the adjustable hinge (component 11) are removed and the hinge is repositioned to another location and re-secured to the breadboard table, thus changing the distance between the hinges, r1 in Fig. 7-13, while the other hinge (component 1) remains fixed to the base. Therefore, the structure can be made to resemble slider-crank mechanism configurations. The main strut substructure in Fig. 7-13 consists of a bushing (component 2) which is connected to the base hinge, lower main strut (component 3), upper main strut (component 4), wheels, axle (component 5) and middle hinge, which is subdivided into two components (components 6 & 7) since this part is shared with the drag brace for the hinged tests. Components 3 and 4 are actually parts of a single beam. The drag brace assembly consists of two bushings (components 8 and 10) situated within the ends of the drag brace (component 9). Each of the structural metallic components (axle, links, and joint hinges) were discretized using Timoshenko beam finite elements with equivalent Rayleigh proportional viscous damping. Because the simplified test model in Fig. 7-13 was not designed with additional lateral support beams (side braces) for stability in the XG-ZG plane, experimental 188

excitations and measurements were only conducted in the XG-YG plane. In this case, the FE model of the setup in Fig. 7-13 can be reduced to an equivalent 2-D model by directly eliminating the terms related to the translational and rotational DOF that are outside of the XGYG plane. This leads to each node containing one rotation and two translational DOF.

Figure 7-13: Stick model of assembled experimental landing gear

For the movable rotary joints (middle joint shown in Fig. 7-14), two flange-sleeve polymer bushings were press-fit into the ends of each link and were supported with precision-machined shoulder screws acting as pins. The shoulder screw in Fig. 7-14(a) also had transitional interference fits with the hinge and bushings. Also, the middle joint hinge was secured to the main strut link using two screws with full threads cut through the link. For FE modeling, the non-structural masses (screws and wheels) were modeled as lumped masses. The mass of each screw connecting the middle hinge to the main strut was 0.0065 kg, the joint shoulder screws 189

were 0.0125 kg each, and each wheel was 0.298 kg. The zero-clearance bushings were modeled as a series of equivalent radial/torsional springs and dampers, as shown in Fig. 7-14(c). The local radial and torsional stiffness terms of the bushings are given by [176]:
k x ,bushing  k y ,bushing 

7 2

ln

  
ro ri 3 2

10 GL
ro2  ri2 ro2  ri2



(7.14)

k ,bushing 

4 ri 2 ro2GL ro2  ri 2

(7.15)

Figure 7-14: (a) Polymer bushings embedded in link, (b) CAD model of middle joint assembly, (c) Bushing stiffness model

To simplify the bushing damping problem, it is assumed that the bushings have stiffness proportional structural damping for each of their DOF. From a material standpoint, this case holds true for the translational DOF as the bushing material compresses under applied loads, but the rotational DOF may experience friction damping if there are large elastic rotations. However, since this study is only concerned with the vibration of the stationary structure, it is assumed that the friction effects are minimal for small linearly elastic rotary deflections. For FE discretization, each of the base hinge components (1 and 11) contain 6 DOF, the main strut assembly (components 2 to 7) contains 162 DOF, and the drag brace assembly (components 8 to 10) contains 105 DOF. Therefore, the full assembled FE model contains 270 DOF with BCs applied. When Craig-Bampton reduction is performed, the main strut assembly is reduced to 24

190

DOF (18 kept normal modes), and the drag brace assembly is reduced to 18 DOF (12 kept modes). Thus, the entire model after CMS assembly is reduced to 45 DOF, which includes the 12 DOF from both of the base hinges (3 kept modes each). The initial FE model parameters for each component are given in Table 7-11.
Table 7-11: Initial landing gear analytical model parameters Geometric Parameters Component 1(2×) 2 3 4 5(2×) 6 7(2×) 8 9 10 11(2×) L [mm] 12.7000 9.5504 260.3500 129.7889 46.0000 17.4625 12.7000 9.5504 313.9382 9.5504 12.7000 bo [mm] 7.9375 15.8750 15.8750 19.0500 7.9375 15.8750 7.9375 ho [mm] 25.4000 15.8750 15.8750 25.4000 25.4000 15.8750 25.4000 ri [mm] 3.1115 3.1115 3.1115 ro [mm] 4.7625 4.7625 4.7625 Material Parameters  E [kg/m3] [GPa] 7870 205 1400 2.41 7870 205 7870 205 7870 205 7870 205 7870 205 1400 2.41 7870 205 1400 2.41 7870 205 Proportional Damping Parameters    [1/s] [s] -5 30 1×10 0.06 30 1×10-5 30 1×10-5 30 1×10-5 30 1×10-5 30 1×10-5 0.06 30 1×10-5 0.06 30 1×10-5 -

*Note: Poisson's ratio, , is 0.29 for the metallic components and 0.4 for polymer bushings

7.5.2 Component Experiments and Updating
7.5.2.1 Experiment Setup and Component Tests The experimental equipment used in this example were the same as the case study in Section 7.4, with the signal analyzer settings and data processing steps given in Appendix C. Though unlike the previous case study, a magnet was used to mount the single-axis accelerometer, and their combined mass was 0.024 kg. The first component to be tested was the drag brace (component 9, without embedded bushings) using a bench vise clamp mounted on the breadboard table as a fixture to mimic cantilevered BCs. The exposed length of the link was 285 mm and five evenly spaced excitation points were distributed along the link, normal to its surface. Of the five excitation locations, the accelerometer was placed at two locations: the tip and base of the link (directly beside the clamp), thereby producing ten measured FRFs. Afterwards, the drag brace assembly (which includes components 6 to 11) was then mounted on the breadboard table and connected to one of two vise clamps in order to test two different global z-axis link orientations: -21.37° for the tall clamp pictured in Fig. 7-15(a) and -7.00° using a short clamp (pictured in Fig. 7-15(b) with the main strut assembly). The exposed portion of the

191

middle hinge included component 7, while component 6 was fully clamped. The accelerometer was first placed at the middle of component 9, at the bottom surface. Then, the excitations in Fig. 7-15(a) were repeated with the accelerometer moved to the bottom of the middle hinge when it was attached to the tall clamp to measure fixture motion. However, when using the short clamp, the accelerometer was placed on the upper surface of the hinge since there was not enough clearance below the hinge; thus, no drive-point measurement of the fixture could be made in that scenario. Overall, the hinged experiments for the drag brace yielded 22 FRFs.

Figure 7-15: Hinged experiment test setup, (a) Drag brace assembly with tall fixture, (b) Main strut assembly with short fixture

For the main strut fixed-free tests, a similar procedure was conducted as the drag brace. However, there were two sets of tests, one with components 3, 4, 5 and 7, and another test with the wheels and axle removed (component 5). For both fixed-free tests, there were a combined 24 measured FRFs. To preserve the natural BC's for the main strut hinged tests, a small link with bushings was attached to a joint pin at the end of component 7, then attached to one of the 192

fixtures, as shown in Fig. 7-15(b). For both short and tall fixtures, component 4 obstructed any possibilities for fixture excitations. Note that in Fig. 7-15(b), there was sufficient clearance between the fixture and the wheels/accelerometer such that none of these components made contact with the top of the fixture when an excitation was applied. The link angles for components 3 and 4 were 14.97° for the short clamp and 35.56° for the tall clamp. There were 18 measured FRFs in total for the hinged main strut. Note that for all tests, the force impacts were kept below 70 N in order to prevent the clamped components from possible slippage. Therefore, the accompanying analytical models assumed bonded contact at the interfaces between the clamped fixtures and components. Also, the four bolts securing the base hinges to the breadboard table were fastened tightly to reduce the chances of any nonlinearities arising from bolt clearances. 7.5.2.2 Component Parameter Updating For all components that are required to be updated, the lower and upper bound constraints in Eq. (7.5) for each updating parameter are shown in Table 7-12. Along with the material properties, the cross-section dimensions of each component were also considered as updating parameters. This is because the geometric tolerances of each component may have errors, and since beam elements with constant cross-sections were used, they lacked specific geometric features like hole cut-outs at the ends of the links, and small corner fillets, thus changing the masses. Therefore, the link updating parameters included E,  and bo in order to produce "equivalent" beam models, assuming the masses were not previously known. For the component tests with fixed-free BCs, en in Eq. (7.6) was set to  2% for each resonance frequency, and for the hinged substructure tests, en set to  3%. All antiresonance frequency constraints, ear were set to  5% and the number of frequency increments in Eq. (7.2) was set to n = 200 evenly distributed points for each test case. The GA parameters used were the same as in the previous case study, and for ten converged solutions, the average computational times for a single GA run were: 322 s for the fixed-free drag brace, 519 s for the hinged drag brace, 238 s for the fixed-free main strut, and 403 s for the hinged main strut.

193

Table 7-12: Lower and upper bounds for landing gear updating parameters Components 1,3,4,5,6,7,9,11 3,4,9 1,7,11 6 2,8,10 Updating Parameter E [GPa]  [1/s]  [s] bo [mm]  [kg/m3] bo [mm] bo [mm] E [GPa]  Lower Limit 180 0.01 1×10-7 14 7700 6.5 18 1.5 0.001 Upper Limit 215 50 1 19 7900 12 35 3 10

Using data from fixed-free tests on the drag brace alone(component 9), the parameters for the drag brace were updated using a full FE model. Afterwards, the FE model of the drag brace hinged assembly in Fig. 7-15(a) was reduced using the Craig-Bampton method. The updating process for the reduced hinged component models were conducted using the raw experiment test data and the parameters for components 7, 8, 10 and 11 were updated simultaneously for both fixtures. To account for fixture flexibility, each fixture was modeled as a single-element thick beam (instead of virtual spring), such that the mass of the beam is equivalent to the measured fixture mass. The modulus of elasticity for each fixture were then included as additional updating parameters, with lower and upper bounds set to 180 GPa and 500 GPa, respectively, along with a structural proportional damping term (0.001    0.05). The averaged fixture motion constraint in Eq. (7.7) was set to eX,F  7%, which was also applied to the main strut hinged cases. During updating, it was noticed that for hinged cases, the ordering of the analytical in-plane resonances/antiresonances corresponding to the experimentally measured resonances changed due to a highly damped resonance, and at times, antiresonance, present in the updated models. Therefore, the MvMIF method in Section 7-2 was applied to those cases in an automated fashion to correctly pair the computed resonances/antiresonances corresponding to those obtained from the experiments for the constraints in Eq. (7.8). The updated parameters for all components of interest are shown in Table 7-13.

194

Table 7-13: Updated landing gear FE parameters
Component 1(2×) 2 3,4 5 (2×) 6 7(2×) 8 9 10 11(2×) Geometric Parameters bo [mm] 8.9633 Material Parameters  [kg/m3] Proportional Damping Parameters  1.5632×10-3 1.2203×10-3 1.9531×10-3 -

E   [GPa] [1/s] [s] 207.7921 28.7887 7.2710×10-5 1.6745 14.8949 7804.2622 209.3731 30.4255 3.2510×10-6 190.9373 40.9193 2.9468×10-5 21.4454 207.7921 14.1536 4.7285×10-4 9.4138 207.7921 32.8120 5.8712×10-5 1.6991 14.3018 7758.2016 212.4794 34.0744 2.4559×10-6 1.7342 9.9237 207.7921 30.2601 3.0260×10-4 *Blank spaces denote initial model parameters were used

To update the main strut, a similar procedure was followed from that of the drag brace. For the fixed-free test without the wheels and axle attached, the parameters for components 3, 4 and 6 were updated, with the parameters of component 7 known from the drag brace updating tests. Afterwards, component 5 was updated using the fixed-free FRF test data with the wheels and axle attached. For the main strut hinged test, all components were reduced using the CraigBampton method and components 1 and 2 were updated, along with the fixture which was later removed from the model. The structural properties of the bushings and shorted additional link connected to the fixtures were assumed to be identical to those from the updated drag brace setup. For CMS assembly, the added (updated) fixture terms can be directly removed from the reduced component models. In an additional (optional) post-processing stage, the dynamic effects of the fixture can then be removed from the experimental FRFs using the method in Appendix D to allow for a more direct comparison of the updated component models to the experiment conditions, albeit without parasitic fixture motions. However, because rotational receptances were not measured, the method in Appendix D requires expansion of the analytical FRFs, which may lead to more errors in the adjusted experimental data. Fig. 7-16 shows the results of the updated component models for selected drive-point accelerance magnitude FRFs in the link local coordinate frames. In Fig. 7-16(a) and (c) the analytical models are full FE models and (b) and (d) show the results of the Craig-Bampton reduced hinged models. The local y-axis drive-point FRFs are shown for the tip of the drag brace in Fig. 7-16(a), the middle node of the drag brace in Fig. 7-16 (b), the middle node of component 4 in Fig. 7-16 (c) and the middle node of component 3 in Fig. 7-16 (d).

195

Figure 7-16: Comparisons of initial model, updated model and experimental drive-point FRFs for component tests, (a) Drag brace (fixed-free), (b) Drag brace (hinged, -21.37°), (c) Main strut (fixed-free with wheels), (d) Main strut (hinged, 14.97°)

Note that large amounts of noise were present in the experimental data for the first 100 Hz in Fig. 7-16(c) and (d) even after FRF smoothing, possibly due to the high sensitivity of the accelerometer. Therefore, these ranges were not included in the updating process. However, the updating method was proven to be robust in the presence of noise, as shown in Fig 7-16(d), which contained small FRF oscillations throughout the frequency range. It was observed by checking the real and imaginary parts of the experimental FRFs that these oscillations were not resonances, and quite possibly caused by data leakage. Tables 7-14 and 7-15 compare the measured resonance and antiresonance frequencies from the component experiments, to the Craig-Bampton reduced models using the initial and updated parameter estimates.

196

Table 7-14: Comparison of component experimental resonances with initial and updated models Substructure Test Case 1) Drag brace, fixed-free 2) Drag brace, hinged (-7.00°) 2) Drag brace, hinged (-21.37°) 4) Main strut, fixed-free with wheels 5) Main strut, hinged (14.97°) 6) Main strut, hinged (35.56°) Mode # 1 2 1 2 1 2 1 2 3 1 2 3 1 2 3 Experiment [Hz] 135.18 905.60 355.88 1357.75 356.19 1360.62 40.56 360.10 1272.86 125.16 528.02 878.32 120.91 594.32 909.08 In-Plane Resonance Frequencies Initial Relative Updated Model Error Model [Hz] % [Hz] 155.45 14.36 137.19 988.36 9.14 896.22 389.29 9.39 357.78 1481.25 9.10 1373.36 389.27 9.29 357.78 1481.12 8.86 1373.33 45.70 12.67 40.23 308.85 -14.21 367.20 742.54 -41.66 1286.72 122.83 -1.86 124.87 606.45 14.85 514.80 801.49 -8.75 901.04 123.63 2.25 120.42 659.24 10.92 587.91 814.16 -10.44 928.91 Relative Error % 1.48 -1.04 0.53 1.15 0.44 0.93 -0.84 2.00 1.09 -0.23 -2.50 2.59 -0.41 -1.08 2.18

Table 7-15: Comparison of component experimental antiresonances with initial and updated models Substructure Test Case 1) Drag brace, fixedfree 2) Drag brace, hinged (-7.00°) 3) Drag brace, hinged (-21.37°) 4) Main strut, fixedfree with wheels 5) Main strut, hinged (14.97°) 6) Main strut, hinged (35.56°) In-Plane Antiresonance # 1 1 1 1 2 3 1 2 1 2 In-Plane Drive-Point Antiresonance Frequencies Initial Relative Updated Relative Experiment Model Error Model Error [Hz] [Hz] % [Hz] % 748.44 1331.56 1334.06 260.31 796.56 1907.19 134.19 713.38 122.19 815.94 793.51 1481.20 1474.47 156.55 622.97 1666.60 127.59 746.13 128.00 762.64 6.02 11.24 10.52 -39.86 -21.79 -12.61 -4.92 4.59 4.76 -6.53 736.73 1366.93 1366.22 249.30 765.48 1851.61 128.08 733.86 123.53 832.72 -1.56 2.66 2.41 -4.23 -3.90 -2.91 -4.55 2.87 1.10 2.06

The updated component test results show good resonance and antiresonance frequency correlations with respective maximum absolute errors amongst all component tests of 2.59% and 4.55%, respectively, compared to those of the analytical model (41.66% and 39.86%). For the hinged drag brace tests, the configuration dependency of the resonance/antiresonance frequencies are less evident than that of the main strut hinged tests, which show higher frequency

197

differences after the first resonance/antiresonance. This is due to a larger number of simultaneously tested components for the main strut, and the wheel masses are considerably high relative to the other components. The results in Table 7-16 show that the PMAC values for all of the first modes in both initial and updated models are well correlated with the lowest value occurring in the initial model at 0.9824. However, the initial model's PMAC values deteriorate for higher modes, with a minimum PMAC of 0.6028, compared to the PMAC values of the updated model, all of which are above 0.9696. The updated model's FDAC values in Table 7-16 also show significant improvements with all mean FDAC values above 0.9316, compared to 0.7252 for the initial models.
Table 7-16: PMAC and Mean FDAC values for initial and updated component models Substructure Test Case 1) Drag brace, fixedfree 2) Drag brace, hinged (-7.00°) 3) Drag brace, hinged (-21.37°) 4) Main strut, fixedfree 5) Main strut, hinged (14.97°) 6) Main strut, hinged (35.56°) Mode # 1 2 1 2 1 2 1 2 3 1 2 3 1 2 3 Initial Model Mean PMAC FDAC 0.9997 0.8455 0.9032 0.9824 0.8562 0.6028 0.9955 0.8539 0.5976 0.9985 0.8622 0.7252 0.6612 0.9937 0.6528 0.7758 0.6361 0.9944 0.6840 0.7813 0.6426 Updated Model Mean PMAC FDAC 0.9996 0.9683 0.9987 0.9981 0.9739 0.9940 0.9967 0.9794 0.9952 0.9985 0.9696 0.9507 0.9994 0.9979 0.9316 0.9926 0.9871 0.9983 0.9914 0.9347 0.9633

7.5.3 Assembly Verification Experiments
To validate the updated CMS assembled landing gear model, FRF tests were performed in four different experimental landing gear configurations, as shown in Fig. 7-17. The accelerometer was placed at the middle node of component 4 and the main strut was excited on the opposite surface at five locations (the same locations in Fig. 7-15(b), minus the excitation near the base hinge) for each configuration. Note that in Fig. 9(e) when r1 = 575 mm, there was sufficient clearance between the accelerometer and drag brace to perform the tests for low amplitude vibrations (excitations below 70 N) and the wheel offsets were long enough to avoid contact with the drag brace. 198

Figure 7-17: Landing gear assembly tests in different configurations, distinguished by the spacing between the hinges (a) #1 - r1 = 75 mm, (b) #2 - r1 = 200 mm, (c) #3 - r1 = 425 mm, (d) #4 - r1 = 575 mm, (e) close-up view of accelerometer for configuration #4

Fig. 7-18 shows the results of the accelerance FRF magnitudes along the local y-axis of component 4. The FRFs for the updated CMS models show clear improvements over the initial models in all configurations. In the low frequency range, the updated FRFs show good correlation with respect to the experimental FRFs. However, the differences between FRFs increase after 1400 Hz for the bending-dominant configurations (#1, #2 and #4), and after 1000 Hz for configuration #3, where axial compression of the main strut is dominant amongst all other configurations. Note that no measurements were taken in the axial direction of the links throughout the tests. Therefore, the updated axial stiffness and mass terms may contain the largest errors.

199

Figure 7-18: Comparisons of initial model, updated model and experimental drive-point FRFs for CMS assembly configurations, (a) #1 - r1 = 75 mm, (b) #2 - r1 = 200 mm, (c) #3 - r1 = 425 mm, (d) #4 - r1 = 575 mm

The resonance and antiresonance frequencies from the experiment and CMS assembled models are shown in Tables 7-17 and 7-18. The resonance errors from the updated model are all below 3.32%, whereas resonance errors of the initial model remain high with a maximum error of 51.75%. The maximum initial model errors occur for configuration #3, which demonstrates the need to measure axial motion contributions of the components during testing and to utilize this data when updating the components. Overall, the updated resonance errors remain low up to the 7th bending mode which demonstrates that the component updating method was successful when CMS assembly was applied in different landing gear configurations.

200

Table 7-17: Comparison of assembly experimental resonances with CMS models Assembly Configuration Test Case Mode # 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 1 2 3 4 5 6 7 In-Plane Resonance Frequencies Initial Relative Updated Experiment Model Error Model [Hz] [Hz] % [Hz] 60.84 60.05 -1.30 62.85 223.75 179.08 -19.97 222.21 402.54 437.08 8.58 411.06 825.07 596.97 -27.65 826.75 1367.41 1071.67 -21.63 1350.62 1598.76 1493.00 -6.62 1557.52 130.53 118.33 -9.35 134.69 269.91 282.23 4.57 278.43 431.42 459.29 6.46 428.85 867.26 615.85 -28.99 879.48 1128.32 1043.07 -7.56 1110.83 1353.98 1478.96 9.23 1327.21 112.09 107.40 -4.19 111.47 551.62 374.39 -32.13 556.11 887.17 549.08 -38.11 893.83 1418.75 684.53 -51.75 1379.71 1787.61 1021.39 -42.86 1796.36 39.85 43.85 10.04 40.59 282.18 233.52 -17.24 284.87 413.38 442.64 7.08 418.76 821.70 593.97 -27.71 811.94 1097.81 1069.25 -2.60 1103.33 1384.92 1137.83 -17.84 1358.78 1494.10 1478.35 -1.19 1545.71 Relative Error % 3.31 -0.69 2.12 0.20 -1.23 -2.58 3.18 3.16 -0.60 1.41 -1.55 -1.98 -0.56 0.81 0.75 -2.75 0.49 1.85 0.95 1.30 -1.19 0.50 -1.89 3.32

#1 (r1 = 75 mm)

#2 (r1 = 200 mm)

#3 (r1 = 425 mm)

#4 (r1 = 575 mm)

For the antiresonance frequencies, the maximum error is 11.63% for the 7th antiresonance in configuration #4, which is relatively high compared to the next highest error of 5.32%. In configuration #4, the landing gear is near the maximum stretch limit, and is thereby the configuration with the lowest overall stiffness. Furthermore, the 8th bending mode occurs at 2159.95 Hz in the updated model, which is just outside of the range of interest. The high error for the 7th antiresonance from configuration #4 was thought to be an indication of the modal truncation effects in the CMS model. However, by increasing the number of kept modes in the updated model by four times for the drag brace and main strut components, the 7th bending antiresonance error only decreases by 0.13%. As a result, the performance of the updated models did not change significantly in the higher frequency ranges with an increase in the number of kept modes.

201

Table 7-18: Comparison of assembly experimental antiresonances with CMS models Assembly Configuration Test Case In-Plane Antiresonance # 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 1 2 3 4 5 6 7 In-Plane Drive-Point Antiresonance Frequencies Initial Updated Relative Experiment Relative Error Model Model [Hz] Error % [Hz] % [Hz] 213.75 150.47 -29.60 207.23 -3.05 373.75 327.60 -12.35 368.73 -1.34 564.06 474.15 -15.94 560.47 -0.64 1128.44 1024.99 -9.17 1121.68 -0.60 1455.63 1468.53 0.89 1432.15 -1.61 1714.69 1763.95 2.87 1710.91 -0.22 224.06 152.41 -31.98 213.86 -4.55 387.81 314.35 -18.94 367.26 -5.30 566.25 474.45 -16.21 536.14 -5.32 1080.31 1008.19 -6.68 1070.80 -0.88 1146.56 1153.35 0.59 1167.40 1.82 1406.25 1529.23 8.75 1429.94 1.68 336.25 165.32 -50.83 329.65 -1.96 587.81 389.46 -33.74 575.96 -2.02 1139.38 599.75 -47.36 1102.51 -3.24 1432.1875 991.66 -30.76 1441.03 0.62 253.44 155.57 -38.61 245.58 -3.10 377.50 370.33 -1.90 371.68 -1.54 586.25 486.59 -17.00 583.22 -0.52 1091.88 1026.24 -6.01 1095.87 -0.37 1153.44 1118.09 -3.06 1150.44 -0.26 1416.56 1448.15 2.23 1398.97 -1.24 1622.50 1762.42 8.62 1811.21 11.63

#1 (r1 = 75 mm)

#2 (r1 = 200 mm)

#3 (r1 = 425 mm)

#4 (r1 = 575 mm)

The PMAC and FDAC values for the landing gear assembled configurations are given in Table 7-19. The lowest updated model PMAC and FDAC values (0.9116 and 0.8962) convey decent correlation with the experiment data, as compared to the initial model. Note that the updated model's FDAC values are slightly lower than those for the linkage assembly model in Section 7.4.3, mainly due to the fixture complications, which introduces additional modeling errors during the component updating stage. In this case study, If the updated FDAC values were computed from 0 to 1000 Hz, the mean FDAC for configuration #2 would increase to 0.9233. Therefore, as a general rule of thumb for this study, the bandwidths of the individual component tests (which produce resonances at higher frequencies) are approximately equal to the number of substructures tested times the assembly's frequency range of interest. Overall, the obvious decrease in assembly model correlations, though small, are most likely contributed to error propagation when assembling the updated component models, since the updated components themselves are not perfectly correlated. Also, unavoidable experimental errors such as

202

misaligned impact strikes, unnoticeable data leakage or large amounts of noise in the FRFs may contribute to the level of uncertainty in the test-analysis correlations.
Table 7-19: PMAC and Mean FDAC values for initial and updated CMS models Assembly Configuration Test Case Mode # 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 1 2 3 4 5 6 7 Initial Model Mean PMAC FDAC 0.9782 0.8741 0.8799 0.6796 0.8610 0.5154 0.4908 0.7163 0.9695 0.9922 0.6364 0.8444 0.3849 0.4238 0.7383 0.8939 0.6772 0.9085 0.3123 0.2681 0.9853 0.8760 0.9145 0.6286 0.8122 0.7245 0.3622 0.2058 Updated Model Mean PMAC FDAC 0.9755 0.9782 0.9839 0.9267 0.9973 0.9678 0.9229 0.9958 0.9913 0.9826 0.8962 0.9823 0.9687 0.9496 0.9734 0.9826 0.9184 0.9992 0.9421 0.9116 0.9654 0.9783 0.9936 0.9097 0.9971 0.9683 0.9845 0.9248

#1 (r1 = 75 mm)

#2 (r1 = 200 mm)

#3 (r1 = 425 mm)

#4 (r1 = 575 mm)

7.6 Summary
A new FE updating method was presented for modular robots (and other mechanisms with detachable links) using experiment BCs which match, as close as possible, those of CMS reduced component models. The method presented in this chapter can enable testing serial robot modules in different poses, which can reveal the presence of pose-based dependencies in the substructures, as well as provide more experiment FRF data points to aid in the updating scheme. Additionally, by simultaneously updating the component models in different configurations using the GA with nonlinear constraints imposed on the resonances/antiresonances, it was demonstrated that feasible updated solutions can be readily achieved. Because the ordering of the constrained resonance frequencies may change during the optimization procedure, it was found

203

that the resonances/antiresonances can be automatically ordered using the MvMIF during each updating iteration, thereby avoiding the need to include unmeasurable resonances when updating. The case studies demonstrated that the fixed-free component BCs used in the hybrid CMS method are more feasible in this approach when testing active joint modules, since only one fixture is needed. However, when testing passive joints, the Craig-Bampton method's fixedfixed component BCs are required to rigidly constrain the motion of the joints, which requires adjustable fixtures for pose-based testing. Furthermore, the fixed-free testing method required the unmeasured mass contributions of components to be added during assembly, while the fixedfixed testing method requires the removal of fixture dynamics before assembly. Overall, the validation experiments conducted on the modular linkage system and landing gear assemblies demonstrated that the lower frequency bandwidths (< 1000 Hz) of the respective updated CMS models retained a high degree of accuracy in different poses.

204

8. Conclusions and Future Work
This dissertation presented a framework for the kineto-elastic analysis and component structural dynamic model updating of serial MRRs. In particular, the methods developed in this dissertation focused on the worst-case kineto-elastic analysis, payload capacity analysis, module stiffness design, structural dynamic model reduction and model parameter updating. What links these methods is the dependence of the kineto-elastic performance on module configurations and poses. First, a modular kineto-elastic model was developed assuming low-speed quasi-static motion using the finite element (FE) method and recursive forward kinematics. The model accounted for thick (or thin) geometry using Timoshenko beam elements, as well as joint flexibility, module self-weights, and rigid-body offsets. Next, a combinatory search method was developed to determine the maximum payload capacity and perform module stiffness design. This search method eased the overall computational burden by reducing the configuration space into a smaller feasible set of configurations, then automatically scanning the workspaces of the configurations for the end goal of determining the worst-case configuration and pose. By doing so, it was shown that the payload capacity and module stiffness design problems can be performed at the worst-case configuration and pose to satisfy multiple kineto-elastic requirements for all remaining configurations and poses. By following this procedure, the design of any serial manipulator (whether it be reconfigurable or not) can be satisfied for all kinetoelastic requirements in any feasible configuration. Afterwards, a new CMS model was developed specifically for serial MRR joint and link modules. The intention here was to preserve hybrid (fixed-free) module BCs when obtaining the component normal modes. By doing so, the natural connectivity with adjacent components at the base of the joint modules can be maintained. Also, when applying these interface conditions experimentally, the output shafts of the joint modules can remain free to rotate to given joint angular positions (for active MRR joints), thereby allowing tests for the determination of posebased dependencies in joint modules, which includes possibilities for testing the worst-case poses of joint-link substructures. Finally, a novel CMS model updating method was developed using experimental FRF data obtained from component tests in multiple poses and experimental BCs which match those of the CMS component models. By updating the FE parameters of the

205

components in their local frames, the case studies demonstrated that only a few joint-link poses (which may or may not include the worst-case poses) are required for accurate model updating. The effectiveness of the model updating approach was further proven with experiments on mechanism assemblies in random poses along with the worst-case pose, and demonstrated that the updated CMS models are accurate, thereby avoiding the requirement to update components using experimental data from entire assemblies in multiple poses. Afterwards, the updated CMS models can be used to perform further structural dynamic testing of entire MRR assemblies in any random pose in a virtual environment, and can entirely avoid the requirement to experimentally test large MRR assemblies which require complicated and expensive setups.

8.1 Summary of Research Contributions
There main research contributions in this dissertation are listed as follows: 1. A combinatorial search method for the maximum payload determination and
stiffness design of MRR modules
o An automated enumeration process was developed to eliminate the infeasible module

configurations with respect to kinematic requirements and equivalent kineto-elastic performance between two or more configurations. Although configuration enumeration methods were previously created for MRR kinematic assembly requirements, this was previously unheard of for MRR kineto-elastic requirements.
o A GA (and NSGA-II) was developed to directly search through the configuration

workspaces in a computationally efficient manner in order to determine the worstcase kineto-elastic poses for each configuration. This involved searching for multiple worst-case scenarios including the vibration, tip deflections and base joint torques. It was shown in the case study (in Section 4.5) that the new workspace search method can greatly outperform traditional incremental-based search methods in terms of accuracy and computational time. Through the analysis, it was also shown that for joint modules with long offset distances, the worst-case kineto-elastic poses can occur away from the maximum stretch pose in many instances. This is mainly due to the change in dominant deformation modes.

206

o It was demonstrated that the lowest allowable payload capacity for all feasible

configurations occurs at the worst-case kineto-elastic pose and configuration. Similarly, the module stiffness design process can be greatly simplified by performing the design stage at the worst-case configuration and pose. These contributions led to the following peer-reviewed journal submissions: 
R.P. Mohamed, F. Xi, A.D. Finistauri, 2010, "Module-Based Static Structural

Design of a Modular Reconfigurable Robot," ASME Journal of Mechanical Design, 131(1), p. 014501. 
R.P. Mohamed, F. Xi, Y. Lin, 2015, "A Combinatorial Search Method for the Quasi-

Static Payload Capacity of Serial Modular Reconfigurable Robots", Mechanism and Machine Theory, Revisions submitted. 2. A pose-based component vibration testing and model updating method for
mechanisms with detachable components
o A hybrid-interface CMS method was developed specifically for serial robot modules.

The method uses component normal modes with fixed-free interface conditions to mimic natural link-joint connectivity and can allow experimental testing for multiple joint module poses (with allowable motion at the joint output shaft, located at the free-end). When compared to the traditional Craig-Bampton method, the new hybrid method is numerically superior when a minimal-order CMS model is not required.
o A physical coordinate recovery method was developed for determining FRFs from

CMS models with force and motion measurement locations on separate attached components in different orientations. The required input and output locations may lie on "internal" component nodes, which might be lost during the CMS reduction process. This method proved useful for comparing reduced CMS models to FRF data from physical experiments.

207

o A new vibration testing method was developed to consider the natural BCs for joint

and link interfaces, and can allow for testing multiple joint positions. For serial robot modules with active or lockable joints, this process is easy to perform if the fixture matches the connectivity at the interfaces of the modules, and can allow movement of joint output shafts if fixed-free BCs are used. For mechanism links with passive joints, the procedure becomes more complex since additional fixtures are required with adjustable lengths.
o A novel component model parameter updating method was developed which uses

FRF data from multiple joint-link poses. Because this can become an overdetermined problem when multiple component poses are considered, a GA was developed which minimizes the FRF error for all poses considered. Feasible solutions are achieved when nonlinear constraints are enforced on the resonance and antiresonance frequencies, as well as fixture motions (if measurable). Unlike the payload capacity and stiffness design problems, because the local FE model parameters are adjusted, it is recommended to use more than one joint-link pose during the updating process since pose-dependent joint receptances are difficult to measure.
o The multivariate mode indicator function (MvMIF) was modified to aid in the correct

pairing of analytical resonance and antiresonance frequencies during the updating process. This is because additional rotational or highly damped receptance terms may appear in the analytical eigenvalue solutions of the updated models. Previously, the MvMIF was only used to detect analytical resonances during pre-test planning, and did not include the possibility for detecting antiresonances. The above contributions led to the following journal submissions:  
R.P. Mohamed, F. Xi, 2015, "Component Model Parameter Updating for Landing

Gear Linkages with Flexible Joints," AIAA Journal, In press.
R.P. Mohamed, F. Xi, 2015, "A Structural Dynamic Model Updating Method for

Serial Modular Robot Components," Currently in preparation.

208

During this PhD research period, two other co-authored journals were submitted:  Y. Lin, F. Xi, R.P. Mohamed, X. Tu, 2010, "Calibration of Modular Reconfigurable Robots Based on a Hybrid Search Method," ASME Journal of Manufacturing Science and Engineering, 132(6), p. 061002.  Y. Li, J. Xi, R.P. Mohamed, K. Behdinan, 2011, "Dynamic Analysis for Robotic Integration of Tooling Systems," ASME Journal of Dynamic Systems, Measurement, and Control, 133(4), p. 041002-1.

8.2 Future Work
As an extension of this research, the kineto-elasto-dynamic modeling for MRRs undergoing high-speed motions should be studied. Because this involves solving a set of differential algebraic equations with nonlinear centrifugal and coriolis force terms (as well as a nonlinear mass matrix if a floating reference frame is used), the solution of an MRR's tip displacements and vibrations become more complicated. Furthermore, the number of required workspace searches increase, as compared to the quasi-static cases, since one has to consider the different combinations of the angular velocity directions for each joint. Also, the kineto-elastic analysis in this dissertation was conducted only for modules with symmetric cross-sections. It would be beneficial to incorporate non-symmetric module cross-sections for the worst-case pose searches and module stiffness design problems. In terms of model updating, the updated CMS model loses accuracy in the higher frequency bandwidths due to error propagation from the combined set of updated components and unavoidable experiment errors (such as noise propagation, fixture damping, and low force excitations). Therefore, as future work, these issues must be further investigated. In addition, the design of a height adjustable fixture for vibration testing, with FE parameters that can be easily updated independently, would prove useful in testing components with passive joints, and would also be a valuable extension to this work. Also, the computational times using the GA during the updating stage were considerably high, and are dependent on a number of variables such as the respective number of kept modes per CMS model, updating parameters, FRF points in Eq. (7.2), and constraint limits in Eqs. (7.5) and (7.6). The use of the MvMIF may be the lead contributing factor for the higher computational times for the hinged component tests, although this was a 209

necessary step for correct analytical/experimental resonance pairing for the landing gear example in Section 7.5. Therefore, a more computationally efficient search method can be the focus of future work. Furthermore, due to limitations in the fixture setup and accelerometer maximum loads, experiments conducted in this work were limited to low impact excitations, which is mainly useful for linear structural dynamic applications. It would be beneficial to conduct high impact dynamic tests for updating the components to reveal the structural nonlinearities associated with collisions from high-speed motions.

210

List of Appendices Appendix A - Rotation Matrix Properties
In general, for a known coordinate system, A  {xa, ya, za}T and a body-fixed coordinate system B  {xb, yb, zb}T, the rotation matrix of B with respect to A can be defined using a set of three unit vectors representing the principal directions of B described in terms of the coordinate system A [150]:
R AB   x AB  xB  x A z AB     xB  y A   xB  z A yB  x A yB  y A yB  z A zB  xA  zB  y A   zB  z A  

y AB

(A.1)

Observing Eq. (A.1), the orientation of coordinate system B is the projection of the components of B onto the unit directions of A, often termed direction cosines. Rotation matrices have the following properties [149, 150]:
o All columns of a rotation matrix are mutually orthogonal, that is:

x T x  1, y T y  1, z T z  1, x T y  0, x T z  0, y T z  0

(A.2)

o The above property states that there are six constraints on the nine elements of the

rotation matrix. Thus the orientation of a body can be defined by three independent parameters.
o The determinant of a rotation matrix is always equal to +1 (proper orthogonal). o Rotation matrices are orthogonal, as defined by:

 R AB 

T



 R AB 

1

 R BA

(A.3)

o The multiplication of rotation matrices is not commutative:

R AB R BC  R BC R AB

(A.4)

For the rotation matrix defined in Chapter 3.1, the body-fixed rotations occurring first about the local x-axis, then local y-axis, then local z-axis are termed "X-Y-Z" Euler angles in [150]. If the rotations occur about a space-fixed (global) coordinate system, the sequence is defined as a rotation first about the global z-axis, then global y-axis, then global x-axis. This rotation 211

sequence is termed "X-Y-Z" fixed angles in [150]. The reversed sequence of rotations in the space-fixed frame, will give the same rotation matrix as the forward sequence of rotations in the body-fixed frame. Using the space-fixed frame sequence of rotations (z-, then y- then x-axes), an equivalent rotation matrix to Eq. (3.3) will take the form:
R T = R T  z  R T  y  R T  x 

(A.5)

To solve for the reverse problem of extracting the equivalent body-fixed "X-Y-Z" Euler angles from Eq. (3.3), the rotation matrix in Eq. (3.4) can be written as:
 r11 R=  r21   r31

r12 r22 r32

r13  r23   r33  

(A.6)

The solutions for the X-Y-Z Euler angles are as follows:
2 2  y  Atan2 r13 , r23  r33




(A.7)

 x  Atan2  r23 , r33   z  Atan2  r12 , r11 

where Atan2(y,x) is a function which computes the arc tangent of (y/x) and determines which quadrant the angle lies in based on the individual signs of y and x. Note that Eq. (A.7) is only valid if -90°  y  90°. If y = ±90°, a unique solution does not exist, and only the sum or difference of z and x may be computed:

 z   x  Atan2  r21 , r22 

(A.8)

212

Appendix B - Finite Element Stiffness and Mass Matrices
B.1 Beam Element Shape Functions
In Section 3.3, the shape functions for the axial, bending, and torsional displacements for the modules using the assumed displacement functions in Eqs. (3.21), (3.22), and (3.28) were determined using Eqs. (3.29) to (3.33). In Eq. (3.33), each of the displacements can be written as a linear combination of the shape functions and the element's nodal coordinates. The matrix containing the polynomial terms related to the length variable x in Eq. (3.29) for the displacement functions u(x), v(x), w(x), and (x) can be written as: 1 0 X 0  0 x 0 0 0 0 1 0 0 0 0 x x2 0 0 0 0 0 x3 0 0 0 0 1 0 0 0 0 0 x x2 0 0 0 0 x3 0 0 0 0 1 0 0  0  x

(B.1)

Applying the BCs in Eq. (3.30), the matrix X in Eq. (3.31) can be written as:
1 0  0  0 0  0  X= 1  0 0  0  0   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 L2 0 0 0 0 0 0 0 0
6 EI z k y GA

0 0 1 0 0 0 0 0 1 0
6 EI

0 0 0 0 1 0 0 0 L 0

0 0 0 0 0 0 0 0 L2 0

0 0 0 0
6 EI y k z GA

0 0 0 1 0 0 0 0 0 1
6 EI

0 0 0 0 0 1 L 0 0 0 0 1 0 0 0 L 0 0

0 0 0 L3 0

0 L3 0 0 0

0 0 0 0 0 1

y 0 1 2 L 3L2  kz GA

0 0

y 2 L 3L2  kz GA

0

0

0

0

0 0  0  0 0  0  0  0 0  L  0  0 

(B.2)

Substituting Eqs. (B.2) and (B.3) into Eq. (3.33), the matrix of shape functions can be determined as:

213

 N u1   0 Nd   0   0 

0 N v3 0 0

0 0 N w7 0

0 0 0 N1

0 0 N w8 0

0 N v4 0 0

N u2 0 0 0

0 N v5 0 0

0 0 N w9 0

0 0 0 N1

0 0 N w10 0

0   N v6  0   0   ...(B.3)

Note that the above equation does not include the rotational (slope) shape functions due to the added shear contributions for (x) and (x), which can be solved separately (as shown below in Eqs. B.9 and B.12). Introducing a dimensionless axial coordinate,  = x/Le, the axial displacements for a single two-node element with nodes numbered "1" and "2" can be expressed as:
u  x    N u1  u1  N u2   u   2

(B.4)

where the axial deformation shape functions are given by:
N u  N u1



N u1

  1    
T

T

(B.5)

For bending in the Xe-Ye plane, about the Ze-axis, the translational deformations in the Ye direction can be expressed using Eq. (3.33) as:
 v1     1 N v6  v   2  2   

v  x    N v3

N v4

N v5

(B.6)

where the bending shape functions for the translational elastic deformations can be written as:

214

N v  N v3
where



N v4

N v5

N v6



T

1 N v3  1 1  3 2  2 3  1     y  y Le 2   2 2   3  1 N v4  1 2      y y 1 N v5  1  3 2  2 3   y  y Le 2 N v6  1  2   3  1 2      y y





(B.7)




(B.8)

and where
y 

12 EI z k y GAL2 e

To determine the bending shape functions for the slopes (rotations) about the Ze-axis due to the additional shear contributions, the coefficients c3 to c6 obtained from Eq. (3.32) are substituted into the displacement function for (x) in Eq. (3.28) which leads to:
 v1     1 N 6  v   2   2  

  x    N

3

N 4

N 5

(B.9)

where the shape functions are:

N  N 3
where N 3 
6 Le 1 y



N 4

N 5
2

N 6



T

1 N 4  1 1  4  3 2  1     y  y





        
2

(B.10)

N 5 

6 Le 1 y

1 N 6  1  2  3 2   y  y





For bending in the Xe-Ze plane, about the Ye-axis, the translational deformations in the Ze direction can be expressed as:

215

w x    N w7

N w8

N w9

 w1       N w10   1   w2    2  

(B.11)

where the bending shape functions can be written as follows:

N w  N w7 where



N w8

N w9

N w10



T

1 N w7  1 1  3 2  2 3  1     z  z Le 2 N w8   1   2 2   3  1 2      z z 1 N w9  1  3 2  2 3   z  z Le 2 N w10   1  2   3  1 2      z z





(B.12)




(B.13)

and where z  12 EI y k z GAL2 e

Substituting the coefficients c7 to c10 obtained from Eq. (3.32) into the displacement function for (x) in Eq. (3.28) leads to the following:
 w1     1 N10   w   2   2  

  x    N

7

N8

N9

(B.14)

where the shape functions for rotary inertia in the Xe-Ze plane are: N  N7 where N7  N9 
1 N8   1 1  4  3 2  1     z  z 6 Le 1 z  6 Le 1 z 



N8

N9
2

N10



T

          2  3
2

(B.15)

1 N10   1 z

2

  z 

216

If the cross-section thickness of the module is slender relative to its length, then y and z approaches zero, and the element would behave as an Euler-Bernoulli beam with Hermitian shape functions, rather than a Timoshenko beam. For torsional deformation along the length of the beam element, a linear torsion angle variation is assumed, hence the shape functions can be determined as:

  x    N

11

1  N12      2

(B.16)

where the torsional deformation shape functions are:
N  N11



N12

  1    
T

T

(B.17)

B.2 Beam Element Stiffness and Mass Matrices
Using the method in Section 3.3.4 to obtain the stiffness matrix for a single element, which includes bending, shear deformation effects and rotary inertia, leads to the following explicit expression in the local body-fixed coordinate frame:
K12  K K e   11  K 21 K 22  e

(B.18)

where
 AE L 0   0  0  0  0             4 y  EI z  L 1 y  e

12 EI z L3 1 y




12 EI y L3 1 z 

sym.

0 0 0
L3 1 y

K11,e

0
6 EI y L3 1 z 

GJ L

(B.19)

0 0

 4  z  EI y L 1 z 



6 EI z



0

0

217

K 22,e

 AE L 0   0   0  0  0 

12 EI z L3 1 y




12 EI y L3 1 z 

sym.

0 0 0
6 EI z L3 1 y

0
6 EI y L3 1 z 

GJ L

0 0
0 0 0  GJ L 0 0

 4  z  EI y L 1 z 





0
0

0
0 0
6 EI y L3 1 z 

           4 y  EI z  L 1 y  e
  L3 1 y    0   0   0    2 y  EI z  L 1 y  e 0
6 EI z

(B.20)

K12,e

  AE L  0    0   0   0   0 

0
12 EI z L3 1 y





0
12 EI y L3 1 z 

0 0 0
6 EI z L3 1 y

0
6 EI y L3 1 z 

0
 2  z  EI y L 1 z 

(B.21)





0

0

T K 21,e  K12, e

(B.22)

Eqs. (B.18) to (B.22) are equivalent to the stiffness matrices found in [153, 156 and 157], but for spatial instead of planar beams. This produces an exact solution with respect to forces and elastic deformations [156]. Using the method in Section 3.3.5, the mass matrix for a single element, which includes the shear and rotary inertia effects, can be explicitly expressed as:
M12  M M e   11  M 21 M 22  e

(B.23)

where
1 3 0 a z  0 0   AL  0 0 0 0   0 c z   sym.      ey  0 ez  e

M11,e

ay 0 -c y 0

J 3A

(B.24)

0 0

218

M 22,e

1 3 0 a z  0 0   AL  0 0 0 0  0 -c z  1 6 0 b z  0 0   AL  0 0 0 0   0 d z

ay 0 cy 0
J 3A

0 0

  sym.      ey  0 ez  e   sym.      f y  0 fz  e

(B.25)

M12,e

by 0 d y 0

J 6A

(B.26)

0 0

T M 21,e  M12, e

(B.27)

where the coefficients in Eqs. (B.24) to (B.26) are as follows: az  ay  bz  by  cz  cy  ez  ey  fz  fy 

1 1 y

 
2 2

13 35 13 35 9 70 9 70

6Iz 2 7  10 y  1 3  y  5 AL2 2 y 7  10 z  1 3  z  5 AL2 6Iz 2 3  10 y  1 6  y  5 AL2 2 y 3  10 z  1 6  z  5 AL2 11 1  120  y  24 2 y  11 1 2  120  z  24 z  1 1  60  y  120 2 y  1 1  60  z  120 2 z  1 1  60  y  120 2 y  1 1  60  z  120 2 z  6I 6I



1 1 z 2

 






1

1 y

 
2

1 1 z 2



1 10

1 y
1

1

 
2

11 210 11 210 1 105 1 105

Iz AL2 Iy AL2 Iz AL2 Iy AL2 Iz AL2 Iy AL2

1 2 y  L



1 z 2

 

1 1  10 2  z  L

1 y
1

1

 
2

   

2 15 2 15 1 30

2 2 1 1 6 y  3 y  L 2 2 1 1 6 z  3 z  L 2 2 1 1 6 y  6 y  L 2 2 1 1 6 z  6 z  L



1 z 2



1 y 
1

1



1 140 1 140



1 z 2



1 30



(B.28)

219

B.3 Linear Joint Stiffness and Lumped Mass Matrices
For the ith joint module in the local frame, the motor's linear virtual spring stiffness element can be expressed as: K12  K K e, motor ,i   11   K 21 K 22  e ,motor ,i where kx 0  0  0 0   0   sym.      k  0 k   e,motor ,i (B.29)

K11,e ,motor ,i  K 22,e,motor ,i

ky 0 0 0 0

kz 0 0 0 k 0 0

(B.30)

K12,e,motor ,i  K 21,e ,motor ,i  K11,e,motor ,i

(B.31)

where kx, ky, and kz, are the three translational stiffness terms in the local Xe-, Ye-, and Zedirections, and k, k, and k, are the three rotational stiffness terms about the local Xe-, Ye-, and Ze- axes. If a non-structural mass is present, such as a motor, payload or external attachments, the mass matrix of these components can be modeled using the method in Section 3.3.7 if there exists rigid offsets from the CG. Otherwise, if the CG of the non-structural mass lies exactly on an elastic node, the following 6×6 lumped mass matrix can be used at that node:  mI M e ,rigid ,i   33  0

0 0 

(B.32)

where I3×3 is an identity matrix. If a non-structural mass lies on an element's Xe-axis at an element's midpoint, the element's 12×12 mass matrix becomes:

220

M e, rigid ,i

 mI 33  1 0   2 0   0

0 0 0 0 0 mI 33 0 0

0 0  0  0

(B.33)

Note what when Eqs. (B.32) or (B.33) are added to a structural mass matrix for the beam elements, the singularity problem associated with the zero terms along the diagonal of Me,rigid,i disappear.

221

Appendix C - Vibration Experiment Setup and Data Processing
C.1 - Equipment Used for Vibration Tests
All components and assemblies for the vibration tests in Chapter 7 were mounted on an optical Newport breadboard precision grade table mounted of the floor, with a 1.2 m × 1.2 m surface area and 59 mm width. Due to the significantly large size and mass of the table, as compared to the test specimens in Chapter 7, the table is assumed to be rigid. The vibration tests involved single-input, single-output measurements using roving hammer tests (with a fixed accelerometer location) and when permissible, roving accelerometer tests by switching the input and output locations. Because the landing gear components in Sec. 7.5 were more stiff, a metallic indenter tip was used for the hammer, whereas a plastic indenter tip was used for testing the more flexible manipulator components in Sec. 7.4. Details of the impact hammer and accelerometer are given in Table C-1.
Table C-1: Accelerometer and Impact Hammer Specifications Device Accelerometer Impact hammer Model # PCB 352C33 PCB 086C02 Calibrated Sensitivity 102.0 mV/g 11.1 mV/N Excitation voltage 18 to 30 VDC 20 to 30 VDC Measurement Range ±50 g peak ±444 N peak

For each impact test at a set of impact and accelerometer coordinate pairs, the signals were acquired using a Zonicbook/618E dynamic signal analyzer with the eZ-Analyst software package. Using the software, tests were observed in the time domain for both signal channels. Likewise, the acceleration and force spectra (the magnitudes of the complex single-sided Fourier spectra of each time signal) and the magnitudes of the accelerance FRFs were displayed to check the results just after an impact. Table C-2 shows the dynamic signal analyzer settings used for each experiment. A large sample time was obtained by increasing the number of spectral lines (which can alternatively be obtained by reducing the analysis frequency). In many instances with low force impacts, this measure allowed the time-response to naturally decay close to zero, or within the accelerometer noise levels. For each test, a pre-trigger delay was applied using the signal from the hammer input channel. The pre-trigger time acquisition percentage was set to 2.5% of the time frame size and the trigger was set to 3% of the full-scale voltage. Therefore,

222

once an impact is made, if the voltage from the hammer reaches above 3% of the full-scale voltage, the data is acquired for the entire time frame size, including the 2.5% of the data prior to the start of the trigger.
Table C-2: Dynamic Signal Analyzer Settings Analysis Frequency (f=Fs/Nyq): Spectral lines (S): Nyquist factor (Nyq): Frame (data block) width (w=S/f): Time increment (t): Sample rate (Fs=1/t): Data block size (b=S×Nyq): Frequency increment (f=1/w): 2000 Hz 6400 2.56 3.2 s 1.953125×10-4 s 5120 samples/s 16384 0.3125 Hz

During tests, the time domain data was checked for noticeable double impact strikes, data leakage (if response amplitudes do not approach zero at the end of the sample time), and accelerometer or impact hammer sensor overloads. Also, the force time data was checked to ensure that the entire force pulse was captured in the time signal for each hammer strike. The observed frequency domain response data was checked for spurious modes (low amplitude, closely-spaced modes), noise attenuation, ripples in the response spectrum (in the case of a double impact) and also the variation present in the force input spectrum curve (an ideal impact would yield a constant force in the frequency domain, which is difficult to achieve). Overall, the results of erroneous tests were ignored from the data sets. Each usable set of data in the time domain was saved to a .UNV file. Frequency domain data was not saved since further processing of the data was required. In particular, the eZ-Analyst software lacked any force window functions to minimize hammer noise, or set the hammer noise to zero in time domain regions where an impact did not occur.

C.2 - Processing of Experimental Data in MATLAB®
Using the experimental time domain acceleration and force data, along with the information in Table 2, post-processing of the data was computed in MATLAB®. The data for 5-10 impact strikes for each set of measurement coordinates were stored from the experiments. It was observed during the tests that the long time frame was suitable and most measurements experienced minimal periodicity leakage, and the responses converged close to zero, or within the noise range of a stationary accelerometer, thereby indicating that the final periodic oscillation

223

is completed before 3.2 seconds. This is shown for an impact in Fig. C-1(a). For these cases, no exponential window [91] was used, since exponential windows can introduce artificial damping into the response, thus altering the FRFs. Therefore, while performing the tests, the acceleration time data was also checked for data cut-offs, where the vibration does not settle near zero amplitude, which is an indicator of periodic data leakage. Also, in cases where extremely flexible structures were tested, such as the assembled manipulator linkages in Sec. 7.4, if any observed leakage was unavoidable, then an exponential window was used with a 10% decay rate in the eZAnalyst software for any remaining tests for the same set of impacts. Afterwards, for each set of acceptable data for an impact test at specific input/output locations, the acceleration data was converted from g's to m/s2. For the force data in the time domain, a 10% force window was applied in MATLAB® by setting all of the data points that are less than 10% of the maximum observed force to zero, as shown in Fig. C-1(b). In particular instances, the force response levels appeared to deviate far from zero, but significantly lower than an impact force, which may be contributed to the movement of the impact hammer before and after the impact.

Fig. C-1 (a) Acceleration data in time domain, (b) Force in time domain with force window applied

A GUI was written in MATLAB® to convert the time domain data to the frequency domain, eliminate erroneous test cases, and filter noise present in the averaged frequency domain data. Its main interface is shown in Fig. C-2. The following sections describe each step used in the process.

224

Fig. C-2: GUI for FRF data processing

C.2.1 Transformation to Frequency Domain
First, to transform the time domain signals to the frequency domain, the continuous forward integral form of the Fourier transform is given by: Xf 




 x t  e

 j 2 ft

dt

(C.1)

The input signal in the time domain, x(t), is not useful in a continuous form since the signal analyzer records data at discrete time values over a preset time period. Thus, the more suitable form to convert the time signal in Eq. (C.1) is the discrete Fourier transform (DFT) [177] for the respective discrete kth frequency and mth time values:

X  f k   t  x  tm e  j 2 fk tm , k  0, 1, 2,...,  b  1 , m=0,1,2,...,  b  1
m0

b 1

(C.2)

where fk = kf. To compute the DFT for each set of time domain force and acceleration data, the inputs used are the same as those given in Table C-1. Essentially, the DFT of the time data can

225

be computed using the fast Fourier transform (FFT), which is the function "fft" in MATLAB® [178]. There are many algorithms available for the FFT, and a good literature review is given in [179]. The required inputs are separate force and acceleration time domain data vectors for each test and the data block size, b. The lines of code used to perform FFT (for example, to determine the acceleration spectrum in the frequency domain for the acceleration data in Fig. C-1) for a given number of impacts are given as:
% FFT to determine response spectrum in frequency domain % ntest - test number for each set of impact data % acc{ntest} - vector of experimental acceleration data in time domain for a single test % b - data block size % Nyq - Nyquist factor acc_DFT{ntest} = fft(acc{ntest},b)/b; % divide by b to normalize for the signal length X_a(ntest,:) = 2*abs(acc_DFT{ntest}(1:b/Nyq+1)); % Single-sided spectrum (magnitude) X_a_complex(ntest,:) = 2*(acc_DFT{ntest}(1:b/Nyq+1)); % Single-sided spectrum (complex)

Note that the "fft" function returns the double-sided spectrum, which displays half the power of the single-sided spectrum over the positive frequencies and the other half over the negative frequencies. Therefore, to obtain the single-sided spectrum of the response (or force), each point of the double-sided spectrum, up to the number of spectral lines plus one, is multiplied by two. This entire process is repeated for the number of tests at a given measurement coordinate (ntest). Afterwards, a matrix containing the response magnitude spectra for each test case at input coordinate p and output coordinate q can be stored as follows:
p  X exp ,1  f1   p  X exp   f     p  X exp ,ntest  f1   p X exp ,1  f 2 

  



X

p exp , ntest

 f2 

p  X exp ,1  f S 1      p X exp ,ntest  f S 1   

(C.3)

where S denotes the number of spectral lines. Each row represents the response in the frequency domain at an input/output coordinate pair for separate impact data tests. Likewise, the complex response spectrum is stored in a similar fashion. This is also done for the force magnitude and complex force spectra. Afterwards, the complex FRFs for each test are computed using:

226

p  X exp ,1  f1  q F  exp ,1  f1   pq   H exp  f     p f  X exp ,ntest  1  q  Fexp ,n  f1   test

p X exp ,1  f 2  q Fexp ,1  f 2 

 


p X exp ,ntest q Fexp ,n test

 f2   f2 



     p X exp f    S 1  ,ntest q Fexp f   S 1  ,ntest 
p X exp ,1  f S 1  q Fexp ,1  f S 1 

(C.4)

This is also done separately for the imaginary parts of the complex-valued FRFs and the real parts, respectively. For example, to compute the real part of each FRF:
p  Re X exp ,1  f1  q Fexp ,1  f1    pq  Re  H exp    f    p  X exp ,n  f1  test q  Re Fexp  f1  , n test 





Re



p X exp ,1  f 2  q Fexp ,1

 f2 





Re



p X exp ,1  f S 1  q Fexp ,1  f S 1 

 



 Re 


p X exp ,ntest q Fexp ,ntest

 f2   f2 



  Re




p X exp ,ntest q Fexp ,ntest

 f S 1   f S 1 



    

(C.5)

C.2.2 Frequency Domain Data Checks
When the GUI is started, the transformation to the frequency domain is computed, and the response spectra and FRFs for each test case in Eqs. (C.3), (C.4) and (C.5) are then plotted in separate windows from the main GUI output window. The acceleration and force spectra are shown in Fig. C-3, while the FRF magnitudes, real parts and imaginary parts are shown in Fig. C-4. For all test cases, the data checks in the frequency domain include: 1) Linearity checks - For the varying force levels from each impact at a fixed set of measurement coordinates, the FRFs for all test cases should be nearly identical to each other. Also, if the structure can be excited with a constant force (difficult to achieve with an impact hammer), the corresponding force spectra should be constant. 2) Repeatability - The FRF should be the same for each measurement. 3) Frequency shifts between tests - Indicates that the structure is not properly secured to the fixture in the same manner between tests. 4) Spurious modes - Unwanted vibrations, possibly caused by sensor resonances, unsecure sensors, ground vibration or parasitic fixture motion. 5) Reciprocity - Requires comparison with another set of test data with the excitation and response coordinates interchanged. The FRFs from the interchanged input/output coordinates should produce nearly identical results if mass-loading from the accelerometer is negligible.

227

6) Noise levels - Test cases with the highest noise levels or cases where resonance (or antiresonance) information is embedded in noise should removed from the data set.

Fig. C-3: (a) Acceleration spectrum, (b) Force spectrum

Fig. C-4: FRFs for each test case (a) FRF Magnitude, (b) Real part, (c) Imaginary part

228

By manually performing the specified data checks for the set of test cases, the erroneous sets of data can be removed from the GUI in Fig. C-2, and further processing of the remaining data sets can occur.

C.2.3 FRF Averaging and Smoothing
The main display window in Fig. C-2 shows the resulting FRF magnitude formed from averaging the corresponding 10 test cases. In general, averaging methods on FRF data assumes that there is random noise added to the output signal alone (H1 estimator), input signal alone (H2 estimator), or both signals have noise contamination (Hv or Hc estimators) [180]. These methods are common least-squares techniques used for estimating parameters in the presence of noise. To determine these averages, first the averaged cross-power spectra for ntest number of tests can be computed as:
pq GXF f

1 ntest 1 ntest

X
k 1 ntest

ntest

p exp , k

q  f  Fexp ,k  f 

(C.6)

qp GFX f

F  f X
k 1 q exp , k

p exp , k

f

(C.7)

where the over-bar denotes the complex conjugate. The summations in Eqs. (C.6) and (C.7) occur for each of the rows in Eq. (C.4). Similarly, the auto-power spectra can be determined from:
pp GXX f 

1 ntest

X
k 1 ntest

ntest

p exp , k

p  f  X exp ,k  f 

(C.8)

1 G f ntest
qq FF

F  f F  f 
k 1 q exp , k q exp , k

(C.9)

Since the majority of the hammer noise in this study was effectively eliminated using a force window, with noise still present in all of the acceleration signals, the H1 estimator was utilized in the MATLAB® code for the remaining sets of data under the "Data Sets" block of the GUI in Fig. C-2. The H1 estimator for the averaged FRF is computed using:
H1pq  f  
pq GXF f qq GFF  f 

(C.10)

229

Referring to the averaged FRF produced for the example in Fig. (C.2) for 10 tests, it can be noticed that there still remains a noticeable amount of noise after 750 Hz. Therefore, additional curve smoothing techniques are employed. The filters are applied using the "smooth" function in MATLAB® [178]. Four smoothing techniques based on linear least squares methods were made available in the GUI in Fig. C-2. The Savitzky-Golay filter uses a least squares regression with a polynomial of user-specified degree, and frame size (odd number of data points). The remaining smoothing methods include locally weighted polynomial regression variations which fit a low-degree polynomial to the set of data points using weighted linear least squares. The first of these methods (labeled "Weighted LLS w/ 1st deg polynomial" in the GUI) used a single degree polynomial, the second method used a second degree polynomial (labeled "Weighted LLS w/ 2st deg polynomial" in the GUI), and the third method used a first degree polynomial with lower weights assigned to any outliers in the data (labeled "Robust Weighted LLS" in the GUI). Greater details of these methods can be found in [178]. When one of the corresponding radio buttons were selected, the "Filter Controls" in the GUI changes to a slider so the user can select a percentage of data points to be used for the selected smoothing method. It was found that applying the same smoothing parameters over the entire range of frequencies will introduce damping at sharp resonances. This was especially true if certain regions of the FRF curve contained a greater amount of noise than other regions. Therefore, the GUI in Fig. C-2 included the possibility of applying different smoothing parameters over different selected frequency ranges. The same frequency and smoothing parameters were used to smooth the FRF magnitude, real part and imaginary part. For the example in Fig. C-2, with test cases 2, 3, 5, and 8 removed (since they contained the highest noise contributions), the robust weighted linear least squares regression method was selected to further smooth the averaged FRF. Table C-3 shows the selected frequency ranges and percentage of data points used to smooth the FRF in Fig. C-2, and Fig. C-5 shows the smoothed FRF magnitude along with the smoothed real and imaginary parts.

230

Fig. C-5: Smoothed FRFs (a) FRF Magnitude, (b) Real part, (c) Imaginary part

Table C-3: Frequency ranges used for smoothing example FRF Frequency Range [Hz] 0 to 11 12.5 to 85 104 to 295 323 to 536 564 to 703 745 to 882 908 to 2000 Percentage of data points for smoothing 6% 3% 8% 8% 11% 21% 17%

231

Appendix D - Experiment FRF Data Adjustments for Parasitic Loading Effects
D.1 Mass Loading Effects
Assuming an accelerometer behaves as a rigid mass, and if a 2-D beam element is used to model the link, each node contains two local translational structural DOF along the Xe and Ye axes (u and v), and a rotation about the Ze axis, . The kinetic energy when the accelerometer length is oriented along the negative Ye axis as in Fig. 6-3 (in Chapter 6) is:
  1 2   Tacc  1 2 macc  u  Lacc    v  Lacc  2 I m , acc
2 2





(D.1)

Substituting Eq. (D.1) into Lagrange's equation yields the inertial mass contribution of the accelerometer at node p:
u v



M

p e , acc

 macc 0  macc    sym.

 macc Lacc  macc Lacc   I m,acc  2macc L2 acc 

(D.2)

To include the mass loading effects at node p, in the local mass matrix for the ith component, Me,i becomes (Me,i + Me,acc), with Me,acc signifying that the accelerometer can be later removed or repositioned at any node in the analytical model. Adjusting the analytical model to include the mass loading effects of transducers allows for an accurate representation of the system under experimental conditions, and as such, can reproduce the FRFs exactly as measured if the model is perfectly correlated. However, this method does not allow for reciprocity checks of FRFs since repositioning a heavy accelerometer changes the response output. Therefore, another approach is to remove the mass effects of transducers from the experimental FRFs. For single-input-singleoutput measurements, the corrected FRF matrix entity in terms of the local accelerance, Ha = (j)2H, can be determined as [91,181]:

H

* pq a , exp e

H    1 m H  

pq a , exp e pp a , exp e

(D.3)

232

where m is an equivalent mass or rotary inertia term which is related to the type of measurement coordinate used (linear or rotational) and is determined from one of the matrix entries in Eq. (D.2). Eq. (D.3) assumes that the accelerometer is at a fixed location and roving hammer tests are performed. If a drive point measurement is made, then Eq. (D.3) can be used with p = q. Otherwise, Eq. (D.3) is invalid for multiple-input-multiple-output measurements and roving accelerometer tests since the transducer mass locations are changed. Ref. [181] offers alternative forms of Eq. (D.3) for those scenarios.

D.2 Fixture Loading Effects
It is often time consuming and costly to perform separate vibration tests on a fixture alone, especially if the fixture is adjustable or if different fixtures are used to hold different components. It would be beneficial to obtain analytically corrected experimental FRFs when concurrently performing experiments on test articles connected to a fixture. For component or substructure assembly tests, if the fixture's additional (parasitic) motion contributions are included, the experimental equations of motion in the global frame are as follows: XA  H   AA    X F G,exp  H FA

H AF   FA     H FF  G,exp  FF G,exp

(D.4)

where the F DOF are at the interface of the fixture and adjacent component, and the A DOF refer to the remaining DOF of the component(s). To mathematically constrain the motion of the fixture, XF is set to zero, and the top row of Eq. (D.4) results in:
1 X A,G ,exp    H AA  H AF H FF H FA   G ,exp FA,G ,exp  H corr FA,G ,exp

(D.5)

where Hcorr is the corrected experimental FRF of the test assembly with a fully rigid fixture. The original version of this method by Crowley et al. [182] has been implemented by previous researchers, including [105], to constrain fixture motions. If the connection interface can be represented by a single node with independent translational and rotational DOF, then only drivepoint measurements at the interface are required to find HFF. Eq. (D.5) completely avoids the need to model the fixture, thereby reducing the number of FE updating parameters. However, if the connection interface is a clamp, HFF might be impossible to measure if a force transducer (impact hammer or shaker) is obstructed. Therefore, a method to determine the unknown coupled

233

interface force is described which requires cross-point measurements by observing the motion at the fixture interface DOF while exciting points along the remaining component(s). The first row of Eq. (D.5) yields:

X A,G ,exp  H AA,G ,exp FA,G ,exp  H AF ,G ,exp FF ,G ,exp

(D.6)

If experimental FRF reciprocity and symmetry is not violated, then HAF = HFAT. Rearranging Eq. (D.6) to solve for the unknown interface forces gives:
T FF ,G ,exp    H FA   G ,exp  X A  H AA FA G ,exp 

(D.7)

where the superscript "+" denotes the Moore-Penrose pseudo-inverse. Afterwards, if each F DOF motion is measured independently, the unknown interface receptance, HFF, can be determined as [XF,exp / FF,exp]G, and substituted into Eq. (D.5) to remove the fixture effects from the test article. However, in practice, obtaining enough experimental data for even a single row in HFA to solve Eqs. (D.5) to (D.7) may prove to be difficult, as rotational and joint receptances cannot be measured. To overcome this issue, the dynamic FRF expansion technique in combination with the system equivalent reduction-expansion process (SEREP/DFE) [183] may be employed using a separate simplified full FE model of the experiment setup. The simplified model should only contain nodes on each component and fixture which coincide with experimental measurement points. By setting the unmeasured FE model DOF as slaves (omitted, o) and the measured DOF as masters (active, a), the equations of motion of the simplified FE model can be partitioned, and if the omitted force terms are set to zero, the response vectors at a particular frequency can be represented as:

I   X  X G =  a    1  X a ,G  Tdyn   X a ,G  X o G -Z oo   Z oa    G

(D.8)

To expand the measured receptance FRFs to include the unmeasured (omitted) DOF at a particular frequency, the following transformation is applied [183]:

H     T     H
G , exp dyn

G , exp a

(D.9)

234

This FRF expansion process can allow estimations of the individual unmeasured experimental receptance DOF, thus providing approximations for complete rows/columns for HFA in Eq. (D.7). If there are insufficient measurements, or a highly inaccurate initial model estimate for the simplified FE model, then the next available option is to include a model of the fixture connection DOF during the updating process. The analytical dynamic stiffness at the interface of a component and a fixture can be expressed as ZFF = ZFF,c + ZFF,fixture. Using an optimization algorithm, nonlinear constraints can be applied to the measured fixture motion to enforce displacement compatibility at the interface while updating all components in the test assembly, including the fixture DOF, ZFF,fixture, which can be removed from the model once the updating process is completed. Afterwards, the updated model parameters can be used in Eq. (D.9) to obtain a better approximation of the experimental FRF with fixture effects removed.

235

Bibliography
[1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] [14] [15] [16] [17] [18] [19] [20] [21] Y. Terada, S. Murata, 2008, "Automatic Modular Assembly System and its Distributed Control," International Journal of Robotics Research, 27(3), pp. 445-462. W. Shen, P. Will, B. Koshnevis, 2003, "Self-Assembly in Space via Self-Reconfigurable Robots," Proc. IEEE International Conference on Robotics and Automation, 2, pp. 2516-2521. C.H. Yu, K. Haller, D. Ingber, R. Nagpal, 2008, "Morpho: A Self-deformable Modular Robot Inspired by Cellular Structure," Proc. IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 3571-3578. Q. Wu, G. Cao, Y. Fei, 2005, "Described model of a Modular Self-Reconfigurable Robot," Proc. of the Fourth International Conference on Machine Learning and Cybernetics, pp. 18-21. M. Hafez, D. Lichter, S. Dubowsky, 2002, "Optimized Binary Modular Reconfigurable Robotic Devices," Proc. IEEE International Conference on Robotics and Automation, pp. 335-340. J. Mämpel, K. Gerlach, C. Schilling, H. Witte, 2009,"A Modular Robot Climbing on Pipe-like Structures," Proc. IEEE International Workshop on Autonomous Robots and Agents, pp. 87-91. G. Yang, I.M. Chen, 2000, "Task-Based Optimization of Modular Robot Configurations: Minimized Degree-of-Freedom Approach," Mechanism and Machine Theory, 35(4), pp. 517-540. H. Zhang, J. Gonzalez-Gomez, Z. Xie, S. Cheng, J. Zhang, 2008, "Development of a Low-Cost Flexible Modular Robot GZ-I," Proc. IEEE/ASME International Conference on Advanced Intelligent Machines, pp. 223-228 A. Castano, P. Will, 2000, "Mechanical Design of a Module for Reconfigurable Robots," Proc. IEEE International Conference on Intelligent Robots and Systems, pp. 2203-2209. M. Tarkian, J. Persson, J. Olvander, X. Feng, 2013, "Multidisciplinary Design Optimization of Modular Industrial Robots by Utilizing High Level CAD Techniques," ASME Journal of Mechanical Design, 134(12), p. 124502. P. Schrock, F. Farelo, R. Alqasemi, and R. Dubey, 2009, "Design, Simulation and Testing of a New Modular Wheelchair Mounted Robotic Arm to Perform Activities of Daily Living", Proc. IEEE International Conference on Rehabilitation Robotics, pp. 518-523. S.M. Said, M. Hassan, S. bin Sulaiman, 2000, Flexible Modular Robotics link Design", Proc. IEEE TENCON 2000, pp. 162-166. I.M. Chen, and G. Yang, 1999, "Numerical Inverse Kinematics for Modular Reconfigurable Robots". Journal of Robotic Systems, 16(4), pp. 213-225. F. Xi, J. Sun, 2008, "A Motion Simulation Method for Reconfigurable Machines," International Journal of Manufacturing Research, 3(2), pp. 216-235. Z.M. Bi, L. Wang, 2009, "Optimal Design of Reconfigurable Parallel Machining Systems", Robotics and Computer-Integrated Manufacturing, 25(6), pp. 951-961. W.H. Lee, A.C. Sanderson, 2001, "Dynamic Analysis and Distributed Control of the Tetrobot Modular Reconfigurable Robotic System," Autonomous Robots, 10(1), pp. 67-82. I.M. Chen, G. Yang, 1998, "Inverse Kinematics for Modular Reconfigurable Robots," Proc. IEEE International Conference on Robotics and Automation, pp. 1647-1652. Y. Fei, X. Zhao, L. Song, 2001, "A Method for Modular Robots Generating Dynamics Automatically," Robotica, 19(1), pp. 59-66. Y. Lin, F. Xi, R.P. Mohamed, X. Tu, 2010, "Calibration of Modular Reconfigurable Robots Based on a Hybrid Search Method," ASME Journal of Manufacturing Science and Engineering, 132(6), p. 061002. I.M. Chen, G. Yang, 1997, "Kinematic Calibration of Modular Reconfigurable Robots Using Product-of-Exponentials Formula," Journal of Robotic Systems, 14(11), pp. 807-821. R. Cohen, M.G. Lipton, M.Q. Dai, B. Benhabib, 1992, "Conceptual Design of a Modular Robot," ASME Journal of Mechanical Design, 114(1), pp. 117-125.

236

[22] [23] [24] [25] [26] [27] [28] [29] [30] [31] [32] [33] [34] [35] [36] [37] [38] [39] [40] [41] [42]

L. Chen, F. Xi, Z. Xu, 2005, "Optimal Module Selection for Preliminary Design of Reconfigurable Machine Tools," ASME Journal of Manufacturing Science and Engineering, 127 (1), pp. 104-115. A.A. Shabana, 2005, Dynamics of Multibody Systems, 3rd Ed., Cambridge University Press. M.G. Catalano, G. Grioli, M. Garabini, F. Bonomo, M. Mancini, N. Tsagarakis, A. Bicchi, 2011, "VSA-CubeBot: A Modular Variable Stiffness Platform for Multiple Degrees of Freedom Robots," Proc. IEEE International Conference on Robotics and Automation, pp. 5090-5095. P.J. White, S. Revzen, C.E. Thorne, M. Yim, 2011, "A General Stiffness Model for Programmable Matter and Modular Robotic Structures," Robotica, 29(1), pp. 103-121. M. De Smet, C. Liefooghe, P. Sas, R. Snoeys, 1989, "Dynamic Analysis of Flexible Structures Using Component Mode Synthesis," ASME Journal of Applied Mechanics, 56(4), pp. 874-880. E. J. Park, J. K. Mills, 2005, "Static Shape and Vibration Control of Flexible Payloads With Applications to Robotic Assembly," IEEE/ASME Transactions on Mechatronics, 10(6), pp. 675687. J. D. Moon, D. W. Cho, 1992, "A Component Mode Synthesis Method Applied to Mechanisms for an Investigation of Vibration," Journal of Sound and Vibration, 157(1), pp. 67-79. A.G. Erdman, G.N. Sandor, "Kineto-elasto-dynamics: A Review of State of Art and Trends," Mechanism and Machine Theory, 7(1), pp. 19-33. A.A. Shabana, 1997, "Flexible Multibody Dyamics: Review of Past and Recent Developments," Multibody System Dynamics, 1(1), pp. 189-222. T.M. Wasfy, A.K. Noor, 2003, "Computational Strategies for Flexible Multibody Systems," Applied Mechanics Reviews, 56(6), pp. 553-613. P. Eberhard, W. Schiehlen, 2006, "Computational Dynamics of Multibody Systems: History, Formalisms, and Applications," ASME Journal of Computational and Nonlinear Dynamics, 1(1), pp. 3-12. S.K. Dwivedy, P. Eberhard, 2006, "Dynamic Analysis of Flexible Manipulators, A Literature Review," Mechanism and Machine Theory, 41(2), pp. 749-777. T.M. Wasfy, A.K. Noor, 1996, "Modeling and Sensitivity Analysis of Multibody Systems Using New Solid Shell and Beam Elements," Computer Methods in Applied Mechanics and Engineering, 1-4(1), pp. 187-211. A.A. Shabana, 1994, "Computer Implementations of Flexible Multibody Equations," In M. Seabra Pereira, J.A.C. Ambrosio, Editors, Computer-Aided Analysis of Rigid and Flexible Mechanical Systems, pp. 325-349, Springer. K. Changizi, A.A. Shabana, 1988, "A Recursive Formulation for the Dynamic Analysis of Open Loop Deformable Multibody Systems," ASME Journal of Applied Mechanics, 55(3), pp. 687-693. M.S. Pereira, P.L. Proenca, 1991, "Dynamic Analysis of Spatial Flexible Multibody Systems Using Joint Coordinates," International Journal for Numerical Methods in Engineering, 32(8), pp. 1799-1812. F. Matsuno, T. Asano, Y. Sakawa, 1994, "Modeling and Quasi-Static Hybrid Position/Force Control of Constrained Two-Link Flexible Manipulators," IEEE Transactions on Robotics and Automation, 10(3), pp. 287-298. Y. Shigang, 2000, "Weak-Vibration Configurations for Flexible Robot Manipulators with Kinematic Redundancy," Mechanism and Machine Theory, 35(2), pp. 165-178. M.W. Spong, 1987, "Modeling and Control of Elastic Joint Robots," ASME Journal of Dynamic Systems, Measurement and Control, 109(4), pp. 310-319. Z. Yang, J.P. Sadler, 1992, "Finite Element Analysis of Revolute Manipulators with Link and Joint Compliance by Joint-Beam Elements," ASME Design Engineering Division (DE), Robotics Spatial Mechanisms and Mechanical Systems, 45 (1), pp. 619-625. F. Xi, R.G. Fenton, 1994, "Coupling Effect of a Flexible Link and a Flexible Joint," International Journal of Robotics Research, 13(5), pp. 443-453.

237

[43] [44] [45] [46] [47] [48] [49] [50] [51] [52] [53] [54] [55] [56] [57] [58] [59] [60] [61] [62]

L.L. Howell, A. Midha, T.W. Norton, 1996, "Evaluation of Equivalent Spring Stiffness for use in a Pseudo-Rigid-Body Model of Large-Deflection Compliant Mechanisms," ASME Journal of Mechanical Design, 118(1), pp. 126-131. A. Saxena, S.N. Kramer, 1998, "A Simple and Accurate Method for Determining Large Deflections in Compliant Mechanisms Subjected to End Forces and Moments," ASME Journal of Mechanical Design, 120(3), pp. 392-400. A.A. Shabana, 1996, "Resonance Conditions and Deformable Body Coordinate Systems," Journal of Sound and Vibration, 192(1), pp. 392-398. R.J. Theodore, A. Ghosal, 1995, "Comparison of the Assumed Modes and Finite Element Models for Multilink Flexible Manipulators," International Journal of Robotics Research, 14(2), pp. 91111. S.J. Huang, T.Y. Wang, 1993, "Structural Dynamics Analysis of Spatial Robots with Finite Element Approach," Computers and Structures, 46(4), pp. 703-716. B.J. Torby, I. Kimura, 1999, "Dynamic Modeling of a Flexible Manipulator with Prismatis Joints," Journal of Dynamic Systems, Measurement, and Control, 121(4), pp. 691-696. Y.M. Wang, Z. Wang, 2001, "A Time Finite Element Method for Dynamic Analysis of Elastic Mechanisms in Link Coordinate Systems," Computers and Structures, 79(2), pp. 223-230. Z. Zhou, J. Xi, C.M. Mechefske, 2006, "Modeling of a Fully Flexible 3PRS Manipulator for Vibration Analysis," ASME Journal of Mechanical Design, 128(2), pp. 403-412. F. Xi, D. Zhang, C.M. Mechefske, S.Y.T. Lang, 2004, "Global Kinetostatic Modelling of TripodBased Parallel Kinematic Machine," Mechanism and Machine Theory, 39(4), pp. 357-377. Z. Chi, D. Zhang, 2012, "Stiffness Optimization of a Novel Reconfigurable Parallel Kinematic Manipulator," Robotica, 30(3), pp. 443-447. B. Hu, J. Yu, Y. Lu, C. Sui, H. Han, 2012, "Statics and Stiffness Model of Serial-Parallel Manipulator Formed by k Parallel Manipulators Connected in Series," ASME Journal of Mechanisms and Robotics, 4(3), p. 021012. S. Tosunoglu, 1995, "Modeling of Flexible Elements in Robotic Systems for Modular Environments," Proc. IEEE Inductrial Electronics, Control and Instrumentation Conference, 1, pp. 138-143. R.P. Mohamed, F. Xi, A.D. Finistauri, 2010, "Module-Based Static Structural Design of a Modular Reconfigurable Robot," ASME Journal of Mechanical Design, 131(1), p. 014501. P.J. White, S. Latscha, S. Schlaefer, M. Yim, 2011, "Dielectric Elastomer Bender Actuator Applied to Modular Robotics," Proc. IEEE/RSJ Conference on Intelligent Robots and Systems, pp. 408-413. S.C. Tang, C. Wang, 1987, "Computation of the Effects of Link Deflections and Joint Compliance on Robot Positioning," Proc. IEEE International Conference on Robotics and Automation, pp. 910-915. J.P. Sadler, Z. Yang, 1997, "A Comprehensive Study of Modal Characteristics of a Cylindrical Manipulator with both Link and Joint Flexibility," Mechanism and Machine Theory, 32(8), pp. 941-956. Y. Li, J. Xi, R.P. Mohamed, K. Behdinan, 2011, "Dynamic Analysis for Robotic Integration of Tooling Systems," ASME Journal of Dynamic Systems, Measurement, and Control, 133(4), p. 041002-1. J.K. Salisbury, J.J. Craig, 1982, "Articulated Hands, Force Control and Kinematic Issues," International Journal of Robotics Research, 1(1), pp.4-17. H. Lipkin, T. Patterson, 1992, "Generalized Center of Compliance and Stiffness," Proc. IEEE International Conference on Robotics and Automation, pp.1251-1256. G. Legani, D. Todi, I. Fassi H. Giberti, S. Conquemani, 2010, "The `Point of Isotropy' and Other Properties of Serial and Parallel Manipulators," Mechanism and Machine Theory, 45(10), pp.1407-1423.

238

[63] [64] [65] [66] [67] [68] [69] [70] [71] [72] [73] [74] [75] [76] [77] [78] [79] [80] [81] [82] [83]

D. Gan, N.G. Tsagarakis, J.S. Dai, D.G Caldwell, 2011, "Stiffness Design for Complaint Manipulators Based on Dynamics Analysis of the Impact Configuration," Proc. 2011 ASME International Design Engineering Technical Conference, 6, pp. 103-112. G. Piras, W.L. Cleghorn, J.K. Mills, 2005, "Dynamic Finite-Element Analysis of a Planar HighSpeed High-Precision Parallel Manipulator with Flexible Links," Mechanism and Machine Theory, 40(7), pp. 849-862. M. Callegari, A. Gabrielli, M. Ruggiu, 2008, "Kineto-elasto-static Synthesis of a 3-CRU Spherical Wrist for Miniaturized Assembly Tasks," Meccanica 43 , pp. 377-389. I. Tyapin, G. Hovland, 2009, "Kinematic and Elastostatic Design Optimisation of the 3-DOF Gantry-Tau Parallel Kinematic Manipulator", Modeling, Identification and Control, 30(2), pp. 39-56. J.P. Sadler, Z. Yang, B.A. Askren, 1994, "Finite Element Methods for the Design of Mechanisms and Robotic Manipulators," Computer Applications in Technology, 7(3), pp. 305-315. Z.C. Lin, D.T. Lin, 1994, "Dynamic Deflection Analysis of a Planar Robot," Computers & Structures, 53(4), pp. 947-960. S. Oral, S. Kemal Ider, 1997, "Optimum Design of High-Speed Flexible Robotic Arms with Dynamic Behavior Constraints," Computers & Structures, 65(2), pp. 255-259. Y. Zhu, J. Qiu, J. Tani, 2001, "Simultaneous Optimization of a Two-Link Flexbile Robotic Arm," Journal of Robotic Systems, 18(1), pp. 29-38. W. Shijun, Z, Jinjuan, 2002, "FEM Optimization for Robotic Structure," Proc. IEEE International Conference on Industrial Technology, pp. 510-513. J. Roy, R.P. Goldberg, L.L. Whitcomb, 2004, "Structural Design, Analysis and Performance Evaluation of a New Semi-Direct Drive Robot Arm: Theory and Experiment," IEEE/ASME Transactions on Mechatronics, 9(1), pp. 10-18. U.S. Dixit, R. Kumar, S.K. Dwivedy, 2006, "Shape Optimization of Flexible Manipulators," ASME Journal of Mechanical Design, 128(3), pp. 559-565. K. Abdel-Malik, B. Paul, 1998, "Criteria for the Design of Manipulator Arms for a High Stiffness-to-Weight Ratio", Journal of Manufacturing Systems, 17(3), pp.209-220. C. ZhongYi, Q. DongSheng, S. NiLing, C. Jing, 2004, "Research of 2-DOF Planar Parallel High Speed/High Accuracy Robot," Proc. Fifth World Congress on Intelligent Control and Automation (WCICA), 6, pp. 4715-4719. P. Eberhard, Q. Tang, 2011, "Partile Swarm Optimization used for Mechanism Design and Guidance of Swarm Mobile Robots," in Particle Swarm Optimization: Theory, Techniques and Applications, A.E. Olsson, editor. pp. 193-225. Nova Science Publishers, New York. L. Cui, Z. Xiao, 2003, "Optimum Structure Design of Flexible Manipulators Based on GA," Proc. IEEE International Conference on Intelligent Transportation Systems, 2, pp. 1622-1626. R. Saravanan, S. Ramabalan, N. Godwin Raja Ebenezer, R. Natarajan, 2009, "Evolutionary Bicriteria Optimum Design of Robots Based on Task Specifications", International Journal of Advanced Manufacturing Technology, 41(3), pp. 386-406. D. Zhang, Z, Xu, C.M. Mechefske, F. Xi, 2004, "Optimum Design of Parallel Kinematic Toolheads with Genetic Algorithms," Robotica, 22(1), pp. 77-84. W-H Zhu, T. Lamarche, P. Bernard, 2007, "Modular Robot Manipulators with Preloadable Modules," Proc. 2007 IEEE International Conference on Mechatronics and Automation, pp. 712. W.C. Hurty, 1964, "Dynamic Analysis of Structural Systems Using Component Modes," AIAA Journal, 3(4), pp. 678-685. R.R. Craig Jr., M.C.C. Bampton, 1968, "Coupling of Substructures for Dynamic Analyses," AIAA Journal, 6(7), pp. 1313-1319. R. H MacNeal, 1971, "A Hybrid Method of Component Mode Synthesis," Computers & Structures, 1(4), pp. 581-601.

239

[84] [85] [86] [87] [88] [89] [90] [91] [92] [93] [94] [95] [96] [97] [98] [99] [100] [101] [102] [103] [104] [105] [106]

S. Rubin, 1975, "Improved Component-Mode Representation for Structural Dynamic Analysis," AIAA Journal, 13(8), pp. 995-1006. R.M. Hintz, 1975, "Analytical Methods in Component Modal Synthesis," AIAA Journal, 13(8), pp. 1007-1016. M.P. Singh, L.E. Suarez, 1992, "Dynamic Condensation with Synthesis of Substructure Eigenproperties," Journal of Sound and Vibration, 159(1), pp. 139-155. B. Biondi, G. Muscolino, 2000, "Component Mode Synthesis Method Variants in the Dynamics of Coupled Substructures," Meccanica, 35(1), pp. 17-38. D. de Klerk, D.J. Rixen, S.N. Voormeeren, 2008, "General Framework for Dynamic Substructuring: History, Review and Classification Techniques," AIAA Journal, 46(5), pp. 11691181. R.R. Craig Jr., 1995, "Substructure Methods in Vibration," ASME Journal of Vibration and Acoustics, 117(B), pp. 207-213. K.J. Bathe, 1996, Finite Element Procedures, Prentice Hall, New Jersey. D. J. Ewins, 2000, Modal Testing: Theory, Practice and Application, 2nd Ed., Research Studies Press, England. J.A. Morgan, C. Pierre, G.M. Hulbert, 2003"Baseband Methods of Component Mode Synthesis for Non-Proportionally Damped Systems," Mechanical Systems and Signal Processing, 17(3), pp. 589-598. A. Majed, E.E. Henkel, C. Wilson, 2005, "Improved Method of Mixed-Boundary ComponentMode Representation for Structural Dynamic Analysis," AIAA Journal of Spacecraft and Rockets, 42(5), pp. 825-831. S. Dieker, K. Abdoly, A. Rittweger, 2010, "Flexible Boundary Method in Dynamic Substructure Techniques Including Different Component Damping," AIAA Journal, 48(11), pp. 2631-2638. R.R. Craig Jr., 1987, "A Review of Time-Domain and Frequency-Domain Component Mode Synthesis Method," International Journal of Analytical and Experimental Modal Analysis, 2(2), pp. 1-30. R.J. Guyan, 1965, "Reduction of Stiffness and Mass Matrices," AIAA Journal, 3(2), p. 380. W.H. Shyu, Z.D. Ma, G.M. Hulbert, 1997, "A New Mode Synthesis Method: Quasi-Static Mode Compensation," Finite Elements in Analysis and Design, 24(4), p. 271-281. W.A. Benfield, R.F. Hruda, 1971, "Vibration Analysis of Structures by Component Mode Substitution," AIAA Journal, 9(7), pp. 1255-1261. M. Baker, 1986, "Component Mode Synthesis Methods for Test-Based, Rigidly Connected Flexible Components," AIAA Journal of Spacecraft and Rockets, 23(3), pp. 316-322. K.F. Alvin, L.D. Peterson, K.C. Park, 1995, "Minimal-Order Experimental Component Mode Synthesis: New Results and Challenges," AIAA Journal, 33(8), pp. 1477-1485. M. Karpel, S. Ricci, 1997, "Experimental Modal Analysis of Large Structures by Substructuring," Mechanical Systems and Signal Processing, 11(2), pp. 246-256. R.L. Mayes, M.R. Ross, 2012, "Advancements in Hybrid Dynamic Models Combining Experimental and Finite Element Substructures," Mechanical Systems and Signal Processing, 31, pp. 56-66. D.P. Rohe, M.S. Allen, 2014, "Investigation of the Effectiveness of Using an Experiment to Validate Experimental Substructure Models," Mechanical Systems and Signal Processing, 43(2), pp. 192-216. M. Misawa, J. Nakajima, H. Kawasoe, 2013, "Dynamic Characteristics Prediction of Large Substructures by Component Modal Tests," AIAA Journal, 51(8), pp. 2024-2028. Y. Soucy, J.L. Humar, 2003, "Experimental Verification of a Test-Based Component Mode Synthesis Approach," AIAA Journal, 41(5), pp. 912-923. M.S. Allen, H.M. Gindlin, R.L. Mayes, 2011, "Experiment Modal Substructuring to Estimate Fixed-base Modes from Tests on a Flexible Fixture," Journal of Sound and Vibration, 330(18), pp. 4413-4428.

240

[107] [108] [109] [110] [111] [112] [113] [114] [115] [116] [117] [118] [119] [120] [121] [122] [123] [124] [125] [126]

W. D'Ambrogio, A. Fregolent, 2009, "Decoupling Procedures in the General Framework of Frequency Based Substructuring," Proc. 27th International Modal Analysis Conference, Society for Experimental Mechanics, Orlando, FL., (15 pages). S.N. Voormeeren, D.J. Rixen, 2009, "Substructure Decoupling Techniques - A review and Uncertainty Propagation Analysis," Proc. 27th International Modal Analysis Conference, Society for Experimental Mechanics, Orlando, FL., (10 pages). E.L. Blades, R.R. Craig Jr., 1997, "A Craig-Bampton Test-Analysis Model," Proc. International Modal Analysis Conference, Society for Experimental Mechanics, pp. 1386-1391. J.A. Morgan, C. Pierre, G.M. Hulbert, 1997, "Forced Response of Coupled Substructures Using Experimentally Based Component Mode Synthesis," AIAA Journal, 35(2), pp. 334-339. I. Imam, G.N. Sandor, S.N. Kramer, 1973, "Deflection and Stress Analysis in High Speed Planar Mechanisms with Elastic Links," ASME Journal of Manufacturing Science, 95(2), pp. 541-548. A. Shabana, R.A. Wehage, 1983, "Variable Degree of Freedom Component Mode Analysis of Inertia-Variant Flexible Mechanical System," ASME Journal of Mechanisms, Transmissions, and Automation in Design, 105(3), pp. 370-378. C.W. Jen, D.A. Johnson, 1991, "Modal Sensitivity Analysis of Planar Robots, Based on a Simplified CMS Approach," Journal of Robotic Systems, 8(4), pp. 443-463. Z. Xianmin, L. Jike, S. Yunwen, 1998, "A High Efficient Frequency Analysis Method for Closed Flexible Mechanism Systems," Mechanism and Machine Theory, 33(8), pp. 1117-1125. R.R. Craig Jr., T.C. Anthony, 1996, "On the Use of Component Modes in Multibody Dynamics," Proc. 37th AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics, and Materials Conference, 3, pp. 1522-1529. A. Cardona, 2000, "Superelements Modelling in Flexible Multibody Dynamics," Multibody System Dynamics, 4(2-3), pp. 245-266. J. Gerstmayr, J.A.C. Ambrosio, 2008, "Component Mode Synthesis with Constant Mass and Stiffness Matrices Applied to Flexible Multibody Systems," International Journal for Numerical Methods in Engineering, 73(11), pp. 1518-1546. A. Pechstein, D. Reischl, J. Gerstmayr, 2013, "A Generalized Component Mode Synthesis Approach for Flexible Multibody Systems with a Constant Mass Matrix," ASME Journal of Mechanisms and Robotics, 8(1), p. 11019. K.M. Liew, S.E. Lee, A.Q. Liu, 1996, "Mixed-Interface Substructures for Dynamic Analysis of Flexible Multibody Systems," Engineering Structures, 18(7), pp. 495-503. J.E. Mottershead, M.I. Friswell, 1993, "Model Updating in Structural Dynamics: A Survey," Journal of Sound and Vibration, 167(2), pp. 347-375. R.M Lin, D.J. Ewins, 1994, "Analytical Model Improvement Using Frequency Response Functions," Mechanical Systems and Signal Processing, 8(4), pp. 437-458. T. Yang, S.-H. Fan, C.-S. Lin, 2003, "Joint Stiffness Identification Using FRF Measurements," Computers and Structures, 81(28-29), pp. 2549-2256. R.I. Levin, N.A.J Lieven, 1998, "Dynamic Finite Element Model Updating Using Simulated Annealing and Genetic Algorithms," Mechanical Systems and Signal Processing, 21(1), pp. 91120. D.F. Pilkey, 1998, Computation of Damping Matrix for Finite Element Model Udpdating, PhD Dissertation, Engineering Mechanics Dept., Virginia Polytechnic Institute and State University. P. Avitable, H. Tsuji, J. O'Callahan, J.P. DeClerck, 2005, "Reallocation of System Mass and Stiffness for Achieving Target Specifications Using a Superelement Substructuring Methodology," Internationational Journal of Vehicle Noise and Vibration, 1(3), pp. 307-327. A. Butland, P. Avitable, 2010, "A Reduced Order, Test Verified Component Mode Synthesis Approach for System Modeling Applications," Mechanical Systems and Signal Processing, 24(4), pp. 904-921.

241

[127] [128] [129] [130] [131] [132] [133] [134] [135] [136] [137] [138] [139] [140] [141] [142] [143] [144] [145] [146] [147] [148]

J. Carvalho, B.N. Datta, A. Gupta, M. Lagadapati, 2007, "A Direct Method for Model Updating with Incomplete Measured Data and without Spurious Modes," Mechanical Systems and Signal Processing, 21(7), pp. 2715-2731. R.M. Lin, J. Zhu, 2006, "Model Updating of Damped Structures Using FRF Data," Mechanical Systems and Signal Processing, 20(8), pp. 2200-2218. V. Arora, S.P. Singh, T.K. Kundra, 2009, "Finite Element Model Updating with Damping Identification," Journal of Sound and Vibration, 324(3-5), pp. 1111-1123. M. Imregun, W.J. Visser, D.J. Ewins, 1995, "Finite Element Model Updating Using Frequency Response Function Data - I. Theory and Investigation," Mechanical Systems and Signal Processing, 9(2), pp. 187-202. K.S. Kwon, R.M. Lin, 2004, "Frequency Selection Method for FRF-Based Model Updating," Journal of Sound and Vibration, 278(1-2), pp. 285-306. T. Marwala, 2001, "Fault Identification Using Pseudomodal Energies and Modal Properties," AIAA Journal, 39(8), pp. 1608-1617. K. Jones, J. Turcotte, 2002, "Finite Element Model Updating Using Antiresonant Frequencies," Journal of Sound and Vibration, 252(4), pp. 717-727. T. Marwala, 2010, Finite-Element-Model Updating Using Computational Techniques: Applications to Structural Dynamics, Springer-Verlag, London, England. S. Moradi, L. Fatahi, P. Razi, 2010, "Finite Element Model Updating Using Bees Algorithm," Structural and Multidisciplinary Optimization, 42(2), pp. 283-291. G.H. Kim, Y.S. Park, "An Improved Updating Parameter Selection Method and Finite Element Model Update Using Multiobjective Optimisation Technique," Mechanical Systems and Signal Processing, 18(1), pp. 59-78. K.S. Kwon, R.M. Lin, 2005, "Robust Finite Element Model Updating Using Taguchi Method," Journal of Sound and Vibration, 254(1-2), pp. 77-99. J.A. Beck, J.M. Brown, C.J. Cross, J.C. Slater, G.B. Lamont, 2014, "Framework for creating Digital Representations of Structural Components Using Computational Intelligence Techniques," AIAA Journal, 52(4), pp. 855-866. J.L. Zapico-Valle, R. Alonso-Camblor, M.P. Gonzalez-Martinez, M. Garcia, Dieguez, 2010, "A New Method for Finite Element Model Updating in Structural Dynamics," Mechanical Systems and Signal Processing, 24(7), pp. 2137-2159. Q.W. Zhang, C.C. Chang, T.Y.P. Chang, 2000, "Finite Element Model Updating for Structures with Parametric Constraints," Earthquake Engineering and Structural Dynamics, 29(7), pp. 927944. S.V. Modak, T.K. Kundra, B.C. Nakra, 2000, "Model Updating using Constrained Optimization," Mechanics Research Communications, 27(5), pp. 543-551. M.T. Pham, M. Gautier, P. Poignet, 2001, "Identification of Joint Stiffness with Bandpass Filtering," Proc. IEEE International Conference on Robotics and Automation, pp. 2867-2872. G. Alici, B. Shirinzadeh, 2005, "Enhanced Stiffness Modeling, Identification and Characterization for Robot Manipulators," IEEE Transactions on Robotics, 21(4), pp. 554-564. M. Rognant, E. Courteille, P. Maurine, 2010, "A Systematic Procedure for the Elastodynamic Modeling and Identification of Robot Manipulators," IEEE Transactions on Robotics, 26(6), pp. 1085-1093. C. Dumas, S. Caro, M. Cherif, S. Garnier, B. Furet, 2012, "Joint Stiffness Identification of Industrial Serial Robots," Robotica, 30(4), pp. 649-659. Y. Li, X. Liu, Z. Peng, Y. Liu, 2002, "The identification of Joint Parameters for Modular Robots using Fuzzy Theory and a Genetic Algorithm," Robotica, 20(5), pp. 509-517. Y. Li, Y. Liu, X. Liu, Z. Peng, 2003, "Parameters Identification and Vibration Control for Modular Manipulators," Proc. IEEE International Conference on Robotics and Automation, pp. 3254-3259. A.A. Shabana, 2001, Computational Dynamics, 2nd Ed., John Wiley & Sons Inc., New York.

242

[149] [150] [151] [152] [153] [154] [155] [156] [157] [158] [159] [160] [161] [162] [163] [164] [165] [166] [167] [168] [169] [170] [171] [172] [173]

F. Xi, 2009, Computational Dynamics Lecture Notes, Ryerson University. J.J. Craig, 2005, Introduction to Robotics - Mechanics and Control, Pearson Education Inc., New Jersey. J. Denavit, R.S. Hartenberg, 1955, "A Kinematic Notation for Lower-pair Mechanisms Based on Matrices," ASME Journal of Applied Mechanics, 22(2), pp. 215-221. R.D. Cook, D.S. Malkus, M.E. Plesha, R.J. Witt, 2002, Concepts and Applications of Finite Element Analysis, Wiley, New York. 4th Ed. J.S. Przemieniecki, 1985, Theory of Matrix Structural Analysis, Dover Publications, New York. G. Cowper, 1966, "The Shear Coefficient in Timoshenko's Beam Theory," ASME Journal of Applied Mechanics, 33(2), pp. 335-340. J.R. Hutchinson, 2001, "Shear Coefficients for Timoshenko Beam Theory," ASME Journal of Applied Mechanics, 68(1), pp. 87-92. W.L. Cleghorn, B. Tabarrok, Y. Xiong, T.W. Lee, 1991, "A Note on some Exact Elements," Int. Journal of Mechanical Engineering Education, 19(2), pp. 143-154. Y. Yokoyama, 1990, "Vibrations of a Hanging Timoshenko Beam Under Gravity," Journal of Sound and Vibration, 141(2), pp. 245-258. L. Xu, 1992, "Geometrical Stiffness and Sensitivity Matrices for Optimization of Semi-Rigid Steel Frameworks," Structural Optimization, 5(1-2), pp. 95-99. S.N. Sivanandam, S.N. Deepa, 2007, "Introduction to Genetic Algorithms," Springer, New York. K. Deb, A. Pratap, S. Agarwal, T. Meyarivan, 2002, "A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II," IEEE Transactions on Evolutionary Computation, 6(2), pp. 182-197. I.M. Chen, J.W. Burdick, 1993, "Assembly Configurations of Modular Robotic Systems," Proc. IEEE/RSJ International Conference on Intelligent Robotics and Systems, pp. 1985-1992. G. Liu, Y. Liu, A. Goldenberg, 2011, "Design, Analysis and Control of a Spring-Assisted Modular and Reconfigurable Robot," IEEE/ASME Transactions on Mechatronics, 16(4), pp. 695706. S.C. Chapra, R.P. Canale, 2010, Numerical Methods for Engineers, 6th ed. McGraw-Hill, New York. Y. Nakamura, 1991, Advanced Robotics: Redundancy and Optimization, Addison-Wesley, Boston. Z. Fu, J. He, 2001, Modal Analysis, Butterworth-Heinemann, Boston. B.K. Donaldson, 2006, Introduction to Structural Dynamics, Cambridge University Press, New York. F. Tisseur, K. Meerbergen, 2001, "The Quadratic Eigenvalue Problem," SIAM Review, 43(2), pp. 235-286. J. He, Y.-Q. Li, 1995, "Relocation of Anti-Resonances of a Vibratory System by Local Structural Changes", Modal Analysis, 10(4), pp. 224-235. J.H. Gordis, 2009, "An Analysis for the Improved Reduced System (IRS) Model Reduction Procedure," Proc. 10th International Modal Analysis Conference, Society for Experimental Mechanics, San Diego, CA, pp. 471-479. G.L. Giles, K. Norwood, 1994, "Coupling Equivalent plate and Finite Element Formulations in Multiple-Method Structural Analyses," AIAA Journal of Aircraft, 31(5), pp. 1189-1196. R. Williams, J. Crowley, H. Vold, 1985, "The Multivariate Mode Indicator Function in Modal Analysis," Proc. 2nd International Modal Analysis Conference, Society for Experimental Mechanics, Orlando, Florida, pp. 66-70. R. Pascual, J.C. Govinal, M. Razeto, 1997, "A Frequency Domain Correlation Technique for Model Correlation and Updating," Proc. 15th International Modal Analysis Conference, Society for Experimental Mechanics, 1997, pp. 587-592. W. Heylen, T. Janter, 1990, "Extensions of the Modal Assurance Criterion," ASME Journal of Vibration and Acoustics, 112(2), pp. 468-472.

243

[174] [175] [176] [177] [178] [179] [180] [181] [182] [183]

D. Celic, M. Boltezar, 2009, "The Influence of the Coordinate Reduction on the Identification of Joint Dynamic Properties," Mechanical Systems and Signal Processing, 23(4), pp. 1260-1271. J.H. Lim, 2014, "A Correlation Study of Satellite Finite Element Model for Coupled Load Analysis using Transmissibility with Modified Correlation Measures," Aerospace Science and Technology, 33(1), pp. 82-91. Horton, J. M., Tupholme, G. E., "Stiffness of Annular Bonded Rubber Flanged Bushings," Rubber Chemistry and Technology, Vol. 79, No. 2, 2006, pp. 233-248. C.W. de Silva, 2006, Vibration Fundamentals and Practice, 2nd ed., CRC Press, Boca Raton, Florida. Mathworks, 2014, "MATLAB R2014b Documentation," Retrieved April 20, 2014 from http://www.mathworks.com/help/matlab/math/fast-fourier-transform-fft.html. P. Duhamel, 1990, "Fast Fourier Transforms: A Tutorial Review and State of the Art," Signal Processing, 19(4), pp. 259-299. A. Brandt, 2011 Noise and Vibration Analysis: Signal Analysis and Experimental Procedures, John Wiley & Sons Inc., New York. O. Cakar, K.Y. Sanliturk, 2005, "Elimination of Transducer Mass Loading Effects from Frequency Response Functions," Mechanical Systems and Signal Processing, 19(1), pp. 87-104. J. Crowley, A. Klosterman, G. Rocklin, V. Havard, 1984, "Direct Structural Modification using Frequency Response Functions," Proceedings of the 2nd International Modal Analysis Conference, Society for Experimental Mechanics, Orlando, Florida, pp. 66-70. P. Avitable, J. O'Callahan, 2003, "Frequency Response Function Expansion for Unmeasured Translation and Rotation DOFS for Impedance Modeling Applications," Mechanical Systems and Signal Processing, 17(4), pp. 723-745.

244

